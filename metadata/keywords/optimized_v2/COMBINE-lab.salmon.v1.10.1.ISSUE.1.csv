quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Deployability,Now I get some fq data from bd rhapsody platform: https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE212212; ![image](https://github.com/COMBINE-lab/salmon/assets/52995448/8a5b47a4-b041-4a6f-9ba4-3fba21a08028). And it used the sample_tag.fq data to store the sample information. I notice that the bd rhapsody pipeline can generate a sample tag file:; ![image](https://github.com/COMBINE-lab/salmon/assets/52995448/9d1c4031-60c6-446a-982a-8e00f6f031a0). it can tell you which sample the cell from in a single batch:; ![image](https://github.com/COMBINE-lab/salmon/assets/52995448/ab9c2577-6a13-4370-8e93-e3efed574b89). Does alevin also provide flag to handle the tag.fq?. Thank you.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/879:312,pipeline,pipeline,312,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/879,1,['pipeline'],['pipeline']
Deployability,"OS: ubuntu 16.04; Salmon was installed using conda. Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /work/yu_liu/resource/salmon_gencodev28_index/ }; ### [ libType ] => { U }; ### [ unmatedReads ] => { /work/yu_liu/NEPC_david/data_source/Output.Fastqs/HS_1-1_S1_R1_001.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { /scratch/yu_liu/HS_1-1_quant }; Logs will be written to /scratch/yu_liu/HS_1-1_quant/logs; [2018-07-13 20:04:48.086] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-13 20:04:48.086] [jointLog] [info] parsing read library format; [2018-07-13 20:04:48.086] [jointLog] [info] There is 1 library.; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/251:29,install,installed,29,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251,1,['install'],['installed']
Deployability,"On a fresh conda install,. ```; conda create -n slm2 -y -c bioconda salmon; ```; yields a broken salmon:; ```; $ conda activate slm2; (slm2) ggg298-43@farm:~$ salmon; salmon: error while loading shared libraries: libboost_iostreams.so.1.60.0: cannot open shared object file: No such file or directory; ```. This seems to be because I'm missing conda-forge; this:. ```; conda create -n slm3 -y -c conda-forge -c bioconda salmon; conda activate slm3; salmon; ```; works fine!. Nothing needs to be done, and I will update as I debug, but I wanted to put this here for google bait.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/480:17,install,install,17,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/480,2,"['install', 'update']","['install', 'update']"
Deployability,"On the system I'm trying to install Salmon 0.4.2 on, downloading from `ftp://` is blocked for security reasons. Therefore, the automagic download the Jellyfish 2.1.3 source tarball fails. I tried adjusting the `CMakeLists.txt` files to use the latest Jellyfish 2.2.3 instead, but this leads to an issue with a Jellyfish include file not being found:. ```; checking whether we are using the GNU C compiler... In file included from /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc(17):; /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/include/merge_files.hpp(21): catastrophic error: cannot open source file ""jellyfish/err.hpp""; #include <jellyfish/err.hpp>; ^. compilation aborted for /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/11:28,install,install,28,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11,2,"['install', 'patch']","['install', 'patch']"
Deployability,"Our lab makes heavy use of Salmon. Its a great tool we use it almost daily. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; While digging through the log files to try and figure out why some of our biologic samples have low mapping rates I discovered a warning. . [2021-06-22 12:39:41.282] [jointLog] [warning] Only 1920342 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2021-06-22 12:39:41.282] [jointLog] [info] Mapping rate = 55.5444%. about half of our samples have over 90% mapping rates. . Any idea what this warning means?. **To Reproduce**; Steps and data to reproduce the behavior:. salmon 1.4.0 ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. $ cat /etc/redhat-release; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skip",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/677:905,release,release,905,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677,4,"['install', 'release']","['install', 'installed', 'release']"
Deployability,"Packed] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromPacked] 20 iterations done. 164630980 characters processed.; [BWTIncConstructFromPacked] 30 iterations done. 233119636 characters processed.; [BWTIncConstructFromPacked] 40 iterations done. 293988548 characters processed.; [BWTIncConstructFromPacked] 50 iterations done. 348084948 characters processed.; [BWTIncConstructFromPacked] 60 iterations done. 396161956 characters processed.; [BWTIncConstructFromPacked] 70 iterations done. 438888868 characters processed.; [BWTIncConstructFromPacked] 80 iterations done. 476860644 characters processed.; [BWTIncConstructFromPacked] 90 iterations done. 510606036 characters processed.; [BWTIncConstructFromPacked] 100 iterations done. 540594980 characters processed.; [BWTIncConstructFromPacked] 110 iterations done. 567245236 characters processed.; [BWTIncConstructFromPacked] 120 iterations done. 590928020 characters processed.; [bwa_index] 279.06 seconds elapse.; [bwa_index] Update BWT... 1.72 sec; [bwa_index] Pack forward-only FASTA... 1.90 sec; [bwa_index] Construct SA from BWT and Occ... 59.56 sec; [2018-06-25 19:34:53.084] [jLog] [info] done building index; ```. Doh, something unexpected from the logs, isn't it?. ```; $ ls -latr ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all; total 8374704; drwx------. 3 mmokrejs mmokrejs 4096 Jun 25 19:25 ..; -rw-r--r--. 1 mmokrejs mmokrejs 36158409 Jun 25 19:26 rsd.bin; -rw-r--r--. 1 mmokrejs mmokrejs 423777 Jun 25 19:26 duplicate_clusters.tsv; -rw-r--r--. 1 mmokrejs mmokrejs 294997212 Jun 25 19:26 txpInfo.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1157068836 Jun 25 19:26 sa.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1779709484 Jun 25 19:29 hash.bin; -rw-r--r--. 1 mmokrejs mmokrejs 75 Jun 25 19:29 refInfo.json; -rw-r--r--. 1 mmokrejs mmokrejs 9816 Jun 25 19:29 quasi_index.log; -rw-r--r--. 1 mmokrejs mmokrejs 666 Jun 25 19:29 header.json; -rw-r--r--. 1 mmokrejs mmokrejs 304768324 Jun 25 19:33",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:15091,Update,Update,15091,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['Update'],['Update']
Deployability,"Presumably in part because of the conda-forge packages, if working from a relatively clean miniconda install:. conda install r-essential; followed by; conda install salmon. causes R to fail to start, throwing the error:; ""/home/timp/miniconda3/lib/R/bin/exec/R: symbol lookup error: /home/timp/miniconda3/lib/R/bin/exec/../../lib/../../libreadline.so.6: undefined symbol: PC"". This seems to be a relatively known ncurses/readline linked bug (https://github.com/conda-forge/rpy2-feedstock/issues/1) - but it seems solved in normal channels. Not sure exactly why it's cropping up here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/147:101,install,install,101,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147,3,['install'],['install']
Deployability,Problem Installing From Source,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/309:8,Install,Installing,8,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309,1,['Install'],['Installing']
Deployability,Problem Installing Salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/778:8,Install,Installing,8,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778,1,['Install'],['Installing']
Deployability,Problem installing salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/936:8,install,installing,8,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936,1,['install'],['installing']
Deployability,"R17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of salmon was used? salmon (1.9.0); alevin-fry (0.8.0) ; * How was salmon installed (compiled, downloaded executable, through bioconda)? Conda install; * Which reference (e.g. transcriptome) was used? Drosophila melanogaster (BDGP6.32 (GCA_000001215.4)); ; **Desktop (please complete the following information):**; - OS: Ubuntu Linux. Thanks in advance for all your help regarding this!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/813:2073,install,installed,2073,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813,2,['install'],"['install', 'installed']"
Deployability,ReadTheDoc not updated for Salmon 1.0.0?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/456:15,update,updated,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/456,1,['update'],['updated']
Deployability,SE=''; COND_INTERNAL_SHA256_TRUE=''; COND_LZMADEC_FALSE='#'; COND_LZMADEC_TRUE=''; COND_LZMAINFO_FALSE='#'; COND_LZMAINFO_TRUE=''; COND_LZMALINKS_FALSE='#'; COND_LZMALINKS_TRUE=''; COND_MAIN_DECODER_FALSE='#'; COND_MAIN_DECODER_TRUE=''; COND_MAIN_ENCODER_FALSE='#'; COND_MAIN_ENCODER_TRUE=''; COND_SCRIPTS_FALSE='#'; COND_SCRIPTS_TRUE=''; COND_SHARED_FALSE=''; COND_SHARED_TRUE=''; COND_SMALL_FALSE=''; COND_SMALL_TRUE='#'; COND_SYMVERS_FALSE=''; COND_SYMVERS_TRUE='#'; COND_THREADS_FALSE=''; COND_THREADS_TRUE=''; COND_W32_FALSE=''; COND_W32_TRUE='#'; COND_XZDEC_FALSE='#'; COND_XZDEC_TRUE=''; COND_XZ_FALSE='#'; COND_XZ_TRUE=''; CPP=''; CPPFLAGS=''; CYGPATH_W='echo'; DEFS=''; DEPDIR='.deps'; DLLTOOL=''; DSYMUTIL=''; DUMPBIN=''; ECHO_C='\c'; ECHO_N=''; ECHO_T=''; EGREP=''; EXEEXT=''; FGREP=''; GETOPT_H=''; GETTEXT_MACRO_VERSION=''; GMSGFMT=''; GMSGFMT_015=''; GREP=''; HAVE_VISIBILITY=''; INSTALL_DATA='${INSTALL} -m 644'; INSTALL_PROGRAM='${INSTALL}'; INSTALL_SCRIPT='${INSTALL}'; INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'; INTLLIBS=''; INTL_MACOSX_LIBS=''; LD=''; LDFLAGS=''; LIBICONV=''; LIBINTL=''; LIBOBJS=''; LIBS=''; LIBTOOL=''; LIPO=''; LN_EXEEXT='$(EXEEXT)'; LN_S='ln -s'; LTLIBICONV=''; LTLIBINTL=''; LTLIBOBJS=''; LT_SYS_LIBRARY_PATH=''; MAKEINFO='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing makeinfo'; MANIFEST_TOOL=''; MKDIR_P='build-aux/install-sh -c -d'; MSGFMT=''; MSGFMT_015=''; MSGMERGE=''; NM=''; NMEDIT=''; OBJDUMP=''; OBJEXT=''; OTOOL64=''; OTOOL=''; PACKAGE='xz'; PACKAGE_BUGREPORT='lasse.collin@tukaani.org'; PACKAGE_NAME='XZ Utils'; PACKAGE_STRING='XZ Utils 5.2.2'; PACKAGE_TARNAME='xz'; PACKAGE_URL='http://tukaani.org/xz/'; PACKAGE_VERSION='5.2.2'; PATH_SEPARATOR=':'; POSIX_SHELL='/bin/sh'; POSUB=''; PREFERABLY_POSIX_SHELL='/bin/sh'; PTHREAD_CC=''; PTHREAD_CFLAGS=''; PTHREAD_LIBS=''; RANLIB=''; RC=''; SED=''; SET_MAKE=''; SHELL='/bin/sh'; STRIP=''; USE_NLS=''; VERSION='5.2.2'; XGETTEXT=''; XGETTEXT_015=''; XGETTEXT_EXT,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:13042,INSTALL,INSTALL,13042,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,3,['INSTALL'],['INSTALL']
Deployability,"SRR898/009/SRR8985039/SRR8985039_1.fastq.gz	ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR898/009/SRR8985039/SRR8985039_2.fastq.gz; ```; (renamed to cdna*.fastq.gz and barcodes.fastq.gz internal to workflow). * Which which program options were used?. ```; # Do a pre-run to derive a starting whitelist, see https://github.com/COMBINE-lab/salmon/issues/362. salmon alevin -l ISR -1 $(ls barcodes*.fastq.gz | tr '\n' ' ') -2 $(ls cdna*.fastq.gz | tr '\n' ' ') --chromium -i salmon_index -p 12 -o SAMN11526602_pre --tgMap transcript_to_gene.txt --dumpFeatures --noQuant. # Derive a relaxed whitelist, removing only the most obvious junk . if [ $? -eq 0 ]; then ; awk '{ if ($2 > 10) { print $1} }' SAMN11526602_pre/alevin/raw_cb_frequency.txt > pre_whitelist.txt; fi. # Supply the whitelist to the main Alevin run. salmon alevin -l ISR -1 $(ls barcodes*.fastq.gz | tr '\n' ' ') -2 $(ls cdna*.fastq.gz | tr '\n' ' ') --chromium -i salmon_index -p 12 -o SAMN11526602_tmp --tgMap transcript_to_gene.txt --whitelist pre_whitelist.txt --forceCells $(cat pre_whitelist.txt | wc -l | tr -d '\n') --dumpMtx; ```. **Expected behavior**; MTX files without references to out-of-range columns. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ```; Linux hx-noah-63-15.ebi.ac.uk 3.10.0-693.5.2.el7.x86_64 #1 SMP Fri Oct 13 10:46:25 EDT 2017 x86_64 GNU/Linux. LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 7.4 (Maipo); Release:	7.4; Codename:	Maipo; ```. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/431:3997,release,release,3997,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/431,2,"['Release', 'release']","['Release', 'release']"
Deployability,Salmon 1.1.0 auto update check stalled,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/486:18,update,update,18,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/486,1,['update'],['update']
Deployability,Salmon homebrew install broken,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/142:16,install,install,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/142,1,['install'],['install']
Deployability,Salmon in MetaWrap needs to be updated,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/423:31,update,updated,31,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/423,1,['update'],['updated']
Deployability,Salmon installation error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/551:7,install,installation,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551,1,['install'],['installation']
Deployability,Salmon installation problem,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/915:7,install,installation,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/915,1,['install'],['installation']
Deployability,"Salmon version: 0.13.1 (installed via pre-compiled binary). I used salmon to quantify some samples and wanted to use the `quantmerge` command to produce a combined table. However, the merged table I got as output only contained 17 lines (of 52228 in the quant.genes.sf files). I was able to identify that the problem was related somehow to the ""Name"" column itself, although I didn't find any obvious pattern for failure. For example, if I rename all the genes to simply ""1"", ""2"", ... and then `quantmerge`, I get a properly combined table with all samples/genes. Looking back at the ""original"" data with the gene names, I find that the truncated merged table consistently/always truncates immediately *after* processing some gene names. For example, the 16th gene name in my ""quant.genes.sf"" table happens to be ""Erdr1"". If this line is moved to the top of that file, then the merged table will truncate at 2 (the header counting for one of those, obviously). Unfortunately, it's not just ""Erdr1"". If that line is moved to the end of the file, or deleted entirely, there is another failure at gene ""Gm28674"", which happens to be the 19th gene. And so on for a very large number of names (I gave up after removing ~30 one at a time). I've now tested with a few different samples and with a number of randomly selected subsets of the original quant files and the behavior is consistent. I can't figure out what the pattern is, but ""Erdr1"", ""Gm28674"", and all the other genes I discovered with my ad-hoc process above, always cause `quantmerge` to truncate the output.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/356:24,install,installed,24,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/356,1,['install'],['installed']
Deployability,Salom 0.9.1 gives errors when configuring and doesn't find installed libraries,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/181:59,install,installed,59,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181,1,['install'],['installed']
Deployability,Segmentation fault in bioconda installation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/268:31,install,installation,31,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268,1,['install'],['installation']
Deployability,Seurat parser outdated and needs an EDS based update,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/436:46,update,update,46,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/436,1,['update'],['update']
Deployability,"TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB V",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:2571,install,installed,2571,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,1,['install'],['installed']
Deployability,"Thank you for this wonderful pipeline. I have some human bulk RNAseq samples that were aligned in STAR against the genome with the soft-masked primary assembly (Homo_sapiens.GRCh38.dna_sm.primary_assembly.fa). . I want to run Salmon with the full genome decoy to compare, and would like to use the same reference files for consistency. Does Salmon (like STAR) ignore the lower case for these sequences? Or since its the decoy, does it make a big difference?. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/934:29,pipeline,pipeline,29,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/934,1,['pipeline'],['pipeline']
Deployability,"Thanks for nice tool!. I performed alevin with 10X Chromium (v3) data and it seems to be nice result. By the way, I followed the Alevin-Tutorial and Ipython Notebook as below,; but generating txp2gene.tsv took some time.; https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/; https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001. Especially, bioawk is not installed in any machine by default, and also just copy & past of the bioawk code could not run in my machine. For the above reason, I would like to suggest an alternative code to process this task. For example, I modified the code by using only grep, awk, sed, and uniq as below.; Is this also okay?. ```; wget -P data ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_32/gencode.v32.primary_assembly.annotation.gtf.gz; gunzip -c data/gencode.v32.primary_assembly.annotation.gtf.gz | grep transcript | awk '{print $12,$10}' | sed -e 's|""||g' -e 's|;||g' | uniq > data/txp2gene.tsv; ```. Otherwise, I appreciate it if you could support this task by implementing the subcommand of salmon as bellow. ```; salmon t2g [GTFfile]; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/467:381,install,installed,381,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/467,1,['install'],['installed']
Deployability,"The ""effective"" mapping rate is the true mapping rate that is used e.g. in the TPM / estimated number of reads calculations. The overall mapping rate, in addition to being poorly named, is a historical artifact. The proposal here (which should be implemented in the next release) is to report only a single ""mapping rate"" (which will be equal to what is currently the ""effective"" mapping rate), that represents the quantities used in comping the TPM and estimated number of reads columns.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/14:271,release,release,271,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/14,1,['release'],['release']
Deployability,"The answer here could simply be 'no' 😄 but as this question came up recently for me, and it is one I've seen mentioned on the `nf-core/scrna` slack, I figured I'd raise it here to get your thoughts. . There is a standard CellRanger workflow for the 10x V(D)J approach (https://support.10xgenomics.com/single-cell-vdj/software/pipelines/latest/using/vdj). Is this something remotely achievable with `alevin/alevin-fry`? It would be great for those who have matched 10x scRNA-seq to be able to process everything with the same package!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/861:326,pipeline,pipelines,326,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/861,1,['pipeline'],['pipelines']
Deployability,The git clone doesn't work. ```; git clone git@github.com:COMBINE-lab/salmon.git; cd salmon; mkdir build; cd build; cmake ..; make install; ```. This should work:; ```; git clone https://github.com/COMBINE-lab/salmon.git; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/244:131,install,install,131,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/244,1,['install'],['install']
Deployability,"The jellyfish is installed in a non standard place. How to tell cmake where jellyfish is installed?. I tried the ""-DJELLYFISH_ROOT"" parameter but it didn't work. My best regards.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/225:17,install,installed,17,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/225,2,['install'],['installed']
Deployability,"The soft-clipping feature is improved in this pull request and accurate CIGAR calculation can be done by passing the corresponding user flag to salmon. This PR uses a new version of pufferfish repository that has these new features implemented. Here's a summary of the changes:; - The soft-clipping can be enabled by `--softclip` flag in the selective-alignment mode of the quant command, same as before. ; - `--softclipOverhangs` flag is deprecated and in this release will have the same effect as `--softclip`.; - Accurate CIGAR calculation can be enabled by the new `--computeCIGAR` flag in the selective-alignment mode of the quant command.; - Another new argument `--maxSoftclipFraction` restricts the fraction of the soft-clipped part of a read. An alignment is reported if and only if `alignment_score >= minScoreFraction * max_alignment_score` where `max_alignment_score = match_score * (read_length – softclip_length)`. This threshold applies separately to the mates of a paired-end read and the soft-clip length on a mate will not affect the maximum allowed soft-clip length on the other mate. ; - If the total length of the soft-clipped regions on a read (in the beginning and the end of the read) is greater than maxSoftclipFraction * read_length, another chance will be given to the read to be aligned end-to-end. If the end-to-end alignment is acceptable based on its score, it will be reported. ; - The new `--endBonus` argument specifies how strict the soft-clipping decisions are made in the program. It specifies the extra bonus score that is added to the end-to-end alignment score, when the alignment reaches the end of query. The larger this value is set, the more likely that soft-clipping is not reported as part of the alignment of a particular query because getting to the end of the query would be preferred. . ** Note that pufferfish library is installed from a branch at the moment and it should be set to the new version of pufferfish once it is released.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/692:462,release,release,462,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/692,3,"['install', 'release']","['installed', 'release', 'released']"
Deployability,"There has been a small amount of discussion about the BD Rhapsody barcode / sequence format (e.g. see [here](https://github.com/COMBINE-lab/salmon/issues/445#issuecomment-551083490)), but it would be great if the option could be integrated into the code. BD has produced a [Single Cell Genomics Bioinformatics Handbook](https://www.bd.com/documents/guides/user-guides/GMX_BD-Rhapsody-genomics-informatics_UG_EN.pdf) which has the following information about the R1 read structure on pg 14:. 5' CLS1 - L1 - CLS2 - L2 - CLS3 - UMI - poly(T); 9 12 9 13 9 8 18; [1-9] [22-30] [44-52][53-60]. > **Cell Label** Information of the cell label is captured by bases in three sections (CLS1, CLS2, CLS3) along each R1 read. Two common sequences (L1, L2) separate the three CLSs, and the presence of L1 and L2 relates to the way the capture oligonucleotide probes on the beads are constructed. By design, each CLS has one of 96 predefined sequences, which has a Hamming distance of at least four bases and an edit distance of at least two bases apart. A cell label is defined by the unique combination of predefined sequences in the three CLSs. Thus, the maximum possible number of cell labels is 96^3 (884,736). A cell label is represented by an index between 1–96^3. > Reads are first checked for perfect matches in all three pre-designed CLS sequences at the expected locations, CLS1:; position 1–9, CLS2: position 22–30, and CLS3: position 44–52. Reads with perfect matches are kept. In other words...; - Concatenate subsequences 1-9, 22-30, and 44-52 to form a 27-base cell label; - Extract subsequence 53-60 as the UMI . > **UMI** By design, the UMI is a string of eight randomers immediately downstream of CLS3. If the CLSs have perfect matches or base substitutions, the UMI sequence is at position 53–60. For reads with insertions or deletions within the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/628:229,integrat,integrated,229,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628,1,['integrat'],['integrated']
Deployability,"There's been some issues with compiling salmon on macOS for some time now (see also https://github.com/brewsci/homebrew-bio/pull/528). In the current version, I was running into two compile errors on macOS:. 1) problems with staden & Clang; 2) problems with linking to boost static libraries. I could fix (1) by installing staden separately and then using that install in salmon. I've included the respective Find***.cmake files. (2) is an easy fix by modifying the `CMakeLists.txt`. Is there any particular preference for using static libraries? This is a rather small patch and could be done in a Homebrew formula, if you prefer static boost libraries. Otherwise, this PR are just suggestions. If you have changes that better conform to you style, that's fine by me. Thanks,; Gabriel",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/348:312,install,installing,312,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/348,3,"['install', 'patch']","['install', 'installing', 'patch']"
Deployability,"This PR introduces a new feature that will allow users to specify custom single cell protocols and use with alevin. Custom Geometry (--custom-geo) should be used when:; 1. Barcode or umi have variable lengths; 2. There is known fixed sequence in the reads; 3. There is some sequence to be excluded; From the input peglib spec it creates a regex. Boost regex library is used to parse the reads. Apart from small tests on multiple outlier cases, it was tested on a sci-RNA-seq3 sample SRR7827207 for speed. For this the spec is `--custom-geo 1{b[9-10]f[CAGAGC]u[8]b[10]}2{r}`. It says:; - Read 1 starts with barcode of variable length 9-10 bp, followed by; - A fixed sequence CAGAGC, then; - A umi of length 8, and lastly; - barcode of length 10.; - The second read is all biological. The barcodes are concatenated in the output and a padding sequence is added to make the length as max length + 1. The extra base is added so that we don't introduce spurious matches in barcode. For example, if the barcodes have length 3-4 bp and the two barcodes are `ATG` and `ATGA`, after padding they will be `ATGAC` and `ATGAA` resp. Adding just `A` to shorter barcode would result in a spurious match. . Since `--custom-geo` uses regex, it is slower than protocol specific flag. The time with 8 threads on a large Ubuntu 20 machine:. 1. Using `--sciseq3`:; ```; real 1m0.425s; user 7m21.501s; sys 0m2.964s; ```; 2. Using `--custom-geo`; ```; real 1m39.887s; user 11m55.602s; sys 0m6.839s; ```; Notably, it is about 66% slower. However, it allows support for almost all current and future protocols. . There will be a tutorial shortly on how and when to use this and how is it different from other flags such as `--umi-geometry`, `--read-geometry` and `--bc-geomtery`. There is scope of speed improvement in the future along with integration of all custom geometry processing protocols.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/734:1817,integrat,integration,1817,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/734,1,['integrat'],['integration']
Deployability,"This PR is related to https://github.com/COMBINE-lab/salmon/pull/276#issue-210022241 . It is to add lintcheck for cmake files. ## How to use. ```; $ pip3 install cmakelint. $ which cmakelint; /path/to/cmakelint. $ ./scripts/lint.sh; ```. Every CMakeLists.txt or *.cmake file in this repository is target for the check.; Right now I only modified `./CMakeLists.txt` to show for the example, and changed the permission of the executable bit file. Maybe the executable bit is not necessary.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/293:154,install,install,154,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/293,1,['install'],['install']
Deployability,This PR updates the version of stadenio_libs and htscodecs.; These versions introduce changes that make them more amenable to be compiled for ARM.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/916:8,update,updates,8,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/916,1,['update'],['updates']
Deployability,"This bug is primarily related to salmon (bulk mode). **Describe the bug**; I followed your instructions to create a `mm10` indexed transcriptome with decoys, but I encounter a weird error called:. ```; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **To Reproduce**. First install `salmon` and `mashmap` (`awk` and `bedtools` are already installed).; ```; conda create -n salmon salmon; conda activate salmon; conda install -c bioconda mashmap; ```. ```; salmon -v; salmon 1.6.0; ```; Download transcriptome from ensembl:; ````; mkdir /no_backup/transcriptome_seqs; cd transcriptome_seqs; wget http://ftp.ensembl.org/pub/release-102/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; # Rename the file to make more sense for my in the future; mv Mus_musculus.GRCm38.cdna.all.fa.gz Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz; ````. Build a *decoy-aware* transcriptome file as recommended:; download script with:; ```; wget https://raw.githubusercontent.com/COMBINE-lab/SalmonTools/master/scripts/generateDecoyTranscriptome.sh; ```; Run with:; ```; ./generateDecoyTranscriptome.sh \; -a /no_backup/genome_annots/Mus_musculus_ENSEMBL_v_102_GRCm38.gtf \; -g /no_backup/genome_seqs/Mmu10_gDNA.fasta \; -t /no_backup/transcriptome_seqs/Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz \; -o /no_backup/indexes/salmon/mm10; ```; It takes a bit to finish and once done I can do:. List the fasta headers of the decoy sequences; ```; head decoys.txt ; GL456210.1; chrX; chrY; GL456221.1; JH584304.1; ```. While this shows the the new hybrid (genome + transcriptome) fasta file which contains the decoy sequences from the genome, concatenated with the transcriptome (`gentrome.fa`) for a total of 119414 sequences.; ```; zcat gentrome.fa | grep ""^>"" | wc -l; gzip: gentrome.fa: decompression OK, trailing garbage ignored; 119414; ```. To create a salmon index do the following:; ```; salmon index \; -t /no_backup/indexes/salmon/mm10/gentrome.fa \; -i /no_backup/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731:307,install,install,307,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731,4,"['install', 'release']","['install', 'installed', 'release-']"
Deployability,This commit uses multi-stage builds to minimize the Docker image size.; The uncompressed size is down to 101 MB from 1.38 GB. The second ; stage of the build begins with a fresh ubuntu:18.04 image and copies in; the compiled salmon binaries. It also installs one system library that; is linked by one of the salmon shared libraries.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/771:250,install,installs,250,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/771,1,['install'],['installs']
Deployability,"This is an installation problem. I am getting a link-time error building Salmon 1.0.0 with GCC 7.3.0 and CMake 3.12.1. The error occurs immediately after ""[100%] Linking CXX executable salmon"". The OS is RHEL6. Here's the output:. ```; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::allocator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger, std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; ```. Googling this error implies an issue with the code, not a missing library.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/455:11,install,installation,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455,1,['install'],['installation']
Deployability,"This is concerned with alevin, using a cite-seq like method with a different UMI barcode length. I believe this is similar to #531. running the command like this:. ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass \; --citeseq; ```; Produces the error `ERROR: Please specify one and only one scRNA protocol;`. whereas removing the `--citeseq` argument like this:; ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass; ```; Produces the error `[alevinLog] [critical] Transcript to Gene Map File not provided. Exiting Now.`. This is based on salmon 1.8.0 installed via bioconda on ubuntu 18.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/770:904,install,installed,904,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/770,1,['install'],['installed']
Deployability,"This is not exactly a bug, but a comment and a question regarding how Salmon uses the positioning data in fastq files. We had a series a RNASeq samples where the majority of the reads were listed at 0:0 in the fastq file. We think this is some obscure issue with one of the trimming/demultiplexing pipelines. No one noticed, as this data is not generally used, but it did throw an error with rsem. Luckily, this error had been previously [reported](https://groups.google.com/forum/#!topic/rsem-users/qXDCpSbEn6Q). Notably, Salmon using quasi mapping was fine. It was only when I tried again using STAR aligned bam files that I noticed that only those reads not listed at 0:0 were used by Salmon (STAR does not seem to care one way or the other). Obviously, badly formated fastq files do not constitute a bug and we are working on fixing them, but we were curious why the positioning data was being used in alignment mode but not quasi mode. Moreover, why is it being used at all? Is it used to weed out potential artifacts?. Many thanks and happy to share an example file if your are interested.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/101:298,pipeline,pipelines,298,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/101,1,['pipeline'],['pipelines']
Deployability,"This isn't strictly speaking a bug with salmon per-se, but when installing salmon from conda, its impossible to have both R 4.0.3 and Salmon 1.3.0 installed in the same environment (which is frustrating due to the downstream analysis of Salmon data with wasabi/sleuth then requiring a separate environment). The core incompatibility seems to be with the International Components for Unicode package. Salmon requires; ""icu >=64.2,<65.0a0"",; Whereas in one of the R dependencies when installing 4.0.3 in the environment solve the following is specified; ""icu >=67.1,<68.0a0"",. This seems to be the only conflict I could identify.; This seems to be a new incompatibility introduced with R 4.0.3 and Salmon can coexist alongside R 4.0.2 without issue, so this isn't a huge problem but something I thought should probably be on your radar if it isn't already. Output from the conda dry-run as follows: ; [salmon_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619618/salmon_solve.txt); [r-base_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619619/r-base_solve.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/594:64,install,installing,64,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/594,3,['install'],"['installed', 'installing']"
Deployability,"This issue is related to salmon (bulk mode). When running salmon quant, everything seems to run normally until the very end, when there is suddenly ""Segmentation fault (core dumped)"" and then a quant file is not written. Started with --gcBias, then tried with --seqBias, then without either and get the same error. Have run Salmon in the past with no issues. Have updated to the latest version but problem persists. The version is salmon (mapping-based) v0.11.1 and was installed through bioconda.; The command being run is:. ```; salmon quant -i /data2/csijcs/hg38/hg38.transcriptome.index -l A \; -1 ${dir}/${samp}/${samp}_R1_001.fastq.gz \; -2 ${dir}/${samp}/${samp}_R2_001.fastq.gz \; -p 16 -o ${dir}/salmon_quants/${samp}; ```. The output is:; ```; Processing sample PBMC_AML_BM_001; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /data2/csijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261:364,update,updated,364,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261,2,"['install', 'update']","['installed', 'updated']"
Deployability,This small patch adds two options to quant merge:; - --genes to force use of quant.genes.sf instead of quant.sf ;; - --missing <arg> to change the default value in case of missing value.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/344:11,patch,patch,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/344,1,['patch'],['patch']
Deployability,"To whom it may concern,. I have been using Salmon to quantify RNA-seq data using a new long-read RNA sequencing-based GTF I have developed. When I run Salmon on RNA-seq samples from TCGA (read length = 50 bp, kmer length = 21), I tend to get ~95% of reads mapping to my transcriptome. However, when I use the same script to run my pipeline on in-house sequenced data (read length = 150 bp, kmer length = 21), I am getting only around 80-85% of reads mapping to my transcriptome. According to STAR, >90% (usually >95%) of these same in-house samples mapped to the genome. Why am I getting lower mapping rates? Could read length have something to do with it? Thanks so much for any advice or guidance you can provide. Script: ; [5_runSalmon.sh.zip](https://github.com/COMBINE-lab/salmon/files/10262688/5_runSalmon.sh.zip); (The only difference between my TCGA and in-house runs are that for TCGA I use ""-i IU"" and for my in-house samples I use ""-i ISR"" due to differences in the strandedness of the prep protocols). Yours most sincerely,; Ryan Englander",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/819:331,pipeline,pipeline,331,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/819,1,['pipeline'],['pipeline']
Deployability,Trying to generate salmon indexes in WSL with Ubuntu 22.04.01 LTS either hangs after the contig count for validation step or throws a segmentation fault. . Using Salmon 1.9 installed through bioconda; Custom annotation of S. cerevisiae R64-3-1 downloaded from SGD. The whole genome was appended as a decoy,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/829:173,install,installed,173,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/829,1,['install'],['installed']
Deployability,"URE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as well. Kind regards, Andreas.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835:2263,release,release,2263,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835,3,"['Continuous', 'Integrat', 'release']","['Continuous', 'Integration', 'release']"
Deployability,"Ubuntu 20.04 LTS, with gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/664:172,release,release,172,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664,2,"['install', 'release']","['install', 'release']"
Deployability,"Untar salmon tarball:; ```; $ tar xzvf Salmon-0.9.1_linux_x86_64.tar.gz; ```; Verify binary file is executable:; ```; $ cd Salmon-latest_linux_x86_64/bin && ls -l; total 25336; -rwxr-xr-x 1 bgarchow staff 12971263 Nov 28 22:30 salmon; ```; Try to run salmon:; ```; bin $ ./salmon -h; -bash: ./salmon: cannot execute binary file: Exec format error; ```. BASH version:; ```; $ bash --version; GNU bash, version 4.4.18(1)-release (x86_64-apple-darwin16.7.0); Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/192:419,release,release,419,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192,1,['release'],['release']
Deployability,Update .travis.yml to add test case easily.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/273:0,Update,Update,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/273,1,['Update'],['Update']
Deployability,Update CMakeLists.txt,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/23:0,Update,Update,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/23,1,['Update'],['Update']
Deployability,Update Ocean Genomics contact,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/623:0,Update,Update,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/623,1,['Update'],['Update']
Deployability,Update README.md,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/63:0,Update,Update,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/63,2,['Update'],['Update']
Deployability,Update alevin.rst,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/257:0,Update,Update,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/257,1,['Update'],['Update']
Deployability,Update library_type.rst,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/35:0,Update,Update,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/35,1,['Update'],['Update']
Deployability,Update salmon in conda,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/622:0,Update,Update,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/622,1,['Update'],['Update']
Deployability,Updated README.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/63:0,Update,Updated,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/63,1,['Update'],['Updated']
Deployability,Updated documentation to explicitly show --chromiumV3 option,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/421:0,Update,Updated,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/421,1,['Update'],['Updated']
Deployability,"Updated error model for ONT reads -- uses a markov model to model mismatches, indels, and homopolymer regions. Kmer size and step size for the markov model are set at 50 in ONTAlignmentModel.hpp, but could be adjusted (50 was found to be the best out of the values of k I tried).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/868:0,Update,Updated,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/868,1,['Update'],['Updated']
Deployability,Updated reference genome causes different transcripts quantification,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/809:0,Update,Updated,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/809,1,['Update'],['Updated']
Deployability,Use installed cereal and stadenio libraries if available.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/348:4,install,installed,4,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/348,1,['install'],['installed']
Deployability,"WTIncConstructFromPacked] 50 iterations done. 348084948 characters processed.; [BWTIncConstructFromPacked] 60 iterations done. 396161956 characters processed.; [BWTIncConstructFromPacked] 70 iterations done. 438888868 characters processed.; [BWTIncConstructFromPacked] 80 iterations done. 476860644 characters processed.; [BWTIncConstructFromPacked] 90 iterations done. 510606036 characters processed.; [BWTIncConstructFromPacked] 100 iterations done. 540594980 characters processed.; [BWTIncConstructFromPacked] 110 iterations done. 567245236 characters processed.; [BWTIncConstructFromPacked] 120 iterations done. 590928020 characters processed.; [bwa_index] 279.06 seconds elapse.; [bwa_index] Update BWT... 1.72 sec; [bwa_index] Pack forward-only FASTA... 1.90 sec; [bwa_index] Construct SA from BWT and Occ... 59.56 sec; [2018-06-25 19:34:53.084] [jLog] [info] done building index; ```. Doh, something unexpected from the logs, isn't it?. ```; $ ls -latr ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all; total 8374704; drwx------. 3 mmokrejs mmokrejs 4096 Jun 25 19:25 ..; -rw-r--r--. 1 mmokrejs mmokrejs 36158409 Jun 25 19:26 rsd.bin; -rw-r--r--. 1 mmokrejs mmokrejs 423777 Jun 25 19:26 duplicate_clusters.tsv; -rw-r--r--. 1 mmokrejs mmokrejs 294997212 Jun 25 19:26 txpInfo.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1157068836 Jun 25 19:26 sa.bin; -rw-r--r--. 1 mmokrejs mmokrejs 1779709484 Jun 25 19:29 hash.bin; -rw-r--r--. 1 mmokrejs mmokrejs 75 Jun 25 19:29 refInfo.json; -rw-r--r--. 1 mmokrejs mmokrejs 9816 Jun 25 19:29 quasi_index.log; -rw-r--r--. 1 mmokrejs mmokrejs 666 Jun 25 19:29 header.json; -rw-r--r--. 1 mmokrejs mmokrejs 304768324 Jun 25 19:33 bwaidx.bwt; -rw-r--r--. 1 mmokrejs mmokrejs 76192062 Jun 25 19:33 bwaidx.pac; -rw-r--r--. 1 mmokrejs mmokrejs 50007825 Jun 25 19:33 bwaidx.ann; -rw-r--r--. 1 mmokrejs mmokrejs 89 Jun 25 19:33 bwaidx.amb; drwxr-xr-x. 2 mmokrejs mmokrejs 4096 Jun 25 19:34 .; -rw-r--r--. 1 mmokrejs mmokrejs 95 Jun 25 19:3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:15374,release,release-,15374,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['release'],['release-']
Deployability,"We have a partly assembled genome with some almost identical gene modes which can be either allele or paralogs. Usually there are only a few nuclear tide differences between them. We expected Salmon return similar expression levels for these similar genes. However, it came out one gene had normal counts(in my case it was roughly 12,000 mapping reads) and another gene got zero in mapping read counts. I guess Salmon re-assigned read counts between highly similarly genes based on estimated mapping quality. In addition, the same gene model would get significantly different counts across runs due to the re-assignment, which made thing worse. I also tested RSEM and found the similar problem. I noticed the RSEM set the column #5 (mapping quality) in BAM from upstream mapping pipeline which might be reason for this issue. The third software I tried is eXpress which assigns mapping counts evenly between similar genes. . My suggestion is to allow users to switch off the re-assignment between similar genes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/107:779,pipeline,pipeline,779,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/107,1,['pipeline'],['pipeline']
Deployability,We just discovered that Salmon build removes/collapses identical transcripts. This is very problematic that Salmon does this as many genes are duplicated throughout the genome. By concatenating them in the build index one of these is arbitrary selected (the others removed) meaning all downstream analysis will assume all expression originate from one genomic region instead of many. In the most r[ecent Gencode mouse release](https://www.gencodegenes.org/mouse_releases/current.html) this problem affects 1563 sequences annotated as 13812 and covers all transcript types (incl 840 protein coding - although the major once are lincRNA (n=3658) and snoRNAs (n=2622)). We strongly believe that if one want to analyse these duplicated regions jointly this should be done just like one would sum all transcripts from a particular gene to get the gene expression.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/214:418,release,release,418,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214,1,['release'],['release']
Deployability,"We tried to run salmon with broken linked files (as in, we accidently linked to the wrong directory). This led to salmon getting to the kmer counting stage and then permanently pausing there (see output below). You can see a version of the broken protocol here: https://github.com/ngs-docs/2017-ucsc-metagenomics/blob/cd417dc4b384b668eda2a477fd805ebb3b30cd00/salmon_tutorial.rst. So, it would be nice if salmon could compensate for this misstep on our part and notify us if a broken linked file is given as input, rather than just pausing. . `tx160085@js-104-35:~/Salmon-0.7.2_linux_x86_64/data$ salmon index -t metagG.ffn -i transcript_index -; -type quasi -k 31; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; index [""transcript_index""] did not previously exist . . . creating it; [2017-04-23 17:02:32.614] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers`. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/134:805,release,releases,805,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/134,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,"We use Salmon a lot in my lab. It's a great tool. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I am running salmon quant using dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"", i.e. salmon (selective-alignment-based) v1.4.0. **Describe the bug**; When I run salmon I exits with an error code of 137. any idea what this means? I also noticed that the output directory is not created. **To Reproduce**; I am running the container on app.terra.bio, unfortunately, I can not share the workspace because the data is from identifiable human subjects. Bellow, I include the log file showing how I ran salmon. I think the bug may have something to do with the run time environment. Know what salmon exit codes mean would really help me figure out where my bug is. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"",; * Which reference (e.g. transcriptome) was used?; we have a custom reference based on g35. ; * Which read files were used?; * Which which program options were used?; * . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:934,install,installed,934,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['install'],['installed']
Deployability,"We were given some test data - ~400,000 150 PE on two samples from a MiSeq run on a mosquito. They wanted to know recommended sequencing depth and whether they needed 150 PE or if they could get away with 100 SE. There is a decent-ish genome and transcriptome for the species (https://www.ncbi.nlm.nih.gov/genome/?term=aedes+albopictus), so we ran the 150 PE and artificially created 100 SE from R1 through our pipeline, which includes STAR plus Salmon. The STAR results were expected: 100 SE had ~40% mulitmapping / ~48% unique in genes and 150 BP improved to ~30% multimapping / ~57% unique in genes. Surprisingly, Salmon showed the opposite: 100 SE had a ~70% mapping rate while 150 PE has only a ~57% mapping rate. . We thought at first that Salmon maybe wasn't counting fragments if both ends didn't map but the answer in issue #31 says Salmon should be counting single-end mapped towards quantification. The first line in the salmon_quant.log file says ""Fragment incompatibility prior below threshold. Incompatible fragments will be ignored."" I couldn't find much in salmon quant --help-reads about fragment priors and then I found it was in pretty much all salmon_quant.logs we have, so that may not be the problem. We also thought the trouble may have something to do with the small number of fragments, so we ran through some mouse 150 PE + artificial 100 SE, that had 40M reads and also subsampled to 400K reads, but the salmon mapping rates were pretty much the same (~75%) regardless of type/length of reads or sequencing depth. So what do you think could be going on? I am worried that Salmon's ""better"" mapping percentage of 100 SE is not accurately measuring expression. We didn't test 150 SE because that is not a sequencing option with NovaSeq, but we could try it if you think it would help to figure out what is going on. Thanks,; Jenny",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/349:411,pipeline,pipeline,411,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/349,1,['pipeline'],['pipeline']
Deployability,"Whenever I run any command with latest official docker image of salmon, as an example:; ```; docker run combinelab/salmon:latest salmon swim; ```; I get; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/277:191,upgrade,upgrade,191,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277,2,['upgrade'],"['upgrade', 'upgrades']"
Deployability,While Bioconda is working on resolving the issue for osx deployment of salmon (>v10.2). the following binary can be used for osx based testing of Salmon/Alevin. Note: The code has been compiled on Osx High Sierra (v 10.13.2) and can potentially create problem with other versions of osx.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/260:57,deploy,deployment,57,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260,1,['deploy'],['deployment']
Deployability,"Why is salmon using a fork of jemalloc instead of the official release from the jemalloc project?. From CMakeLists.txt:; ```; DOWNLOAD_COMMAND curl -k -L https://github.com/COMBINE-lab/jemalloc/arch; ive/5.1.0.tar.gz -o jemalloc-5.1.0.tar.gz; ```; This seems to potentially conflict with; ` find_package(Jemalloc)`; which might locate an installation from a different build.; I want to ensure a consistent installation across all of our systems, whether or not jemalloc has been installed separately.; Thanks,; Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/288:63,release,release,63,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288,4,"['install', 'release']","['installation', 'installed', 'release']"
Deployability,"[2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_64 x86_64 x86_64 GNU/Linux`; `$ lsb_release -a; LSB Version:	core-2.0-noarch:core-3.2-noarch:core-4.0-noarch:core-2.0-x86_64:core-3.2-x86_64:core-4.0-x86_64:desktop-4.0-amd64:desktop-4.0-noarch:graphics-2.0-amd64:graphics-2.0-noarch:graphics-3.2-amd64:graphics-3.2-noarch:graphics-4.0-amd64:graphics-4.0-noarch; Distributor ID:	SUSE LINUX; Description:	SUSE Linux Enterprise Server 11 (x86_64); Release:	11; Codename:	n/a`. **Additional context**; I included a 10K subset of reads in the tarball, which leads to the same behavior by Alevin.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:6555,Release,Release,6555,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['Release'],['Release']
Deployability,[CI-SKIP] Update .lgtm.yml,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/470:10,Update,Update,10,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/470,1,['Update'],['Update']
Deployability,"_data}/ref/transcriptome/transcriptome_splici_fl86.fa""; output:; ""{out_data}/ref/idx/complete_ref_lens.bin"",; ""{out_data}/ref/idx/ctable.bin"",; ""{out_data}/ref/idx/ctg_offsets.bin"",; ""{out_data}/ref/idx/duplicate_clusters.tsv"",; ""{out_data}/ref/idx/info.json"",; ""{out_data}/ref/idx/mphf.bin"",; ""{out_data}/ref/idx/pos.bin"",; ""{out_data}/ref/idx/pre_indexing.log"",; ""{out_data}/ref/idx/rank.bin"",; ""{out_data}/ref/idx/refAccumLengths.bin"",; ""{out_data}/ref/idx/ref_indexing.log"",; ""{out_data}/ref/idx/reflengths.bin"",; ""{out_data}/ref/idx/refseq.bin"",; ""{out_data}/ref/idx/seq.bin"",; ""{out_data}/ref/idx/versionInfo.json""; params:; job_name = ""build_idx"",; memory = ""select[mem>64] rusage[mem=64]"",; out_dir = ""{out_data}/ref/idx""; log:; ""logs/build_idx.out""; threads:; 16; shell:; """"""; salmon index \; -t {input.fasta} \; -i {params.out_dir} \; -p {threads}; """"""; ```. Running this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""; output:; ""{out_data}/{sample}/map/alevin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_coun",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:2928,pipeline,pipeline,2928,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['pipeline'],['pipeline']
Deployability,"`Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffread to generate a new transcriptome fasta as follows:; `gffread -w salmon_fix.fa -g chm13v2.0.fa chm13v2.0_RefSeq_Liftoff_v5.1.gff3`. I reran the above salmon command using this new fasta file, but got the same error and warnings: there are transcripts in the BAM not in the fasta and vice versa. Again, the ""transcripts"" not in the fasta were chromosome names. I also tried with the short read SAM files, and still got the same error. I'm not sure how to fix either the warnings or the errors and would really appreciate your help. ### Software information; I used salmon v1.10.0 (though I also tried v1.10.1). In the case of v1.10.0, I had downloaded the pre-compiled binary, and in the case of v1.10.1, the admins of the HPC cluster I used installed it- not sure how. Regardless, all the runs were on HPC clusters, which run on Linux CentOS (I use two different HPC clusters, depending on their availability). Cluster1:; ```; $ uname -a; Linux rescomp1.hpc.in.bmrc.ox.ac.uk 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; -bash: lsb_release: command not found; ```. Cluster2:; ```; $ uname -a; Linux htc-login02 4.18.0-348.7.1.el8_5.x86_64 #1 SMP Wed Dec 22 13:25:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 8.5.2111; Release: 8.5.2111; Codename: n/a; ```. Please let me know if I need to provide any more information. Thank you so much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/863:2742,install,installed,2742,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863,3,"['Release', 'install', 'release']","['Release', 'installed', 'release']"
Deployability,"`salmon` is found from `bioconda` but ... ```; $ conda search salmon; Loading channels: done; # Name Version Build Channel; salmon 0.5.1 0 bioconda; salmon 0.6.0 0 bioconda; salmon 0.6.0 1 bioconda; salmon 0.6.0 boost1.60_1 bioconda; salmon 0.6.0 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_3 bioconda; salmon 0.7.2 boost1.61_3 bioconda; salmon 0.8.0 boost1.60_0 bioconda; salmon 0.8.0 boost1.61_0 bioconda; salmon 0.8.1 0 bioconda; salmon 0.8.2 0 bioconda; salmon 0.8.2 1 bioconda; salmon 0.9.0 0 bioconda; salmon 0.9.1 0 bioconda; salmon 0.9.1 1 bioconda; salmon 0.10.0 1 bioconda; salmon 0.10.1 1 bioconda; salmon 0.10.2 1 bioconda; salmon 0.11.0 h445c947_0 bioconda; salmon 0.11.1 h445c947_0 bioconda; salmon 0.11.2 h445c947_0 bioconda; salmon 0.11.3 h86b0361_1 bioconda; salmon 0.11.3 h86b0361_2 bioconda; ```. When I try to install, I get `PackageNotFoundError`.; ```; $ conda create -n salmon salmon=0.11.3; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon=0.11.3; - jemalloc[version='>=5.1.0']; - salmon=0.11.3; - libcxx. Current channels:. - https://conda.anaconda.org/bioconda/linux-64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/free/linux-64; - https://repo.anaconda.com/pkgs/free/noarch; - https://repo.anaconda.com/pkgs/r/linux-64; - https://repo.anaconda.com/pkgs/r/noarch; - https://repo.anaconda.com/pkgs/pro/linux-64; - https://repo.anaconda.com/pkgs/pro/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. It is weird because I am installing on `linux64`.; ```; $ lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/308:866,install,install,866,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/308,1,['install'],['install']
Deployability,"a and with the same ""salmon quant"" command (See below) that works on the old version, I get a ""segmentation fault 11"" error and it never actually quantifies any reads. Do you know why this would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:1311,upgrade,upgrades,1311,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,1,['upgrade'],['upgrades']
Deployability,"above snakemake rule code for program options, which closely follow the options used in the alevin-fry tutorial. **Expected behavior**; A clear and concise description of what you expected to happen. I expected my reads to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ; Output of `uname -a`:; ```; Linux amc-bodhi 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux; ```. Output of `lsb_release -a`:; ```; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.4.1708 (Core) ; Release:	7.4.1708; Codename:	Core; ```. **Additional context**; Add any other context about the problem here. I have attached subsampled fastq files for one of my samples as an example:; [sub_R1.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331798/sub_R1.fastq.gz); [sub_R2.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331799/sub_R2.fastq.gz). This is the error log after attempting to run the map reads step, which indicates an issue with the index build:; [B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331816/B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt). This is the error log after building the index, which seems to have run successfully (though maybe I am missing something):; [build_idx.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331817/build_idx.out.err.txt). This is the versionInfo.json file that is successfully generated after buildi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:6186,release,release,6186,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['release'],['release']
Deployability,"agittal_Anterior_Section_1_S7_L001_R2_001.fastq.gz], [ /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R1_001.fastq.gz, /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R2_001.fastq.gz] ]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 250325422,; ""num_assigned_fragments"": 250325422,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 630613407,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. I used the gzipped fastq files directly from the 10X website, and have tried with different indexes. I am using Salmon-1.9.0. Any idea what could be going wrong? Thanks!. --------; UPDATE; --------. I am unable to reproduce the results of the Spatial Alevin tutorial using the 10X Visium example. I used the same version of Salmon (1.1.0) as the tutorial, same refgenie mouse index, and generated the txp2gene.tsv file as described. Below is my script:. ```bash; #!/bin/bash; #SBATCH --account=carney-afleisc2-condo; #SBATCH -n 16; #SBATCH --mem=64G; #SBATCH -t 48:00:00; #SBATCH -J alevin; #SBATCH -o tutorial-out; #SBATCH -e tutorial-err. salmon alevin -l ISR -i ./salmon_partial_sa_index \; -1 ./V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L001_R1_001.fastq.gz \; ./V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R1_001.fastq.gz \; -2 ./V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L001_R2_001.fastq.gz \; ./V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R2_001.fastq.gz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/827:3007,UPDATE,UPDATE,3007,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/827,1,['UPDATE'],['UPDATE']
Deployability,"al/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<ReadPair*>::internal_push(void const*",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:2719,install,install,2719,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['install'],['install']
Deployability,"am ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:14774,release,release,14774,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['release'],['release']
Deployability,"anager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:2674,install,install,2674,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['install'],['install']
Deployability,"annotate them in the duplicate_clusters.tsv file, so I indexed my reference with the flag --keepDuplicates.; The duplicate_clusters.tsv file is still produced but i don't mind since all the transcripts seem to be in the quant.sf file. If I've understood well from this issue https://github.com/COMBINE-lab/salmon/issues/255, the duplicate transcripts (that belongs to the same cluster obviously) should have the same expression level, am I wrong?; Unfortunately, I see some differences.; Here I'm reporting couples of genes that belong to the same cluster:; ` ENST00000434122.2	613	416.835	163.866448	3639.758`; ` ENST00000439602.6	613	416.835	163.500291	3631.625 `. ` ENST00000409379.7	4502	4305.622	0.143089	32.829 `; ` ENST00000647028.1	4502	4305.622	0.000000	0.000 `. In both cases the differences are minimal, but I wanted to be sure if it is normal to see differences.; I used tximport to calculare the ""per-gene"" expression.; I tried the same pipeline with and without the --keepDuplicates flag, and the tximport output was very different, so I checked the quant.sf file and it was different too, for one transcript without the flag i had 818.439918, the same transcript with the flag was 163.866448, since 818 is more or less 5 times 163 i presume that, by default, the total TPM has been divided by the number of duplicate transcripts (i checked in the duplicate_clusters.tsv file and in total there are 5 transcript in that cluster), am I right? does salmon work like this?; Does it explain the little differences I see in the transcript quantification?; Correct me if I'm wrong, salmon tries to assign the reads as equally as possible to every duplicate transcript, but of course if we have for example 21 reads and 4 transcript, they will have respectively 5,5,5 and 6 reads, which can explain the small differences I see. ; Is it correct?; (anyway, in this way i can explain the first two genes which have respectively a read count of 3639 and 3631, but for the last two genes a differenc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/310:1345,pipeline,pipeline,1345,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/310,1,['pipeline'],['pipeline']
Deployability,"ar='$${TAR-tar} xf -'; ax_pthread_config=''; bindir='${exec_prefix}/bin'; build='arm-apple-darwin22.6.0'; build_alias=''; build_cpu='arm'; build_os='darwin22.6.0'; build_vendor='apple'; datadir='${datarootdir}'; datarootdir='${prefix}/share'; docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'; dvidir='${docdir}'; exec_prefix='NONE'; host='arm-apple-darwin22.6.0'; host_alias=''; host_cpu='arm'; host_os='darwin22.6.0'; host_vendor='apple'; htmldir='${docdir}'; includedir='${prefix}/include'; infodir='${datarootdir}/info'; install_sh='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/install-sh'; libdir='${exec_prefix}/lib'; libexecdir='${exec_prefix}/libexec'; localedir='${datarootdir}/locale'; localstatedir='${prefix}/var'; mandir='${datarootdir}/man'; mkdir_p='$(MKDIR_P)'; oldincludedir='/usr/include'; pdfdir='${docdir}'; prefix='/Users/jeremybono/Downloads/salmon-1.10.1/external/install'; program_transform_name='s,x,x,'; psdir='${docdir}'; sbindir='${exec_prefix}/sbin'; sharedstatedir='${prefix}/com'; sysconfdir='${prefix}/etc'; target_alias=''; xz=''. ## ----------- ##; ## confdefs.h. ##; ## ----------- ##. /* confdefs.h */; #define PACKAGE_NAME ""XZ Utils""; #define PACKAGE_TARNAME ""xz""; #define PACKAGE_VERSION ""5.2.2""; #define PACKAGE_STRING ""XZ Utils 5.2.2""; #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; #define PACKAGE_URL ""http://tukaani.org/xz/""; #define NDEBUG 1; #define HAVE_ENCODER_LZMA1 1; #define HAVE_ENCODER_LZMA2 1; #define HAVE_ENCODER_DELTA 1; #define HAVE_ENCODER_X86 1; #define HAVE_ENCODER_POWERPC 1; #define HAVE_ENCODER_IA64 1; #define HAVE_ENCODER_ARM 1; #define HAVE_ENCODER_ARMTHUMB 1; #define HAVE_ENCODER_SPARC 1; #define HAVE_DECODER_LZMA1 1; #define HAVE_DECODER_LZMA2 1; #define HAVE_DECODER_DELTA 1; #define HAVE_DECODER_X86 1; #define HAVE_DECODER_POWERPC 1; #define HAVE_DECODER_IA64 1; #define HAVE_DECODER_ARM 1; #define HAVE_DECODER_ARMTHUMB 1; #define HAVE_DECODER_SPARC 1; #define HAVE_MF_HC3 1; #define HAVE_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:15430,install,install,15430,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['install'],['install']
Deployability,"ata}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [this](https://github.com/COMBINE-lab/salmon/releases/tag/v1.5.2) binary; * Which reference (e.g. transcriptome) was used? Human reference (GRCh38) (from the alevin-fry tutorial [here](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz)); * Which read files were used? See attached subsampled sub_R1.fastq.gz and sub_R2.fastq.gz from one sample as representative reads.; * Which which program options were used? See above snakemake rule code for program options, which closely follow the options used in the alevin-fry tutorial. **Expected behavior**; A clear and concise description of what you expected to happen. I expected my reads to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:4767,release,releases,4767,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['release'],['releases']
Deployability,"ated to salmon (bulk mode) or alevin (single-cell mode)?**; This is related to salmon. **Describe the bug**; When building Salmon 1.10.3 from source, I'm seeing the following error.; ```; [ 63%] Building CXX object src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o; In file included from /usr/include/pthread.h:33,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr-default.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr.h:148,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ext/atomicity.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/ios_base.h:39,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:1035,install,install,1035,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['install'],['install']
Deployability,"ation of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Us",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:1544,update,updates,1544,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['update'],['updates']
Deployability,"bType"": ""U"",; ""unmatedReads"": ""./single.fastq"",; ""output"": ""./output"",; ""allowOrphansFMD"": [],; ""threads"": ""8"",; ""incompatPrior"": ""1e-20"",; ""biasSpeedSamp"": ""1"",; ""fldMax"": ""1000"",; ""fldMean"": ""200"",; ""fldSD"": ""80"",; ""forgettingFactor"": ""0.65"",; ""maxOcc"": ""200"",; ""maxReadOcc"": ""100"",; ""numBiasSamples"": ""2000000"",; ""numAuxModelSamples"": ""5000000"",; ""numPreAuxModelSamples"": ""1000000"",; ""numGibbsSamples"": ""0"",; ""numBootstraps"": ""0"",; ""vbPrior"": ""0.001"",; ""auxDir"": ""aux_info""; }; ``` . **Expected behavior**; For `salmon quant` to run to completion. **Desktop (please complete the following information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.org/cloudman/), and my installation of Salmon is currently constrained to a conda install. . - I've fiddled with many different CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <sum",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:2024,install,installation,2024,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,2,['install'],"['install', 'installation']"
Deployability,"ber of cell labels is 96^3 (884,736). A cell label is represented by an index between 1–96^3. > Reads are first checked for perfect matches in all three pre-designed CLS sequences at the expected locations, CLS1:; position 1–9, CLS2: position 22–30, and CLS3: position 44–52. Reads with perfect matches are kept. In other words...; - Concatenate subsequences 1-9, 22-30, and 44-52 to form a 27-base cell label; - Extract subsequence 53-60 as the UMI . > **UMI** By design, the UMI is a string of eight randomers immediately downstream of CLS3. If the CLSs have perfect matches or base substitutions, the UMI sequence is at position 53–60. For reads with insertions or deletions within the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a transcript's forward strand, with matches starting within the first five nucleotides (and not match PhiX174). **To Reproduce**. Using Salmon v1.4.0, installed via Debian / apt:. $ salmon alevin -l ISR -1 INDEXLIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/628:2151,install,installed,2151,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628,1,['install'],['installed']
Deployability,bioconda install doesn't work if channels aren't set up correctly,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/480:9,install,install,9,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/480,1,['install'],['install']
Deployability,"bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; is been running like an order of magnitude slower than when I last used it ; **A clear and concise description of what the bug is.**; So I am aligning reads against Arabidopsis Thaliana, using Araport 11 annotation. I usually had 20 M reads aligned within an hour or 2. I am aligning a 46M reads library and it has been running for 20 hours using 4 threads of my humble i5-3210M and is barely on 38.5M, after 20 hours! Index was constructed with default kmer size and no decoys. I have had this problem with other libraries since upgraded from V1.0.0, . **To Reproduce**; I guess just try to align stuff against araport11, this particular problem comes with any fq.gz. It will take hours and hours and hours to align. **Specifically, please provide at least the following information:**. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:965,install,installed,965,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,1,['install'],['installed']
Deployability,"bug**; When building Salmon 1.10.3 from source, I'm seeing the following error.; ```; [ 63%] Building CXX object src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o; In file included from /usr/include/pthread.h:33,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr-default.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr.h:148,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ext/atomicity.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/ios_base.h:39,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:1132,install,install,1132,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['install'],['install']
Deployability,"cessed 283000000 positions^M^Mprocessed 284000000 positions^M^Mprocessed 285000000 positions^M^Mprocessed 286000000 positions^M^Mprocessed 287000000 positions^M^Mprocessed 288000000 positions^M^Mprocessed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 12.6069s; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. It would be more interesting to see what filename is used for the index. Showing the ""basename"" of the index file is not very helpful. I would prefer to see the filename(s) on the beginning and end lines:. ```; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; ...; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. 5. The duplicates have same sequence or ID or both? The message should be clearer. I wonder what are these duplicates in a human cdna predicted, as available from `ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna`; :. ```; [2018-06-25 19:26:07.480] [jointLog] [warning] Removed 11768 transcripts that were sequence duplicates of indexed transcripts.; ```. 6. For the bwa-based index again, the logs are too verbose on one hand and on the second, they do not say what files were created. I doubt any file with *prefix* `Homo_sapiens.GRCh38.cdna.all/bwaidx` was created. ```; + salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type fmd; outputPrefix = ""Homo_sapiens.GRCh38.cdna.all/bwaidx""; [2018-06-25 19:29:02.497] [jLog] [info] building index; [bwa_index] Pack FASTA... 2.87 sec; [bwa_index] Construct BWT for the packed sequence...; [BWTIncCreate] textLength=609536484, availableWord=54888760; [BWTIncConstructFromPacked] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromPacked] 20 iterations done. 164630980 characters processed.; [BWTIncConstructFromPacked] 30 iterations done. 233119636 characters processed.; [BWTIncConstructFromPac",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:13318,release,release-,13318,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['release'],['release-']
Deployability,"cl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-060/job_scripts/9987283: line 31: 1629 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:28883,pipeline,pipeline,28883,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['pipeline'],['pipeline']
Deployability,"clude/c++/13.2.0/ext/atomicity.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/ios_base.h:39,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:1562,install,install,1562,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['install'],['install']
Deployability,"common/modules/el8/x86_64/software/${package}/${pversion}-CentOS-vanilla; THELUA=/usr/common/modules/el8/x86_64/modules/all/${package}/${pversion}-CentOS-vanilla.lua; cd /usr/common/src; git clone -b develop https://github.com/COMBINE-lab/salmon.git; mv ${package} ${package}-${pversion}; cd ${package}-${pversion}; cp CMakeLists.txt CMakeLists.txt.dist; cat >mypatch <<'EOD'; --- CMakeLists.txt.dist	2020-04-21 22:31:07.000000000 -0700; +++ CMakeLists.txt	2020-06-09 14:55:02.733885772 -0700; @@ -419,6 +419,10 @@; find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/541:1123,patch,patch,1123,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541,1,['patch'],['patch']
Deployability,conda installs v 0.8.2 (Mac),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/194:6,install,installs,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194,1,['install'],['installs']
Deployability,constant Version Info: Could not resolve upgrade information in the alotted time.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/277:41,upgrade,upgrade,41,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277,1,['upgrade'],['upgrade']
Deployability,"d counts as well as TPM much faster than any other tool. Can you tell me what is the problem. . Command line used; `salmon index -t /path_to/genome.fa -i salmonquasi-indexes --type quasi -k 31`. Here is the error message while using the Ram-Map. ```; Version Info: This is the most recent version of Salmon.; index [""salmonquasi-indexes""] did not previously exist . . . creating it; [2016-03-17 10:41:34.655] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; Elapsed time: 53.9731s. Replaced 96385738 non-ATCG nucleotides; Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.196609s; Writing sequence data to file . . . done; Elapsed time: 1.56391s; [info] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/49:1611,install,install,1611,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49,1,['install'],['install']
Deployability,"d on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please join the discussion [here](https://github.com/orgs/community/discussions/29534) in the official GitHub community!. #### I have another question / how do I get in touch?; Please join the discussion [here](https://github.com/orgs/community/discussions/29534) to ask further questions and send us suggestions!. </details>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:4365,integrat,integrated,4365,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['integrat'],['integrated']
Deployability,"d using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --va",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:1765,update,updates,1765,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['update'],['updates']
Deployability,"dSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/SalmonQuantMerge.cpp.o CMakeFiles/salmon.dir/ProgramOptionsGenerator.cpp.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/ONTAlignmentModel.cpp.o CMakeFiles/salmon.dir/AlignmentCommon.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o CMakeFiles/salmon.dir/BAMUtils.cpp.o -o salmon -L/vol/mgx-sw/src/tools/salmon/lib -L/vol/mgx-sw/lib -L/vol/mgx-sw/src/tools/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" ../external/pufferfish/src/libpuffer.a libsalmon_core.a ../external/pufferfish/external/twopaco/graphconstructor/libtwopaco.a ../external/pufferfish/external/twopaco/graphdump/libgraphdump.a ../external/pufferfish/external/ntcard/libntcard.a -lgff /usr/lib/x86_64-linux-gnu/libboost_iostreams.a /usr/lib/x86_64-linux-gnu/libboost_filesystem.a /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_timer.a /usr/lib/x86_64-linux-gnu/libboost_chrono.a /usr/lib/x86_64-linux-gnu/libboost_program_options.a /usr/lib/x86_64-linux-gnu/libboost_locale.a ../../external/install/lib/libstaden-read.a /usr/lib/x86_64-linux-gnu/libcurl.a /usr/lib/x86_64-linux-gnu/libz.a -lm /usr/lib/x86_64-linux-gnu/liblzma.a /usr/lib/x86_64-linux-gnu/libbz2.a -lgomp ../external/pufferfish/src/libksw2pp.a libalevin_core.a ../../external/install/lib/libjemalloc.a -ltbbmalloc_proxy -ltbbmalloc -ltbb -lrt -ldl /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/664:2655,install,install,2655,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664,1,['install'],['install']
Deployability,"dex of the C. elegans Wormbase WS265 transcriptome with the following settings:. `salmon index -k 21 -p 24 -t ${txome_reference} -i ${index_path}`. but upon running quant with the following command:. `salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; `. I get a segmentation fault error midway through running:. ```hits: 122146249, hits per frag: 2.10747; processed 58500001 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undecla",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/268:1136,install,installing,1136,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268,1,['install'],['installing']
Deployability,"dif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create -o CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -c /usr/share/cmake-3.7/Modules/CheckFunctionExists.c; Linking C executable cmTC_dd9f2; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dd9f2.dir/link.txt --verbose=1; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -o cmTC_dd9f2 -rdynamic -lpthreads ; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dd9f2.dir/build.make:97: recipe for target 'cmTC_dd9f2' failed; make[1]: *** [cmTC_dd9f2] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dd9f2/fast' failed; make: *** [cmTC_dd9f2/fast] Error 2. ```. Some search on the internet suggests me that sometimes `-lpthread` should be used instead of `-lpthreads`. And indeed, if I try to compile the following code:; ```; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }; ```. I observe a failure with `-lpthreads`:; ```; $ cc -lpthreads /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; ```. And a success with `-lpthread`:. ```; $ cc -lpthread /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; $ ; ```. However, I'm unable to find where I can fix this in the whole configuration and build process.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/207:3572,configurat,configuration,3572,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207,1,['configurat'],['configuration']
Deployability,different TPMs for different releases of ensembl fasta,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/653:29,release,releases,29,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/653,1,['release'],['releases']
Deployability,"e = 0.590918%. ```. and then this after processing the cells:; ```; [2018-07-24 10:56:23.180] [alevinLog] [info] Total 21135 UMI after deduplicating.; [2018-07-24 10:56:23.180] [alevinLog] [warning] Skipped 4 barcodes due to No mapped read; [2018-07-24 10:56:23.213] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-07-24 10:56:23.230] [alevinLog] [info] Starting Import of the gene count matrix.; [2018-07-24 10:56:23.743] [alevinLog] [info] Done Importing gene count matrix for dimension 290x57964; [2018-07-24 10:56:23.743] [alevinLog] [info] Starting dumping cell v gene counts in csv format; [2018-07-24 10:56:29.089] [alevinLog] [info] Finished dumping csv counts; [2018-07-24 10:56:29.089] [alevinLog] [info] Starting white listing; [2018-07-24 10:56:29.090] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2018-07-24 10:56:29.090] [alevinLog] [info] Total 290 barcodes found; [2018-07-24 10:56:29.090] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [info] Starting to make feature Matrix; [2018-07-24 10:56:29.354] [alevinLog] [info] Done making regular featues; [2018-07-24 10:56:29.354] [alevinLog] [info] Done making feature Matrix; [2018-07-24 10:56:29.359] [alevinLog] [info] Finished white listing; [2018-07-24 10:56:29.371] [alevinLog] [info] Finished optimizer; ```. Other info:; Salmon v0.11.0 - downloaded binary from Github; I used Gencode 28 for the transcriptome; read files: https://www.ncbi.nlm.nih.gov/sra/SRX2676721[accn]. OS: CentOS; version: 2.6.32-696.23.1.el6.centos.plus.x86_64; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	CentOS; Description:	CentOS release 6.9 (Final); Release:	6.9; Codename:	Final",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/258:6411,release,release,6411,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258,2,"['Release', 'release']","['Release', 'release']"
Deployability,"e bash script we used to run `salmon` for a 422 sample dataset:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:1526,pipeline,pipeline,1526,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['pipeline'],['pipeline']
Deployability,"e instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/osleve",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:1211,install,install,1211,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['install'],['install']
Deployability,"e upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLog] [info] parsing read library format; [2017-03-08 11:37:32.893] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-051/job_scripts/9987275: line 31: 41232 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}; **** Job ends ****; Wed Mar 8 11:37:36 EST 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:24037,pipeline,pipeline,24037,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['pipeline'],['pipeline']
Deployability,"e:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:4315,install,install,4315,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['install'],['install']
Deployability,eFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../externa,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:1796,install,install,1796,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['install'],['install']
Deployability,"ed 268000000 positions. processed 269000000 positions. processed 270000000 positions. processed 271000000 positions. processed 272000000 positions. processed 273000000 positions. processed 274000000 positions. processed 275000000 positions. processed 276000000 positions. processed 277000000 positions. processed 278000000 positions. processed 279000000 positions. processed 280000000 positions. processed 281000000 positions. processed 282000000 positions. processed 283000000 positions. processed 284000000 positions. processed 285000000 positions. processed 286000000 positions. processed 287000000 positions. processed 288000000 positions. processed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 7.61947s; [2018-08-16 19:47:14.359] [jLog] [info] done building index; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:22961,release,releases,22961,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,"ed in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many paired-end reads would be discordant, which causes counts to look very...odd. See [this preprint](https://www.biorxiv.org/content/10.1101/2022.01.24.477642v1) for more details on that phenomenon. I'm trying to use the decoys as a first step in identifying reads that map to intergenic sequences, where reads might span two coding domain sequences, or land in the intergenic sequences between two coding domain sequenes. (#52). Decoy names: [s__Faecalibacterium_prausnitzii_C_clustered_intergenic_seq_names.txt.gz](https://github.com/COMBINE-lab/salmon/files/8005978/s__Faecalibacterium_prausnitzii_C_clustered_intergenic_seq_names.txt.gz); Transcriptome: [s__Faecalibacterium_prausnitzii_C.fa.gz](https://github.com/COMBINE-lab/salmon/files/8005980/s__Faecalibacterium_prausnitzii_C.fa.gz)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:5097,Release,Release,5097,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['Release'],['Release']
Deployability,"ed more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/304:1863,install,installed,1863,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304,1,['install'],['installed']
Deployability,"eger width = 32; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] seqSize = 2,210,067,304; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] rankSize = 2,210,067,304; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] edgeVecSize = 0; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] num keys = 1,869,461,974; ^M[Building BooPHF] 0.194% elapsed: 0 min 0 sec remaining: 3 min 39 sec^M[Building BooPHF] 0.206% elapsed: 0 min 0 sec remaining: 3 min 33 sec^M[Building BooPHF] 0.394% elapsed: 0 min 1 sec remaining: 2 min 45 sec^M[Building BooPHF] 0.406% elapsed: 0 min 1 sec remaining: 2 min 44 sec^M[Building BooPHF] 0.594% elapsed: 0 min 1 sec remaining: 2 m; psed: 0 min 56 sec remaining: 1 min 16 sec^M[Building BooPHF] 42.4 % elapsed: 0 min 56 sec remaining: 1 min 16 sec^M[Building BooPHF] 42.6 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.6 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.8 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.; salmon index was invoked improperly.; For usage information, try salmon index --help; ````. **To Reproduce**; Steps and data to reproduce the behavior:. `salmon index -t input.fa -i input.index`. Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? - biconda; * Which reference (e.g. transcriptome) was used? - metagenome; * Which read files were used? ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux- HPC; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. Thanks.; Ugur",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/837:6051,install,installed,6051,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837,1,['install'],['installed']
Deployability,"elf, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:1165,UPGRADE,UPGRADE,1165,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['UPGRADE'],['UPGRADE']
Deployability,"eline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}; **** Job ends ****; Wed Mar 8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee1073eac092487ac62314; [New Thread 1629]; [New Thread 1707]; [New Thread 1708]; [New Thread 1709]; Core was generated by `/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/b'.; Program terminated with signal 6, Aborted.; #0 0x00000037e2032625 in ?? (); ""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/core.1629"" is a core file.; Please specify an executable to debug.; (gdb) q; ```. and the SGE info:. ```bash; $ qacct -j 9987283 -t 2; ==============================================================; qname shared.q; hostname compute-060.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-salmon_test2.gsk_phaseII; jobnumber 9987283; taskid 2; account sge; priority 0; qsub_time Wed Mar 8 11:53:12 2017; start_time Wed Mar 8 11:53:16 2017; end_time Wed Mar 8 11:53:40 2017; granted_pe local; slots 1; failed 0; exit_status ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:30818,install,install,30818,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['install'],['install']
Deployability,elp; Exiting.; ```. PBMC 3k shell log:; ```; ~/software/salmon/scripts/v1_10x/run.sh salmon alevin -lISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv. TEMPDIR is /tmp/tmp.WnzMm7GQBO; Running command [salmon alevin -lISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv -1 /tmp/tmp.WnzMm7GQBO/p1.fa -2 /tmp/tmp.WnzMm7GQBO/p2.fa -r pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-002-chunk-000.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; Logs will be written to alevin_output/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { ../hg_transcriptome/tx2gene.tsv }; ### [ mates1 ] => { /tmp/tmp.WnzMm7GQBO/p1.fa }; ### [ mates2 ] => { /tmp/tmp.WnzMm7GQBO/p2.fa }; ### [ unmatedReads ] => { pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-TA,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:9843,upgrade,upgrade,9843,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['upgrade'],['upgrade']
Deployability,"en attempting to build an index under Ubuntu 18.04 LTS; **To Reproduce**; Steps and data to reproduce the behavior:; ```; root@firefly:/usr/local/src/salmon# salmon-1.1.0_linux_x86_6/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: This is the most recent version of salmon.; [2020-04-07 21:11:41.237] [jLog] [info] building index; out : index; [2020-04-07 21:11:41.240] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; Illegal instruction (core dumped). root@firefly:/usr/local/src/salmon# salmon-0.14.1_linux_x86_64/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; [2020-04-07 21:12:14.575] [jLog] [info] building index; [2020-04-07 21:12:14.580] [jointLog] [info] [Step 1 of 4] : counting k-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/500:1229,update,updates,1229,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500,1,['update'],['updates']
Deployability,"ent_ratio"": 1.0,; ""num_compatible_fragments"": 8925446,; ""num_assigned_fragments"": 8925446,; ""num_frags_with_concordant_consistent_mappings"": 2169449,; ""num_frags_with_inconsistent_or_orphan_mappings"": 10821303,; ""strand_mapping_bias"": 0.5001592570279366,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1084379,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 1085070,; ""SF"": 5409839,; ""SR"": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54:46.141] [jointLog] [info] Computed 1249282 rich equivalence classes for further processing; [2023-03-07 06:54:46.141] [jointLog] [info] Counted 8925446 total reads in th",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:2066,release,release,2066,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['release'],['release']
Deployability,"environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deploy",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:2284,update,updated,2284,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['update'],['updated']
Deployability,er cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=yes; gl_cv_posix_shell=/bin/sh. ## ----------------- ##; ## Output variables. ##; ## ----------------- ##. ACLOCAL='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing aclocal-1.15'; AMDEPBACKSLASH='\'; AMDEP_FALSE='#'; AMDEP_TRUE=''; AMTAR='$${TAR-tar}'; AM_BACKSLASH='\'; AM_CFLAGS=''; AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'; AM_DEFAULT_VERBOSITY='1'; AM_V='$(V)'; AR=''; AS=''; AUTOCONF='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoconf'; AUTOHEADER='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoheader'; AUTOMAKE='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing automake-1.15'; AWK='awk'; CC='/Library/Developer/CommandLineTools/usr/bin/cc'; CCAS=''; CCASDEPMODE=''; CCASFLAGS=''; CCDEPMODE=''; CFLAGS=''; CFLAG_VISIBILITY=''; COND_ASM_X86_64_FA,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:8820,install,install,8820,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['install'],['install']
Deployability,"er/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLog] [info] parsing read library format; [2017-03-08 11:37:32.893] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-051/job_scripts/9987275: line 31: 41232 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/R",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:23149,pipeline,pipeline,23149,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['pipeline'],['pipeline']
Deployability,"erge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/11:1741,release,releases,1741,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11,1,['release'],['releases']
Deployability,error Installing: CMake fail line 94; RapMap not found (with workaround),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/42:6,Install,Installing,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42,1,['Install'],['Installing']
Deployability,error in installation process,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/497:9,install,installation,9,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497,1,['install'],['installation']
Deployability,error installing: CMake Error: Problem with archive_write_finish_entry(): Can't restore time,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/10:6,install,installing,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10,1,['install'],['installing']
Deployability,"eurat Object with information of sample tags obtained from R2 but I could not achieve this. ### **Background**; This is mice data comprised of 2 sequences: R1 contains CB (27bp divided in three sections of 9bp) and UMI, while R2 contains sample tag information and the transcript info as well. I need to differentiate not only the CB, but also the sampletags present in R2 since there are 5 different samples per cartridge. As stated in page 30 of the [BD Library Preparation Protocol](https://www.bdbiosciences.com/content/dam/bdb/marketing-documents/resources-pdf-folder/Protocol-EnhBead-+-Targeted+-AbSeq-+-ST-ruo.pdf), each sampletag is 70bp long (sampletag + abseq). . I have followed the [BD Single-Cell Multiomics Bioinformatics Handbook](https://scomix.bd.com/hc/article_attachments/9315606097549/23-21713_03__BD_Single-Cell_Multiomics_Bioinformatics_Handbook_EN.pdf), in which page 20 states: . > To account for every Sample Tag, each Sample Tag sequence in the kit is considered during pipeline analysis, whether the Sample Tags are used in the experiment or specified with a sample name.; The pipeline automatically adds the Sample Tag sequences to the FASTA reference file. Reads that align to a Sample Tag sequence and associate with a putative cell are used to identify the sample for that cell. ### **What I have tried so far**. 1. Added the sample tag sequences to the end of gentrome file; ```; [user@remote]$ tail -n 80 m.mus_gentrome.fa.gz; >JH584295.1 dna_sm:scaffold scaffold:GRCm39:JH584295.1:1:1976:1 REF; GGCTGAGCGGTGACATCATGGGCGGCGGGGTCCCAGACAGGAAGTGGGCGTGGCCTCCCA; CACTCACCCTGGCCCGCGGCGTCTGCCAGGTCGCTGTCCGAGATGCCGCCTGTggggggg; [...]; >sampletag11G; GTTGTCAAGATGCTACCGTTCAGAGGGTTGGCTCAGAGGCCCCAGGCTGCGGACGTCGTCGGACTCGCGT; >sampletag12G; GTTGTCAAGATGCTACCGTTCAGAGCTGGGTGCCTGGTCGGGTTACGTCGGCCCTCGGGTCGCGAAGGTC; ```. 2. Added the sample tag names to the end of decoy file; ```; [user@remote]$ tail -n 15 m.musculus_decoys.txt; GL456368.1; MU069434.1; JH584295.1; sampletag1G; sam",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/850:1146,pipeline,pipeline,1146,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/850,1,['pipeline'],['pipeline']
Deployability,"evin-default-eduardo.zip). Specifically, please provide at least the following information:. * Which version of salmon was used? ; Salmon 0.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed with bioconda; * Which reference (e.g. transcriptome) was used? ; This transcriptome: https://drive.google.com/open?id=1XcsFUxJM6XaYEKh9BYdUoAyJSlWJLIiW. ; It's a mouse transcriptome with 3 additional transcripts at the end; * Which read files were used?; * Which which program options were used?; `salmon alevin -lISR -1 ./H2_S5_L003_R1_001.fastq.gz -2 H2_S5_L003_R2_001.fastq.gz --chromium -i salmon_index -p 8 -o alevin_output --tgMap txp2gene.tsv`. **Desktop (please complete the following information):**; - OS: CentOS; - Version:; Linux login1 3.10.0-514.2.2.el7.x86_64 #1 SMP Tue Dec 6 23:06:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.3.1611 (Core); Release: 7.3.1611; Codename: Core. **Additional context**; ```; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-12 21:01:31.330] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 141 Million barcodes. [2018-06-12 21:08:38.126] [alevinLog] [info] Done barcode density calculation.; [2018-06-12 21:08:38.126] [alevinLog] [info] # Barcodes Used: 140111660 / 141062078.; [2018-06-12 21:08:42.014] [ale",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/237:1404,Release,Release,1404,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237,1,['Release'],['Release']
Deployability,"f 2 sequences: R1 contains CB (27bp divided in three sections of 9bp) and UMI, while R2 contains sample tag information and the transcript info as well. I need to differentiate not only the CB, but also the sampletags present in R2 since there are 5 different samples per cartridge. As stated in page 30 of the [BD Library Preparation Protocol](https://www.bdbiosciences.com/content/dam/bdb/marketing-documents/resources-pdf-folder/Protocol-EnhBead-+-Targeted+-AbSeq-+-ST-ruo.pdf), each sampletag is 70bp long (sampletag + abseq). . I have followed the [BD Single-Cell Multiomics Bioinformatics Handbook](https://scomix.bd.com/hc/article_attachments/9315606097549/23-21713_03__BD_Single-Cell_Multiomics_Bioinformatics_Handbook_EN.pdf), in which page 20 states: . > To account for every Sample Tag, each Sample Tag sequence in the kit is considered during pipeline analysis, whether the Sample Tags are used in the experiment or specified with a sample name.; The pipeline automatically adds the Sample Tag sequences to the FASTA reference file. Reads that align to a Sample Tag sequence and associate with a putative cell are used to identify the sample for that cell. ### **What I have tried so far**. 1. Added the sample tag sequences to the end of gentrome file; ```; [user@remote]$ tail -n 80 m.mus_gentrome.fa.gz; >JH584295.1 dna_sm:scaffold scaffold:GRCm39:JH584295.1:1:1976:1 REF; GGCTGAGCGGTGACATCATGGGCGGCGGGGTCCCAGACAGGAAGTGGGCGTGGCCTCCCA; CACTCACCCTGGCCCGCGGCGTCTGCCAGGTCGCTGTCCGAGATGCCGCCTGTggggggg; [...]; >sampletag11G; GTTGTCAAGATGCTACCGTTCAGAGGGTTGGCTCAGAGGCCCCAGGCTGCGGACGTCGTCGGACTCGCGT; >sampletag12G; GTTGTCAAGATGCTACCGTTCAGAGCTGGGTGCCTGGTCGGGTTACGTCGGCCCTCGGGTCGCGAAGGTC; ```. 2. Added the sample tag names to the end of decoy file; ```; [user@remote]$ tail -n 15 m.musculus_decoys.txt; GL456368.1; MU069434.1; JH584295.1; sampletag1G; sampletag2G; [...]; sampletag12G; ```. 3. Created the index; ```; salmon index -t m.mus_gentrome.fa.gz -d m.musculus_decoys.txt -p 12 -i m.mus_s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/850:1254,pipeline,pipeline,1254,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/850,1,['pipeline'],['pipeline']
Deployability,fail to update salmon1.4.0 by conda,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/604:8,update,update,8,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/604,1,['update'],['update']
Deployability,failed to upgrade salmon with conda,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/483:10,upgrade,upgrade,10,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/483,1,['upgrade'],['upgrade']
Deployability,"file as input corresponding to the stringtie gtf file.; **To Reproduce**; Steps and data to reproduce the behavior:; Trasncript fasta file corres[onding to the stringtie generated gtf file used for salmon indexing with the following command.; `salmon index -t stringtie.fasta -i annotation_merged_index -p 20 -k 31`; THe index output used for salmon quantification with the following command; `salmon quant -i matchedtranscript_index/ -l ISR -1 ../../12_1_trimmed_R1.fastq -2 ../../12_1_trimmed_R2.fastq --gcBias --seqBias --posBias --dumpEqWeights -o salmon_output_rerun --writeMappings=salmon_output_rerun/mapping.sam -p 20`. Actual transcript IDs; ```; transcript	gene; 1 MSTRG.1.1	MSTRG.1; 2 MSTRG.1.2	MSTRG.1; 3 MSTRG.1.3	MSTRG.1; 4	BGIOSGA002578-TA	MSTRG.1; 5 MSTRG.1.5	MSTRG.1; 6 MSTRG.1.6	MSTRG.1; ```; Output quant.sf file:; ```; transcript count TPM; 1 BGIOSGA002568-TA 5692.000 5.840431; 2 MSTRG.3 1165.181 0.825116; 3 MSTRG.3 15240.169 10.700565; 4 MSTRG.3 5233.400 3.656954; 5 MSTRG.3 34.780 0.027226; 6 MSTRG.3 5219.345 3.916051; 7 MSTRG.3 4.277 0.003473; ```; Rscript used to read the quant.sf file. ```; library(dplyr); tmp <- read.delim(""quant.sf"", header = TRUE, as.is = TRUE); idx <- grep(""^STRG\\.|^CHS\\."", tmp$Name, invert = TRUE); tmp$Name[idx] <- gsub(""\\.[0-9]+$"", """", tmp$Name[idx]); tmp %>% dplyr::rename(transcript = Name, count = NumReads) %>%; dplyr::select(transcript, count, TPM); ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.14.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda; * Which reference (e.g. transcriptome) was used?; transcriptome; * Which read files were used?; paired-end illumina read files. **Expected behavior**; A clear and concise description of what you expected to happen.; Expected to retrieve the full name of transcript IDs. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Cluster with centOS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/427:1755,install,installed,1755,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/427,1,['install'],['installed']
Deployability,"fo] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed time: 0.0107059s; ```; Specifically, please provide at least the following information:. * Which version of salmon was used? 1.1.0, 1.0.0 and 0.14.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? GitHub binary; * Which reference (e.g. transcriptome) was used? sample data from GitHub release; * Which read files were used? none; * Which which program options were used? -k 31 -i index -t sample_data/transcripts.fasta. **Expected behavior**; A clear and concise description of what you expected to happen.; I expected salmon 1.1.0 to run without a core-dump and produce similar results to 0.14.1. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Ubuntu 18.04.4 LTS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux firefly 5.3.0-40-generic #32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Using ""bcbio-nextgen"", with ""salmon 1.1.0"" installed by Anaconda: Removed this version because of core-dumps and installed the binary releases of ""salmon"" 1.1.0 then 0.41.1 from GitHub in /usr/local. Did stand-alone tests with sample data from the GitHub bin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/500:2522,release,release,2522,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500,1,['release'],['release']
Deployability,"fo] writing output ; ```; And the quality control report by `fastp` ; [fastp_report.pdf](https://github.com/COMBINE-lab/salmon/files/10999908/fastp_report.pdf). The log of `bowtie2`:; ```{shell}; $cat bowtie2.log ; 40535435 reads; of these:; 40535435 (100.00%) were paired; of these:; 38666766 (95.39%) aligned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:5909,UPGRADE,UPGRADE,5909,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['UPGRADE'],['UPGRADE']
Deployability,forge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; ------------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: lzma.h: No such file or directory; #include <lzma.h>; RESOLUTION:; sudo apt-get install -y liblzma-dev; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:5609,install,install,5609,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,3,['install'],['install']
Deployability,"get 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.7.1908 (Core); Release:	7.7.1908; Codename:	Core. **Additional context**; I want to trace the code while running ""salmon index ......"", ""salmon quant ......"" with gdb, but it seems that both the downloaded executable and the compiled ""Release"" mode do not contain debug symbol, so I'd like to compile the code with debug mode (which maybe will enable ""-g"" flag in g++); Thanks for your help in advance.; Best, ; kai2june",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:3845,release,release,3845,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,3,"['Release', 'release']","['Release', 'release']"
Deployability,"gned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:6261,update,updates,6261,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['update'],['updates']
Deployability,"gs. [2021-04-16 16:57:15.493] [jointLog] [info] Mapping rate = 0.0417748%. [2021-04-16 16:57:15.493] [jointLog] [info] finished quantifyLibrary(); [2021-04-16 16:57:15.535] [jointLog] [info] Starting optimizer; [2021-04-16 16:57:15.564] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-04-16 16:57:15.568] [jointLog] [info] iteration = 0 | max rel diff. = 6.66952; [2021-04-16 16:57:16.080] [jointLog] [info] iteration = 100 | max rel diff. = 0.0161125; [2021-04-16 16:57:16.555] [jointLog] [info] iteration = 194 | max rel diff. = 0.000157223; [2021-04-16 16:57:16.558] [jointLog] [info] Finished optimizer; [2021-04-16 16:57:16.558] [jointLog] [info] writing output. [2021-04-16 16:57:16.681] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-16 16:57:16.775] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-16 16:57:16.775] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-16 16:57:16.911] [jointLog] [info] Aggregating expressions to gene level; [2021-04-16 16:57:17.077] [jointLog] [info] done; [2021-04-16 16:57:17.088] [jointLog] [warning] NOTE: Read Lib [[ Trim/1-2-intestines-LDC4673.filtered.R1.fq.gz, Trim/1-2-intestines-LDC4673.filtered.R2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: Salmon_out/1-2-intestines-LDC4673/lib_format_counts.json for details; ```. However，when I try old version (0.9.1) or latest version (1.4.0), I got a normal mapping rate (77.1074%):. ```; [2021-04-20 10:08:58.047] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-04-20 10:08:58.048] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:3446,release,release,3446,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,1,['release'],['release']
Deployability,"gth less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-12-24 17:32:57.126] [puff::index::jointLog] [critical] The decoy file contained the names of 52 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [2021-12-24 17:32:57.224] [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **Expected behavior**; I followed the instructions, I don't think I should be getting this error?; I don't understand why I have only 52 decoys (basically the whole genome), and why zero were matched in the reference file provided. . If I look in `gentrome.fa` I do find the decoys; ```; zgrep ""chr8"" /no_backup/indexes/salmon/mm10/gentrome.fa ; >chr8; ```; I do not want to retain duplicated transcripts so the `--keepDuplicates` flag is something I would want to avoid. **Desktop (please complete the following information):**. ```; uname -a; Linux ant-login6.linux.crg.es 3.10.0-514.16.1.el7.x86_64 #1 SMP Wed Apr 12 07:10:20 CDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 7.2 (Nitrogen); Release:	7.2; Codename:	Nitrogen; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731:4857,release,release,4857,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731,2,"['Release', 'release']","['Release', 'release']"
Deployability,"gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HTTPerror . and by building from source and I don't understand how to do it from the website . How can I do it on macOS Monterey M1 Max chip ? . thanks a lot for you help in advance . Since it's the v 1.3.0 is it possible to update the brew formula to 1.9.0 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/787:1479,install,install,1479,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787,3,"['install', 'update']","['install', 'update']"
Deployability,"h version of salmon was used?. salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. * How was salmon installed (compiled, downloaded executable, through bioconda)?. bioconda. * Which reference (e.g. transcriptome) was used?. To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. * Which read files were used?. See above. * Which which program options were used?. I used the bash script from ; https://combine-lab.github.io/salmon/getting_started/. **Expected behavior**. I expected an output indicating successful quantification. **Screenshots**. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/317:1248,upgrade,upgrades,1248,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317,1,['upgrade'],['upgrades']
Deployability,"h_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep3_RL5410_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep1_RL5392_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep2_RL5393_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep3_RL5411_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep1_RL5389_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep2_RL5408_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep3_RL5409_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.10.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Binary; * Which reference (e.g. transcriptome) was used?; Moss (Physco) v6.1 that I had generated ; * Which read files were used?; ; * Which which program options were used?; `-l A -p 16 --validateMappings --numBootstraps 100 --seqBias --gcBias`. **Expected behavior**; A clear and concise description of what you expected to happen. **Desktop (please complete the following information):**; - OS: Linux server: Rocky Linux release 8.5 (Green Obsidian); - Version Rocky Linux release 8.5 (Green Obsidian)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/948:3023,install,installed,3023,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948,3,"['install', 'release']","['installed', 'release']"
Deployability,"hello,; i am trying to run salmon on windows subsystem linux.; i installed using conda.; when i tried to run it, i got the following error:; ```; salmon index -t Homo_sapiens.GRCh38.dna.primary_assembly.fa -i hg38_index; salmon: /home/najib/miniconda3/envs/rnaseq_salmon/bin/../lib/libstdc++.so.6: version `CXXABI_1.3.11' not found (required by salmon); salmon: /home/najib/miniconda3/envs/rnaseq_salmon/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.22' not found (required by salmon); salmon: /home/najib/miniconda3/envs/rnaseq_salmon/bin/../lib/libstdc++.so.6: version `CXXABI_1.3.11' not found (required by /home/najib/miniconda3/envs/rnaseq_salmon/bin/../lib/libtbb.so.2); ```; what is the possible solution?; thank you for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/864:65,install,installed,65,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/864,1,['install'],['installed']
Deployability,"hi! ; while this has been discussed in detail in #379 , there have been many releases of Alevin since then.; So i am just a bit confused, if i want to generate a quant matrix of all CBs including those in the range of 1-10 reads for use with SoupX, how do i do this in the most streamlined way. As there has been a lot of discussion about this and many release of alevin since then. Will using FreqThreshold 0 --maxNumBarcodes 4294967295 do the trick? or do i also need to use --KeepCBFraction 1.0. or do i need to do as suggested by @alexvpickering in the issue above; ""Run alevin with standard options, then parse raw_cb_frequency.txt for a sample of 1-10UMI CBs and using them as input to --whitelist option for additional run of alevin with --freqThreshold 0 --maxNumBarcodes 4294967295"". Thanks,; Devika",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/538:77,release,releases,77,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/538,2,['release'],"['release', 'releases']"
Deployability,"his-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa | cut -d "" "" -f 1 > GRCh38.decoys.txt; sed -i 's/>//g' GRCh38.decoys.txt; cat gencode.v36.transcripts.fa GRCh38.primary_assembly.genome.fa | gzip > GRCh38.gentrome.fa.gz; salmon index -t GRCh38.gentrome.fa.gz -d GRCh38.decoys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/""; for fn in /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR{2557119..2557121}; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i $IDX -l A -1 ${fn}_1.fastq.gz -2 ${fn}_2.fastq.gz -p 8 \; --validateMappings \; -o quants/${samp}_quant \; --gcBias; done; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; 1.3.0 salmon was installed by miniconda, then updated to 1.4.0 via miniconda ; * Which reference (e.g. transcriptome) was used?; Gencode_human/release_36/gencode.v36.transcripts.fa.gz; * Which read files were used?; fastq.gz file with 150 paired reads ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; On a cluster with Ubuntu Linux. **Additional context**; I was running the default method of building index with only the gencode.v36.transcripts.fa.gz, and the mapping rate for my fastq files were 42-55%, which i think is quite low (based on what i read, it is expected to be around 70%). Then, I thought i might give a go with building decoy-aware transcriptome index, and this did not go well as i presented above. . I found an old post with the similar issue, which the conclusion was that t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/603:3485,install,installed,3485,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603,2,"['install', 'update']","['installed', 'updated']"
Deployability,"https://github.com/COMBINE-lab/salmon/issues/602#issuecomment-748729130. Having read this and also wanting to use salmon to quantify transcript abundances from direct RNA data I have been using the pipeline here: https://github.com/nanoporetech/pipeline-transcriptome-de . In this case --noErrorModel is used but not --NoLengthCorrection. The pipeline uses NumReads as the counts in downstream analysis but I was wondering if this estimation of transcript counts also tries to normalize the length bias typical of short-read RNA seq workflows? If not, I think NumReads is OK but if it does this also seems not useable like the default TPM output.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/651:198,pipeline,pipeline,198,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/651,3,['pipeline'],"['pipeline', 'pipeline-transcriptome-de']"
Deployability,"ich closely follow the options used in the alevin-fry tutorial. **Expected behavior**; A clear and concise description of what you expected to happen. I expected my reads to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ; Output of `uname -a`:; ```; Linux amc-bodhi 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux; ```. Output of `lsb_release -a`:; ```; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.4.1708 (Core) ; Release:	7.4.1708; Codename:	Core; ```. **Additional context**; Add any other context about the problem here. I have attached subsampled fastq files for one of my samples as an example:; [sub_R1.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331798/sub_R1.fastq.gz); [sub_R2.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331799/sub_R2.fastq.gz). This is the error log after attempting to run the map reads step, which indicates an issue with the index build:; [B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331816/B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt). This is the error log after building the index, which seems to have run successfully (though maybe I am missing something):; [build_idx.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331817/build_idx.out.err.txt). This is the versionInfo.json file that is successfully generated after building the index, but that can't be found when mapping",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:6212,Release,Release,6212,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['Release'],['Release']
Deployability,"ich in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:22154,pipeline,pipeline,22154,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['pipeline'],['pipeline']
Deployability,"ieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Qua",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:2392,release,releases,2392,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,igure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:5484,Install,InstalledDir,5484,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Install'],['InstalledDir']
Deployability,"ile describes the option '-t transcripts.fa' for this purpose:. > ./bin/salmon quant -t transcripts.fa -l <LIBTYPE> -a aln.bam -o salmon_quant. Also the command-line help 'salmon quant --help-alignment' names the same options:. alignment input options:. -l [ --libType ] arg Format string describing the library ; type; -a [ --alignments ] arg input alignment (BAM) file(s).; -t [ --targets ] arg FASTA format file containing target ; transcripts. The 'salmon quant' command doesn't recognize either the short or long form of this option and stops execution immediately. There is no difference if the full set of options for a quantification run are provided or only this option. . **To Reproduce**; salmon quant -t Homo_sapiens.GRCh37.87.cdna.all.fa; salmon quant --targets Homo_sapiens.GRCh37.87.cdna.all.fa. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.12.0 and 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable (salmon-0.12.0_linux_x86_64.tar.gz, salmon-0.11.3-linux_x86_64.tar.gz); * Which reference (e.g. transcriptome) was used?; any, independant of transcriptome; * Which read files were used?; not applicable; * Which which program options were used?; other options than '-t/--targets' were irrelevant for provoking the error . **Expected behavior**; Salmon should run and process the alignment file in BAM format. **Screenshots**; --- Error messages ------------------; Exception : [unrecognised option '-t']. Exiting.; Exception : [unrecognised option '--targets']. Exiting.; --------------------------------------. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version:; Linux nnn 4.15.0-36-generic #39~16.04.1-Ubuntu SMP Tue Sep 25 08:59:23 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial. **Additional context**; none",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/343:2260,Release,Release,2260,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/343,1,['Release'],['Release']
Deployability,"ime — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:3192,upgrade,upgrade,3192,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,2,"['deploy', 'upgrade']","['deployed', 'upgrade']"
Deployability,"initial_whitelist"": 28000,; ""low_conf_cbs"": 997,; ""num_features"": 5,; ""final_num_cbs"": 19134,; ""deduplicated_umis"": 127624221,; ""mean_umis_per_cell"": 6670,; ""mean_genes_per_cell"": 2229; }. ==> salmon_1.9_OG_2022-Oct-13_S3/aux_info/alevin_meta_info.json <==; {; ""total_reads"": 1657137137,; ""reads_with_N"": 59329,; ""noisy_cb_reads"": 447471964,; ""noisy_umi_reads"": 3629,; ""used_reads"": 1209602215,; ""mapping_rate"": 55.061293216313938,; ""reads_in_eqclasses"": 912441138,; ""total_cbs"": 33411349,; ""used_cbs"": 1567701,; ""initial_whitelist"": 28000,; ""low_conf_cbs"": 997,; ""num_features"": 5,; ""final_num_cbs"": 18395,; ""deduplicated_umis"": 125889439,; ""mean_umis_per_cell"": 6843,; ""mean_genes_per_cell"": 2248; }; ```. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Run `salmon alevin` on more than 2^32 sequenced reads. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v41 + CHM13 v2.0 assembly; * Which read files were used? BD Rhapsody + NovaSeq; * Which which program options were used?. ```; [cell barcodes were pre-corrected and merged using my own [custom script](https://gitlab.com/gringer/bioinfscripts/-/blob/master/synthSquish.pl)]; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} \; -p 10 -o salmon_1.9_cbc_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**; ```; {; ""total_reads"": 4579183639,; ""reads_with_N"": 165542,; ""noisy_cb_reads"": 1240522569,; ""noisy_umi_reads"": 6297,; ""used_reads"": 3338489231,; ""mapping_rate"": 52.32744469106451,; ""reads_in_eq",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/806:2615,install,installed,2615,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/806,1,['install'],['installed']
Deployability,"ions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:2075,install,install,2075,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['install'],['install']
Deployability,"iorxiv.org/content/10.1101/657874v2. Some questions on salmon index building with salmon/v1.0 (as I am confused following the documentation at https://salmon.readthedocs.io/en/latest/salmon.html) - let me know if my understanding is correct. 1. Is this how to create SAF indices - https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ - with these steps, I assume I do not have to separately download mashmap and bedtools software. 2. If one has to use SA method, does one still use the generateDecoyTranscriptome.sh method as listed here - https://github.com/COMBINE-lab/SalmonTools/blob/master/scripts/generateDecoyTranscriptome.sh (and this requires the gff file, mashmap and bedtools software). 3. SA and SAF both require genome. Can I still use `salmon index` on the transcriptome file without using genome files? Based on the release notes quoted (copy/pasted) below, I am worried about the phrase `""mapping without selective alignment is disabled""`). . Salmon v1.0 release notes state: . > changes since v.014.1; > In this release of salmon, selective-alignment is enabled by default (and, in fact, mapping without selective-alignemnt is disabled). We may explore, in the future, ways to allow disabling selecive-alignment under the new mapping approach, but at this point, it is always enabled.; > ; ; 4. Page 18 of your preprint pdf states that you used ""salmon v0.15.0 for quasi-mapping"" - so I am assuming I have to keep 2 versions of salmon in my system if I have to do both quasi-mapping and SA/SAF?. 5. Page 19 of your preprint pdf states you used `--mimicBT2 and --useEM for SA and SAF` quantification methods. Is this the recommendation while using SA and SAF methods? ; From salmon v01.4.1 with SA method, I have all along used the default `VBEM `and `--validateMappings` based on info in [SalmonReadTheDocs](https://salmon.readthedocs.io/en/latest/salmon.html#validatemappings) . > Enables selective alignment of the sequencing reads when mapping them to the trans",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/442:1107,release,release,1107,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/442,1,['release'],['release']
Deployability,ir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libj,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:1730,install,install,1730,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['install'],['install']
Deployability,"itHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-08-18 21:20:51.292295094 +0200; @@ -42,7 +42,7 @@; ${GAT_SOURCE_DIR}/external; ${GAT_SOURCE_DIR}/external/cereal/include; ${GAT_SOURCE_DIR}/external/install/include; -${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.1.3; +${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.2.3; ${GAT_SOURCE_DIR}/external/install/include/bwa; ${ZLIB_INCLUDE_DIR}; ${TBB_INCLUDE_DIRS}; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/11:2435,install,install,2435,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11,5,['install'],['install']
Deployability,"l_la-url.o): In function `fix_hostname.isra.7':; (.text.unlikely+0x2e4): undefined reference to `idn2_check_version'; (.text.unlikely+0x301): undefined reference to `idn2_lookup_ul'; (.text.unlikely+0x34b): undefined reference to `idn2_strerror'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-cookie.o): In function `Curl_cookie_add':; (.text+0xbb1): undefined reference to `psl_builtin'; (.text+0xbca): undefined reference to `psl_is_cookie_domain_acceptable'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-version.o): In function `curl_version':; (.text+0xd6): undefined reference to `idn2_check_version'; (.text+0xe2): undefined reference to `idn2_check_version'; (.text+0x106): undefined reference to `psl_get_version'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-version.o): In function `curl_version_info':; (.text+0x1e9): undefined reference to `idn2_check_version'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-socks_gssapi.o): In function `check_gss_err.part.0':; (.text+0x57): undefined reference to `gss_release_buffer'; (.text+0x77): undefined reference to `gss_display_status'; (.text+0x9b): undefined reference to `gss_release_buffer'; (.text+0xcf): undefined reference to `gss_release_buffer'; (.text+0xef): undefined reference to `gss_display_status'; (.text+0x10e): undefined reference to `gss_release_buffer'; (.text+0x18e): undefined reference to `gss_release_buffer'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-socks_gssapi.o): In function `Curl_SOCKS5_gssapi_negotiate':; (.text+0x2ef): undefined reference to `gss_import_name'; (.text+0x302): undefined reference to `gss_release_buffer'; (.text+0x42c): undefined reference to `gss_release_buffer'; (.text+0x437): undefined reference to `gss_release_buffer'; (.text+0x532): undefined reference to `gss_release_buffer'; (.text+0x56c): undefined reference to `gss_release_name'; ```. and hundreds more, all related to libcurl. System is Linux Mint 19.2 (Ubuntu 18.04), idn2 and all other related libraries are installed.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/425:2701,install,installed,2701,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/425,1,['install'],['installed']
Deployability,"le | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 320.51 us; -----------------------------------------; [2024-05-03 15:10:04.136] [jointLog] [info] done; [2024-05-03 15:10:04.170] [jointLog] [info] Index contained 147554 targets. [2024-05-03 15:10:05.131] [jointLog] [info] Number of decoys : 61 ; processed 21000000 fragmentsointLog] [info] First decoy index : 147456; hits: 25885546, hits per frag: 1.2683(base) [**no further output**]; ```. **Desktop (please complete the following information):**; - OS: Ubuntu linux. ```; $ uname -a; Linux big-bird 5.15.0-102-generic #112-Ubuntu SMP Tue Mar 5 16:50:32 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Ubuntu; Description: Ubuntu 22.04.4 LTS; Release: 22.04; Codename: jammy; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:7907,Release,Release,7907,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['Release'],['Release']
Deployability,"les/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<ReadPair*>::internal_push(void const*, void (*)(ReadPair**, void const*)) [clon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:2765,install,install,2765,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['install'],['install']
Deployability,libc++abi: terminating ; zsh: abort. I got this on Terminal while trying to run Salmon program.; I installed Salmon via conda so I have the 10.3,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/939:99,install,installed,99,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/939,1,['install'],['installed']
Deployability,"lmon quant --threads 1 --libType=U -i index -r SRR493367.fastq.gz -o SRR493367; ```. I get the following error(s) even though the same version of kallisto was used for the indexing & quantifiation:; ```; Encountered exception [JSON Parsing failed - provided NVP (SeqHash512) not found] when loading index.; The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version.; ```. ## To Reproduce; - Install docker ; - Download transcriptome:; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.transcripts.fa.gz; ```; - Run docker container (warning 2GB):; ```; docker run -v $PWD -w $PWD:$PWD -it lifebitai/rnaseq-nf-dseq2 bash; ```; - Download reads (warning reads are 2.3GB:; ```; fastq-dump SRR493367; ```; - Index transcriptome:; ```; salmon index --threads 1 -t gencode.v27.transcripts.fa.gz -i index; ```; - Run quantification cmd above. <br />; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.12.0; * How was salmon installed? Download precompliied binary and made Dockerfile with the following:; ```Dockerfile; COPY ./salmon-0.12.0_linux_x86_64/bin /usr/local/bin; COPY ./salmon-0.12.0_linux_x86_64/lib /usr/local/lib. RUN chmod -R u+x /usr/local/bin. ENV PATH=""$PATH:/usr/local/bin""; ```; * Which reference (e.g. transcriptome) was used? gencode.v27.transcripts.fa.gz; * Which read files were used? SRR493367.fastq.gz; * Which which program options were used? See above. I encountered this error when running this [Nextflow pipeline](https://github.com/PhilPalmer/RNASeq-nf-dseq2). More details can be found [here](https://deploit.lifebit.ai/public/jobs/5c6eca93758e8300a8740a59) . Any ideas what the problem may be? I am not sure if it is a problem with my installation of Salmon, the [data](https://www.ncbi.nlm.nih.gov/sra/?term=SRR493367), the command or something else. Any help would be much appreciated. ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/345:1147,install,installed,1147,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345,3,"['install', 'pipeline']","['installation', 'installed', 'pipeline']"
Deployability,lmon.dir/QSufSort.c.o CMakeFiles/salmon.dir/is.c.o CMakeFiles/salmon.dir/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/li,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:1589,install,install,1589,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['install'],['install']
Deployability,"lmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:2631,install,install,2631,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['install'],['install']
Deployability,"lmonIndex::build(this=<unavailable>, indexDir=(m_pathname = ""athal_index""), idxOpt=<unavailable>) at SalmonIndex.hpp:76; frame #17: 0x00000000009839c3 salmon`salmonIndex(argc=<unavailable>, argv=<unavailable>, (null)=<unavailable>) at BuildSalmonIndex.cpp:236; frame #18: 0x000000000097a673 salmon`main [inlined] std::__1::__function::__value_func<int (int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&)>::operator(this=<unavailable>, __args=<unavailable>, __args=<unavailable>, __args=<unavailable>)(int&&, char const**&&, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&) const at functional:1884:16 ; frame #19: 0x000000000097a648 salmon`main [inlined] std::__1::function<int (int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&)>::operator(this=<unavailable>, __arg=<unavailable>, __arg=<unavailable>, __arg=<unavailable>)(int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&) const at functional:2556; frame #20: 0x000000000097a648 salmon`main(argc=<unavailable>, argv=<unavailable>) at Salmon.cpp:274; frame #21: 0x000000000046bbf0 salmon`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7; ```; Given that the crash is happening in a stream.Put() call, I presume that the stream must not be open and this should have been caught earlier. ```; template <typename StreamType>; class BasicOStreamWrapper {; public:; typedef typename StreamType::char_type Ch;; BasicOStreamWrapper(StreamType& stream) : stream_(stream) {}. void Put(Ch c) {; stream_.put(c);; }; ```; If you can provide any clues as to where in this lengthy backtrace the problem actually begins, it would be appreciated.; I used minimal changes to the raw dist to get this working.; Separately installed dependencies:. cereal 1.3.0.10; libgff 2.0.0; tbb 2020.3; boost-libs 1.72.0. Pufferfish 1.6.0 and staden-io_lib 1.14.8.1 are embedded in the build. Best,. Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/725:7314,install,installed,7314,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/725,1,['install'],['installed']
Deployability,"ly/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLog] [info] parsing read library format; [2017-03-08 11:37:32.893] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-051/job_scripts/9987275: line 31: 41232 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}; **** Job ends ****; Wed Mar 8 11:37:36 EST 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:24137,pipeline,pipeline,24137,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['pipeline'],['pipeline']
Deployability,"m github. **Describe the bug**; A clear and concise description of what the bug is. core dumped crash on building index process. **To Reproduce**; Steps and data to reproduce the behavior:. wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/cdna/Mus_musculus.GRCm39.cdna.all.fa.gz ; wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; grep ""^>"" <(gunzip -c Mus_musculus.GRCm39.dna.primary_assembly.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Mus_musculus.GRCm39.cdna.all.fa.gz Mus_musculus.GRCm39.dna.primary_assembly.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.8.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable. * Which reference (e.g. transcriptome) was used?; downloaded executable; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. salmon-1.8.0_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index; Version Info: This is the most recent version of salmon.; index [""Mus_musculus.GRCm39_v1.8.0_decoy.index""] did not previously exist . . . creating it; [2022-06-01 18:13:38.986] [jLog] [info] building index; out : Mus_musculus.GRCm39_v1.8.0_decoy.index; [2022-06-01 18:13:38.986] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178537.2], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178862.2], ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783:1096,install,installed,1096,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783,1,['install'],['installed']
Deployability,"m_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:1625,pipeline,pipeline,1625,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['pipeline'],['pipeline']
Deployability,"mmand not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:3262,release,release,3262,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['release'],['release']
Deployability,"mmand not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ ma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:4873,release,release,4873,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['release'],['release']
Deployability,"mmand not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:6483,release,release,6483,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['release'],['release']
Deployability,"mmand not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:8094,release,release,8094,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['release'],['release']
Deployability,"mmand not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:9705,release,release,9705,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['release'],['release']
Deployability,"mmand not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:11316,release,release,11316,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['release'],['release']
Deployability,"mmand not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:12927,release,release,12927,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['release'],['release']
Deployability,"mmand not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:16149,release,release,16149,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['release'],['release']
Deployability,"n is a concern to me, because sequencing is expensive, and it'd be good to have an idea of whether we need to further improve our library prep (which would certainly be the case for 9X duplication, but less important with 3-5X duplication). Is anyone able to explain how the UMI deduplication is applied in Salmon Alevin, or why it might be different from other analysis platforms?. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? Binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v42; * Which read files were used? NovaSeq 6000 S2; * Which program options were used?. ```; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; --mrna ${indexDir}/mt_genes.txt --rrna ${indexDir}/rRNA_genes.txt \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} --whitelist goodSampleTagCells.txt \; -p 10 -o salmon_1.9_cbc_whitelist_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**. I would expect the Salmon Alevin PCR duplication estimate to be similar to that of SevenBridges, or my semi-manual attempt (e.g. 3-5X). **Desktop OS/Version:**. `Linux musculus 5.18.0-4-amd64 #1 SMP PREEMPT_DYNAMIC Debian 5.18.16-1 (2022-08-10) x86_64 GNU/Linux`. ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bookworm/sid; Release: unstable; Codename: sid; ```. **Additional Information**; The SevenBridges Rhapsody pipeline uses STAR v2.5.2b for annotating R2 reads, which are combined with R1 reads using custom python scripts (possibly involving calling HTSeq and Picard), then collapsed down to molecules using custom python scripts (apparently ""apply rsec and dbec correction to the (sorted) valid annotation dataset"").",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/808:3858,Release,Release,3858,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808,2,"['Release', 'pipeline']","['Release', 'pipeline']"
Deployability,"n.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<ReadPair*>::internal_push(void const*, void (*)(ReadPair**, void const*)) [clone .constprop.1477]':; SalmonQuantifyAlignments.cpp:(.text+0x161d): undefined reference to `tbb::internal::throw_exc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:2878,install,install,2878,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['install'],['install']
Deployability,"n/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:27996,pipeline,pipeline,27996,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['pipeline'],['pipeline']
Deployability,"nd failed at ; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:1233,release,releases,1233,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,1,['release'],['releases']
Deployability,"nda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility pri",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:1540,UPGRADE,UPGRADE,1540,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['UPGRADE'],['UPGRADE']
Deployability,"nda; salmon 0.6.0 1 bioconda; salmon 0.6.0 boost1.60_1 bioconda; salmon 0.6.0 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_3 bioconda; salmon 0.7.2 boost1.61_3 bioconda; salmon 0.8.0 boost1.60_0 bioconda; salmon 0.8.0 boost1.61_0 bioconda; salmon 0.8.1 0 bioconda; salmon 0.8.2 0 bioconda; salmon 0.8.2 1 bioconda; salmon 0.9.0 0 bioconda; salmon 0.9.1 0 bioconda; salmon 0.9.1 1 bioconda; salmon 0.10.0 1 bioconda; salmon 0.10.1 1 bioconda; salmon 0.10.2 1 bioconda; salmon 0.11.0 h445c947_0 bioconda; salmon 0.11.1 h445c947_0 bioconda; salmon 0.11.2 h445c947_0 bioconda; salmon 0.11.3 h86b0361_1 bioconda; salmon 0.11.3 h86b0361_2 bioconda; ```. When I try to install, I get `PackageNotFoundError`.; ```; $ conda create -n salmon salmon=0.11.3; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon=0.11.3; - jemalloc[version='>=5.1.0']; - salmon=0.11.3; - libcxx. Current channels:. - https://conda.anaconda.org/bioconda/linux-64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/free/linux-64; - https://repo.anaconda.com/pkgs/free/noarch; - https://repo.anaconda.com/pkgs/r/linux-64; - https://repo.anaconda.com/pkgs/r/noarch; - https://repo.anaconda.com/pkgs/pro/linux-64; - https://repo.anaconda.com/pkgs/pro/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. It is weird because I am installing on `linux64`.; ```; $ lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	CentOS; Description:	CentOS release 6.5 (Final); Release:	6.5; Codename:	Final; ```; Any help would be greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/308:1826,install,installing,1826,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/308,3,"['Release', 'install', 'release']","['Release', 'installing', 'release']"
Deployability,"ne-lab.github.io/alevin-tutorial/2019/selective-alignment/), a segmentation fault occurs. (gdb backtrack is provided below.). **To Reproduce**; Steps and data to reproduce the behavior:. 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /cmake version 3.13.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Sp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:1408,install,install,1408,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,1,['install'],['install']
Deployability,"ng] Only 268744 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2023-11-30 09:38:33.436] [jointLog] [info] Mapping rate = 53.7596%. [2023-11-30 09:38:33.436] [jointLog] [info] finished quantifyLibrary(); [2023-11-30 09:38:33.440] [jointLog] [info] Starting optimizer; [2023-11-30 09:38:33.498] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-11-30 09:38:33.511] [jointLog] [info] iteration = 0 | max rel diff. = 101.852; [2023-11-30 09:38:34.853] [jointLog] [info] iteration = 100 | max rel diff. = 0.263537; [2023-11-30 09:38:36.144] [jointLog] [info] iteration = 200 | max rel diff. = 0.0414157; [2023-11-30 09:38:37.438] [jointLog] [info] iteration = 300 | max rel diff. = 1.17048; [2023-11-30 09:38:38.135] [jointLog] [info] iteration = 355 | max rel diff. = 0.00351135; [2023-11-30 09:38:38.148] [jointLog] [info] Finished optimizer; [2023-11-30 09:38:38.148] [jointLog] [info] writing output ; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - Linux r640c10 4.18.0-372.16.1.el8_6.x86_64 #1 SMP Tue Jun 28 03:02:21 EDT 2022 x86_64 GNU/Linux. **Additional context**; Add any other context about the problem here.; The issue is definitely not insufficient memory (>300 GB available). ; Interestingly, the same salmon index was working perfectly until now. I re-created the index to make sure the files were not corrupted somehow but it resulted in the same error. I doubt that this is due to an update in salmon itself, because we have been using the same singularity container for this process for a while, so the same salmon version, same index now producing the error. . For my use case, not using the `--skipQuant` doesn't really cause any problem. I just wanted to report the bug.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:10621,update,update,10621,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['update'],['update']
Deployability,"nk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-12-05 15:10:07.252] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ../hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ dumpFeatures ] => { }; ### [ mates1 ] => { /tmp/tmp.lLLibfwH4G/p1.fa }; ### [ mates2 ] => { /tmp/tmp.lLLibfwH4G/p2.fa }; ### [ unmatedReads ] => { ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/read-I1_si-A",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:3504,upgrade,upgrades,3504,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['upgrade'],['upgrades']
Deployability,"nloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:1353,release,releases,1353,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,"nst&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/551:2596,install,installed,2596,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551,1,['install'],['installed']
Deployability,"nstallation. I decided to get the cmake `-DFETCH_BOOST=TRUE` option, in spite of having installed Boost. ; I get this error (here is the full log):. `cmake -DFETCH_BOOST=TRUE`. > Salmon requires g++ 5.2 or greater. https://pastebin.com/UmVJw0Ae. This is particularly odd.; I have installed a recent GCC version and even rebuilt Boost after it... As you can see, if I type . > gcc --version; > g++ --version. By root and user, I always get... > gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and . > g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. On another tutorial, I found that I should open a bash instead while installing gcc/g++, with the instruction:. `scl enable devtoolset-7 bash`. When I run . > gcc --version; > g++ --version. By root and user, this time the proper version is recognised!. > gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and. > g++ (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. As you can see, this time the latest version is recognised. I'm quite sure the bash was open even when I rebuilt Boost... But even though I re-open the bash before cmaking Salmon, it will always complain about an outdated version, having it opened or not won't make any difference. I'm also attaching",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/388:1148,install,installing,1148,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/388,1,['install'],['installing']
Deployability,"nt; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2`. * Which version of salmon was used?; Salmon 0.3.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Cloned from git as latest source and attempted to cmake + make && make install . **Expected behavior**; A clear and concise description of what you expected to happen.; Expecting the makefile to use c++14 correctly to process the ""auto p"" variable the way it is intended within the template functions. See SalmonQuantify.cpp:1964 with errors regarding ""p was not declared in this scope"". . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Centos 7 ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:49777,install,installed,49777,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,2,['install'],"['install', 'installed']"
Deployability,"o Reproduce. Which version of salmon was used?; salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda. Which reference (e.g. transcriptome) was used?; To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. Which read files were used?; See above. Which which program options were used?; I used the bash script from; https://combine-lab.github.io/salmon/getting_started/. Expected behavior. I expected an output indicating successful quantification. Screenshots. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Ra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/318:1292,upgrade,upgrades,1292,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318,1,['upgrade'],['upgrades']
Deployability,"o-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:2848,Release,Release,2848,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['Release'],['Release']
Deployability,o-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -static-libstdc++ -Wno-deprecated-register -Wno-unused-local-typedefs -L/opt/rh/devtoolset-2/root/usr/lib64 -L/opt/rh/devtoolset-2/root/usr/lib CMakeFiles/salmon.dir/QSufSort.c.o CMakeFiles/salmon.dir/is.c.o CMakeFiles/salmon.dir/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boo,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:1367,install,install,1367,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['install'],['install']
Deployability,"oading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size: 6442721444>6442720932; ...; ```. The index does not finish loading, and so salmon does not enter read quantification routines. **To Reproduce**. * Which version of salmon was used? 1.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Github release tarball; * Which reference (e.g. transcriptome) was used?; Gencode v32, with additional elements representing genic introns and intergenic spaces.; * Which read files were used?; NCBI SRA run accession GSM2392582; * Which which program options were used?; --no-version-check --libType ISR --threads 4 --seqBias --gcBias --useVBOpt. **Expected behavior**; I expected index loading to complete successfully.; **Desktop (please complete the following information):**; - OS: CentOS6. **Additional context**; I've uploaded the index file archive [here](https://www.icloud.com/iclouddrive/00DWWhkSucg2BTWLuFswSHwvQ#rapmap_issue_8_index) and the transcripts fasta file [here](https://www.icloud.com/iclouddrive/0oCdFG64TJe0IlvkYyIUZRfSQ#rapmap_issue_8_transcripts).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/463:2727,install,installed,2727,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463,2,"['install', 'release']","['installed', 'release']"
Deployability,"ode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz; * Which read files were used? not quantifying yet, I'm at the indexing step.; * Which which program options were used? salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Expected behavior**; A clear and concise description of what you expected to happen.; Producing directory that contains indexed files to be applied to ""salmon quant"" command. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 2 pictures: a segmentation fault screenshot and a gdb backtrack screenshot in ""**To Reproduce**"" section. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] : CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; - ""lsb_release -a""; LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.7.1908 (Core); Release: 7.7.1908; Codename: Core; ; **Additional context**; Thanks for your help in advance.; Best,; kai2june",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:3900,release,release,3900,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,2,"['Release', 'release']","['Release', 'release']"
Deployability,"ode.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:1882,install,install,1882,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['install'],['install']
Deployability,"ode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:1919,update,updates,1919,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['update'],['updates']
Deployability,"oduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected behavior**; I expected a total of 18.5M counts in the quant matrix, where the sums per barcode fit those reported in the _MappedUmi.txt_ Is my assumption that the quant matrix should only contain integers correct?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; Ubuntu 18.04.1 LTS. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/361:1688,install,installed,1688,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361,1,['install'],['installed']
Deployability,"oduces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:1728,release,releases,1728,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,"og] [info] contig count for validation: 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info]; Total # of segments we have position for : 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] total contig vec entries 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] bits per offset entry 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] there were 0 equivalence classes; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249': File exists; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v1.1.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/jl2e19/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_1.fq }; ### [ mates2 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_2.fq }; ### [ validateMappings ] => { }; ### [ output ] => { /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/ }; Logs will be written to /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/logs; [2020-07-04 15:51:46.138] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-07-04 15:51:46.138] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:17809,upgrade,upgrade,17809,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,1,['upgrade'],['upgrade']
Deployability,"ok, this is not really a bug but I think it needs attention. i am using anaconda environment for many tools and keep it updated as much as possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/286:120,update,updated,120,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286,5,['update'],"['update', 'updated']"
Deployability,olset-2/root/usr/lib64 -L/opt/rh/devtoolset-2/root/usr/lib CMakeFiles/salmon.dir/QSufSort.c.o CMakeFiles/salmon.dir/is.c.o CMakeFiles/salmon.dir/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boos,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:1515,install,install,1515,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['install'],['install']
Deployability,"on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can send you the salmon_quant.log or any other file that would be useful. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OS CentOS 7.8; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/668:1307,install,installed,1307,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668,1,['install'],['installed']
Deployability,"one building index; for info, total work write each : 2.331 total work inram from level 3 : 4.322 total work raw : 25.000 ; Bitarray 528992256 bits (100.00 %) (array + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which which program options were used? see above. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. I am thinking this is an issue w/ building the index. If there is a pre-made index w/ or w/o decoys for mouse that you can direct me to I would appreciate it. Following the link posted in the salmon documentation about pre-made index's is not helpful and I am not sure how to download them from there. A ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:7846,install,installed,7846,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['install'],['installed']
Deployability,"onfused following the documentation at https://salmon.readthedocs.io/en/latest/salmon.html) - let me know if my understanding is correct. 1. Is this how to create SAF indices - https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ - with these steps, I assume I do not have to separately download mashmap and bedtools software. 2. If one has to use SA method, does one still use the generateDecoyTranscriptome.sh method as listed here - https://github.com/COMBINE-lab/SalmonTools/blob/master/scripts/generateDecoyTranscriptome.sh (and this requires the gff file, mashmap and bedtools software). 3. SA and SAF both require genome. Can I still use `salmon index` on the transcriptome file without using genome files? Based on the release notes quoted (copy/pasted) below, I am worried about the phrase `""mapping without selective alignment is disabled""`). . Salmon v1.0 release notes state: . > changes since v.014.1; > In this release of salmon, selective-alignment is enabled by default (and, in fact, mapping without selective-alignemnt is disabled). We may explore, in the future, ways to allow disabling selecive-alignment under the new mapping approach, but at this point, it is always enabled.; > ; ; 4. Page 18 of your preprint pdf states that you used ""salmon v0.15.0 for quasi-mapping"" - so I am assuming I have to keep 2 versions of salmon in my system if I have to do both quasi-mapping and SA/SAF?. 5. Page 19 of your preprint pdf states you used `--mimicBT2 and --useEM for SA and SAF` quantification methods. Is this the recommendation while using SA and SAF methods? ; From salmon v01.4.1 with SA method, I have all along used the default `VBEM `and `--validateMappings` based on info in [SalmonReadTheDocs](https://salmon.readthedocs.io/en/latest/salmon.html#validatemappings) . > Enables selective alignment of the sequencing reads when mapping them to the transcriptome. This can improve both the sensitivity and specificity of mapping and, as a result, can improve",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/442:1165,release,release,1165,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/442,1,['release'],['release']
Deployability,"or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:3369,release,released,3369,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['release'],['released']
Deployability,"or**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /us",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:3524,install,install,3524,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['install'],['install']
Deployability,"ot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:1212,configurat,configuration,1212,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['configurat'],['configuration']
Deployability,"otation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:2656,pipeline,pipeline,2656,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['pipeline'],['pipeline']
Deployability,"output/salmon }; # [ mates1 ] => { reads_1.fastq }; # [ mates2 ] => { reads_2.fastq }; Logs will be written to output/salmon/logs; there is 1 lib; [2015-08-23 21:58:57.438] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading index/hs_ens_ercc.sidx/bwaidx.amb; ```. I've provided a reproducible and self-contained Snakefile that only depends on the binaries being dumped in `~/software` and the reads_*fastq below. Let me know if there is anything I can do to help. Thanks a bunch!. Harold. ---. ``` python; ercc_fa = 'index/ERCC.fa'; ens_fa = 'index/Homo_sapiens.GRCh38.cdna.all.fa'; ens_ercc_fa = 'index/hs_ens_ercc.fa'; ens_ercc_sidx = 'index/hs_ens_ercc.sidx'. SALMON_PRE = '~/software/SalmonBeta-0.4.2_DebianSqueeze'; SALMON = 'LD_LIBRARY_PATH={0}/lib; {0}/bin/salmon'.format(SALMON_PRE). rule all:; input:; ens_ercc_fa,; ens_ercc_sidx,; 'output/salmon/quant.sf'. rule download_ens:; output:; ens_fa; params:; dl = 'ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule download_ercc:; output:; ercc_fa; params:; dl = 'http://bio.math.berkeley.edu/kallisto/transcriptomes/ERCC.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule merge_ercc:; input:; ens_fa,; ercc_fa; output:; ens_ercc_fa; shell:; 'cat {input[0]} {input[1]} > {output}'. rule sal_ens_ercc:; input:; ens_ercc_fa; output:; ens_ercc_sidx; threads: 20; shell:; '{SALMON} index -i {output} -p {threads} -t {input}'. rule salmon:; input:; 'reads_1.fastq',; 'reads_2.fastq',; ens_ercc_sidx; output:; 'output/salmon',; 'output/salmon/quant.sf'; shell:; '{SALMON} quant '; '-i {ens_ercc_sidx} '; '--libType IU '; '--output {output[0]} '; '-1 {input[0]} -2 {input[1]}'; ```. Finally, here are the reads:. `reads_1.fastq`:. ```; @SRR896663.1 FCC0AYTACXX:1:1101:1460:1869 length=100; NAAGTGCTTCATTGTCATCCAACTTCAACTCGTTGACTTTATCTATCAGTCCTTCAATGTCGCCCATACCAAGAAGTTTGCTAATAAAAGGCTGTGT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/12:1682,release,release-,1682,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/12,1,['release'],['release-']
Deployability,"p:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481dac12ac8cffd6d5d924699c5ad7e04.). Adjusting the fetchRapMap.sh script to use the SVER and EXPECTED_SHA256SUM variables back to their values in commit COMBINE-lab/salmon@cf07385f2164698eda5b9869dd4865fec747840d, then re-running the script, and recompiling produces no errors, and the tests all run. Hope that helps, and thanks for all your work in developing Salmon!. Best regards,; Patrick Reilly",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/418:1458,release,release,1458,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418,3,['release'],"['release', 'releases']"
Deployability,"parameters. The EffectiveLength though is 250 for all genes across all samples. I've used all four different versions of Salmon as listed below but I'm still getting the same similar mapping rate and the parameters at quant.sf though the values differ a bit from each Salmon version. **To Reproduce**; ### Steps and data to reproduce the behavior: for version 0.8. **First I took the genome fasta file and the gff3 file and made a transcriptome fasta file using Salmon:**; module load Cufflinks/2.2.1; gffread all.gff3 -g all.chrs.fasta -w MSU7_transcript.fasta. **I then indexed the transcript fasta file.**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. salmon index -t ~/data/genome/MSU7_transcript.fasta -i ~/data/genome/MSU7_transcript.index --type quasi -k 31. **I then run transcript abundance estimate pipeline for the raw-reads and the trimmed reads as follows:**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_old/${line} --seqBias --gcBias. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:1593,pipeline,pipeline,1593,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['pipeline'],['pipeline']
Deployability,"piled with Bioconda. I am now trying to get the latest version through Bioconda and with the same ""salmon quant"" command (See below) that works on the old version, I get a ""segmentation fault 11"" error and it never actually quantifies any reads. Do you know why this would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:1259,upgrade,upgrade,1259,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,1,['upgrade'],['upgrade']
Deployability,"pmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<ReadPair*>::internal_push(void const*, void (*)(ReadPair**, void const*)) [clone .constprop.1477]':; SalmonQuantifyAlig",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:2805,install,install,2805,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['install'],['install']
Deployability,"poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed time: 0.0107059s; ```; Specifically, please provide at least the following information:. * Which version of salmon was used? 1.1.0, 1.0.0 and 0.14.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? GitHub binary; * Which reference (e.g. transcriptome) was used? sample data from GitHub release; * Which read files were used? none; * Which which program options were used? -k 31 -i index -t sample_data/transcripts.fasta. **Expected behavior**; A clear and concise description of what you expected to happen.; I expected salmon 1.1.0 to run without a core-dump and produce similar results to 0.14.1. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Ubuntu 18.04.4 LTS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux firefly 5.3.0-40-generic #32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Using ""bcbio-nextgen"", with ""salmon 1.1.0"" installed by Anaconda: Removed this version because of core-dumps and installed the binary releases of ""salmon"" 1.1.0 then 0.41.1 from GitHub in /usr/local. Did stand-alone tests with sample data from the GitHub binary release.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/500:3346,install,installed,3346,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500,4,"['install', 'release']","['installed', 'release', 'releases']"
Deployability,"possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of downgrading of its dependencies. Linux nscc04 2.6.32-696.30.1.el6.x86_64 #1 SMP Fri May 18 11:50:44 EDT 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/286:1943,update,updated,1943,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286,1,['update'],['updated']
Deployability,problem in installing salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/453:11,install,installing,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453,1,['install'],['installing']
Deployability,"pts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}; **** Job ends ****; Wed Mar 8 11:37:36 EST 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee1073eac092487ac62314; [New Thread 41232]; [New Thread 41236]; [New Thread 41235]; [New Thread 41234]; Core was generated by `/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/b'.; Program terminated with signal 6, Aborted.; #0 0x0000003612832625 in ?? (); ""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/core.41232"" is a core file.; Please specify an executable to debug.; (gdb) q; ```. The SGE information shows that it basically reached 10.7 GB of RAM:. ```bash; $ qacct -j 9987275 -t 3; ==============================================================; qname shared.q; hostname compute-051.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-salmon_test.gsk_phaseII; jobnumber 9987275; taskid 3; account sge; priority 0; qsub_time Wed Mar 8 11:37:17 2017; start_time Wed Mar 8 11:37:31 2017; end_time Wed Mar 8 11:37:36 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 5; ru_utime 0.368; ru_stime 3.680; ru_maxrss 537668; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:25305,pipeline,pipeline,25305,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['pipeline'],['pipeline']
Deployability,"quences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during index ing. Further details can be found at https://salmon.readthedocs.io/en/latest/sal mon.html#preparing-transcriptome-indices-mapping-based-mode.; [2022-08-22 15:07:03.860] [jLog] [info] building index; out : transcripts_index; [2022-08-22 15:07:03.860] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers. [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Replaced 0 non-ATCG nuc leotides; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Clipped poly-A tails fr om 0 transcripts; wrote 0 cleaned references; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Filter size not provide d; estimating from number of distinct k-mers; [2022-08-22 15:07:03.866] [puff::index::jointLog] [info] ntHll estimated 47270 d istinct k-mers, setting filter size to 2^20; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1048576; Capacity = 2; Files:; transcripts_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1048576; Pass Filling Filtering; terminate called without an active exception; Aborted (core dumped). **To Reproduce**; Steps and data to reproduce the behavior:; salmon index -t contigs_for_salmon -i transcripts_index -k 31; my reads are paired end RNA-reads (rRNA REMOVED); My transcriptome is a 90 contigs resulted from reads assembly; Specifically, please provide at least the following information:. * Which version of salmon was used?; * ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?; 1.9.0 (latest). **Expected behavior**; use salmon index for Preparing transcriptome indices. **Desktop (please complete the following information):**; - OS: ubuntu 20.04.4 LTS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/795:1959,install,installed,1959,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/795,1,['install'],['installed']
Deployability,question about the transcriptome for salmon pipeline,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/773:44,pipeline,pipeline,44,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/773,1,['pipeline'],['pipeline']
Deployability,"r barcode and UMI tags in the alevin generated BAM/SAM (with the `--writeMappings` flag). We have been testing this out, and have been able to access all this information by parsing through the SAM file. However in the end our plan to use this with [Vireo](https://vireosnp.readthedocs.io/en/latest/index.html) and [cellSNP](https://github.com/single-cell-genetics/cellSNP) for genetic demultiplexing of samples didn't really work out, mainly because `alevin` generates a transcriptomic BAM, and `cellSNP` expects a genomic BAM and VCF. I tried a few different options for getting this to work, including (i) attempting to convert to a genomic BAM using [sam-xlate](https://github.com/mozack/ubu/wiki) (which didn't seem to work because `sam-xlate` is designed to convert in the other direction), and (ii) converting the VCF to transcriptomic coordinates, as suggested [here](https://github.com/single-cell-genetics/cellSNP/issues/14) by the `Vireo`/`cellSNP` authors (the VCF conversion seemed to work, but `cellSNP` still didn't match it to the BAM properly). For now, I think we are going to go back to using `Cell Ranger` in our pipeline, since this did work with `Vireo`/`cellSNP`, although was of course much slower than `alevin` and has issues with multi-mapping reads. If you have any other ideas please let me know too. However I also wanted to suggest that if there is any interest on your end in developing some sort of conversion tool (transcriptomic BAM -> genomic BAM) for `alevin` outputs, then I think this would be super useful for people, especially if these genetic demultiplexing tools become more widely used. (We have been getting very good demultiplexing performance with `Cell Ranger` + `Vireo`/`cellSNP`, and are planning to release some of our code as a small `Snakemake` pipeline for others to use, so if it were somehow possible to update this to use `alevin` in the future we would be very interested in this.). Thanks again for your help and previous responses on Slack.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/550:1302,pipeline,pipeline,1302,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/550,4,"['pipeline', 'release', 'update']","['pipeline', 'release', 'update']"
Deployability,"r command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-08-18 21:20:51.292295094 +0200; @@ -42,7 +42,7 @@; ${GAT_SOURCE_DIR}/external; ${GAT_SOURCE_DIR}/external/cereal/include; ${GAT_SOURCE_DIR}/external/install/include; -${GAT_SOURCE",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/11:1906,install,install,1906,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11,1,['install'],['install']
Deployability,"r message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:1651,release,release,1651,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['release'],['release']
Deployability,r/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../ex,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:1660,install,install,1660,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['install'],['install']
Deployability,"r/rlang_error>; Error in `[[<-`:; ! Cannot add new cells with [[<-; ---; Backtrace:; ▆; 1. ├─methods (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); 2. └─SeuratObject (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); Run rlang::last_trace(drop = FALSE) to see 1 hidden frame.; ```. I checked that Seurat has not changed the `sobj[[""ASSAYNAME""]] <- MYASSAYOBJECT` syntax in the same R session by following [this tutorial](https://satijalab.org/seurat/articles/multimodal_vignette) up to the line where the `adt` assay is added and confirmed that the resulting object had two assays present. I think this may be a versioning issue related to what types of objects can be added into layers (aka slots) in a Seurat object. For reference, here are some details of the objects involved:; ```; > class(brain); [1] ""Seurat""; attr(,""package""); [1] ""SeuratObject""; > class(image.data); [1] ""VisiumV2""; attr(,""package""); [1] ""Seurat""; ```. It is worth noting that I installed Salmon using the docker image found [here](https://hub.docker.com/r/combinelab/salmon) approximately three months ago. The version number I see is `1.10.3`. Below is my sessionInfo output as well. My best guess is that I have to adjust the object type for `image.data` here to something that can be coerced into a slot in the `brain` Seurat object, but I am not sure what object that should be. Let me know if I am making a simple mistake here too, I am quite rusty with the nuances of R. Thank you for your consideration and I hope to hear from the team soon!. ```; > sessionInfo(); R version 4.3.3 (2024-02-29); Platform: x86_64-conda-linux-gnu (64-bit); Running under: Ubuntu 22.04.4 LTS. Matrix products: default; BLAS/LAPACK: /home/chris/anaconda3/envs/r_and_python/lib/libopenblasp-r0.3.27.so; LAPACK version 3.12.0. locale:; [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ; [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 ; [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 ; [7] LC_PAPER=en_US.UTF-8 LC_NAME=C",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/942:1514,install,installed,1514,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/942,1,['install'],['installed']
Deployability,"ranscript (as it should).; The problem is that (at least for some transcripts) we're getting abundance estimates for the copy of a transcript that's on a contig, but not estimates for the copy on the regular chromosome.; In short, it's picking the wrong duplicate. What we're after is a way to get it to prioritize the copies on chromosomes over the copies on contigs. **To Reproduce**. * Salmon version 0.10.2; * Salmon installed through bioconda.; * Reference grch38. All cdnas and ncrnas.; * Reads were single-end; * Program options: salmon quant -p 48 --seqBias --gcBias --biasSpeedSamp 5 -l A . **Expected behavior**; That the selected duplicate reference transcript would be the one on the chromosome, rather than the contig.; In particular, the LTA gene is of interest to us. In grch38, the two ids are [ENSG00000226979](https://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=ENSG00000226979;r=6:31572054-31574324) (on chr6) and [ENSG00000231408](https://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=ENSG00000231408;r=CHR_HSCHR6_MHC_MANN_CTG1:31611502-31613772) (on CHR_HSCHR6_MHC_MANN_CTG1). Each of the transcripts of these two genes has an identical copy in the other gene. The transcripts for both genes appear in the duplicate_clusters.tsv file in the salmon index directory. ; When we quant, only transcripts of ENSG00000231408 appear in the output. We would rather that ENSG00000226979 be the one to appear. What is the best way forward to accomplish this? Should we just remove the contig transcripts from the reference?. **Desktop:**; - OS: Centos Linux; - `uname -a`: 3.10.0-862.2.3.el7.x86_64 #1 SMP Wed May 9 18:05:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; - `lsb_release -a`: LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.5.1804 (Core); Release: 7.5.1804; Codename: Core",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/249:2244,release,release,2244,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/249,2,"['Release', 'release']","['Release', 'release']"
Deployability,"rded fragments. The difference is that every fragment can have many potential mappings. The number you are looking at is the total number of attempted alignments that failed to achieve the threshold score. Luckily, salmon reports both numbers. The number of fragments for which all alignments failed to reach the score threshold is 4,196,417; given in aux_info.json by ""num_fragments_filtered_vm"": 4196417. One point to note is that these are all fragments for which mapping is attempted (they had at least one k-mer match the reference), but no alignment was valid up to the threshold. You could try running the quantification again with --softclip to allow softclipping of the reads and see if any considerable fraction of these 4196417 failed to align because they overhang the annotated transcripts or contain adapters etc. Nonetheless, even if all of these mapped, the rate would still be ~72%. The remainder of the reads didn't even have a matching k-mer in common with the reference transcriptome, which means they are exceedingly unlikely to have come from the transcripts that were indexed. Further explanation of what these metadata numbers mean would be very helpful to me. Also useful would be a statistic (or more than one statistic) that fully categorises the read alignments or non-alignments. **Desktop (please complete the following information):**; - OS: Debian; - `uname-a`: Linux musculus 6.7.9-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.7.9-2 (2024-03-13) x86_64 GNU/Linux; - `lsb_release -a`; ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux trixie/sid; Release: n/a; Codename: trixie; ```. **Additional context**. I'm not really after an explanation of why read mapping rates are low in my specific case, I'm after an explanation *in the documentation* of why read mapping rates from Salmon are generally low. Update: I've just confirmed that trimming doesn't have any substantial impact on the results for our first sample [AG1232_001_MR1].",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/925:9539,Release,Release,9539,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925,2,"['Release', 'Update']","['Release', 'Update']"
Deployability,"rgets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16:57:31.421] [jointLog] [warning] Found 539897 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 16:57:31.421] [jointLog] [info] Mapping rate = 70.9532%. [2018-12-05 16:57:31.421] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 16:57:35.529] [alevinLog] [info] Starting optimizer. Analyzed 3856 cells (100% of all).; [2018-12-05 17:04:51.878] [alevinLog] [info] Total 47125847 UMI after deduplicating.; [2018-12-05 17:04:51.928] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-05 17:05:04.064] [alevinLog] [info] Starting Import of the gene count matrix.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **Desktop (please complete the following information):**; Ubuntu 14.04 LTS; 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty. **Additional context**; If I include only a subset of the fastq files, the command completes with no error. I have succeeded in running up to 3 of the files (3 *I1*, 3 *I2* and 3 *RA* files), but got the above-mentioned error when running it on 4 or more fastq files. I read that std::bad_alloc was usually caused by memory issues. The system I am using has 128Gb of RAM available. Thank you for your help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:14851,Release,Release,14851,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['Release'],['Release']
Deployability,ripts/v1_10x/run.sh salmon alevin -lISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv. TEMPDIR is /tmp/tmp.WnzMm7GQBO; Running command [salmon alevin -lISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv -1 /tmp/tmp.WnzMm7GQBO/p1.fa -2 /tmp/tmp.WnzMm7GQBO/p2.fa -r pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-002-chunk-000.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; Logs will be written to alevin_output/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { ../hg_transcriptome/tx2gene.tsv }; ### [ mates1 ] => { /tmp/tmp.WnzMm7GQBO/p1.fa }; ### [ mates2 ] => { /tmp/tmp.WnzMm7GQBO/p2.fa }; ### [ unmatedReads ] => { pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-CGCTATCC_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-GTTGCATG_lane-002-chunk-000.fastq.gz pbmc3k_fastqs/read-I1_si-TAAATCGT_lane-001-chunk-001.fastq.gz pbmc3k_fastqs/read-I1_si-TAAAT,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:9895,upgrade,upgrades,9895,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['upgrade'],['upgrades']
Deployability,"rity-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:3989,integrat,integration,3989,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['integrat'],['integration']
Deployability,"rliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [inf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:7167,release,release,7167,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['release'],['release']
Deployability,"ror.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:1982,install,install,1982,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['install'],['install']
Deployability,"rray + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which which program options were used? see above. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. I am thinking this is an issue w/ building the index. If there is a pre-made index w/ or w/o decoys for mouse that you can direct me to I would appreciate it. Following the link posted in the salmon documentation about pre-made index's is not helpful and I am not sure how to download them from there. A simpler option would be appreciated. . Thanks!. UPDATE: This was solved by using an index generated by a friend So apparently the issue is w/ building the index.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:8937,UPDATE,UPDATE,8937,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['UPDATE'],['UPDATE']
Deployability,"rrespond to multiple sequences. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Merging quantifications with Salmon:; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; 2. Searching for a specific gene ID in the quantification file:; grep ""k141_1346622_1"" temp/salmon/L1EHI0900465--Q_S1_N6.quant/quant.sf; # Multiple lines are found for this gene ID; 3. Searching for the same gene ID in the resulting TPM file:; grep ""k141_1346622_1"" result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; #No results are found, which is unexpected. <img width=""1166"" alt=""截屏2024-01-30 21 56 23"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/b77e5aa4-aadc-4a17-bdde-b998ce14d72c"">; <img width=""1056"" alt=""截屏2024-01-30 21 55 28"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/877cfa9b-0484-4937-87b2-e987679e09e3"">. Specifically, please provide at least the following information:. * Which version of salmon was used? salmon 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon -y; * Which reference (e.g. transcriptome) was used? metagenome data; * Which read files were used? L1EHI0900465--Q_S1_N6.quant/; * Which which program options were used?; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM. **Expected behavior**; A clear and concise description of what you expected to happen.; I hope to keep all the gene IDs and for those who contains more than one line, take average values for each gene ID. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/910:1344,install,installed,1344,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/910,2,['install'],"['install', 'installed']"
Deployability,"ruct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_INSTALL_PREFIX:PATH=/gpfs/software/salmon/xeonmax/gcc13.2.0/1.10.3. make clean; make -j 25; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? **1.10.3**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **compiled**. **Expected behavior**; A successful build. **Desktop (please complete the following information):**; - OS: **Rocky Linux 9.4**; - Version: **Linux xm013 5.14.0-427.26.1.el9_4.x86_64 #1 SMP PREEMPT_DYNAMIC Tue Jul 23 16:00:21 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux**. **Additional context**; std err file attached.; [build.err.gz](https://github.com/user-attachments/files/16677963/build.err.gz)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:3705,install,installed,3705,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['install'],['installed']
Deployability,"s (i checked in the duplicate_clusters.tsv file and in total there are 5 transcript in that cluster), am I right? does salmon work like this?; Does it explain the little differences I see in the transcript quantification?; Correct me if I'm wrong, salmon tries to assign the reads as equally as possible to every duplicate transcript, but of course if we have for example 21 reads and 4 transcript, they will have respectively 5,5,5 and 6 reads, which can explain the small differences I see. ; Is it correct?; (anyway, in this way i can explain the first two genes which have respectively a read count of 3639 and 3631, but for the last two genes a difference of 32 reads sounds too big to me) . This can be a problem for me, since I belive that the issue of the duplicate transcripts derives from haplotypic genes, such as RPS18 which has more than one ENSG ID (i.e. ENSG00000226225 and ENSG00000231500). ENSG00000231500 is absent in the pipeline without the flag, while in the pipeline with the flag the expression level is ""splitted"" between the two genes (which are actually only one gene). both the results I obtain don't represent the ""reality"".; I'm afraid I will have to remove all the ""ambigous"" genes from the reference, keeping only the ones with the ""canonical"" ENSG ID; since I'm doing a ""pan-genes"" analysis, and the number of duplicate transcript is ~11,000, this can be painful...; Has anyone ever encountered a problem like this? Is someone using a reference transcriptome that is already ""clean"" from haplotypic genes? also, do the 11k duplicate genes derive only from haplytipic genes, or there are other strange biological things that I am not considering?. Last question (which is not about duplicate transcript but about tximport...tell me if it is off topic and i will ask elsewhere); For the gene ENSG00000231500.6, tximport reports an expression of 164.677488, while the sum of the TPM of the transcript of that gene is 163.659568 (a very small difference, but still a differ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/310:2677,pipeline,pipeline,2677,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/310,2,['pipeline'],['pipeline']
Deployability,"s the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (buik mode). **Describe the bug**; A clear and concise description of what the bug is.; I compiled the code (salmon v1.4.0) and produced the executable. Then when I try to ""salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode"" (transcriptome and genome from your tutorial: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/), a segmentation fault occurs. (gdb backtrack is provided below.). **To Reproduce**; Steps and data to reproduce the behavior:. 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /cmake version 3.13.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoys.t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:1002,release,releases,1002,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,1,['release'],['releases']
Deployability,"sModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:2093,install,install,2093,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['install'],['install']
Deployability,salmon 1.8.0: binary release does not come with proper file permissions,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/761:21,release,release,21,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/761,1,['release'],['release']
Deployability,salmon v1.4.0 executable compiled using release mode(-DCMAKE_BUILD_TYPE=Release) produce segmentation fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:40,release,release,40,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,2,"['Release', 'release']","['Release', 'release']"
Deployability,"so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda, official install order code; * Which reference (e.g. transcriptome) was used?; Arabidopsis (not important for the issue); * Which read files were used?; Arabidopsis (not important for the issue); * Which which program options were used?; Default. **Expected behavior**; I just want it work. **Screenshots**; <img width=""868"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/83922432/3913fbea-a0a7-4fb4-8aa1-4efef8b0990b"">. **Desktop (please complete the following information):**; - OS: Windows 11 => WSL => Ubuntu 22.04.4 LTS (GNU/Linux 5.10.16.3-microsoft-standard-WSL2 x86_64)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/927:1968,install,installed,1968,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927,2,['install'],"['install', 'installed']"
Deployability,"specially appreciated!. I was wondering what the reason for setting an upper limit on the barcode length in alevin is - would longer barcodes affect the computation in some manner? We are working with barcodes of length 27, which are incompatible with the hardcoded upper barcode length limit [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). I manually raised the limit on a modified alevin version, and the final output looks as expected, so if there is no risk that I am unaware of, would you consider raising or removing the barcode length limit altogether?. Thank you for you help!. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Using the manual barcode and UMI specification with `--end`, `--barcodeLength`, and `--umiLength` fails for barcodes longer than 20 with the error message:; ```; Barcode length (27) was not in the required length range [1, 20].; ```; The barcode length upper limit is hardcoded [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). **To Reproduce**; In Salmon 1.0.0, run `salmon alevin [...] --end 5 --barcodeLength 27 --umiLength 8` (or any `barcodeLength` value above 20). * Which version of salmon was used? 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? not relevant; * Which read files were used? not relevant; * Which which program options were used? `--end 5 --barcodeLength 27 --umiLength 8`. **Expected behavior**; Ideally, barcode longer than 20 would be processed as normal. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Mac OS X; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`] 10.14.6 (18G103). **Additional context**; See top of post",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/445:1462,install,installed,1462,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/445,1,['install'],['installed']
Deployability,"st they differ dramatically (e.g. psbI or ATCG00080: Salmon: 24; FeatureCounts: 9277). Looking at the mapping, I would say that FeatureCounts is definitely closer to reality here. ; When I dig deeper, it seems that the genes with the biggest difference between the two analyses are very small genes (e.g. psbI is only 111bp) or tRNAs (which should be removed by the prep method; these would be excluded from the analysis anyway). ; I have now tried several things: I used the nf-core/rnaseq pipeline, skipping the alignment part (--skip_alignment) and using Salmon as a pseudo-aligner (--pseudo_aligner: salmon), which gave results for the chloroplast reads that are quite close to the alignment-based determination by Salmon (e.g. psbI: 372).; I also tried using the pseudo-alignment without the pipeline (indexing: salmon index -t input.fa -r transcripts_index -k 31 pseudomapping: salmon quant -i transcripts_index -l A -1 sequencingdata_R1.fastq.gz -2 sequencingdata_R2.fastq.gz --validate mapping - o transcripts.quant). The result was that the chloroplast numbers were now roughly between the salmon counts from the pipeline and the counts from the pipeline with FeatureCounts. I skipped the trimming part here, so differences are to be expected, but they still seem very high (e.g. psbI 2677).; First, I have no idea where the difference between counts with and without pipelines comes from. I tried to find out what parameters the pipeline uses for Salmon, but I didn't find anything special there.; And secondly, I wonder if Salmon has somehow problems with the chloroplast genome (super small, polycistronic and monocistronic units, partially small genes, high expression levels)? I know there are publications where Salmon has been used for chloroplast read counts, but I haven't found any information about their parameters. I would be super happy if you guys could help me here. I could also just work with FeatureCounts, but I would like to understand my problems. All the best; Florian",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/798:1683,pipeline,pipeline,1683,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798,4,['pipeline'],"['pipeline', 'pipelines']"
Deployability,"st.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/SalmonQuantMerge.cpp.o CMakeFiles/salmon.dir/ProgramOptionsGenerator.cpp.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/ONTAlignmentModel.cpp.o CMakeFiles/salmon.dir/AlignmentCommon.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o CMakeFiles/salmon.dir/BAMUtils.cpp.o -o salmon -L/vol/mgx-sw/src/tools/salmon/lib -L/vol/mgx-sw/lib -L/vol/mgx-sw/src/tools/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" ../external/pufferfish/src/libpuffer.a libsalmon_core.a ../external/pufferfish/external/twopaco/graphconstructor/libtwopaco.a ../external/pufferfish/external/twopaco/graphdump/libgraphdump.a ../external/pufferfish/external/ntcard/libntcard.a -lgff /usr/lib/x86_64-linux-gnu/libboost_iostreams.a /usr/lib/x86_64-linux-gnu/libboost_filesystem.a /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_timer.a /usr/lib/x86_64-linux-gnu/libboost_chrono.a /usr/lib/x86_64-linux-gnu/libboost_program_options.a /usr/lib/x86_64-linux-gnu/libboost_locale.a ../../external/install/lib/libstaden-read.a /usr/lib/x86_64-linux-gnu/libcurl.a /usr/lib/x86_64-linux-gnu/libz.a -lm /usr/lib/x86_64-linux-gnu/liblzma.a /usr/lib/x86_64-linux-gnu/libbz2.a -lgomp ../external/pufferfish/src/libksw2pp.a libalevin_core.a ../../external/install/lib/libjemalloc.a -ltbbmalloc_proxy -ltbbmalloc -ltbb -lrt -ldl /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_chrono.a /usr/lib/x86_64-linux-gnu/libboost_thread.a -pthread /usr/lib/x86_64-linux-gnu/libboost_atomic.a ; ```. I also tried compiling without `-DFETCH_BOOST=TRUE`, i.e. boost packages installed via apt-get, but the same error occurs.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/664:3254,install,install,3254,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664,3,['install'],"['install', 'installed']"
Deployability,"stall/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.di",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:2583,install,install,2583,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['install'],['install']
Deployability,stdc++ -Wno-deprecated-register -Wno-unused-local-typedefs -L/opt/rh/devtoolset-2/root/usr/lib64 -L/opt/rh/devtoolset-2/root/usr/lib CMakeFiles/salmon.dir/QSufSort.c.o CMakeFiles/salmon.dir/is.c.o CMakeFiles/salmon.dir/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:1442,install,install,1442,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['install'],['install']
Deployability,"t even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000415118.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000632684.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000631435.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:3259,release,releases,3259,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,"t_mapped"": 55.82249021745959,; mapped/salmon_MS0.33_AG1232_015_FI3/aux_info/meta_info.json: ""percent_mapped"": 55.80153947588767,; mapped/salmon_MS0.33_AG1232_016_FG1/aux_info/meta_info.json: ""percent_mapped"": 49.49543448190936,; mapped/salmon_MS0.33_AG1232_017_FG2/aux_info/meta_info.json: ""percent_mapped"": 55.19039678416574,; mapped/salmon_MS0.33_AG1232_018_FG3/aux_info/meta_info.json: ""percent_mapped"": 50.730150343757518,; ```. The [readthedocs](https://salmon.readthedocs.io/en/latest/file_formats.html#meta-information) link for Salmon suggests, ""Most of the information recorded in this file should be self-descriptive"", but this is not the case for me. **To Reproduce**; Steps and data to reproduce the behavior:. 1. Map reads; 2. Observe consistent mapping rates below 80%. Specifically, please provide at least the following information:. * Which version of salmon was used? **salmon (selective-alignment-based) v1.10.2**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **package installation via Debian**; * Which reference (e.g. transcriptome) was used? **transcriptome**; * Which read files were used? **NovaSeq X Plus; read length 150bp x 2; untrimmed **; * Which which program options were used?. ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_${sampleName};; done; ```. Making Salmon less stringent:; ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --minScoreFraction 0.33 --recoverOrphans \; --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_MS0.33_${sam",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/925:4918,install,installed,4918,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925,2,['install'],"['installation', 'installed']"
Deployability,"table, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz. * Which read files were used?; Files used for salmon quant are attached (*fq.gz). * Which which program options were used?; None specifically was invoked to run salmon.; I am running salmon on a cluster (Linux 3.10.0-957.el7.x86_64 x86_64). **Expected behavior**; A clear and concise description of what you expected to happen. I expect the salmon quant to align and quantify the reads. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 1) Attaching the screenshot in the zipped folder.; 2) Attaching the screenshot of the contents in the folder containing the indexed file. The versionInfo.json file is present in that folder. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux 3.10.0-957.el7.x86_64 x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux compute-106.cm.cluster 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. lsb-release:. LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.6.1810 (Core); Release: 7.6.1810; Codename: Core. **Additional context**; Add any other context about the problem here.; [Files.zip](https://github.com/COMBINE-lab/salmon/files/5079070/Files.zip)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/561:3202,release,release,3202,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561,3,"['Release', 'release']","['Release', 'release']"
Deployability,"tem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provided in the distribution:. ```; gunzip -c sample_data.tgz | (cd /tmp; tar -xf -); module load salmon; cd /tmp/sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type puff; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant. ```; the output line:. ```; [2020-06-23 13:58:50.657] [jointLog] [warning] Only 10000 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings.; ```. is emitted in ye",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/541:1680,install,install,1680,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541,1,['install'],['install']
Deployability,the installation of salmon index cannot be completed,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/755:4,install,installation,4,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/755,1,['install'],['installation']
Deployability,"the selective alignment algorithm Salmon employs is not well-suited for long reads (#602), and therefore the software needs to be run in alignment mode for accurate counting. My main question then concerns the optimal parameters for the upstream alignment step. The ONT community seems to have settled on using minimap2 for this, but beyond that the guidance gets a bit murky... The [minimap2](https://github.com/lh3/minimap2/#map-long-splice) documentation suggests the following command for mapping long RNA reads:. `minimap2 -ax splice:hq -uf ref.fa reads.fq > aln.sam`. This approach seems to employ a splicing aware algorithm against a genomic reference, using canonical splicing signals to help map the transcripts. However, this method doesn't seem to be applicable to Salmon given the requirement that the reads are aligned directly to the transcriptome (hence the need to account for splicing with '_-ac splice_' is lost). An alternative approach I've seen (i.e., the one used in ONT's own DGE [pipeline](https://github.com/nanoporetech/pipeline-transcriptome-de)) is to use minimap2 to align to the transcriptome reference but to retain a large number of secondary mappings (-N 100 in minimap2):. `minimap2 -ax map-ont -N 100 transcriptome.fa reads.fq`. This makes more sense in terms of the _-ax_ preset used, but I guess I'm just wondering then what the optimal input for Salmon would be in order to get the most accurate count data? I know secondary mappings are important for the algorithm to calculate uncertainty / maximum likelihood, but is there an recommend number of these to retain? The logic behind allowing for a high number of secondary alignments when using a transcriptome reference is to account for the high similarity among isoforms. From a high-level view I could see how this might be problematic though, depending on how Salmon actually uses the alternate mappings (i.e., is it just for the statistics or does it affect the counts as well?). . I've also seen groups to",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/790:1161,pipeline,pipeline,1161,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/790,1,['pipeline'],['pipeline']
Deployability,"turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - $ lsb_release -a; bash: lsb_release: command not found...; (base) [aedavids@mustard bin]$ uname -a ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Add any other context a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/677:2197,install,installed,2197,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677,1,['install'],['installed']
Deployability,"tw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}; **** Job ends ****; Wed Mar 8 11:37:36 EST 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee1073eac092487ac62314; [New Thread 41232]; [New Thread 41236]; [New Thread 41235]; [New Thread 41234]; Core was generated by `/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/b'.; Program terminated with signal 6, Aborted.; #0 0x0000003612832625 in ?? (); ""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/core.41232"" is a core file.; Please specify an executable to debug.; (gdb) q; ```. The SGE information shows that it basically reached 10.7 GB of RAM:. ```bash; $ qacct -j 9987275 -t 3; ==============================================================; qname shared.q; hostname compute-051.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-salmon_test.gsk_phaseII; jobnumber 9987275; taskid 3; account sge; priority 0; qsub_time Wed Mar 8 11:37:17 2017; start_time Wed Mar 8 11:37:31 2017; end_time Wed Mar 8 11:37:36 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:25092,install,install,25092,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['install'],['install']
Deployability,"ude/pthread.h:33,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr-default.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr.h:148,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ext/atomicity.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/ios_base.h:39,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:1336,install,install,1336,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['install'],['install']
Deployability,"ug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; The cDNA fasta file contains 176241 ENSTs,but the result file only contains 166667 ENSTs.; **To Reproduce**; Steps and data to reproduce the behavior:; The steps and data are as follows. ; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.9.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used? ; Homo_sapiens.GRCh38.cdna.all.fa obtained from Ensembl release 83; * Which read files were used? ; GSE41009; * Which which program options were used? ; Building index: salmon index -t filepath/Homo_sapiens.GRCh38.cdna.all.fa -i V83-homo_index --type quasi -k 31; Quantification: salmon quant -p 50 -i filepath/V83-homo_index -l IU -1 ESC-SRR574820_1.fastq ESC-SRR574821_1.fastq -2 ESC-SRR574820_2.fastq ESC-SRR574821_2.fastq -o ESC-quantification. **Expected behavior**; A clear and concise description of what you expected to happen.; The result file should contain all the ENSTs existed in cDNA fasta file.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; uname -a; Linux mn1 2.6.32-431.29.2.2.ky3.1.x86_64 #1 SMP Thu Sep 25 10:15:09 CST 2014 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	NeoKylin; Description:	NeoKylin release 3.2 (Carambola); Release:	3.2; Codename:	Carambola; **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/255:1881,release,release,1881,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255,2,"['Release', 'release']","['Release', 'release']"
Deployability,"ugh bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies us",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:1574,release,releases,1574,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,update single-cell protocol documentation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/723:0,update,update,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/723,1,['update'],['update']
Deployability,update stadenio and htscodecs,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/916:0,update,update,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/916,1,['update'],['update']
Deployability,upgrade CMakeLists.txt to use external copies of dependencies & no downloading,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/19:0,upgrade,upgrade,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19,1,['upgrade'],['upgrade']
Deployability,"vin (single-cell mode)?**; Alevin; **Describe the bug**; A clear and concise description of what the bug is.; Reanalyzing published Drop-Seq data the alevin analysis results in drastically fewer barcodes accepted than the published dataset. Published dataset contains 3000 CBs for the specific sample (authors report that 70% of [these] putative cells from WT mice met QC criteria), alevin result contains 459 CBs.; A similar highly abbreviated CB result was obtained with reanalysis of SRR8889412. **To Reproduce**; Steps and data to reproduce the behavior:. Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; Publication: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6925218/#; Specific Sample: https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3720936. Alevin was run using no special parameters with the --dropseq flags. The only significant protocol deviation was in index construction (see below). Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Salmon was run in stock docker container; * Which reference (e.g. transcriptome) was used?; Full decoy Index generated on Gencode M25 per Alevin Velocity tutorial with a k=17 (dataset has 50bp R2 Reads); Introns were extracted with 49bp flanking sequence. ; ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.annotation.gtf.gz. * Which read files were used?; Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; * Which which program options were used?; --dropseq -l ISR. **Expected behavior**; A clear and concise description of what you expected to happen.; Cell calls should be ballpark similar to published result (3000 original vs. 459 alevin). **Tar of Alevin Output directory**; [WT01_P7_WT_Cerebellum_alevin.output.tar.gz](https://github.com/COMBINE-lab/salmon/files/5953855/WT01_P7_WT_Cerebellum_alevin.output.tar.gz)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/625:1118,install,installed,1118,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/625,1,['install'],['installed']
Deployability,"vin-tutorial/2018/output-format/](url) . It's the ""Reading Alevin’s bfh (big freaking hash) file"" section, where there are just 2 lines I should run. The problem is on the second line, ""parser.read_bfh()"" function. It throws me a `pandas.errors.ParserError: Error tokenizing data. C error: Expected 1 fields in line 110446, saw 20` . I tried diagnosing the problem and looked into the input bfh.txt file. The problem wasn't just line 110447, but many other lines that had more than 1 field. So the real question breaks down into: should the bfh.txt file have only 1 field per row (line)? If this is the case, then the input bfh.txt file is problematic. If not, then the parser function is problematic, as it should account for more than 1 field. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * 1.4.0; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * conda create -n salmon -c conda-forge -c bioconda salmon; conda activate salmon. * Which reference (e.g. transcriptome) was used?; * generated index via ""Protein-coding transcript sequences"" here : https://www.gencodegenes.org/human/ ; * generated the txp2gene.tsv file via ""Comprehensive Gene Annotation, Region: PRI"" here: ; https://www.gencodegenes.org/human/release_37lift37.html. * Which read files were used?; * 5k_pbmc FASTQ file from 10x: https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_v3; ; * Which program options were used?; `salmon alevin -l ISR -1 5k_pbmc_v3_S1_L001_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz -2 5k_pbmc_v3_S1_L001_R2_001.fastq.gz 5k_pbmc_v3_S1_L002_R2_001.fastq.gz 5k_pbmc_v3_S1_L003_R2_001.fastq.gz --chromiumV3 -i index -p 10 -o alevin_output --tgMap txp2gene.tsv --dumpBfh --noDedup --dumpBarcodeEq; `. **Expected behavior**; The bfh.txt file should be parsed. In other words, the li",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/650:1157,install,installed,1157,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650,1,['install'],['installed']
Deployability,"vin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [this](https://github.com/COMBINE-lab/salmon/releases/tag/v1.5.2) binary; * Which reference (e.g. transcriptome) was used? Human reference (GRCh38) (from the alevin-fry tutorial [here](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz)); * Which read files were used? See attached subsampled sub_R1.fastq.gz and sub_R2.fastq.gz from one sample as representative reads.; * Which which program options were used? See above snakemake rule code for program options, which closely follow the options used in the alevin-fry tutorial. **Expected behavior**; A clear and concise description of what you expected to happen. I expected my reads to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:4648,install,installed,4648,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['install'],['installed']
Deployability,"warnings in the form of '[warning] len : *, but txp.RefLenght : *' appeared in the running log.; How did this occurred? Will this affect the quantification?; salmon version : v1.0.0; reference genome: ensembl GRCh38 release 96; ****gentrome and decoy generating command:****; grep ""^>"" $home/Ensembl_human_v96/Homo_sapiens.GRCh38.dna.primary_assembly.fa | cut -d "" "" -f 1 > decoys_new.txt; sed -i.bak -e 's/>//g' decoys_new.txt; cat $home/Ensembl_human_v96/Homo_sapiens.GRCh38_v96.cdna.all.fa $home/Ensembl_human_v96/Homo_sapiens.GRCh38.dna.primary_assembly.fa > $home/Ensembl_human_v96/gentrome.fa.gz; ; ****salmon index command:****; salmon index -t $home/Ensembl_human_v96/gentrome.fa.gz -d ; $home/Ensembl_human_v96/decoys.txt -p 12 -i ${home}/NGS/salmon_index_human_v96. ****salmon quant command:****; 	salmon quant -i ${home_path}/NGS/salmon_index_human_v96 -l A \; 	-1 ${fastq1} -2 ${fastq2} --validateMappings -p 12 --gcBias \; 	-o $count_path/${sample_name} ; ![image](https://user-images.githubusercontent.com/51859749/69779623-8f70bc80-11e3-11ea-9c94-6be4b9819d28.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/457:216,release,release,216,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/457,1,['release'],['release']
Deployability,"when I run cmake I get: . Cannot find source file:; [...]salmon-0.9.1/external/install/src/rapmap/RapMapFileSystem.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx; CMake Error at src/CMakeLists.txt:120 (add_executable):; Cannot find source file:; [...]/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx. Apart from that the build tries to download libgff, although libgf-dev is installed - it fails because it requires curl, which is not installed - i.e. that should also be tested for. System: Debian GNU/Linux (unstable), amd64 . Best, ; Gert",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/181:79,install,install,79,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181,4,['install'],"['install', 'installed']"
Deployability,"whole pipeline runs without problems and the mapping looks good. When I compare the number of reads between Salmon and FeatureCounts, the results are pretty much the same for the nucleus, but for the chloroplast they differ dramatically (e.g. psbI or ATCG00080: Salmon: 24; FeatureCounts: 9277). Looking at the mapping, I would say that FeatureCounts is definitely closer to reality here. ; When I dig deeper, it seems that the genes with the biggest difference between the two analyses are very small genes (e.g. psbI is only 111bp) or tRNAs (which should be removed by the prep method; these would be excluded from the analysis anyway). ; I have now tried several things: I used the nf-core/rnaseq pipeline, skipping the alignment part (--skip_alignment) and using Salmon as a pseudo-aligner (--pseudo_aligner: salmon), which gave results for the chloroplast reads that are quite close to the alignment-based determination by Salmon (e.g. psbI: 372).; I also tried using the pseudo-alignment without the pipeline (indexing: salmon index -t input.fa -r transcripts_index -k 31 pseudomapping: salmon quant -i transcripts_index -l A -1 sequencingdata_R1.fastq.gz -2 sequencingdata_R2.fastq.gz --validate mapping - o transcripts.quant). The result was that the chloroplast numbers were now roughly between the salmon counts from the pipeline and the counts from the pipeline with FeatureCounts. I skipped the trimming part here, so differences are to be expected, but they still seem very high (e.g. psbI 2677).; First, I have no idea where the difference between counts with and without pipelines comes from. I tried to find out what parameters the pipeline uses for Salmon, but I didn't find anything special there.; And secondly, I wonder if Salmon has somehow problems with the chloroplast genome (super small, polycistronic and monocistronic units, partially small genes, high expression levels)? I know there are publications where Salmon has been used for chloroplast read counts, but I haven't ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/798:1358,pipeline,pipeline,1358,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798,1,['pipeline'],['pipeline']
Deployability,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:4503,install,install-sh,4503,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['install'],['install-sh']
Deployability,"xt -p 12 -i salmon_index --gencode"" (transcriptome and genome from your tutorial: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/), a segmentation fault occurs. (gdb backtrack is provided below.). **To Reproduce**; Steps and data to reproduce the behavior:. 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /cmake version 3.13.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://use",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:1349,Release,Release,1349,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,1,['Release'],['Release']
Deployability,"xz-5.2.0 is no longer available on tukaani.org. More generally, this is the source of future issues (next one with the next release of xz, since no archiving of previous releases on tukaani.org)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/23:124,release,release,124,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/23,2,['release'],"['release', 'releases']"
Deployability,"y related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; The alignments to two partially overlapping transcripts suggest that only one of the transcripts is expressed, but salmon is assigning the majority of these reads to the other transcript. Even ignoring coverage differences that suggest that transcript ENST00000364953.1 is the source of these reads, this transcript is the only one of the two with unambiguous alignments, and so I would expect salmon to count the rest of the reads for this transcript. I tried quantifying this same bam with eXpress, and it produces the expected result of counting all the reads for transcript ENST00000364953.1. The alignments were generated with STAR, aligning to the GRCh38 genome and using STAR's transcriptome bam output (using gencode v35 main annotations). I'm happy to provide the small bam containing these alignments in transcriptome space, but I don't seem to be able to upload this here. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? GRCh38/gencode v35; * Which read files were used?; * Which which program options were used? -l 'U'. **Expected behavior**; salmon counting all the reads for transcript ENST00000364953.1. **Screenshots**; <img width=""998"" alt=""salmon_unexpected_counts"" src=""https://user-images.githubusercontent.com/17803131/102898647-cf7e8f00-4437-11eb-90bb-37b8498ba333.png"">. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version ; Linux 4.15.0-88-generic #88-Ubuntu SMP Tue Feb 11 20:11:34 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/605:1187,install,installed,1187,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/605,2,"['Release', 'install']","['Release', 'installed']"
Deployability,"y/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-060/job_scripts/9987283: line 31: 1629 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}; **** Job ends ****; Wed Mar 8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee10",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:29872,pipeline,pipeline,29872,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['pipeline'],['pipeline']
Deployability,"yAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libjemalloc.a -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib""; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<UnpairedRead*>::internal_push(void const*, void (*)(UnpairedRead**, void const*)) [clone .constprop.1465]':; SalmonQuantifyAlignments.cpp:(.text+0x136d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o: In function `tbb::strict_ppl::internal::concurrent_queue_base_v3<ReadPair*>::internal_push(void const*, void (*)(ReadPair**, void const*)) [clone .constprop.1477]':; SalmonQuantifyAlignments.cpp:(.text+0x161d): undefined reference to `tbb::internal::throw_exception_v4(tbb::internal::exception_id)'; ```. I'm using ; gcc 4.8.2; boost 1.5.7; icc 15.0.0 20140723",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:2985,install,install,2985,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,2,['install'],['install']
Deployability,"ze = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] done; ```; (taken from the terminal as the logfile is empty, and the current time is 12:54 pm = >3 hr run time so far). **To Reproduce**; I ran the following command:. ```; salmon quant \; --geneMap Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: via singularity; while running manually to troubleshoot: conda.; * Which reference (e.g. transcriptome) was used? Homo_sapiens.GRCh38 transcriptome + genome as a 'gentrome'; * Which read files were used? newly sequenced bulk RNAseq reads. **Expected behavior**; All samples with similar numbers of reads using the same index to finish in roughly the same amount of time. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Pop!_OS 22.04 LTS x86_64 [Linux]; - Version: ; ``` ; $ uname -a; Linux pop-os 6.0.2-76060002-generic #202210150739~1666289067~22.04~fe0ce53 SMP PREEMPT_DYNAMIC Thu O x86_64 x86_64 x86_64 GNU/Linux. $lsb_release -a; No LSB modules are available.; Distributor ID:	Pop; Description:	Pop!_OS 22.04 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; - I can't share these reads publicly but might be able to share personally (but I'd have",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:11177,install,installed,11177,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['install'],['installed']
Deployability,"} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake_Coding_Style; [2] Asking the cmake code formatter: https://stackoverflow.com/questions/41446408/is-there-any-utility-that-can-reformat-a-cmake-file; [3] cmake code formatter: https://github.com/cheshirekow/cmake_format; [4] cmake lint: https://github.com/richq/cmake-lint",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/276:1499,install,install,1499,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276,3,['install'],['install']
Energy Efficiency," ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:2725,power,powers,2725,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,2,['power'],['powers']
Energy Efficiency," selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:2610,adapt,adapter,2610,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['adapt'],['adapter']
Energy Efficiency,""",; ""{out_data}/ref/idx/ref_indexing.log"",; ""{out_data}/ref/idx/reflengths.bin"",; ""{out_data}/ref/idx/refseq.bin"",; ""{out_data}/ref/idx/seq.bin"",; ""{out_data}/ref/idx/versionInfo.json""; params:; job_name = ""build_idx"",; memory = ""select[mem>64] rusage[mem=64]"",; out_dir = ""{out_data}/ref/idx""; log:; ""logs/build_idx.out""; threads:; 16; shell:; """"""; salmon index \; -t {input.fasta} \; -i {params.out_dir} \; -p {threads}; """"""; ```. Running this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""; output:; ""{out_data}/{sample}/map/alevin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:3384,Reduce,Reduced,3384,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['Reduce'],['Reduced']
Energy Efficiency,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk mode. **Describe the bug**; We uses salmon with ver 0.8 in the beginning, later on we found that it could updated to the latest version. Then after we updated it through conda, the quantify amount was reduced from 200+ to 39. **To Reproduce**; `salmon index -t test.transcripts.fa -i test_index --type puff -k 31 ; salmon quant -l A -i test_index -g annotation.gtf -r test.ccs.fq.gz -z -o test > test.sam`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.8.1 to 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; through bioconda ; * Which reference (e.g. transcriptome) was used?; transcriptome. **Expected behavior**; what is the different between these two versions? We expected that the result would not have such different like this. And we don't know which one is more accurate. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/47863838/85987901-de542e00-ba20-11ea-916a-fe90ca18586f.png). ![image](https://user-images.githubusercontent.com/47863838/85986442-d4c9c680-ba1e-11ea-9b98-140559ee0149.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu Linux.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/542:292,reduce,reduced,292,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/542,1,['reduce'],['reduced']
Energy Efficiency,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is a question related to both salmon and alevin. **Describe the bug**; Hey,. First, thanks a lot for creating and maintaining Salmon!! It is super useful!!. I have run alevin with some scRNA-seq data from 10x (so R1 is the BC +UMI and R2 is the RNA sequence) and by evaluating the logs and the lib_format_counts.json file I can see that there are ~360M of mapped fragments. However, if I run salmon quant in the R2 fastq.gz file I see that ~450M of fragments are now mapping. I do not understand from where are these differences coming.... I can still find differences (reduced though) when using the selective alignment as indicated here: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. **To Reproduce**; Steps and data to reproduce the behavior:. For the classic pseudoalignment - Salmon alevin. ```console; cat cmd_info.json; {; ""salmon_version"": ""1.4.0"",; ""libType"": ""ISR"",; ""mates1"": ""Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz"",; ""mates2"": ""Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz"",; ""chromiumV3"": [],; ""index"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/transcriptome_pseudoalignment_salmon"",; ""threads"": ""8"",; ""output"": ""alevin_pseudoalignment_output"",; ""tgMap"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/tr2g.tsv"",; ""auxDir"": ""aux_info""; }; cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz, Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 360423666,; ""num_assigned_fragments"": 360423666,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1760256573,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ``` . For the classic pseudoalignment - Salmon ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/702:659,reduce,reduced,659,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/702,1,['reduce'],['reduced']
Energy Efficiency,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Only `u` (unmapped) reads are labelled in the `aux_info/unmapped.txt` file, even when the log file indicates that many fragments were discarded because they are best-mapped to decoys. . **To Reproduce**. This GitHub repository details the motivation and full workflow of my pipeline: https://github.com/greenelab/2022-microberna/. To get the read files, I ran:; ```; rule rnaseq_sample_download:; output:; reads=""outputs/rnaseq_fastp/{sra}.fq.gz"",; json = ""outputs/rnaseq_fastp/{sra}.fastp.json"",; html = ""outputs/rnaseq_fastp/{sra}.fastp.html""; params: tmp_base = lambda wildcards: ""inputs/tmp_raw/"" + wildcards.sra; threads: 1; resources:; mem_mb=8000; run:; row = m.loc[m['experiment_accession'] == wildcards.sra]; fastqs = row['fastq_ftp'].values[0]; fastqs = fastqs.split("";""); if len(fastqs) == 1:; # single end data; download and stream directly to fastp for trimming.; fastq = fastqs[0]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + "".fastq.gz""):; shell(""wget -O {params.tmp_base}.fastq.gz ftp://{fastq}""). shell(""fastp -i {params.tmp_base}.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {output.reads}""). # check that the file exists, and if it does, remove raw fastq files; if os.path.exists(output.reads):; os.remove(params.tmp_base + "".fastq.gz""). else:; # paired end data; download both files, interleave, and then remove files; fastq_1 = fastqs[0]; fastq_2 = fastqs[1]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + ""_1.fastq.gz""):; shell(""wget -O {params.tmp_base}_1.fastq.gz ftp://{fastq_1}""). if not os.path.exists(params.tmp_base + ""_2.fastq.gz""):; shell(""wget -O {params.tmp_base}_2.fastq.gz ftp://{fastq_2}""). shell(""fastp -i {params.tmp_base}_1.fastq.gz -I {params.tmp_base}_2.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:419,green,greenelab,419,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['green'],['greenelab']
Energy Efficiency,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; We have an adapted Celseq2 protocol, where read1 (42bp) is used as the sequencing read and read2 (also 42bp) contains (5' -> 3') the barcode (8bp), UMI (8bp), 26 remaining nt's. Alevin seems to run fine, but the quant matrix has a very low UMI count, which does not fit with the _MappedUMI.txt_ file or the reported alignment rate.; ; **To Reproduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/361:127,adapt,adapted,127,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361,1,['adapt'],['adapted']
Energy Efficiency,", and the System Monitor seems to be working fine (salmon is an active process using 12% CPU, 6.9 GiB memory, 13.5 GiB Disk read total, N/A Disk write total, Disk read 1.2 MiB/s (sometimes 1.1 or 1.3), Disk write N/A, Priority normal); and the Resources Tab shows that ; * out of 8 available CPUs, one is working at 100% (the others 5% at max) and ; * Memory 99.3% (which is only 7.7 GiB); * swap 9.5% (which is only 2 GiB of 21.4 GiB available). So here are (finally) my questions:. 1. How can I get Salmon to use the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ""visible"" happening during Round0?; 3. How can I see or check if it is still working (and it might be worthwhile to wait longer)? ; 4. Is what I'm doing correct to create an index file for running Salmon on human RNA-seq data that is supposed to ""end up"" in sleuth?; 5. Is there another way to create an index file that I can use as an index file to create input data for sleuth from RNA-seq data using Salmon (that might need less computational power)?. The last lines of the output are:. [2021-04-02 08:46:48.282] [puff::index::jointLog] [warning] Entry with header [ENST00000634174.1|ENSG00000282732.1|OTTHUMG00000191398.1|OTTHUMT00000487783.1|AC073539.7-201|AC073539.7|28|unprocessed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping). [2021-04-02 08:48:32.206] [puff::index::jointLog] [warning] Removed 833 transcripts that were sequence duplicates of indexed transcripts.; [2021-04-02 08:48:32.207] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-04-02 08:48:33.535] [puff::index::jointLog] [info] Replaced 151,122,967 non-ATCG nucleotides; [2021-04-02 08:48:33.536] [puff::index::jointLog] [info] Clipped poly-A tails from 1,833 transcripts; wrote 233807 cleaned references; [2021-04-02 08:50:46.347] [puff::index::jointLog] [info",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/643:4913,power,power,4913,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643,1,['power'],['power']
Energy Efficiency,"-cell RNA-seq experiment because map to introns. <img width=""400"" alt=""image"" src=""https://user-images.githubusercontent.com/5101911/69015737-65272f80-0997-11ea-87ab-9237e105622a.png"">. ### Loss of reads by using exonic references. Both Alevin and Cell ranger count only reads aligned to exons by default, thus losing some 35% of the reads. Large intronic proportions are a general feature of single-cell RNA-seq, for example the 10X PBMCs has ~20-25%, and nuclear data sets have 46% intronic reads in [[source](https://kb.10xgenomics.com/hc/en-us/articles/360000087552-Why-do-I-have-a-high-percentage-of-reads-mapping-to-intronic-regions-)]. . **So the best way to increase library 'quality' / counting statistics (which is my prime concern) seem to be including reads mapped to introns – leading to hopefully a large increase in UMIs.**. ### Considerations: separate, additive signals. Since exons and introns contain different biological signal, ideally I would like to count as:. 1. Exon only 		(current)* ; 2. Intron only 		(as control / comparison to 1.) ; 3. Exon + intron 	(finally, for boosting statistics) . Where 2 would be a complementary set to 1, so that no read is counted as both intron and exon, and thus 1+2 =~ 3. . \* _I am not sure what happens to a read that maps to an exon/intron junction using the default Alevin and 10x Cell Ranger pipelines, but I assume both count it as exonic._. ### Solution by counting programs. - There is a way to build a ""pre-mRNA"" reference for 10X Cell ranger as described [here](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/advanced/references#premrna). . - I wondered if Alevin can be adapted to this aim? I guess besides all complete transcript models, you need to add one more: the pre-mRNA. (While some complexity can theoretically arise by the serial nature of splicing, I would ignore it at first). Would that be a good idea, or the advantage of Alevin would evaporate if we include introns?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/450:1827,adapt,adapted,1827,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/450,1,['adapt'],['adapted']
Energy Efficiency,"022-06-01 18:14:47.999] [puff::index::jointLog] [info] Replaced 73,600,668 non-ATCG nucleotides; [2022-06-01 18:14:47.999] [puff::index::jointLog] [info] Clipped poly-A tails from 647 transcripts; wrote 116780 cleaned references; [2022-06-01 18:14:53.762] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2022-06-01 18:15:29.014] [puff::index::jointLog] [info] ntHll estimated 2268760823 distinct k-mers, setting filter size to 2^36; Threads = 60; Vertex length = 31; Hash functions = 5; Filter size = 68719476736; Capacity = 2; Files: ; Mus_musculus.GRCm39_v1.8.0_decoy.index/ref_k31_fixed.fa. Round 0, 0:68719476736; Pass	Filling	Filtering; 1	104	79	; 2	75	5; True junctions count = 14895414; False junctions count = 1201318; Hash table size = 16096732; Candidate marks count = 337141231. Reallocating bifurcations time: 8; True marks count: 335754103; Edges construction time: 117. Distinct junctions = 14895414. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 21; Max Junction ID: 14896947; seen.size():119175585 kmerInfo.size():14896948; approximateContigTotalLength: 1087128541; counters for complex kmers:; (prec>1 & succ>1)=3126880 | (succ>1 & isStart)=773 | (prec>1 & isEnd)=671 | (isStart & isEnd)=30; contig count: 24974474 element count: 3020582944 complex nodes: 3128354; # of ones in rank vector: 24974473; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory Mus_musculus.GRCm39_v1.8.0_decoy.index; size = 3020582944. | Loading contigs | Time = 469.49 ms. size = 3020582944. | Loading contig boundaries | Time = 242.8 ms. Number of ones: 24974473; Number of ones per inventory item: 512; Inventory entries filled: 48779; 24974473; [2022-06-01",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783:11768,allocate,allocated,11768,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783,1,['allocate'],['allocated']
Energy Efficiency,"16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:02:11.308] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment group queue pool has been exhausted. 1842 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 13423395 reads in current round; killing thread 3 . . . done. Freeing memory used by read queue . . . 00000; Joined parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointLog] [info] iteration = 0 | max rel diff. = 237.557; [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:2894,allocate,allocated,2894,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['allocate'],['allocated']
Energy Efficiency,"16:06:31.513] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:06:31.580] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""apex_infe_t1_rep1_S29_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:06:34.583] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:06:35.068] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:06:35.443] [jointLog] [info] . The alignment group queue pool has been exhausted. 1955 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 26000000 reads in current roundSegmentation fault (core dumped); ```. Output for failure case - four files. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../Sa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:7867,allocate,allocated,7867,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['allocate'],['allocated']
Energy Efficiency,"303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.23916%. Insert size peak (evaluated by paired-end reads): 1. JSON report: RabbitQC.json; HTML report: SRR1852518.html; ```; Best,; Ci",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:3443,adapt,adapter,3443,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,2,['adapt'],"['adapter', 'adapters']"
Energy Efficiency,"6 -i salmon_index --gencode. This seemed to be working fine and got to Round 0 without any problems.; It created the ""twopaco_tmp"" directory about 5 minutes after starting and created a ""bifurcations.bin"" inside this directory. However, 4 hours have passed, and neither the file nor the directory have any new modifications (and the file is still a staggering 0 bytes large). I also read that this will take quite a lot of memory, but there should be some TB left on the hard drive. I created a 21 GiB swap partition which works fine (I've already seen it at 60%, so it is active and recognized and everything despite being on another physical hard drive ; (the 1. hard drive has a dual installation of win 10 and ubuntu 20.4 and the swap from the installation (2 GiB, because I thought that would be enough at the time and tried to save some space ^^) and the 2. hard drive has a swap partition of 20 GiB (with the highest priority of all swaps), which results in a total of 21.4 GiB in the System Monitor Resources Tab). . The system is still responding, and the System Monitor seems to be working fine (salmon is an active process using 12% CPU, 6.9 GiB memory, 13.5 GiB Disk read total, N/A Disk write total, Disk read 1.2 MiB/s (sometimes 1.1 or 1.3), Disk write N/A, Priority normal); and the Resources Tab shows that ; * out of 8 available CPUs, one is working at 100% (the others 5% at max) and ; * Memory 99.3% (which is only 7.7 GiB); * swap 9.5% (which is only 2 GiB of 21.4 GiB available). So here are (finally) my questions:. 1. How can I get Salmon to use the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ""visible"" happening during Round0?; 3. How can I see or check if it is still working (and it might be worthwhile to wait longer)? ; 4. Is what I'm doing correct to create an index file for running Salmon on human RNA-seq data that is supposed to ""end up"" in sleuth?; 5. Is there another way to create an ind",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/643:3772,Monitor,Monitor,3772,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643,1,['Monitor'],['Monitor']
Energy Efficiency,"> Alevin adopts efficient algorithms for cellular-barcode whitelist generation, cellular-barcode correction, lightweight per-cell UMI deduplication and quantification. Is it possible to use Salmon as a standalone tool to extract and correct the barcodes from 10x Genomics Chromium linked reads and add a `BX:Z` tag to the FASTQ header? That is to say, can Salmon be used as a drop-in replacement for `longranger basic`?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/233:16,efficient,efficient,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233,1,['efficient'],['efficient']
Energy Efficiency,"Add [sci-rna-seq3 protocol](https://www.nature.com/articles/s41586-019-0969-x) to salmon alevin. To use this protocol pass the `--sciseq3` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq3.html). Briefly, the reads have 9-10 bp hairpin adaptor index, and 10bp reverse transcription index which together make the cell barcode of 19-20 bp in length; an 8 bp UMI which follows a 6bp anchor sequence CAGAGC. . Summary of changes:; 1. `--sciseq3` flag added to process sci-rna-seq3 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the position of anchor sequence and avoid searching twice; 3. In case the barcode is 19bp, `A` is added as the last nucleotide to make the cell barcodes length 20 bp for all barcodes. It was tested on data from the [Nature paper](https://www.nature.com/articles/s41586-019-0969-x). Correlation b/w the counts from the GEO submission [GSE119945](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE119945) and sum of spliced, unspliced reads with and without ambiguous counts using `usa` mode in alevin-fry gave reasonable looking correlations. ; Results for one of the fastq files:; ![image](https://user-images.githubusercontent.com/12998572/128923136-eefa8738-f87e-4f67-bba6-5cc1648ce194.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.4594 0.7805 0.8295 0.8253 0.8736 0.9943 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/695:315,adapt,adaptor,315,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/695,1,['adapt'],['adaptor']
Energy Efficiency,"Good evening,; I have been trying to do some alignments using salmon but I get this error after a few; hours. error: commlib error: got read error (closing ""compute-0-19.local/shepherd_ijs/1""). Your ""qlogin"" request could not be scheduled, try again later. Here is one example of the codes I used that didn't work, some others worked fine. for this I built a decoy-aware transcriptome file. salmon quant --libType A -1 L395_gfp_plus_Track_3446_3455_R1.fastq -2; L395_gfp_plus_Track-3446-3455_R2.fastq -i desalttama_salmon_index31 -p 12; --writeUnmappedNames --writeMappings -o desalttama_salmon_index31_quant_L395. I used This qlogin; qlogin -q all.q -l h_rt=48:00:00 -l mem_free=10G -R yes -now n -pe smp 1. How can I solve this issue?; Thank you; Beatriz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/580:229,schedul,scheduled,229,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/580,1,['schedul'],['scheduled']
Energy Efficiency,"Good morning,. I'm a *nix developer with a lot of experience porting software to various platforms. My preferred method for deployment is build-from-source package managers such as FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc (which I use extensively on CentOS), etc. Package managers in-general minimize problems for end users (and hence reduce PRs for you guys). Build-from-source package managers also allow customizing build options (e.g. adding -march=native), which can sometimes offer significantly better performance than you can get from a generic binary package that has to support older CPUs. Currently, developing such packages for salmon is a challenge due to the way the build system works. I've been looking through the build system and the main barrier to packaging is the unconditional bundling of some dependencies, such as seqlib and htslib. If you were to update the cmake systems so that they first look for *all* dependencies installed externally, as they already do for jemalloc and tbb, then it would be easier for developers to package salmon. Best,. Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/502:342,reduce,reduce,342,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/502,1,['reduce'],['reduce']
Energy Efficiency,Hello! . I absolutely love Salmon and use it whenever I get the chance. I've also found that the automatic inference of library type is an extremely powerful feature for other contexts outside of salmon mapping -- but virtually no other tools offer this capability and certainly not with the same speed as salmon. Would it be possible to make a small function Salmon or a standalone package that can be used to infer library type independent of salmon mapping?. Thanks!; Henry,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/534:149,power,powerful,149,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/534,1,['power'],['powerful']
Energy Efficiency,"Hello,. I have a 10x scRNA-seq dataset I would like to run Alevin on, with bootstrapping. I am working on a cluster and submitting my script (I'll paste it below) with a Slurm scheduler. My issue is that the job runs for a couple of seconds, then gives me this massive “core” output - that is encrypted someway and I can’t read - and then an empty log and an empty alevin.log, so I don’t even have anything to use for troubleshooting. ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al; total 47106; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 4 amonaco_m hpc-ag-zinzen 4096 Mar 2 11:47 ..; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 alevin; -rw------- 1 amonaco_m hpc-ag-zinzen 36540416 Mar 3 11:00 core.39485; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 logs; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/636:176,schedul,scheduler,176,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636,1,['schedul'],['scheduler']
Energy Efficiency,"Hello,. I'm trying to create an index file with salmon (version 1.4.0) according to this tutorial here: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ (because I would like to find isoforms using isoformSwitchAnalyseR and the salmon files I already have didn't seem to work, and this tutorial was recommended in the documentation (https://salmon.readthedocs.io/en/latest/salmon.html ) for preparing transcriptome indices (mapping-based mode) ). Since my samples are from humans, I replaced the mouse-files with the (still) current Gencode files for human (v37), and everything seemed to work well until the last step:. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. I left my machine alone for almost 8 h (no other programs, nothing to disturb it). When I finally had a look at it, the terminal was still in Round0, the system monitor still showed some action, and the system was still responsive (no freeze or anything). When I had a look at the index directory, there were no changes in any files after the sub-directory ""twopaco_tmp"" was created, and this directory only contains a file called bifurcations.bin, which was 0 byes (after 8h of computing time). Therefore, I rebooted my system (if there went anything wrong that I couldn't see) and tried changing the parameters. . 1. I changed the number of threads to -p 6 since my machine is rather old, and maybe -p 12 was too much. 2. Since someone seemed to have a similar problem and would have tried changing the filter size next, I tried to change the filter size by adding --filterSize 2^39 (at the same time, I also added --keepDuplicates because I want to use the data to find differentially expressed isoforms later on). salmon index -t gentrome.fa.gz -d decoys.txt -p 6 --keepDuplicates --filterSize 2^39 -i salmon_index --gencode. However, this didn't work and got killed. . I thought it might be due to the --filterSize argument and changed it to 39 (because maybe the 2^ is assu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/643:883,monitor,monitor,883,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643,1,['monitor'],['monitor']
Energy Efficiency,"Hello,. Thanks for creating this efficient and rapid tool. I have earlier used Salmon in alignment based-mode and now trying the mapping based mode. I get a ""Version Server Response:Not found"" message on quantification of fast read. I suspect the problem is with my index but I am not entirely sure what exactly. I installed salmon version 1.10.1 from Bioconda, and built the index, which appeared to have executed successfully. Below is the trail of commands:. (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % conda install -c bioconda salmon. Building decoy aware index; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % grep ""^>"" ../rna_seq_trial/GRCh38.primary_assembly.genome.fa | cut -d "" "" -f -1 > decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % less decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % sed -i.bak -e 's/>//g' decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % cat ../rna_seq_trial/gencode.v43.transcripts.fa ../rna_seq_trial/GRCh38.primary_assembly.genome.fa > gentrome.fa; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode. This results in successful building of the index. Then when I attempt a mapping based quantification for a paired end reads FW and RV, as below, I get therefor mentioned. salmon -i salmon_index -l A -1 $FW -2 $RV --validateMappings -o /Volumes/Ultra_Touch/malaria/Salmon/$FILEBASE/. The info.json file from the index folder has these contents:. {; ""index_version"": 4,; ""reference_gfa"": [; ""salmon_index""; ],; ""sampling_type"": ""dense"",; ""k"": 31,; ""num_kmers"": 2662886061,; ""num_contigs"": 37302977,; ""seq_length"": 3781975371,; ""have_ref_seq"": true,; ""have_edge_vec"": false,; ""SeqHash"": ""39d9ea9f308ee7e18cdb034c1d064c3a9722df115147533a2ec237fb7cecfca9"",; ""NameHash"": ""29a75bc06784c090e5e015d4a5a7e895b7b3d91c9855a10528ee0130377edf3d"",; ""SeqHash512"": ""4e84aa54ec0cb1dad420c66197d8a9485e913b0a60805f2d7e44ce71ad0521b8103cf94dad72e1530b05dc0d08f39e5d4b9225345d8e7ffc60cb5",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/851:33,efficient,efficient,33,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/851,1,['efficient'],['efficient']
Energy Efficiency,"Hi ; I am running an analysis using FLAIR (https://github.com/BrooksLabUCSC/flair) that uses the desired salmon version at the back end. Since it is trying to construct a de-novo transcriptome it pools the samples resulting in a sam file that is 266GB. When I run this analysis on the HPC, the salmon analysis ends without quant.sf file being written. The start and end of the STDERR written by salmon are shown below. . ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.6.0; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { ../data/FLAIR_2021-12-26/collapse_2021-12-26.firstpass.fa }; # [ output ] => { tmp99xm2qn8_2 }; # [ threads ] => { 8 }; # [ ont ] => { }; # [ libType ] => { U }; # [ alignments ] => { tmp99xm2qn8.firstpass.sam }; ---------------------------------------------; Completed first pass through the alignment file.; Total # of mapped reads : 74567310; # of uniquely mapped reads : 8113553; # ambiguously mapped reads : 66453757. Freeing memory used by read queue . . .; Joined parsing thread . . . ""tmp99xm2qn8.firstpass.sam""; Closed all files . . .; Emptied frag queue. . .; Emptied Alignment Group Pool. .; Emptied Alignment Group Queue. . . done; ============; Exception : [std::bad_alloc]; ============; ```; /home/ys/work_lies/Tools/salmon-1.6.0_linux_x86_64/bin/salmon alignment-quant was invoked improperly.; For usage information, try /home/ys/work_lies/Tools/salmon-1.6.0_linux_x86_64/bin/salmon quant --help-alignments. I have tried increasing the memory allocated to the analysis. It seems to complete but without the quantification files. . I also do not understand if it runs to the this point how this statement ""alignment-quant was invoked improperly."" could be true. . Any help would be greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/732:1546,allocate,allocated,1546,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/732,1,['allocate'],['allocated']
Energy Efficiency,"Hi @Ray6283,. It seems you are asking about the EM/VBEM algorithm in general. I would say your description is _almost_ right, except this part:. > Then using p_ij s , we put f_j to transcripts with highest probability , say t_jm , we do this for all fragments, so for each fragment we have assigned unique transcript. So we can have new eta, call it eta_1 ( because we have abundance). Specifically, the EM algorithm does _not_ do ""hard"" assignment. That is, at no point during the algorithm, is a fragment fully assigned to a specific transcript (unless it was uniquely mapped there). Rather, the EM algorithm performs ""soft"" assignment. So, consider we have a fragment $f_j$ that maps to two transcripts $t_{j1}$ and $t_{j2}$. The EM algorithm will ""partially"" allocate this fragment to each of the transcripts. Specifically, it will allocate them proportional to $P(f_j \in t_{j1}) \propto P(t_{j1} \mid \eta) P(f_j \mid t_{j1})$ and $P(f_j \in t_{j2}) \propto P(t_{j2} \mid \eta) P(f_j \mid t_{j2})$ respectively. Then, in the ""M"" phase of the EM algorithm, one calculates the total mass arising from a transcript $t_i$ as $\sum_{f_j \text{ such that } f_j \text{ maps to } t_i} P(f_j \in t_i)$ (one sum). Computing these abundances for all $t_i$ gives us our next estimate of $\eta$, and then we can go back and re-compute the probabilities $P(f_j \in t_{j1})$ etc. This is done until convergence. _Originally posted by @rob-p in https://github.com/COMBINE-lab/salmon/discussions/889#discussioncomment-7304773_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/890:763,allocate,allocate,763,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/890,2,['allocate'],['allocate']
Energy Efficiency,"Hi @rob-p and all,. Thank you for the wonderful tool.; I've been using Salmon for some time now, and have encountered a question.; How is Salmon affected by different read lengths and adapters?. I have a dataset with 5%-15% adapters at 3' of read. How will salmon output be affected if:; 1) I don't remove them; 2) I trim all reads down; 3) use an adapter trimming program - resulting in reads with different length. . Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/634:184,adapt,adapters,184,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/634,3,['adapt'],"['adapter', 'adapters']"
Energy Efficiency,"Hi @rob-p,. would it be possible to add a feature similar to `salmon quant` like `--read-geometry 1[1-end]` (as in Alevin) to define which part of both R1 (and R2) should be used for the quantification? That would omit the need for trimming in case of adapters and make salmon workflows even more lightweight. best,; -Alex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/743:252,adapt,adapters,252,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/743,1,['adapt'],['adapters']
Energy Efficiency,"Hi Rob & Team, . First and foremost, my thanks for developing such a great and versatile tool, very grateful for your work. . I'm hoping for some words of wisdom. We've got some data from Lexogen CORALL libraries (parired end + UMI). One of the main benefits in using this kit, is the lack of fragmentation step, instead there is Displacement Stop Primers (DSP) which are theoretically randomly distributed. . One approach we've taken is to trim adapters, and collapse UMIs (from STAR alignment). Following these steps, we've got theoretically clean data, so using `samtools fastq` to make a Salmon-friendly input. We observed a very unusual fragment length distribution with this, it looks largely poisson. I've rationalised this as the fragments being particularly short after UMI + Adaptor trimming, and given the random nature of DSPs, this could make some sense. One thing that stuck out in my mind was ordering of the reads (which were coord sorted), thus they'd be coming into salmon that way, breaking an assumption of the streaming EM algorithm. . We're currently name sorting the reads prior to Salmon quantification, but I wonder if you could explain if this unusual FLD could be a consequence of position sorted fastq, or any other thoughts you have around this situation? The good news is that ultimately, the same high level biology comes out of the quantifications whichever way do it. . Thanks for any insight. Andrew",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/765:446,adapt,adapters,446,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/765,2,"['Adapt', 'adapt']","['Adaptor', 'adapters']"
Energy Efficiency,"Hi, ; I've been trying to run alevin for single cell data. I've been using test data and the salmon alevin command seems to work right until the end, and then the core is dumped just as counts are in the csv format. I've also tried running it without --dumpCsvCounts and this also results in a segmentation fault. . What I was running:; salmon alevin -l ISR -1 ./hgmm_100_S1_L002_001.fastq.1.gz -2 ./hgmm_100_S1_L002_001.fastq.2.gz --chromium -i geneset.dir/geneset_coding_exons.salmon.index -p 10 -o salmon.dir/hgmm_100_S1_L002_001 --tgMap transcript2geneMap.tsv --dumpCsvCounts. Final part of output:; Analyzed 287 cells (100% of all).; [2019-01-25 11:14:44.509] [alevinLog] [info] Total 46729.00 UMI after deduplicating.; [2019-01-25 11:14:44.509] [alevinLog] [warning] Skipped 63 barcodes due to No mapped read; [2019-01-25 11:14:44.529] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-25 11:14:44.561] [alevinLog] [info] Starting Import of the gene count matrix of size 224x19879.; [2019-01-25 11:14:44.576] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-25 11:14:45.067] [alevinLog] [info] Done Importing gene count matrix for dimension 224x19879; [2019-01-25 11:14:45.770] [alevinLog] [info] Starting dumping cell v gene counts in csv format; Segmentation fault (core dumped) . I am running version 0.12.0 of salmon, installed via bioconda. I have also allocated 30GB of memory for the job, so this isn't a memory issue.; I have seen other users having similar issues using salmon quant having installed salmon through conda and the suggestions have been to install from binaries. This is not an option as salmon needs to be run easily using a conda environment. ; Has any headway been made into fixing the bioconda build?. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/337:1397,allocate,allocated,1397,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337,1,['allocate'],['allocated']
Energy Efficiency,"Hi,. I am testing Alevin, and would like to compare against Cell Ranger on my data set. While primary mapping statistics indicate more reads mapped, I would like to compare the results in the final analysis, in Seurat. Many steps rely on HGNC Gene symbols as opposed to Ensemble IDs. ### What is the best way to convert ensembl IDs to gene symbol in Alevin?. Alevin (aligned as in this [gist](https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001#file-alevin-default-ipynb), imported to R in this [tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/)) returns ensembl IDs in format like ""ENSG00000215910.7"". ```R; require(""fishpond""); require(""tximport""); ; files <- file.path(""[...]/alevin/quants_mat.gz""); file.exists(files); txi <- tximport(files, type=""alevin"");; rownames( txi$counts); ``` . I am currently converting these using biomart with suboptimal adaptations:. ```R; BiocManager::install(""biomaRt""); require('biomaRt'); mart <- useDataset(""hsapiens_gene_ensembl"", useMart(""ensembl"")); genes <- rownames(txi$counts); df$id <- NA; meta.genes <- getBM(attributes = c(""ensembl_gene_id"",""external_gene_name"", ""description""), ; values = genes, mart = mart ); ```; Manual adaptations:. 1. I trim IDs after dot (""ENSG00000215910.7"" → ""ENSG00000215910”); 2. I remove NA values (not all trimmed gene IDs are found in biomaRt); 3. I add up counts of genes (per ENS.ID) with the same gene symbol, e.g. “Y_RNA” or “HSPA14”. ```R; g.LookUp = meta.genes[,2]; names(g.LookUp) = meta.genes[,1]; ; # 1. Trim; ensembl_ID.simple =str_split_fixed(genes,pattern = '\\.', n=2)[,1]; ; genes.converted = g.LookUp[ensembl_ID.simple]; any.duplicated(genes.converted); ; # ...etc; ```. Is there a better way to convert IDs, possibly implemented in Alevin / Salmon?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/448:894,adapt,adaptations,894,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/448,2,['adapt'],['adaptations']
Energy Efficiency,"Hi,. I am using Salmon v 1.10.1 do perform selective alignment on paired end RNAseq samples and I have trouble to interpret the output statistics (i.e succesfully mapped pairs ....); Here is my command line on a sample containing 34,462,097 pairs (After cleaning, adapter removal, rRNA trimming). **salmon quant -i $IndexDir -l A -1 $forward -2 $reverse -p 8 --seqBias --gcBias –useVBOpt --discardOrphansQuasi –consensusSlack 0.35 --minScoreFraction 0.8 --decoyThreshold 1 -o $OutputDir/$pairname_Output**. Here is the the output statistics of the alignment; [Salmon_quant_output.txt](https://github.com/COMBINE-lab/salmon/files/11768911/Salmon_quant_output.txt). So I have few questions : . 1- Where is idicated the numer of processed pairs, i.e. the number of pairs in the sample ?. 2- Does the mapping rate correspond to the reads that will be used for the quantification (i.e. succesfully mapped and that were above every filtering thresholds) or this % also takes into account the discarded mapping ? This is of great importance to tell if the mapping step is good or not. 3- Counted 20,588,460 total reads in the equivalence classes What does this mean ? Is it the numner of pairs that mapped (discarded and not discarded or only the ones that are kept for quentification). 4- What is the difference between mapping discarded and fragment discarded ? To count the number if pairs that did not map to my reference should I sum Number of mappings discarded because of alignment score + Number of fragments entirely discarded because of alignment score + Number of fragments discarded because they are best-mapped to decoys + Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets. Thanks in advance for your time and answers,,. Florian Rocher",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/852:264,adapt,adapter,264,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/852,1,['adapt'],['adapter']
Energy Efficiency,"Hi,. I have been trying to run the installed salmon version on our HPC cluster on minimap aligned ONT reads and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/898:860,schedul,scheduler,860,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898,1,['schedul'],['scheduler']
Energy Efficiency,"Hi,. Might be something trivial that takes no effort to figure out. I have mouse `RNA-seq` data (`single-end` `stranded` - `reverse strand`) which I `STAR` mapped against `mm10` with `gencode.vM12.primary_assembly.annotation` `GTF`, where I ran `STAR` in a mode that also generates a bam file of the reads mapping to the `transcriptome`. For my purpose I'd like to retain only reads that map to transcripts annotated as `protein_coding` in the `GTF`, which would be my total, meaning `TPM`s will be calculated based on that slice of the pie rather than based on all reads. What I did is `samtools` `sort` and `index` the transcriptomic `bam`, and then subset that `bam` with a `bed` file which only includes the transcripts that are annotated as `protein_coding`. This reduces the number of mapped reads from 11,653,865 to 3,483,962. When I use `Salmon` to quantify expression of that subsetted `bam`, Salmon crashes, but it doesn't if I give it the un-subsetted `bam`. Any idea why it's crashing?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/213:769,reduce,reduces,769,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/213,1,['reduce'],['reduces']
Energy Efficiency,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/339:1022,adapt,adapters,1022,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339,3,['adapt'],"['adapter', 'adapters']"
Energy Efficiency,"Hi,; When I use the default k-mer length of 31 to generate index, it throws warnings like 'ENSTxxxxx had length less than equal to the k-mer length of 31'. I checked these transcripts, and most of them are immunoglobulin and T cell receptor genes. ; My question is:; 1. Transcripts with a length below specified k-mer length will be discarded during alignment, right? ; 2. If I reduced the k-mer length to a smaller odd value, say 15, will this affect accuracy? My read length is 150. ; Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/754:378,reduce,reduced,378,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/754,1,['reduce'],['reduced']
Energy Efficiency,"I was running some quantification on Google Compute Engine and a particular study repeatedly printed ""couldn't dequeue read chunk"" for 2.5 days. By the time I discovered it, over 300GB of Egress traffic (sending the message to my local computer) had accumulated. Cost me close to $100 between Google's egress charges and my ISPs bandwidth overage charges. It would be nice if the message didn't print so much. I'm now running Salmon commands with `timeout 1h` prefix to prevent this but might run into an issue with 1 hour not being long enough for all quantification runs.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/152:309,charge,charges,309,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/152,2,['charge'],['charges']
Energy Efficiency,"I'm looking at using Salmon on metatranscriptomes (environmental de novo assemblies). Our assemblies are typically very large, i.e. many millions of sequences. When scheduling jobs on my university's cluster (LSF), I'm required to set a memory limit. When salmon exceeds this limit, the job is killed, and I must restart the process. Is there a recommendation for predicting how much memory salmon will use to index/quant based on the size of the transcriptome? Could it be possible to set a memory limit for salmon so that it doesn't attempt to call more than is allocated?. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/97:165,schedul,scheduling,165,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/97,2,"['allocate', 'schedul']","['allocated', 'scheduling']"
Energy Efficiency,"I've got some SMART-seq2 data that's been demultiplexed, so hundreds of small Fastq files. So, I was wondering: . - Does Salmon have a way to take multiple samples / libraries on a single run and perform quantification in an optimised serial way? ; - Does Salmon have a way to keep the index in memory similar to STAR? . I guess the obvious alternative is to schedule lots of runs, but just wondered if there were alternative options. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/589:359,schedul,schedule,359,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/589,1,['schedul'],['schedule']
Energy Efficiency,"If an adapter is not trimmed, will it affect the mapping rate?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/398:6,adapt,adapter,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/398,1,['adapt'],['adapter']
Energy Efficiency,Is it necessary to trim adapters before using salmon?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/398:24,adapt,adapters,24,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/398,1,['adapt'],['adapters']
Energy Efficiency,"Is there a way to compile Salmon to a 32-bit architecture by any chance? I ask because I'd like to have single-cell tutorials on sandbox.bio v2 that use Salmon. But to power the platform, I'm running a 32-bit/i686 Debian OS in the browser 😬. When I try to compile it in a [i386/debian:bookworm-20230904-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/872:168,power,power,168,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872,1,['power'],['power']
Energy Efficiency,NumThreads (Consumer Threads) should be reduced too?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/178:40,reduce,reduced,40,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/178,1,['reduce'],['reduced']
Energy Efficiency,Quantification matrix with adapted Celseq2 protocol,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/361:27,adapt,adapted,27,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361,1,['adapt'],['adapted']
Energy Efficiency,"We are using Salmon to help allocate multimapped reads in dual RNA-seq data. What this means is we combine a host and pathogen genome (bacterial genome + host transcriptome) and also use a combined annotation file as well.; Basically, we can then find out which reads uniquely map to each gene/transcript from both organisms. . The issue we are having is when using Salmon in alignment-based mode (using STAR), we are observing quite substantial variations in how ambiguous (multimapping) reads are being assigned. We use the same quant command/params and the same input files - and we run the same data twice in different output locations.; The correlations between quant files are generally really good ~ 99.9x (spearman). . However, the number of allocated reads to a small proportion of transcripts varies quite a lot. For example:; ```; ENST00000383869.1 goes from 7699.89 reads to 4871.19 between runs; ENST00000374675.7 goes from 1326.02 reads to 0 between runs; ```. We initially noticed this when examining differentially expressed genes downstream, which were a bit unusual. These two transcripts in particular have a high number of ambiguous counts (generally >1000) when examining the `ambig_info.tsv` file (the number of ambig reads does remain the same though). I tried additional params and runs including:; Accounting for biases: `--seqBias --gcBias --posBias`; Including bootstrap information: `--numBootstraps 100 --bootstrapReproject`. Both params reduced the variation between runs slightly, but not enough to reduce the disparity. We don't see this difference when running in selective alignment mode. We are using `v.1.3.0` and `single end` reads. ```; STAR --runThreadN 30 --runMode genomeGenerate --genomeDir index/ --genomeFastaFiles $fasta --sjdbGTFfile $gff --sjdbGTFfeatureExon exon --sjdbGTFtagExonParentTranscript Parent --sjdbOverhang $sjdbOverhang. STAR --runThreadN 30 --genomeDir . --sjdbGTFfile $gff $readFilesCommand --readFilesIn $reads --outSAMtype BAM Unsorted -",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/600:28,allocate,allocate,28,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/600,2,['allocate'],"['allocate', 'allocated']"
Energy Efficiency,Will a smaller k-mer length reduce alignment accuracy?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/754:28,reduce,reduce,28,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/754,1,['reduce'],['reduce']
Energy Efficiency,"_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam"", fasta = ""a; ll_transcripts.fa"" . . .done; [2021-03-05 18:20:24.846] [jointLog] [info] replaced 1216 non-ACGT nucleotides with random nucleotides; processed 0 reads in current round[2021-03-05 18:20:25.180] [jointLog] [info] Automatically detected most likely library type as ISR; processed 3000000 reads in current round[2021-03-05 18:20:39.705] [jointLog] [info]; The alignment group queue pool has been exhausted. 7187672 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated; processed 12000000 reads in current round; processed 21000000 reads in current round; processed 29000000 reads in current round; processed 38000000 reads in current round; processed 47000000 reads in current round; processed 56000000 reads in current round; processed 57000000 reads in current round/var/spool/slurmd/job599153/slurm_script: line 102: 17542 Segmentation fault singularity exec --bind $TMPDIR:/tmp,/groups:/groups,/work:/work /groups/arcsingularity/salmon_1.4.0.sif salmon quant -t all_transcripts.fa -l A -p 10 -a $in_FILES -o $outdir.salmon_quant. Salmon does not quantify transcript expression. I would appreciate any suggestions.; Thanks, Ina",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/638:2545,allocate,allocated,2545,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638,2,['allocate'],['allocated']
Energy Efficiency,"and poly-T was used to select mRNAs during the library construction...; 3. Not using pre-mature transcripts so reads mapping to introns are discarded: I am not sure if this is a valid point since we usually quantify mature mRNAs, not pre-mature ones.; 4. Library type: my library was constructed in a stranded way. The program detected my libtype as ISR:; ```; {; ""read_files"": ""[ DS_1_HW_FM_1P.fq.gz, DS_1_HW_FM_2P.fq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 18651686,; ""num_assigned_fragments"": 18651686,; ""num_frags_with_concordant_consistent_mappings"": 17799536,; ""num_frags_with_inconsistent_or_orphan_mappings"": 864409,; ""strand_mapping_bias"": 0.0001987858838992702,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 3539,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17799536,; ""SF"": 419781,; ""SR"": 441089,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```; When I change the libtype to a broader category, such as IU, the mapping rates slightly increased from ~55% to 65%, also I got more counts in each transcript, but this introduced higher strand mapping bias (Appeared as a warning message). ; 5. many short reads: No... in my case, the majority of the reads are ~150bp. And I used k=31 (default).; 6. Read trimming: I trimmed the adaptors and low-quality bases from the ends. One thing I noticed in my FastQC report is that I have warnings for 'Per Base Sequence Content'. I can see a fluctuation of nucleotides in around the first 12bp of each run due to a biased selection of random primers. This is so common in RNA-seq data so I did not trim the first several bases...Not sure if this can cause the low mapping rate.; One of my fastQC reports:. [DS_1_HW_FM_1P_fastqc.html.zip](https://github.com/COMBINE-lab/salmon/files/4730665/DS_1_HW_FM_1P_fastqc.html.zip). So...Is there a way I can increase the mapping rates? Or do I need to? My trimmed reads are all of very high quality so I do expect a mapping rate of >70%. I would appreciate it if this could be clarified.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/533:2777,adapt,adaptors,2777,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/533,1,['adapt'],['adaptors']
Energy Efficiency,"any problems.; It created the ""twopaco_tmp"" directory about 5 minutes after starting and created a ""bifurcations.bin"" inside this directory. However, 4 hours have passed, and neither the file nor the directory have any new modifications (and the file is still a staggering 0 bytes large). I also read that this will take quite a lot of memory, but there should be some TB left on the hard drive. I created a 21 GiB swap partition which works fine (I've already seen it at 60%, so it is active and recognized and everything despite being on another physical hard drive ; (the 1. hard drive has a dual installation of win 10 and ubuntu 20.4 and the swap from the installation (2 GiB, because I thought that would be enough at the time and tried to save some space ^^) and the 2. hard drive has a swap partition of 20 GiB (with the highest priority of all swaps), which results in a total of 21.4 GiB in the System Monitor Resources Tab). . The system is still responding, and the System Monitor seems to be working fine (salmon is an active process using 12% CPU, 6.9 GiB memory, 13.5 GiB Disk read total, N/A Disk write total, Disk read 1.2 MiB/s (sometimes 1.1 or 1.3), Disk write N/A, Priority normal); and the Resources Tab shows that ; * out of 8 available CPUs, one is working at 100% (the others 5% at max) and ; * Memory 99.3% (which is only 7.7 GiB); * swap 9.5% (which is only 2 GiB of 21.4 GiB available). So here are (finally) my questions:. 1. How can I get Salmon to use the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ""visible"" happening during Round0?; 3. How can I see or check if it is still working (and it might be worthwhile to wait longer)? ; 4. Is what I'm doing correct to create an index file for running Salmon on human RNA-seq data that is supposed to ""end up"" in sleuth?; 5. Is there another way to create an index file that I can use as an index file to create input data for sleuth from RNA-seq da",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/643:3845,Monitor,Monitor,3845,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643,1,['Monitor'],['Monitor']
Energy Efficiency,"d references; [2023-03-15 20:12:12.984] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2023-03-15 20:12:29.921] [puff::index::jointLog] [info] ntHll estimated 1872745301 distinct k-mers, setting filter size to 2^35; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 34359738368; Capacity = 2; Files:; illerney.index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:34359738368; Pass Filling Filtering; 1 297 695; 2 55 3; True junctions count = 5239944; False junctions count = 16749742; Hash table size = 21989686; Candidate marks count = 29916168; --------------------------------------------------------------------------------; Reallocating bifurcations time: 2; True marks count: 20234145; Edges construction time: 59; --------------------------------------------------------------------------------; Distinct junctions = 5239944. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 139; Max Junction ID: 12729038; seen.size():101832313 kmerInfo.size():12729039; approximateContigTotalLength: 1607258836; counters for complex kmers:; (prec>1 & succ>1)=133010 | (succ>1 & isStart)=7442 | (prec>1 & isEnd)=7516 | (isStart & isEnd)=2442; contig count: 11353512 element count: 2210067304 complex nodes: 150410; # of ones in rank vector: 11353511; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory illerney.index; size = 2210067304; -----------------------------------------; | Loading contigs | Time = 451.61 ms; -----------------------------------------; size = 2210067304; -----------------------------------------; | Loading contig boundaries | Time = 180.73 ms; -----------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/837:2516,allocate,allocated,2516,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837,1,['allocate'],['allocated']
Energy Efficiency,"h_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep3_RL5410_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep1_RL5392_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep2_RL5393_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep3_RL5411_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep1_RL5389_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep2_RL5408_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep3_RL5409_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.10.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Binary; * Which reference (e.g. transcriptome) was used?; Moss (Physco) v6.1 that I had generated ; * Which read files were used?; ; * Which which program options were used?; `-l A -p 16 --validateMappings --numBootstraps 100 --seqBias --gcBias`. **Expected behavior**; A clear and concise description of what you expected to happen. **Desktop (please complete the following information):**; - OS: Linux server: Rocky Linux release 8.5 (Green Obsidian); - Version Rocky Linux release 8.5 (Green Obsidian)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/948:3524,Green,Green,3524,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948,2,['Green'],['Green']
Energy Efficiency,"info] setting maxHashResizeThreads to 8; [2023-01-29 16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:02:11.308] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment group queue pool has been exhausted. 1842 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 13423395 reads in current round; killing thread 3 . . . done. Freeing memory used by read queue . . . 00000; Joined parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:2825,allocate,allocated,2825,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['allocate'],['allocated']
Energy Efficiency,"info] setting maxHashResizeThreads to 8; [2023-01-29 16:06:31.513] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:06:31.580] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""apex_infe_t1_rep1_S29_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:06:34.583] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:06:35.068] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:06:35.443] [jointLog] [info] . The alignment group queue pool has been exhausted. 1955 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 26000000 reads in current roundSegmentation fault (core dumped); ```. Output for failure case - four files. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => {",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:7798,allocate,allocated,7798,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['allocate'],['allocated']
Energy Efficiency,"isabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:2507,adapt,adapter,2507,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['adapt'],['adapter']
Energy Efficiency,"ng assigned. We use the same quant command/params and the same input files - and we run the same data twice in different output locations.; The correlations between quant files are generally really good ~ 99.9x (spearman). . However, the number of allocated reads to a small proportion of transcripts varies quite a lot. For example:; ```; ENST00000383869.1 goes from 7699.89 reads to 4871.19 between runs; ENST00000374675.7 goes from 1326.02 reads to 0 between runs; ```. We initially noticed this when examining differentially expressed genes downstream, which were a bit unusual. These two transcripts in particular have a high number of ambiguous counts (generally >1000) when examining the `ambig_info.tsv` file (the number of ambig reads does remain the same though). I tried additional params and runs including:; Accounting for biases: `--seqBias --gcBias --posBias`; Including bootstrap information: `--numBootstraps 100 --bootstrapReproject`. Both params reduced the variation between runs slightly, but not enough to reduce the disparity. We don't see this difference when running in selective alignment mode. We are using `v.1.3.0` and `single end` reads. ```; STAR --runThreadN 30 --runMode genomeGenerate --genomeDir index/ --genomeFastaFiles $fasta --sjdbGTFfile $gff --sjdbGTFfeatureExon exon --sjdbGTFtagExonParentTranscript Parent --sjdbOverhang $sjdbOverhang. STAR --runThreadN 30 --genomeDir . --sjdbGTFfile $gff $readFilesCommand --readFilesIn $reads --outSAMtype BAM Unsorted --outSAMunmapped ""Within"" --outSAMattributes ""Standard"" --outFileNamePrefix $sample_name/$sample_name --sjdbGTFfeatureExon quant --sjdbGTFtagExonParentTranscript parent --quantMode TranscriptomeSAM --quantTranscriptomeBan ""Singleend"" --outFilterMultimapNmax 999 --outFilterType ""BySJout"" --alignSJoverhangMin 8 --alignSJDBoverhangMin 1 --outFilterMismatchNmax 999 --outFilterMismatchNoverReadLmax 1 --alignIntronMin 20 --alignIntronMax 1000000 --alignMatesGapMax 1000000 --winAnchorMultimapNmax 999; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/600:1467,reduce,reduced,1467,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/600,2,['reduce'],"['reduce', 'reduced']"
Energy Efficiency,"nt-697125235) in other mapping issue reports, it's possible that there could be multiple fragments in those numbers that contribute to a single read, meaning the unaccounted number is probably higher:. > The number you are looking at is the number of discarded mappings, not the number of discarded fragments. The difference is that every fragment can have many potential mappings. The number you are looking at is the total number of attempted alignments that failed to achieve the threshold score. Luckily, salmon reports both numbers. The number of fragments for which all alignments failed to reach the score threshold is 4,196,417; given in aux_info.json by ""num_fragments_filtered_vm"": 4196417. One point to note is that these are all fragments for which mapping is attempted (they had at least one k-mer match the reference), but no alignment was valid up to the threshold. You could try running the quantification again with --softclip to allow softclipping of the reads and see if any considerable fraction of these 4196417 failed to align because they overhang the annotated transcripts or contain adapters etc. Nonetheless, even if all of these mapped, the rate would still be ~72%. The remainder of the reads didn't even have a matching k-mer in common with the reference transcriptome, which means they are exceedingly unlikely to have come from the transcripts that were indexed. Further explanation of what these metadata numbers mean would be very helpful to me. Also useful would be a statistic (or more than one statistic) that fully categorises the read alignments or non-alignments. **Desktop (please complete the following information):**; - OS: Debian; - `uname-a`: Linux musculus 6.7.9-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.7.9-2 (2024-03-13) x86_64 GNU/Linux; - `lsb_release -a`; ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux trixie/sid; Release: n/a; Codename: trixie; ```. **Additional context**. I'm not really after an explanatio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/925:8741,adapt,adapters,8741,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925,1,['adapt'],['adapters']
Energy Efficiency,"oduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected behavior**; I expected a total of 18.5M counts in the quant matrix, where the sums per barcode fit those reported in the _MappedUmi.txt_ Is my assumption that the quant matrix should only contain integers correct?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; Ubuntu 18.04.1 LTS. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/361:1917,adapt,adapted,1917,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361,1,['adapt'],['adapted']
Energy Efficiency,"path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:1832,adapt,adapter,1832,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,1,['adapt'],['adapter']
Energy Efficiency,"s/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:52:41.666] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:52:41.668] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:52:42.565] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:52:43.137] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:52:43.276] [jointLog] [info] . The alignment group queue pool has been exhausted. 1759 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 25000000 reads in current roundSegmentation fault (core dumped). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:9910,allocate,allocated,9910,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,2,['allocate'],['allocated']
Integrability," 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.org/cloudman/), and my installation of Salmon is currently constrained to a conda install. . - I've fiddled with many different CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-me",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:2714,wrap,wrap,2714,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['wrap'],['wrap']
Integrability," ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/664:1036,wrap,wrapper,1036,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664,1,['wrap'],['wrapper']
Integrability," [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173892_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173892 }; Logs will be written to salmonRes_SRR2173892/logs; [2021-07-16 11:47:01.807] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.807] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.807] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.807] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.807] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.807] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR1501367/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR1501367/quant.sf': No such file or directory",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:11794,message,message,11794,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['message'],['message']
Integrability," annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.org/packages/salmon) because conda triggers another bug.; I suspect that this is the cause of the bug. I tried to clean up my dependencies/packages but could not fix the bug. . Thank you for this great program! Cheers!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/965:2125,depend,dependencies,2125,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965,1,['depend'],['dependencies']
Integrability," install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:1904,depend,dependencies,1904,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,1,['depend'],['dependencies']
Integrability," message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + message(""ROOT_LIBGFF in env""); + set(LIBGFF_DIR $ENV{ROOT_LIBGFF}); + set(LIBGFF_INCLUDE_DIRS ${LIBGFF_DIR}/include); + set(LIBGFF_INCLUDE_DIR ${LIBGFF_DIR}/include); + set(LIBGFF_LIBRARY_DIRS ${LIBGFF_DIR}/lib); + set(LIBGFF_LIBRARY ${LIBGFF_DIR}/lib); + set(LIBGFF_LIB_DIR ${LIBGFF_DIR}/lib); + set(LIBGFF_FOUND TRUE); +else(); + message(""ROOT_LIBGFF NOT in env""); + find_package(libgff); +endif(); if(NOT LIBGFF_FOUND); message(""Build system will compile libgff""); message(""==================================================================""); @@ -739,7 +769,14 @@; endif(); ; find_package(CURL); -find_package(libstadenio); +if(DEFINED ENV{ROOT_IO_LIB}); + set(ROOT_IO_LIB $ENV{ROOT_IO_LIB}); + set(STADEN_INC ""-I${ROOT_IO_LIB}/include""); + set(STADEN_LIB ""-L${ROOT_IO_LIB}/lib""); + set(LIBSTADENIO_FOUND TRUE); +else(); + find_package(libstadenio); +endif(); if (NOT LIBSTADENIO_FOUND); message(""Build system will compile Staden IOLib""); message(""==================================================================""). ```. In the meantime the binary distribution was loaded. . Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/460:4284,message,message,4284,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460,8,['message'],['message']
Integrability," selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:2610,adapter,adapter,2610,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['adapter'],['adapter']
Integrability,"""Wrong whitelist provided"" Error Message",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682:33,Message,Message,33,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682,1,['Message'],['Message']
Integrability,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:69,message,message,69,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,3,['message'],"['message', 'messages']"
Integrability,"&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:18271,Protocol,ProtocolT,18271,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,4,"['Protocol', 'protocol']","['ProtocolT', 'protocols']"
Integrability,"**Describe the bug**; Build problem. . Centos 6.9's boost is too old for salmon. There are RPMs for 1.5.7 installed. The library files are in /usr/lib64 and the include files are in /usr/include/boost157. These all work and are employed by numerous other packages without issues. Using devtoolset-4 (for a recent enough compiler) and a freshly built cmake 3.1.3 this command:. `scl enable devtoolset-4 '~/bin/cmake -DBOOST_ROOT=/usr/lib64 ../CMakeLists.txt'; `; fails with . ```; -- Could NOT find Boost; BOOST_INCLUDEDIR = ; BOOST_LIBRARYDIR = ; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This:; `scl enable devtoolset-4 '~/bin/cmake -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt; `; fails with:. ```; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This::; `scl enable devtoolset-4 '~/bin/cmake -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt'; `; fails the exact same way. Examined the CMakeLists.txt file, found the list of acceptable versions starts with 1.59.0. Crud. ; Tried modifying one line to:; ` find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); `; but it still failed. I am out of tricks. Is it really the case that Salmon cannot use 1.57.0?. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/236:599,message,message,599,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236,2,['message'],['message']
Integrability,"**Describe the bug**; I am trying to quantify long reads mapped using minimap2 and I am getting a large number of the following messages:. ```; [2018-09-10 12:42:32.972] [jointLog] [warning] CIGAR = 106c16M1D7M1D8M1D26M1D55M3D8M1D32M2I14M1I8M1I52M1D14M1I2M1I19M1I1M1I7M11D28M1D5M3I40M1D5M1I5M1I6M1I13M147c; [2018-09-10 12:42:32.972] [jointLog] [warning] (in update()) CIGAR string for read [e6b69e2f-1bf2-4fd5-bace-d4d213164026] seems inconsistent. It refers to non-existant positions in the read!. ```. **To Reproduce**; * Which version of salmon was used?; salmon version: salmon 0.11.3, minimap2 version: 2.9-r720; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; * Which reference (e.g. transcriptome) was used?; Ensembl [cDNA collection](http://ftp.ensembl.org/pub/release-93/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz).; * Which read files were used?; Nanopore reads.; * Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l SF -a {input.bam} -o {output.tsv_dir}. **Desktop (please complete the following information):**; Ubuntu 14.04.5 LTS. **Additional context**; I am wondering whether the issue is caused by the fact that minimap2 does not include sequences in the secondary alignments. The errors disappear if I filter for primary alignments only.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/289:128,message,messages,128,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289,1,['message'],['messages']
Integrability,"**Describe the bug**; I followed every step of this tutorial to generate the index.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; Instead of using the mouse genomic data, I used the human data (https://www.gencodegenes.org/human/release_33lift37.html).; I invoked the indexing with the following command: ; **salmon index -t gentrome.fa.gz -d decoys.txt -p 8 -i salmon_index --gencode**; In the beginning everything seems to run smoothly, but a couple minutes in different error messages appear:; **error: Cant write to a temporary file**; **error: Cant read the input file**; followed by **Segmentation fault** and then the algorithm exits. ; Nonetheless a directory with different files regarding the indexing is beeing created.; However when I run; **salmon quant -i salmon_index/ -l A -1 ../../patients/patient001/fastq/S0012_1.fastq.gz -2 ../../patients/patient001/fastq/S0012_2.fastq.gz --validateMappings -o transcripts_quant**. it tells me that **The index version file salmon_index/versionInfo.json doesn't seem to exist**. **To Reproduce**; I installed salmon via bioconda, version 1.1.0. **Desktop (please complete the following information):**; Its running on CentOS 7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/503:507,message,messages,507,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/503,1,['message'],['messages']
Integrability,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/860:1484,wrap,wrapper,1484,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860,2,['wrap'],['wrapper']
Integrability,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/141:1180,message,message,1180,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141,2,['message'],['message']
Integrability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed latest version of salmon through git clone for trinityrnaseq. When i run trinity using a command ""perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G' I am getting a message to install salmon. kindly give me a solution for this. **To Reproduce**; Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G. ______ ____ ____ ____ ____ ______ __ __; | || \ | || \ | || || | |; | || D ) | | | _ | | | | || | |; |_| |_|| / | | | | | | | |_| |_|| ~ |; | | | \ | | | | | | | | | |___, |; | | | . \ | | | | | | | | | | |; |__| |__|\_||____||__|__||____| |__| |____/. Trinity-v2.8.5. Left read files: $VAR1 = [; 'reads_1.fq'; ];; Right read files: $VAR1 = [; 'reads_2.fq'; ];; Trinity version: Trinity-v2.8.5; ** NOTE: Latest version of Trinity is v2.8.6, and can be obtained at:; 	https://github.com/trinityrnaseq/trinityrnaseq/releases. Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870.; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ ^C. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version18.04. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/452:322,message,message,322,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/452,1,['message'],['message']
Integrability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. The bug is primarily related to salmon, but I am using salmon to build an index for use with alevin-fry per the [alevin-fry tutorial](https://combine-lab.github.io/alevin-fry-tutorials/2021/improving-txome-specificity/). . **Describe the bug**; A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:549,wrap,wrapped,549,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['wrap'],['wrapped']
Integrability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; A clear and concise description of what the bug is. Running `salmon index` on a HPC cluster (called from a trinity perl script). After a while salmon is only idling. In the stderr I see:. ```; Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!; ```. The problem seems to be the available memory. On HPC systems one usually needs to specify a max amount of memory which is enforced (e.g. with ulimit). . If I give more memory to the job salmon finishes. . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. Salmon 1.1 installed through conda. I guess any data will do to reproduce as long as the memory limitations ar small enough. **Expected behavior**; A clear and concise description of what you expected to happen. Would be good if salmon would exit with a better error message and a non-zero exit code in such a case. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. CentOS 7. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/484:1336,message,message,1336,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/484,1,['message'],['message']
Integrability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin; **Describe the bug**; A clear and concise description of what the bug is.; Reanalyzing published Drop-Seq data the alevin analysis results in drastically fewer barcodes accepted than the published dataset. Published dataset contains 3000 CBs for the specific sample (authors report that 70% of [these] putative cells from WT mice met QC criteria), alevin result contains 459 CBs.; A similar highly abbreviated CB result was obtained with reanalysis of SRR8889412. **To Reproduce**; Steps and data to reproduce the behavior:. Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; Publication: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6925218/#; Specific Sample: https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3720936. Alevin was run using no special parameters with the --dropseq flags. The only significant protocol deviation was in index construction (see below). Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Salmon was run in stock docker container; * Which reference (e.g. transcriptome) was used?; Full decoy Index generated on Gencode M25 per Alevin Velocity tutorial with a k=17 (dataset has 50bp R2 Reads); Introns were extracted with 49bp flanking sequence. ; ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.annotation.gtf.gz. * Which read files were used?; Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; * Which which program options were used?; --dropseq -l ISR. **Expected behavior**; A clear and concise description of what you expected to happen.; Cell calls should be ballpark similar to published result (3000 original vs. 459 alevin). **Tar of Alevin Output directory**; [WT01_P7_WT_Cerebellum_alevin.output.tar.gz](https://github.com/COMBINE-lab/salmon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/625:932,protocol,protocol,932,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/625,1,['protocol'],['protocol']
Integrability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No; **Describe the bug**; Running salmon 0.11.3, quasi mode, with 192M of ram.; Salmon quasi mode aborted with following message:; processed 14,000,000 fragmentsntLog] [info] Automatically detected most likely library type as SR; hits: 108,161,934; hits per frag: 8.53594terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; This happens when using a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/304:207,message,message,207,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304,1,['message'],['message']
Integrability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/845:1696,message,message,1696,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845,1,['message'],['message']
Integrability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This bug is generated from Salmon. **Describe the bug**; To use Salmon, I installed windows subsystem for Linux (WLS), then newest Ubuntu, Anaconda, bioconda, and finally Salmon (via Bioconda) on my PC. However, when I run any order (making index or do quant), I get this error message:. salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). I checked what this means and thought this is because this Ubuntu may not have GLIBC C++ library, so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded e",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/927:364,message,message,364,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927,1,['message'],['message']
Integrability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:466,message,messages,466,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['message'],['messages']
Integrability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; We have an adapted Celseq2 protocol, where read1 (42bp) is used as the sequencing read and read2 (also 42bp) contains (5' -> 3') the barcode (8bp), UMI (8bp), 26 remaining nt's. Alevin seems to run fine, but the quant matrix has a very low UMI count, which does not fit with the _MappedUMI.txt_ file or the reported alignment rate.; ; **To Reproduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/361:143,protocol,protocol,143,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361,1,['protocol'],['protocol']
Integrability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; in Salmon bulk mode, while using the following commands to create an index:; A. Ingredients preparation:; grep ""^>"" genome.fa | cut -d "" "" -f 1 > ./decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Gencode_transcripts.fa genome.fa > ./gentrome.fa; B. index building:; salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode; **Describe the bug**; I got the following bug/error message:; Version Info: This is the most recent version of salmon.; salmon.sh: line 23: 37339 Illegal instruction (core dumped) salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode. Specifically, I was using the following version and files/options:. * Salmon 1.0.0; * through bioconda?; conda update salmon; * gencode.v27.transcripts.fa; * default. Any help to fix this bug would be appreciated!. Kind regards,; Jamal.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/458:482,message,message,482,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/458,1,['message'],['message']
Integrability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon quant is leading to segmentation fault when `--skipQuant` flag is set. The behavior may be annotation dependent.; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:278,depend,dependent,278,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['depend'],['dependent']
Integrability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I used the default parameters to run salmon on mouse sample. But I got the warning:. `Detected a *potential* strand bias > 1% in an unstranded protocol check the file:`. **To Reproduce**; `""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 10869138,; ""num_assigned_fragments"": 10869138,; ""num_frags_with_concordant_consistent_mappings"": 10212463,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1088473,; ""strand_mapping_bias"": 0.5258466052704426,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4842274,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 5370189,; ""SF"": 593930,; ""SR"": 494543,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0`. Specifically, please provide at least the following information:. * Which version of salmon was used? ; ""salmon_version"": ""0.14.1"". * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda. * Which reference (e.g. transcriptome) was used?; gencode mouse VM22. * Which read files were used?. Downloaded from sra（Just ordinary Illumina reads). * Which which program options were used?. ```; salmon quant -i $mm10_whole_index -l A \; -1 $fastq1 \; -2 $fastq2 \; -p 20 --validateMappings -o $output_whole; ```. **Expected behavior**; Why Strand bias is very high?. **Desktop (please complete the following information):**; Linux localhost.localdomain 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/422:259,protocol,protocol,259,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/422,1,['protocol'],['protocol']
Integrability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; yes; **Describe the bug**; A clear and concise description of what the bug is.; I was going though the tutorial https://combine-lab.github.io/alevin-tutorial/2020/alevin-velocity/; using Alevin and scVelo. The filtering with ; scv.pp.filter_genes(adata, min_shared_counts = 30). gives the error bellow. Any advice?; **Error**; R[write to console]: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. R[write to console]: In addition: ; R[write to console]: Warning message:. R[write to console]: call dbDisconnect() when finished working with a connection . ---------------------------------------------------------------------------; RRuntimeError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 168 if reductor:; --> 169 rv = reductor(4); 170 else:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/sexp.py in __getstate__(self); 123 self.__sexp__._cdata,; --> 124 globalenv.__sexp__._cdata); 125 ). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/_rinterface_capi.py in serialize(cdata, cdata_env); 412 if error_occured[0]:; --> 413 raise embedded.RRuntimeError(_geterrmessage()); 414 return res. RRuntimeError: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following ex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:623,message,message,623,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,1,['message'],['message']
Integrability,"**tl;dr**: 3-tag sequencing methods for bulk RNA samples contain known sample indices and UMIs and thus resembles sc-RNA-seq read formats. Do you have a recommendation on how to use Salmon and / or Alevin to quantify gene expression for this data type?. Congratulations on the recent [alevin preprint](https://www.biorxiv.org/content/early/2018/10/24/335000)! The new algorithm to deduplicate UMIs looks awesome. I am wondering if you had a recommendation on how to leverage it for 3' tag sequencing of bulk samples. There are a number of protocols that focus on the 3' ends of transcripts to allow for cheap quantification of gene expression, e.g. - [BRB-seq](https://www.biorxiv.org/content/early/2018/01/30/256594); - [Drug-seq](https://www.nature.com/articles/s41467-018-06500-x); - [Quant-seq](https://www.lexogen.com/quantseq-3mrna-sequencing/). These methods combine conventional (known) sample-indices to label samples (or wells) with unique molecular identifiers (UMIs). (I found [one question on this topic](https://github.com/COMBINE-lab/salmon/issues/108) in the salmon issue tracker from back in 2016). Here is the Drug-seq approach, for example:. ![Drug-seq](https://media.springernature.com/lw900/springer-static/image/art%3A10.1038%2Fs41467-018-06500-x/MediaObjects/41467_2018_6500_Fig1_HTML.png). The resulting read data resembles that of single-cell approaches and requires deduplication of UMIs and quantification based on reads with a strong 3' bias. It seems analysis of this data could benefit a lot from the algorithms implemented in Alevin. Can this data be analyzed with Salmon and / or Alevin? Are there any pitfalls that I should be aware off?. Many thanks for any feedback - and thanks again for making these great tools available to the community.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/306:539,protocol,protocols,539,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/306,1,['protocol'],['protocols']
Integrability,--splitseqV1 protocol barcode and umi is extra from R1?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/774:13,protocol,protocol,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/774,1,['protocol'],['protocol']
Integrability,"-16 16:57:16.558] [jointLog] [info] Finished optimizer; [2021-04-16 16:57:16.558] [jointLog] [info] writing output. [2021-04-16 16:57:16.681] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-16 16:57:16.775] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-16 16:57:16.775] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-16 16:57:16.911] [jointLog] [info] Aggregating expressions to gene level; [2021-04-16 16:57:17.077] [jointLog] [info] done; [2021-04-16 16:57:17.088] [jointLog] [warning] NOTE: Read Lib [[ Trim/1-2-intestines-LDC4673.filtered.R1.fq.gz, Trim/1-2-intestines-LDC4673.filtered.R2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: Salmon_out/1-2-intestines-LDC4673/lib_format_counts.json for details; ```. However，when I try old version (0.9.1) or latest version (1.4.0), I got a normal mapping rate (77.1074%):. ```; [2021-04-20 10:08:58.047] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-04-20 10:08:58.048] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-20 10:08:58.048] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-20 10:08:58.048] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-20 10:08:58.048] [jointLog] [info] parsing read library format; [2021-04-20 10:08:58.048] [jointLog] [info] There is 1 library.; [2021-04-20 10:08:58.145] [jointLog] [info] Loading pufferfish index; [2021-04-20 10:08:58.146] [jointLog] [info] Loading dense pufferfish index.; [2021-04-20 10:09:05.198] [joi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:4025,protocol,protocol,4025,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,1,['protocol'],['protocol']
Integrability,".806405; [2021-05-20 11:35:04.117] [jointLog] [info] iteration = 400 | max rel diff. = 0.143529; [2021-05-20 11:35:04.611] [jointLog] [info] iteration = 500 | max rel diff. = 0.131881; [2021-05-20 11:35:05.124] [jointLog] [info] iteration = 600 | max rel diff. = 1.67827; [2021-05-20 11:35:05.631] [jointLog] [info] iteration = 700 | max rel diff. = 0.0151842; [2021-05-20 11:35:06.145] [jointLog] [info] iteration = 800 | max rel diff. = 0.135721; [2021-05-20 11:35:06.657] [jointLog] [info] iteration = 900 | max rel diff. = 0.0942774; [2021-05-20 11:35:06.882] [jointLog] [info] iteration = 945 | max rel diff. = 0.00880347; [2021-05-20 11:35:06.894] [jointLog] [info] Finished optimizer; [2021-05-20 11:35:06.894] [jointLog] [info] writing output . [2021-05-20 11:35:06.972] [jointLog] [warning] NOTE: Read Lib [[ /upload/uploads/files/public/1/Mice_A_batch2_1.fq.gz, /upload/uploads/files/public/1/Mice_A_batch2_2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: /results/RNA-Seq/Mice_A_batch2/salmon_out/lib_format_counts.json for details. ```. I also run `STAR` alignment and `htseq-count` on the same sample to quantify expression at the gene level, where the alignment rate is high and quantification is ok:. ```; RNA Alignment Statistics for Mice_A_batch2. Started job on |	May 20 06:25:05; Started mapping on |	May 20 06:25:42; Finished on |	May 20 10:46:09; Mapping speed, Million of reads per hour |	37.44. Number of input reads |	162499486; Average input read length |	300; UNIQUE READS:; Uniquely mapped reads number |	141917701; Uniquely mapped reads % |	87.33%; Average mapped length |	298.28; Number of splices: Total |	128444547; Number of splices: Annotated (sjdb) |	127401836; Number of splices: GT/AG |	127633760; Number of splices: GC/AG |	629527; Number of splices: AT/AC |	35900; Number of splices: Non-canonical |	145360; Mismatch rate per base, % |	0.28%; Deletion rate per base |	0.01%; Deletion average length |	2.29; Insertion ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:7128,protocol,protocol,7128,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['protocol'],['protocol']
Integrability,"0"",; ""numPreAuxModelSamples"": ""1000000"",; ""numGibbsSamples"": ""0"",; ""numBootstraps"": ""0"",; ""vbPrior"": ""0.001"",; ""auxDir"": ""aux_info""; }; ``` . **Expected behavior**; For `salmon quant` to run to completion. **Desktop (please complete the following information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.org/cloudman/), and my installation of Salmon is currently constrained to a conda install. . - I've fiddled with many different CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:2385,wrap,wrapper,2385,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['wrap'],['wrapper']
Integrability,"0.4.2/src/merge_files.cc(17):; /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/include/merge_files.hpp(21): catastrophic error: cannot open source file ""jellyfish/err.hpp""; #include <jellyfish/err.hpp>; ^. compilation aborted for /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INST",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/11:1397,message,message,1397,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11,1,['message'],['message']
Integrability,"022-05-13 03:02:19.507] [jointLog] [info] iteration = 400 | max rel diff. = 5.00889; [2022-05-13 03:02:20.812] [jointLog] [info] iteration = 500 | max rel diff. = 10.9087; [2022-05-13 03:02:22.073] [jointLog] [info] iteration = 600 | max rel diff. = 0.162723; [2022-05-13 03:02:23.316] [jointLog] [info] iteration = 700 | max rel diff. = 0.125884; [2022-05-13 03:02:24.647] [jointLog] [info] iteration = 800 | max rel diff. = 0.611449; [2022-05-13 03:02:26.020] [jointLog] [info] iteration = 900 | max rel diff. = 0.0687607; [2022-05-13 03:02:27.302] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.144642; [2022-05-13 03:02:28.620] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0139885; [2022-05-13 03:02:29.874] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.053712; [2022-05-13 03:02:31.161] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0312546; [2022-05-13 03:02:32.489] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.107944; [2022-05-13 03:02:32.656] [jointLog] [info] iteration = 1,414 | max rel diff. = 0.00665317; [2022-05-13 03:02:32.664] [jointLog] [info] Finished optimizer; [2022-05-13 03:02:32.665] [jointLog] [info] writing output . [2022-05-13 03:02:32.905] [jointLog] [warning] NOTE: Read Lib [[ /fastp_6BE_1.fq.gz, /fastp_6BE_2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: sample6BE.salmon/lib_format_counts.json for details. This is the lib_format_counts.json details . ""read_files"": ""[ /fastp_6BE_1.fq.gz, /fastp_6BE_2.fq.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 27069942,; ""num_assigned_fragments"": 27069942,; ""num_frags_with_concordant_consistent_mappings"": 25715904,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1666158,; ""strand_mapping_bias"": 0.0481568915485141,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1238398,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 24477506,; ""SF"": 981192,; ""SR"": 684966,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/775:3456,protocol,protocol,3456,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/775,1,['protocol'],['protocol']
Integrability,"1.0"" ""1.62.0"" ""1.63.0"" ""1.64.0"" ""1.65.0"" ""1.66.0"" ""1.67.0"" ""1.68.0"" ""1.69.0"" ""1.70.0"" ""1.71.0""); if (NOT BOOST_RECONFIGURE); -find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); +set(BOOST_INCLUDEDIR ""/usr/include/boost169""); +set(BOOST_LIBRARYDIR ""/usr/lib64/boost169""); +set(Boost_FOUND 1); +; message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + message(""ROOT_LIBGFF in env""); + set(LIBGFF_DIR $ENV{ROOT_LIBGFF}); + set(LIBGFF_INCLUDE_DIRS ${LIBGFF_DIR}/include); + set(LIBGFF_INCLUDE_DIR ${LIBGFF_DIR}/include); + set(LIBGFF_LIBRARY_DIRS ${LIBGFF_DIR}/lib); + set(LIBGFF_LIBRARY ${LIBGFF_DIR}/lib); + set(LIBGFF_LIB_DIR ${LIBGFF_DIR}/lib); + set(LIBGFF_FOUND TRUE); +else(); + message(""ROOT_LIBGFF NOT in env""); + find_package(libgff); +endif(); if(NOT LIBGFF_FOUND); message(""Build system will compile libgff""); message(""==================================================================""); @@ -739,7 +769,14 @@; endif(); ; find_package(CURL); -find_package(libstadenio); +if(DEFINED ENV{ROO",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/460:4073,message,message,4073,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460,1,['message'],['message']
Integrability,"1.0/cd14_monocytes](url), with the 10x v1 wrapper, the initialization seems to go smoothly then Alevin produces the following:. ```; [2018-09-13 11:41:47.586] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-13 11:41:47.586] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-13 11:41:47.593] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-13 11:41:47.593] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-13 11:41:47.593] [jointLog] [info] Mapping rate = 0%; ```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:; A downloaded binary Salmon v0.11.2 was executed using the v1 wrapper script compiled locally in a Salmon specific Conda environment. The GRCh38.p12 reference was used. Dataset is linked above in bug description. . Full command used:; `~/bin/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -1 read-I1_*.fastq.gz -2 read-RA_*.fastq.gz -r read-I1_*.fastq.gz --gemcode -i ../../../index_15_pc -p 10 -o ../../alevin_15_pc --tgMap ../../../txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; `; Full terminal output:. ```; (Salmonenv) @compute-1-16: ~/Documents/PBMCStem/cd14/fastqs/flowcell1 $ ~/bin/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -1 read-I1_*.fastq.gz -2 read-RA_*.fastq.gz -r read-I1_*.fastq.gz --gemcode -i ../../../index_15_pc -p 10 -o ../../alevin_15_pc --tgMap ../../../txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; TEMPDIR is /tmp/tmp.fyLlOm2tjU; Running command [salmon alevin -l ISR -1 read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz re",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:1132,wrap,wrapper,1132,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['wrap'],['wrapper']
Integrability,"10; ```; It takes a bit to finish and once done I can do:. List the fasta headers of the decoy sequences; ```; head decoys.txt ; GL456210.1; chrX; chrY; GL456221.1; JH584304.1; ```. While this shows the the new hybrid (genome + transcriptome) fasta file which contains the decoy sequences from the genome, concatenated with the transcriptome (`gentrome.fa`) for a total of 119414 sequences.; ```; zcat gentrome.fa | grep ""^>"" | wc -l; gzip: gentrome.fa: decompression OK, trailing garbage ignored; 119414; ```. To create a salmon index do the following:; ```; salmon index \; -t /no_backup/indexes/salmon/mm10/gentrome.fa \; -i /no_backup/indexes/salmon/mm10 \; -d /no_backup/indexes/salmon/mm10/decoys.txt \; -k 28 --threads 6; ```; The author of `salmon` find that a *k* of 31 seems to work well for reads of 75bp or longer, but recommend considering a smaller *k* if you plan to deal with shorter reads. So I picked `28` cause I have 50bp SE. After the job starts I get this error message:; ```; Version Info: This is the most recent version of salmon.; [2021-12-24 17:32:49.324] [jLog] [info] building index; out : /no_backup/indexes/salmon/mm10; [2021-12-24 17:32:49.326] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2021-12-24 17:32:49.337] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000177564.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping); [2021-12-24 17:32:49.337] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000196221.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731:2346,message,message,2346,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731,1,['message'],['message']
Integrability,"1:HH577BCX2:1:1101:1900:1954; GAGACTTTCTAGTCGATCTACTGCCC; +; GGGGGIIIIIGGGGIGIIIIIIIIII; ```. example of r2.fq:. ```; @D00323:881:HH577BCX2:1:1101:1815:1951; AGGTTGCAGTGAGCTGAGATCGTGCCACTGCACTCTAGCCACCACACCTGGCTAATTTTTGTATTTTTAAGTAGAGACAGAGTTTCGCTATGTTGGCCAG; +; AAA<GGGGA<G.GAGAGA.GGAGAGG.G.GGAAGGG.<.<GGGGGGIIGGGGAGGAGGAGGIIA.AAGAGGIGGAG.<AG.AGGGGAAGGGGGIIGGAG.; @D00323:881:HH577BCX2:1:1101:1963:1952; TAATACCGCTTTAGCTACATCTCAGATCTGGGTAAGTCATGTCTGCATTTTCAATAATTTCATTTTTTAAACTTCTACCTTAATTCTGATGTTTACTCAT; +; GAGGAGGGGAGGIGGGGGGGGIIGGGGGIIGIIGGGGGGGGGGGGGGGGIIIIGIIGGIIGGAGIIIIIGGGGIGGAGAGIIIGGGGGGGIIIIGGGIII; @D00323:881:HH577BCX2:1:1101:1900:1954; GCTTCATATAGTCTTACCTTTCTGAGGACCAATTTGGCTGAATTCTCTGCTTTCTAATCTGACTCCTTATGGGGGATCCCTGCTATAGAGATGTAGACCA; +; GGAGAGGGGAGGIIIGGGIGIIIIIIGIGIIGGGIIIIIIIGGGGGGGIGGGGGGGGGGGGGGIIGIGGGGIGGGAGGIGIGIGGGGGGIGGGIIGGIGG; ```. example of `known_cb.txt`:. ```; GGATAGGGTCATAGCT; GGATAGGGTTAGAGAT; GGATAGGGTTGCCTGG; GGATAGGGTACGCAAG; GGATAGGGTAACGGAC; GGATAGGGTCAACAGG; GGATAGGGTAACGGCA; GGATAGGGTTTGTCTT; GGATAGGGTGCTAGTT; GGATAGGGTACGACCC; ```. According to the documentation, `dumpfq` will output the reads to `stdout`, and here is the content of `alevin_out/corrected_r2.fq`:. ```; Version Info: This is the most recent version of Salmon.; Sequence-Size 17greater than specified 16.; Please report the issue on Github.; ```. In addition, we have some protocol under development, where CBs/UMIs are not in the read1.fq and read2.fq. They are rather in the index reads from illumina (i5 and i7). After calling `bcl2fastq`, we normally get 4 fastqs for each sample:. ```; R1.fastq; R2.fastq; I1.fastq; I2.fastq; ```. Both `R1.fastq` and `R2.fastq` contain important gene/genome information, it is the combination of the sequence in `I1.fastq` and `I2.fastq` that define cells. Is this something that `alevin` might support in future. In this case, if I know exact the sequence of I1 and I2, what the `whitelist.txt` file should look like?. Thank you!. Regards,; Xi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/291:2124,protocol,protocol,2124,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/291,1,['protocol'],['protocol']
Integrability,"1bf67b581cb6d3d83ae1b8d7885c868b7ab634bbf86448889fcc246b9e65374b79270f6d11d5a71ac6335910fcda2b1b9e86bcafe1ae3ae89f; [2020-07-04 15:10:22.800] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-07-04 15:11:07.094] [puff::index::jointLog] [info] ntHll estimated 2630714644 distinct k-mers, setting filter size to 2^36; error: Can't open a temporary file; error: Can't read the input file; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory /scratch/jl2e19/salmon_index; size = 0; -----------------------------------------; | Loading contigs | Time = 84.402 us; -----------------------------------------; size = 0; -----------------------------------------; | Loading contig boundaries | Time = 30.909 us; -----------------------------------------; Number of ones: 0; Number of ones per inventory item: 512; Inventory entries filled: 1; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] contig count for validation: 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info]; Total # of segments we have position for : 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] total contig vec entries 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] bits per offset entry 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] there were 0 equivalence classes; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:16642,wrap,wrapping,16642,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,1,['wrap'],['wrapping']
Integrability,"303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.23916%. Insert size peak (evaluated by paired-end reads): 1. JSON report: RabbitQC.json; HTML report: SRR1852518.html; ```; Best,; Ci",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:3443,adapter,adapter,3443,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,2,['adapter'],"['adapter', 'adapters']"
Integrability,"49 kmerInfo.size():563056; approximateContigTotalLength: 72618120; counters for complex kmers:; (prec>1 & succ>1)=21819 | (succ>1 & isStart)=419 | (prec>1 & isEnd)=421 | (isStart & isEnd)=30; contig count: 717834 element count: 122492815 complex nodes: 22689; # of ones in rank vector: 717833; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory indexs/alt_long_index; size = 122492815; -----------------------------------------; | Loading contigs | Time = 11.032 ms; -----------------------------------------; size = 122492815; -----------------------------------------; | Loading contig boundaries | Time = 5.8509 ms; -----------------------------------------; Number of ones: 717833; Number of ones per inventory item: 512; Inventory entries filled: 1403; 717833; [2021-08-20 18:05:53.775] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2021-08-20 18:05:53.780] [puff::index::jointLog] [info] contig count for validation: 717,833; [2021-08-20 18:05:53.943] [puff::index::jointLog] [info] Total # of Contigs : 717,833; [2021-08-20 18:05:53.944] [puff::index::jointLog] [info] Total # of numerical Contigs : 717,833; [2021-08-20 18:05:53.963] [puff::index::jointLog] [info] Total # of contig vec entries: 3,341,414; [2021-08-20 18:05:53.964] [puff::index::jointLog] [info] bits per offset entry 22; [2021-08-20 18:05:54.037] [puff::index::jointLog] [info] Done constructing the contig vector. 717834; [2021-08-20 18:05:54.564] [puff::index::jointLog] [info] # segments = 717,833; [2021-08-20 18:05:54.564] [puff::index::jointLog] [info] total length = 122,492,815; [2021-08-20 18:05:54.582] [puff::index::jointLog] [info] Reading the reference files ...; [2021-08-20 18:05:55.151] [puff::index::jointLog] [info] positional integer width = 27; [2021-08-20 18:05:55.151] [puff::index::jointLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:4894,wrap,wrapping,4894,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['wrap'],['wrapping']
Integrability,"; diff -au CMakeLists.txt.dist CMakeLists.txt; --- CMakeLists.txt.dist 2019-12-06 10:40:58.430641796 -0800; +++ CMakeLists.txt 2019-12-06 13:14:57.292041895 -0800; @@ -387,7 +387,10 @@; ##; set(Boost_ADDITIONAL_VERSIONS ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62.0"" ""1.63.0"" ""1.64.0"" ""1.65.0"" ""1.66.0"" ""1.67.0"" ""1.68.0"" ""1.69.0"" ""1.70.0"" ""1.71.0""); if (NOT BOOST_RECONFIGURE); -find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); +set(BOOST_INCLUDEDIR ""/usr/include/boost169""); +set(BOOST_LIBRARYDIR ""/usr/lib64/boost169""); +set(Boost_FOUND 1); +; message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + message(""ROOT_LIBGFF in env""); + set(LIBGFF_DIR $ENV{ROOT_LIBGFF}); + set(LIBGFF_INCLUDE_DIRS ${LIBGFF_DIR}/include); + set(LIBGFF_INCLUDE_DIR ${LIBGFF_DIR}/include); + set(LIBGFF_LIBRARY_DIRS ${LIBGFF_DIR}/lib); + set(LIBGFF_LIBRARY ${LIBGFF_DIR}/lib); + set(LIBGFF_LIB_DIR ${LIBGFF_DIR}/lib); + set(LIBGFF_FOUND TRUE); +else(); + message(""ROOT_LIBGFF NOT in env""); + find_package(libgff); +endif(); if(NO",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/460:3727,message,message,3727,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460,1,['message'],['message']
Integrability,"; drwxrwxr-x. 3 modules modules 4096 Sep 6 15:58 share; ls -al $ROOT_LIBGFF; total 20; drwxrwxr-x. 5 modules modules 4096 Dec 6 11:10 .; drwxrwxr-x. 3 modules modules 4096 Dec 6 11:07 ..; drwxrwxr-x. 2 modules modules 4096 Dec 6 11:07 bin; drwxrwxr-x. 2 modules modules 4096 Dec 6 10:59 include; lrwxrwxrwx. 1 modules modules 5 Dec 6 11:10 lib -> lib64; drwxrwxr-x. 2 modules modules 4096 Dec 6 11:07 lib64; ls -al $ROOT_LIBTBB; total 16; drwxrwxr-x. 4 modules modules 4096 Dec 6 11:48 .; drwxrwxr-x. 3 modules modules 4096 Dec 6 11:40 ..; drwxrwxr-x. 3 modules modules 4096 Dec 6 11:40 include; lrwxrwxrwx. 1 modules modules 5 Dec 6 11:48 lib -> lib64; drwxrwxr-x. 2 modules modules 4096 Dec 6 11:40 lib64. ```. Even after I had hacked up the CMakeLists.txt file to set some of these it still wouldn't build. For instance in that file:; ```; ## Try and find TBB first; if(DEFINED ENV{ROOT_LIBTBB}); message(""ROOT_LIBTBB in env""); set(ROOT_LIBTBB ); set(TBB_DIR $ENV{ROOT_LIBTBB}); set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); set(TBB_INCLUDE_DIR ${TBB_DIR}/include); set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); set(TBB_LIBRARY ${TBB_DIR}/lib); set(TBB_LIB_DIR ${TBB_DIR}/lib); set(TBB_VERSION ""2019.6""); set(TBB_FOUND TRUE); else(); message(""ROOT_LIBTBB NOT in env""); find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); endif(). if (${TBB_FOUND}); ```. But apparently that wasn't enough, because:. ```; cmake \; -DCMAKE_INSTALL_PREFIX:PATH=$TOPDIR \; .. ...; TBB_LIBRARIES = ; -- Configuring done; CMake Error at external/pufferfish/external/twopaco/CMakeLists.txt:11 (add_dependencies):; The dependency target ""tbb"" of target ""graphdump"" does not exist.; ```. This doesn't work obviously, but here are the mods to CMakeLists.txt that I tried:. ```; diff -au CMakeLists.txt.dist CMakeLists.txt; --- CMakeLists.txt.dist 2019-12-06 10:40:58.430641796 -0800; +++ CMakeLists.txt 2019-12-06 13:14:57.292041895 -0800; @@ -387,7 +387,10 @@; ##; set(Boost_ADDITIONAL_VERSIONS ""1.59.0"" ""1.60.0"" ""1.61.0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/460:1986,message,message,1986,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460,1,['message'],['message']
Integrability,A PR noting the differences in my approach to #269.; The one that I think needs addressing is in `writeFastq` (https://github.com/COMBINE-lab/salmon/compare/develop...PeteHaitch:develop?expand=1#diff-bf2f37cd9ea77a5c454a5bd860a924ee); without some change to this the `UMI` and `CB` are incorrectly extracted for CEL-Seq2. ; I simply commented out the original lines and modified it as needed for CEL-Seq2 in order to test my modified version.; I guess some sort of protocol-specific conditional is needed here. The remainder are minor/cosmetic choices of variable names (please feel free to ignore!).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/285:465,protocol,protocol-specific,465,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/285,1,['protocol'],['protocol-specific']
Integrability,"A lot of the times when we are assessing our samples before we move on to fragmenting cDNA in to fragments, we look at the distribution of full length cDNA using a Bioanalyzer. See for example panel **a** of [this figure](http://www.nature.com/nprot/journal/v9/n1/fig_tab/nprot.2014.006_F2.html); ![](http://www.nature.com/nprot/journal/v9/n1/images/nprot.2014.006-F2.jpg). With the reference transcriptome, we know the distribution of transcripts with given lengths. We can view the reference transcript length distribution as unweighted distribution of lengths, and the electropherogram as the distribution when weighing transcript lengths by their relative abundances. Thus it seems the distribution of full length cDNA could be informative when inferring the TPMs (relative abundances) in a sample. Do you think it could be possible to integrate with the quantification model?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/56:840,integrat,integrate,840,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/56,1,['integrat'],['integrate']
Integrability,Aborted (core dumped) message at indexing step,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/795:22,message,message,22,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/795,1,['message'],['message']
Integrability,"Add [inDropv2 protocol](https://www.nature.com/articles/nprot.2016.154) to salmon alevin. To use this protocol pass the `--indropV2` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/inDrop.html). R1 is the biological read and R2 is the metadata read. Briefly, the reads have 8-11 bp barcode1, followed by a `W1` sequence which should be specified using `--w1` flag then 8bp barcode2 and 6 bp UMI sequence follows. . Summary of changes:; 1. `--indropV2` flag added to process indropV2 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the positions and avoid searching twice; 3. In case the barcode1 is less than 11bp, `A` is added after joining barcodes 1 and 2 to make the total length 19 bp; 4. If no exact match for w1 is found, a search for w1 with a hamming distance <=2 is performed. It was tested for correlation on run SRR7165069 from GEO submission [GSM3141960](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3141960).; Results:; ![image](https://user-images.githubusercontent.com/12998572/133622734-9b473318-fb39-421d-a322-b018f93ac139.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.3634 0.8981 0.9655 0.9307 0.9874 0.9976 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/703:14,protocol,protocol,14,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/703,3,['protocol'],['protocol']
Integrability,"Add [sci-rna-seq3 protocol](https://www.nature.com/articles/s41586-019-0969-x) to salmon alevin. To use this protocol pass the `--sciseq3` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq3.html). Briefly, the reads have 9-10 bp hairpin adaptor index, and 10bp reverse transcription index which together make the cell barcode of 19-20 bp in length; an 8 bp UMI which follows a 6bp anchor sequence CAGAGC. . Summary of changes:; 1. `--sciseq3` flag added to process sci-rna-seq3 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the position of anchor sequence and avoid searching twice; 3. In case the barcode is 19bp, `A` is added as the last nucleotide to make the cell barcodes length 20 bp for all barcodes. It was tested on data from the [Nature paper](https://www.nature.com/articles/s41586-019-0969-x). Correlation b/w the counts from the GEO submission [GSE119945](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE119945) and sum of spliced, unspliced reads with and without ambiguous counts using `usa` mode in alevin-fry gave reasonable looking correlations. ; Results for one of the fastq files:; ![image](https://user-images.githubusercontent.com/12998572/128923136-eefa8738-f87e-4f67-bba6-5cc1648ce194.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.4594 0.7805 0.8295 0.8253 0.8736 0.9943 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/695:18,protocol,protocol,18,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/695,3,['protocol'],['protocol']
Integrability,Add sci-rna-seq3 protocol to salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/695:17,protocol,protocol,17,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/695,1,['protocol'],['protocol']
Integrability,Add supported protocol information and protocol specific notes.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/723:14,protocol,protocol,14,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/723,2,['protocol'],['protocol']
Integrability,"After generating issue #48, I took the recommendation of switching to the standard EM algorithm, but I'm having further problems. However, I don't think the problem was with the Variational EM algorithm, but an issue with how the dataset is behaving. . This is with the same dataset as before (single end, rRNA-depleted, second-strand protocol, extreme depth of 170M+ reads). I have the options --useFSPD and --biasCorrect turned on with library type ""SF""; the full call is . ```; salmon quant -i $SALMON_DIR -l SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT \; --numBootstraps 100 --useFSPD --geneMap $GENES \; --biasCorrect -p 59; ```. I had attempted to use wasabi and run sleuth, but I got an error where the number of transcripts passing the initial filter was ""NA"". I then discovered that for four samples, many of the transcripts had ""-nan"" generated for the ""NumReads"" column, and this led to all of them having ""-nan"" for the TPM column. One sample had ~100 that failed, but the other three had a variable 106K-109K out of 176K total transcripts fail. No warning or error was thrown during the quantifying or EM optimization steps, so I don't know what happened. Interesting, I should note that the NaNs are only generated when both biasCorrect and useFSPD are turned on. NaNs are not generated when I use only one or neither option. (this was only tested with one sample though). If you have immediate suggestions, that would be great. Otherwise, I can work on generating a test dataset.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/50:335,protocol,protocol,335,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50,1,['protocol'],['protocol']
Integrability,"Alevin in Salmon v0.11.2. **Describe the bug**; When attempting to run Alevin on [https://support.10xgenomics.com/single-cell-gene-expression/datasets/1.1.0/cd14_monocytes](url), with the 10x v1 wrapper, the initialization seems to go smoothly then Alevin produces the following:. ```; [2018-09-13 11:41:47.586] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-13 11:41:47.586] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-13 11:41:47.593] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-13 11:41:47.593] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-13 11:41:47.593] [jointLog] [info] Mapping rate = 0%; ```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:; A downloaded binary Salmon v0.11.2 was executed using the v1 wrapper script compiled locally in a Salmon specific Conda environment. The GRCh38.p12 reference was used. Dataset is linked above in bug description. . Full command used:; `~/bin/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -1 read-I1_*.fastq.gz -2 read-RA_*.fastq.gz -r read-I1_*.fastq.gz --gemcode -i ../../../index_15_pc -p 10 -o ../../alevin_15_pc --tgMap ../../../txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; `; Full terminal output:. ```; (Salmonenv) @compute-1-16: ~/Documents/PBMCStem/cd14/fastqs/flowcell1 $ ~/bin/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -1 read-I1_*.fastq.gz -2 read-RA_*.fastq.gz -r read-I1_*.fastq.gz --gemcode -i ../../../index_15_pc -p 10 -o ../../alevin_15_pc --tgMap ../../../txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; TEMPDIR is /tmp/tm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:195,wrap,wrapper,195,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['wrap'],['wrapper']
Integrability,Allow custom geometry single-cell protocols,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/734:34,protocol,protocols,34,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/734,1,['protocol'],['protocols']
Integrability,"As suggested by Nick Schurch, we should be writing non-error output (including simple logging and informative messages) to stdout rather than stderr.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/55:110,message,messages,110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55,1,['message'],['messages']
Integrability,"CGAAGTTG_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-12-05 15:10:07.252] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ../hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ dumpFeatures ] => { }; ### [ mates1 ] => { /tmp/tmp.lLLibfwH4G/p1.fa }; ### [ mates2 ] => { /tmp/tmp.lLLibfwH4G/p2.fa }; ### [ unmatedReads ] => { ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz ./fastqs/fl",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:3617,protocol,protocol,3617,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['protocol'],['protocol']
Integrability,Cleanup STDOUT and STDERR messages from salmon-0.10.2,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:26,message,messages,26,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['message'],['messages']
Integrability,Conda dependency conflict with ICU between Salmon 1.3.0 and R 4.0.3,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/594:6,depend,dependency,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/594,1,['depend'],['dependency']
Integrability,"Currently the indexer has a --gencode flag to handle the composite fasta headers in GENCODE transcript fasta files and `split the transcript name at the first '|' character`. However, the alignment-based mode doesn't use an index, and the current behavior is to read the fasta headers from -t verbatim. So, if I run the STAR aligner with the standard workflow using GENCODE files as index, the Aligned.toTranscriptome.out.bam output would already be aligned to the transcriptome, with the RNAME fields set in the same way `salmon index --gencode`, for example:. `ST-J00106:110:H5NY5BBXX:3:2211:22495:7240 99 ENSMUST00000195335.1 799 60 76M = 945 222 CTCAGTAGGAAGATTATAACTAATACTCCCCCATCAAACAGTTTTAAGGACAGAAGAGAACAAAGCATGTAAAGTG <AFFFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJFJJJJJJJJJJJJJJJJFFJA<AFJJFFA NH:i:1 HI:i:1 RG:Z:160212_ST-J00106_0110.3`. As a result, Salmon won't quantify anything if I run Salmon in the Alignment-based mode with the official GENCODE transcripts.fa, for example, `salmon quant -l IU -a Aligned.toTranscriptome.out.bam -o $OUTPUT_DIR -t gencode.vM9.pc_transcripts.fa -g gencode.vM9.annotation.gtf` since the RNAME and the FASTA headers don't match, causing a large number of messages like `WARNING: Transcript ENSMUST00000082421.1|ENSMUSG00000064370.1|-|-|mt-Cytb-201|mt-Cytb|1144|CDS:1-1144| appears in the reference but did not appear in the BAM`. Similarly, the gene quantification mode won't work either, since the names in -t and -g will never match. While for the immediate need I can just trim the fasta headers from the GENCODE transctipts.fa using a simple script, it must be an oversight that the same functionality is provided in quasi-alignment mode only.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/95:1203,message,messages,1203,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/95,1,['message'],['messages']
Integrability,"Dear Salmon Team, . Not sure if this message should go here or on the google group, sorry if it shouldn't go here. . I am trying to analyse meta-transcriptome RNAseq data to obtain genes expression from ""complex"" microbial samples (over a 100 strains of bacteria and fungi). I have over 500 millions reads so aligning these reads on references genomes would take forever... Salmon thus looks like a promising solution. . However, i am not sure Salmon is appropriate for meta-transcriptome data. Is there prerequisites if i want to use Salmon for that purpose ? What would be your recommended parameters ?. So far, since i have a reference genome (and thus the associated coding sequences) for all the strains i created a single Salmon Index (comprising all the strains cds) and ran the quantification tool on this index using these parameters: ; salmon quant -i index --libType A --validateMappings --seqBias --incompatPrior 0.0 -r input.fa -o output . I did not include gcbias correction so far because i am not sure it is appropriate in this case. Thanks for you help, . Nathan",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/350:37,message,message,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/350,1,['message'],['message']
Integrability,"Dear alevin team,. I am a developer of Quartz-Seq2 ([Sasagawa Y. et al. Genome Biol. 2018](https://genomebiology.biomedcentral.com/articles/10.1186/s13059-018-1407-3); [Mereu E. et al. bioRxiv](https://www.biorxiv.org/content/10.1101/630087v1)), one of 3’ tagged-end single-cell RNA sequencing. Could you add `Rule` of Quartz-Seq2 protocol to SingleCellProtocols.hpp?. ```; struct QuartzSeq2v31 : Rule{; //Quartz-Seq2 v3.1 starts from 5 end with 14 length; //barcode and 8 length umi & iupac can be; //changed; QuartzSeq2v31(): Rule(14, 8, BarcodeEnd::FIVE, 268435456){}; };. struct QuartzSeq2v32 : Rule{; //Quartz-Seq2 v3.2 starts from 5 end with 15 length; //barcode and 8 length umi & iupac can be; //changed; QuartzSeq2v32(): Rule(15, 8, BarcodeEnd::FIVE, 1073741824){}; };; ```. Best,; Itoshi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/416:331,protocol,protocol,331,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/416,1,['protocol'],['protocol']
Integrability,"Dear community,. I have 4 lane files for each sample. I want to run Alevin on these samples. Alevin runs without any error, but the mapping rate is too low (about 5%). I tried different k-mers, different versions of transcriptome datasets, and all protocols (--dropseq / --chromium / --chromiumV3), but my mapping rate is still too low. Let me explain my workflow. These are my samples:. ```; Sample1_S1_L001_I1_001.fastq.gz Sample1_S1_L002_R1_001.fastq.gz Sample1_S1_L003_R2_001.fastq.gz; Sample1_S1_L001_R1_001.fastq.gz Sample1_S1_L002_R2_001.fastq.gz Sample1_S1_L004_I1_001.fastq.gz; Sample1_S1_L001_R2_001.fastq.gz Sample1_S1_L003_I1_001.fastq.gz Sample1_S1_L004_R1_001.fastq.gz; Sample1_S1_L002_I1_001.fastq.gz Sample1_S1_L003_R1_001.fastq.gz Sample1_S1_L004_R2_001.fastq.gz; ```. I generated single I1, R1 and R2 files by concatenating fastq.gz files across lanes; for instance, Sample1_S1_L001_R1_001.fastq.gz + Sample1_S1_L002_R1_001.fastq.gz + Sample1_S1_L003_R1_001.fastq.gz + Sample1_S1_L004_R1_001.fastq.gz -> Single_S1_L001_R1_001.fastq.gz . I indexed my transcriptome by salmon, and I used Alevin using the indexed transcriptome. I used the following command:. ```; salmon alevin -l ISR \; -1 ""Single_S1_L001_R1_001.fastq.gz"" \; -2 ""Single_S1_L001_R2_001.fastq.gz"" \; --chromiumV3 \; -i $my_index \; -p 48 \; -o outputfolder \; --tgMap $my_tgmap \; --expectCells 10000 \; --forceCells 10000; ```. However, my mapping rate is only ~5%. I used cell ranger on the same data and the same transcriptome; the mapping rate is ~95%.; Is there any bug on Alevin? How can I improve the mapping rate?. Thank you!. ```; Alevin log:; [2022-12-03 15:43:12.004] [alevinLog] [info] Found 117342 transcripts(+0 decoys, +35 short and +0 duplicate names in the index); [2022-12-03 15:43:12.072] [alevinLog] [info] Filled with 117377 txp to gene entries; [2022-12-03 15:43:12.083] [alevinLog] [info] Found all transcripts to gene mappings; [2022-12-03 15:43:12.097] [alevinLog] [info] Processing barcodes fi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/814:248,protocol,protocols,248,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814,1,['protocol'],['protocols']
Integrability,"Dear salmon authors,. While I was using **salmon (v0.11.0, downloaded executable, on a Ubuntu Linux** server) to process a **single-end RNA-seq library**, it reported the following error message:. ""**[ERROR] Transcript IDs are not in sorted order; please report this bug on GitHub!**"" . Actually I found it reports this error message for over tens of millions of times through greping the log file. And the command line I applied to invoke salmon was like this:. ""**salmon quant -i mySalmonIndexFile(FMD based/transcriptome) -l A -r myLibrary.fastq -p 8**"". It looks like this is something about single-end reads processing, since I arbitrarily picked up another pair-end library, which works prefectly fine with command line ""-1 PE_library_1.fastq -2 PE_library_2.fastq"", however, when I deliberately provide only one end of the library with ""-r PE_library_1/2.fastq"", exactly the same error was recurred immediately. Curiously, salmon could still accomplish the whole procedure and generate the results file with the aformentioned error reported. But I' m worried about its reliability in this situation. I' m wondering if you have any clues about this issue. With many thanks ahead!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/265:187,message,message,187,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265,2,['message'],['message']
Integrability,"Due to a current default in the boost library (https://github.com/boostorg/math/issues/1211) in boost::math::digamma, there is a performance hit on aarch64. This happens on v1.10.3 of Salmon, with GNU compiler 13 on Linux aarch64. A 4-thread quantization of one of the Salmon tutorials DRR0* series files spends ~15% of time in this routine (called within CollapsedEMOptimizer). On a larger example, we see 7% performance hit over a run that takes 1300 seconds on 4 cores. On x86 this time is small enough to be lost in the noise. `salmon quant -i athal_index -l A ; -1 DRR016125/DRR016125_1.fastq.gz; -2 DRR016125/DRR016125_2.fastq.gz ; -p $threads --validateMappings -o quants/DRR016125_quant`. There is a simple fix which is to ensure the CMake/Makefiles ensure salmon compiles with: ; `-DBOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS`; or to add that to any file that brings in boost::math via adding `#define BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS` at the start. With that change, a 1300 second runtime drops to 1212 for the larger test case, and for the tutorial case is 48 seconds down to 40 on a 4-core r8g.xlarge (Graviton4). Whilst Boost may fix the issue soon - it's likely that older versions of the library will be found installed for some time. It would be helpful to add this define to cmake settings, or the sources.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/966:333,rout,routine,333,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966,1,['rout'],['routine']
Integrability,Fix typo in CMake message,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/44:18,message,message,18,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/44,1,['message'],['message']
Integrability,Fixes just a small typo in a user message.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/44:34,message,message,34,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/44,1,['message'],['message']
Integrability,"GGCGTTCTTGCATTCCTGGAACCT; +D00585:40:CB7FUANXX:1:2113:18626:8045; BBBBBFFFFFFFFFFFF<FBFFFFFF; ``` . And an extract of the reads fastq:; ```; @D00585:41:CB64LANXX:1:1202:13646:88674; TCTGTTCATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCAT; +D00585:41:CB64LANXX:1:1202:13646:88674; BFFF<FFFBFFB<FFFB<FFFBF//FFFFB<FFFF<F///FFFB/BF<//F<7//FBFBB/F<BF</F<FFFFFFFF<</<FFBFBFFBFF<FBBBBB; @D00585:40:CB7FUANXX:1:2113:18626:8045; ATGTGTATTTGCTGTCTCTTAGCCCAGACTTCCCGTGTCCTTTCCACCGGGCCTTTGAGAGGTCACAGGGTCTTGATGCTGTGGTCTTCATCTGCAGG; +D00585:40:CB7FUANXX:1:2113:18626:8045; FFFFFBFFFFFFFFFFFB/FBFFFFBFFFFFFFBBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFFFBFFFFFFFFFFFFFFFFFF<FFBFFBBBBB; ``` . This is the log of the analysis:; ```; Version Info: This is the most recent version of salmon.; Logs will be written to /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample/logs; [2019-06-23 18:08:01.732] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-06-23 18:08:01.805] [alevinLog] [info] Loading Header; [2019-06-23 18:08:01.807] [alevinLog] [info] Loading Transcript Info ; [201",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:1654,protocol,protocol,1654,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['protocol'],['protocol']
Integrability,"Good Afternoon,. I hope this message finds you well. . I am having a hard time running salmon version 0.14.1 downloaded via bioconda. I am trying to count my reads using alignment-based mode. Whenever I run the program, I get similar error messages to [issue 104](https://github.com/COMBINE-lab/salmon/issues/104). Here is the command I am running:. salmon quant -t trimmed_fasta/SRR1810204_1.trim.fastq -l A -a results/bam_files/SRR1810204_1.trim.fastq.bam -o salmon_test. trimmed_fasta/SRR1810204_1.trim.fastq is a fastq sample that I've obtained following trimmomatic and contains the forward strands of the data. . results/bam_files/SRR1810204_1.trim.fastq.bam is the bam file following bwa alignment of the fastq file here and its reverse strand to a reference database. . Could the issue be that I am not using both forward and reverse strands in the target argument for salmon since they were both used to generate the alignment file? I tried to look at the docs for guidance on the best course of action, and I had a hard time finding info. All help would be very much appreciated. All the best,; Craig",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/520:29,message,message,29,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/520,2,['message'],"['message', 'messages']"
Integrability,"Good morning,. I'm a *nix developer with a lot of experience porting software to various platforms. My preferred method for deployment is build-from-source package managers such as FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc (which I use extensively on CentOS), etc. Package managers in-general minimize problems for end users (and hence reduce PRs for you guys). Build-from-source package managers also allow customizing build options (e.g. adding -march=native), which can sometimes offer significantly better performance than you can get from a generic binary package that has to support older CPUs. Currently, developing such packages for salmon is a challenge due to the way the build system works. I've been looking through the build system and the main barrier to packaging is the unconditional bundling of some dependencies, such as seqlib and htslib. If you were to update the cmake systems so that they first look for *all* dependencies installed externally, as they already do for jemalloc and tbb, then it would be easier for developers to package salmon. Best,. Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/502:823,depend,dependencies,823,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/502,2,['depend'],['dependencies']
Integrability,"Greetings,. When trying to debug test failure, I ended up with an incomplete error messages which turned out to stem from a typo in the variable name, so I took the liberty to make the whole message a bit more verbose to help with the present and future debugging. I thought you might be interested.; Have a nice day, :); Étienne.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/810:83,message,messages,83,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810,2,['message'],"['message', 'messages']"
Integrability,"Hello Bob, ; I am trying to implement Salmon 1.5.3 and I have problems running the quant mode. I succeed to prepare the index using decoy protocol and I am trying reads quantification mode.; I; used this command line:; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant -i salmon_index -l ISF -1 rawDataPE/ERR3537668_1.fastq.gz -2 rawDataPE/ERR3537668_2.fastq.gz --validateMappings -o transcripts_quant_test. and I got this message error:; Exception : [std::bad_alloc]; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant was invoked improperly.; For usage information, try ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant --help; Exiting. Would you have any idea why I got this message error? Could you please help me to solve this problem?; Best ; Luciana",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/717:138,protocol,protocol,138,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/717,3,"['message', 'protocol']","['message', 'protocol']"
Integrability,"Hello Rob,; First, thanks for developing Salmon!. When running Salmon quant (v 0.91), I'm getting messages like this "" [warning] couldn't find transcript named [uc022cpe.1] in transcript <-> gene map; returning transcript as it's own gene"" for all the transcripts although the -g option is in use. . This happens even though my file does contain the relevant gene and transcript names, since when I search for the transcripts, I do find them in the GTF file:; grep uc022cpe.1 ~/gtf_files/hg19_UCSCgenes_gene_names.gtf; chrY	hg19_knownGene	exon	28507136	28507239	0.000000	+	.	gene_id ""U6""; transcript_id ""uc022cpe.1"";. My command line was: . ~/miniconda2/envs/salmon/bin/salmon quant -i ~/salmon/hg19_index_v0.91 -l A -1 <(bunzip2 -c my_fastq_1.fastq.bz2) -2 <(bunzip2 -c my_fastq_2.fastq.bz2) -o my_output -g ~/gtf_files/hg19_UCSCgenes_gene_names.gtf. Any suggestion? . Than you for your support,; Doron",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/208:98,message,messages,98,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/208,1,['message'],['messages']
Integrability,"Hello all, . I really wish Salmon was easier to install. . When running: . _cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX='/home/.../salmon-master/'_. I get the following message: . _Making Release build; running /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh 2>&1; /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh: line 33: curl: command not found; -- fetch RAPMAP exit code 127. CMake Error at CMakeLists.txt:265 (message):; Could not fetch RapMap source [fetchRapMap.sh returned exit code 127]. -- Configuring incomplete, errors occurred!; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeOutput.log"".; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeError.log""._. This seems to be an issue that keeps coming up. What is the proper way to solve it? ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/331:173,message,message,173,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331,2,['message'],['message']
Integrability,"Hello all, we are trying to use salmon quant on environmental samples using a big index but the quant step keeps crashing. While trying to quant different samples all crashed at the same step with the error message: `Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]`. The system is part of a cluster and we have requested 500gb of RAM and disk available for the job and I kept track of the memory and disk usage which never exceeded 254gb. lsb_release -a; ```; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 6.4 (Carbon); Release:	6.4; Codename:	Carbon; ```. Do you have any idea what can be the causing the error?. Thanks. We are using the precompiled salmon bin and running it with:. `salmon quant -i $index -1 $f1 -2 $f2 -o $output_folder --meta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/129:207,message,message,207,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129,1,['message'],['message']
Integrability,"Hello there!. I am analysing BD Rhapsody Single cell data and am wondering how to proceed with Salmon Alevin. After alignment I expected to create a Seurat Object with information of sample tags obtained from R2 but I could not achieve this. ### **Background**; This is mice data comprised of 2 sequences: R1 contains CB (27bp divided in three sections of 9bp) and UMI, while R2 contains sample tag information and the transcript info as well. I need to differentiate not only the CB, but also the sampletags present in R2 since there are 5 different samples per cartridge. As stated in page 30 of the [BD Library Preparation Protocol](https://www.bdbiosciences.com/content/dam/bdb/marketing-documents/resources-pdf-folder/Protocol-EnhBead-+-Targeted+-AbSeq-+-ST-ruo.pdf), each sampletag is 70bp long (sampletag + abseq). . I have followed the [BD Single-Cell Multiomics Bioinformatics Handbook](https://scomix.bd.com/hc/article_attachments/9315606097549/23-21713_03__BD_Single-Cell_Multiomics_Bioinformatics_Handbook_EN.pdf), in which page 20 states: . > To account for every Sample Tag, each Sample Tag sequence in the kit is considered during pipeline analysis, whether the Sample Tags are used in the experiment or specified with a sample name.; The pipeline automatically adds the Sample Tag sequences to the FASTA reference file. Reads that align to a Sample Tag sequence and associate with a putative cell are used to identify the sample for that cell. ### **What I have tried so far**. 1. Added the sample tag sequences to the end of gentrome file; ```; [user@remote]$ tail -n 80 m.mus_gentrome.fa.gz; >JH584295.1 dna_sm:scaffold scaffold:GRCm39:JH584295.1:1:1976:1 REF; GGCTGAGCGGTGACATCATGGGCGGCGGGGTCCCAGACAGGAAGTGGGCGTGGCCTCCCA; CACTCACCCTGGCCCGCGGCGTCTGCCAGGTCGCTGTCCGAGATGCCGCCTGTggggggg; [...]; >sampletag11G; GTTGTCAAGATGCTACCGTTCAGAGGGTTGGCTCAGAGGCCCCAGGCTGCGGACGTCGTCGGACTCGCGT; >sampletag12G; GTTGTCAAGATGCTACCGTTCAGAGCTGGGTGCCTGGTCGGGTTACGTCGGCCCTCGGGTCGCGAAGGTC; ```. 2. Added the",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/850:626,Protocol,Protocol,626,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/850,2,['Protocol'],"['Protocol', 'Protocol-EnhBead']"
Integrability,"Hello! I am having some difficulty quantifying RNAseq data with salmon in mapping-based mode. I have been struggling with this for a few days and would be very grateful for any advice on how to move forward. Thank you in advance. Here is my command:; ```; #!/bin/bash -l ; #SBATCH -J male_salmon_map; #SBATCH -t 700:00:00; #SBATCH -p high; #SBATCH --cpus-per-task=24; source ~/.bashrc; source activate salmon; cd /home/seboles/abaloneraw/salmon_quantification/salmon_male/abalone_orfs/; ./bin/salmon -i salmon_index -p 8 -l --libType A -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz --validateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/ve",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:644,message,message,644,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['message'],['message']
Integrability,"Hello!. I'm packaging salmon and many of its dependencies for Debian in support of https://github.com/Blahah/transrate/issues/160. I have a messy patch to enable the use of external libraries instead of bundled or downloaded copies at http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/dependency-fix. As I'm not a CMake expert I was only able to make it work for Debian instead of a generic solution that would fall back to the shipped copies or downloading as it is now. Perhaps you all are better with CMake than I am? A generic solution would be best so I don't have to adjust the patch with every change to the CMakeLists.txt. Specifically it would be great to support; - [ ] external copy of spdlog headers and the cereal serialization headers; - linking to external dynamic libraries for; - [ ] boost; - Headers: https://packages.debian.org/sid/amd64/libboost1.58-dev/filelist; - Sample library layout: https://packages.debian.org/sid/amd64/libboost-filesystem1.58-dev/filelist; - [ ] bwa; - Headers & library: https://ftp-master.debian.org/new/bwa_0.7.12-5.html; - [ ] jellyfish; - Headers & library: https://packages.debian.org/sid/amd64/libjellyfish-2.0-dev/filelist; - [ ] tbb; - Headers & library: https://packages.debian.org/sid/amd64/libtbb-dev/filelist; - [ ] libgff; - Headers & library: https://ftp-master.debian.org/new/libgff_1.0-1.html; - [ ] staden IOLib; - Headers & library: https://packages.debian.org/sid/amd64/libstaden-read-dev/filelist. I also have a patch to support the latest release of jellyfish that I can turn into a pull request, should you want it: http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/19:45,depend,dependencies,45,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19,2,['depend'],"['dependencies', 'dependency-fix']"
Integrability,"Hello, ; Could someone tell me what this error message means and if there is a way to fix the issue? I'm trying to use salmon for my Master's project data (I break down salmon into two parts to make it easier for myself) but keep getting the error message below during the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/855:47,message,message,47,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855,2,['message'],['message']
Integrability,"Hello, I am relatively new to bioinformatics/salmon. I am using the newest version of salmon (v1.10.0, downloaded executable). I created two decoy-aware transcriptomes using 1. a Trinity assembly created with 24 RNA-seq samples plus a published genome of the same species (an insect) and 2. a transcriptome compiled using Evigene into which I fed the same Trinity assembly, a MEGAHIT assembly (created with the same read files), and a previously published transcriptome from the same species, along with the same published genome of the same species as above. Running salmon with the two different indexes yields very different results using the same set of paired-end RNA-seq files. With the Trinity assembly-only-index, I get ""expected_format"": ""IU""; whereas with the Evigene index, I get ""expected_format"": ""ISR"". Why would this differ when the read files are exactly the same? Isn't the read file what is being looked at to automatically detect the library type? . For the Trinity index, here is an example from one sample:; ""strand_mapping_bias"": 0.5196075475175259; ; The same sample run with the Evigene index gave:; ""strand_mapping_bias"": 0.00013477965729161834. . For every sample run with the Trinity index, a warning ""Detected a *potential* strand bias > 1% in an unstranded protocol"" appeared, whereas this was very rare for samples run with the Evigene index, even though when using the latter, the strand-mapping_bias was FAR farther from the 0.50 ideal (it was always < 0.01). Why is this the case? I expected similar results using both indexes, because the read files used to create the two transcriptomes were largely the same, and both used Trinity as part (or all) of the transcriptome assembly process. . Thank you in advance for your insight. Holly Williams",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/840:1286,protocol,protocol,1286,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/840,1,['protocol'],['protocol']
Integrability,"Hello, I'm interested in trying out Salmon for the first time. In this analysis, I would like to disentangle a host eukaryote organism's reads for quantification from read data containing it and eight of its microbial symbionts. The host (C. elegans worms) of course has a great genome and transcriptome available.` transcript.fa` is no problem.; The microbes all have genomes and gtfs, but not transcript files (on NCBI). Luckily, I'm not interested in quantifying them - I checked a couple samples with STAR and BBsplit (within the BBmap toolkit) and microbial read abundance is too low for any one bacterium to use in analysis. However, I still need to get those bacteria reads out of the picture when quantifying the host worm reads/transcripts. **What is the best approach to go from a mixed-organism read pool to quantified host transcripts?**. - Perhaps, target-transcriptome = worm_transcripts.fa, with a concatenated decoy composed of worm transcripts, worm genome, and the genomes of the 8 microbes? This seems like the fastest and least error prone method, based on my developing understanding of Salmon. - Or, truly align reads and bin them to new fastq files using genomes+gtfs with STAR/samtools (or just genomes with BBsplit). Then take the putative worm-only reads, and then run Salmon in a single-organisms routine manner? Perhaps this is more accurate in a way?. Thank you for any advice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/901:1324,rout,routine,1324,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/901,1,['rout'],['routine']
Integrability,"Hello, before writing further, I want to say that I have read through previous related open/closed issues but could not find a suitable answer. The problem: rather different mapping rates depending on library type. I am working with 150+ RNA-seq samples from two dozen tissues. I generated a novel, non-redunant transcriptome from these samples (which also includes the known annotation from ensembl) using ryuto. Following filtering of likely artifacts, predicting non-coding, and lowly expressed transcripts (identified via salmon v1.8.0), a _final_ transcriptome is generated. The selective alignment index (with decoys) is then used for a second and final round of quantification as. ```; salmon quant \; -p {threads} \; --seqBias \; --gcBias \; -i {input.sal_idx} \; -l A \; --numGibbsSamples 100 \; --dumpEq \; -1 {r1} \; -2 {r2} \; -o {params.out_dir}; ```. This is a rather heterogeneous collection of RNA-seq data with ~30% polyA selected and unstranded and ~70% rRNA-depleted and stranded so I expect some _interesting_ results along the way. Included in this collection are a handful of samples with both library preps and this is where I first noticed the problem above. For example, one sample has a polyA mapping rate of 84.01% and a ribo-dep of 46.67% (portion of each _meta_info.json_ below). Both of these however had STAR uniquely mapped reads >90%. Overall, the polyA samples have salmon mapping rates between ~75-90% while the ribo-dep at ~35-60%. I checked for rRNA contamination with RSeQC for a couple of the ribo-dep samples but did not observe anything significant to explain the decrease. I also want to note that these libraries were generated years apart and sequenced at different facilities so I am quite sure that is introducing a fair amount of variance. I guess I still I would have expected more similar mapping rates but apologies if this is the most obvious likely culprit!. My questions are; 1. What could be explaining this difference on the whole or between indi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/779:188,depend,depending,188,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/779,1,['depend'],['depending']
Integrability,"Hello, salmon developer!; I am working on an arm HPC machine. And when I tried to build with salmon on it. I found a little problem in the CMakeLists.txt. ```; not setting -DHAVE_NUMERIC_LIMITS128; CMake Error at /home/hzwi/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Iconv (missing: Iconv_LIBRARY); Call Stack (most recent call first):; /home/houzhuangwei/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /home/hzw/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindIconv.cmake:165 (find_package_handle_standard_args); CMakeLists.txt:362 (find_package); ```; It seems the cmake can not found the right path of libiconv.; So I change the CMakeLists.txt the 362-365 line.; ```; find_package(Iconv REQUIRED); if(NOT Iconv_IS_BUILT_IN); set(ICONV_LIB Iconv::Iconv); endif(); ```; ```; find_package(iconv); if(NOT Iconv_IS_BUILT_IN); set(ICONV_LIB Iconv::Iconv); endif(); ```; or ; I use the -D in the cmake like; ```; cmake -DFETCH_BOOST=TRUE -DBOOST_ROOT=/path/boost -DCMAKE_INSTALL_PREFIX=/path/salmon-1.8.0/salmon_install -DIconv_LIBRARY=/path/libiconv-1.16/iconv_install/lib ; ```; Then the configure was success",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/776:338,message,message,338,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/776,1,['message'],['message']
Integrability,"Hello,. I am doing my best to get the pigx-rnaseq workflow to install locally. Sadly, pigx' test routines bail out with a complaint on a missing sa.bin file as part of the files that are created by `salmon index`. I had tried salmon 1.2 and salmon 1.3 - no sa.bin, also not in your source tree. I placed this as an issue [here](https://github.com/BIMSBbioinfo/pigx_rnaseq/issues/78) and besides grepping through your source tree did some reading also on https://salmon.readthedocs.io . Still, I have no indiation about a missing option or so or if that file was only created in an earlier version. Did I miss this somewhere? Otherwise please kindly consider to explain as part of your documentation what files are to be expected in the index folder. Many thanks and regards,; Steffen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/553:97,rout,routines,97,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/553,1,['rout'],['routines']
Integrability,"Hello,. I was wondering if it would be possible to add support in Alevin for these two protocols:; https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq.html; https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq3.html. The documents there describe the sequencing protocol and primer/barcode/UMI structures (which differ between the two technologies due to the addition of a hairpin sequence in the v3 protocol.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/624:87,protocol,protocols,87,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/624,3,['protocol'],"['protocol', 'protocols']"
Integrability,"Hello,. Thanks for creating this efficient and rapid tool. I have earlier used Salmon in alignment based-mode and now trying the mapping based mode. I get a ""Version Server Response:Not found"" message on quantification of fast read. I suspect the problem is with my index but I am not entirely sure what exactly. I installed salmon version 1.10.1 from Bioconda, and built the index, which appeared to have executed successfully. Below is the trail of commands:. (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % conda install -c bioconda salmon. Building decoy aware index; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % grep ""^>"" ../rna_seq_trial/GRCh38.primary_assembly.genome.fa | cut -d "" "" -f -1 > decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % less decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % sed -i.bak -e 's/>//g' decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % cat ../rna_seq_trial/gencode.v43.transcripts.fa ../rna_seq_trial/GRCh38.primary_assembly.genome.fa > gentrome.fa; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode. This results in successful building of the index. Then when I attempt a mapping based quantification for a paired end reads FW and RV, as below, I get therefor mentioned. salmon -i salmon_index -l A -1 $FW -2 $RV --validateMappings -o /Volumes/Ultra_Touch/malaria/Salmon/$FILEBASE/. The info.json file from the index folder has these contents:. {; ""index_version"": 4,; ""reference_gfa"": [; ""salmon_index""; ],; ""sampling_type"": ""dense"",; ""k"": 31,; ""num_kmers"": 2662886061,; ""num_contigs"": 37302977,; ""seq_length"": 3781975371,; ""have_ref_seq"": true,; ""have_edge_vec"": false,; ""SeqHash"": ""39d9ea9f308ee7e18cdb034c1d064c3a9722df115147533a2ec237fb7cecfca9"",; ""NameHash"": ""29a75bc06784c090e5e015d4a5a7e895b7b3d91c9855a10528ee0130377edf3d"",; ""SeqHash512"": ""4e84aa54ec0cb1dad420c66197d8a9485e913b0a60805f2d7e44ce71ad0521b8103cf94dad72e1530b05dc0d08f39e5d4b9225345d8e7ffc60cb5",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/851:193,message,message,193,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/851,1,['message'],['message']
Integrability,"Hey there!; I got the following error when running the command `~/tools/Trinityrnaseq-v2.6.6/util/align_and_estimate_abundance.pl --seqType fq --samples_file gpul_adpul_samples.txt --transcripts Gpul_Adpul_trinity.Trinity.fasta --est_method salmon --trinity_mode --prep_reference`:. _[2020-06-11 01:53:08.809] [jointLog] [warning] NOTE: Read Lib [[ /dev/fd/63, /dev/fd/62]]_. _Detected a potential strand bias > 1% in an unstranded protocol check the file: ADPUL3/lib_format_counts.json for details_. _CMD: /home/curupi/tools/Trinityrnaseq-v2.6.6/util/support_scripts/salmon_trans_to_gene_results.pl ADPUL3/quant.sf /home/curupi/data/pulchella/fastq/trim/Gpul_Adpul_trinity.Trinity.fasta.gene_trans_map > ADPUL3/quant.sf.genes_. strand_mapping_bias: 0.9945332800206606. May anyone help me, please?; Thank you in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/536:432,protocol,protocol,432,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/536,1,['protocol'],['protocol']
Integrability,"Hey, . First, thanks a lot for implementing Alevin for the analysis of scRNA-seq, it is super useful. I would like to open the file ```alevin/quants_tier_mat.gz``` but I am not being able to do it. . When I try to follow the parser instructions [here](https://github.com/k3yavi/vpolo/blob/242b519ea47eae1cce14bb3bafb736a1f3ad7d40/vpolo/alevin/parser.py) I am facing this error when importing sce:; ```; ImportError: cannot import name 'sce' from partially initialized module 'sce' (most likely due to a circular import) (/home/egonie/.local/lib/python3.8/site-packages/sce/__init__.py); ```. I have already imported```vpolo``` which I have installed with: ; ```; pip3 install vpolo; ```. Also I have tested the R library ```fishpond```with the function; ```; fishpond::readEDS(numOfGenes = num.genes, numOfOriginalCells = num.cells, countMatFilename = tier.file, tierImport = T); ```; Which outputs this message:; ```; Error in validObject(x) : ; invalid class ""dgCMatrix"" object: all row indices must be between 0 and nrow-1; ```. Any insight that helps in reading Alevin tiers file would be much appreciated. Thanks in advance and sorry for the inconveniences. Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/596:904,message,message,904,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/596,1,['message'],['message']
Integrability,"Hey. I am using the CellNet protocol and encountered the following issue. The index I am using is from refgenie. ; Any help would be much appreciated. thank you. ; determining read length; Trimming reads; This is cutadapt 4.2 with Python 3.10.8; Command line parameters: -m 30 -u 18 -u -17 -o ./subset_SRR12820270_trimmed.fq subset_SRR12820270.fastq; Processing single-end reads on 1 core ...; Finished in 99.186 s (2.870 µs/read; 20.90 M reads/minute). === Summary ===. Total reads processed: 34,554,336. == Read fate breakdown ==; Reads that were too short: 778,286 (2.3%); Reads written (passing filters): 33,776,050 (97.7%). Total basepairs processed: 2,555,642,890 bp; Total written (filtered): 1,335,316,421 bp (52.2%); Salmon; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//default }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR12820270_trimmed.fq }; ### [ output ] => { salmonRes_SRR12820270 }; Logs will be written to salmonRes_SRR12820270/logs; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant --help; Exiting.; [2023-02-27 15:21:11.968] [jointLog] [info] setting maxHashResizeThreads to 5; [2023-02-27 15:21:11.968] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-27 15:21:11.969] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-27 15:21:11.970] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-27 15:21:11.970] [jointLog] [info] parsing read library format; [2023-02-27 15:21:1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/833:28,protocol,protocol,28,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833,1,['protocol'],['protocol']
Integrability,"Hi , . I am having issues with calculating the differential splicing using SUPPA. I have tried several times but kept getting the same error message, even though all files required are uploaded. . The error message is below:; ```; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; [1] ""Parsing samples...""; [1] ""Loading ./results/iso_tpm_formatted.txt...""; Error: first_condition %in% colnames(input_file) are not all TRUE; Execution halted; [1] ""Parsing samples...""; [1] ""Loading ./results/events.psi...""; Error in file(file, ""rt"") : cannot open the connection; Calls: read.table -> file; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './results/events.psi': No such file or directory; Execution halted; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; CalculateDifferentialSplicingEvents.sh: line 24: -e: command not found; ```. Could you please help me with this ; **Thank you in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/859:141,message,message,141,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/859,3,['message'],['message']
Integrability,"Hi @rob-p and all,. Thank you for the wonderful tool.; I've been using Salmon for some time now, and have encountered a question.; How is Salmon affected by different read lengths and adapters?. I have a dataset with 5%-15% adapters at 3' of read. How will salmon output be affected if:; 1) I don't remove them; 2) I trim all reads down; 3) use an adapter trimming program - resulting in reads with different length. . Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/634:184,adapter,adapters,184,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/634,3,['adapter'],"['adapter', 'adapters']"
Integrability,"Hi @rob-p,. would it be possible to add a feature similar to `salmon quant` like `--read-geometry 1[1-end]` (as in Alevin) to define which part of both R1 (and R2) should be used for the quantification? That would omit the need for trimming in case of adapters and make salmon workflows even more lightweight. best,; -Alex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/743:252,adapter,adapters,252,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/743,1,['adapter'],['adapters']
Integrability,"Hi Rob & Team, . First and foremost, my thanks for developing such a great and versatile tool, very grateful for your work. . I'm hoping for some words of wisdom. We've got some data from Lexogen CORALL libraries (parired end + UMI). One of the main benefits in using this kit, is the lack of fragmentation step, instead there is Displacement Stop Primers (DSP) which are theoretically randomly distributed. . One approach we've taken is to trim adapters, and collapse UMIs (from STAR alignment). Following these steps, we've got theoretically clean data, so using `samtools fastq` to make a Salmon-friendly input. We observed a very unusual fragment length distribution with this, it looks largely poisson. I've rationalised this as the fragments being particularly short after UMI + Adaptor trimming, and given the random nature of DSPs, this could make some sense. One thing that stuck out in my mind was ordering of the reads (which were coord sorted), thus they'd be coming into salmon that way, breaking an assumption of the streaming EM algorithm. . We're currently name sorting the reads prior to Salmon quantification, but I wonder if you could explain if this unusual FLD could be a consequence of position sorted fastq, or any other thoughts you have around this situation? The good news is that ultimately, the same high level biology comes out of the quantifications whichever way do it. . Thanks for any insight. Andrew",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/765:446,adapter,adapters,446,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/765,1,['adapter'],['adapters']
Integrability,"Hi Rob,. I've been running another group's samples (single-end, second-strand protocol), and I have a script that iterates through each sample and runs salmon. I'm running the latest version (0.6.0) with the following arguments: salmon quant -i salmon_index --libType SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT --numBootstraps 100 --useVBOpt --useFSPD --geneMap $GENES --biasCorrect -p 59. During the EM iteration step (soon after the 500th round, when salmon recalculates effective lengths), I get this error: . ```; [jointLog] [info] iteration 500, recomputing effective lengths; [jointLog] [info] iteration = 500 | max rel diff. = 64.1299; Exception : [Error in function boost::math::digamma<long double>(long double): Evaluation of function at pole -nan]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. I can't tell if this is just a regular possible occurrence with the non-deterministic algorithm or if this is never supposed to happen. These particular samples are extremely high depth (about ~170-190M reads per sample), so that might be the cause, but I don't understand enough of how the algorithm works to know how to troubleshoot or to put together a toy dataset that reproduces the error. Rerunning the sample that causes the error often works. If I can throw in a feature request here, it would be great to be able to set the seed to make the runs deterministic. Is that possible?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/48:78,protocol,protocol,78,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/48,1,['protocol'],['protocol']
Integrability,"Hi Robb,. I'm getting the following warning message in all my runs of Salmon (0.7.2). Always the same transcript for all the libraries. The transcript reported has, indeed, no gene associated in the genemap file but it appears in the ""quant.gene.sf"" output file. I've checked with a different dataset (different species, libraries and transcriptome reference) and there's always also one transcript reported. I'm feeding Salmon with the genemap in the 2-columns format. Do you have any clue about what could be happening?. Thanks!. ```; Computing gene-level abundance estimates; There were 25081 transcripts mapping to 11607 genes; Parsed 54000 expression linesWARNING: couldn't find transcript named [v3_99998_1_1]; returning transcript as it's own gene. done; Aggregating expressions to gene level . . . done; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/98:44,message,message,44,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/98,1,['message'],['message']
Integrability,"Hi Salmon team. Are there plans afoot to support quantification of scRNA-seq data with unique molecular identifiers (UMIs)? UMIs are very commonly used in scRNA-seq data now, and correct quantification requires ""de-duplication"" of the reads so that each UMI is only counted once for expression quantification. Doing this is not entirely trivial, as a quick survey of tools available shows (e.g. [UMI-tools](https://github.com/CGATOxford/UMI-tools), [umitools](https://github.com/brwnj/umitools), [umis](https://github.com/vals/umis), [umi](https://github.com/aryeelab/umi/wiki)). . Nevertheless, it would be _very_ convenient for those Salmon fans amongst us dealing with scRNA-seq data to be able to process scRNA-seq data with UMIs directly with Salmon. Selfishly, this would be awesome for the Salmon integration with the scater package (now fully implemented). . Not to make a thing of it, but kallisto is now providing some support for UMI quantification (https://pachterlab.github.io/kallisto/singlecell.html) ;P. Best; Davis",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/93:804,integrat,integration,804,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93,1,['integrat'],['integration']
Integrability,"Hi `COMBINE-lab/salmon`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential secu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:136,integrat,integrated,136,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,2,['integrat'],['integrated']
Integrability,"Hi and thank you for helping,. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Running alevin on 10x v1 data results in the following error:; > [alevinLog] [info] Starting Import of the gene count matrix.; > Exception : [std::bad_alloc]; > alevin was invoked improperly. **To Reproduce**. * Salmon version: Release v0.11.3; * Installed from: Compiled. I also followed the instructions from the [alevin tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) to compile the `scripts/v1_10x/wrapper.cpp` file; * Reference transcriptome: [Homo_sapiens.GRCh37.cdna.all.fa](ftp://ftp.ensembl.org/pub/grch37/release-83/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh37.cdna.all.fa.gz); * Which read files were used? Either the [CD14+ Monocytes from the 10x v1 paper](http://s3-us-west-2.amazonaws.com/10x.files/samples/cell-exp/1.1.0/cd14_monocytes/cd14_monocytes_fastqs.tar) or the [PBMC 3k from the same paper](http://cf.10xgenomics.com/samples/cell-exp/1.0.0/pbmc3k/pbmc3k_fastqs.tar); * Which program options were used?; I ran the following command for the CD14 Monocytes dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:579,wrap,wrapper,579,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['wrap'],['wrapper']
Integrability,"Hi everyone,. Is there a way to feed pre-transformed files into Alevin? We've been using Valentine's nice umis repository https://github.com/vals/umis as our preprocessing step to put sample, cell and UMI barcodes into the read name. They end up with formats like this:. ```; @ST-K00126:314:HFYL2BBXX:7:1101:1631:1226:CELL_GGGCACTAGCTGATAA:UMI_GGGCCCAACG:SAMPLE_GTAATTGC; GNTGTGGCAGAGCAGCGACCCGCGGCGGGGCGGCATCCCCAGCTGGTTCGGGCCGGGACGGGGCGGCCAGCAGGGACGCGCCCCAGGGGGGCAGCTGT; +; A#-<<F7<AJF-FJ<JAAJJFJJ<AF-7AJF77<FJJJFFFJJ<JA-7-777<-F7<<F--7AA7AAAFF-AF<A-AFFA7J7F--7)-)7--7A<J-; ```; the nice thing about the way umis is doing it is you can specify how to do transformations via a JSON file that has regexes regarding where in the original FASTQ files the UMI/cell/sample barcodes are. For example, for 10x v2:; ```json; {; ""read1"": ""(?P<name>@.*) .*\\n(?P<CB>.{16})(?P<MB>.{10})(.*)\\n\\+(.*)\\n(.*)\\n"",; ""read2"": ""(@.*) .*\\n(?P<seq>.*)\\n\\+(.*)\\n(?P<qual>.*)\\n"",; ""read3"": ""(@.*)\\n(?P<SB>.*)\\n\\+(.*)\\n(.*)\\n""; }; ```; This makes it so end users can write their own transformations to handle arbitrary protocols. . I'd love to plug into Alevin after this step and use Alevin for everything else. Is there a description of what the reads need to look like to work with the downstream steps in Alevin?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/360:1109,protocol,protocols,1109,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/360,1,['protocol'],['protocols']
Integrability,"Hi everyone,; Lately I was trying to use Salmon (v0.8.0) along with tximport to study a downloaded single-cell data on gene-level. And I came across something werid that I found almost 20k genes on average per cell, which is way higher than expected. Realistically, the scRNA-seq protocol I followed will only have a gene number detection of roughly 10k. I re-do the analysis with STAR + featurecounts and I observed a per-cell gene number of 6k on average. Just wonder which part of my code goes wrong. Attached please find my code for Salmon and subsequent R script for tximport. Any advice or suggestion will be much appreciated! I do love Salmon for its speed and convenience. Salmon index; #!/bin/bash. salmon index -t /home1/garyhe/workingdir/ref/gencode/gencode.v25.transcripts.ercc.fa -i /home1/garyhe/workingdir/ref/index/salmonindex/v25/19mer --gencode --type quasi -k 19. Salmon quant; #!/bin/bash. cd /home1/garyhe/workingdir/data/bjorklund2016ni/00_raw. for i in $(ls *.gz | cut -c 1-10 | uniq). do. salmon quant -i /home1/garyhe/workingdir/ref/index/salmonindex/v25/19mer \; -l U \; -r ${i}_1.fastq.gz \; --writeMappings=/home1/garyhe/workingdir/data/bjorklund2016ni/01_aligned/${i}.sam \; -o /home1/garyhe/workingdir/data/bjorklund2016ni/02_quant/${i}. Done. R script for tximport; #condense the ensemble transcript ID counts to gene ID counts; library(GenomicFeatures); txdb <- makeTxDbFromGFF(""./Sequencing_run/gencode.vM12.primary_assembly.annotation.ercc.gtf""); k <- keys(txdb, keytype = ""GENEID""); df <- select(txdb, keys = k, keytype = ""GENEID"", columns = ""TXNAME""); tx2gene <- df[, 2:1]; head(tx2gene). library(tximport); library(readr); dir <- ""./Sequencing_run/salmon_output/sc/""; list.files(dir); samples <- read.table(""./Sequencing_run/salmon_output/scsampleinfo.txt"", header=TRUE); samples; files <- file.path(dir, samples$Sample_ID, ""quant.sf""); names(files) <- paste0(samples$Sample_ID); names(files) <- gsub(""[:_:].*$"", """", names(files)). #gene-level; txi.salmon.g <- txi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/120:280,protocol,protocol,280,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120,1,['protocol'],['protocol']
Integrability,"Hi, . I am working on 6 samples (Biological replicates for treatment A = 3, Biological replicate for treatment B = 3) and am attempting to quantify these reads. Some of the samples have both PE and SE read files despite undergoing the same sequencing protocols (due to the sequencing processes that yield orphan read). Plus, as I trimmed the reads using Trimmomatic, more orphan reads are generated. I wonder how can I quantify (mapping-based, transcript-level) both PE and SE reads which should belong to the same library and end up with only one quant.sf file? I want to have the final count of 6 quant.sf file for the 6 samples to proceed with edgeR. . As of now, I am planning to concatenate both PE and SE reads according to their strand-specificity and run salmon in paired-end mode. Should I just input both SE and PE reads separately by using both -1/2 and -r? ; Any input would help! Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/593:251,protocol,protocols,251,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/593,1,['protocol'],['protocols']
Integrability,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/854:481,message,message,481,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854,1,['message'],['message']
Integrability,"Hi, ; I just downloaded the salmon.10.0 version and indexed my transcriptome using the https://www.gencodegenes.org/releases/current.html --> FASTA files --> trasnscript sequences. When I try to run Salmon I receive the above error message. The last time I ran Salmon I used 9.1 and this trasncriptome from ensembl ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/...; What is going on here? . The header.json file looks like this: ; {; ""value0"": {; ""IndexType"": 1,; ""IndexVersion"": ""q3"",; ""UsesKmers"": true,; ""KmerLen"": 31,; ""BigSA"": false,; ""PerfectHash"": false; }; }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/232:232,message,message,232,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232,1,['message'],['message']
Integrability,"Hi, I am having issues with calculating the differential splicing and I kept getting this error message, even though all files required are uploaded. Could you please help me with this issue. The error message is below :",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/858:96,message,message,96,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/858,2,['message'],['message']
Integrability,"Hi, I follow the instructions for conda - mediated installation, it installs v 0.8.2 not v 0.9.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/194:42,mediat,mediated,42,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194,1,['mediat'],['mediated']
Integrability,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/518:184,message,message,184,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518,1,['message'],['message']
Integrability,"Hi, I'm just starting with RNA-Seq and tryed to install salmon on the HPC of my university. However I get following error message when recompiling with ""$ make"". . ```; [ 6%] Built target libbz2; [ 13%] Built target libgff; [ 19%] Built target libbwa; [ 26%] Built target libjellyfish; [ 27%] Performing build step for 'libstadenio'; Making all in io_lib; Making all in progs; libtool: link: /usr/bin/cc -o convert_trace convert_trace.o ../io_lib/.libs/libstaden-read.a -lz -lm -lpthread -llzma -lbz2; /usr/bin/ld: cannot find -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; collect2: error: ld returned 1 exit status; make[5]: *** [convert_trace] Fehler 1; make[4]: *** [all-recursive] Fehler 1; make[3]: *** [all] Fehler 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Fehler 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Fehler 2; make: *** [all] Fehler 2. ```. Does this have anything to do with ""bzip2"" or ""libbz2"" and how would I provide missing paths to cmake?; I have bzip2 but not libbz2 availible on my system. I would be gratefull for any help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/216:122,message,message,122,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216,1,['message'],['message']
Integrability,"Hi, I've been using salmon v1.0.0 to quantify bulk transcripts from fastqs using the genocde v32 reference. Ive used it successfully on several cohorts but on my most recent I received the following warning in my log file (I also attached the entire file):. [2021-05-10 20:51:46.936] [jointLog] [warning] NOTE: Read Lib [[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: /gcloud-shared/sample/lib_format_counts.json for details. Here is also the lib_formats_count.json:; {; ""read_files"": ""[ /gcloud-shared/inputR1.gz, /gcloud-shared/inputR2.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 43142675,; ""num_assigned_fragments"": 43142675,; ""num_frags_with_concordant_consistent_mappings"": 36380775,; ""num_frags_with_inconsistent_or_orphan_mappings"": 7777480,; ""strand_mapping_bias"": 0.5172763911708863,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 18818916,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17561859,; ""SF"": 2219340,; ""SR"": 5558140,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. Here is the salmon command I've been using:. salmon --no-version-check quant -i /gcloud-shared/reference -l A -1 ${FASTQR1} -2 ${FASTQR2} \; --validateMappings --seqBias --gcBias --posBias --threads $(nproc) -o /gcloud-shared/sample. The whole process still produces quants files, but having never received this warning with other sample cohorts I want to be sure it's not affecting the results. Any idea why I might be getting this? Am I using the wrong lib type?. Thanks!. [ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6479118/ukbec_quants_gencode_32_filtered_A653_002_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/659:438,protocol,protocol,438,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/659,1,['protocol'],['protocol']
Integrability,"Hi, we're having trouble with salmon on a stranded library -- we're executing. ```; salmon index --index idx --transcript equCabs.fa --type quasi; ```. and then. ```; salmon quant -i idx -1 leftReads.fq -2 rightReads.fq --libType ISF -o xxx.quant; ```. We then get the warning that there is a big strand bias in an unstranded protocol, despite having specified stranded (S) in libType. Inspection of the libFormatCounts.txt file confirms this, with ""expected format"" specifying ""strandedness:unstranded"".",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/30:326,protocol,protocol,326,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/30,1,['protocol'],['protocol']
Integrability,"Hi, who's concerning,; I was using alevin to run on a PBMC 10xv3 dataset.; Here is my script,; salmon alevin -lISR -1 $fastq1 -2 $fastq2 --chromiumV3 -i $work_p/salmon_index_human -p 12 -o output --tgMap $data_p/test12.tsv --keepCBFraction 1. I kept all CB to make sure I can use emptyDrops. Also, here this index is SAF index followed by your tutorial. Then I got the error message like:; [alevin.log](https://github.com/COMBINE-lab/salmon/files/7035475/alevin.log). Is there any suggestion on how to solve this?; Cheers,; Chloe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/698:375,message,message,375,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/698,1,['message'],['message']
Integrability,"Hi,. Building salmon with `-DFETCH_BOOST=TRUE` ends with an error that might be caused by the build process looking to iostreams in the wrong place. The end of the ouput on the terminal is:. ```; [ 80%] Built target salmon_core; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/depend; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; cd /opt/local/salmon-index/resources/salmon-0.4.2 && /usr/bin/cmake -E cmake_depends ""Unix Makefiles"" /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2/src/CMakeFiles/salmon.dir/DependInfo.cmake --color=; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/build; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```. Earlier in the output I can spot this:. ```; cc1plus: warning: unrecognized command line option ""-Wno-deprecated-register"" [enabled by default]; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/21:300,depend,depend,300,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/21,2,"['Depend', 'depend']","['DependInfo', 'depend']"
Integrability,"Hi,. I am trying to process scRNAseq Chromium data using alevin. I already have results from cellranger and I wanted to compare them with alevin. I use the following command line; salmon alevin -lISR -1 Fastq1a.fastq.gz Fastq1b.fastq.gz -2 Fastq2a.fastq.gz Fastq2b.fastq.gz --chromium -i gencode.v25.transcripts_index -p 20 -o AlevinOUT --tgMap gencode.v25.txp2gene.tsv --dumpCsvCounts --whitelist 737K-august-2016.txt. I get the following error message at the end of the output; [alevinLog] [error] Barcode not found in frequency table. If I run the exact same files using without the --whitelist flag/file I get some results for a very small set of barcodes. Interestingly the barcodes found by alevin (I only checked 2 or 3) are also in the 737K-august-2016.txt file. . My first question is why alevin does not ""count"" barcodes (zero frequency) with the barcode file, and does estimate frequency for some (at least) barcodes without the barcode file. Considering that the barcodes in the latter case are also found in the whitelist file. . My second question is more about difference between alevin and cellranger. I do get estimated counts for a large number of barcodes (thousands) using cellranger, while barely on the order of a few hundreds, at best, using alevin. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/284:446,message,message,446,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284,1,['message'],['message']
Integrability,"Hi,. I am using Salmon v 1.10.1 do perform selective alignment on paired end RNAseq samples and I have trouble to interpret the output statistics (i.e succesfully mapped pairs ....); Here is my command line on a sample containing 34,462,097 pairs (After cleaning, adapter removal, rRNA trimming). **salmon quant -i $IndexDir -l A -1 $forward -2 $reverse -p 8 --seqBias --gcBias –useVBOpt --discardOrphansQuasi –consensusSlack 0.35 --minScoreFraction 0.8 --decoyThreshold 1 -o $OutputDir/$pairname_Output**. Here is the the output statistics of the alignment; [Salmon_quant_output.txt](https://github.com/COMBINE-lab/salmon/files/11768911/Salmon_quant_output.txt). So I have few questions : . 1- Where is idicated the numer of processed pairs, i.e. the number of pairs in the sample ?. 2- Does the mapping rate correspond to the reads that will be used for the quantification (i.e. succesfully mapped and that were above every filtering thresholds) or this % also takes into account the discarded mapping ? This is of great importance to tell if the mapping step is good or not. 3- Counted 20,588,460 total reads in the equivalence classes What does this mean ? Is it the numner of pairs that mapped (discarded and not discarded or only the ones that are kept for quentification). 4- What is the difference between mapping discarded and fragment discarded ? To count the number if pairs that did not map to my reference should I sum Number of mappings discarded because of alignment score + Number of fragments entirely discarded because of alignment score + Number of fragments discarded because they are best-mapped to decoys + Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets. Thanks in advance for your time and answers,,. Florian Rocher",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/852:264,adapter,adapter,264,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/852,1,['adapter'],['adapter']
Integrability,"Hi,. I am using salmon quant v0.91 to map some reads against ce11 genome. . But the run fails with a cryptic error message, maybe you can help me sort this out.; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/210:115,message,message,115,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210,1,['message'],['message']
Integrability,"Hi,. I have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; C",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682:764,message,message,764,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682,1,['message'],['message']
Integrability,"Hi,. I have had success using Salmon and Alevin after the hash-resize-hotfix issues. However, when I try to compile the latest commit I get an error for an undeclared error. I have tried searching through the external dependencies for the definition of `rapmap::utils::ChainStatus` but I cannot find it. Thanks!. ```; [ 6%] Built target libbwa; [ 12%] Built target libtbb; [ 19%] Built target libcereal; [ 26%] Built target libdivsufsort; [ 32%] Built target libstadenio; [ 38%] Built target libspdlog; [ 45%] Built target libgff; [ 47%] Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/254:218,depend,dependencies,218,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254,1,['depend'],['dependencies']
Integrability,"Hi,. I have run a RNAseq sample through Salmon with --l A option (library type); I was told regarding the in-house protocol to generate the library that ""The first read reads off the anti-sense strand, and the second reads off of the sense strand. From what I understand, the first read is reported as the sense strand, and the second read is reported as the anti-sense strand (as the reverse complement)"". i.e. similar to TruSeq (first read comes from anti-sense/reverse strand). That would translate into ISR according to http://salmon.readthedocs.io/en/latest/library_type.html. Yet from the Salmon quant log file = Automatically detected most likely library type as ISF.; If I run the same sample with -l ISF I get the warning:; Greater than 5% of the fragments disagreed with the provided library type; check the file: 2RD_1760_salmon_quant_ISF/lib_format_counts.json for details - ; which shows:; ""expected_format"": ""ISF"",; ""compatible_fragment_ratio"": 0.9281440552329109,; ""num_compatible_fragments"": 8223296,; ""num_assigned_fragments"": 8859935,; ""num_consistent_mappings"": 67110116,; ""num_inconsistent_mappings"": 13842824,; ""MSF"": 0,; ""OSF"": 120231,; ""ISF"": 67110116,; ""MSR"": 0,; ""OSR"": 12968,; ""ISR"": 11405988,; ""SF"": 1926077,; ""SR"": 353507,. I would be very grateful for a possible explanation. Thank you very much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/206:115,protocol,protocol,115,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/206,1,['protocol'],['protocol']
Integrability,"Hi,. I just encountered an unexpected behaviour of alevin when unmated reads are provided. Are unmated reads supported by alevin at all? I did not find anything in the alevin documentation, but the parameter is there. I tried to quantify some public Illumina SureCell data. Apparently the number of threads is set to 0 (because there are no file pairs?), which is of course not a good idea. The behaviour consists if I specify the number of threads manually (e.g. -p 1). Side note: There is a typo in the threads warning message (I think). ---; Salmon v1.2.1, installed from conda. #### Error message:. ```; ## alevin (dscRNA-seq quantification) v1.2.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ index ] => { ../salmon/index/ }; ### [ unmatedReads ] => { ../samples/sc.fastq.gz }; ### [ output ] => { sc/ }; ### [ tgMap ] => { tx2gene.tsv }; ### [ end ] => { 3 }; ### [ umiLength ] => { 8 }; ### [ barcodeLength ] => { 6 }. Can't make user of more parsing threads than file (pairs); setting # of parsing threads to 0. Segmentation fault (core dumped); ```; ---. **To Reproduce**. The index is based on a gencode reference and works fine for bulk data (salmon quant). Command:; ```; salmon alevin -l A -i ../salmon/index/ --unmatedReads ../samples/sc.fastq.gz -o sc/ --tgMap tx2gene.tsv --end 3 --umiLength 8 --barcodeLength 6; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/522:521,message,message,521,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/522,2,['message'],['message']
Integrability,"Hi,. I know there has been some interest in quantifying transcripts from bulk RNA-Seq data using UMI-deduplicated reads, and I was wondering if this is a feature that is being worked on. I understand that Alevin contains a lot of the functionality necessary for UMI-deduplicated counting, but that it is not directly applicable to standard bulk RNA-Seq protocols https://github.com/COMBINE-lab/salmon/issues/306#issuecomment-439530193. I am interested in contributing to get this feature implemented, if this isn't already being developed. Is this functionality something that you would be open to adding to Salmon?. Thanks,; Gautam",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/610:353,protocol,protocols,353,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/610,1,['protocol'],['protocols']
Integrability,"Hi,. I read the preprinted Salmon paper but I couldn't understand the mathematics. Thus, I am not sure how NumReads and TPMs in the quantification file are generated, and my following questions might seem very naive. . My library is 3' selected. ([Sub-figure B] (http://www.rna-seqblog.com/for-model-species-the-3-rna-seq-method-might-more-accurately-detect-differential-expression/) ) Therefore, the number of fragments from each transcripts is not dependent on the length of the transcript. In theory, 1 transcript should only produce 1 fragment that originates from the 3' end. . Would there be any issue using Salmon to quantify a library like this? ; Should I use NumReads instead of TPM to measure transcript abundance, since I don't want my read counts to be normalized by length of transcript? ; If I am just comparing gene expression between samples, does it matter whether I use NumReads or TPM, since any normalization would cancel out when I calculate fold change?; Or should I use TPM with --posBias enabled to account for the 3' bias of my library? My concern about this approach is explained in a different [post](https://github.com/COMBINE-lab/salmon/issues/165). Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/166:450,depend,dependent,450,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/166,1,['depend'],['dependent']
Integrability,"Hi,. I'm running into an issue with quant and hope you could help. Get this error message saying my index/versionInfo.json does not seem to exist (screenshot attached). I have single end reads spread across 5 fastq files per sample. Just trying to run one sample as a test before looping it. . I have tried building an index both with Salmon v 0.8.1 using a conda install as well as salmon v0.9.1 installing directly the binary on a linux computing cluster. . I've attached a screenshot of the indexing process (it boots me out at the end but I cant tell from the outputs if it was cut short, last thing it notes is writing sequence data to the file). I've also attached a screenshot of the generated index folder contents. The index is the most recent Ensembl FASTA cDNA download for mouse. I tried indexing a transcripts FASTA file from Gencode as well and am running into the same issue, so dont think its the specific reference. The reference transcript files are 54 and 56mb respectively, so no issues downloading and transferring to our cluster. . Any thoughts are much appreciated! Thanks!. Paul. ![screen shot 2018-02-12 at 15 37 54](https://user-images.githubusercontent.com/23369975/36214991-d3b453ec-1178-11e8-8331-d641a334c47b.png); ![screen shot 2018-02-12 at 12 41 33](https://user-images.githubusercontent.com/23369975/36214993-d3bf729a-1178-11e8-9c78-38158e423b9b.png); ![screen shot 2018-02-12 at 15 33 53](https://user-images.githubusercontent.com/23369975/36214994-d3cb52cc-1178-11e8-9f74-6cfd554ccb0a.png); ![screen shot 2018-02-12 at 15 35 16](https://user-images.githubusercontent.com/23369975/36214995-d3d50376-1178-11e8-81c3-90de0a347763.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/197:82,message,message,82,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197,1,['message'],['message']
Integrability,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/560:62,message,message,62,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560,2,['message'],['message']
Integrability,"Hi,. Quick question- if I have the reads for a library spread across multiple files, is it appropriate to run Alevin separately on each file pair and combine with quantmerge, rather than processing together? I'm looking to run Alevin via Galaxy for some training, and the available wrapper doesn't currently allow supplying multiple inputs. My feeling is that all files should be processed together for robust thresholding etc, but I may be worrying about nothing.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/434:282,wrap,wrapper,282,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/434,1,['wrap'],['wrapper']
Integrability,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/250:182,message,message,182,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250,1,['message'],['message']
Integrability,"Hi,. first of all congratulations on a great tool, the expansion to scRNA-seq analysis is especially appreciated!. I was wondering what the reason for setting an upper limit on the barcode length in alevin is - would longer barcodes affect the computation in some manner? We are working with barcodes of length 27, which are incompatible with the hardcoded upper barcode length limit [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). I manually raised the limit on a modified alevin version, and the final output looks as expected, so if there is no risk that I am unaware of, would you consider raising or removing the barcode length limit altogether?. Thank you for you help!. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Using the manual barcode and UMI specification with `--end`, `--barcodeLength`, and `--umiLength` fails for barcodes longer than 20 with the error message:; ```; Barcode length (27) was not in the required length range [1, 20].; ```; The barcode length upper limit is hardcoded [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). **To Reproduce**; In Salmon 1.0.0, run `salmon alevin [...] --end 5 --barcodeLength 27 --umiLength 8` (or any `barcodeLength` value above 20). * Which version of salmon was used? 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? not relevant; * Which read files were used? not relevant; * Which which program options were used? `--end 5 --barcodeLength 27 --umiLength 8`. **Expected behavior**; Ideally, barcode longer than 20 would be processed as normal. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Mac OS X; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/445:1010,message,message,1010,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/445,1,['message'],['message']
Integrability,"Hi,; I don't want to report a bug, but rather have 2 (unrelated) questions:; Because we don't generate that many RNA-seq data sets, I am using Salmon every now and then. I really like the program (speed!) and the obtained results. - Since I don't use Salmon on a daily basis, I usually have (would like) to update Salmon to its latest release. For these the binaries you (used to) provide are very convenient. I noticed that these are not explicitly linked to anymore on the page `https://github.com/COMBINE-lab/salmon/releases`, although these still are available through [this link](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) that is regularly posted on this Github 'forum'. Please note that I learned you favor the Bioconda route for keeping Salmon up to date. Nevertheless, provided it doesn't take too much effort, I would appreciate it very much if you could still make the binaries available. - My 2nd question has to do with some basic QC-ing: I am currently analyzing a set of 96 mouse samples. While running Salmon, I noticed most samples do have a nice percentage of mapped reads (>80%), but I also noticed that for samples this percentage was much lower (<50%).; Q: Is there an easy way of obtaining these numbers (""percent_mapped"") for all samples that were mapped in a Salmon run (without manually reviewing all 96 samples the 'meta_info.json' file)? In other words, how to obtain an 'overall log file'?. Thanks,; Guido",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/252:771,rout,route,771,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252,1,['rout'],['route']
Integrability,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/339:529,protocol,protocol,529,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339,4,"['adapter', 'protocol']","['adapter', 'adapters', 'protocol']"
Integrability,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/420:105,message,message,105,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420,2,['message'],['message']
Integrability,"Hi,; This is not an bug, but I'm trying to understand something. I get this message when running salmon quant: ""replaced 53 non-ACGT nucleotides with random nucleotides."" Can you please explain what this means?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/843:76,message,message,76,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/843,1,['message'],['message']
Integrability,"Hi,; When generating an index for the latest human gencode transcriptome (release 35) I noticed this message:; `[2020-11-25 09:42:04.534] [puff::index::jointLog] [warning] Entry with header [ENST00000674361.1|ENSG00000241743.4|OTTHUMG00000022220.5|OTTHUMT00000530527.1|XACT-203|XACT|347561|lncRNA|] was longer than 200000 nucleotides. This is probably a chromosome instead of a transcript.`. Since I don't recall that I have seen this notification before when doing previous analyses, I had a look at this particular transcript. It turns out it indeed has been annotated as a (very long!), but apparently true transcript (a lncRNA):; `Transcript: XACT-203 ENST00000674361.1, Exons: 2, Coding exons: 0, Transcript length: 347,561 bps. Manual annotation (determined on a case-by-case basis) from the Havana project.`; See [here](http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;g=ENSG00000241743;r=X:113616300-114059289;t=ENST00000674361).; ; I realize that this is not really a bug (you have to set such cutoff at some (likely arbitrary??) value), and it applies to only a single human transcript, but considering this case, would it also be OK to set the cutoff to e.g. 400k (instead of 200k)?. Thanks for addressing my curiosity!; Guido. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; - salmon 1.3.0; **To Reproduce**; - I followed [this workflow](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) but using the latest human gencode files.; **Desktop (please complete the following information):**; - OS: Linux Fedora",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/591:101,message,message,101,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/591,1,['message'],['message']
Integrability,"Hi,; this problem was considered in issue 104 and I have been following the instructions given there. I am running Salmon in alignment mode on bam files generated by STAR (unsorted and in transcriptome coordinates). I generated a transcriptome fasta file for Salmon (according to issue 104) with ; gffread -w all_transcripts.fa -g Homo_sapiens.GRCh38.dna.primary_assembly.fa Homo_sapiens.GRCh38.103.gtf; where the two genome files (fa and gtf) were used with STAR. ; When running Salmon with this fasta file, I get the following output and error message:. Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.4.0; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { all_transcripts.fa }; # [ libType ] => { A }; # [ threads ] => { 10 }; # [ alignments ] => { /groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Sal; mon/4010760_5_mono_S58_L002_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L003_R1_001.fastq_AT; _QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L004_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.b; am }; # [ output ] => { 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/638:546,message,message,546,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638,1,['message'],['message']
Integrability,"Hi,; would you mind cleaning up the STDOUT and STDERR output from `salmon quant` and `salmon index`? Commonly `STDOUT` should be used for normal output messages and `STDERR` for errors or at worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:152,message,messages,152,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,5,['message'],"['message', 'messages']"
Integrability,"Hi. I have a general question pertaining to quantifying QuantSeq data and comparing Salmon vs the alignment methods recommended by Lexogen (Star/Bowtie followed by htseq to get read counts per gene). Has anyone compared the 2 methods - would be very interested to know the findings. [I happen to see this issue which is still stated as ""Open""](https://github.com/COMBINE-lab/salmon/issues/108) - probably it should be marked as Closed?. . Based on the above issue and also [this issue](https://github.com/COMBINE-lab/salmon/issues/177), I assume using `--noLengthCorrection` would be the recommended way to use Salmon for quantifying QuantSeq data - is that right?. In general, I am planning to use Salmon this way:. 1. index the transcriptome; 2. `salmon quant -i {input.index} -l A -1 {input.R1} -2 {input.R2} -o {output} --noLengthCorrection --validateMappings --gcBias --seqBias --posBias`. While using Salmon for quantification, are there any subtleties to be aware of based on the QuantSeq protocol (FWD vs REV) ?. Please advise. Thanks in advance,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/365:996,protocol,protocol,996,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/365,1,['protocol'],['protocol']
Integrability,"Hi:; Recently, I learned to use salmon in our lncRNA research project. I am confused in a point. ; As shown in the documentation (https://salmon.readthedocs.io/en/latest/salmon.html), according to our understanding, if we want those incompatible mappings will be discarded, the incompatPrior should be set as 0.0. And our RNA-Seq library type is dUTP based strand-specific RNA-Seq, so we should use ISR. ; But I am confused with https://gitter.im/COMBINE-lab/salmon?at=594a76d402c480e67268f02b and https://github.com/COMBINE-lab/salmon/issues/116; we want the expression level of antisense. Since there are about 0.5~1% reads can be the wrong reads mapped to the reverse strand of the gene (dUTP stranded protocol, the strand error (i.e. % of reads sequenced from the wrong strand of the RNA) is typically 0.5-1%). Can we use the incompatPrior option and get the expression level of antisense(right) in a single run?; This is our command line `salmon quant -i Ath_TX.index -l ISR -1 test_R1.fq.gz -2 test_R2.fq.gz -o TEST_TX_QUANT --incompatPrior 0.0 --seqBias --gcBias --threads 20`.; That those wrong mapped alignments (they didn't follow the ISR fule, maybe the error from the error of process of library construction) will be discarded.; Thank you and all the best.; Linhua",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/182:705,protocol,protocol,705,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/182,1,['protocol'],['protocol']
Integrability,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:859,message,messages,859,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['message'],['messages']
Integrability,"I am intending to run salmon on a set of RNA-Seq data lying in our lab for a long time. They are for mm9 and since there are >50 samples I was intending to run it using Salmon `version : 0.6.0`. I have used earlier versions of salmon on hg19 data from both UCSC, NCBI (spiked-in and non-spiked in data) without alignment mode and have run them successfully. Recently we were able to download the latest version and compile and trying to run the indexing on the UCSC mm9 genome.fa file so that I can use quasi-mapping indexes that can be then used to run quant for my samples downstream so getting read counts as well as TPM much faster than any other tool. Can you tell me what is the problem. . Command line used; `salmon index -t /path_to/genome.fa -i salmonquasi-indexes --type quasi -k 31`. Here is the error message while using the Ram-Map. ```; Version Info: This is the most recent version of Salmon.; index [""salmonquasi-indexes""] did not previously exist . . . creating it; [2016-03-17 10:41:34.655] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; Elapsed time: 53.9731s. Replaced 96385738 non-ATCG nucleotides; Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.196609s; Writing sequence data to file . . . done; Elapsed time: 1.56391s; [info] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/49:813,message,message,813,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49,1,['message'],['message']
Integrability,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/914:1683,message,message,1683,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914,1,['message'],['message']
Integrability,"I am running salmon as part of a pipeline and this error message is being displayed:. running salmon quant...; Version Server Response: Not Found; exception : [unrecognised option '--biasCorrect']. Exiting.; pipeline failed at expression quantification!. Here are the options which the script uses: ; salmon quant -t ${transcript_fa} ${ltype} -a ${rna_bam} -o ${sm_odir} -p $nproc --biasCorrect; check_file ${sm_out} ""pipeline failed at expression quantification!"". I have the latest version of salmon installed.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/873:57,message,message,57,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/873,1,['message'],['message']
Integrability,"I built salmon 0.7.2 on OSX 10.13.3, then ran 'make test'. Test #1 fails, other two succeed. Looking at file Testing/Temporary/LastTest.log, it says:. ```; ""unit_tests"" start time: Mar 03 20:31 PST; Output:; ----------------------------------------------------------; CMake Error at /Users/tedtoal/src/salmon-0.7.2/cmake/UnitTests.cmake:7 (message):; Error running No such file or directory. ```. I looked in the tests directory and find program ""unitTests"", and when I run it, it succeeds:. ```; ===============================================================================; All tests passed (158 assertions in 4 test cases). ```. leading me to believe that actually, test1 succeeds, but something is wrong with the test system and it doesn't see that it succeeded.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/204:340,message,message,340,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204,1,['message'],['message']
Integrability,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/778:648,wrap,wrapper,648,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778,2,['wrap'],['wrapper']
Integrability,"I don't really have a feel for the RAW and BAM interfaces for Salmon `quant`, but given that they have different help screens and usage, maybe consider splitting them into separate commands?. This is just a minor suggestion, coming from a n00b user of Salmon.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/75:47,interface,interfaces,47,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/75,1,['interface'],['interfaces']
Integrability,I get the following error when installing `salmon`:. ```; cd /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external && /gsc/btl/linuxbrew/Cellar/cmake/3.3.0/bin/cmake -P /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake; -- extracting...; src='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; dst='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-1.0.0'; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; failed; ```. Is it possible to compile `salmon` with its external dependencies provided externally rather than vendored into `salmon`? What is `cereal`?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/10:911,message,message,911,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10,2,"['depend', 'message']","['dependencies', 'message']"
Integrability,"I have been trying to use the salmon docker container available on docker hub. When I run salmon quant I am able to load all of the files and start the program, but I get a killed message while loading hash. I get an empty log file and empty folders created after the container is killed. **To Reproduce**; I run the following command to run the container:; `docker run -v /Users/caz3so/workspaces/salmon_docker:/temp -w /temp -ti combinelab/salmon`. The following is the output:; <img width=""1389"" alt=""screenshot 2018-06-27 11 15 56"" src=""https://user-images.githubusercontent.com/31480706/41983246-8296bb76-79fb-11e8-9710-c38ec051b7e7.png"">. **Expected behavior**; I have salmon installed on my machine and was able to run these files with no problem. It is only when I am using the docker container, so it could be a docker related problem. . **Desktop (please complete the following information):**; I am using a 2017 Macbook pro with 16 GB 2133 MHz LPDDR3 memory and a 2.8 GHz Intel Core i7 processor.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/243:180,message,message,180,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243,1,['message'],['message']
Integrability,"I have single ended reads in a fastq file which I aligned with bowtie against the transcriptome. Now I am running the following command:; ./bin/salmon quant -t ../Data/DRR029379.fq -p 6 -l A -a ../Data/DRR029379_after_bowtie.bam -o ../Data/DRR029379_after_salmon; and this the error I am getting. Version Info: This is the most recent version of Salmon.; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { ../Data/DRR029379.fq }; # [ threads ] => { 6 }; # [ libType ] => { A }; # [ alignments ] => { ../Data/DRR029379_after_bowtie.bam }; # [ output ] => { ../Data/DRR029379_after_salmon }; Error: @RG lines are at odds with binary encoded reference data; ============; Exception : [ERROR: Failed to open file ../Data/DRR029379_after_bowtie.bam, exiting!; ]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting. I cannot figure out anything from this message. Please help. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/113:991,message,message,991,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113,1,['message'],['message']
Integrability,"I have updated my homebrew index and installed Salmon on my Macbook (0S X Sierra). However, when I run `salmon` or `salmon -h` on the command line I get the following error message. ```; salmon(41538,0x7fffc4f5a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffc4f50000; ```. `brew doctor` doesn't show any unexpected issues. Any ideas what might be going on?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/142:173,message,message,173,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/142,1,['message'],['message']
Integrability,"I ran salmon alevin 0.14.0 with a custom transcriptome reference and the following options: --chromium --dumpFeatures --dumpMtx --whitelist mylist.txt. Everything ran through OK. However, when I tried to load the .mtx file with readMM() in R, I got the error: ; ` Error: readMM(): column values 'j' are not in 1:nc `. When I tried to read directly the binary file into a matrix, there's a warning:; ```; counts <- readBin(quants_mat.gz, what = 'numeric', n = length(genes)*length(cells)); close.connection(quants_mat.gz); Warning message:; In matrix(data = counts, nrow = length(cells), ncol = length(genes), :; data length [391335] is not a sub-multiple or multiple of the number of rows [4942]; ```; It seems like there's issue with the dimensions; [out.zip](https://github.com/COMBINE-lab/salmon/files/3296080/out.zip); of the output matrix. I've attached my log file as well as my output files (both .mtx and binary). Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/380:530,message,message,530,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/380,1,['message'],['message']
Integrability,I recently debugged an issue of low mapping rate which turned out to be due to the reads in the forward and reverse paired FASTQ files being sorted in different orders. Maybe there could be a warning message written out if e.g. the headers in the first read pairs are mismatched?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/151:200,message,message,200,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/151,1,['message'],['message']
Integrability,"I recently upgraded to v0.9.1 and am analyzing 2x75 total RNA. The kit is stranded with the first read originating from the reverse strand, thus I specified the libType as ISR. Command used to invoke salmon quant:. ```; salmon quant -i /home/benjohnson/Documents/references/hg19/salmon/salmon_hg19 -1 $pair1 -2 $pair2 -o $SAMPLE --seqBias --gcBias -p 28 --useVBOpt --numBootstraps 100 -l ISR; ```. Output following invocation:. ```; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/benjohnson/Documents/references/hg19/salmon/salmon_hg19 }; ### [ mates1 ] => { GO537F1_L000_R1_001.fastq.gz }; ### [ mates2 ] => { GO537F1_L000_R2_001.fastq.gz }; ### [ output ] => { GO537F1 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ threads ] => { 28 }; ### [ useVBOpt ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { ISR }; ```. Warning received about strand bias in library:. ```; Detected a *potential* strand bias > 1% in an unstranded protocol check the file: GO537F1/lib_format_counts.json for details; ```. lib_format_counts.json output:. ```; {; ""read_files"": ""( GO537F1_L000_R1_001.fastq.gz, GO537F1_L000_R2_001.fastq.gz )"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 0.997983099568402,; ""num_compatible_fragments"": 18521739,; ""num_assigned_fragments"": 18559171,; ""num_consistent_mappings"": 44944769,; ""num_inconsistent_mappings"": 16315669,; ""strand_mapping_bias"": 0.97668914484798,; ""MSF"": 0,; ""OSF"": 3095,; ""ISF"": 1047701,; ""MSR"": 0,; ""OSR"": 139809,; ""ISR"": 43897068,; ""SF"": 3206477,; ""SR"": 12956987,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. I'm a bit confused as to whether this is normal behavior and not impacting output (I haven't necessarily investigated if this is the case) or if it is ignoring my ISR option. I've tried using -l as ISR; ""ISR"" and also with --libType ISR; ""ISR"" with the same output. . Thanks for your time!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/187:1018,protocol,protocol,1018,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/187,1,['protocol'],['protocol']
Integrability,"I think something like this (like samtools, kallisto etc. ```; salmon v0.6.0 - description here. Usage: salmon <COMMAND> [-h | options]. Commands:; index Create a salmon index; quant Count blah; swim Whatever; ```. would be _much_ clearer than the current help. ```; salmon --help; Allowed Options:; -v [ --version ] print version string; --no-version-check don't check with the server to see if this is the; latest version; -h [ --help ] produce help message. Salmon v0.6.0; ===============. Please invoke salmon with one of the following commands {index, quant, swim}.; For more information on the options for these particular methods, use the -h; flag along with the method name. For example:. salmon index -h. will give you detailed help information about the index command.; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/72:452,message,message,452,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/72,1,['message'],['message']
Integrability,"I understand that salmon does not use read quality scores when performing alignment/quantitation but, as it stands, running with `--writeMappings` it also doesn't output the qualities in its SAM-format output. That may not impact most downstream applications of the data but it does limit some. I'd be particularly interested in using reads that have been aligned and assigned to transcripts with an EM algorithm to investigate RNA editing. The most advanced methods of doing this integrate the quality of base calls from the sequencer into the models and, as such, cannot currently run on the data output. Although it may save a few CPU cycles in not reading and outputting the qualities - I can understand the choice when running with default settings - when running with `--writeMappings` that nominal difference in speed needs to be weighed up against downstream utility. Could this be looked into?. Cheers! George",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/756:481,integrat,integrate,481,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/756,1,['integrat'],['integrate']
Integrability,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/209:207,message,message,207,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209,2,['message'],['message']
Integrability,"I was running some quantification on Google Compute Engine and a particular study repeatedly printed ""couldn't dequeue read chunk"" for 2.5 days. By the time I discovered it, over 300GB of Egress traffic (sending the message to my local computer) had accumulated. Cost me close to $100 between Google's egress charges and my ISPs bandwidth overage charges. It would be nice if the message didn't print so much. I'm now running Salmon commands with `timeout 1h` prefix to prevent this but might run into an issue with 1 hour not being long enough for all quantification runs.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/152:216,message,message,216,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/152,2,['message'],['message']
Integrability,"I was wondering: when using options --seqBias, --gcBias, and/or --posBias with several fastq files generated from different flowcells (but same sample and library, i.e. technical replicates), is it better (in terms of the different model assumptions) to process the fastq files independently (because the estimated parameters depend on the flowcell) or to use the space-separated ""trick"" (because there is more data to estimate the parameters from)?; Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/313:326,depend,depend,326,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/313,1,['depend'],['depend']
Integrability,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/936:134,depend,dependencies,134,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936,4,"['depend', 'wrap']","['dependencies', 'wrapper']"
Integrability,"I'm quantifying reads from a Lexogen QuantSeq experiment, using `-l SF and --noLengthCorrection`. I just downloaded the latest release 0.9.0. Full command (using nu parallel); `salmon quant -i path_to_index -r {} -l SF --noLengthCorrection -o {.} -p 5`. Which gives the following settings information:; ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/wdecoster/databases/Homo_sapiens/hg38/transcriptome/GRCh38-full-transcriptome-index }; ### [ unmatedReads ] => { pt_d10046-11.fastq.gz }; ### [ libType ] => { SF }; ### [ noLengthCorrection ] => { }; ### [ output ] => { pt_d10046-11.fastq }; ### [ threads ] => { 5 }; ```. But I get the following warning for each sample:; `Detected a *potential* strand bias > 1% in an unstranded protocol check the file: samplename/lib_format_counts.json for details`. That file looks as below:. ```; {; ""read_files"": ""pt_d10040-14.fastq.gz"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 2836170,; ""num_assigned_fragments"": 2836170,; ""num_consistent_mappings"": 10375916,; ""num_inconsistent_mappings"": 0,; ""strand_mapping_bias"": 0.9229587055253724,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 9576542,; ""SR"": 799374,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. This suggests my libType SF is ignored?. (Less important: If you could make --libtype an alias for --libType that would be great, random internal capitalization is quite annoying imho)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/177:862,protocol,protocol,862,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/177,1,['protocol'],['protocol']
Integrability,"I'm trying to build salmon on FreeBSD. . First issue, fetchRapMap.sh fails because it calls /bin/bash. Bash on FreeBSD is in /usr/local/bin/bash.; This is easily worked around with a symlink. Second issue: libbwa fails to build. . ```; [ 34%] Performing build step for 'libbwa'; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 17: Missing dependency operator; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 19: Need an operator; make[3]: Fatal errors encountered -- cannot continue; make[3]: stopped in /usr/home/esiefker/salmon/salmon/external/bwa-master; *** Error code 1; ```; In addition to failing to build bwa, bwa is present in ports and already installed on this machine. Cmake should check for this.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/162:369,depend,dependency,369,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162,1,['depend'],['dependency']
Integrability,"I'm trying to update the 0.9.1 brew/conda package to 1.0; What version of `openssl` does it need?; I've tried `curl-openssl/lib/libcurl.a (found version ""7.66.0"")` without luck too.; Nothing stated at https://salmon.readthedocs.io/en/latest/building.html#. ```; /home/linuxbrew/.linuxbrew/bin/ld: /home/linuxbrew/.linuxbrew/lib/libcurl.a(libcurl_la-openssl.o): in function `Curl_ossl_sha256sum':; openssl.c:(.text+0x11c): undefined reference to `EVP_MD_CTX_create'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x124): undefined reference to `EVP_sha256'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x131): undefined reference to `EVP_DigestInit_ex'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x13f): undefined reference to `EVP_DigestUpdate'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x14f): undefined reference to `EVP_DigestFinal_ex'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x157): undefined reference to `EVP_MD_CTX_destroy'; /home/linuxbrew/.linuxbrew/bin/ld: /home/linuxbrew/.linuxbrew/lib/libcurl.a(libcurl_la-openssl.o): in function `Curl_ossl_md5sum':; ```. Also this:; ```; CMake Warning at /home/linuxbrew/.linuxbrew/lib/cmake/boost_iostreams-1.71.0/libboost_iostreams-variant-static.cmake:59 (message):; Target Boost::iostreams already has an imported location; '/home/linuxbrew/.linuxbrew/lib/libboost_iostreams-mt.a', which will be; overwritten with '/home/linuxbrew/.linuxbrew/lib/libboost_iostreams.a'; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/443:1255,message,message,1255,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/443,1,['message'],['message']
Integrability,"I've been previously processing my data using Salmon Alevin. We've just got our results back from a SevenBridges analysis of our single cell sequencing data, and there's a substantial difference in PCR duplicate rate between the two platforms. Here are the numbers for SevenBridges (three samples were analysed separately):. Sample,Aligned_Reads,Molecules,RSEC_Molecules,Raw_Depth,RSEC_Depth,Saturation; S1,1152169399,251097626,226949623,4.59,5.08,93.82; S2,1021623258,258701917,238156437,3.95,4.29,92.49; S3,1232889654,268962282,242417971,4.58,5.09,93.72. In other words, a PCR duplication rate of 4-5X (columns 4 & 5), depending on what statistic is chosen. For salmon alevin, here's our metadata* for the whole run:. ```; {; ""total_reads"": 4579183639,; ""reads_with_N"": 59361,; ""noisy_cb_reads"": 977033360,; ""noisy_umi_reads"": 152773,; ""used_reads"": 3601938145,; ""mapping_rate"": 54.155827599470509,; ""reads_in_eqclasses"": 2479894797,; ""total_cbs"": 37916487,; ""used_cbs"": 137766,; ""no_read_mapping_cbs"": 1,; ""final_num_cbs"": 136196,; ""deduplicated_umis"": 402386555,; ""mean_umis_per_cell"": 2954,; ""mean_genes_per_cell"": 896; }; ```. \* total reads have been corrected by adding 2^32. From my understanding of the numbers, this suggests a PCR duplication rate of either 8.95X (comparing ""used reads"" with ""deduplicated umis"") or 6.16X (comparing ""reads in eqclasses"" with ""deduplicated umis""). I had a go at trying to ""manually"" count (via awk/grep/sort/uniq/etc.) the cell barcodes and UMIs associated with the MT-ND1 gene:. ND1-matching reads with good cell barcode QC (barcodes linkable to expected cell barcodes), and good mapping (>60bp matching): 5292134; Unique cell/UMI pairs (subset from the above data): 1590232; => PCR duplication rate ~= 3.32 reads per unique molecule. So it seems like the duplication rate might be closer to the SevenBridges estimate than the Alevin estimate. The Alevin documentation seems to suggest that cell/transcript/UMI triplets are being used for UMI collapsing (",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/808:621,depend,depending,621,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808,1,['depend'],['depending']
Integrability,"I've been using 0.7.1 without problems until today.; I'm trying to index the transcriptome (made with gffread) of human GRCh37 from archived Ensembl 60. The process has been running for hours, with no messages beyond this:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; [2016-11-04 13:45:38.583] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers. ```. This is all there is in the index.log. `[2016-11-04 13:45:38.583] [jLog] [info] building index`. None of me previous indexes have taken so long, especially not in total silence. So I'm guessing it gets stuck somewhere, but where? Why?. I know there is a newer version, but getting our busy sysadmin to install things takes time and I didn;t see anything critical for my usage case listed in the release notes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/100:201,message,messages,201,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100,1,['message'],['messages']
Integrability,"I've just been testing Salmon using Illumina TruSeq stranded (dUTP) libraries. Using either `ISF` (correct libType) or `ISR` I get a **ton** of messages like this:. ```; expected = Library format { type: }; paired end, relative orientation:inwardexpected = Library format { type:paired end, relative orientation:Library format { type:paired end, relative orientation:inwardpaired endinward, strandedness:, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }; (sense, antisense)expected = , strandedness:(sense, antisense), strandedness:(sense, antisense) }; observed = }; Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:observed = Library format { type: }; paired endLibrary format { type:paired end, relative orientation:, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:observed = inward, strandedness:(antisense, sense) }; (antisense, sense) }paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense)expected = Library format { type:Library format { type:; }paired endpaired endexpected = Library format { type:paired end, relative orientation:; , relative orientation:inwardinward, strandedness:(sense, antisense)observed = , strandedness:(antisense, sense) }; }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }expected = Library format { type:, relative orientation:Library format { type:paired end; ```. and so on... It seems that the [`LibraryFormat` class](https://github.com/COMBINE-lab/salmon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/16:144,message,messages,144,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/16,1,['message'],['messages']
Integrability,"I've just started working in a single-cell genomics core facility, **alevin** looks really useful for our 10X runs! ; But I also have a substantial number of samples processed with the CEL-Seq and CEL-Seq2 protocols (also 3'-tag protocols). ; I'm interested in adding support for these protocols to Alevin. 1. Is that something you'd be interested in incorporating?; 2. Any hints on where to start messing around in the code to implement this would be much appreciated!. Cheers,; Pete",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/269:206,protocol,protocols,206,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269,3,['protocol'],['protocols']
Integrability,"If an adapter is not trimmed, will it affect the mapping rate?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/398:6,adapter,adapter,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/398,1,['adapter'],['adapter']
Integrability,Is it necessary to trim adapters before using salmon?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/398:24,adapter,adapters,24,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/398,1,['adapter'],['adapters']
Integrability,Issue with error message that doesn't always appear,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:17,message,message,17,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,1,['message'],['message']
Integrability,"Just wanted to put an opinion in. I am currently using Salmon v1.1.0 and noticed that `--posBias` wasn't listed in the help messages, but I found it in your read the docs. I tested it out and it made a significant improvement in my calculations. I know it is considered ""experimental"", but it helped in my research and will publish that I used it when we get the manuscript out. Also, do you think you could give a brief explanation on what `--forgettingFactor` is doing and how it could be affecting quantification calculations?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/474:124,message,messages,124,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/474,1,['message'],['messages']
Integrability,Library format checking for stranded libraries gives uninformative debugging messages,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/16:77,message,messages,77,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/16,1,['message'],['messages']
Integrability,Quantification matrix with adapted Celseq2 protocol,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/361:43,protocol,protocol,43,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361,1,['protocol'],['protocol']
Integrability,"Running Salmon-0.7.2_linux_x86_64 with --writeMappings=map.out and it crashes with:. Exception : [boost::filesystem::create_directory: No such file or directory]. When I run without a file name, it outputs to stdout, but it also outputs messages such as:; ESC[1m[2016-09-14 11:06:07.550] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:06:07.550] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:06:08.300] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:06:08.300] [jointLog] [info] Loading 32-bit quasi index; So the output is not a clean .sam file. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --writeMappings=map.out --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/90:237,message,messages,237,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90,1,['message'],['messages']
Integrability,Salmon depends on Staden depends on xz for lzma.h,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/45:7,depend,depends,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45,2,['depend'],['depends']
Integrability,Salmon error message: salmon quant was invoked improperly,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/209:13,message,message,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209,1,['message'],['message']
Integrability,Tell to cmake the different places for the dependencies,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/225:43,depend,dependencies,43,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/225,1,['depend'],['dependencies']
Integrability,"The CMakeLists.txt refuses to handle anything except GNU and Clang compilers. It should be easy to support Intel as well since it understands most/all(?) GNU compiler flags. CMAKE will report the compiler type as ""Intel"" and [C++11 is supported from 14.0 and forward](https://software.intel.com/en-us/articles/c0x-features-supported-by-intel-c-compiler). My rough wip to get this building uses the following:. ```; diff --git a/CMakeLists.txt b/CMakeLists.txt; index c95f755..30f1223 100755; --- a/CMakeLists.txt; +++ b/CMakeLists.txt; @@ -118,8 +118,30 @@ elseif (""${CMAKE_CXX_COMPILER_ID}"" MATCHES ""Clang""); else(); set (PTHREAD_LIB ""pthread""); endif(); +elseif (""${CMAKE_CXX_COMPILER_ID}"" MATCHES ""Intel""); + execute_process(; + COMMAND ${CMAKE_CXX_COMPILER} -dumpversion OUTPUT_VARIABLE INTEL_VERSION); + if (NOT (INTEL_VERSION VERSION_GREATER 14.0 OR INTEL_VERSION VERSION_EQUAL 14.0)); + message(FATAL_ERROR ""${PROJECT_NAME} requires intel 14.0 or greater. Found ${INTEL_VERSION}""); + endif (); +; + set (INTEL TRUE); + set (PTHREAD_LIB ""pthread""); + set (CMAKE_CXX_FLAGS ""-pthread -funroll-loops -fPIC -fomit-frame-pointer -Ofast -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -std=c++11 -Wreturn-type -Werror=return-type""); +; + # If we're on Linux (i.e. not OSX) and we're using ; + # gcc, then set the -static-libstdc++ flag; + if (NOT APPLE) ; + set (CMAKE_CXX_FLAGS ""${CMAKE_CXX_FLAGS} -static-libstdc++""); + endif(); +; + set (WARNING_IGNORE_FLAGS ""${WARNING_IGNORE_FLAGS} -Wno-unused-local-typedefs""); + set (BOOST_TOOLSET ""intel""); + set (BOOST_CONFIGURE_TOOLSET ""--with-toolset=gcc""); + set (BCXX_FLAGS ""-std=c++11""); + set (BOOST_EXTRA_FLAGS toolset=gcc cxxflags=${BCXX_FLAGS}); else (); - message(FATAL_ERROR ""Your C++ compiler does not support C++11.""); + message(FATAL_ERROR ""Your C++ compiler (${CMAKE_CXX_COMPILER_ID}) does not support C++11.""); endif (). ## TODO: Figure out how to detect this automatically; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/9:894,message,message,894,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/9,3,['message'],['message']
Integrability,"The ability to guess RNAseq library format is very useful when quantifying numerous heterogeneous data sets. I tested Salmon's ability to guess library format using a public SRA dataset (PRJNA543304; PMID: 31216476). This dataset was generated using a paired-end stranded protocol (TruSeq Stranded Total RNA Library Prep Kit, Illumina, Cat. 20020597). Based on my understanding, the library format using Salmon's notation would be ISR. Briefly, with the help of several R packages (GenomicRanges, Biostrings, and rtracklayer) I generated my own FASTA file using the human genome sequence and exon annotations both from Ensembl. I extracted the sequences of both mature transcripts and their premature precursors. I was sure to get the reverse complement sequences of genes on the minus strand. I generated an index from this FASTA file without decoys (salmon index -k 31) and quantified the FASTQ files using the following sample code:. ```; # Shuffle FASTQ files; paste <(cat SRR9071838_1.fastq) <(cat SRR9071838_2.fastq) | paste - - - - | shuf --random-source=SRR9071838_1.fastq | \; awk -F '\t' -v std=""$SLURM_TMPDIR"" '{ OFS=""\n""; print $1,$3,$5,$7 > (std ""/SRR9071838_1.fastq""); print $2,$4,$6,$8 > (std ""/SRR9071838_2.fastq"") }'. # Quantify; ./software/salmon-1.4.0_linux_x86_64/bin/salmon quant -i ./shared_data/annotations/Salmon/noDecoys \; -o ./Salmon_out_final_shuf_a_noDecoys/SRR9071838 -l A -p 8 \; -1 $SLURM_TMPDIR/SRR9071838_1.fastq -2 $SLURM_TMPDIR/SRR9071838_2.fastq; ```; I then briefed over the resulting lib_format_counts.json files and noticed that in all but one case, Salmon inferred that the library format is IU, not the expected ISR. Here is a summary:. ```; > salmon.guess.auto; read_files expected_format compatible_fragment_ratio num_compatible_fragments num_assigned_fragments num_frags_with_concordant_consistent_mappings; 1: [SRR9071838_1.fastq, SRR9071838_2.fastq] IU 1.0 46378505 46378505 55523877; 2: [SRR9071839_1.fastq, SRR9071839_2.fastq] ISR 1.0 50070023 50070023",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/655:272,protocol,protocol,272,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/655,1,['protocol'],['protocol']
Integrability,"There has been a small amount of discussion about the BD Rhapsody barcode / sequence format (e.g. see [here](https://github.com/COMBINE-lab/salmon/issues/445#issuecomment-551083490)), but it would be great if the option could be integrated into the code. BD has produced a [Single Cell Genomics Bioinformatics Handbook](https://www.bd.com/documents/guides/user-guides/GMX_BD-Rhapsody-genomics-informatics_UG_EN.pdf) which has the following information about the R1 read structure on pg 14:. 5' CLS1 - L1 - CLS2 - L2 - CLS3 - UMI - poly(T); 9 12 9 13 9 8 18; [1-9] [22-30] [44-52][53-60]. > **Cell Label** Information of the cell label is captured by bases in three sections (CLS1, CLS2, CLS3) along each R1 read. Two common sequences (L1, L2) separate the three CLSs, and the presence of L1 and L2 relates to the way the capture oligonucleotide probes on the beads are constructed. By design, each CLS has one of 96 predefined sequences, which has a Hamming distance of at least four bases and an edit distance of at least two bases apart. A cell label is defined by the unique combination of predefined sequences in the three CLSs. Thus, the maximum possible number of cell labels is 96^3 (884,736). A cell label is represented by an index between 1–96^3. > Reads are first checked for perfect matches in all three pre-designed CLS sequences at the expected locations, CLS1:; position 1–9, CLS2: position 22–30, and CLS3: position 44–52. Reads with perfect matches are kept. In other words...; - Concatenate subsequences 1-9, 22-30, and 44-52 to form a 27-base cell label; - Extract subsequence 53-60 as the UMI . > **UMI** By design, the UMI is a string of eight randomers immediately downstream of CLS3. If the CLSs have perfect matches or base substitutions, the UMI sequence is at position 53–60. For reads with insertions or deletions within the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/628:229,integrat,integrated,229,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628,1,['integrat'],['integrated']
Integrability,"This PR addresses issue #699. To use the protocol, pass the `--splitseqV2` or `--splitseqV1` flag. To test the implementation correlation analysis was done on [data](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE137941) submitted with the [article](https://www.sciencedirect.com/science/article/pii/S1934590920300552). Thanks @jeremymsimon for pointing to the data. Here are the results of correlation b/w the alevin output and published counts. This test run was done as mentioned in [here](https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-988185505). ![image](https://user-images.githubusercontent.com/12998572/145128352-6efe899a-ea06-49bf-9223-24ad4ba70223.png). ```; > summary(cr); Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.2966 0.7128 0.8690 0.8163 0.9448 0.9963 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/726:41,protocol,protocol,41,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/726,1,['protocol'],['protocol']
Integrability,"This PR introduces a new feature that will allow users to specify custom single cell protocols and use with alevin. Custom Geometry (--custom-geo) should be used when:; 1. Barcode or umi have variable lengths; 2. There is known fixed sequence in the reads; 3. There is some sequence to be excluded; From the input peglib spec it creates a regex. Boost regex library is used to parse the reads. Apart from small tests on multiple outlier cases, it was tested on a sci-RNA-seq3 sample SRR7827207 for speed. For this the spec is `--custom-geo 1{b[9-10]f[CAGAGC]u[8]b[10]}2{r}`. It says:; - Read 1 starts with barcode of variable length 9-10 bp, followed by; - A fixed sequence CAGAGC, then; - A umi of length 8, and lastly; - barcode of length 10.; - The second read is all biological. The barcodes are concatenated in the output and a padding sequence is added to make the length as max length + 1. The extra base is added so that we don't introduce spurious matches in barcode. For example, if the barcodes have length 3-4 bp and the two barcodes are `ATG` and `ATGA`, after padding they will be `ATGAC` and `ATGAA` resp. Adding just `A` to shorter barcode would result in a spurious match. . Since `--custom-geo` uses regex, it is slower than protocol specific flag. The time with 8 threads on a large Ubuntu 20 machine:. 1. Using `--sciseq3`:; ```; real 1m0.425s; user 7m21.501s; sys 0m2.964s; ```; 2. Using `--custom-geo`; ```; real 1m39.887s; user 11m55.602s; sys 0m6.839s; ```; Notably, it is about 66% slower. However, it allows support for almost all current and future protocols. . There will be a tutorial shortly on how and when to use this and how is it different from other flags such as `--umi-geometry`, `--read-geometry` and `--bc-geomtery`. There is scope of speed improvement in the future along with integration of all custom geometry processing protocols.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/734:85,protocol,protocols,85,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/734,5,"['integrat', 'protocol']","['integration', 'protocol', 'protocols']"
Integrability,"This is a question related to a strange message in the log out file after Salmon indexing on a very small genome with my own generated transcriptome and decoy. I'm running Salmon v1.0.0 index on the transcriptome of Candida parapsilosis which has a small genome of 26mbp. I created the transcriptome using Cufflinks gffread on my reference genome fasta and gff3. I created the decoy by concatenating the whole genome to the transcriptome [as it was described in the manual](https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode). . I am running using the following options:. `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i cpar_salmon_index -k 31; `. After indexing using a kmer size threshold of -k 31, I see the following message in the log out file ""filter size not provided. ntHll estimated 12754610 distinct k-mers, setting filter size to 2^28."" . 2^28 seems very high compared to 31 bp set using -k 31. I'm also curious why, after setting a k size, it printed the message ""filter size not provided."". I've pasted a more complete snippet of the log out file text below. Does everything look like it's run successfully? I'm concerned since I am running on a small genome and with my own generated decoy and transcriptome. Does it look like this running as it should, or is there a bug that I should provide more details about?. > [puff::index::jointLog] [info] Filter size not provided; ; > estimating from number of distinct k-mers; > [puff::index::jointLog] [info] ntHll estimated 1275461; > 0 distinct k-mers, setting filter size to 2^28; > Threads = 12; > Vertex length = 31; > Hash functions = 5; > Filter size = 268435456; > Capacity = 2; > Files: ; > cpar_salmon_index/ref_k31_fixed.fa; > --------------------------------------------------------------------------------; > Round 0, 0:268435456; > Pass	Filling	Filtering; > 1	0	8	; > 2	4	0; > True junctions count = 18712; > False junctions count = 40617; > Hash table size = 59329; > ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/510:40,message,message,40,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/510,2,['message'],['message']
Integrability,"This is concerned with alevin, using a cite-seq like method with a different UMI barcode length. I believe this is similar to #531. running the command like this:. ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass \; --citeseq; ```; Produces the error `ERROR: Please specify one and only one scRNA protocol;`. whereas removing the `--citeseq` argument like this:; ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass; ```; Produces the error `[alevinLog] [critical] Transcript to Gene Map File not provided. Exiting Now.`. This is based on salmon 1.8.0 installed via bioconda on ubuntu 18.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/770:475,protocol,protocol,475,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/770,1,['protocol'],['protocol']
Integrability,"This isn't strictly speaking a bug with salmon per-se, but when installing salmon from conda, its impossible to have both R 4.0.3 and Salmon 1.3.0 installed in the same environment (which is frustrating due to the downstream analysis of Salmon data with wasabi/sleuth then requiring a separate environment). The core incompatibility seems to be with the International Components for Unicode package. Salmon requires; ""icu >=64.2,<65.0a0"",; Whereas in one of the R dependencies when installing 4.0.3 in the environment solve the following is specified; ""icu >=67.1,<68.0a0"",. This seems to be the only conflict I could identify.; This seems to be a new incompatibility introduced with R 4.0.3 and Salmon can coexist alongside R 4.0.2 without issue, so this isn't a huge problem but something I thought should probably be on your radar if it isn't already. Output from the conda dry-run as follows: ; [salmon_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619618/salmon_solve.txt); [r-base_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619619/r-base_solve.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/594:464,depend,dependencies,464,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/594,1,['depend'],['dependencies']
Integrability,"To whom it may concern,. I have been using Salmon to quantify RNA-seq data using a new long-read RNA sequencing-based GTF I have developed. When I run Salmon on RNA-seq samples from TCGA (read length = 50 bp, kmer length = 21), I tend to get ~95% of reads mapping to my transcriptome. However, when I use the same script to run my pipeline on in-house sequenced data (read length = 150 bp, kmer length = 21), I am getting only around 80-85% of reads mapping to my transcriptome. According to STAR, >90% (usually >95%) of these same in-house samples mapped to the genome. Why am I getting lower mapping rates? Could read length have something to do with it? Thanks so much for any advice or guidance you can provide. Script: ; [5_runSalmon.sh.zip](https://github.com/COMBINE-lab/salmon/files/10262688/5_runSalmon.sh.zip); (The only difference between my TCGA and in-house runs are that for TCGA I use ""-i IU"" and for my in-house samples I use ""-i ISR"" due to differences in the strandedness of the prep protocols). Yours most sincerely,; Ryan Englander",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/819:1002,protocol,protocols,1002,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/819,1,['protocol'],['protocols']
Integrability,"URE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as well. Kind regards, Andreas.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835:2755,Integrat,Integration,2755,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835,1,['Integrat'],['Integration']
Integrability,"Ubuntu 20.04 LTS, with gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/664:928,wrap,wrapper,928,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664,1,['wrap'],['wrapper']
Integrability,"We currently are using a protocol that uses a barcode strategy similar to Rhapsody, where you have 3, 8nt barcodes separated by two constant regions. I am trying to use the bc-geometry flag using the following command . "" salmon alevin -l ISR -i ~/Data/salmon/cell_hash -1 R1.fq.gz -2 R2.fq.gz --umi-geometry 1[51-56] --bc-geometry 1[3-8,24-29,45-50] --read-geometry 2[1-end] -o outs/ --citeseq --featureStart 0 --featureLength 15"". I am getting an output table that appears to be mapping correctly, however the cell barcodes in the table are 16 nt long instead of the 18 nt specified in the bc-geometry command. Is there something I am missing?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/670:25,protocol,protocol,25,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/670,1,['protocol'],['protocol']
Integrability,"We tried to run salmon with broken linked files (as in, we accidently linked to the wrong directory). This led to salmon getting to the kmer counting stage and then permanently pausing there (see output below). You can see a version of the broken protocol here: https://github.com/ngs-docs/2017-ucsc-metagenomics/blob/cd417dc4b384b668eda2a477fd805ebb3b30cd00/salmon_tutorial.rst. So, it would be nice if salmon could compensate for this misstep on our part and notify us if a broken linked file is given as input, rather than just pausing. . `tx160085@js-104-35:~/Salmon-0.7.2_linux_x86_64/data$ salmon index -t metagG.ffn -i transcript_index -; -type quasi -k 31; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; index [""transcript_index""] did not previously exist . . . creating it; [2017-04-23 17:02:32.614] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers`. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/134:247,protocol,protocol,247,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/134,1,['protocol'],['protocol']
Integrability,Would alevin work with QIAseq UPX 3' protocol?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/406:37,protocol,protocol,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/406,1,['protocol'],['protocol']
Integrability,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, the error message:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. should be reported regardless of other arguments given.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:2522,message,message,2522,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,2,['message'],['message']
Integrability,"`Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffread to generate a new transcriptome fasta as follows:; `gffread -w salmon_fix.fa -g chm13v2.0.fa chm13v2.0_RefSeq_Liftoff_v5.1.gff3`. I reran the above salmon command using this new fasta file, but got the same error and warnings: there are transcripts in the BAM not in the fasta and vice versa. Again, the ""transcripts"" not in the fasta were chromosome names. I also tried with the short read SAM files, and still got the same error. I'm not sure how to fix either the warnings or the errors and would really appreciate your help. ### Software information; I used salmon v1.10.0 (though I also tried v1.10.1). In the case of v1.10.0, I had downloaded the pre-compiled binary, and in the case of v1.10.1, the admins of the HPC cluster I used installed it- not sure how. Regardless, all the runs were on HPC clusters, which run on Linux CentOS (I use two different HPC clusters, depending on their availability). Cluster1:; ```; $ uname -a; Linux rescomp1.hpc.in.bmrc.ox.ac.uk 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; -bash: lsb_release: command not found; ```. Cluster2:; ```; $ uname -a; Linux htc-login02 4.18.0-348.7.1.el8_5.x86_64 #1 SMP Wed Dec 22 13:25:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 8.5.2111; Release: 8.5.2111; Codename: n/a; ```. Please let me know if I need to provide any more information. Thank you so much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/863:2878,depend,depending,2878,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863,1,['depend'],['depending']
Integrability,"```. But apparently that wasn't enough, because:. ```; cmake \; -DCMAKE_INSTALL_PREFIX:PATH=$TOPDIR \; .. ...; TBB_LIBRARIES = ; -- Configuring done; CMake Error at external/pufferfish/external/twopaco/CMakeLists.txt:11 (add_dependencies):; The dependency target ""tbb"" of target ""graphdump"" does not exist.; ```. This doesn't work obviously, but here are the mods to CMakeLists.txt that I tried:. ```; diff -au CMakeLists.txt.dist CMakeLists.txt; --- CMakeLists.txt.dist 2019-12-06 10:40:58.430641796 -0800; +++ CMakeLists.txt 2019-12-06 13:14:57.292041895 -0800; @@ -387,7 +387,10 @@; ##; set(Boost_ADDITIONAL_VERSIONS ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62.0"" ""1.63.0"" ""1.64.0"" ""1.65.0"" ""1.66.0"" ""1.67.0"" ""1.68.0"" ""1.69.0"" ""1.70.0"" ""1.71.0""); if (NOT BOOST_RECONFIGURE); -find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); +set(BOOST_INCLUDEDIR ""/usr/include/boost169""); +set(BOOST_LIBRARYDIR ""/usr/lib64/boost169""); +set(Boost_FOUND 1); +; message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + messa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/460:3423,message,message,3423,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460,3,['message'],['message']
Integrability,cmake/TestSalmonQuasi.cmake: more verbose test failure messages.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/810:55,message,messages,55,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810,1,['message'],['messages']
Integrability,"common/modules/el8/x86_64/software/${package}/${pversion}-CentOS-vanilla; THELUA=/usr/common/modules/el8/x86_64/modules/all/${package}/${pversion}-CentOS-vanilla.lua; cd /usr/common/src; git clone -b develop https://github.com/COMBINE-lab/salmon.git; mv ${package} ${package}-${pversion}; cd ${package}-${pversion}; cp CMakeLists.txt CMakeLists.txt.dist; cat >mypatch <<'EOD'; --- CMakeLists.txt.dist	2020-04-21 22:31:07.000000000 -0700; +++ CMakeLists.txt	2020-06-09 14:55:02.733885772 -0700; @@ -419,6 +419,10 @@; find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/541:723,message,message,723,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541,4,['message'],['message']
Integrability,"d on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please join the discussion [here](https://github.com/orgs/community/discussions/29534) in the official GitHub community!. #### I have another question / how do I get in touch?; Please join the discussion [here](https://github.com/orgs/community/discussions/29534) to ask further questions and send us suggestions!. </details>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:4365,integrat,integrated,4365,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['integrat'],['integrated']
Integrability,"d::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:11690,Protocol,ProtocolT,11690,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,3,"['Protocol', 'protocol']","['ProtocolT', 'protocols']"
Integrability,"e():12729039; approximateContigTotalLength: 1607258836; counters for complex kmers:; (prec>1 & succ>1)=133010 | (succ>1 & isStart)=7442 | (prec>1 & isEnd)=7516 | (isStart & isEnd)=2442; contig count: 11353512 element count: 2210067304 complex nodes: 150410; # of ones in rank vector: 11353511; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory illerney.index; size = 2210067304; -----------------------------------------; | Loading contigs | Time = 451.61 ms; -----------------------------------------; size = 2210067304; -----------------------------------------; | Loading contig boundaries | Time = 180.73 ms; -----------------------------------------; Number of ones: 11353511; Number of ones per inventory item: 512; Inventory entries filled: 22175; 11353511; [2023-03-15 20:35:13.921] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2023-03-15 20:35:13.997] [puff::index::jointLog] [info] contig count for validation: 11,353,511; [2023-03-15 20:35:19.728] [puff::index::jointLog] [info] Total # of Contigs : 11,353,511; [2023-03-15 20:35:19.728] [puff::index::jointLog] [info] Total # of numerical Contigs : 11,353,511; [2023-03-15 20:35:20.804] [puff::index::jointLog] [info] Total # of contig vec entries: 16,343,267; [2023-03-15 20:35:20.804] [puff::index::jointLog] [info] bits per offset entry 24; [2023-03-15 20:35:22.331] [puff::index::jointLog] [info] Done constructing the contig vector. 11353512; [2023-03-15 20:35:25.697] [puff::index::jointLog] [info] # segments = 11,353,511; [2023-03-15 20:35:25.697] [puff::index::jointLog] [info] total length = 2,210,067,304; [2023-03-15 20:35:28.518] [puff::index::jointLog] [info] Reading the reference files ...; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] positional integer width = 32; [2023-03-15 20:35:37.482] [puf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/837:3726,wrap,wrapping,3726,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837,1,['wrap'],['wrapping']
Integrability,"eads.fq > aln.sam`. This approach seems to employ a splicing aware algorithm against a genomic reference, using canonical splicing signals to help map the transcripts. However, this method doesn't seem to be applicable to Salmon given the requirement that the reads are aligned directly to the transcriptome (hence the need to account for splicing with '_-ac splice_' is lost). An alternative approach I've seen (i.e., the one used in ONT's own DGE [pipeline](https://github.com/nanoporetech/pipeline-transcriptome-de)) is to use minimap2 to align to the transcriptome reference but to retain a large number of secondary mappings (-N 100 in minimap2):. `minimap2 -ax map-ont -N 100 transcriptome.fa reads.fq`. This makes more sense in terms of the _-ax_ preset used, but I guess I'm just wondering then what the optimal input for Salmon would be in order to get the most accurate count data? I know secondary mappings are important for the algorithm to calculate uncertainty / maximum likelihood, but is there an recommend number of these to retain? The logic behind allowing for a high number of secondary alignments when using a transcriptome reference is to account for the high similarity among isoforms. From a high-level view I could see how this might be problematic though, depending on how Salmon actually uses the alternate mappings (i.e., is it just for the statistics or does it affect the counts as well?). . I've also seen groups toying with adjusting the _-p_ setting in minimap2 which sets the minimal ratio of the secondary to primary alignment score that is allowed in order to report the secondary mapping. Surveying the forums and discussion boards, values of _-N_ ranging from the default of 5 to 100 and of _-p_ ranging from 0 to 1, (i.e., anything) seem to be acceptable. Given this ambiguity, I figured going to the 'source' and asking the creators what Salmon actually wants might be beneficial, so if yall have done any testing or have recommendations I'd very appreciative.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/790:1993,depend,depending,1993,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/790,1,['depend'],['depending']
Integrability,"estion related to a strange message in the log out file after Salmon indexing on a very small genome with my own generated transcriptome and decoy. I'm running Salmon v1.0.0 index on the transcriptome of Candida parapsilosis which has a small genome of 26mbp. I created the transcriptome using Cufflinks gffread on my reference genome fasta and gff3. I created the decoy by concatenating the whole genome to the transcriptome [as it was described in the manual](https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode). . I am running using the following options:. `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i cpar_salmon_index -k 31; `. After indexing using a kmer size threshold of -k 31, I see the following message in the log out file ""filter size not provided. ntHll estimated 12754610 distinct k-mers, setting filter size to 2^28."" . 2^28 seems very high compared to 31 bp set using -k 31. I'm also curious why, after setting a k size, it printed the message ""filter size not provided."". I've pasted a more complete snippet of the log out file text below. Does everything look like it's run successfully? I'm concerned since I am running on a small genome and with my own generated decoy and transcriptome. Does it look like this running as it should, or is there a bug that I should provide more details about?. > [puff::index::jointLog] [info] Filter size not provided; ; > estimating from number of distinct k-mers; > [puff::index::jointLog] [info] ntHll estimated 1275461; > 0 distinct k-mers, setting filter size to 2^28; > Threads = 12; > Vertex length = 31; > Hash functions = 5; > Filter size = 268435456; > Capacity = 2; > Files: ; > cpar_salmon_index/ref_k31_fixed.fa; > --------------------------------------------------------------------------------; > Round 0, 0:268435456; > Pass	Filling	Filtering; > 1	0	8	; > 2	4	0; > True junctions count = 18712; > False junctions count = 40617; > Hash table size = 59329; > Candidate m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/510:1026,message,message,1026,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/510,1,['message'],['message']
Integrability,"fastq.gz |head -n 4`; @SRR6327122.1 1 length=88; CGGCCACAAGATCGCCTTTTTATCCCTCGCCCAGAGCACCCCCCGACCCCACATCCCCTGCTTCACGGCCCCCCTCGCGGCCTACCCG; +SRR6327122.1 1 length=88; --7-<7----7---77----77A-7--7-A7-7---7-A-A7<F-777-77-A---A<A----77--77------------7------. * Which which program options were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { cell_barcode_seq.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 18:24:03.053] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-19 18:24:03.059] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:3210,message,messages,3210,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['message'],['messages']
Integrability,fix typos in help message,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/26:18,message,message,18,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/26,1,['message'],['message']
Integrability,"g build step for 'libtbb'; cd /opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/20:1148,message,messages,1148,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20,1,['message'],['messages']
Integrability,"have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; Charles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682:1402,message,message,1402,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682,1,['message'],['message']
Integrability,"ile describes the option '-t transcripts.fa' for this purpose:. > ./bin/salmon quant -t transcripts.fa -l <LIBTYPE> -a aln.bam -o salmon_quant. Also the command-line help 'salmon quant --help-alignment' names the same options:. alignment input options:. -l [ --libType ] arg Format string describing the library ; type; -a [ --alignments ] arg input alignment (BAM) file(s).; -t [ --targets ] arg FASTA format file containing target ; transcripts. The 'salmon quant' command doesn't recognize either the short or long form of this option and stops execution immediately. There is no difference if the full set of options for a quantification run are provided or only this option. . **To Reproduce**; salmon quant -t Homo_sapiens.GRCh37.87.cdna.all.fa; salmon quant --targets Homo_sapiens.GRCh37.87.cdna.all.fa. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.12.0 and 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable (salmon-0.12.0_linux_x86_64.tar.gz, salmon-0.11.3-linux_x86_64.tar.gz); * Which reference (e.g. transcriptome) was used?; any, independant of transcriptome; * Which read files were used?; not applicable; * Which which program options were used?; other options than '-t/--targets' were irrelevant for provoking the error . **Expected behavior**; Salmon should run and process the alignment file in BAM format. **Screenshots**; --- Error messages ------------------; Exception : [unrecognised option '-t']. Exiting.; Exception : [unrecognised option '--targets']. Exiting.; --------------------------------------. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version:; Linux nnn 4.15.0-36-generic #39~16.04.1-Ubuntu SMP Tue Sep 25 08:59:23 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial. **Additional context**; none",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/343:1794,message,messages,1794,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/343,1,['message'],['messages']
Integrability,"in:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 21; Max Junction ID: 14896947; seen.size():119175585 kmerInfo.size():14896948; approximateContigTotalLength: 1087128541; counters for complex kmers:; (prec>1 & succ>1)=3126880 | (succ>1 & isStart)=773 | (prec>1 & isEnd)=671 | (isStart & isEnd)=30; contig count: 24974474 element count: 3020582944 complex nodes: 3128354; # of ones in rank vector: 24974473; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory Mus_musculus.GRCm39_v1.8.0_decoy.index; size = 3020582944. | Loading contigs | Time = 469.49 ms. size = 3020582944. | Loading contig boundaries | Time = 242.8 ms. Number of ones: 24974473; Number of ones per inventory item: 512; Inventory entries filled: 48779; 24974473; [2022-06-01 18:28:15.208] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2022-06-01 18:28:15.619] [puff::index::jointLog] [info] contig count for validation: 24,974,473; [2022-06-01 18:28:31.732] [puff::index::jointLog] [info] Total # of Contigs : 24,974,473; [2022-06-01 18:28:31.732] [puff::index::jointLog] [info] Total # of numerical Contigs : 24,974,473; [2022-06-01 18:28:33.958] [puff::index::jointLog] [info] Total # of contig vec entries: 345,523,986; [2022-06-01 18:28:33.958] [puff::index::jointLog] [info] bits per offset entry 29; [2022-06-01 18:28:53.341] [puff::index::jointLog] [info] Done constructing the contig vector. 24974474; [2022-06-01 18:29:07.368] [puff::index::jointLog] [info] # segments = 24,974,473; [2022-06-01 18:29:07.368] [puff::index::jointLog] [info] total length = 3,020,582,944; [2022-06-01 18:29:07.850] [puff::index::jointLog] [info] Reading the reference files ...; [2022-06-01 18:29:20.813] [puff::index::jointLog] [info] positional integer width = 32; [2022-06-01 18:29:20.813] [pu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783:12826,wrap,wrapping,12826,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783,1,['wrap'],['wrapping']
Integrability,"in; drwxrwxr-x. 2 modules modules 4096 Dec 6 10:59 include; lrwxrwxrwx. 1 modules modules 5 Dec 6 11:10 lib -> lib64; drwxrwxr-x. 2 modules modules 4096 Dec 6 11:07 lib64; ls -al $ROOT_LIBTBB; total 16; drwxrwxr-x. 4 modules modules 4096 Dec 6 11:48 .; drwxrwxr-x. 3 modules modules 4096 Dec 6 11:40 ..; drwxrwxr-x. 3 modules modules 4096 Dec 6 11:40 include; lrwxrwxrwx. 1 modules modules 5 Dec 6 11:48 lib -> lib64; drwxrwxr-x. 2 modules modules 4096 Dec 6 11:40 lib64. ```. Even after I had hacked up the CMakeLists.txt file to set some of these it still wouldn't build. For instance in that file:; ```; ## Try and find TBB first; if(DEFINED ENV{ROOT_LIBTBB}); message(""ROOT_LIBTBB in env""); set(ROOT_LIBTBB ); set(TBB_DIR $ENV{ROOT_LIBTBB}); set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); set(TBB_INCLUDE_DIR ${TBB_DIR}/include); set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); set(TBB_LIBRARY ${TBB_DIR}/lib); set(TBB_LIB_DIR ${TBB_DIR}/lib); set(TBB_VERSION ""2019.6""); set(TBB_FOUND TRUE); else(); message(""ROOT_LIBTBB NOT in env""); find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); endif(). if (${TBB_FOUND}); ```. But apparently that wasn't enough, because:. ```; cmake \; -DCMAKE_INSTALL_PREFIX:PATH=$TOPDIR \; .. ...; TBB_LIBRARIES = ; -- Configuring done; CMake Error at external/pufferfish/external/twopaco/CMakeLists.txt:11 (add_dependencies):; The dependency target ""tbb"" of target ""graphdump"" does not exist.; ```. This doesn't work obviously, but here are the mods to CMakeLists.txt that I tried:. ```; diff -au CMakeLists.txt.dist CMakeLists.txt; --- CMakeLists.txt.dist 2019-12-06 10:40:58.430641796 -0800; +++ CMakeLists.txt 2019-12-06 13:14:57.292041895 -0800; @@ -387,7 +387,10 @@; ##; set(Boost_ADDITIONAL_VERSIONS ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62.0"" ""1.63.0"" ""1.64.0"" ""1.65.0"" ""1.66.0"" ""1.67.0"" ""1.68.0"" ""1.69.0"" ""1.70.0"" ""1.71.0""); if (NOT BOOST_RECONFIGURE); -find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); +set(BOOST_INCLUDE",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/460:2311,message,message,2311,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460,1,['message'],['message']
Integrability,"ing the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrix died with ret 6400 at /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl line 386.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/855:1347,message,message,1347,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855,1,['message'],['message']
Integrability,"isabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:2507,adapter,adapter,2507,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['adapter'],['adapter']
Integrability,"les modules 5 Dec 6 11:48 lib -> lib64; drwxrwxr-x. 2 modules modules 4096 Dec 6 11:40 lib64. ```. Even after I had hacked up the CMakeLists.txt file to set some of these it still wouldn't build. For instance in that file:; ```; ## Try and find TBB first; if(DEFINED ENV{ROOT_LIBTBB}); message(""ROOT_LIBTBB in env""); set(ROOT_LIBTBB ); set(TBB_DIR $ENV{ROOT_LIBTBB}); set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); set(TBB_INCLUDE_DIR ${TBB_DIR}/include); set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); set(TBB_LIBRARY ${TBB_DIR}/lib); set(TBB_LIB_DIR ${TBB_DIR}/lib); set(TBB_VERSION ""2019.6""); set(TBB_FOUND TRUE); else(); message(""ROOT_LIBTBB NOT in env""); find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); endif(). if (${TBB_FOUND}); ```. But apparently that wasn't enough, because:. ```; cmake \; -DCMAKE_INSTALL_PREFIX:PATH=$TOPDIR \; .. ...; TBB_LIBRARIES = ; -- Configuring done; CMake Error at external/pufferfish/external/twopaco/CMakeLists.txt:11 (add_dependencies):; The dependency target ""tbb"" of target ""graphdump"" does not exist.; ```. This doesn't work obviously, but here are the mods to CMakeLists.txt that I tried:. ```; diff -au CMakeLists.txt.dist CMakeLists.txt; --- CMakeLists.txt.dist 2019-12-06 10:40:58.430641796 -0800; +++ CMakeLists.txt 2019-12-06 13:14:57.292041895 -0800; @@ -387,7 +387,10 @@; ##; set(Boost_ADDITIONAL_VERSIONS ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62.0"" ""1.63.0"" ""1.64.0"" ""1.65.0"" ""1.66.0"" ""1.67.0"" ""1.68.0"" ""1.69.0"" ""1.70.0"" ""1.71.0""); if (NOT BOOST_RECONFIGURE); -find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); +set(BOOST_INCLUDEDIR ""/usr/include/boost169""); +set(BOOST_LIBRARYDIR ""/usr/lib64/boost169""); +set(Boost_FOUND 1); +; message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEF",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/460:2686,depend,dependency,2686,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460,1,['depend'],['dependency']
Integrability,"llocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:8781,Protocol,ProtocolT,8781,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,3,"['Protocol', 'protocol']","['ProtocolT', 'protocols']"
Integrability,"llocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:10743,Protocol,ProtocolT,10743,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,6,"['Protocol', 'protocol']","['ProtocolT', 'protocols']"
Integrability,"lmonIndex::build(this=<unavailable>, indexDir=(m_pathname = ""athal_index""), idxOpt=<unavailable>) at SalmonIndex.hpp:76; frame #17: 0x00000000009839c3 salmon`salmonIndex(argc=<unavailable>, argv=<unavailable>, (null)=<unavailable>) at BuildSalmonIndex.cpp:236; frame #18: 0x000000000097a673 salmon`main [inlined] std::__1::__function::__value_func<int (int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&)>::operator(this=<unavailable>, __args=<unavailable>, __args=<unavailable>, __args=<unavailable>)(int&&, char const**&&, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&) const at functional:1884:16 ; frame #19: 0x000000000097a648 salmon`main [inlined] std::__1::function<int (int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&)>::operator(this=<unavailable>, __arg=<unavailable>, __arg=<unavailable>, __arg=<unavailable>)(int, char const**, std::__1::unique_ptr<SalmonIndex, std::__1::default_delete<SalmonIndex> >&) const at functional:2556; frame #20: 0x000000000097a648 salmon`main(argc=<unavailable>, argv=<unavailable>) at Salmon.cpp:274; frame #21: 0x000000000046bbf0 salmon`_start(ap=<unavailable>, cleanup=<unavailable>) at crt1_c.c:75:7; ```; Given that the crash is happening in a stream.Put() call, I presume that the stream must not be open and this should have been caught earlier. ```; template <typename StreamType>; class BasicOStreamWrapper {; public:; typedef typename StreamType::char_type Ch;; BasicOStreamWrapper(StreamType& stream) : stream_(stream) {}. void Put(Ch c) {; stream_.put(c);; }; ```; If you can provide any clues as to where in this lengthy backtrace the problem actually begins, it would be appreciated.; I used minimal changes to the raw dist to get this working.; Separately installed dependencies:. cereal 1.3.0.10; libgff 2.0.0; tbb 2020.3; boost-libs 1.72.0. Pufferfish 1.6.0 and staden-io_lib 1.14.8.1 are embedded in the build. Best,. Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/725:7324,depend,dependencies,7324,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/725,1,['depend'],['dependencies']
Integrability,"n the 'quant' step. Here is the skinny:; - ERCC + latest human ensembl transcriptome; - Index builds fine -- no apparent issues; - Quant step fails with the following output:. ``` bash; LD_LIBRARY_PATH=~/software/SalmonBeta-0.4.2_DebianSqueeze/lib; ~/software/SalmonBeta-0.4.2_DebianSqueeze/bin/salmon quant -i index/hs_ens_ercc.sidx --libType IU --output output/salmon -1 reads_1.fastq -2 reads_2.fastq; Version Info: This is the most recent version of Salmon.; # salmon (smem-based) v0.4.2; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { index/hs_ens_ercc.sidx }; # [ libType ] => { IU }; # [ output ] => { output/salmon }; # [ mates1 ] => { reads_1.fastq }; # [ mates2 ] => { reads_2.fastq }; Logs will be written to output/salmon/logs; there is 1 lib; [2015-08-23 21:58:57.438] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading index/hs_ens_ercc.sidx/bwaidx.amb; ```. I've provided a reproducible and self-contained Snakefile that only depends on the binaries being dumped in `~/software` and the reads_*fastq below. Let me know if there is anything I can do to help. Thanks a bunch!. Harold. ---. ``` python; ercc_fa = 'index/ERCC.fa'; ens_fa = 'index/Homo_sapiens.GRCh38.cdna.all.fa'; ens_ercc_fa = 'index/hs_ens_ercc.fa'; ens_ercc_sidx = 'index/hs_ens_ercc.sidx'. SALMON_PRE = '~/software/SalmonBeta-0.4.2_DebianSqueeze'; SALMON = 'LD_LIBRARY_PATH={0}/lib; {0}/bin/salmon'.format(SALMON_PRE). rule all:; input:; ens_ercc_fa,; ens_ercc_sidx,; 'output/salmon/quant.sf'. rule download_ens:; output:; ens_fa; params:; dl = 'ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule download_ercc:; output:; ercc_fa; params:; dl = 'http://bio.math.berkeley.edu/kallisto/transcriptomes/ERCC.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule merge_ercc:; input:; ens_fa,; ercc_fa; output:; ens_ercc_fa; shell:; 'cat {input",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/12:1069,depend,depends,1069,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/12,1,['depend'],['depends']
Integrability,"ngth 5 --barcodeLength 14 -1 /tmp/tmp.fyLlOm2tjU/p1.fa -2 /tmp/tmp.fyLlOm2tjU/p2.fa -r read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz; read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz; read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: This is the most recent version of Salmon.; [2018-09-11 16:28:53.145] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ../../alevin_15_pc/logs; ### salmon (single-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz read-I1_si-ACTTCACT_lane-002-chunk-000.fastq.gz read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:5488,protocol,protocol,5488,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['protocol'],['protocol']
Integrability,"nt-697125235) in other mapping issue reports, it's possible that there could be multiple fragments in those numbers that contribute to a single read, meaning the unaccounted number is probably higher:. > The number you are looking at is the number of discarded mappings, not the number of discarded fragments. The difference is that every fragment can have many potential mappings. The number you are looking at is the total number of attempted alignments that failed to achieve the threshold score. Luckily, salmon reports both numbers. The number of fragments for which all alignments failed to reach the score threshold is 4,196,417; given in aux_info.json by ""num_fragments_filtered_vm"": 4196417. One point to note is that these are all fragments for which mapping is attempted (they had at least one k-mer match the reference), but no alignment was valid up to the threshold. You could try running the quantification again with --softclip to allow softclipping of the reads and see if any considerable fraction of these 4196417 failed to align because they overhang the annotated transcripts or contain adapters etc. Nonetheless, even if all of these mapped, the rate would still be ~72%. The remainder of the reads didn't even have a matching k-mer in common with the reference transcriptome, which means they are exceedingly unlikely to have come from the transcripts that were indexed. Further explanation of what these metadata numbers mean would be very helpful to me. Also useful would be a statistic (or more than one statistic) that fully categorises the read alignments or non-alignments. **Desktop (please complete the following information):**; - OS: Debian; - `uname-a`: Linux musculus 6.7.9-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.7.9-2 (2024-03-13) x86_64 GNU/Linux; - `lsb_release -a`; ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux trixie/sid; Release: n/a; Codename: trixie; ```. **Additional context**. I'm not really after an explanatio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/925:8741,adapter,adapters,8741,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925,1,['adapter'],['adapters']
Integrability,"oading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size: 6442721444>6442720932; ...; ```. The index does not finish loading, and so salmon does not enter read quantification routines. **To Reproduce**. * Which version of salmon was used? 1.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Github release tarball; * Which reference (e.g. transcriptome) was used?; Gencode v32, with additional elements representing genic introns and intergenic spaces.; * Which read files were used?; NCBI SRA run accession GSM2392582; * Which which program options were used?; --no-version-check --libType ISR --threads 4 --seqBias --gcBias --useVBOpt. **Expected behavior**; I expected index loading to complete successfully.; **Desktop (please complete the following information):**; - OS: CentOS6. **Additional context**; I've uploaded the index file archive [here](https://www.icloud.com/iclouddrive/00DWWhkSucg2BTWLuFswSHwvQ#rapmap_issue_8_index) and the transcripts fasta file [here](https://www.icloud.com/iclouddrive/0oCdFG64TJe0IlvkYyIUZRfSQ#rapmap_issue_8_transcripts).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/463:2641,rout,routines,2641,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463,1,['rout'],['routines']
Integrability,"odeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x000000",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:12160,protocol,protocols,12160,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['protocol'],['protocols']
Integrability,"oduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected behavior**; I expected a total of 18.5M counts in the quant matrix, where the sums per barcode fit those reported in the _MappedUmi.txt_ Is my assumption that the quant matrix should only contain integers correct?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; Ubuntu 18.04.1 LTS. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/361:1933,protocol,protocol,1933,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361,1,['protocol'],['protocol']
Integrability,"ok, this is not really a bug but I think it needs attention. i am using anaconda environment for many tools and keep it updated as much as possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/286:236,depend,dependencies,236,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286,1,['depend'],['dependencies']
Integrability,old dependencies in anaconda environment,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/286:4,depend,dependencies,4,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286,1,['depend'],['dependencies']
Integrability,"path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:1832,adapter,adapter,1832,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,1,['adapter'],['adapter']
Integrability,"possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of downgrading of its dependencies. Linux nscc04 2.6.32-696.30.1.el6.x86_64 #1 SMP Fri May 18 11:50:44 EDT 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/286:2019,depend,dependencies,2019,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286,1,['depend'],['dependencies']
Integrability,"pping rate using hisat2. But in fact, DNAs are removed in my RNA extraction process...and poly-T was used to select mRNAs during the library construction...; 3. Not using pre-mature transcripts so reads mapping to introns are discarded: I am not sure if this is a valid point since we usually quantify mature mRNAs, not pre-mature ones.; 4. Library type: my library was constructed in a stranded way. The program detected my libtype as ISR:; ```; {; ""read_files"": ""[ DS_1_HW_FM_1P.fq.gz, DS_1_HW_FM_2P.fq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 18651686,; ""num_assigned_fragments"": 18651686,; ""num_frags_with_concordant_consistent_mappings"": 17799536,; ""num_frags_with_inconsistent_or_orphan_mappings"": 864409,; ""strand_mapping_bias"": 0.0001987858838992702,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 3539,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17799536,; ""SF"": 419781,; ""SR"": 441089,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```; When I change the libtype to a broader category, such as IU, the mapping rates slightly increased from ~55% to 65%, also I got more counts in each transcript, but this introduced higher strand mapping bias (Appeared as a warning message). ; 5. many short reads: No... in my case, the majority of the reads are ~150bp. And I used k=31 (default).; 6. Read trimming: I trimmed the adaptors and low-quality bases from the ends. One thing I noticed in my FastQC report is that I have warnings for 'Per Base Sequence Content'. I can see a fluctuation of nucleotides in around the first 12bp of each run due to a biased selection of random primers. This is so common in RNA-seq data so I did not trim the first several bases...Not sure if this can cause the low mapping rate.; One of my fastQC reports:. [DS_1_HW_FM_1P_fastqc.html.zip](https://github.com/COMBINE-lab/salmon/files/4730665/DS_1_HW_FM_1P_fastqc.html.zip). So...Is there a way I can increase the mapping rates? Or do I need to? My trimmed reads are all of very high quality so",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/533:2628,message,message,2628,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/533,1,['message'],['message']
Integrability,"rity-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:3989,integrat,integration,3989,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['integrat'],['integration']
Integrability,"salmon version 1.5.1; Running with the following keystrokes:; salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o salmonoutput (screenshot attached as ""command""). It keeps throwing the attached error message (as log).; Ive verified the R1 and R2 have the same number of entries using grep to count the number of ""@"" symbols. These match. The lines of each file are the same as well. (screenshot also attached as ""size""); ![Command](https://user-images.githubusercontent.com/50889111/134416661-77de22d1-5fc4-4b89-a21d-940948fdc4b8.png); ![Size](https://user-images.githubusercontent.com/50889111/134416664-21c6373f-57be-4c8d-b917-68aa16262f57.png); <img width=""1314"" alt=""Log"" src=""https://user-images.githubusercontent.com/50889111/134416666-5dcf3843-ef06-45b1-bb77-6c2dbae9e6e4.png"">. I'm not sure what to do from here; Please help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/709:209,message,message,209,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/709,1,['message'],['message']
Integrability,salmon version message in sam file,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/342:15,message,message,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/342,1,['message'],['message']
Integrability,"ssed 278000000 positions^M^Mprocessed 279000000 positions^M^Mprocessed 280000000 positions^M^Mprocessed 281000000 positions^M^Mprocessed 282000000 positions^M^Mprocessed 283000000 positions^M^Mprocessed 284000000 positions^M^Mprocessed 285000000 positions^M^Mprocessed 286000000 positions^M^Mprocessed 287000000 positions^M^Mprocessed 288000000 positions^M^Mprocessed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 12.6069s; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. It would be more interesting to see what filename is used for the index. Showing the ""basename"" of the index file is not very helpful. I would prefer to see the filename(s) on the beginning and end lines:. ```; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; ...; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. 5. The duplicates have same sequence or ID or both? The message should be clearer. I wonder what are these duplicates in a human cdna predicted, as available from `ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna`; :. ```; [2018-06-25 19:26:07.480] [jointLog] [warning] Removed 11768 transcripts that were sequence duplicates of indexed transcripts.; ```. 6. For the bwa-based index again, the logs are too verbose on one hand and on the second, they do not say what files were created. I doubt any file with *prefix* `Homo_sapiens.GRCh38.cdna.all/bwaidx` was created. ```; + salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type fmd; outputPrefix = ""Homo_sapiens.GRCh38.cdna.all/bwaidx""; [2018-06-25 19:29:02.497] [jLog] [info] building index; [bwa_index] Pack FASTA... 2.87 sec; [bwa_index] Construct BWT for the packed sequence...; [BWTIncCreate] textLength=609536484, availableWord=54888760; [BWTIncConstructFromPacked] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromP",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:13184,message,message,13184,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['message'],['message']
Integrability,"this is the error I am getting. . ```; The package ""salmon"" has no matches.; There are these packages and versions available:. NULL. Error in install_CondaTools(tools = ""salmon"", env = ""RNAseq_analysis"", :; The package and/or version are not available in conda. Check above for details.; In addition: Warning message:; In system(paste(pathToConda, ""search --quiet --json"", package_input, :; running command '/Users/vittoriobontempi/Library/r-miniconda/bin/conda search --quiet --json ""salmon"" -c bioconda -c defaults -c conda-forge 2>/dev/null' had status 1; ```. any help will be greatly appreciated. thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/724:309,message,message,309,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/724,1,['message'],['message']
Integrability,update single-cell protocol documentation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/723:19,protocol,protocol,19,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/723,1,['protocol'],['protocol']
Integrability,upgrade CMakeLists.txt to use external copies of dependencies & no downloading,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/19:49,depend,dependencies,49,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19,1,['depend'],['dependencies']
Modifiability," 195 ; --> 196 adata._inplace_subset_var(gene_subset); 197 ; 198 s = np.sum(~gene_subset). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in _inplace_subset_var(self, index); 1214 Same as `adata = adata[:, index]`, but inplace.; 1215 """"""; -> 1216 adata_subset = self[:, index].copy(); 1217 self._init_as_actual(adata_subset, dtype=self._X.dtype); 1218 . /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in __getitem__(self, index); 1048 """"""Returns a sliced view of the object.""""""; 1049 oidx, vidx = self._normalize_indices(index); -> 1050 return AnnData(self, oidx=oidx, vidx=vidx, asview=True); 1051 ; 1052 def _remove_unused_categories(self, df_full, df_sub, uns):. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in __init__(self, X, obs, var, uns, obsm, varm, layers, raw, dtype, shape, filename, filemode, asview, obsp, varp, oidx, vidx); 280 if not isinstance(X, AnnData):; 281 raise ValueError(""`X` has to be an AnnData object.""); --> 282 self._init_as_view(X, oidx, vidx); 283 else:; 284 self._init_as_actual(. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in _init_as_view(self, adata_ref, oidx, vidx); 328 self._varp = adata_ref.varp._view(self, vidx); 329 # hackish solution here, no copy should be necessary; --> 330 uns_new = deepcopy(self._adata_ref._uns); 331 # need to do the slicing before setting the updated self._n_obs, self._n_vars; 332 self._n_obs = self._adata_ref.n_obs # use the original n_obs here. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 148 copier = _deepcopy_dispatch.get(cls); 149 if copier:; --> 150 y = copier(x, memo); 151 else:; 152 try:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in _deepcopy_dict(x, memo, deepcopy); 239 memo[id(",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:6226,layers,layers,6226,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,1,['layers'],['layers']
Modifiability," configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:5800,config,configure,5800,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,7,['config'],['configure']
Modifiability," selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:2610,adapt,adapter,2610,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['adapt'],['adapter']
Modifiability," that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can send you the salmon_quant.log or any other file that would be useful. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OS CentOS 7.8; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/668:1438,config,config,1438,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668,1,['config'],['config']
Modifiability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/453:725,config,configuration,725,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453,4,"['Config', 'config']","['Configuring', 'config', 'configuration']"
Modifiability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Either. **Describe the bug**; This is really a feature request -- apologies if it shouldn't go here. Bowtie and similar tools (e.g. STAR) can use memory mapping or shared memory for the genome index. This has a nice benefit: in scenarios where N Bowtie processes simultaneously aligning to the same index on the same system, the index memory footprint is incurred once (not N times). I may soon be running many simultaneous `salmon quant` processes on the sam system, all quantifying with respect to the same (human) transcriptome index. The memory footprint is around 3GB, which adds up when there are many `salmon quants`s. I don't expect to have lots of free RAM on this system, since other simultaneously-running processes will be aligning and incurring a much larger footprint (but using shared memory). If salmon used memory mapping or shared memory for the index, I basically wouldn't have to worry about the peak memory footprint breaking the budget. Hence the request!. **To Reproduce**; Steps and data to reproduce the behavior:. * I looked in the issues and in the documentation for Salmon 0.11.3 and couldn't find any indication this is supported.; * I ran a bunch of simultaneous `salmon quant`s w/r/t the same index on a Linux system. Running `top` showed a very low number in the `SHR` column for those processes (with a high number, ~3GB, in the `RES` column), consistent with their not using shared memory or memory mapping. **Expected behavior**; A good way to test if it's working is to run simultaneous processes w/ same index and check the `SHR` column in `top`. If it's working, that should should be some large size. **Screenshots**; N/A. **Desktop (please complete the following information):**; I'm mainly interested in seeing this feature for Linux, but it's great if it works elsewhere too. Some of these mechanisms are more portable than others. **Additional context**; N/A",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/335:1938,portab,portable,1938,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/335,1,['portab'],['portable']
Modifiability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:823,config,config,823,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,2,['config'],['config']
Modifiability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; We have an adapted Celseq2 protocol, where read1 (42bp) is used as the sequencing read and read2 (also 42bp) contains (5' -> 3') the barcode (8bp), UMI (8bp), 26 remaining nt's. Alevin seems to run fine, but the quant matrix has a very low UMI count, which does not fit with the _MappedUMI.txt_ file or the reported alignment rate.; ; **To Reproduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/361:127,adapt,adapted,127,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361,1,['adapt'],['adapted']
Modifiability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; A clear and concise description of what the bug is.; I am running the following command on some sci-rna-seq3 samples and it seems to not work as expected. ; `salmon alevin -i af_splici/dm6_splici_idx/ -l ISR -1 data/SRR17122012_1.fastq -2 data/SRR17122012_2.fastq -o SRR17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/813:871,variab,variable,871,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813,1,['variab'],['variable']
Modifiability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; I installed Salmon 1.5.2 from binaries, and load it via the module environment (alter or set shell variables such as `PATH` to make the installation visible). The problem is that Salmon overrides the link to the C math standard library. . ```; # without Salmon in my PATH; ldd /home/eboileau/.miniconda3/envs/scNapBar-dev/bin/python3 ; libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f1d2bd45000). # with Salmon in my PATH (loaded via module load salmon/1.5.2); libm.so.6 => /biosw/salmon/1.5.2/lib/libm.so.6 (0x00007f1fa67c0000) ; ```. The latter seem to be incompatible with the Python installation, and results in. ```; import numpy; ImportError: /biosw/salmon/1.5.2/lib/libm.so.6: symbol __get_cpu_features version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; ```. I do not understand why this is happening, and the question is why Salmon has it's own copy of *libm.so.6*?; Is this library different? . **To Reproduce**; Load salmon/1.5.2 via module environment. I am able to run both my python script and Salmon after deleting Salmon's own copy of *libm.so.6*.; Is this expected to alter Salmon's results in any way?. **Expected behavior**; Salmon does not modify the link to *libm.so.6*. **Desktop (please complete the following information):**; - Linux atlas 4.19.0-17-amd64 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux; - salmon 1.5.2; - Python 3.7.6; - conda 4.9.2; - Modules Release 4.2.2 (2019-02-17). **Questions**; - Why Salmon has it's own copy of *libm.so.6*? Is it safe to delete it, and is this expected to alter Salmon's results in any way?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/710:215,variab,variables,215,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/710,1,['variab'],['variables']
Modifiability,"-cell RNA-seq experiment because map to introns. <img width=""400"" alt=""image"" src=""https://user-images.githubusercontent.com/5101911/69015737-65272f80-0997-11ea-87ab-9237e105622a.png"">. ### Loss of reads by using exonic references. Both Alevin and Cell ranger count only reads aligned to exons by default, thus losing some 35% of the reads. Large intronic proportions are a general feature of single-cell RNA-seq, for example the 10X PBMCs has ~20-25%, and nuclear data sets have 46% intronic reads in [[source](https://kb.10xgenomics.com/hc/en-us/articles/360000087552-Why-do-I-have-a-high-percentage-of-reads-mapping-to-intronic-regions-)]. . **So the best way to increase library 'quality' / counting statistics (which is my prime concern) seem to be including reads mapped to introns – leading to hopefully a large increase in UMIs.**. ### Considerations: separate, additive signals. Since exons and introns contain different biological signal, ideally I would like to count as:. 1. Exon only 		(current)* ; 2. Intron only 		(as control / comparison to 1.) ; 3. Exon + intron 	(finally, for boosting statistics) . Where 2 would be a complementary set to 1, so that no read is counted as both intron and exon, and thus 1+2 =~ 3. . \* _I am not sure what happens to a read that maps to an exon/intron junction using the default Alevin and 10x Cell Ranger pipelines, but I assume both count it as exonic._. ### Solution by counting programs. - There is a way to build a ""pre-mRNA"" reference for 10X Cell ranger as described [here](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/advanced/references#premrna). . - I wondered if Alevin can be adapted to this aim? I guess besides all complete transcript models, you need to add one more: the pre-mRNA. (While some complexity can theoretically arise by the serial nature of splicing, I would ignore it at first). Would that be a good idea, or the advantage of Alevin would evaporate if we include introns?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/450:1827,adapt,adapted,1827,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/450,1,['adapt'],['adapted']
Modifiability,".; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-060/job_scripts/9987283: line 31: 1629 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}; **** Job ends ****; Wed Mar 8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee1073eac092487ac62314; [New Thread 1629]; [New Thread 1707]; [New Thread 1708]; [New Thread 1709]; Core was generated by `/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/b'.; Program terminated with signal 6, Aborted.; #0 0x00000037e2032625 in ?? (); ""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/core.1629"" is a core file.; Please specify an executable to debug.; (gdb) q; ```. and the SGE info:. ```bash; $ qacct -j 9987283 -t 2; ==============================================================; qname shared.q; hostname compute-060.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-salmon_test2.gsk_phaseII; jobnumber 9987283; taskid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:30579,config,configured,30579,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['config'],['configured']
Modifiability,"303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6698794; reads corrected by overlap analysis: 123572; bases corrected by overlap analysis: 125602. Duplication rate: 1.23916%. Insert size peak (evaluated by paired-end reads): 1. JSON report: RabbitQC.json; HTML report: SRR1852518.html; ```; Best,; Ci",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:3443,adapt,adapter,3443,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,2,['adapt'],"['adapter', 'adapters']"
Modifiability,"; Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:3000,config,configure,3000,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,2,['config'],['configure']
Modifiability,A PR noting the differences in my approach to #269.; The one that I think needs addressing is in `writeFastq` (https://github.com/COMBINE-lab/salmon/compare/develop...PeteHaitch:develop?expand=1#diff-bf2f37cd9ea77a5c454a5bd860a924ee); without some change to this the `UMI` and `CB` are incorrectly extracted for CEL-Seq2. ; I simply commented out the original lines and modified it as needed for CEL-Seq2 in order to test my modified version.; I guess some sort of protocol-specific conditional is needed here. The remainder are minor/cosmetic choices of variable names (please feel free to ignore!).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/285:555,variab,variable,555,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/285,1,['variab'],['variable']
Modifiability,"Add [sci-rna-seq3 protocol](https://www.nature.com/articles/s41586-019-0969-x) to salmon alevin. To use this protocol pass the `--sciseq3` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/sci-RNA-seq3.html). Briefly, the reads have 9-10 bp hairpin adaptor index, and 10bp reverse transcription index which together make the cell barcode of 19-20 bp in length; an 8 bp UMI which follows a 6bp anchor sequence CAGAGC. . Summary of changes:; 1. `--sciseq3` flag added to process sci-rna-seq3 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the position of anchor sequence and avoid searching twice; 3. In case the barcode is 19bp, `A` is added as the last nucleotide to make the cell barcodes length 20 bp for all barcodes. It was tested on data from the [Nature paper](https://www.nature.com/articles/s41586-019-0969-x). Correlation b/w the counts from the GEO submission [GSE119945](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE119945) and sum of spliced, unspliced reads with and without ambiguous counts using `usa` mode in alevin-fry gave reasonable looking correlations. ; Results for one of the fastq files:; ![image](https://user-images.githubusercontent.com/12998572/128923136-eefa8738-f87e-4f67-bba6-5cc1648ce194.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.4594 0.7805 0.8295 0.8253 0.8736 0.9943 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/695:315,adapt,adaptor,315,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/695,1,['adapt'],['adaptor']
Modifiability,"After generating issue #48, I took the recommendation of switching to the standard EM algorithm, but I'm having further problems. However, I don't think the problem was with the Variational EM algorithm, but an issue with how the dataset is behaving. . This is with the same dataset as before (single end, rRNA-depleted, second-strand protocol, extreme depth of 170M+ reads). I have the options --useFSPD and --biasCorrect turned on with library type ""SF""; the full call is . ```; salmon quant -i $SALMON_DIR -l SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT \; --numBootstraps 100 --useFSPD --geneMap $GENES \; --biasCorrect -p 59; ```. I had attempted to use wasabi and run sleuth, but I got an error where the number of transcripts passing the initial filter was ""NA"". I then discovered that for four samples, many of the transcripts had ""-nan"" generated for the ""NumReads"" column, and this led to all of them having ""-nan"" for the TPM column. One sample had ~100 that failed, but the other three had a variable 106K-109K out of 176K total transcripts fail. No warning or error was thrown during the quantifying or EM optimization steps, so I don't know what happened. Interesting, I should note that the NaNs are only generated when both biasCorrect and useFSPD are turned on. NaNs are not generated when I use only one or neither option. (this was only tested with one sample though). If you have immediate suggestions, that would be great. Otherwise, I can work on generating a test dataset.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/50:999,variab,variable,999,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50,1,['variab'],['variable']
Modifiability,"After starting a blank Ubuntu machine, and then executing:. ```; sudo apt-get update && \; sudo apt-get -y install screen git curl gcc make g++ python-dev unzip \; default-jre pkg-config libncurses5-dev r-base-core r-cran-gplots \; python-matplotlib python-pip python-virtualenv sysstat fastqc \; trimmomatic bowtie samtools blast2; sudo apt-get -y install cmake libboost-all-dev liblzma-dev. curl -O -L https://github.com/COMBINE-lab/salmon/archive/v0.5.0.tar.gz. tar xzf v0.5.0.tar.gz; cd salmon-0.5.0; cmake .; make; ```. gives. ```; In file included from /home/ubuntu/salmon-0.5.0/include/BAMQueue.hpp:146:0,; from /home/ubuntu/salmon-0.5.0/include/AlignmentLibrary.hpp:14,; from /home/ubuntu/salmon-0.5.0/src/SalmonUtils.cpp:13:; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp: In function 'bool checkProperPairedNames_(const char*, const char*, uint32_t)':; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp:247:33: error: 'BOOST_LIKELY' was not declared in this scope; if (BOOST_LIKELY(nameLen > 1)) {; ^; ```. I'm not sure if this is a Boost version requirement, or what -- looks like I have boost 1.54 installed. Suggestions welcome!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/24:180,config,config,180,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/24,1,['config'],['config']
Modifiability,"Asked from a colleague claiming it was better to use ""correct"" values (ie, given by the RNASeq platform) for fragment length distribution, I tried to use this option. However, I did not understood a few thing about them in the documentation, and could not figure out the answer from the code...; The documentation states that these options give the mean and standard deviation of a truncated normal variable used to model the distribution. However, it is not clear if they correspond of the (µ, sigma) parameters of the Gaussian that _will_ be truncated (as is usually given) or _after_ truncation, as is easy to estimate by sample mean and sample standard deviation. These values may be quite different, I guess, if truncation is indeed important.; From the code, I found that the values are stored in the fragLenDistMean and fragLenDistPriorSD slots of the SalmonOpts, and that their default values are 200 and 80. However, I could not find any place where these slots were used again (a grep on all .cpp files in src did not found any result except the lines in SalmonQuantify.cpp and SalmonQuantifyAlignments.cpp that seem to parse the command line options:; ` (; ""fldMean"",; po::value<size_t>(&(sopt.fragLenDistPriorMean))->default_value(200),; ""The mean used in the fragment length distribution prior""); (; ""fldSD"",; po::value<size_t>(&(sopt.fragLenDistPriorSD))->default_value(80),; ""The standard deviation used in the fragment length distribution ""; ""prior""); `; However, I do not use C++ so I may have missed something in the role of the `po` namespace.; Could you give any hint of where these values are used, so I can understand what is there exact meaning?; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/127:399,variab,variable,399,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127,1,['variab'],['variable']
Modifiability,"C 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=ye",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:8001,variab,variables,8001,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['variab'],['variables']
Modifiability,Configure error installing salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:0,Config,Configure,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Config'],['Configure']
Modifiability,"Currently on develop branch, there is a build error. https://travis-ci.org/COMBINE-lab/salmon/builds/418288039; https://api.travis-ci.org/v3/job/415232259/log.txt. ```; cd /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0 && CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc toolset=gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/COMBINE-lab/salmon/external/install/include -L/home/travis/build/COMBINE-lab/salmon/external/install/lib"" link=static install. g++: error: unrecognized command line option ‘-std=c++14’; ```. I suspect the `g++` (Not `g++-N`) is wrongly used for to build boost.; As a result, the old version `g++` version 4.8 does not support `-std=c++14`. Maybe. https://www.boost.org/doc/libs/1_66_0/more/getting_started/unix-variants.html; https://stackoverflow.com/questions/5346454/building-boost-with-different-gcc-version. Maybe below kind of process is necessary if CC=gcc-N. ```; $ echo ""using gcc : 7 : /usr/bin/g++-7 ; "" >> tools/build/src/user-config.jam; $ ./bootstrap.sh ...; $ ./b2 --toolset=gcc-7 ...; ```. Here is my work to fix the issue.; Still working in progress.; But you can imagine how I am trying to fix it. I am not familiar with the `cmake`.; https://github.com/junaruga/salmon/commit/6cb73098155f0e776d4eb68bc639f3d761dd8963. If possible, I want you to fix this issue :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/275:1294,config,config,1294,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/275,1,['config'],['config']
Modifiability,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/562:1260,config,configured,1260,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562,1,['config'],['configured']
Modifiability,"From the `alevin-fry` repo (by @fransua). ```; Hi,; I cannot find clear help on read_geometry. There are a couple of examples but they do not seem to work for me and I am struggling to change them.; Specifically I have several questions:. what does the ""read_geometry"" refers to? I saw that it is usually set to ""2[1-end]"", but why only read 2, and when does the whole read is not a read?. what is the pattern of inclusion exclusion? 1-10 starts at the first nucleotide but includes the ninth or the tenth too?. How does alevin-fry deals with unexact position, for instance in my case the cell tag can start anywhere between position 85 and 115 because of a variable polyA before. thanks. ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/816:658,variab,variable,658,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/816,1,['variab'],['variable']
Modifiability,"Greetings,. When trying to debug test failure, I ended up with an incomplete error messages which turned out to stem from a typo in the variable name, so I took the liberty to make the whole message a bit more verbose to help with the present and future debugging. I thought you might be interested.; Have a nice day, :); Étienne.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/810:136,variab,variable,136,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810,1,['variab'],['variable']
Modifiability,"Hello all, . I really wish Salmon was easier to install. . When running: . _cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX='/home/.../salmon-master/'_. I get the following message: . _Making Release build; running /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh 2>&1; /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh: line 33: curl: command not found; -- fetch RAPMAP exit code 127. CMake Error at CMakeLists.txt:265 (message):; Could not fetch RapMap source [fetchRapMap.sh returned exit code 127]. -- Configuring incomplete, errors occurred!; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeOutput.log"".; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeError.log""._. This seems to be an issue that keeps coming up. What is the proper way to solve it? ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/331:523,Config,Configuring,523,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331,1,['Config'],['Configuring']
Modifiability,"Hello salmon team! @jamorrison and I were looking through the code and seeing how best we could contribute a new single-cell RNA-seq technology. Our approach (STORM-seq https://www.biorxiv.org/content/10.1101/2022.03.14.484332v3) has made use of salmon for the pre-print and recently been extended to include UMIs. Thus, we would love to make use of the alevin fry framework if possible. It's paired-end, but without a cell barcode and uses `-l ISR` as the library type in salmon. The read structure looks like this:. Read 1; biological read. Read 2; UMI (8bp) + Linker (6bp) + biological read. We've started looking through the `SingleCellProtocols.hpp` header file to add in STORM, but wanted to ask what would be the best way to go about contributing a new technology like this. Also, without the cell barcode, would it make sense to have a small function to add a synthetic barcode if the length of the cell barcode is 0?. Thanks again for a great tool!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/805:289,extend,extended,289,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/805,1,['extend'],['extended']
Modifiability,"Hello, salmon developer!; I am working on an arm HPC machine. And when I tried to build with salmon on it. I found a little problem in the CMakeLists.txt. ```; not setting -DHAVE_NUMERIC_LIMITS128; CMake Error at /home/hzwi/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Iconv (missing: Iconv_LIBRARY); Call Stack (most recent call first):; /home/houzhuangwei/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /home/hzw/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindIconv.cmake:165 (find_package_handle_standard_args); CMakeLists.txt:362 (find_package); ```; It seems the cmake can not found the right path of libiconv.; So I change the CMakeLists.txt the 362-365 line.; ```; find_package(Iconv REQUIRED); if(NOT Iconv_IS_BUILT_IN); set(ICONV_LIB Iconv::Iconv); endif(); ```; ```; find_package(iconv); if(NOT Iconv_IS_BUILT_IN); set(ICONV_LIB Iconv::Iconv); endif(); ```; or ; I use the -D in the cmake like; ```; cmake -DFETCH_BOOST=TRUE -DBOOST_ROOT=/path/boost -DCMAKE_INSTALL_PREFIX=/path/salmon-1.8.0/salmon_install -DIconv_LIBRARY=/path/libiconv-1.16/iconv_install/lib ; ```; Then the configure was success",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/776:1304,config,configure,1304,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/776,1,['config'],['configure']
Modifiability,"Hello,; I would like to use alevin for quantification of 10x 5' PE. 10x 5' PE contains cDNA in read1 as well as read2. Could you tell me how to specify the --read-geometry to use both read1 and read2 for quantification. The configuration of the library is as follows; read1 BC16bp-UMI10bp-TSO13bp-cDNA5'; read2 cDNA3'. I tried the following library options, but I got ""Total 0.00 UMI after deduplicating.; `-l ISF --bc-geometry 1[1-16] --umi-geometry 1[17-26] --read-geometry ""1[40-end]2[1-end]""`. I also tried `""1[40-end] 2[1-end]""` and `""1[40-end],2[1-end]""` by changing the delimiter, but they were not quantified in the same way. On the other hand, ""1[40-end]"" and ""2[1-end]"" were quantified well. Best,; Yoshi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/886:224,config,configuration,224,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/886,1,['config'],['configuration']
Modifiability,"Hello,; I'm trying to compile salmon into arm64 linux system, but I'm getting the error bellow:; ```; ...; Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /usr/lib/aarch64-linux-gnu/libtbbmalloc_proxy.so;/usr/lib/aarch64-linux-gnu/libtbbmalloc.so;/usr/lib/aarch64-linux-gnu/libtbb.so;/usr/lib/aarch64-linux-gnu/libtbb.so; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon-0.14.2/build; [ 34%] Completed 'libtbb'; [ 39%] Built target libtbb; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. ```. How to fix this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/433:771,Config,Configuring,771,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/433,1,['Config'],['Configuring']
Modifiability,"Hey @rob-p and @k3yavi! Avi and I have chatted a bit about this offline, and [I've commented about this in the past](https://github.com/COMBINE-lab/salmon/discussions/629#discussioncomment-777414), but I'm currently attempting to extend alevin's use to the newer combinatorial indexing experiments like [SPLiT-seq](https://science.sciencemag.org/content/360/6385/176) or the commercial solution, [ParseBio](https://www.parsebiosciences.com/) (the biotech formerly known as SplitBio). Now that you support different barcode geometries and allow the user to specify where these barcodes should be expected, this _should_ be doable. . I've downloaded the [raw data from the original SPLiT-seq paper](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3017261), and we have some ParseBio data of our own; my goal is to help you all write a vignette on this once we get the details worked out. . In short, the R1 file contains cDNA sequence, and R2 contains a 10bp UMI followed by 3 different barcodes in the following arrangements (note: ParseBio seems to shift BC1 up a few bp, to 79-86):; - UMI: 1-10; - BC3: 11-18; - BC2: 49-56; - BC1: 87-94. The intervening bases are a combination of common and variable sequences. The other wrinkle with these approaches is that the cDNA can be amplified using either oligo-dT or random hexamer barcodes. The net effect of this is that BC1 can be one of two options, and some barcode combinations need to be pooled to represent the same cell. For example:. AACGTGAT-CTGTAGCC-ACACAGAA; GATAGACA-CTGTAGCC-ACACAGAA. may be the same cell, amplified by two different means. . We know how the BC1s are paired, so Avi suggested pre-processing the R2 FASTQ file such that we locate random hexamer BC1 sequences and modify them to the matched oligo-dT sequence. In the above example, we'd correct some R2 reads that contain ""GATAGACA"" in the 87-94 position to ""AACGTGAT"". I [wrote a script](https://github.com/jeremymsimon/SPLITseq) (in perl because I'm old-school) that d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699:230,extend,extend,230,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699,1,['extend'],['extend']
Modifiability,"Hey,; I have a question regarding the --seqBias flag, your documentation suggests it is specifically applied to random hexameric primers. But on the contrary it is based on Variable length Markov Model, is it feasible to use this flag for analysing the libraries made with random nonameric primers ?; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/880:173,Variab,Variable,173,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/880,1,['Variab'],['Variable']
Modifiability,"Hi :). I was already successfully using Salmon before, but unfortunately a storage node of the computing cluster I am using crashed and now I am running into trouble re-installing it. . I downloaded ""salmon-master.zip"", unzipped it and changed into the salmon-master folder. Further, I ran the following command:. > cmake -DCMAKE_INSTALL_PREFIX=/scratch/hpc-prf-ptma2/ptma2001/salmon-master -DFETCH_BOOST=TRUE. The configuration starts, but finally runs into the following error:. > -- Configuring done; > CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; > Please set them or make sure they are set and tested correctly in the CMake files:; > CURL_LIBRARY; > linked by target ""salmon"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > linked by target ""unitTests"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > ; > -- Generating done; > CMake Generate step failed. Build files cannot be regenerated correctly. Would you have an idea how I could circumnavigate that issue?. Thanks a lot in advance for your time and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/729:415,config,configuration,415,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/729,3,"['Config', 'config', 'variab']","['Configuring', 'configuration', 'variables']"
Modifiability,"Hi @rob-p @k3yavi . A question (or feature enhancement); When I am doing salmon indexing, is there a metadata file that will capture info about the salmon version used for indexing. Why am I asking this: I am developing a high throughput pipeline (with bbmap, bbduk, etc and then salmon) where I use salmon 1.1.0 for quantification - in this scenario, independent users have to build their own salmon indices and I want to trap/capture the situation where the user has used a different salmon version of indexing. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/498:43,enhance,enhancement,43,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/498,1,['enhance'],['enhancement']
Modifiability,"Hi @rob-p and all,. Thank you for the wonderful tool.; I've been using Salmon for some time now, and have encountered a question.; How is Salmon affected by different read lengths and adapters?. I have a dataset with 5%-15% adapters at 3' of read. How will salmon output be affected if:; 1) I don't remove them; 2) I trim all reads down; 3) use an adapter trimming program - resulting in reads with different length. . Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/634:184,adapt,adapters,184,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/634,3,['adapt'],"['adapter', 'adapters']"
Modifiability,"Hi @rob-p,. would it be possible to add a feature similar to `salmon quant` like `--read-geometry 1[1-end]` (as in Alevin) to define which part of both R1 (and R2) should be used for the quantification? That would omit the need for trimming in case of adapters and make salmon workflows even more lightweight. best,; -Alex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/743:252,adapt,adapters,252,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/743,1,['adapt'],['adapters']
Modifiability,"Hi Rob & Team, . First and foremost, my thanks for developing such a great and versatile tool, very grateful for your work. . I'm hoping for some words of wisdom. We've got some data from Lexogen CORALL libraries (parired end + UMI). One of the main benefits in using this kit, is the lack of fragmentation step, instead there is Displacement Stop Primers (DSP) which are theoretically randomly distributed. . One approach we've taken is to trim adapters, and collapse UMIs (from STAR alignment). Following these steps, we've got theoretically clean data, so using `samtools fastq` to make a Salmon-friendly input. We observed a very unusual fragment length distribution with this, it looks largely poisson. I've rationalised this as the fragments being particularly short after UMI + Adaptor trimming, and given the random nature of DSPs, this could make some sense. One thing that stuck out in my mind was ordering of the reads (which were coord sorted), thus they'd be coming into salmon that way, breaking an assumption of the streaming EM algorithm. . We're currently name sorting the reads prior to Salmon quantification, but I wonder if you could explain if this unusual FLD could be a consequence of position sorted fastq, or any other thoughts you have around this situation? The good news is that ultimately, the same high level biology comes out of the quantifications whichever way do it. . Thanks for any insight. Andrew",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/765:446,adapt,adapters,446,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/765,2,"['Adapt', 'adapt']","['Adaptor', 'adapters']"
Modifiability,"Hi Rob and team. I am obtaining the following errors in some of my samples but not all and I cannot figure out what is happening. I am using salmon to see if specific genes are present (apart from a general quantification). I. In order to do that I run the following code:; Code (example):; `salmon quant -l A -i /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/spikein/Flox5YFP0_B07_R/index -p 6 -o /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/bcbiotx/tmpTest2/quant -1 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R1_Flox5YFP0_B07_R.trimmed.fastq.gz) -2 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119:866,variab,variability,866,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119,1,['variab'],['variability']
Modifiability,"Hi,. I am getting the following when building Salmon (gcc/g++ 4.8.2, and boost from `-DFETCH_BOOST=TRUE` when calling cmake). ```; (...); [ 64%] Performing build step for 'libtbb'; cd /opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/sa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/20:735,CONFIG,CONFIG,735,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20,1,['CONFIG'],['CONFIG']
Modifiability,"Hi,. I am testing Alevin, and would like to compare against Cell Ranger on my data set. While primary mapping statistics indicate more reads mapped, I would like to compare the results in the final analysis, in Seurat. Many steps rely on HGNC Gene symbols as opposed to Ensemble IDs. ### What is the best way to convert ensembl IDs to gene symbol in Alevin?. Alevin (aligned as in this [gist](https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001#file-alevin-default-ipynb), imported to R in this [tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/)) returns ensembl IDs in format like ""ENSG00000215910.7"". ```R; require(""fishpond""); require(""tximport""); ; files <- file.path(""[...]/alevin/quants_mat.gz""); file.exists(files); txi <- tximport(files, type=""alevin"");; rownames( txi$counts); ``` . I am currently converting these using biomart with suboptimal adaptations:. ```R; BiocManager::install(""biomaRt""); require('biomaRt'); mart <- useDataset(""hsapiens_gene_ensembl"", useMart(""ensembl"")); genes <- rownames(txi$counts); df$id <- NA; meta.genes <- getBM(attributes = c(""ensembl_gene_id"",""external_gene_name"", ""description""), ; values = genes, mart = mart ); ```; Manual adaptations:. 1. I trim IDs after dot (""ENSG00000215910.7"" → ""ENSG00000215910”); 2. I remove NA values (not all trimmed gene IDs are found in biomaRt); 3. I add up counts of genes (per ENS.ID) with the same gene symbol, e.g. “Y_RNA” or “HSPA14”. ```R; g.LookUp = meta.genes[,2]; names(g.LookUp) = meta.genes[,1]; ; # 1. Trim; ensembl_ID.simple =str_split_fixed(genes,pattern = '\\.', n=2)[,1]; ; genes.converted = g.LookUp[ensembl_ID.simple]; any.duplicated(genes.converted); ; # ...etc; ```. Is there a better way to convert IDs, possibly implemented in Alevin / Salmon?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/448:894,adapt,adaptations,894,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/448,2,['adapt'],['adaptations']
Modifiability,"Hi,. I am using Salmon v 1.10.1 do perform selective alignment on paired end RNAseq samples and I have trouble to interpret the output statistics (i.e succesfully mapped pairs ....); Here is my command line on a sample containing 34,462,097 pairs (After cleaning, adapter removal, rRNA trimming). **salmon quant -i $IndexDir -l A -1 $forward -2 $reverse -p 8 --seqBias --gcBias –useVBOpt --discardOrphansQuasi –consensusSlack 0.35 --minScoreFraction 0.8 --decoyThreshold 1 -o $OutputDir/$pairname_Output**. Here is the the output statistics of the alignment; [Salmon_quant_output.txt](https://github.com/COMBINE-lab/salmon/files/11768911/Salmon_quant_output.txt). So I have few questions : . 1- Where is idicated the numer of processed pairs, i.e. the number of pairs in the sample ?. 2- Does the mapping rate correspond to the reads that will be used for the quantification (i.e. succesfully mapped and that were above every filtering thresholds) or this % also takes into account the discarded mapping ? This is of great importance to tell if the mapping step is good or not. 3- Counted 20,588,460 total reads in the equivalence classes What does this mean ? Is it the numner of pairs that mapped (discarded and not discarded or only the ones that are kept for quentification). 4- What is the difference between mapping discarded and fragment discarded ? To count the number if pairs that did not map to my reference should I sum Number of mappings discarded because of alignment score + Number of fragments entirely discarded because of alignment score + Number of fragments discarded because they are best-mapped to decoys + Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets. Thanks in advance for your time and answers,,. Florian Rocher",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/852:264,adapt,adapter,264,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/852,1,['adapt'],['adapter']
Modifiability,"Hi,. I did refactoring for `.travis.yml`.; This pull-request is for develop branch. * Aligned with 2 spaces indent.; * Removed tailing space.; * Removed old commended out lines on bottom area.; We can check past modification with `git log -p .travis.yml`.; So, I think we can remove the comment lines.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/292:11,refactor,refactoring,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/292,1,['refactor'],['refactoring']
Modifiability,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/112:1056,config,configuration,1056,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112,1,['config'],['configuration']
Modifiability,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/339:1022,adapt,adapters,1022,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339,4,"['adapt', 'variab']","['adapter', 'adapters', 'variable']"
Modifiability,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:691,config,configuring,691,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,4,['config'],"['configure', 'configuring']"
Modifiability,"I saw there was an earlier issue that discussed PCR duplicate removal (https://github.com/COMBINE-lab/salmon/issues/136). I am specifically curious about this response:. > We are currently working on the code that will do duplicate removal when UMI tags are present. That methodology can be extended to remove duplicates even without UMI tags. I am wondering if the functionality was ever added. I am not interested in removing duplicates, but it would be nice to see their estimated levels as a QC measure. Is this information available somewhere? If not, maybe there is some other related metric?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/307:291,extend,extended,291,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/307,1,['extend'],['extended']
Modifiability,I'm trying to build version 0.6 and I get the following error:. ```; cd /root/soft/salmon/salmon-0.6.0/build/src && /usr/local/bin/cmake -E cmake_link_script CMakeFiles/salmon.dir/link.txt --verbose=1; /opt/rh/devtoolset-2/root/usr/bin/c++ -pthread -funroll-loops -fPIC -fomit-frame-pointer -Ofast -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -static-libstdc++ -Wno-deprecated-register -Wno-unused-local-typedefs -L/opt/rh/devtoolset-2/root/usr/lib64 -L/opt/rh/devtoolset-2/root/usr/lib CMakeFiles/salmon.dir/QSufSort.c.o CMakeFiles/salmon.dir/is.c.o CMakeFiles/salmon.dir/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:385,variab,variable,385,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['variab'],['variable']
Modifiability,"If an adapter is not trimmed, will it affect the mapping rate?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/398:6,adapt,adapter,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/398,1,['adapt'],['adapter']
Modifiability,Is it necessary to trim adapters before using salmon?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/398:24,adapt,adapters,24,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/398,1,['adapt'],['adapters']
Modifiability,"Is there a way to compile Salmon to a 32-bit architecture by any chance? I ask because I'd like to have single-cell tutorials on sandbox.bio v2 that use Salmon. But to power the platform, I'm running a 32-bit/i686 Debian OS in the browser 😬. When I try to compile it in a [i386/debian:bookworm-20230904-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/872:129,sandbox,sandbox,129,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872,1,['sandbox'],['sandbox']
Modifiability,"Is there any possibility of implementing the `--gcBias` option for single-end reads? I have a dataset where this would be very useful. I suppose in order to do this you'd need to assign an end point to each transcript whose start point is represented by a single read. You could either just assume every fragment's length is equal to the given mean fragment length, or maybe use the fragment length distribution implied by the mean and SD to compute, for each nucleotide past the end of the read, the probability that the fragment extends to that nucleotide, and then use that as a weight. Obviously this would require a warning to the user to set the fragment length mean and SD parameters to appropriate values for their data.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/83:531,extend,extends,531,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83,1,['extend'],['extends']
Modifiability,Portable cpuRelax,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/547:0,Portab,Portable,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/547,1,['Portab'],['Portable']
Modifiability,Quantification matrix with adapted Celseq2 protocol,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/361:27,adapt,adapted,27,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361,1,['adapt'],['adapted']
Modifiability,Refactor .travis.yml.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/292:0,Refactor,Refactor,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/292,1,['Refactor'],['Refactor']
Modifiability,Refactoring,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/665:0,Refactor,Refactoring,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/665,1,['Refactor'],['Refactoring']
Modifiability,Salom 0.9.1 gives errors when configuring and doesn't find installed libraries,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/181:30,config,configuring,30,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181,1,['config'],['configuring']
Modifiability,Set the compiler to build boost from environment variables.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/276:49,variab,variables,49,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276,1,['variab'],['variables']
Modifiability,Some refactoring to clean some of the argument parsing and to allow future new features. * argument parsing; * allow early load of the index,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/665:5,refactor,refactoring,5,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/665,1,['refactor'],['refactoring']
Modifiability,"This PR introduces a new feature that will allow users to specify custom single cell protocols and use with alevin. Custom Geometry (--custom-geo) should be used when:; 1. Barcode or umi have variable lengths; 2. There is known fixed sequence in the reads; 3. There is some sequence to be excluded; From the input peglib spec it creates a regex. Boost regex library is used to parse the reads. Apart from small tests on multiple outlier cases, it was tested on a sci-RNA-seq3 sample SRR7827207 for speed. For this the spec is `--custom-geo 1{b[9-10]f[CAGAGC]u[8]b[10]}2{r}`. It says:; - Read 1 starts with barcode of variable length 9-10 bp, followed by; - A fixed sequence CAGAGC, then; - A umi of length 8, and lastly; - barcode of length 10.; - The second read is all biological. The barcodes are concatenated in the output and a padding sequence is added to make the length as max length + 1. The extra base is added so that we don't introduce spurious matches in barcode. For example, if the barcodes have length 3-4 bp and the two barcodes are `ATG` and `ATGA`, after padding they will be `ATGAC` and `ATGAA` resp. Adding just `A` to shorter barcode would result in a spurious match. . Since `--custom-geo` uses regex, it is slower than protocol specific flag. The time with 8 threads on a large Ubuntu 20 machine:. 1. Using `--sciseq3`:; ```; real 1m0.425s; user 7m21.501s; sys 0m2.964s; ```; 2. Using `--custom-geo`; ```; real 1m39.887s; user 11m55.602s; sys 0m6.839s; ```; Notably, it is about 66% slower. However, it allows support for almost all current and future protocols. . There will be a tutorial shortly on how and when to use this and how is it different from other flags such as `--umi-geometry`, `--read-geometry` and `--bc-geomtery`. There is scope of speed improvement in the future along with integration of all custom geometry processing protocols.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/734:192,variab,variable,192,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/734,2,['variab'],['variable']
Modifiability,"This is an installation problem. I am getting a link-time error building Salmon 1.0.0 with GCC 7.3.0 and CMake 3.12.1. The error occurs immediately after ""[100%] Linking CXX executable salmon"". The OS is RHEL6. Here's the output:. ```; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::allocator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger, std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; ```. Googling this error implies an issue with the code, not a missing library.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/455:703,plugin,plugin,703,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455,2,['plugin'],['plugin']
Modifiability,"This is related to https://github.com/COMBINE-lab/salmon/issues/272. * Now there are 2 test cases on Travis CI, adding one case.; * Added code for speed up such as `git - depth: 1`, `make -j 4`.; * Refactoring. Removed tailing spaces. Notes:; * I added `gcc-5`'s case as maybe it is minimal support version of gcc for this project.; * I want to replace current case `gcc-7` to latest version `gcc-8` if you like.; * Total running time (""Ran for"" on the Travis page.) becomes faster than current situation. In my repository, total running time is ""15 min 11 sec"", seeing current master branch's test is around 17 min+. See [1]; * Removed `travis_wait`. Without the command, the default behavior is ""when a long running command or compile step regularly takes longer than 10 minutes without producing any output"". [2] I have not faced the situation when I did debug. ; * There are commented out area at the bottom of `.travis.yml`. However as we can run `git log -p .travis.yml` to check past modification, shall we remove the commented out ""whitelist"" area?. [1] https://travis-ci.org/junaruga/salmon/builds/417976633; [2] https://docs.travis-ci.com/user/common-build-problems/#build-times-out-because-no-output-was-received",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/273:198,Refactor,Refactoring,198,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/273,1,['Refactor'],['Refactoring']
Modifiability,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/276:351,config,config,351,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276,1,['config'],['config']
Modifiability,"URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:7782,config,configure,7782,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['config'],['configure']
Modifiability,"Wicked fast indeed! Are there any plans to extend salmon to also detect gene fusion events? There isn't a fast and accurate way to do that yet, only approaches requiring full alignments. Most often a base-perfect breakpoint isn't required, an estimate within a hash length is fine. We are a heavy user of bcbio and are also running the full STAR alignment just for gene fusions, which really sucks. Any ideas would be much appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/52:43,extend,extend,43,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52,1,['extend'],['extend']
Modifiability,"```bash; $ qacct -j 9958683 -t 3; ==============================================================; qname shared.q; hostname compute-068.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-txQuant-alzheimer.gsk_phaseII; jobnumber 9958683; taskid 3; account sge; priority 0; qsub_time Mon Mar 6 23:18:58 2017; start_time Mon Mar 6 23:19:12 2017; end_time Tue Mar 7 17:27:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:21197,variab,variable,21197,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['variab'],['variable']
Modifiability,"a64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C co",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:4282,config,configure,4282,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['config'],['configure']
Modifiability,"aco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fastq file - insert read; index=$3 # directory from salmon index; outDir=$4 # output directory; tsv=$5 # tsv containing txp-gene-id pairs; whitelist=$6 # cell ranger output barcodes. salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist --numCellBootstraps 20 --dumpFeatures. #salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist. ```. Thank you in advance!; Anna. -------------------------; Additional FYI:; ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ salmon version; Version Info: This is the most recent version of salmon.; salmon v1.4.0. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--n",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/636:1771,variab,variables,1771,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636,1,['variab'],['variables']
Modifiability,"and poly-T was used to select mRNAs during the library construction...; 3. Not using pre-mature transcripts so reads mapping to introns are discarded: I am not sure if this is a valid point since we usually quantify mature mRNAs, not pre-mature ones.; 4. Library type: my library was constructed in a stranded way. The program detected my libtype as ISR:; ```; {; ""read_files"": ""[ DS_1_HW_FM_1P.fq.gz, DS_1_HW_FM_2P.fq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 18651686,; ""num_assigned_fragments"": 18651686,; ""num_frags_with_concordant_consistent_mappings"": 17799536,; ""num_frags_with_inconsistent_or_orphan_mappings"": 864409,; ""strand_mapping_bias"": 0.0001987858838992702,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 3539,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 17799536,; ""SF"": 419781,; ""SR"": 441089,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```; When I change the libtype to a broader category, such as IU, the mapping rates slightly increased from ~55% to 65%, also I got more counts in each transcript, but this introduced higher strand mapping bias (Appeared as a warning message). ; 5. many short reads: No... in my case, the majority of the reads are ~150bp. And I used k=31 (default).; 6. Read trimming: I trimmed the adaptors and low-quality bases from the ends. One thing I noticed in my FastQC report is that I have warnings for 'Per Base Sequence Content'. I can see a fluctuation of nucleotides in around the first 12bp of each run due to a biased selection of random primers. This is so common in RNA-seq data so I did not trim the first several bases...Not sure if this can cause the low mapping rate.; One of my fastQC reports:. [DS_1_HW_FM_1P_fastqc.html.zip](https://github.com/COMBINE-lab/salmon/files/4730665/DS_1_HW_FM_1P_fastqc.html.zip). So...Is there a way I can increase the mapping rates? Or do I need to? My trimmed reads are all of very high quality so I do expect a mapping rate of >70%. I would appreciate it if this could be clarified.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/533:2777,adapt,adaptors,2777,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/533,1,['adapt'],['adaptors']
Modifiability,"arwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:6461,config,configure,6461,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,3,['config'],['configure']
Modifiability,c_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=yes; gl_cv_posix_shell=/bin/sh. ## ----------------- ##; ## Output variables. ##; ## ----------------- ##. ACLOCAL='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing aclocal-1.15'; AMDEPBACKSLASH='\'; AMDEP_FALSE='#'; AMDEP_TRUE=''; AMTAR='$${TAR-tar}'; AM_BACKSLASH='\'; AM_CFLAGS=''; AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'; AM_DEFAULT_VERBOSITY='1'; AM_V='$(V)'; AR=''; AS=''; AUTOCONF='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoconf'; AUTOHEADER='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoheader'; AUTOMAKE='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing automake-1.15'; AWK='awk'; CC='/Library/Developer/CommandLineTools/usr/bin/cc'; CCAS=''; CCASDEPMODE=''; CCASFLAGS=''; CCDEPMODE=''; CFLAGS=''; CFLAG_VISIBILITY=''; COND_ASM_X86_64_FALSE=''; COND_ASM_X86_64_TRUE='#'; COND_ASM_X86_FALSE=''; COND_ASM_X86_TRUE='#'; COND_CHECK_CRC32_FALSE='#'; COND_CHECK_CRC32_TRUE=''; COND,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:9054,variab,variables,9054,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['variab'],['variables']
Modifiability,"cking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:4105,config,configure,4105,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['config'],['configure']
Modifiability,"comment-777414), but I'm currently attempting to extend alevin's use to the newer combinatorial indexing experiments like [SPLiT-seq](https://science.sciencemag.org/content/360/6385/176) or the commercial solution, [ParseBio](https://www.parsebiosciences.com/) (the biotech formerly known as SplitBio). Now that you support different barcode geometries and allow the user to specify where these barcodes should be expected, this _should_ be doable. . I've downloaded the [raw data from the original SPLiT-seq paper](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3017261), and we have some ParseBio data of our own; my goal is to help you all write a vignette on this once we get the details worked out. . In short, the R1 file contains cDNA sequence, and R2 contains a 10bp UMI followed by 3 different barcodes in the following arrangements (note: ParseBio seems to shift BC1 up a few bp, to 79-86):; - UMI: 1-10; - BC3: 11-18; - BC2: 49-56; - BC1: 87-94. The intervening bases are a combination of common and variable sequences. The other wrinkle with these approaches is that the cDNA can be amplified using either oligo-dT or random hexamer barcodes. The net effect of this is that BC1 can be one of two options, and some barcode combinations need to be pooled to represent the same cell. For example:. AACGTGAT-CTGTAGCC-ACACAGAA; GATAGACA-CTGTAGCC-ACACAGAA. may be the same cell, amplified by two different means. . We know how the BC1s are paired, so Avi suggested pre-processing the R2 FASTQ file such that we locate random hexamer BC1 sequences and modify them to the matched oligo-dT sequence. In the above example, we'd correct some R2 reads that contain ""GATAGACA"" in the 87-94 position to ""AACGTGAT"". I [wrote a script](https://github.com/jeremymsimon/SPLITseq) (in perl because I'm old-school) that does this and allows for mismatches within 1 hamming distance. I'm sure someone could port this to python, rust, or C/C++ and speed this step up substantially, but it seems to work ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699:1199,variab,variable,1199,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699,1,['variab'],['variable']
Modifiability,"configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/Command",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:4227,config,configure,4227,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['config'],['configure']
Modifiability,"dif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create -o CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -c /usr/share/cmake-3.7/Modules/CheckFunctionExists.c; Linking C executable cmTC_dd9f2; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dd9f2.dir/link.txt --verbose=1; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -o cmTC_dd9f2 -rdynamic -lpthreads ; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dd9f2.dir/build.make:97: recipe for target 'cmTC_dd9f2' failed; make[1]: *** [cmTC_dd9f2] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dd9f2/fast' failed; make: *** [cmTC_dd9f2/fast] Error 2. ```. Some search on the internet suggests me that sometimes `-lpthread` should be used instead of `-lpthreads`. And indeed, if I try to compile the following code:; ```; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }; ```. I observe a failure with `-lpthreads`:; ```; $ cc -lpthreads /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; ```. And a success with `-lpthread`:. ```; $ cc -lpthread /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; $ ; ```. However, I'm unable to find where I can fix this in the whole configuration and build process.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/207:3572,config,configuration,3572,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207,1,['config'],['configuration']
Modifiability,"e HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineToo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:7872,config,configure,7872,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,2,['config'],"['config', 'configure']"
Modifiability,"ed using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-08-18 21:20:51.292295094 +0200; @@ -42,7 +42,7 @@; ${GAT_SOURCE_DIR}/external; ${GAT_SOURCE_DIR}/external/cereal/include; ${GAT_SOURCE_DIR}/external/install/include; -${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.1.3; +${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.2.3; ${GAT_SOURCE_DIR}/external/install/include/bwa; ${Z",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/11:1988,config,configure,1988,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11,1,['config'],['configure']
Modifiability,"elieve I am trying to add an assay. Here is the relevant code section and the error I receive:; ```; DefaultAssay(object = image.data) <- ""Spatial""; brain[['slice']] <- image.data; Error in `[[<-`:; ! Cannot add new cells with [[<-; Run `rlang::last_trace()` to see where the error occurred.; > rlang::last_trace(); <error/rlang_error>; Error in `[[<-`:; ! Cannot add new cells with [[<-; ---; Backtrace:; ▆; 1. ├─methods (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); 2. └─SeuratObject (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); Run rlang::last_trace(drop = FALSE) to see 1 hidden frame.; ```. I checked that Seurat has not changed the `sobj[[""ASSAYNAME""]] <- MYASSAYOBJECT` syntax in the same R session by following [this tutorial](https://satijalab.org/seurat/articles/multimodal_vignette) up to the line where the `adt` assay is added and confirmed that the resulting object had two assays present. I think this may be a versioning issue related to what types of objects can be added into layers (aka slots) in a Seurat object. For reference, here are some details of the objects involved:; ```; > class(brain); [1] ""Seurat""; attr(,""package""); [1] ""SeuratObject""; > class(image.data); [1] ""VisiumV2""; attr(,""package""); [1] ""Seurat""; ```. It is worth noting that I installed Salmon using the docker image found [here](https://hub.docker.com/r/combinelab/salmon) approximately three months ago. The version number I see is `1.10.3`. Below is my sessionInfo output as well. My best guess is that I have to adjust the object type for `image.data` here to something that can be coerced into a slot in the `brain` Seurat object, but I am not sure what object that should be. Let me know if I am making a simple mistake here too, I am quite rusty with the nuances of R. Thank you for your consideration and I hope to hear from the team soon!. ```; > sessionInfo(); R version 4.3.3 (2024-02-29); Platform: x86_64-conda-linux-gnu (64-bit); Running under: Ubuntu 22.04.4 LT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/942:1239,layers,layers,1239,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/942,1,['layers'],['layers']
Modifiability,"es 4096 Dec 6 11:40 ..; drwxrwxr-x. 3 modules modules 4096 Dec 6 11:40 include; lrwxrwxrwx. 1 modules modules 5 Dec 6 11:48 lib -> lib64; drwxrwxr-x. 2 modules modules 4096 Dec 6 11:40 lib64. ```. Even after I had hacked up the CMakeLists.txt file to set some of these it still wouldn't build. For instance in that file:; ```; ## Try and find TBB first; if(DEFINED ENV{ROOT_LIBTBB}); message(""ROOT_LIBTBB in env""); set(ROOT_LIBTBB ); set(TBB_DIR $ENV{ROOT_LIBTBB}); set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); set(TBB_INCLUDE_DIR ${TBB_DIR}/include); set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); set(TBB_LIBRARY ${TBB_DIR}/lib); set(TBB_LIB_DIR ${TBB_DIR}/lib); set(TBB_VERSION ""2019.6""); set(TBB_FOUND TRUE); else(); message(""ROOT_LIBTBB NOT in env""); find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); endif(). if (${TBB_FOUND}); ```. But apparently that wasn't enough, because:. ```; cmake \; -DCMAKE_INSTALL_PREFIX:PATH=$TOPDIR \; .. ...; TBB_LIBRARIES = ; -- Configuring done; CMake Error at external/pufferfish/external/twopaco/CMakeLists.txt:11 (add_dependencies):; The dependency target ""tbb"" of target ""graphdump"" does not exist.; ```. This doesn't work obviously, but here are the mods to CMakeLists.txt that I tried:. ```; diff -au CMakeLists.txt.dist CMakeLists.txt; --- CMakeLists.txt.dist 2019-12-06 10:40:58.430641796 -0800; +++ CMakeLists.txt 2019-12-06 13:14:57.292041895 -0800; @@ -387,7 +387,10 @@; ##; set(Boost_ADDITIONAL_VERSIONS ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62.0"" ""1.63.0"" ""1.64.0"" ""1.65.0"" ""1.66.0"" ""1.67.0"" ""1.68.0"" ""1.69.0"" ""1.70.0"" ""1.71.0""); if (NOT BOOST_RECONFIGURE); -find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); +set(BOOST_INCLUDEDIR ""/usr/include/boost169""); +set(BOOST_LIBRARYDIR ""/usr/lib64/boost169""); +set(Boost_FOUND 1); +; message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/460:2573,Config,Configuring,2573,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460,1,['Config'],['Configuring']
Modifiability,"ext, those samples have very high rRNA contamination (half of the dataset). Below are my codes (sorry for the snakemake syntax) and mapping results for each method:. **Salmon version:** v1.1.0; <details><summary>Salmon run w/ SFA method</summary>; <p>. ```python; rule salmon_meta:; input:; ref= REFERENCE,; tcp= TRANSCRIPTS; output:; gent= ""results/salmon/decoy/gentrome.fa"",; decoy= ""results/salmon/decoy/decoys.txt"",; bak=""results/salmon/decoy/decoys.txt.bak""; conda:; ""../envs/salmon.yaml""; shell:; """"""; grep ""^>"" {input.ref} | cut -d "" "" -f 1 > {output.decoy}; sed -i.bak -e 's/>//g' {output.decoy}; cat {input.tcp} {input.ref} > {output.gent}; """""". rule salmon_index:; input:; gent= ""results/salmon/decoy/gentrome.fa"",; decoy= ""results/salmon/decoy/decoys.txt"",; output:; directory(""results/salmon/index""); conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon index -p {threads} -t {input.gent} -d {input.decoy} -i {output}; """""". if config[""salmon""][""mapping_mode""]:; rule salmon_quant_mapping:; input:; r1=""results/trimmed/{smp}_R1_val_1.fq.gz"",; r2=""results/trimmed/{smp}_R2_val_2.fq.gz"",; index = ""results/salmon/index""; output:; directory(""results/salmon/quant/{smp}_salmon_quant""),; mappings=""results/salmon/quant/{smp}_salmon_quant/{smp}_salmon_mappings""; log:; 		""results/salmon/logs/{smp}.salmon.log""; conda:; ""../envs/salmon.yaml""; threads:20; shell:; """"""; salmon quant -i {input.index} -l A -1 {input.r1} -2 {input.r2} -o {output} --validateMappings --gcBias --seqBias --writeUnmappedNames --writeMappings={output.mappings} -p {threads} --numBootstraps 100; """"""; ```. </p>; </details>. <details><summary>Mapping rates w/ SFA method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73188783-62605d80-40f1-11ea-87ef-e16050f94e60.png). </p>; </details>. <details><summary>cmd_info.json (SFA)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/479:1510,config,config,1510,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479,1,['config'],['config']
Modifiability,"gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HTTPerror . and by building from source and I don't understand how to do it from the website . How can I do it on macOS Monterey M1 Max chip ? . thanks a lot for you help in advance . Since it's the v 1.3.0 is it possible to update the brew formula to 1.9.0 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/787:1595,Config,Configuring,1595,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787,1,['Config'],['Configuring']
Modifiability,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:3116,config,configuring-code-scanning,3116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['config'],['configuring-code-scanning']
Modifiability,"h the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:3182,variab,variables,3182,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['variab'],['variables']
Modifiability,"hecking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: r",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:4194,config,configure,4194,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['config'],['configure']
Modifiability,"ically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:2908,config,configure,2908,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,2,['config'],['configure']
Modifiability,igure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:5543,config,configure,5543,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,2,['config'],['configure']
Modifiability,"improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-act",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:1562,config,configuring-code-scanning,1562,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,2,['config'],"['configure', 'configuring-code-scanning']"
Modifiability,"ing which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Deve",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:4327,config,configure,4327,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['config'],['configure']
Modifiability,"ir='${docdir}'; includedir='${prefix}/include'; infodir='${datarootdir}/info'; install_sh='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/install-sh'; libdir='${exec_prefix}/lib'; libexecdir='${exec_prefix}/libexec'; localedir='${datarootdir}/locale'; localstatedir='${prefix}/var'; mandir='${datarootdir}/man'; mkdir_p='$(MKDIR_P)'; oldincludedir='/usr/include'; pdfdir='${docdir}'; prefix='/Users/jeremybono/Downloads/salmon-1.10.1/external/install'; program_transform_name='s,x,x,'; psdir='${docdir}'; sbindir='${exec_prefix}/sbin'; sharedstatedir='${prefix}/com'; sysconfdir='${prefix}/etc'; target_alias=''; xz=''. ## ----------- ##; ## confdefs.h. ##; ## ----------- ##. /* confdefs.h */; #define PACKAGE_NAME ""XZ Utils""; #define PACKAGE_TARNAME ""xz""; #define PACKAGE_VERSION ""5.2.2""; #define PACKAGE_STRING ""XZ Utils 5.2.2""; #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; #define PACKAGE_URL ""http://tukaani.org/xz/""; #define NDEBUG 1; #define HAVE_ENCODER_LZMA1 1; #define HAVE_ENCODER_LZMA2 1; #define HAVE_ENCODER_DELTA 1; #define HAVE_ENCODER_X86 1; #define HAVE_ENCODER_POWERPC 1; #define HAVE_ENCODER_IA64 1; #define HAVE_ENCODER_ARM 1; #define HAVE_ENCODER_ARMTHUMB 1; #define HAVE_ENCODER_SPARC 1; #define HAVE_DECODER_LZMA1 1; #define HAVE_DECODER_LZMA2 1; #define HAVE_DECODER_DELTA 1; #define HAVE_DECODER_X86 1; #define HAVE_DECODER_POWERPC 1; #define HAVE_DECODER_IA64 1; #define HAVE_DECODER_ARM 1; #define HAVE_DECODER_ARMTHUMB 1; #define HAVE_DECODER_SPARC 1; #define HAVE_MF_HC3 1; #define HAVE_MF_HC4 1; #define HAVE_MF_BT2 1; #define HAVE_MF_BT3 1; #define HAVE_MF_BT4 1; #define HAVE_CHECK_CRC32 1; #define HAVE_CHECK_CRC64 1; #define HAVE_CHECK_SHA256 1; #define ASSUME_RAM 128; #define PACKAGE ""xz""; #define VERSION ""5.2.2"". configure: exit 77; ""5.2.2"". configure: exit 77. Steps and data to reproduce the behavior:; salmon-1.10.1/cmake -DFETCH_BOOST=TRUE; make. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:16748,config,configure,16748,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,2,['config'],['configure']
Modifiability,"isabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: 11353966; reads failed due to too many N: 40048; reads failed due to too short: 8617762; reads with adapter trimmed: 382600; bases trimmed due to adapters: 6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:2507,adapt,adapter,2507,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['adapt'],['adapter']
Modifiability,"itHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-08-18 21:20:51.292295094 +0200; @@ -42,7 +42,7 @@; ${GAT_SOURCE_DIR}/external; ${GAT_SOURCE_DIR}/external/cereal/include; ${GAT_SOURCE_DIR}/external/install/include; -${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.1.3; +${GAT_SOURCE_DIR}/external/install/include/jellyfish-2.2.3; ${GAT_SOURCE_DIR}/external/install/include/bwa; ${ZLIB_INCLUDE_DIR}; ${TBB_INCLUDE_DIRS}; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/11:2176,config,configure,2176,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11,4,['config'],"['config', 'configure']"
Modifiability,"ld be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: res",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:4133,config,configure,4133,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['config'],['configure']
Modifiability,"le; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## --",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:1892,config,configured,1892,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['config'],['configured']
Modifiability,"ling on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 35",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:1141,config,configure,1141,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['config'],['configure']
Modifiability,"ll' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:1695,Config,Configuring,1695,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,1,['Config'],['Configuring']
Modifiability,"ndefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xd13f): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::processQuantOptions(SalmonOpts&, boost::program_options::variables_map&, int)':; SalmonUtils.cpp:(.text+0xeb97): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0xec0a): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xf846): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. I have the following environment variables set:. INCLUDE=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; C_INDLUE_PATH=/opt/boost-1.67.0/include; LD_LIBRARY_PATH=/opt/boost-1.67.0/lib:/opt/gcc-8.2.0/lib64:/opt/gcc-8.2.0/lib/gcc/x86_64-pc-linux-gnu/8.2.0; CPLUS_INCLUDE_PATH=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; CXX=/opt/gcc-8.2.0/bin/g++; CC=/opt/gcc-8.2.0/bin/gcc. My cmake command was simply cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/salmon ../. Thanks!. -Nate",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/309:2338,variab,variables,2338,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309,1,['variab'],['variables']
Modifiability,"nt-697125235) in other mapping issue reports, it's possible that there could be multiple fragments in those numbers that contribute to a single read, meaning the unaccounted number is probably higher:. > The number you are looking at is the number of discarded mappings, not the number of discarded fragments. The difference is that every fragment can have many potential mappings. The number you are looking at is the total number of attempted alignments that failed to achieve the threshold score. Luckily, salmon reports both numbers. The number of fragments for which all alignments failed to reach the score threshold is 4,196,417; given in aux_info.json by ""num_fragments_filtered_vm"": 4196417. One point to note is that these are all fragments for which mapping is attempted (they had at least one k-mer match the reference), but no alignment was valid up to the threshold. You could try running the quantification again with --softclip to allow softclipping of the reads and see if any considerable fraction of these 4196417 failed to align because they overhang the annotated transcripts or contain adapters etc. Nonetheless, even if all of these mapped, the rate would still be ~72%. The remainder of the reads didn't even have a matching k-mer in common with the reference transcriptome, which means they are exceedingly unlikely to have come from the transcripts that were indexed. Further explanation of what these metadata numbers mean would be very helpful to me. Also useful would be a statistic (or more than one statistic) that fully categorises the read alignments or non-alignments. **Desktop (please complete the following information):**; - OS: Debian; - `uname-a`: Linux musculus 6.7.9-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.7.9-2 (2024-03-13) x86_64 GNU/Linux; - `lsb_release -a`; ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux trixie/sid; Release: n/a; Codename: trixie; ```. **Additional context**. I'm not really after an explanatio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/925:8741,adapt,adapters,8741,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925,1,['adapt'],['adapters']
Modifiability,"nt; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2`. * Which version of salmon was used?; Salmon 0.3.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Cloned from git as latest source and attempted to cmake + make && make install . **Expected behavior**; A clear and concise description of what you expected to happen.; Expecting the makefile to use c++14 correctly to process the ""auto p"" variable the way it is intended within the template functions. See SalmonQuantify.cpp:1964 with errors regarding ""p was not declared in this scope"". . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Centos 7 ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:50080,variab,variable,50080,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['variab'],['variable']
Modifiability,"nzen 36540416 Mar 3 11:00 core.39485; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 logs; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fastq file - insert read; index=$3 # directory from salmon index; outDir=$4 # output directory; tsv=$5 # tsv containing txp-gene-id pairs; whitelist=$6 # cell ranger output barcodes. salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist --numCellBootstraps 20 --dumpFeatures. #salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist. ```. Thank you in advance!; Anna. -------------------------; Additional FYI:; ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ salmon version; Version Info: This is the most recent version of s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/636:1742,variab,variables,1742,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636,1,['variab'],['variables']
Modifiability,"oduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected behavior**; I expected a total of 18.5M counts in the quant matrix, where the sums per barcode fit those reported in the _MappedUmi.txt_ Is my assumption that the quant matrix should only contain integers correct?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; Ubuntu 18.04.1 LTS. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/361:1917,adapt,adapted,1917,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361,1,['adapt'],['adapted']
Modifiability,"ot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:1212,config,configuration,1212,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['config'],['configuration']
Modifiability,"p:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481dac12ac8cffd6d5d924699c5ad7e04.). Adjusting the fetchRapMap.sh script to use the SVER and EXPECTED_SHA256SUM variables back to their values in commit COMBINE-lab/salmon@cf07385f2164698eda5b9869dd4865fec747840d, then re-running the script, and recompiling produces no errors, and the tests all run. Hope that helps, and thanks for all your work in developing Salmon!. Best regards,; Patrick Reilly",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/418:2108,variab,variables,2108,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418,1,['variab'],['variables']
Modifiability,"path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:1832,adapt,adapter,1832,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,1,['adapt'],['adapter']
Modifiability,"te called without an active exception; /cm/local/apps/sge/var/spool/compute-051/job_scripts/9987275: line 31: 41232 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}; **** Job ends ****; Wed Mar 8 11:37:36 EST 2017; ```. and the core dump file shows that the program was terminated:. ```bash; $ gdb core.41232; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee1073eac092487ac62314; [New Thread 41232]; [New Thread 41236]; [New Thread 41235]; [New Thread 41234]; Core was generated by `/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/b'.; Program terminated with signal 6, Aborted.; #0 0x0000003612832625 in ?? (); ""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/core.41232"" is a core file.; Please specify an executable to debug.; (gdb) q; ```. The SGE information shows that it basically reached 10.7 GB of RAM:. ```bash; $ qacct -j 9987275 -t 3; ==============================================================; qname shared.q; hostname compute-051.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname st",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:24853,config,configured,24853,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['config'],['configured']
Modifiability,"x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:4416,config,configure,4416,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,24,"['config', 'variab']","['configure', 'variables']"
Modifiability,"zma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:4387,config,configure,4387,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['config'],['configure']
Performance,"	maker	three_prime_utr	207479	207903	.	+	.	ID ""Bany_03723-RA:three_prime_utr""; Parent ""Bany_03723-RA""; gene_id Bany_03723; original_biotype three_prime_UTR; transcript_id ""Bany_03723-RA"" ; ```. The log report I got:; ```; [2020-06-03 23:42:18.303] [jointLog] [info] setting maxHashResizeThreads to 36; [2020-06-03 23:42:18.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-03 23:42:18.303] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-03 23:42:18.303] [jointLog] [info] parsing read library format; [2020-06-03 23:42:18.303] [jointLog] [info] There is 1 library.; [2020-06-03 23:42:18.445] [jointLog] [info] Loading pufferfish index; [2020-06-03 23:42:18.446] [jointLog] [info] Loading dense pufferfish index.; [2020-06-03 23:42:18.906] [jointLog] [info] done; [2020-06-03 23:42:18.907] [jointLog] [info] Index contained 29,658 targets; [2020-06-03 23:42:18.922] [jointLog] [info] Number of decoys : 0; [2020-06-03 23:47:07.075] [jointLog] [info] Computed 96,808 rich equivalence classes for further processing; [2020-06-03 23:47:07.075] [jointLog] [info] Counted 22,215,758 total reads in the equivalence classes ; [2020-06-03 23:47:07.131] [jointLog] [warning] 0.00138398% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 1. [2020-06-03 23:47:07.131] [jointLog] [info] Number of mappings discarded because of alignment score : 50,180,647; [2020-06-03 23:47:07.131] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 5,461,169; [2020-06-03 23:47:07.131] [jointLog] [info] Number of fragments discarded because they are ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/530:4033,Load,Loading,4033,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530,1,['Load'],['Loading']
Performance," ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vect",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/463:1422,Load,Loading,1422,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463,1,['Load'],['Loading']
Performance," ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/560:1500,Load,Loading,1500,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560,1,['Load'],['Loading']
Performance," ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:4465,Load,Loading,4465,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance," -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. salmon index -t ~/data/genome/MSU7_transcript.fasta -i ~/data/genome/MSU7_transcript.index --type quasi -k 31. **I then run transcript abundance estimate pipeline for the raw-reads and the trimmed reads as follows:**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_old/${line} --seqBias --gcBias. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias. **Steps and data to reproduce the behavior: for version 0.12**; module load Cufflinks/2.2.1; gffread MSU7_all.gff3 -g all.chrs.fasta -w MSU7_newtranscript.fasta. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.12.0-IGB-gcc-8.2.0. salmon index -t ~/data/genome/MSU7_newtranscript.fasta -i ~/data/genome/MSU7new_transcript.index --type quasi -k 31. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:2291,load,load,2291,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['load'],['load']
Performance," -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 10:58:22.295] [jointLog] [info] Starting optimizer; [2017-10-25 10:58:22.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 0 | max rel diff. = 0.455425; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 50 | max rel diff. = -1.79769e+308; [2017-10-25 10:58:22.308] [jointLog] [error] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/167:1479,load,loading,1479,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167,1,['load'],['loading']
Performance," 0 CB got sequence corrected; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done indexing Barcodes; > [2020-06-03 13:54:45.790] [alevinLog] [info] Total Unique barcodes found: 604589; > [2020-06-03 13:54:45.790] [alevinLog] [info] Used Barcodes except Whitelist: 0; > [2020-06-03 13:54:46.493] [jointLog] [info] There is 1 library.; > ; > -----------------------------------------; > [2020-06-03 13:54:46.551] [jointLog] [info] Loading pufferfish index; > [2020-06-03 13:54:46.551] [jointLog] [info] Loading dense pufferfish index.; > [2020-06-03 13:54:46.552] [jointLog] [info] done; > [2020-06-03 13:54:46.552] [jointLog] [info] Index contained 64 targets; > [2020-06-03 13:54:46.552] [jointLog] [info] Number of decoys : 0; > ; > [2020-06-03 13:54:46.493] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; > ; > processed 52 Million fragmentsvinLog] [info] parsing read library format; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:55:42.905] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:55:42.931] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.931] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 UniDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [warning] Skipped 50091 barcodes due to No mapped read; > [2020-06-03 13:55:42.934] [alevinLog] [info] Clearing EqMap; Might take some time.; > [2020-06-03 13:55:42.940] [alevinLog] [warning] Num Low confidence barcodes too less 1 < 200.Can't performing whitelisting; Skipping; > [2020-06-03 13:55:42.940] [alevinLog] [info] Finished optimizer; > `. I also tried . `salmon alevin -l ISR --chromium --featureStart 19 --featureLength 21 --tgMap guide_to_gene.tsv`. But I get the follow",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/531:2907,optimiz,optimizer,2907,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531,1,['optimiz'],['optimizer']
Performance," 0.0984302; [2016-01-02 00:08:58.048] [jointLog] [info] iteration = 300 | max rel diff. = 0.0774471; [2016-01-02 00:08:58.265] [jointLog] [info] iteration = 400 | max rel diff. = 0.0866256; [2016-01-02 00:08:58.472] [jointLog] [info] iteration 500, recomputing effective lengths; [2016-01-02 00:09:00.486] [jointLog] [info] iteration = 500 | max rel diff. = 0.0216284; [2016-01-02 00:09:00.696] [jointLog] [info] iteration = 600 | max rel diff. = 0.0269734; [2016-01-02 00:09:00.905] [jointLog] [info] iteration = 700 | max rel diff. = 0.0166003; [2016-01-02 00:09:01.113] [jointLog] [info] iteration = 800 | max rel diff. = 0.0136659; [2016-01-02 00:09:01.334] [jointLog] [info] iteration = 900 | max rel diff. = 0.0114614; [2016-01-02 00:09:01.542] [jointLog] [info] iteration 1000, recomputing effective lengths; [2016-01-02 00:09:03.495] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0102234; [2016-01-02 00:09:03.716] [jointLog] [info] iteration = 1100 | max rel diff. = 0.0202324; [2016-01-02 00:09:03.929] [jointLog] [info] iteration = 1200 | max rel diff. = 0.010957; [2016-01-02 00:09:03.946] [jointLog] [info] iteration = 1209 | max rel diff. = 0.00996627; [2016-01-02 00:09:03.952] [jointLog] [info] Finished optimizer; [2016-01-02 00:09:03.952] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 00:09:04.141] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/ERP009633_cell20_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/ERP009633_cell20_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: /tmp/ERP009633_cell20_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/34:2620,optimiz,optimizer,2620,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34,1,['optimiz'],['optimizer']
Performance," 10 }; ### [ output ] => { quants/13_quant }; ```. **Expected behavior**; Not to be so slow.... I've used salmon previously with some SRR datasets and it was very fast, this seems very strange to me . **Screenshots**; ```; [2020-06-13 02:34:43.686] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-06-13 02:34:43.686] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-13 02:34:43.686] [jointLog] [info] parsing read library format; [2020-06-13 02:34:43.686] [jointLog] [info] There is 1 library.; [2020-06-13 02:34:43.738] [jointLog] [info] Loading pufferfish index; [2020-06-13 02:34:43.738] [jointLog] [info] Loading dense pufferfish index.; [2020-06-13 02:34:45.327] [jointLog] [info] done; [2020-06-13 02:34:45.327] [jointLog] [info] Index contained 117,135 targets; [2020-06-13 02:34:45.346] [jointLog] [info] Number of decoys : 0; [2020-06-13 02:35:35.911] [jointLog] [info] Automatically detected most likely library type as IU; [2020-06-13 06:56:12.646] [fileLog] [info] ; At end of round 0; ==================; Observed 28512328 total fragments (28512328 in most recent round). [2020-06-13 06:56:12.645] [jointLog] [info] Computed 348,024 rich equivalence classes for further processing; [2020-06-13 06:56:12.645] [jointLog] [info] Counted 12,990,838 total reads in the equivalence classes ; [2020-06-13 06:56:12.989] [jointLog] [warning] 0.0736383% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 1. [2020-06-13 06:56:12.989] [jointLog] [info] Number of mappings discarded beca",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/537:2202,Load,Loading,2202,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537,1,['Load'],['Loading']
Performance," 100 }; ### [ validateMappings ] => { }; ### [ output ] => { salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant }; Logs will be written to salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant/logs; [2023-08-27 19:59:26.866] [jointLog] [info] setting maxHashResizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; ------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:10202,Load,Loading,10202,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['Load'],['Loading']
Performance," 202 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Gauss Corrected Boundary at 22 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Learned InvCov: 1044.2 normfactor: 295.235; [2018-07-26 11:25:31.135] [alevinLog] [info] Total 222(has 200 low confidence) barcodes; [2018-07-26 11:25:31.440] [alevinLog] [info] Done True Barcode Sampling; [2018-07-26 11:25:31.789] [alevinLog] [info] Done populating Z matrix; [2018-07-26 11:25:31.793] [alevinLog] [info] Done indexing Barcodes; [2018-07-26 11:25:31.793] [alevinLog] [info] Total Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] Loading Transcript Info ; [2018-07-26 11:26:10.896] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-26 11:26:11.159] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-26 11:26:11.225] [stderrLog] [info] Computing transcript lengths; [2018-07-26 11:26:11.226] [stderrLog] [info] Waiting to finish loading hash; [2018-07-26 11:26:14.654] [stderrLog] [info] Done loading index; [2018-07-26 11:26:14.654] [jointLog] [info] done; [2018-07-26 11:26:14.654] [jointLog] [info] Index contained 203027 targets. Incorrect call for umi extractIncorrect call for umi extract; ```. I traced it back to AlevinUtils.cpp in the source files but could not make sense of it from there. The program will run completely on the same data and library if I change --dropseq to --Chromium, eventually outputting the following after processing the reads:. ```; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/258:2817,Load,Loading,2817,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258,1,['Load'],['Loading']
Performance," 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------------------------------; size = 74351806; -----------------------------------------; | Loading reference sequence | Time = 7.0924 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 325.83 us; -----------------------------------------; [2020-05-29 20:14:24.638] [jointLog] [info] done; [2020-05-29 20:14:24.638] [jointLog] [info] Index contained 57,190 targets; [2020-05-29 20:14:25.202] [jointLog] [info] Number of decoys : 0. processed 38,500,000 fragmentsntLog] [info] Automatically detected most likely library type as IU; hits: 40,221,178, hits per frag: 1.04508. **Desktop (please complete the following information):**; - OS:Ubuntu ; - Version 18.04. **Additional c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:3673,Load,Loading,3673,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,1,['Load'],['Loading']
Performance," 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:4247,Load,Loading,4247,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['Load'],['Loading']
Performance," 400 | max rel diff. = 8.91734; [2021-09-20 16:24:56.130] [jointLog] [info] iteration = 500 | max rel diff. = 1.26201; [2021-09-20 16:24:57.628] [jointLog] [info] iteration = 600 | max rel diff. = 0.155034; [2021-09-20 16:24:59.130] [jointLog] [info] iteration = 700 | max rel diff. = 16.1436; [2021-09-20 16:25:00.660] [jointLog] [info] iteration = 800 | max rel diff. = 2.09965; [2021-09-20 16:25:02.202] [jointLog] [info] iteration = 900 | max rel diff. = 0.122996; [2021-09-20 16:25:03.751] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.156404; [2021-09-20 16:25:05.306] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.103478; [2021-09-20 16:25:06.868] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.03942; [2021-09-20 16:25:08.404] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0699512; [2021-09-20 16:25:09.961] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.109145; [2021-09-20 16:25:11.518] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.135139; [2021-09-20 16:25:13.091] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0545934; [2021-09-20 16:25:14.668] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.0287732; [2021-09-20 16:25:16.226] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.0201942; [2021-09-20 16:25:17.780] [jointLog] [info] iteration = 1,900 | max rel diff. = 1.83806; [2021-09-20 16:25:19.333] [jointLog] [info] iteration = 2,000 | max rel diff. = 0.0251548; [2021-09-20 16:25:19.842] [jointLog] [info] iteration = 2,034 | max rel diff. = 0.00913859; [2021-09-20 16:25:19.858] [jointLog] [info] Finished optimizer; [2021-09-20 16:25:19.858] [jointLog] [info] writing output ; ```. VM running Ubuntu ; Linux ubuntu 5.11.0-34-generic #36~20.04.1-Ubuntu SMP Fri Aug 27 08:06:32 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.3 LTS; Release:	20.04; Codename:	focal. Transcriptome index for mouse mm10 downloaded from RefGenie.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:9344,optimiz,optimizer,9344,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['optimiz'],['optimizer']
Performance," 8M reads in the single fastq file I am testing with. I can see a whole bunch of threads being created despite limiting the number of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 11:55:47.378] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [Ne",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:1240,load,loading,1240,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['load'],['loading']
Performance," ; [2018-12-05 16:31:50.571] [alevinLog] [info] Gauss Corrected Boundary at 2858 ; [2018-12-05 16:31:50.571] [alevinLog] [info] Learned InvCov: 166.8 normfactor: 2759.5; [2018-12-05 16:31:50.571] [alevinLog] [info] Total 3856(has 998 low confidence) barcodes; [2018-12-05 16:31:50.638] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 16:31:50.935] [alevinLog] [info] Done populating Z matrix; [2018-12-05 16:31:51.000] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 16:31:51.000] [alevinLog] [info] Total Unique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 16:31:51.960] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 16:31:52.001] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 16:31:52.022] [stderrLog] [info] Computing transcript lengths; [2018-12-05 16:31:52.022] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 16:31:56.025] [stderrLog] [info] Done loading index; [2018-12-05 16:31:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:12619,Load,Loading,12619,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['Load'],['Loading']
Performance," => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_2_val_2.fq.gz }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { ACV_REP2 }; Logs will be written to ACV_REP2/logs; [2023-02-23 09:39:48.709] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-23 09:39:48.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; --------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:9272,Load,Loading,9272,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['Load'],['Loading']
Performance," Done importing white-list Barcodes; [2019-06-04 15:58:27.583] [alevinLog] [warning] Skipping 50 Barcodes as no read was mapped; [2019-06-04 15:58:27.583] [alevinLog] [info] Total 0 white-listed Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [warning] Total 100% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 15:58:27.594] [alevinLog] [info] Done populating Z matrix; [2019-06-04 15:58:27.594] [alevinLog] [warning] 0 Whitelisted Barcodes with 0 frequency; [2019-06-04 15:58:27.594] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [info] Total Unique barcodes found: 5; [2019-06-04 15:58:27.594] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 15:58:27.617] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 15:58:27.617] [alevinLog] [info] parsing read library format; [2019-06-04 15:58:27.617] [jointLog] [info] There is 1 library.; [2019-06-04 15:58:27.750] [jointLog] [info] Loading Quasi index; [2019-06-04 15:58:27.750] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 15:58:27.750] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 15:58:28.626] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 15:58:28.866] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 15:58:28.900] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 15:58:28.922] [stderrLog] [info] Computing transcript lengths; [2019-06-04 15:58:28.922] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 15:58:38.645] [jointLog] [info] done; [2019-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369:2186,Load,Loading,2186,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369,1,['Load'],['Loading']
Performance," Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] Loading Transcript Info ; [2018-08-29 11:30:08.761] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-29 11:30:11.254] [stderrLog] [info] There were 135226 set bits in the bit array; [2018-08-29 11:30:11.311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-29 11:33:18.039] [jointLog] [info] Mapping rate = 43.5974%. [2018-08-29 11:33:18.039] [jointLog] [info] finished quantifyLibrary(); Analyzed 14 cells (0% of all).vinLog] [info] Starting optimizer; ......; ......; Analyzed 544 cells (16% of all). ERROR: cell doesn't have any read count; -------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:3829,load,loading,3829,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,1,['load'],['loading']
Performance," Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping rate = 53.3587%. [2018-11-29 22:40:56.510] [jointLog] [info] finished quantifyLibrary(); [2018-11-29 22:41:01.682] [alevinLog] [info] Starting optimizer. Analyzed 12346 cells (100% of all).; Skipped Barcodes are from High Confidence Region; Should not happen%. **Desktop (please complete the following information):**; - OS: macOS; - Version: 10.14.1. **Additional context**; This failure comes when analyzing data from the new 10X v3 chemistry. Initial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/324:2659,load,loading,2659,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324,1,['load'],['loading']
Performance," Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi index; [2019-06-23 18:11:53.483] [jointLog] [info] Loading 32-bit quasi index; [2019-06-23 18:11:56.286] [stderrLog] [info] Loading Transcript Info ; [2019-06-23 18:11:57.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-23 18:11:57.409] [stderrLog] [info] There were 184,367 set bits in the bit array; [2019-06-23 18:11:57.434] [stderrLog] [info] Computing transcript lengths; [2019-06-23 18:11:57.434] [stderrLog] [info] Waiting to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: 26644540, hits per frag: 0.249194. [2019-06-23 18:14:43.418] [jointLog] [info] Computed 90,673 rich equivalence classes for further processing; [2019-06-23 18:14:43.418] [jointLog] [info] Counted 5,043,781 total reads in the equivalence classes ; [2019-06-23 18:14:43.419] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-23 18:14:43.419] [jointLog] [warning] Found 494 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-06-23 18:14:43.419] [jointLog] [info] Mapping ra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:5614,load,loading,5614,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['load'],['loading']
Performance," I believe I just need to set the parameters right, but I also want to set the parameters in a general way so that my script can work across different species with different input RNAseq data. The other problem is that we currently do not have an idea of what proportion of these two versions of the gene should actually exist in the RNAseq data I have (which we didn't perform but just grabbed a random sample from GenBank to test with). My adviser wants to first try and test it computationally first and then verify it in the lab (which is somewhat backwards in my mind, as it's really just a shot in the dark and from my preliminary analysis of Salmon, different parameters can drastically change the proportions of the two versions). . As you can see below, I have tried some parameter settings that I thought would be helpful (particularly ```--quasiCoverage```). But again I could be wrong and would like to know your opinions in the matter. . These runs were all performed with this 'default' run: ; ```; salmon quant -i index -l A -1 reads_1.fq -2 reads_2.fq --validateMappings -p 20 --numPreAuxModelSamples 250 --numAuxModelSamples 1000 -o output ; ```; I changes the ```AuxModelSamples``` to low values as I was generally only mapping 6000 reads to the two transcripts in total, so I didn't think they were working at the default settings. Below is also a small chart of some of my runs (which included quasi-mapping and selective-alignment), but what you can get is that there is a large variance between parameters. Particularly ```--seqBias``` showed a dramatic drop in predicted T - 2 transcripts. ![image](https://user-images.githubusercontent.com/29610303/61421680-5899aa00-a8c5-11e9-8349-bd708316599d.png). Any suggestions onto parameters settings to help me with this narrow question?. Now onto some questions regarding some outputs. 1. I run into a segmentation fault (core dumped) when I try to run the experimental ```--posBias```. I am new to RNAseq, but I thought this might he",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/401:2313,perform,performed,2313,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401,1,['perform'],['performed']
Performance, Info: This is the most recent **development version** of Salmon.; ### salmon (mapping-based) v0.7.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { fastq_files/SRR2454059.fq.gz }; ### [ threads ] => { 8 }; ### [ libType ] => { ISF }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [joint,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111:1483,Load,Loading,1483,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111,1,['Load'],['Loading']
Performance," Ubuntu server. here is my command as well as the STDOUT output:. ```; salmon quant -p 16 --biasCorrect --libType IU -i ~./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ --numBootstraps 100 -o $base <(zcat ${base}_1.fastq.gz ) <(zcat ${base}_2.fastq.gz); Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0 ; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/65:1024,Load,Loading,1024,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65,1,['Load'],['Loading']
Performance," Youtube series, those datasets had mapping rates of nearly 90%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] There is 1 library.; [2020-09-05 13:51:07.828] [jointLog] [info] Loading pufferfish index; [2020-09-05 13:51:07.876] [jointLog] [info] Loading dense pufferfish index.; [2020-09-05 13:51:49.487] [jointLog] [info] done; [2020-09-05 13:51:49.551] [jointLog] [info] Index contained 228,754 targets; [2020-09-05 13:51:50.523] [jointLog] [info] Number of decoys : 0; [2020-09-05 13:52:00.312] [jointLog] [info] Automatically detected most likely library type as SR; [2020-09-05 17:53:49.009] [jointLog] [info] Thread saw mini-batch with a maximum of 2.00% zero probability fragments; [2020-09-05 17:53:51.128] [jointLog] [info] Computed 344,342 rich equivalence classes for further processing; [2020-09-05 17:53:51.128] [jointLog] [info] Counted 20,897,706 total reads in the equivalence classes ; [2020-09-05 17:53:51.133] [jointLog] [info] Number of mappings discarded because of alignment score : 116,214,502; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 1,428,490; [2020-09-05 17:53:51.133] [jointLog] [info] Num",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/571:2062,Load,Loading,2062,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571,1,['Load'],['Loading']
Performance," [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per frag: 1.25428[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 1873468, hits per frag: 1.25316[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2492702, hits per frag: 1.24947[A. [32mprocessed[31m 2500000 [32mfragments[0m; hits: 3114558, hits per frag: 1.24832[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 3733674, hits per frag: 1.24664[A. [32mprocessed[31m 3500000 [32mfragments[0m; hits: 4356329, hits per frag: 1.24645[A. [32mprocessed[31m 4000000 [32mfragmen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:4026,load,loading,4026,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['load'],['loading']
Performance," [2019-06-23 18:11:52.489] [alevinLog] [warning] Total 91.1983% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-23 18:11:52.507] [alevinLog] [info] Done populating Z matrix; [2019-06-23 18:11:52.507] [alevinLog] [info] Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi index; [2019-06-23 18:11:53.483] [jointLog] [info] Loading 32-bit quasi index; [2019-06-23 18:11:56.286] [stderrLog] [info] Loading Transcript Info ; [2019-06-23 18:11:57.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-23 18:11:57.409] [stderrLog] [info] There were 184,367 set bits in the bit array; [2019-06-23 18:11:57.434] [stderrLog] [info] Computing transcript lengths; [2019-06-23 18:11:57.434] [stderrLog] [info] Waiting to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: 26644540, hits per frag: 0.249194. [2019-06-23 18:14:43.418] [jointLog] [info] Computed 90,673 rich equivalence classes for further processing; [2019-06-23 18:14:43.418] [jointLog] [info] Counted 5,043,781 total reads in the equivalence classes ; [2019-06-23 18:14:43.419] [jointLog] [info] Number of fragments discarded because they are best-ma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:5354,Load,Loading,5354,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['Load'],['Loading']
Performance," [info] Done indexing Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [info] Total Unique barcodes found: 5; [2019-06-04 15:58:27.594] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 15:58:27.617] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 15:58:27.617] [alevinLog] [info] parsing read library format; [2019-06-04 15:58:27.617] [jointLog] [info] There is 1 library.; [2019-06-04 15:58:27.750] [jointLog] [info] Loading Quasi index; [2019-06-04 15:58:27.750] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 15:58:27.750] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 15:58:28.626] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 15:58:28.866] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 15:58:28.900] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 15:58:28.922] [stderrLog] [info] Computing transcript lengths; [2019-06-04 15:58:28.922] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 15:58:38.645] [jointLog] [info] done; [2019-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million fragments; processed 5 Million fragments; processed 5 Million fragments; hits: 0, hits per frag: 0. [2019-06-04 15:58:42.486] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2019-06-04 15:58:42.487] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2019-06-04 15:58:42.487] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-04 15:58:42.508] [jointLog] [info] Mapping rate = 0%. [2019-06-04 15:58:42.508] [jointLog] [info]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369:2723,load,loading,2723,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369,1,['load'],['loading']
Performance," [info] Knee found left boundary at 127 ; [2018-06-12 21:08:55.712] [alevinLog] [warning] Gauss Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog] [info] Loading Suffix Array ; [2018-06-12 21:08:56.530] [stderrLog] [info] Loading Transcript Info ; [2018-06-12 21:08:56.675] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-12 21:08:56.724] [stderrLog] [info] There were 36191 set bits in the bit array; [2018-06-12 21:08:56.729] [stderrLog] [info] Computing transcript lengths; [2018-06-12 21:08:56.729] [stderrLog] [info] Waiting to finish loading hash; [2018-06-12 21:08:58.508] [jointLog] [info] done; [2018-06-12 21:08:58.508] [jointLog] [info] Index contained 36191 targets; [2018-06-12 21:08:58.508] [stderrLog] [info] Done loading index. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; hits: 169917, hits per frag: 0.0489674[2018-06-12 21:0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/237:3401,Load,Loading,3401,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237,1,['Load'],['Loading']
Performance," [info] Knee found left boundary at 2385 ; [2018-08-29 11:28:19.290] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-08-29 11:28:19.290] [alevinLog] [info] Learned InvCov: 568.346 normfactor: 688.271; [2018-08-29 11:28:19.290] [alevinLog] [info] Total 3385(has 1000 low confidence) barcodes; [2018-08-29 11:28:19.297] [alevinLog] [info] Done True Barcode Sampling; [2018-08-29 11:28:19.433] [alevinLog] [info] Done populating Z matrix; [2018-08-29 11:28:19.437] [alevinLog] [info] Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] Loading Transcript Info ; [2018-08-29 11:30:08.761] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-29 11:30:11.254] [stderrLog] [info] There were 135226 set bits in the bit array; [2018-08-29 11:30:11.311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:3294,Load,Loading,3294,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,1,['Load'],['Loading']
Performance," [info] Learned InvCov: 254.933 normfactor: 13034.5; [2019-06-23 18:11:52.364] [alevinLog] [info] Total 384(has 200 low confidence) barcodes; [2019-06-23 18:11:52.383] [alevinLog] [info] Done True Barcode Sampling; [2019-06-23 18:11:52.489] [alevinLog] [warning] Total 91.1983% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-23 18:11:52.507] [alevinLog] [info] Done populating Z matrix; [2019-06-23 18:11:52.507] [alevinLog] [info] Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi index; [2019-06-23 18:11:53.483] [jointLog] [info] Loading 32-bit quasi index; [2019-06-23 18:11:56.286] [stderrLog] [info] Loading Transcript Info ; [2019-06-23 18:11:57.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-23 18:11:57.409] [stderrLog] [info] There were 184,367 set bits in the bit array; [2019-06-23 18:11:57.434] [stderrLog] [info] Computing transcript lengths; [2019-06-23 18:11:57.434] [stderrLog] [info] Waiting to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: 26644540, hits per frag: 0.249194. [2019-06-23 18:14:43.418] [jointLog] [info] Computed 90,673 rich equivalence classes for further ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:5145,Load,Loading,5145,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['Load'],['Loading']
Performance," [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.9587 ms; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2021-04-09 12:16:41.658] [jointLog] [info] Index contained 45,375 targets; [2021-04-09 12:16:41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] First decoy index : 45,374. [2021-04-09 12:16:42.811] [alevinLog] [info] Starting optimizer. [2021-04-09 12:16:42.800] [jointLog] [info] Computed 84 rich equivalence classes for further processing; [2021-04-09 12:16:42.800] [jointLog] [info] Counted 135 total reads in the equivalence classes; [2021-04-09 12:16:42.801] [jointLog] [info] Numbe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:5190,Load,Loading,5190,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['Load'],['Loading']
Performance," [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference sequence | Time = 62.735 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 650 us; -----------------------------------------; [2021-05-20 10:53:56.156] [jointLog] [info] done; [2021-05-20 10:53:56.156] [jointLog] [info] Index contained 44,026 targets. [2021-05-20 10:53:58.080] [jointLog] [info] Number of decoys : 0; [2021-05-20 10:54:28.729] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-20 11:34:48.022] [jointLog] [info] Computed 145,552 rich equivalence classes for further processing; [2021-05-20 11:34:48.022] [jointLog] [info] Counted 10,027,482 total reads in the equivalence classes ; [2021-05-20 11:34:48.050] [jointLog] [info] Number of mappings discarded becau",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:2925,Load,Loading,2925,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['Load'],['Loading']
Performance, [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference sequence | Time = 62.735 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 650 us; -----------------------------------------; [2021-05-20 10:53:56.156] [jointLog] [info] done; [2021,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:2390,Load,Loading,2390,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['Load'],['Loading']
Performance," [jointLog] [info] processed bias for 100.0% of the transcripts; [2021-05-20 11:35:02.630] [jointLog] [info] iteration = 100 | max rel diff. = 5.42568; [2021-05-20 11:35:03.124] [jointLog] [info] iteration = 200 | max rel diff. = 0.616163; [2021-05-20 11:35:03.614] [jointLog] [info] iteration = 300 | max rel diff. = 0.806405; [2021-05-20 11:35:04.117] [jointLog] [info] iteration = 400 | max rel diff. = 0.143529; [2021-05-20 11:35:04.611] [jointLog] [info] iteration = 500 | max rel diff. = 0.131881; [2021-05-20 11:35:05.124] [jointLog] [info] iteration = 600 | max rel diff. = 1.67827; [2021-05-20 11:35:05.631] [jointLog] [info] iteration = 700 | max rel diff. = 0.0151842; [2021-05-20 11:35:06.145] [jointLog] [info] iteration = 800 | max rel diff. = 0.135721; [2021-05-20 11:35:06.657] [jointLog] [info] iteration = 900 | max rel diff. = 0.0942774; [2021-05-20 11:35:06.882] [jointLog] [info] iteration = 945 | max rel diff. = 0.00880347; [2021-05-20 11:35:06.894] [jointLog] [info] Finished optimizer; [2021-05-20 11:35:06.894] [jointLog] [info] writing output . [2021-05-20 11:35:06.972] [jointLog] [warning] NOTE: Read Lib [[ /upload/uploads/files/public/1/Mice_A_batch2_1.fq.gz, /upload/uploads/files/public/1/Mice_A_batch2_2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: /results/RNA-Seq/Mice_A_batch2/salmon_out/lib_format_counts.json for details. ```. I also run `STAR` alignment and `htseq-count` on the same sample to quantify expression at the gene level, where the alignment rate is high and quantification is ok:. ```; RNA Alignment Statistics for Mice_A_batch2. Started job on |	May 20 06:25:05; Started mapping on |	May 20 06:25:42; Finished on |	May 20 10:46:09; Mapping speed, Million of reads per hour |	37.44. Number of input reads |	162499486; Average input read length |	300; UNIQUE READS:; Uniquely mapped reads number |	141917701; Uniquely mapped reads % |	87.33%; Average mapped length |	298.28; Number of splices: Total |",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:6822,optimiz,optimizer,6822,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['optimiz'],['optimizer']
Performance," [puff::index::jointLog] [info] Clipped poly-A tails from 1,825 transcripts; wrote 344371 cleaned references; seqHash 256 : a4437735d0f94862f3c5321f8541b52b3e063d99afd1c4adaacc6b23ad10cc00; seqHash 512 : 29ef1f67a252009538c30d22ab52f1aae09605f9cd6eb731cb5866275eeb4f50917c409fdac10c5da1a6396687c8d3da64ab33dc7cb426dba961639385ce7040; nameHash 256 : 120179531963e6930022681ba9f4226ad0871ca0f6ae01f6c16be496fee9e03f; nameHash 512 : 3ba5b8d011fe981bf67b581cb6d3d83ae1b8d7885c868b7ab634bbf86448889fcc246b9e65374b79270f6d11d5a71ac6335910fcda2b1b9e86bcafe1ae3ae89f; [2020-07-04 15:10:22.800] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-07-04 15:11:07.094] [puff::index::jointLog] [info] ntHll estimated 2630714644 distinct k-mers, setting filter size to 2^36; error: Can't open a temporary file; error: Can't read the input file; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory /scratch/jl2e19/salmon_index; size = 0; -----------------------------------------; | Loading contigs | Time = 84.402 us; -----------------------------------------; size = 0; -----------------------------------------; | Loading contig boundaries | Time = 30.909 us; -----------------------------------------; Number of ones: 0; Number of ones per inventory item: 512; Inventory entries filled: 1; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] contig count for validation: 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info]; Total # of segments we have position for : 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] total contig vec entries 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] bi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:16269,Load,Loading,16269,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,1,['Load'],['Loading']
Performance," ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; Logs will be written to out/logs; [2021-09-20 16:29:51.663] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:1431,Load,Loading,1431,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance, ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag: 5.08859[A. [32mprocessed[31m 1000002 [32mfragments[0m; hits: 4422312; hits per frag: 4.78092[A. [32mprocessed[31m 1500006 [32mfragments[0m; hits: 6635818; hits per frag: 4.69843[A. [32mprocessed[31m 2000001 [32mfragments[0m; hits: 8846970; ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:24114,Load,Loading,24114,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['Load'],['Loading']
Performance," ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /data2/csijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-bat",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261:1887,Load,Loading,1887,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261,1,['Load'],['Loading']
Performance," ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261:2164,Load,Loading,2164,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261,1,['Load'],['Loading']
Performance," ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux; - Version",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:3150,Load,Loading,3150,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['Load'],['Loading']
Performance," ] => { }; ### [ gcBias ] => { }; ### [ mates1 ] => { /upload/uploads/files/public/1/Mice_A_batch2_1.fq.gz }; ### [ mates2 ] => { /upload/uploads/files/public/1/Mice_A_batch2_2.fq.gz }; ### [ output ] => { /results/RNA-Seq/Mice_A_batch2/salmon_out }; Logs will be written to /results/RNA-Seq/Mice_A_batch2/salmon_out/logs; [2021-05-20 10:53:54.759] [jointLog] [info] setting maxHashResizeThreads to 20; [2021-05-20 10:53:54.760] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-20 10:53:54.760] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-20 10:53:54.760] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:1622,Load,Loading,1622,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['Load'],['Loading']
Performance," ] => { }; ### [ output ] => { ACV_REP2 }; Logs will be written to ACV_REP2/logs; [2023-02-23 09:39:48.709] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-23 09:39:48.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading refe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:9495,Load,Loading,9495,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['Load'],['Loading']
Performance," a *potential* strand bias > 1% in an unstranded protocol check the file: Salmon_out/1-2-intestines-LDC4673/lib_format_counts.json for details; ```. However，when I try old version (0.9.1) or latest version (1.4.0), I got a normal mapping rate (77.1074%):. ```; [2021-04-20 10:08:58.047] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-04-20 10:08:58.048] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-04-20 10:08:58.048] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-04-20 10:08:58.048] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-04-20 10:08:58.048] [jointLog] [info] parsing read library format; [2021-04-20 10:08:58.048] [jointLog] [info] There is 1 library.; [2021-04-20 10:08:58.145] [jointLog] [info] Loading pufferfish index; [2021-04-20 10:08:58.146] [jointLog] [info] Loading dense pufferfish index.; [2021-04-20 10:09:05.198] [jointLog] [info] done; [2021-04-20 10:09:05.198] [jointLog] [info] Index contained 77,653 targets; [2021-04-20 10:09:05.266] [jointLog] [info] Number of decoys : 0; [2021-04-20 10:09:05.902] [jointLog] [info] Automatically detected most likely library type as IU. [2021-04-20 10:11:39.181] [fileLog] [info]; At end of round 0. Observed 25525591 total fragments (25525591 in most recent round). [2021-04-20 10:11:39.181] [jointLog] [info] Computed 111,080 rich equivalence classes for further processing; [2021-04-20 10:11:39.181] [jointLog] [info] Counted 19,682,132 total reads in the equivalence classes; [2021-04-20 10:11:39.190] [jointLog] [warning] 0.00192356% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-20 10:11:39.190] [jointLog] [info] Number of mappings discarded because of alignment scor",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:4972,Load,Loading,4972,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,1,['Load'],['Loading']
Performance, am quite rusty with the nuances of R. Thank you for your consideration and I hope to hear from the team soon!. ```; > sessionInfo(); R version 4.3.3 (2024-02-29); Platform: x86_64-conda-linux-gnu (64-bit); Running under: Ubuntu 22.04.4 LTS. Matrix products: default; BLAS/LAPACK: /home/chris/anaconda3/envs/r_and_python/lib/libopenblasp-r0.3.27.so; LAPACK version 3.12.0. locale:; [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C ; [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8 ; [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8 ; [7] LC_PAPER=en_US.UTF-8 LC_NAME=C ; [9] LC_ADDRESS=C LC_TELEPHONE=C ; [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C . time zone: America/New_York; tzcode source: system (glibc). attached base packages:; [1] stats graphics grDevices utils datasets methods base . other attached packages:; [1] Seurat_5.1.0 SeuratObject_5.0.2 sp_2.1-4 patchwork_1.2.0 ; [5] ggplot2_3.5.1 devtools_2.4.5 usethis_2.2.3 tximport_1.30.0 ; [9] fishpond_2.8.0 . loaded via a namespace (and not attached):; [1] RColorBrewer_1.1-3 jsonlite_1.8.8 ; [3] magrittr_2.0.3 spatstat.utils_3.0-5 ; [5] fs_1.6.4 zlibbioc_1.48.0 ; [7] vctrs_0.6.5 ROCR_1.0-11 ; [9] spatstat.explore_3.2-6 memoise_2.0.1 ; [11] RCurl_1.98-1.14 htmltools_0.5.8.1 ; [13] S4Arrays_1.2.0 SparseArray_1.2.2 ; [15] sctransform_0.4.1 parallelly_1.37.1 ; [17] KernSmooth_2.23-24 htmlwidgets_1.6.4 ; [19] ica_1.0-3 plyr_1.8.9 ; [21] plotly_4.10.4 zoo_1.8-12 ; [23] cachem_1.1.0 igraph_2.0.3 ; [25] mime_0.12 lifecycle_1.0.4 ; [27] pkgconfig_2.0.3 Matrix_1.6-5 ; [29] R6_2.5.1 fastmap_1.2.0 ; [31] GenomeInfoDbData_1.2.11 MatrixGenerics_1.14.0 ; [33] fitdistrplus_1.1-11 future_1.33.2 ; [35] shiny_1.8.1.1 digest_0.6.36 ; [37] colorspace_2.1-0 S4Vectors_0.40.2 ; [39] tensor_1.5 RSpectra_0.16-1 ; [41] irlba_2.3.5.1 pkgload_1.3.4 ; [43] GenomicRanges_1.54.1 progressr_0.14.0 ; [45] spatstat.sparse_3.1-0 fansi_1.0.6 ; [47] polyclip_1.10-6 httr_1.4.7 ; [49] abind_1.4-5 compiler_4.3.3 ; [51] remotes_2.5.0 withr_3.0.0 ; [53] fastDummie,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/942:2943,load,loaded,2943,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/942,1,['load'],['loaded']
Performance," am using Salmon and tried following up all steps but got 0 fragments mapped.. . 1) copied unzip Salmon-0.8.2_linux_x86_64 into folder in server; 2) exported path: export PATH=$PATH:/.../.../Salmon-0.8.2_linux_x86_64/bin/; 3) built index: salmon index -t salmon.index.human.052617.tar -i human_index; 4) now I want to preform quantification on fastq files (only one end of paired end, trimmed for 40 bp): ; salmon quant -i human_index -l U -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/167:1023,Load,Loading,1023,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167,1,['Load'],['Loading']
Performance," are best-mapped to decoys : 0; [2021-04-16 16:57:15.488] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 32,784; [2021-04-16 16:57:15.493] [jointLog] [warning] Only 10700 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2021-04-16 16:57:15.493] [jointLog] [info] Mapping rate = 0.0417748%. [2021-04-16 16:57:15.493] [jointLog] [info] finished quantifyLibrary(); [2021-04-16 16:57:15.535] [jointLog] [info] Starting optimizer; [2021-04-16 16:57:15.564] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-04-16 16:57:15.568] [jointLog] [info] iteration = 0 | max rel diff. = 6.66952; [2021-04-16 16:57:16.080] [jointLog] [info] iteration = 100 | max rel diff. = 0.0161125; [2021-04-16 16:57:16.555] [jointLog] [info] iteration = 194 | max rel diff. = 0.000157223; [2021-04-16 16:57:16.558] [jointLog] [info] Finished optimizer; [2021-04-16 16:57:16.558] [jointLog] [info] writing output. [2021-04-16 16:57:16.681] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-16 16:57:16.775] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-16 16:57:16.775] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-16 16:57:16.911] [jointLog] [info] Aggregating expressions to gene level; [2021-04-16 16:57:17.077] [jointLog] [info] done; [2021-04-16 16:57:17.088] [jointLog] [warning] NOTE: Read Lib [[ Trim/1-2-intestines-LDC4673.filtered.R1.fq.gz, Trim/1-2-intestines-LDC4673.filtered.R2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: Salmon_out/1-2-intestines-LDC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:3079,optimiz,optimizer,3079,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,1,['optimiz'],['optimizer']
Performance," bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counted 163,106,139 total reads in the equivalence classes ; [2018-12-05 15:45:46.199] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 15:45:46.199] [jointLog] [info] Mapping rate = 60.9633%. [2018-12-05 15:45:46.199] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 15:45:47.617] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-05 15:47:14.597] [alevinLog] [info] Total 1870793 UMI after deduplicating.; [2018-12-05 15:47:14.693] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-05 15:47:18.921] [alevinLog] [info] Starting Import of the gene count matrix.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. PBMC 3k shell log:; ```; ~/software/salmon/scripts/v1_10x/run.sh salmon alevin -lISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv. TEMPDIR is /tmp/tmp.WnzMm7GQBO; Running command [salmon alevin -lISR --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv -1 /tmp/tmp.WnzMm7GQBO/p1.fa -2 /tmp/tmp.WnzMm7GQBO/p2.fa -r pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-001-chunk-001.fastq.gz; pbmc3k_fastqs/read-I1_si-ACGCGGAA_lane-002-chunk-000.fastq.gz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:8441,optimiz,optimizer,8441,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['optimiz'],['optimizer']
Performance," bp reads). I've tried running these samples through the `nf-core/rnaseq` pipeline, but the pipeline took an age to run before dying at the `salmon quant` steps. Some samples finished in about 12 minutes. Others timed out after 8+ hours. - Successful log:. ```; [2023-02-22 16:33:49.782] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-22 16:33:49.782] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-22 16:33:49.782] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-22 16:33:49.782] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-22 16:33:49.782] [jointLog] [info] parsing read library format; [2023-02-22 16:33:49.783] [jointLog] [info] There is 1 library.; [2023-02-22 16:33:49.784] [jointLog] [info] Loading pufferfish index; [2023-02-22 16:33:49.784] [jointLog] [info] Loading dense pufferfish index.; [2023-02-22 16:34:17.987] [jointLog] [info] done; [2023-02-22 16:34:18.037] [jointLog] [info] Index contained 245549 targets; [2023-02-22 16:34:19.908] [jointLog] [info] Number of decoys : 194; [2023-02-22 16:34:19.908] [jointLog] [info] First decoy index : 245314 ; [2023-02-22 16:39:30.638] [jointLog] [info] Thread saw mini-batch with a maximum of 1.10% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.02% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2023-02-22 16:39:30.654] [jointLog] [info] Thread saw mini-batch with a maximum of 1.12% zero probability fragments; [2023-02-22 16:39:30.679] [jointLog] [info] Thread saw mini-batch with a maximum of 1.02% zero probability fragments; [2023-02-22 16:39:30.680] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragmen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:1212,Load,Loading,1212,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['Load'],['Loading']
Performance," end, trimmed for 40 bp): ; salmon quant -i human_index -l U -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 10:58:22.295] [jointLog] [info] Starting optimizer; [2017-10-25 10:58:22.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 0 | max rel diff. = 0.455425; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 50 | max rel diff. = ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/167:1415,load,loading,1415,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167,1,['load'],['loading']
Performance," indexing Barcodes; [2018-09-11 16:33:59.972] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-11 16:34:30.116] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-11 16:34:30.116] [jointLog] [info] Mapping rate = 0%. [2018-09-11 16:34:30.116] [jointLog] [info] finished quantifyLibrary(); [2018-09-11 16:34:30.156] [alevinLog] [info] Starting optimizer; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:11511,load,loading,11511,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['load'],['loading']
Performance," iteration = 800 | max rel diff. = 0.690785; [2021-06-07 21:05:10.018] [jointLog] [info] iteration = 900 | max rel diff. = 0.0773815; [2021-06-07 21:05:11.677] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.0345327; [2021-06-07 21:05:13.336] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.172304; [2021-06-07 21:05:14.993] [jointLog] [info] iteration = 1,200 | max rel diff. = 1.17312; [2021-06-07 21:05:16.651] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.111995; [2021-06-07 21:05:18.313] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.0191206; [2021-06-07 21:05:19.978] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.125342; [2021-06-07 21:05:21.640] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.024507; [2021-06-07 21:05:23.304] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.109772; [2021-06-07 21:05:23.469] [jointLog] [info] iteration = 1,711 | max rel diff. = 0.00699727; [2021-06-07 21:05:23.499] [jointLog] [info] finished optimizer; [2021-06-07 21:05:23.499] [jointLog] [info] writing output; [2021-06-07 21:05:23.829] [jointLog] [info] Staring Bootstrapping; [2021-06-07 21:05:23.962] [jointLog] [info] Will draw 30 bootstrap samples; [2021-06-07 21:05:23.962] [jointLog] [info] Optimizing over 430,852 equivalence classes; ```. `-l ISF`:; ```; Completed first pass through the alignment file.; Total # of mapped reads : 30,418,756; # of uniquely mapped reads : 8,515,058; # ambiguously mapped reads : 21,903,698; [2021-06-08 03:44:49.444] [jointLog] [info] Computed 430,882 rich equivalence classes for further processing; [2021-06-08 03:44:49.444] [jointLog] [info] Counted 29,619,881 total reads in the equivalence classes; [2021-06-08 03:44:49.445] [jointLog] [info] starting optimizer; [2021-06-08 03:44:49.599] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-06-08 03:44:49.615] [jointLog] [info] iteration = 0 | max rel diff. = 5827.73; [2021-06-08 03:44:51.123] [jointLog] [info] iter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/669:4330,optimiz,optimizer,4330,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669,1,['optimiz'],['optimizer']
Performance," mapped.. . 1) copied unzip Salmon-0.8.2_linux_x86_64 into folder in server; 2) exported path: export PATH=$PATH:/.../.../Salmon-0.8.2_linux_x86_64/bin/; 3) built index: salmon index -t salmon.index.human.052617.tar -i human_index; 4) now I want to preform quantification on fastq files (only one end of paired end, trimmed for 40 bp): ; salmon quant -i human_index -l U -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/167:1090,Load,Loading,1090,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167,1,['Load'],['Loading']
Performance," mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261:2025,Load,Loading,2025,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261,1,['Load'],['Loading']
Performance," message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## Try and find TBB first; -find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +if(DEFINED ENV{ROOT_LIBTBB}); + message(""ROOT_LIBTBB in env""); + set(ROOT_LIBTBB ); + set(TBB_DIR $ENV{ROOT_LIBTBB}); + set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); + set(TBB_INCLUDE_DIR ${TBB_DIR}/include); + set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); + set(TBB_LIBRARY ${TBB_DIR}/lib); + set(TBB_LIB_DIR ${TBB_DIR}/lib); + set(TBB_VERSION ""2019.6""); + set(TBB_FOUND TRUE); +else(); + message(""ROOT_LIBTBB NOT in env""); + find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); +endif(); +; ; if (${TBB_FOUND}); if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0); @@ -696,7 +714,19 @@; #message(""TBB_LIBRARY_DIRS ${TBB_LIBRARY_DIRS}""); #message(""TBB_LIBRARIES ${TBB_LIBRARIES} ""); ; -find_package(libgff); +if(DEFINED ENV{ROOT_LIBGFF}); + message(""ROOT_LIBGFF in env""); + set(LIBGFF_DIR $ENV{ROOT_LIBGFF}); + set(LIBGFF_INCLUDE_DIRS ${LIBGFF_DIR}/include); + set(LIBGFF_INCLUDE_DIR ${LIBGFF_DIR}/include); + set(LIBGFF_LIBRARY_DIRS ${LIBGFF_DIR}/lib); + set(LIBGFF_LIBRARY ${LIBGFF_DIR}/lib); + set(LIBGFF_LIB_DIR ${LIBGFF_DIR}/lib); + set(LIBGFF_FOUND TRUE); +else(); + message(""ROOT_LIBGFF NOT in env""); + find_package(libgff); +endif(); if(NOT LIBGFF_FOUND); message(""Build system will compile libgff""); message(""==================================================================""); @@ -739,7 +769,14 @@; endif(); ; find_package(CURL); -find_package(libstadenio); +if(DEFINED ENV{ROOT_IO_LIB}); + set(ROOT_IO_LIB $ENV{ROOT_IO_LIB}); + set(STADEN_INC ""-I${ROOT_IO_LIB}/include""); + set(STADEN_LIB ""-L${ROOT_IO_LIB}/lib""); + set(LIBSTADENIO_FOUND TRUE); +else(); + find_package(libstadenio); +endif(); if (NOT LIBSTADENIO_FOUND); message(""Build system will compile Staden IOLib""); message(""==================================================================""). ```. In the meantime the binary distribution was loaded. . Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/460:5507,load,loaded,5507,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460,1,['load'],['loaded']
Performance," primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No; **Describe the bug**; Running salmon 0.11.3, quasi mode, with 192M of ram.; Salmon quasi mode aborted with following message:; processed 14,000,000 fragmentsntLog] [info] Automatically detected most likely library type as SR; hits: 108,161,934; hits per frag: 8.53594terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; This happens when using a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Whi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/304:999,Load,Loading,999,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304,1,['Load'],['Loading']
Performance," quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23 20:11:20.618] [jointLog] [info] Index contained 199,612 targets. Segmentation fault: 11; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OSX; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ProductName:	Mac OS ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:2067,Load,Loading,2067,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,1,['Load'],['Loading']
Performance," salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:4395,Load,Loading,4395,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance," same tutorial above (2) gencode.v40.transcripts.fa.gz from Gencode only (3) Homo_sapiens.GRCh38.cdna.all.fa.gz from Ensembl ; But I still received the same warning and 0 fragments mapped results. Below is one of the log file (they all look similar):. > [2022-04-15 23:47:55.696] [jointLog] [info] setting maxHashResizeThreads to 48 ; [2022-04-15 23:47:55.696] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored. ; [2022-04-15 23:47:55.696] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65 ; [2022-04-15 23:47:55.696] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35. ; [2022-04-15 23:47:55.696] [jointLog] [info] parsing read library format ; [2022-04-15 23:47:55.696] [jointLog] [info] There is 1 library. ; [2022-04-15 23:47:55.833] [jointLog] [info] Loading pufferfish index ; [2022-04-15 23:47:55.833] [jointLog] [info] Loading dense pufferfish index. ; [2022-04-15 23:49:52.320] [jointLog] [info] done ; [2022-04-15 23:49:52.320] [jointLog] [info] Index contained 245,900 targets ; [2022-04-15 23:49:52.424] [jointLog] [info] Number of decoys : 639 ; [2022-04-15 23:49:52.424] [jointLog] [info] First decoy index : 245,261 ; [2022-04-15 23:50:13.651] [jointLog] [warning] salmon was only able to assign 0 fragments to transcripts in the index, but the minimum number of required assigned fragments (--minAssignedFrags) was 3. This could be indicative of a mismatch between the reference and sample, or a very bad sample. You can change the --minAssignedFrags parameter to force salmon to quantify with fewer assigned fragments (must have at least 1). I wonder maybe there's something wrong with my fastq files but I have no idea since they look fine(?):. > @SRR493372.1 HWI-M00266:2:000000000-A0HDE:1:1:14862:1427 length=26 CAGATCCCTCCCCTGGTCACTACAGA ; +SRR493372.1 HWI-M00266:2:000000000-A0HDE:1:1:14862:1427 length=26 @CC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/768:2864,Load,Loading,2864,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/768,1,['Load'],['Loading']
Performance," skipping it; [2018-11-29 22:28:16.264] [alevinLog] [info] Learned InvCov: 180.957 normfactor: 13235.2; [2018-11-29 22:28:16.264] [alevinLog] [info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping rate = 53.3587%. [2018-11-29 22:40:56.510] [jointLog] [info] finished ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/324:2263,Load,Loading,2263,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324,1,['Load'],['Loading']
Performance," the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Found 21006 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-29 16:05:46.678] [jointLog] [info] Mapping rate = 20.1566%. [2019-01-29 16:05:46.678] [jointLog] [info] finished quantifyLibrary(); [2019-01-29 16:05:51.316] [alevinLog] [info] Starting optimizer. **Analyzed 4000 cells (100% of all).**; [2019-01-29 16:06:27.447] [alevinLog] [info] Total 20167967.00 UMI after deduplicating.; [2019-01-29 16:06:27.475] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-29 16:06:39.341] [alevinLog] [info] Starting Import of the gene count matrix of size 4000x29574.; [2019-01-29 16:06:40.089] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-29 16:06:45.902] [alevinLog] [info] Done Importing gene count matrix for dimension 4000x29574; 0.00248159 1.3538e-06 0.000205983 221334; 0.00714905 1.09739e-06 0.000617623 71036.5; [2019-01-29 16:06:46.603] [alevinLog] [info] Starting white listing; [2019-01-29 16:06:46.615] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2019-01-29 16:06:46.615] [alevinLog] [info] Total 4000 barcodes found; [2019-01-29 16:06:46.615] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:2694,optimiz,optimizer,2694,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['optimiz'],['optimizer']
Performance," threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report.**. [2016-07-11 09:52:39.858] [jointLog] [info] Mapping rate = 0%. [2016-07-11 09:52:39.858] [jointLog] [info] finished quantifyLibrary(); [2016-07-11 09:52:39.858] [jointLog] [info] Starting optimizer; [2016-07-11 09:52:39.894] [jointLog] [info] Marked 0 weigh",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/65:1421,load,loading,1421,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65,1,['load'],['loading']
Performance," too many loci | 138709; % of reads mapped to too many loci | 0.18%; UNMAPPED READS:; % of reads unmapped: too many mismatches | 0.00%; % of reads unmapped: too short | 9.42%; % of reads unmapped: other | 0.63%; CHIMERIC READS:; Number of chimeric reads | 482178; % of chimeric reads | 0.63%; ```. salmon is 1.3.0 in both cases, the command is the same but the libtype:; ```bash; salmon \; quant \; -l ISF \; -p 16 \; -t /path/to/transcriptome/hg38.fa \; -o /path/to/sample; -a /path/to/sample.transcriptome.bam; --numBootstraps 30; ```. salmon logs:; `-l A`; ```; Completed first pass through the alignment file.; Total # of mapped reads : 30,418,756; # of uniquely mapped reads : 8,515,057; # ambiguously mapped reads : 21,903,699; [2021-06-07 21:04:54.872] [jointLog] [info] Computed 430,852 rich equivalence classes for further processing; [2021-06-07 21:04:54.872] [jointLog] [info] Counted 29,620,334 total reads in the equivalence classes; [2021-06-07 21:04:54.873] [jointLog] [info] starting optimizer; [2021-06-07 21:04:55.023] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-06-07 21:04:55.040] [jointLog] [info] iteration = 0 | max rel diff. = 5827.81; [2021-06-07 21:04:54.620] [fileLog] [info] quantification processed 30,418,756 fragments so far; [2021-06-07 21:04:56.705] [jointLog] [info] iteration = 100 | max rel diff. = 20.953; [2021-06-07 21:04:58.369] [jointLog] [info] iteration = 200 | max rel diff. = 8.08439; [2021-06-07 21:05:00.033] [jointLog] [info] iteration = 300 | max rel diff. = 20.0975; [2021-06-07 21:05:01.696] [jointLog] [info] iteration = 400 | max rel diff. = 0.633444; [2021-06-07 21:05:03.358] [jointLog] [info] iteration = 500 | max rel diff. = 7.58935; [2021-06-07 21:05:05.019] [jointLog] [info] iteration = 600 | max rel diff. = 1.90445; [2021-06-07 21:05:06.684] [jointLog] [info] iteration = 700 | max rel diff. = 0.158913; [2021-06-07 21:05:08.346] [jointLog] [info] iteration = 800 | max rel diff. = 0.690785; [2021-06-07 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/669:2387,optimiz,optimizer,2387,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669,1,['optimiz'],['optimizer']
Performance," use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivalence classes . [2023-03-17 07:46:19.488] [jointLog] [warning] 0.22783% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-17 07:46:19.488] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 0; [2023-03-17 07:46:19.488] [jointLog] [info] Mapping rate = 80.5964%",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:8038,load,loading,8038,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['load'],['loading']
Performance," used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fastq file - insert read; index=$3 # directory from salmon index; outDir=$4 # output directory; tsv=$5 # tsv containing txp-gene-id pairs; whitelist=$6 # cell ranger output barcodes. salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist --numCellBootstraps 20 --dumpFeatures. #salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist. ```. Thank you in advance!; Anna. -------------------------; Additional FYI:; ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ salmon version; Version Info: This is the most recent version of salmon.; salmon v1.4.0. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index : create a salmon index; quant : quantify a sample; alevin : single cell analysis; swim : perform super-secret operation; quantmerge : merge multiple quantifications into a single file; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/636:2981,perform,perform,2981,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636,1,['perform'],['perform']
Performance," validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:2729,Load,Loading,2729,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,1,['Load'],['Loading']
Performance," { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:6341,Load,Loading,6341,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance," { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:3216,Load,Loading,3216,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance," }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/560:1570,Load,Loading,1570,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560,1,['Load'],['Loading']
Performance," }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:7502,Load,Loading,7502,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['Load'],['Loading']
Performance,""": 5411464,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. ```. Another log file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54:46.141] [jointLog] [info] Computed 1249282 rich equivalence classes for further processing; [2023-03-07 06:54:46.141] [jointLog] [info] Counted 8925446 total reads in the equivalence classes ; [2023-03-07 06:54:46.282] [jointLog] [warning] 0.0015986% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-07 06:54:46.282] [jointLog] [info] Number of fragments discarded because they ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:2401,Load,Loading,2401,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['Load'],['Loading']
Performance,"""Index requested greater than vector's size"" when loading pufferfish index using salmon v1.0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/463:50,load,loading,50,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463,1,['load'],['loading']
Performance,"# [ gcBias ] => { }; \#\#\# [ seqBias ] => { }; \#\#\# [ useVBOpt ] => { }; \#\#\# [ validateMappings ] => { }; \#\#\# [ output ] => { processed_salmon0100_k31_allcombined/R }; Logs will be written to processed_salmon0100_k31_allcombined/R/logs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.84% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw min",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229:1445,Load,Loading,1445,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229,1,['Load'],['Loading']
Performance,# salmon (mapping-based) v0.7.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { fastq_files/SRR2454059.fq.gz }; ### [ threads ] => { 8 }; ### [ libType ] => { ISF }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [jointLog] [info] Computed 137534 rich equivalence classes for further pro,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111:1548,Load,Loading,1548,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111,1,['Load'],['Loading']
Performance,"## Describe the bug; When I run the following command:; ```; salmon quant --threads 1 --libType=U -i index -r SRR493367.fastq.gz -o SRR493367; ```. I get the following error(s) even though the same version of kallisto was used for the indexing & quantifiation:; ```; Encountered exception [JSON Parsing failed - provided NVP (SeqHash512) not found] when loading index.; The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version.; ```. ## To Reproduce; - Install docker ; - Download transcriptome:; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.transcripts.fa.gz; ```; - Run docker container (warning 2GB):; ```; docker run -v $PWD -w $PWD:$PWD -it lifebitai/rnaseq-nf-dseq2 bash; ```; - Download reads (warning reads are 2.3GB:; ```; fastq-dump SRR493367; ```; - Index transcriptome:; ```; salmon index --threads 1 -t gencode.v27.transcripts.fa.gz -i index; ```; - Run quantification cmd above. <br />; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.12.0; * How was salmon installed? Download precompliied binary and made Dockerfile with the following:; ```Dockerfile; COPY ./salmon-0.12.0_linux_x86_64/bin /usr/local/bin; COPY ./salmon-0.12.0_linux_x86_64/lib /usr/local/lib. RUN chmod -R u+x /usr/local/bin. ENV PATH=""$PATH:/usr/local/bin""; ```; * Which reference (e.g. transcriptome) was used? gencode.v27.transcripts.fa.gz; * Which read files were used? SRR493367.fastq.gz; * Which which program options were used? See above. I encountered this error when running this [Nextflow pipeline](https://github.com/PhilPalmer/RNASeq-nf-dseq2). More details can be found [here](https://deploit.lifebit.ai/public/jobs/5c6eca93758e8300a8740a59) . Any ideas what the problem may be? I am not sure if it is a problem with my installation of Salmon, the [data](https://www.ncbi.nlm.nih.gov/sra/?term=SRR493367), the command or something",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/345:354,load,loading,354,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345,1,['load'],['loading']
Performance,"## [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; --------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:2996,Load,Loading,2996,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['Load'],['Loading']
Performance,"## [ hitFilterPolicy ] => { BOTH }; ### [ biasSpeedSamp ] => { 10 }; ### [ output ] => { quants/13_quant }; ```. **Expected behavior**; Not to be so slow.... I've used salmon previously with some SRR datasets and it was very fast, this seems very strange to me . **Screenshots**; ```; [2020-06-13 02:34:43.686] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-06-13 02:34:43.686] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-13 02:34:43.686] [jointLog] [info] parsing read library format; [2020-06-13 02:34:43.686] [jointLog] [info] There is 1 library.; [2020-06-13 02:34:43.738] [jointLog] [info] Loading pufferfish index; [2020-06-13 02:34:43.738] [jointLog] [info] Loading dense pufferfish index.; [2020-06-13 02:34:45.327] [jointLog] [info] done; [2020-06-13 02:34:45.327] [jointLog] [info] Index contained 117,135 targets; [2020-06-13 02:34:45.346] [jointLog] [info] Number of decoys : 0; [2020-06-13 02:35:35.911] [jointLog] [info] Automatically detected most likely library type as IU; [2020-06-13 06:56:12.646] [fileLog] [info] ; At end of round 0; ==================; Observed 28512328 total fragments (28512328 in most recent round). [2020-06-13 06:56:12.645] [jointLog] [info] Computed 348,024 rich equivalence classes for further processing; [2020-06-13 06:56:12.645] [jointLog] [info] Counted 12,990,838 total reads in the equivalence classes ; [2020-06-13 06:56:12.989] [jointLog] [warning] 0.0736383% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 1. [2020-06-13 06:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/537:2132,Load,Loading,2132,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537,1,['Load'],['Loading']
Performance,## [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag: 5.08859[A. [32mprocessed[31m 1000002 [32mfragments[0m; hits: 4422312; hits per frag: 4.78092[A. [32mprocessed[31m 1500006 [32mfragments[0m; hits: 6635818; hits per frag: 4.69843[A. [32mprocessed[31m 2000001 [32mfragments[0m; hits: 8846970; hits per frag: 4.55737[A. [32mprocessed[31m 2500021 [32mfragments[0m; hits: 11062734; hits per frag: 4.49592[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 13274990; hits per frag: 4.48667[A. [32mprocessed[31m 3500002 [32mfragments[0m; hits: 15430043; hits per frag: 4.48414[A. [32mprocessed[31m 4000004 [32mfragments[0m; hits: 17638270; hits per frag: 4.48376[A. [32mprocessed[31m 4500000 [32mfragments[0m; hits: 19856371; hits per frag: 4.45983[A. [32mprocessed[31m 5000000 [32mfragments[0m; hits: 22066072; hits per frag: 4.44139[A. [32mprocessed[31m 5500001 [32mfragments[0m; hits: 24279605; hits,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:24772,load,loading,24772,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['load'],['loading']
Performance,"## [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:2848,Load,Loading,2848,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['Load'],['Loading']
Performance,"## [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:4543,Load,Loading,4543,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"## [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:4102,Load,Loading,4102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['Load'],['Loading']
Performance,"#### Introduction. Inspired by the article of Schaeffer et al. (2016), I attempted to use salmon to quantify the proportion of bacterial reads in a paired-end DNA sequencing experiment. I use ""mash screen"" to select a set of reference genomes for the creation of an index for Salmon. #### Question. In order to maximize the performance, I would like to minimize the number of reference genomes for the index, but I would also like to maximize the total number of mapped reads. For other mappers (e.g. bowtie2, bwa-mem), increasing the number of reference genomes will also increase the number of total mapped reads. This does not seem to be the case for Salmon (and also Kallisto). Is there a specific reason why Salmon (and perhaps kallisto) does not guarantee the increase of total mapped reads when one add more reference genomes?. #### Mapping stats. I mapped a paired-end fastq to an index with increasingly more reference genomes. I must add that the added reference genomes have much similarity to those already added. | number ref | % mapped Salmon | % mapped Kallisto | % mapped bowtie2 | % mapped bwa-mem |; |---|:---:|:---:|:---:|:---:|; |1 | 82.5% | 82.5% | 82.4% | 69.2% |; |2 | 88.0% | 87.0% | 89.9% | 80.8% |; |3 | 87.5% | 87.0% | 89.9% | 80.9% |; |4 | 85.6% | 81.9% | 91.2% | 83.3% |; |5 | 85.6% | 81.9% | 91.2% | 83.3% |; |6 | 79.8% | 78.8% | 92.3% | 85.7% |; |7 | 79.6% | 79.2% | 92.5% | 86.1% |; |8 | 80.7% | 80.4% | 92.7% | 86.5% |; |9 | 82.2% | 82.1% | 93.6% | 88.3% |; |10 | 83.4% | 83.2% | 93.9% | 88.9% |; |11 | 84.7% | 84.4% | 95.3% | 91.5% |; |12 | 84.7% | 84.4% | 95.3% | 91.6% |; |13 | 84.3% | 84.1% | 96.3% | 93.3% |; |14 | 85.2% | 85.1% | 96.3% | 93.4% |; |15 | 86.1% | 86.0% | 96.6% | 93.9% |",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/196:324,perform,performance,324,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/196,1,['perform'],['performance']
Performance,"%. Comparing FastQC reports, my data was of similar/better quality than the data from the Youtube series. In case this is helpful in answering my question, this is the information from the logs for one of my samples:. ```; [2020-09-05 13:51:07.144] [jointLog] [info] setting maxHashResizeThreads to 1; [2020-09-05 13:51:07.144] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-09-05 13:51:07.159] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-09-05 13:51:07.159] [jointLog] [info] parsing read library format; [2020-09-05 13:51:07.159] [jointLog] [info] There is 1 library.; [2020-09-05 13:51:07.828] [jointLog] [info] Loading pufferfish index; [2020-09-05 13:51:07.876] [jointLog] [info] Loading dense pufferfish index.; [2020-09-05 13:51:49.487] [jointLog] [info] done; [2020-09-05 13:51:49.551] [jointLog] [info] Index contained 228,754 targets; [2020-09-05 13:51:50.523] [jointLog] [info] Number of decoys : 0; [2020-09-05 13:52:00.312] [jointLog] [info] Automatically detected most likely library type as SR; [2020-09-05 17:53:49.009] [jointLog] [info] Thread saw mini-batch with a maximum of 2.00% zero probability fragments; [2020-09-05 17:53:51.128] [jointLog] [info] Computed 344,342 rich equivalence classes for further processing; [2020-09-05 17:53:51.128] [jointLog] [info] Counted 20,897,706 total reads in the equivalence classes ; [2020-09-05 17:53:51.133] [jointLog] [info] Number of mappings discarded because of alignment score : 116,214,502; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 1,428,490; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments discarded because they are best-mapped to dec",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/571:2132,Load,Loading,2132,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571,1,['Load'],['Loading']
Performance,"&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:18641,optimiz,optimized,18641,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,3,['optimiz'],['optimized']
Performance,"(LWP 27870)]; 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_stri",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:4653,optimiz,optimized,4653,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,2,['optimiz'],['optimized']
Performance,")?**; related to salmon. **Describe the bug**; I've been using the Salmon-tximport-DESEq2 pipeline for quite a while now but it's the first time I got similar results from Salmon across samples. I've got 24 samples in total (4 rice genotypes, 2-time point for bacterial blight infection, and 3 replications). However, this from the raw sequencing data and even the trimmed reads that I used, I've got similar mapping rates across all samples. Similar length, TPM, and NumReads across all genes for all genes. Though the value for each gene differs in the abovementioned parameters. The EffectiveLength though is 250 for all genes across all samples. I've used all four different versions of Salmon as listed below but I'm still getting the same similar mapping rate and the parameters at quant.sf though the values differ a bit from each Salmon version. **To Reproduce**; ### Steps and data to reproduce the behavior: for version 0.8. **First I took the genome fasta file and the gff3 file and made a transcriptome fasta file using Salmon:**; module load Cufflinks/2.2.1; gffread all.gff3 -g all.chrs.fasta -w MSU7_transcript.fasta. **I then indexed the transcript fasta file.**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. salmon index -t ~/data/genome/MSU7_transcript.fasta -i ~/data/genome/MSU7_transcript.index --type quasi -k 31. **I then run transcript abundance estimate pipeline for the raw-reads and the trimmed reads as follows:**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:1130,load,load,1130,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['load'],['load']
Performance,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/496:362,Perform,Performing,362,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496,2,"['Perform', 'load']","['Performing', 'loaded']"
Performance,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/141:550,Perform,Performing,550,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141,2,['Perform'],['Performing']
Performance,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. I am using a version that was compiled in Trinity; module load conda/trinity-2.8.4; source activate trinity-2.8.4; salmon --version salmon 0.11.3. **Describe the bug**. @RG lines are at odds with binary encoded reference data ; Segmentation fault. **To Reproduce**; Steps and data to reproduce the behavior:. salmon quant -t Cp_cds.fa -l ISR -a SB1.bam -o salmon_SB1. **Summary** ; I mapped the reads to a de novo transcriptome assembly using BWA-mem. I then use Salmon to get counts for RNAseq analysis using the alignment based mode. This has worked well for the nine previous samples, but the last 3 samples throw the error above (different species and reference transcriptome assembly). Maybe a problem with the bam file? If no not sure how the read groups etc, could be a problem unless there is a problem with the fastq files. But they came from the same run/machine/lane (Illumina NextSeq 500) as six other samples that have not caused problems.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/323:144,load,load,144,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323,1,['load'],['load']
Performance,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It occurs when I run Salmon. **Describe the bug**; When I try to index I get an error; ```; [2021-03-30 14:29:34.670] [puff::index::jointLog] [error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character.; ```; I asked for advice, and it was suggested that two entries in the fasta file had the same name. I tried loading all of the entry names into a computing language, and check that the number of unique names was identical to the total number (suggesting that this wasn't the case). **To Reproduce**; I required to re-run some RNA seq mapping from someone who left the lab, and gave me this script (I've asked them, they did not really know what got wrong). ```; conda create --name rnaseq -c bioconda salmon; conda activate rnaseq; conda install -c conda-forge -c bioconda salmon=1.4.0; mkdir -p reference . # reference genome; wget -O reference/genome.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_genomic.fna.gz. # reference Transcriptome; wget -O reference/transcripts.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_cds_from_genomic.fna.gz. # prepare file with ""decoy"" sequences; zcat reference/genome.fa.gz | grep ""^>"" | cut -d "" "" -f 1 | sed -e 's/>//g' > reference/decoys.txt. # concatenate the two; cat reference/transcripts.fa.gz reference/genome.fa.gz > reference/gentrome.fa.gz. # Try to create index, this gives problems; salmon index -t reference/gentrome.fa.gz -d reference/decoys.txt -p 12 -i salmon_index --gencode -k 31; ```. The last one gives an error:; ```; Version Info: This is the most recent version of salmon.; [2021-03-30 14:29:34.652] [jLog] [info] building index; out : salmon_index; [2021-03-30 14:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/642:542,load,loading,542,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642,1,['load'],['loading']
Performance,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Neither, it's related to compilation. **Describe the bug**. While trying to compile the project I get the following error:; ```; $ make; [ 6%] Built target libcereal; [ 12%] Built target libdivsufsort; [ 18%] Built target liblzma; [ 23%] Built target libbz2; [ 29%] Built target libgff; [ 29%] Performing build step for 'libstadenio'; Making all in io_lib; Making all in progs; libtool: link: /usr/bin/cc -o convert_trace convert_trace.o ../io_lib/.libs/libstaden-read.a -lm -lpthread -llzma -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xf03): warning: the use of `tempnam' is dangerous, better use `mkstemp'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_huff':; compression.c:(.text+0xc0): undefined reference to `deflateInit2_'; compression.c:(.text+0x13b): undefined reference to `deflate'; compression.c:(.text+0x181): undefined reference to `deflateEnd'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_dehuff':; compression.c:(.text+0x2f7): undefined reference to `inflateInit_'; compression.c:(.text+0x371): undefined reference to `inflate'; compression.c:(.text+0x3b4): undefined reference to `inflateEnd'; collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libst",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:380,Perform,Performing,380,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['Perform'],['Performing']
Performance,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No; **Describe the bug**; Running salmon 0.11.3, quasi mode, with 192M of ram.; Salmon quasi mode aborted with following message:; processed 14,000,000 fragmentsntLog] [info] Automatically detected most likely library type as SR; hits: 108,161,934; hits per frag: 8.53594terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; This happens when using a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/304:934,Load,Loading,934,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304,1,['Load'],['Loading']
Performance,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk mode); **Describe the bug**; A clear and concise description of what the bug is.; Salmon fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:912,load,load,912,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,2,['load'],['load']
Performance,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/845:1540,load,loading,1540,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845,1,['load'],['loading']
Performance,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; both. **Describe the bug**; I have Ubuntu 22.04.4 LTS. The conda version I have is 23.3.1. After I followed ""Get Started"", I installed salmon by the command ""conda create -n salmon salmon"". Everything looks fine so far. conda activate salmon. salmon -h; salmon: error while loading shared libraries: libboost_iostreams.so.1.60.0: cannot open shared object file: No such file or directory. Any help with this problem will be highly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/915:360,load,loading,360,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/915,1,['load'],['loading']
Performance,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; I installed Salmon 1.5.2 from binaries, and load it via the module environment (alter or set shell variables such as `PATH` to make the installation visible). The problem is that Salmon overrides the link to the C math standard library. . ```; # without Salmon in my PATH; ldd /home/eboileau/.miniconda3/envs/scNapBar-dev/bin/python3 ; libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f1d2bd45000). # with Salmon in my PATH (loaded via module load salmon/1.5.2); libm.so.6 => /biosw/salmon/1.5.2/lib/libm.so.6 (0x00007f1fa67c0000) ; ```. The latter seem to be incompatible with the Python installation, and results in. ```; import numpy; ImportError: /biosw/salmon/1.5.2/lib/libm.so.6: symbol __get_cpu_features version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; ```. I do not understand why this is happening, and the question is why Salmon has it's own copy of *libm.so.6*?; Is this library different? . **To Reproduce**; Load salmon/1.5.2 via module environment. I am able to run both my python script and Salmon after deleting Salmon's own copy of *libm.so.6*.; Is this expected to alter Salmon's results in any way?. **Expected behavior**; Salmon does not modify the link to *libm.so.6*. **Desktop (please complete the following information):**; - Linux atlas 4.19.0-17-amd64 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux; - salmon 1.5.2; - Python 3.7.6; - conda 4.9.2; - Modules Release 4.2.2 (2019-02-17). **Questions**; - Why Salmon has it's own copy of *libm.so.6*? Is it safe to delete it, and is this expected to alter Salmon's results in any way?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/710:160,load,load,160,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/710,4,"['Load', 'load']","['Load', 'load', 'loaded']"
Performance,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; It appears that when I run the quant command it gets up to the ""loading dense pufferfish index"" but stop after loading positions. So I think that it isn't even getting to the quantification step because it doesn't finish loading the index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; *v.1.5.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * through bioconda; * Which reference (e.g. transcriptome) was used?; * ; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen.; I would expect it to continue to ""loading reference sequence"" etc., then display done and continue with the quantification; **Screenshots**; ![image](https://user-images.githubusercontent.com/85455566/120937098-82d2fb80-c6d9-11eb-9aea-a2935ccc1e50.png). **Desktop (please complete the following information):**; Ubuntu Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; I'm pretty new to linux and salmono it is likely that my problem is due to some simple misunderstanding of how the program works, but any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/667:233,load,loading,233,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667,4,['load'],['loading']
Performance,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; When loading a pufferfish index using salmon v1.0 I encounter errors. I've posted to https://github.com/COMBINE-lab/pufferfish/issues/8 with a full description. When running salmon v1.0 using a rather large index, I receive an error raised from the cereal library ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>64",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/463:121,load,loading,121,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463,6,"['Load', 'load']","['Loading', 'loading']"
Performance,"---------------------------------------; Reallocating bifurcations time: 0; True marks count: 3362277; Edges construction time: 4; --------------------------------------------------------------------------------; Distinct junctions = 472636. allowedIn: 21; Max Junction ID: 563055; seen.size():4504449 kmerInfo.size():563056; approximateContigTotalLength: 72618120; counters for complex kmers:; (prec>1 & succ>1)=21819 | (succ>1 & isStart)=419 | (prec>1 & isEnd)=421 | (isStart & isEnd)=30; contig count: 717834 element count: 122492815 complex nodes: 22689; # of ones in rank vector: 717833; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory indexs/alt_long_index; size = 122492815; -----------------------------------------; | Loading contigs | Time = 11.032 ms; -----------------------------------------; size = 122492815; -----------------------------------------; | Loading contig boundaries | Time = 5.8509 ms; -----------------------------------------; Number of ones: 717833; Number of ones per inventory item: 512; Inventory entries filled: 1403; 717833; [2021-08-20 18:05:53.775] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2021-08-20 18:05:53.780] [puff::index::jointLog] [info] contig count for validation: 717,833; [2021-08-20 18:05:53.943] [puff::index::jointLog] [info] Total # of Contigs : 717,833; [2021-08-20 18:05:53.944] [puff::index::jointLog] [info] Total # of numerical Contigs : 717,833; [2021-08-20 18:05:53.963] [puff::index::jointLog] [info] Total # of contig vec entries: 3,341,414; [2021-08-20 18:05:53.964] [puff::index::jointLog] [info] bits per offset entry 22; [2021-08-20 18:05:54.037] [puff::index::jointLog] [info] Done constructing the contig vector. 717834; [2021-08-20 18:05:54.564] [puff::index::jointLog] [info] # segments = 717,833; [2021-08-20 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:4639,Load,Loading,4639,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['Load'],['Loading']
Performance,"-------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference sequence | Time = 62.735 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 650 us; -----------------------------------------; [2021-05-20 10:53:56.156] [jointLog] [info] done; [2021-05-20 10:53:56.156] [jointLog] [info] Index contained 44,026 targets. [2021-05-20 10:53:58.080] [jointLog] [info] Number of decoys : 0; [2021-05-20 10:54:28.729] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-20 11:34:48.022] [jointLog] [info] Computed 145,552 rich equivalence classes for further processing; [2021-05-20 11:34:48.022] [jointLog] [info] Counted 10,027,482 total reads in the equivalence classes ; [2021-05-20 11:34:48.050] [jointLog] [info] Number of mappings discarded because of alignment score : 208,344,973; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 11,448,458; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2021-05-20 11:34:48.050] [jointLog] [info] Number ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:3203,Load,Loading,3203,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['Load'],['Loading']
Performance,"------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size: 6442721444>6442720932; ...; ```. The index does not finish loading, and so salmon does not enter read quantification routines. **To Reproduce**. * Which version of salmon was used? 1.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Github release tarball; * Wh",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/463:1842,Load,Loading,1842,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463,1,['Load'],['Loading']
Performance,"-------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference sequence | Time = 62.735 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 650 us; -----------------------------------------; [2021-05-20 10:53:56.156] [jointLog] [info] done; [2021-05-20 10:53:56.156] [jointLog] [info] Index contained 44,026 targets. [2021-05-20 10:53:58.080] [jointLog] [info] Number of decoys : 0; [2021-05-20 10:54:28.729] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-20 11:34:48.022] [jointLog] [info] Computed 145,552 rich equivalence classes for further processing; [2021-05-20 11:34:48.022] [jointLog] [info] Counted 10,027,482 total reads in the equivalence classes ; [2021-05-20 11:34:48.050] [jointLog] [info] Number of mappings discarded because of alignment score : 208,344,973; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments entirely discarded because of alignment score ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:3068,Load,Loading,3068,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['Load'],['Loading']
Performance,"------------------------------; Distinct junctions = 5239944. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 139; Max Junction ID: 12729038; seen.size():101832313 kmerInfo.size():12729039; approximateContigTotalLength: 1607258836; counters for complex kmers:; (prec>1 & succ>1)=133010 | (succ>1 & isStart)=7442 | (prec>1 & isEnd)=7516 | (isStart & isEnd)=2442; contig count: 11353512 element count: 2210067304 complex nodes: 150410; # of ones in rank vector: 11353511; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2023-03-15 20:35:10.185] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory illerney.index; size = 2210067304; -----------------------------------------; | Loading contigs | Time = 451.61 ms; -----------------------------------------; size = 2210067304; -----------------------------------------; | Loading contig boundaries | Time = 180.73 ms; -----------------------------------------; Number of ones: 11353511; Number of ones per inventory item: 512; Inventory entries filled: 22175; 11353511; [2023-03-15 20:35:13.921] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2023-03-15 20:35:13.997] [puff::index::jointLog] [info] contig count for validation: 11,353,511; [2023-03-15 20:35:19.728] [puff::index::jointLog] [info] Total # of Contigs : 11,353,511; [2023-03-15 20:35:19.728] [puff::index::jointLog] [info] Total # of numerical Contigs : 11,353,511; [2023-03-15 20:35:20.804] [puff::index::jointLog] [info] Total # of contig vec entries: 16,343,267; [2023-03-15 20:35:20.804] [puff::index::jointLog] [info] bits per offset entry 24; [2023-03-15 20:35:22.331] [puff::index::jointLog] [info] Done constructing the contig vector. 11353512; [2023-03-15 20:35:25.697] [puff::index::jointLog] [info] # segments = 11,35",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/837:3466,Load,Loading,3466,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837,1,['Load'],['Loading']
Performance,"----------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.9587 ms; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2021-04-09 12:16:41.658] [jointLog] [info] Index contained 45,375 targets; [2021-04-09 12:16:41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] First decoy index : 45,374. [2021-04-09 12:16:42.811] [alevinLog] [info] Starting optimizer. [2021-04-09 12:16:42.800] [jointLog] [info] Computed 84 rich equivalence classes for further processing; [2021-04-09 12:16:42.800] [jointLog] [info] Counted 135 total reads in the equivalence classes; [2021-04-09 12:16:42.801] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 18",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:5333,Load,Loading,5333,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['Load'],['Loading']
Performance,"---------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.9587 ms; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2021-04-09 12:16:41.658] [jointLog] [info] Index contained 45,375 targets; [2021-04-09 12:16:41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] First decoy index : 45,374. [2021-04-09 12:16:42.811] [alevinLog] [info] Starting optimizer. [2021-04-09 12:16:42.800] [jointLog] [info] Computed 84 rich equivalence classes for further processing; [2021-04-09 12:16:42.800] [jointLog] [info] Counted 135 total reads in the equivalence classes; [2021-04-09 12:16:42.801] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:5468,Load,Loading,5468,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['Load'],['Loading']
Performance,"--------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:2672,Load,Loading,2672,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"--------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 3.165 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 75.428 ms; -----------------------------------------. [2021-09-20 16:22:03.730] [jointLog] [info] done; [2021-09-20 16:22:03.778] [jointLog] [info] Index contained 116,612 targets; [2021-09-20 16:22:03.892] [jointLog] [info] Number of decoys : 66; [2021-09-20 16:22:03.892] [jointLog] [info] First decoy index : 116,507 ; [2021-09-20 16:22:04.460] [jointLog] [info] Automatically detected most likely library type as U; processed 37,000,000 fragments; hits: 117,167,504; hits per frag: 3.16785. [2021-09-20 16:24:48.269] [jointLog] [info] Computed 309,226 rich equivalence classes for further processing; [2021-09-20 16:24:48.269] [jointLog] [info] Counted 34,252,402 total reads in the equivalence classes ; [2021-09-20 16:24:48.274] [jointLog] [info] Number of mappings discarded",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:5636,Load,Loading,5636,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,--------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 2.1723 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 2.8044 ms; -----------------------------------------. [2023-11-30 09:37:51.026] [jointLog] [info] done; [2023-11-30 09:37:51.104] [jointLog] [info] Index contained 253166 targets; [2023-11-30 09:37:51.166] [jointLog] [info] Number of decoys : 194; [2023-11-30 09:37:51.166] [jointLog] [info] First decoy index : 252924 ; [2023-11-30 09:37:54.100] [jointLog] [info] Automatically detected most likely library type as ISR. [2023-11-30 09:38:33.382] [jointLog] [info] Thread saw mini-batch with a maximum of 3.76% zero probability fragments; [2023-11-30 09:38:33.406] [jointLog] [info] Computed 12939 rich equivalence classes for further processing; [2023-11-30 09:38:33.407] [jointLog] [info] Counted 268744 total reads in the equivalence classes ; [2023-11-30 09:38:33.414] [jointL,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:7434,Load,Loading,7434,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"--------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/genc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:4309,Load,Loading,4309,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,-------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 2.1723 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 2.8044 ms; -----------------------------------------. [2023-11-30 09:37:51.026] [jointLog] [info] done; [2023-11-30 09:37:51.104] [jointLog] [info] Index contained 253166 targets; [2023-11-30 09:37:51.166] [jointLog] [info] Number of decoys : 194; [2023-11-30 09:37:51.166] [jointLog] [info] First decoy index : 252924 ; [2023-11-30 09:37:54.100] [jointLog] [info] Automatically detected most likely library type as ISR. [2023-11-30 09:38:33.382] [jointLog] [info] Thread saw mini-batch with a maximum of 3.76% zero probability fragments; [2023-11-30 09:38:33.406] [jointLog] [info] Computed 12939 rich equivalence classes for further processing; [2023-11-30 09:38:33.407] [jointLog] [info] Counted 268744 total reads in the equivalence classes ; [2023-11-30 09:38:33.414] [jointLog] [info] Number of mappings discarded because of alignment score : 148747; [2023-11-30 09:38:33.414] [jointLog] [info] Number of fragments entirely,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:7568,Load,Loading,7568,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"-------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:4443,Load,Loading,4443,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"-------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] => { /mnt/hgfs/Data/reference_data/mm10/default }; ### [ unmatedReads ] => { /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz }; ### [ output ] => { out }; ### [ threads ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:2806,Load,Loading,2806,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"-------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 3.165 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 75.428 ms; -----------------------------------------. [2021-09-20 16:22:03.730] [jointLog] [info] done; [2021-09-20 16:22:03.778] [jointLog] [info] Index contained 116,612 targets; [2021-09-20 16:22:03.892] [jointLog] [info] Number of decoys : 66; [2021-09-20 16:22:03.892] [jointLog] [info] First decoy index : 116,507 ; [2021-09-20 16:22:04.460] [jointLog] [info] Automatically detected most likely library type as U; processed 37,000,000 fragments; hits: 117,167,504; hits per frag: 3.16785. [2021-09-20 16:24:48.269] [jointLog] [info] Computed 309,226 rich equivalence classes for further processing; [2021-09-20 16:24:48.269] [jointLog] [info] Counted 34,252,402 total reads in the equivalence classes ; [2021-09-20 16:24:48.274] [jointLog] [info] Number of mappings discarded because of alignment score : 13,534,931; [2021-09-20 16:24:48.274] [jointLog] [info] Number of fragments entirely discarded because of alignment sco",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:5769,Load,Loading,5769,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"-------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; -----------------------------------------; size = 2139249936; -----------------------------------------; | Loading reference sequence | Time = 408.65 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 48.085 ms; -----------------------------------------; Exception : [boost::filesystem::status: File name too long: ""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_33-41/33-41_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_32-40/32-40_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_38-45_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_30-38/30-38_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_20-28/20-28_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_13-21/13-21_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-6-12_221020_L002_R1.fastq.gz; /noback",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:11296,Load,Loading,11296,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['Load'],['Loading']
Performance,"------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] done; ```; (taken from the terminal as the logfile is empty, and the current time is 12:54 pm = >3 hr run time so far). **To Reproduce**; I ran the following command:. ```; salmon quant \; --geneMap Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: via singularity; while running manually to troubleshoot: conda.; * Which reference (e.g. transcriptome) was used? Homo_sapiens.GRCh38 transcriptome + ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:10445,Load,Loading,10445,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['Load'],['Loading']
Performance,"------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading reference sequence | Time = 681.27 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 21.142 ms; -----------------------------------------; [2024-11-01 05:14:22.991] [jointLog] [info] done; [2024-11-01 05:14:23.016] [jointLog] [info] Index contained 252,149 targets. [2024-11-01 05:14:24.607] [jointLog] [info] Number of decoys : 194; [2024-11-01 05:14:24.607] [jointLog] [info] First decoy index : 251,913 ; [2024-11-01 05:14:29.425] [jointLog] [info] Automatically detected most likely library type as ISR. [A. [32mprocessed[31m 500,000 [32mfragments[0m; hits: 216,939, hits per frag: 0.43692[A. [32mprocessed[31m 1,000,000 [32mfragments[0m; hits: 435,436, hits per frag: 0.442697[A. [32mprocessed[31m 1,500,000 [32mfragments[0m; hits: 654,611, hits per frag: 0.438092[A. [32mprocessed[31m 2,000,000 [32mfragments[0m; hits: 857,321, hits per frag: 0.431748[A. [32m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:3943,Load,Loading,3943,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['Load'],['Loading']
Performance,"------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.63223/.../work2/c3/593743a22569a97e1d10b2a200b713/.command.sh: line 4: 38 Segmentation fault (core dumped) /usr/local/bin/salmon quant -i references/salmon/*ucsc.rmsk.salmon*/ --libType A -1 SRR14506785_output_forward_paired.fq.gz -2 SRR14506785_output_reverse_paired.fq.gz -p 8 --validateMappi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:4169,Load,Loading,4169,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['Load'],['Loading']
Performance,"----------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; -----------------------------------------; size = 2139249936; -----------------------------------------; | Loading reference sequence | Time = 408.65 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 48.085 ms; -----------------------------------------; Exception : [boost::filesystem::status: File name too long: ""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_33-41/33-41_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_32-40/32-40_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_38-45_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_30-38/30-38_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_20-28/20-28_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_13-21/13-21_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-6-12_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_17-25/17-25_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-11-1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:11431,Load,Loading,11431,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['Load'],['Loading']
Performance,"---------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading reference sequence | Time = 681.27 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 21.142 ms; -----------------------------------------; [2024-11-01 05:14:22.991] [jointLog] [info] done; [2024-11-01 05:14:23.016] [jointLog] [info] Index contained 252,149 targets. [2024-11-01 05:14:24.607] [jointLog] [info] Number of decoys : 194; [2024-11-01 05:14:24.607] [jointLog] [info] First decoy index : 251,913 ; [2024-11-01 05:14:29.425] [jointLog] [info] Automatically detected most likely library type as ISR. [A. [32mprocessed[31m 500,000 [32mfragments[0m; hits: 216,939, hits per frag: 0.43692[A. [32mprocessed[31m 1,000,000 [32mfragments[0m; hits: 435,436, hits per frag: 0.442697[A. [32mprocessed[31m 1,500,000 [32mfragments[0m; hits: 654,611, hits per frag: 0.438092[A. [32mprocessed[31m 2,000,000 [32mfragments[0m; hits: 857,321, hits per frag: 0.431748[A. [32mprocessed[31m 2,500,000 [32mfragments[0m; hits: 1,074,298, hits per frag: 0.432761[A. [32mprocessed[31m 3,000,000 [32mfragments[0m; hits: 1,284,332, h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:4078,Load,Loading,4078,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['Load'],['Loading']
Performance,"---------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] done; ```; (taken from the terminal as the logfile is empty, and the current time is 12:54 pm = >3 hr run time so far). **To Reproduce**; I ran the following command:. ```; salmon quant \; --geneMap Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: via singularity; while running manually to troubleshoot: conda.; * Which reference (e.g. transcriptome) was used? Homo_sapiens.GRCh38 transcriptome + genome as a 'gentrome'; * Which read files were used? newly sequenced bulk RNAseq reads. **Expected behavior**; All samples with similar numbers of rea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:10580,Load,Loading,10580,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['Load'],['Loading']
Performance,"---------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.63223/.../work2/c3/593743a22569a97e1d10b2a200b713/.command.sh: line 4: 38 Segmentation fault (core dumped) /usr/local/bin/salmon quant -i references/salmon/*ucsc.rmsk.salmon*/ --libType A -1 SRR14506785_output_forward_paired.fq.gz -2 SRR14506785_output_reverse_paired.fq.gz -p 8 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output SRR14506785.salmon.rmsk.out --writeUnmappedNames; ```. **Desktop (please c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:4304,Load,Loading,4304,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['Load'],['Loading']
Performance,"---------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.9587 ms; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2021-04-09 12:16:41.658] [jointLog] [info] Index contained 45,375 targets; [2021-04-09 12:16:41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] First decoy index : 45,374. [2021-04-09 12:16:42.811] [alevinLog] [info] Starting optimizer. [2021-04-09 12:16:42.800] [jointLog] [info] Computed 84 rich equivalence classes for further processing; [2021-04-09 12:16:42.800] [jointLog] [info] Counted 135 total reads in the equivalence classes; [2021-04-09 12:16:42.801] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:5888,optimiz,optimizer,5888,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['optimiz'],['optimizer']
Performance,"--biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [info] finished quantifyLibrary(); [2016-06-21 10:05:13.894] [jointLog] [info] Starting optimizer; Segmentation fault (core dumped); ```. It runs fine when disabling `--useFSPD`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/64:1645,Load,Loading,1645,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64,4,"['Load', 'load', 'optimiz']","['Loading', 'loading', 'optimizer']"
Performance,"-01-29 16:06:45.902] [alevinLog] [info] Done Importing gene count matrix for dimension 4000x29574; 0.00248159 1.3538e-06 0.000205983 221334; 0.00714905 1.09739e-06 0.000617623 71036.5; [2019-01-29 16:06:46.603] [alevinLog] [info] Starting white listing; [2019-01-29 16:06:46.615] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2019-01-29 16:06:46.615] [alevinLog] [info] Total 4000 barcodes found; [2019-01-29 16:06:46.615] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 16:06:46.615] [alevinLog] [info] Starting to make feature Matrix; [2019-01-29 16:06:46.790] [alevinLog] [info] Done making regular featues; [2019-01-29 16:06:46.790] [alevinLog] [info] Done making feature Matrix; [2019-01-29 16:06:46.871] [alevinLog] [info] Finished white listing; [2019-01-29 16:06:46.957] [alevinLog] [info] Finished optimizer; ```. ### no whitelist, expectCells 3000. ```; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-29 15:45:58.012] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:4121,optimiz,optimizer,4121,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['optimiz'],['optimizer']
Performance,"-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] done; ```; (taken from the terminal as the logfile is empty, and the current time is 12:54 pm = >3 hr run time so far). **To Reproduce**; I ran the following command:. ```; salmon quant \; --",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:10005,Load,Loading,10005,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['Load'],['Loading']
Performance,"-05 16:31:47.863] [alevinLog] [info] Knee found left boundary at 2926 ; [2018-12-05 16:31:50.571] [alevinLog] [info] Gauss Corrected Boundary at 2858 ; [2018-12-05 16:31:50.571] [alevinLog] [info] Learned InvCov: 166.8 normfactor: 2759.5; [2018-12-05 16:31:50.571] [alevinLog] [info] Total 3856(has 998 low confidence) barcodes; [2018-12-05 16:31:50.638] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 16:31:50.935] [alevinLog] [info] Done populating Z matrix; [2018-12-05 16:31:51.000] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 16:31:51.000] [alevinLog] [info] Total Unique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 16:31:51.960] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 16:31:52.001] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 16:31:52.022] [stderrLog] [info] Computing transcript lengths; [2018-12-05 16:31:52.022] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 16:31:56.025] [stderrLog] [info] Done loading index; [2018-12-05 16:31:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:12554,Load,Loading,12554,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['Load'],['Loading']
Performance,-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 320.51 us; -----------------------------------------; [2024-05-03 15:10:04.136] [jointLog] [info] done; [2024-05-03 15:10:04.170] [jointLog] [info] Index contained 147554 targets. [2024-05-03 15:10:05.131] [jointLog] [info] Number of decoys : 61 ; processed 21000000 fragmentsointLog] [info,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:6580,Load,Loading,6580,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['Load'],['Loading']
Performance,"-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; -----------------------------------------; size = 2139249936; -----------------------------------------; | Loading reference sequence | Time = 408.65 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 48.085 ms; -----------------------------------------; Exception : [boost::filesystem::status: File name too long: ""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_33-41/33-41_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_32-40/32-40_221020",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:10857,Load,Loading,10857,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['Load'],['Loading']
Performance,-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [in,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:3729,Load,Loading,3729,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['Load'],['Loading']
Performance,"-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading reference sequence | Time = 681.27 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 21.142 ms; -----------------------------------------; [2024-11-01 05:14:22.991] [jointLog] [info] done; [2024-11-01 05:14:23.016] [jointLog] [info] Index contained 252,149 targets. [2024-11-01 05:14:24.607] [jointLog] [info] Number of decoys : 194; [2024-11-01 05:14:24.607] [jointLog] [in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:3503,Load,Loading,3503,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['Load'],['Loading']
Performance,"-30 09:38:33.407] [jointLog] [info] Counted 268744 total reads in the equivalence classes ; [2023-11-30 09:38:33.414] [jointLog] [info] Number of mappings discarded because of alignment score : 148747; [2023-11-30 09:38:33.414] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 75092; [2023-11-30 09:38:33.414] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 67912; [2023-11-30 09:38:33.414] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 46918; [2023-11-30 09:38:33.436] [jointLog] [warning] Only 268744 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2023-11-30 09:38:33.436] [jointLog] [info] Mapping rate = 53.7596%. [2023-11-30 09:38:33.436] [jointLog] [info] finished quantifyLibrary(); [2023-11-30 09:38:33.440] [jointLog] [info] Starting optimizer; [2023-11-30 09:38:33.498] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-11-30 09:38:33.511] [jointLog] [info] iteration = 0 | max rel diff. = 101.852; [2023-11-30 09:38:34.853] [jointLog] [info] iteration = 100 | max rel diff. = 0.263537; [2023-11-30 09:38:36.144] [jointLog] [info] iteration = 200 | max rel diff. = 0.0414157; [2023-11-30 09:38:37.438] [jointLog] [info] iteration = 300 | max rel diff. = 1.17048; [2023-11-30 09:38:38.135] [jointLog] [info] iteration = 355 | max rel diff. = 0.00351135; [2023-11-30 09:38:38.148] [jointLog] [info] Finished optimizer; [2023-11-30 09:38:38.148] [jointLog] [info] writing output ; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - Linux r640c10 4.18.0-372.16.1.el8_6.x86_64 #1 SMP Tue Jun 28 03:02:21 EDT 2022 x86_64 GNU/Linux. *",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:9271,optimiz,optimizer,9271,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['optimiz'],['optimizer']
Performance,-listed Barcodes; [2018-07-19 18:26:18.285] [alevinLog] [info] Done populating Z matrix; [2018-07-19 18:26:18.300] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_64 x86_64 x86_64 GNU/Linux`; `$ lsb_release -a; LSB Version:	core-2.0-noarch:core-3.2-noarch:core-4.0-noarch:core-2.0-x86_64:core-3.2-x86_64:core-4.0-x86_64:desktop-4.0-amd64:desktop-4.0-noarch:graphics-2.0-amd64:graphics-2.0-noarch:graphics-3.2-amd64:graphics-3.2-noarch:graphics-4.0-amd64:graphics-4.0-noarch; Distributor ID:	SUSE LINUX; Description:	SUSE Linux Enterprise Server 1,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:5539,load,loading,5539,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['load'],['loading']
Performance,. [2018-07-19 18:26:13.307] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 18:26:13.307] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 18:26:13.334] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 18:26:13.334] [alevinLog] [info] Total 54879 white-listed Barcodes; [2018-07-19 18:26:18.285] [alevinLog] [info] Done populating Z matrix; [2018-07-19 18:26:18.300] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_64 x86_64 x86_64 GNU/Linux`; `$ lsb_release -a; LSB Version:	core-2.0-noa,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:5219,Load,Loading,5219,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['Load'],['Loading']
Performance,"./salmon index -t Mus_musculus.GRCm38.cdna.all.norm.fasta -i GRCm38.cdna.all_index --type quasi -l 31. Dear Salmon list,. I am using the Salmon 0.8.1 binary for Mac OS X, Sierra, 10.12.8. I am trying to set up an mm10; mouse index. I downlaod the mouse cDNAs from Ensembl, and normlized the ends with galaxy.; I am running evelything in lib in case there are path issues.; Here is my directory:. c2b2afmd2:lib friedman$ ls; Mus_musculus.GRCm38.cdna.all.fa	libtbbmalloc_proxy.dylib; libtbb.dylib			salmon; libtbbmalloc.dylib. Here is my attemot to build an index:. c2b2afmd2:lib friedman$ ./salmon index -t Mus_musculus.GRCm38.cdna.all.norm.fasta -i GRCm38.cdna.all_index --type quasi -l 31; dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Applications/Salmon-0.8.2_macOX_10.12/lib/./salmon; Reason: image not found; Abort trap: 6. I would greatly appreciate any help that you might be able ot give. Thanks and best wishes,; Rich; Richard A. Friedman, PhD; Associate Research Scientist,; Biomedical Informatics Shared Resource; Herbert Irving Comprehensive Cancer Center (HICCC); Lecturer,; Department of Biomedical Informatics (DBMI); Room 825; Irving Cancer Research Center ; Columbia University Herbert and Florence Irving Medical Center; 1130 St. Nicholas Ave; New York, NY 10032; (212)851-4765 (voice); raf4@cumc.columbia.edu. http://www.columbia.edu/~raf4/index.html. “Will there still be ""Classics Illustrated” by the time I have children? I cannot; imagine raising kids without ""Classics Illustrated” .” -Rose Friedman, age 20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/215:709,load,loaded,709,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215,1,['load'],['loaded']
Performance,".1) of salmon and often get a low mapping rate of my samples. This time I got the lowest ratio ever, 0.0417748%. . ```; [2021-04-16 16:40:11.804] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ig; nored.; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly; specified, it is being set to 0.65; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorizati; on. rangeFactorizationBins is being set to 4; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting cons; ensusSlack to 0.2.; [2021-04-16 16:40:11.804] [jointLog] [info] parsing read library format; [2021-04-16 16:40:11.804] [jointLog] [info] There is 1 library.; [2021-04-16 16:40:11.898] [jointLog] [info] Loading Quasi index; [2021-04-16 16:40:11.898] [jointLog] [info] Loading 32-bit quasi index; [2021-04-16 16:40:17.838] [jointLog] [info] done; [2021-04-16 16:40:17.838] [jointLog] [info] Index contained 77,654 targets; [2021-04-16 16:57:15.485] [fileLog] [info]; At end of round 0. Observed 25613538 total fragments (25613538 in most recent round). [2021-04-16 16:57:15.485] [jointLog] [info] Computed 1,663 rich equivalence classes for further processing; [2021-04-16 16:57:15.485] [jointLog] [info] Counted 10,700 total reads in the equivalence classes; [2021-04-16 16:57:15.488] [jointLog] [warning] 0.00162414% of fragments were shorter than the k used to build the index (21).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-16 16:57:15.488] [jointLog] [info] Number of mappings discarded because of alignment score : 86,602; [2021-04-16 16:57:15.488] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 124,571; [2021-04-16 16:57:15.488] [jointLog] [info] Num",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:1027,Load,Loading,1027,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,1,['Load'],['Loading']
Performance,".729] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-20 11:34:48.022] [jointLog] [info] Computed 145,552 rich equivalence classes for further processing; [2021-05-20 11:34:48.022] [jointLog] [info] Counted 10,027,482 total reads in the equivalence classes ; [2021-05-20 11:34:48.050] [jointLog] [info] Number of mappings discarded because of alignment score : 208,344,973; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 11,448,458; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2021-05-20 11:34:48.050] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 687,723; [2021-05-20 11:34:48.050] [jointLog] [info] Mapping rate = 6.17078%. [2021-05-20 11:34:48.050] [jointLog] [info] finished quantifyLibrary(); [2021-05-20 11:34:48.127] [jointLog] [info] Starting optimizer; [2021-05-20 11:34:48.220] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-05-20 11:34:48.227] [jointLog] [info] iteration = 0 | max rel diff. = 17492.1; [2021-05-20 11:34:48.285] [jointLog] [info] iteration 11, adjusting effective lengths to account for biases; [2021-05-20 11:34:55.799] [jointLog] [info] Computed expected counts (for bias correction); [2021-05-20 11:34:55.800] [jointLog] [info] processed bias for 0.3% of the transcripts; [2021-05-20 11:34:56.392] [jointLog] [info] processed bias for 10.0% of the transcripts; [2021-05-20 11:34:57.015] [jointLog] [info] processed bias for 20.0% of the transcripts; [2021-05-20 11:34:57.580] [jointLog] [info] processed bias for 30.0% of the transcripts; [2021-05-20 11:34:58.135] [jointLog] [info] processed bias for 40.0% of the transcripts; [2021-05-20 11:34:58.710] [jointLog] [info] processed bias for 50.0% of the transcripts; [2021-05-20 11:34:59.289] [jointLog] [info] processed bias for 60.0% of t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:4514,optimiz,optimizer,4514,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['optimiz'],['optimizer']
Performance,".; [2018-12-05 15:12:18.914] [alevinLog] [info] # Barcodes Used: 267451749 / 267548197.; [2018-12-05 15:12:25.126] [alevinLog] [info] Knee found left boundary at 11954 ; [2018-12-05 15:12:27.371] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-12-05 15:12:27.371] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-12-05 15:12:27.371] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-12-05 15:12:27.494] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 15:12:27.880] [alevinLog] [info] Done populating Z matrix; [2018-12-05 15:12:27.952] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 15:12:27.952] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 15:12:30.141] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 15:12:30.181] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for fu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:6941,Load,Loading,6941,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['Load'],['Loading']
Performance,".fa.gz and gencode.v40.transcripts.fa.gz from Gencode using the same tutorial above (2) gencode.v40.transcripts.fa.gz from Gencode only (3) Homo_sapiens.GRCh38.cdna.all.fa.gz from Ensembl ; But I still received the same warning and 0 fragments mapped results. Below is one of the log file (they all look similar):. > [2022-04-15 23:47:55.696] [jointLog] [info] setting maxHashResizeThreads to 48 ; [2022-04-15 23:47:55.696] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored. ; [2022-04-15 23:47:55.696] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65 ; [2022-04-15 23:47:55.696] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35. ; [2022-04-15 23:47:55.696] [jointLog] [info] parsing read library format ; [2022-04-15 23:47:55.696] [jointLog] [info] There is 1 library. ; [2022-04-15 23:47:55.833] [jointLog] [info] Loading pufferfish index ; [2022-04-15 23:47:55.833] [jointLog] [info] Loading dense pufferfish index. ; [2022-04-15 23:49:52.320] [jointLog] [info] done ; [2022-04-15 23:49:52.320] [jointLog] [info] Index contained 245,900 targets ; [2022-04-15 23:49:52.424] [jointLog] [info] Number of decoys : 639 ; [2022-04-15 23:49:52.424] [jointLog] [info] First decoy index : 245,261 ; [2022-04-15 23:50:13.651] [jointLog] [warning] salmon was only able to assign 0 fragments to transcripts in the index, but the minimum number of required assigned fragments (--minAssignedFrags) was 3. This could be indicative of a mismatch between the reference and sample, or a very bad sample. You can change the --minAssignedFrags parameter to force salmon to quantify with fewer assigned fragments (must have at least 1). I wonder maybe there's something wrong with my fastq files but I have no idea since they look fine(?):. > @SRR493372.1 HWI-M00266:2:000000000-A0HDE:1:1:14862:1427 length=26 CAGATCCCTCCCCTGGTCACTACAGA ; +SRR4933",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/768:2793,Load,Loading,2793,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/768,1,['Load'],['Loading']
Performance,".fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; ---------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:5777,Load,Loading,5777,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['Load'],['Loading']
Performance,".gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; --------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:2700,Load,Loading,2700,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['Load'],['Loading']
Performance,".org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor. ```; Do not manually pass the original gene-level counts to downstream methods without an offset. ; The only case where this would make sense is if there is no length bias to the counts, as happens in 3’ tagged RNA-seq data (see section below). ; The original gene-level counts are in txi$counts when tximport was run with countsFromAbundance=""no"". ; This is simply passing the summed estimated transcript counts, and does not correct for potential differential isoform usage (the offset), which is the point of the tximport methods (Soneson, Love, and Robinson 2015) for gene-level analysis. ; Passing uncorrected gene-level counts without an offset is not recommended by the tximport package authors. ; The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. ; Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level differential expression.; ```. 2 - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Salmon. ```; files <- file.path(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene); head(txi.salmon$counts). ```; Why the confusion - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor - states ; - The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level differential expression; - The second method is to use the tximport argument countsFromAbundance=""lengthScaledTPM"" or ""scaledTPM"", and then to use the gene-level count matrix txi$counts directly as ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/581:1240,perform,perform,1240,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581,1,['perform'],['perform']
Performance,"/2.2.1; gffread MSU7_all.gff3 -g all.chrs.fasta -w MSU7_newtranscript.fasta. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.12.0-IGB-gcc-8.2.0. salmon index -t ~/data/genome/MSU7_newtranscript.fasta -i ~/data/genome/MSU7new_transcript.index --type quasi -k 31. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias --validateMappings. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13 Salmon/0.11.3-IGB-gcc-4.9.4; Salmon/0.9.1-IGB-gcc-4.9.4 Salmon/0.12.0-IGB-gcc-8.2.0 (D). * How was salmon installed (compiled, downloaded executable, through bioconda)?; through the biocluster in the University. * Which reference (e.g. transcriptome) was used?; converted the genomic fasta file to transcriptomic fasta file (described above); ; * Which read files were used?; the raw sequencing reads and the trimmed reads from the paired-end data. * Which which program options were us",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:3737,load,load,3737,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['load'],['load']
Performance,"/All-H.m-reads/Trimmed/Sample_8-15/8-15_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_42-50_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-46-53_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-4-10_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_23-31/23-31_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P1_H.m_16-24_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_22-30/22-30_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_27-35/27-35_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_25-33/25-33_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-45-54_221020_L002_R1.fastq.gz""]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. script. #!/bin/bash; #SBATCH -p shared; #SBATCH -c 100; #SBATCH --mem=200G; #SBATCH --gres=tmp:300G; #SBATCH -t 36:00:00. module purge; module load bioinformatics; module load salmon/1.10.1. cd /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/. # Set the path to the Salmon index; salmon_index=""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/salmon_index"". # Set the path to the directory containing all the FASTQ files; fastq_dir=""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed"". # Use the find command to locate all R1 and R2 FASTQ files; r1_files=$(find ""$fastq_dir"" -name ""*1.fastq.gz""); r2_files=$(find ""$fastq_dir"" -name ""*2.fastq.gz""). # Loop through the found files; for i in ""${!r1_files[@]}""; do; r1_file=""${r1_files[i]}""; r2_file=""${r2_files[i]}"". # Extract the sample name; samp=$(basename ""$r1_file"" ""_1.fastq.gz""). # echo ""Processing sample ${samp}""; salmon quant -i salmon_index -l A -1 ""$r1_file"" -2 ""$r2_file"" -p 100 --validateMappings -o ""salmon_out/${samp}_quant""; done. thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:16261,load,load,16261,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,2,['load'],['load']
Performance,"/Homo_sapiens.GRCh38.rel79/ --numBootstraps 100 -o $base <(zcat ${base}_1.fastq.gz ) <(zcat ${base}_2.fastq.gz); Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0 ; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report.**.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/65:1162,Load,Loading,1162,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65,1,['Load'],['Loading']
Performance,"/salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23 20:11:20.618] [jointLog] [info] Index contained 199,612 targets. Segmentation fault: 11; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OSX; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ProductName:	Mac OS X; ProductVersion:	10.11.3; BuildVersion:	15D21. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:2199,Load,Loading,2199,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,5,"['Load', 'load']","['Loading', 'loading']"
Performance,"/sample/logs; [2019-06-23 18:08:01.732] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-06-23 18:08:01.805] [alevinLog] [info] Loading Header; [2019-06-23 18:08:01.807] [alevinLog] [info] Loading Transcript Info ; [2019-06-23 18:08:02.243] [alevinLog] [warning] Found {} transcripts with duplicate names; [2019-06-23 18:08:02.530] [alevinLog] [info] Found all transcripts to gene mappings; ### alevin (dscRNA-seq quantification) v0.14.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { U }; ### [ mates2 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/read_fastq//sample.fastq }; ### [ mates1 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/CB_UMI//sample.fastq }; ### [ index ] => { /mnt/beegfs/alexmascension/STAR//hg38/salmon_index/ }; ### [ threads ] => { 40 }; ### [ output ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample }; ### [ end ] => { 5 }; ### [ barcodeLength ] => { 16 }; ### [ umiLength ] => { 10 }; ### [ dumpUmiGraph ] => { }; ### [ tgMap ] => { /mnt/beegfs/al",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:2580,Load,Loading,2580,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['Load'],['Loading']
Performance,"022-05-13 03:02:19.507] [jointLog] [info] iteration = 400 | max rel diff. = 5.00889; [2022-05-13 03:02:20.812] [jointLog] [info] iteration = 500 | max rel diff. = 10.9087; [2022-05-13 03:02:22.073] [jointLog] [info] iteration = 600 | max rel diff. = 0.162723; [2022-05-13 03:02:23.316] [jointLog] [info] iteration = 700 | max rel diff. = 0.125884; [2022-05-13 03:02:24.647] [jointLog] [info] iteration = 800 | max rel diff. = 0.611449; [2022-05-13 03:02:26.020] [jointLog] [info] iteration = 900 | max rel diff. = 0.0687607; [2022-05-13 03:02:27.302] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.144642; [2022-05-13 03:02:28.620] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0139885; [2022-05-13 03:02:29.874] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.053712; [2022-05-13 03:02:31.161] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0312546; [2022-05-13 03:02:32.489] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.107944; [2022-05-13 03:02:32.656] [jointLog] [info] iteration = 1,414 | max rel diff. = 0.00665317; [2022-05-13 03:02:32.664] [jointLog] [info] Finished optimizer; [2022-05-13 03:02:32.665] [jointLog] [info] writing output . [2022-05-13 03:02:32.905] [jointLog] [warning] NOTE: Read Lib [[ /fastp_6BE_1.fq.gz, /fastp_6BE_2.fq.gz]] :. Detected a *potential* strand bias > 1% in an unstranded protocol check the file: sample6BE.salmon/lib_format_counts.json for details. This is the lib_format_counts.json details . ""read_files"": ""[ /fastp_6BE_1.fq.gz, /fastp_6BE_2.fq.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 27069942,; ""num_assigned_fragments"": 27069942,; ""num_frags_with_concordant_consistent_mappings"": 25715904,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1666158,; ""strand_mapping_bias"": 0.0481568915485141,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 1238398,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 24477506,; ""SF"": 981192,; ""SR"": 684966,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/775:3218,optimiz,optimizer,3218,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/775,1,['optimiz'],['optimizer']
Performance,"03 13:54:43.964] [alevinLog] [info] Throwing 49909 barcodes with < 10 reads; > [2020-06-03 13:54:43.984] [alevinLog] [info] Total 50092(has 201 low confidence) barcodes; > [2020-06-03 13:54:44.191] [alevinLog] [info] Done True Barcode Sampling; > [2020-06-03 13:54:44.285] [alevinLog] [info] Total 1.70493% reads will be thrown away because of noisy Cellular barcodes.; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done populating Z matrix; > [2020-06-03 13:54:45.790] [alevinLog] [info] Total 0 CB got sequence corrected; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done indexing Barcodes; > [2020-06-03 13:54:45.790] [alevinLog] [info] Total Unique barcodes found: 604589; > [2020-06-03 13:54:45.790] [alevinLog] [info] Used Barcodes except Whitelist: 0; > [2020-06-03 13:54:46.493] [jointLog] [info] There is 1 library.; > ; > -----------------------------------------; > [2020-06-03 13:54:46.551] [jointLog] [info] Loading pufferfish index; > [2020-06-03 13:54:46.551] [jointLog] [info] Loading dense pufferfish index.; > [2020-06-03 13:54:46.552] [jointLog] [info] done; > [2020-06-03 13:54:46.552] [jointLog] [info] Index contained 64 targets; > [2020-06-03 13:54:46.552] [jointLog] [info] Number of decoys : 0; > ; > [2020-06-03 13:54:46.493] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; > ; > processed 52 Million fragmentsvinLog] [info] parsing read library format; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:55:42.905] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:55:42.931] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.931] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 UniDirected Edges.; > [2020-06-03 13:55:42.933]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/531:2410,Load,Loading,2410,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531,1,['Load'],['Loading']
Performance,03 15:58:16.214] [alevinLog] [info] # Barcodes Used: [32m639154757[0m / [31m639154757[0m.; [2022-12-03 15:58:20.629] [alevinLog] [info] Total [32m5461[0m(has [32m1000[0m low confidence) barcodes; [2022-12-03 15:58:21.139] [alevinLog] [info] Done True Barcode Sampling; [2022-12-03 15:58:23.597] [alevinLog] [warning] Total 56.2839% reads will be thrown away because of noisy Cellular barcodes.; [2022-12-03 15:58:23.987] [alevinLog] [info] Done populating Z matrix; [2022-12-03 15:58:24.080] [alevinLog] [info] Total 188093 CB got sequence corrected; [2022-12-03 15:58:24.122] [alevinLog] [info] Done indexing Barcodes; [2022-12-03 15:58:24.122] [alevinLog] [info] Total Unique barcodes found: 16409283; [2022-12-03 15:58:24.122] [alevinLog] [info] Used Barcodes except Whitelist: 187465; [2022-12-03 15:58:24.389] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2022-12-03 15:58:24.389] [alevinLog] [info] parsing read library format; [2022-12-03 16:17:47.714] [alevinLog] [info] Starting optimizer. [2022-12-03 16:17:47.868] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2022-12-03 16:17:47.868] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 17192510.00 UMI after deduplicating.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 1333800 BiDirected Edges.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 181036 UniDirected Edges.; [2022-12-03 16:18:01.432] [alevinLog] [info] Clearing EqMap; Might take some time.; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting white listing of 5460 cells; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting to make feature Matrix; [2022-12-03 16:18:08.535] [alevinLog] [info] Done making feature Matrix; [2022-12-03 16:18:09.324] [alevinLog] [info] Finished white listing; [2022-12-03 16:18:09.513] [alevinLog] [info] Finished optimizer. Salmon_quant log:; [2022-12-03 15:43:11.767] [jointLo,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/814:3120,optimiz,optimizer,3120,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814,1,['optimiz'],['optimizer']
Performance,"07.542; LOC_Os01g01040.2 2482 250.000 8.005651 138.253; LOC_Os01g01040.3 2583 250.000 9.187142 158.656; LOC_Os01g01050.1 2039 250.000 21.476314 370.883. [2019-03-03 07:14:59.272] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-03-03 07:14:59.272] [jointLog] [info] parsing read library format; [2019-03-03 07:14:59.272] [jointLog] [info] There is 1 library.; [2019-03-03 07:14:59.329] [jointLog] [info] Loading Quasi index; [2019-03-03 07:14:59.329] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 07:15:12.564] [jointLog] [info] done; [2019-03-03 07:15:12.564] [jointLog] [info] Index contained 66,004 targets; [2019-03-03 07:15:14.824] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 07:16:36.263] [jointLog] [info] Thread saw mini-batch with a maximum of 89.90% zero probability fragments; [2019-03-03 07:16:36.295] [jointLog] [info] Thread saw mini-batch with a maximum of 89.70% zero probability fragments; [2019-03-03 07:16:36.305] [jointLog] [info] Thread saw mini-batch with a maximum of 88.36% zero probability fragments; [2019-03-03 07:16:36.311] [jointLog] [info] Thread saw mini-batch with a maximum of 90.16% zero probability fragments; [2019-03-03 07:16:36.341] [jointLog] [info] Thread saw mini-batch with a maximum of 26.54% zero probability fragments; [2019-03-03 07:16:36.391] [jointLog] [info] Computed 58,867 rich equivalence classes for further processing; [2019-03-03 07:16:36.391] [jointLog] [info] Counted 16,8",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:8193,Load,Loading,8193,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['Load'],['Loading']
Performance,"0:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------------------------------; size = 74351806; -----------------------------------------; | Loading reference sequence | Time = 7.0924 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 325.83 us; -----------------------------------------; [2020-05-29 20:14:24.638] [jointLog] [info] done; [2020-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:3283,Load,Loading,3283,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,1,['Load'],['Loading']
Performance,"0] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-08-29 11:28:19.290] [alevinLog] [info] Learned InvCov: 568.346 normfactor: 688.271; [2018-08-29 11:28:19.290] [alevinLog] [info] Total 3385(has 1000 low confidence) barcodes; [2018-08-29 11:28:19.297] [alevinLog] [info] Done True Barcode Sampling; [2018-08-29 11:28:19.433] [alevinLog] [info] Done populating Z matrix; [2018-08-29 11:28:19.437] [alevinLog] [info] Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] Loading Transcript Info ; [2018-08-29 11:30:08.761] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-29 11:30:11.254] [stderrLog] [info] There were 135226 set bits in the bit array; [2018-08-29 11:30:11.311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:3361,Load,Loading,3361,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,1,['Load'],['Loading']
Performance,"0_L002_R2.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-5-11_221020_L002_R2.fastq.gz }; ### [ threads ] => { 100 }; ### [ validateMappings ] => { }; ### [ output ] => { salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant }; Logs will be written to salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant/logs; [2023-08-27 19:59:26.866] [jointLog] [info] setting maxHashResizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; ---------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:10054,Load,Loading,10054,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['Load'],['Loading']
Performance,"0b107b2450d88e8e92fa0f3c06/ACV_REP2_2_val_2.fq.gz }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { ACV_REP2 }; Logs will be written to ACV_REP2/logs; [2023-02-23 09:39:48.709] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-23 09:39:48.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:9350,Load,Loading,9350,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['Load'],['Loading']
Performance,"0m; hits: 66225532; hits per frag: 4.42625[A. [32mprocessed[31m 15500006 [32mfragments[0m; hits: 68431333; hits per frag: 4.42688[A. [32mprocessed[31m 16000002 [32mfragments[0m; hits: 70643320; hits per frag: 4.44249[A. [32mprocessed[31m 16500002 [32mfragments[0m; hits: 72850859; hits per frag: 4.42435[A. [32mprocessed[31m 17500001 [32mfragments[0m; hits: 77275281; hits per frag: 4.43251[A. [32mprocessed[31m 18000005 [32mfragments[0m; hits: 79494713; hits per frag: 4.433[A. [32mprocessed[31m 18500000 [32mfragments[0m; hits: 81710387; hits per frag: 4.43219[A. [32mprocessed[31m 19000001 [32mfragments[0m; hits: 83924289; hits per frag: 4.42804[A. [32mprocessed[31m 19500000 [32mfragments[0m; hits: 86134985; hits per frag: 4.43392[A. [32mprocessed[31m 20000000 [32mfragments[0m; hits: 88347210; hits per frag: 4.42895[A. [32mprocessed[31m 20500003 [32mfragments[0m; hits: 90559781; hits per frag: 4.43081[A. [32mprocessed[31m 21000000 [32mfragments[0m; hits: 92771131; hits per frag: 4.42429. [2018-08-16 19:47:49.632] [jointLog] [info] Computed 260771 rich equivalence classes for further processing; [2018-08-16 19:47:49.632] [jointLog] [info] Counted 19352476 total reads in the equivalence classes ; [2018-08-16 19:47:49.646] [jointLog] [info] Mapping rate = 91.4764%. [2018-08-16 19:47:49.646] [jointLog] [info] finished quantifyLibrary(); [2018-08-16 19:47:49.649] [jointLog] [info] Starting optimizer; /mnt/galaxy/tmp/job_working_directory/000/900/tool_script.sh: line 50: 5733 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxOcc 200 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --vbPrior 0.001; ```<details>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:28938,optimiz,optimizer,28938,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['optimiz'],['optimizer']
Performance,"1.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest conve",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:4022,Load,Loading,4022,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"1.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:2385,Load,Loading,2385,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [joint",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119:1610,load,loading,1610,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119,1,['load'],['loading']
Performance,"1082.; [2019-07-18 14:15:51.553] [alevinLog] [info] Done importing white-list Barcodes; [2019-07-18 14:15:51.853] [alevinLog] [warning] Skipping 575996 Barcodes as no read was mapped; [2019-07-18 14:15:52.078] [alevinLog] [info] Total 161284 white-listed Barcodes; [2019-07-18 14:15:52.259] [alevinLog] [info] Total 5.95793% reads will be thrown away because of noisy Cellular barcodes.; [2019-07-18 14:15:58.709] [alevinLog] [info] Done populating Z matrix; [2019-07-18 14:15:58.741] [alevinLog] [info] Total 56814 CB got sequence corrected; [2019-07-18 14:15:58.750] [alevinLog] [info] Done indexing Barcodes; [2019-07-18 14:15:58.750] [alevinLog] [info] Total Unique barcodes found: 687531; [2019-07-18 14:15:58.750] [alevinLog] [info] Used Barcodes except Whitelist: 44516; [2019-07-18 14:15:58.973] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2019-07-18 14:15:58.973] [alevinLog] [info] parsing read library format; [2019-07-18 14:24:27.923] [alevinLog] [info] Starting optimizer; [2019-07-18 14:24:28.655] [alevinLog] [warning] 24 mitorna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.655] [alevinLog] [info] Total 13 usable mRna genes; [2019-07-18 14:24:28.656] [alevinLog] [warning] 558 ribosomal rna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.656] [alevinLog] [info] Total 0 usable rRna genes; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 4282454.00 UMI after deduplicating.; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 5378060 BiDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [info] Total 958944 UniDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [warning] Skipped 28272 barcodes due to No mapped read; [2019-07-18 14:30:09.552] [alevinLog] [info] Finished optimizer; ```. ## R code (How to Use alevin with Seurat). ```; > library(here); > library(tidyverse); > library(Seurat); > library(tximport); > library(tictoc). > files <- file.path(here(""alevin_output/alevin/quants_mat.gz"")",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/404:1851,optimiz,optimizer,1851,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/404,1,['optimiz'],['optimizer']
Performance,"11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_stri",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:13436,optimiz,optimized,13436,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,2,['optimiz'],['optimized']
Performance,"12,990,838 total reads in the equivalence classes ; [2020-06-13 06:56:12.989] [jointLog] [warning] 0.0736383% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 1. [2020-06-13 06:56:12.989] [jointLog] [info] Number of mappings discarded because of alignment score : 19,645,245,772; [2020-06-13 06:56:12.989] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 2,436,564; [2020-06-13 06:56:12.989] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2020-06-13 06:56:12.989] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 1,448,149; [2020-06-13 06:56:12.989] [jointLog] [info] Mapping rate = 45.5622%. [2020-06-13 06:56:12.989] [jointLog] [info] finished quantifyLibrary(); [2020-06-13 06:56:12.991] [jointLog] [info] Starting optimizer; [2020-06-13 06:56:13.091] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2020-06-13 06:56:13.106] [jointLog] [info] iteration = 0 | max rel diff. = 8178.65; [2020-06-13 06:56:14.511] [jointLog] [info] iteration = 100 | max rel diff. = 17.6849; [2020-06-13 06:56:16.028] [jointLog] [info] iteration = 200 | max rel diff. = 6.46204; [2020-06-13 06:56:17.541] [jointLog] [info] iteration = 300 | max rel diff. = 1.8111; [2020-06-13 06:56:19.027] [jointLog] [info] iteration = 400 | max rel diff. = 12.2108; [2020-06-13 06:56:20.501] [jointLog] [info] iteration = 500 | max rel diff. = 0.616929; [2020-06-13 06:56:21.954] [jointLog] [info] iteration = 600 | max rel diff. = 0.218435; [2020-06-13 06:56:23.439] [jointLog] [info] iteration = 700 | max rel diff. = 0.068711; [2020-06-13 06:56:24.945] [jointLog] [info] iteration = 800 | max rel diff. = 0.044637; [2020-06-13 06:56:26.398] [jointLog] [info] iteration = 900 | max rel diff. = 0.0340291; [2020-06-13 06:56:2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/537:3840,optimiz,optimizer,3840,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537,1,['optimiz'],['optimizer']
Performance,12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size:,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/463:1564,Load,Loading,1564,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463,1,['Load'],['Loading']
Performance,"16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:3218,Load,Loading,3218,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['Load'],['Loading']
Performance,16:33:55.869] [alevinLog] [info] Knee found left boundary at 11740 ; [2018-09-11 16:33:59.242] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-09-11 16:33:59.242] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-09-11 16:33:59.242] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-09-11 16:33:59.358] [alevinLog] [info] Done True Barcode Sampling; [2018-09-11 16:33:59.891] [alevinLog] [info] Done populating Z matrix; [2018-09-11 16:33:59.972] [alevinLog] [info] Done indexing Barcodes; [2018-09-11 16:33:59.972] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were map,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:10976,Load,Loading,10976,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['Load'],['Loading']
Performance,"18-07-26 11:25:30.228] [alevinLog] [info] Knee found left boundary at 202 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Gauss Corrected Boundary at 22 ; [2018-07-26 11:25:31.135] [alevinLog] [info] Learned InvCov: 1044.2 normfactor: 295.235; [2018-07-26 11:25:31.135] [alevinLog] [info] Total 222(has 200 low confidence) barcodes; [2018-07-26 11:25:31.440] [alevinLog] [info] Done True Barcode Sampling; [2018-07-26 11:25:31.789] [alevinLog] [info] Done populating Z matrix; [2018-07-26 11:25:31.793] [alevinLog] [info] Done indexing Barcodes; [2018-07-26 11:25:31.793] [alevinLog] [info] Total Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] Loading Transcript Info ; [2018-07-26 11:26:10.896] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-26 11:26:11.159] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-26 11:26:11.225] [stderrLog] [info] Computing transcript lengths; [2018-07-26 11:26:11.226] [stderrLog] [info] Waiting to finish loading hash; [2018-07-26 11:26:14.654] [stderrLog] [info] Done loading index; [2018-07-26 11:26:14.654] [jointLog] [info] done; [2018-07-26 11:26:14.654] [jointLog] [info] Index contained 203027 targets. Incorrect call for umi extractIncorrect call for umi extract; ```. I traced it back to AlevinUtils.cpp in the source files but could not make sense of it from there. The program will run completely on the same data and library if I change --dropseq to --Chromium, event",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/258:2752,Load,Loading,2752,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258,1,['Load'],['Loading']
Performance,"181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23 20:11:20.618] [jointLog] [info] Index contained 199,612 targets. Segmentation fault: 11; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OSX; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ProductName:	Mac OS X; ProductVersion:	10.11.3; BuildVersion:	15D21. **Additional conte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:2134,Load,Loading,2134,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,1,['Load'],['Loading']
Performance,"19-06-04 15:58:27.594] [alevinLog] [warning] Total 100% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 15:58:27.594] [alevinLog] [info] Done populating Z matrix; [2019-06-04 15:58:27.594] [alevinLog] [warning] 0 Whitelisted Barcodes with 0 frequency; [2019-06-04 15:58:27.594] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [info] Total Unique barcodes found: 5; [2019-06-04 15:58:27.594] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 15:58:27.617] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 15:58:27.617] [alevinLog] [info] parsing read library format; [2019-06-04 15:58:27.617] [jointLog] [info] There is 1 library.; [2019-06-04 15:58:27.750] [jointLog] [info] Loading Quasi index; [2019-06-04 15:58:27.750] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 15:58:27.750] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 15:58:28.626] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 15:58:28.866] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 15:58:28.900] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 15:58:28.922] [stderrLog] [info] Computing transcript lengths; [2019-06-04 15:58:28.922] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 15:58:38.645] [jointLog] [info] done; [2019-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million fragments; processed 5 Million fragments; processed 5 Million fragments; hits: 0, hits per frag: 0. [2019-06-04 15:58:42.486] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369:2392,Load,Loading,2392,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369,1,['Load'],['Loading']
Performance,"1:52.364] [alevinLog] [info] Total 384(has 200 low confidence) barcodes; [2019-06-23 18:11:52.383] [alevinLog] [info] Done True Barcode Sampling; [2019-06-23 18:11:52.489] [alevinLog] [warning] Total 91.1983% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-23 18:11:52.507] [alevinLog] [info] Done populating Z matrix; [2019-06-23 18:11:52.507] [alevinLog] [info] Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi index; [2019-06-23 18:11:53.483] [jointLog] [info] Loading 32-bit quasi index; [2019-06-23 18:11:56.286] [stderrLog] [info] Loading Transcript Info ; [2019-06-23 18:11:57.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-23 18:11:57.409] [stderrLog] [info] There were 184,367 set bits in the bit array; [2019-06-23 18:11:57.434] [stderrLog] [info] Computing transcript lengths; [2019-06-23 18:11:57.434] [stderrLog] [info] Waiting to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: 26644540, hits per frag: 0.249194. [2019-06-23 18:14:43.418] [jointLog] [info] Computed 90,673 rich equivalence classes for further processing; [2019-06-23 18:14:43.418] [jointLog] [info] Counted 5,04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:5210,Load,Loading,5210,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['Load'],['Loading']
Performance,"1:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16:57:31.421] [jointLog] [warning] Found 539897 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 16:57:31.421] [jointLog] [info] Mapping rate = 70.9532%. [2018-12-05 16:57:31.421] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 16:57:35.529] [alevinLog] [info] Starting optimizer. Analyzed 3856 cells (100% of all).; [2018-12-05 17:04:51.878] [alevinLog] [info] Total 47125847 UMI after deduplicating.; [2018-12-05 17:04:51.928] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-05 17:05:04.064] [alevinLog] [info] Starting Import of the gene count matrix.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **Desktop (please complete the following information):**; Ubuntu 14.04 LTS; 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty. **Additional context**; If I include only a subset of the fastq files, the command completes with no error. I have succeeded in running up to 3 of the files (3 *I1*, 3 *I2* and 3 *RA* files), but got the above-mentioned error when running it on 4 or more fastq files. I read that std::bad_alloc was usu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:14198,optimiz,optimizer,14198,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['optimiz'],['optimizer']
Performance,"1_ercc_SIRV.fa \; > -l IU \; > -1 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/64:1375,Load,Loading,1375,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64,1,['Load'],['Loading']
Performance,"2.364] [alevinLog] [warning] Gauss Prediction 13594 Too far from knee prediction skipping it; [2019-06-23 18:11:52.364] [alevinLog] [info] Learned InvCov: 254.933 normfactor: 13034.5; [2019-06-23 18:11:52.364] [alevinLog] [info] Total 384(has 200 low confidence) barcodes; [2019-06-23 18:11:52.383] [alevinLog] [info] Done True Barcode Sampling; [2019-06-23 18:11:52.489] [alevinLog] [warning] Total 91.1983% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-23 18:11:52.507] [alevinLog] [info] Done populating Z matrix; [2019-06-23 18:11:52.507] [alevinLog] [info] Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi index; [2019-06-23 18:11:53.483] [jointLog] [info] Loading 32-bit quasi index; [2019-06-23 18:11:56.286] [stderrLog] [info] Loading Transcript Info ; [2019-06-23 18:11:57.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-23 18:11:57.409] [stderrLog] [info] There were 184,367 set bits in the bit array; [2019-06-23 18:11:57.434] [stderrLog] [info] Computing transcript lengths; [2019-06-23 18:11:57.434] [stderrLog] [info] Waiting to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:5013,Load,Loading,5013,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['Load'],['Loading']
Performance,"2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-11 16:34:30.116] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-11 16:34:30.116] [jointLog] [info] Mapping rate = 0%. [2018-09-11 16:34:30.116] [jointLog] [info] finished quantifyLibrary(); [2018-09-11 16:34:30.156] [alevinLog] [info] Starting optimizer; ```. **Desktop (please complete the following information):**; - OS: CentOS; - x86_64 x86_64 x86_64 GNU/Linux; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	CentOS; Description:	CentOS release 6.9 (Final); Release:	6.9; Codename:	Final",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:12494,optimiz,optimizer,12494,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['optimiz'],['optimizer']
Performance,"21-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 3.165 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 75.428 ms; -----------------------------------------. [2021-09-20 16:22:03.730] [jointLog] [info] done; [2021-09-20 16:22:03.778] [jointLog] [info] Index contained 116,612 targets; [2021-09-20 16:22:03.892] [jointLog] [info] Number of decoys : 66; [2021-09-20 16:22:03.892] [jointLog] [info] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:5197,Load,Loading,5197,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"21-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:2233,Load,Loading,2233,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"21-09-20 22:30:11.442] [alevinLog] [info] Learned InvCov: 796.079 normfactor: 896.047; [2021-09-20 22:30:11.442] [alevinLog] [info] Total ESC[32m310ESC[0m(has ESC[32m201ESC[0m low confidence) barcodes; [2021-09-20 22:30:12.167] [alevinLog] [info] Done True Barcode Sampling; [2021-09-20 22:30:12.316] [alevinLog] [warning] Total 55.6923% reads will be thrown away because of noisy Cellular barcodes.; [2021-09-20 22:30:12.333] [alevinLog] [info] Done populating Z matrix; [2021-09-20 22:30:12.334] [alevinLog] [info] Total 7602 CB got sequence corrected; [2021-09-20 22:30:12.334] [alevinLog] [info] Done indexing Barcodes; [2021-09-20 22:30:12.334] [alevinLog] [info] Total Unique barcodes found: 675135; [2021-09-20 22:30:12.334] [alevinLog] [info] Used Barcodes except Whitelist: 7515; [2021-09-20 22:30:13.043] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-09-20 22:30:13.044] [alevinLog] [info] parsing read library format; [2021-09-20 22:33:09.346] [alevinLog] [info] Starting optimizer. [2021-09-20 22:33:09.516] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-09-20 22:33:09.516] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 46357.00 UMI after deduplicating.; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 2930 BiDirected Edges.; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 3804 UniDirected Edges.; [2021-09-20 22:33:09.576] [alevinLog] [warning] Skipped 21 barcodes due to No mapped read; [2021-09-20 22:33:09.579] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-09-20 22:33:09.590] [alevinLog] [warning] Num Low confidence barcodes too less 186 < 200.Can't performing whitelisting; Skipping; [2021-09-20 22:33:09.591] [alevinLog] [info] Finished optimizer. ```; Then I tried setting `--keepCBFraction 1`. This does decrease the total number of reads being thrown away. However, mapping percenta",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/706:3956,optimiz,optimizer,3956,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/706,1,['optimiz'],['optimizer']
Performance,"221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 320.51 us; -----------------------------------------; [2024-05-03 15:10:04.136] [jointLog] [info] done; [2024-05-03 15:10:04.170] [jointLog] [info] Index contained 147554 targets. [2024-05-03 15:10:05.131] [jointLog] [info] Number of decoys : 61 ; processed 21000000 fragmentsointLog] [info] First decoy index : 147456; hits: 25885546, hits per frag: 1.2683(base) [**no further output**]; ```. **Desktop (please complete the following information):**; - OS: Ubuntu linux. ```; $ uname -a;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:6732,Load,Loading,6732,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['Load'],['Loading']
Performance,"22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_INSTALL_PREFIX:PATH=/gpfs/software/salmon/xeonmax/gcc13.2.0/1.10.3. make clean; make -j 25; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? **1.10.3**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **compiled**. **Expected behavior**; A successful build. **Desktop (please complete the following information):**; - OS: **Rocky Linux 9.4**; - Version: **Linux xm013 5.14.0-427.26.1.el9_4.x86_64 #1 SMP PREEMPT_DYNAMIC Tue Jul 23 16:00:21 UTC 2024 x86_64 x86_6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:3024,load,load,3024,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['load'],['load']
Performance,"23-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivalence classes . [2023-03-17 07:46:19.488] [jointLog] [warning] 0.22783% ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:7640,Load,Loading,7640,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['Load'],['Loading']
Performance,23-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 2.1723 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 2.8044 ms; -----------------------------------------. [2023-11-30 09:37:51.026] [jointLog] [info] done; [2023-11-30 09:37:51.104] [jointLog] [info] Index contained 253166 targets; [2023-11-30 09:37:51.166] [jointLog] [info] Number of decoys : 194; [2023-11-30 09:37:51.166] [jointLog] [info],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:6995,Load,Loading,6995,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"23-11-30 09:38:33.436] [jointLog] [warning] Only 268744 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2023-11-30 09:38:33.436] [jointLog] [info] Mapping rate = 53.7596%. [2023-11-30 09:38:33.436] [jointLog] [info] finished quantifyLibrary(); [2023-11-30 09:38:33.440] [jointLog] [info] Starting optimizer; [2023-11-30 09:38:33.498] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-11-30 09:38:33.511] [jointLog] [info] iteration = 0 | max rel diff. = 101.852; [2023-11-30 09:38:34.853] [jointLog] [info] iteration = 100 | max rel diff. = 0.263537; [2023-11-30 09:38:36.144] [jointLog] [info] iteration = 200 | max rel diff. = 0.0414157; [2023-11-30 09:38:37.438] [jointLog] [info] iteration = 300 | max rel diff. = 1.17048; [2023-11-30 09:38:38.135] [jointLog] [info] iteration = 355 | max rel diff. = 0.00351135; [2023-11-30 09:38:38.148] [jointLog] [info] Finished optimizer; [2023-11-30 09:38:38.148] [jointLog] [info] writing output ; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - Linux r640c10 4.18.0-372.16.1.el8_6.x86_64 #1 SMP Tue Jun 28 03:02:21 EDT 2022 x86_64 GNU/Linux. **Additional context**; Add any other context about the problem here.; The issue is definitely not insufficient memory (>300 GB available). ; Interestingly, the same salmon index was working perfectly until now. I re-created the index to make sure the files were not corrupted somehow but it resulted in the same error. I doubt that this is due to an update in salmon itself, because we have been using the same singularity container for this process for a while, so the same salmon version, same index now producing the error. . For my use case, not using the `--skipQuant` doesn't really cause any p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:9871,optimiz,optimizer,9871,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['optimiz'],['optimizer']
Performance,23-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:3870,Load,Loading,3870,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"24 250.000 0.842494 14.549; LOC_Os01g01040.1 2508 250.000 12.017881 207.542; LOC_Os01g01040.2 2482 250.000 8.005651 138.253; LOC_Os01g01040.3 2583 250.000 9.187142 158.656; LOC_Os01g01050.1 2039 250.000 21.476314 370.883. [2019-03-03 07:14:59.272] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-03-03 07:14:59.272] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-03-03 07:14:59.272] [jointLog] [info] parsing read library format; [2019-03-03 07:14:59.272] [jointLog] [info] There is 1 library.; [2019-03-03 07:14:59.329] [jointLog] [info] Loading Quasi index; [2019-03-03 07:14:59.329] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 07:15:12.564] [jointLog] [info] done; [2019-03-03 07:15:12.564] [jointLog] [info] Index contained 66,004 targets; [2019-03-03 07:15:14.824] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 07:16:36.263] [jointLog] [info] Thread saw mini-batch with a maximum of 89.90% zero probability fragments; [2019-03-03 07:16:36.295] [jointLog] [info] Thread saw mini-batch with a maximum of 89.70% zero probability fragments; [2019-03-03 07:16:36.305] [jointLog] [info] Thread saw mini-batch with a maximum of 88.36% zero probability fragments; [2019-03-03 07:16:36.311] [jointLog] [info] Thread saw mini-batch with a maximum of 90.16% zero probability fragments; [2019-03-03 07:16:36.341] [jointLog] [info] Thread saw mini-batch with a maximum of 26.54% zero probability fragments; [2019-03-03 07:16:36.391] [jointLog] [info] Computed 58,867 rich equivalence classes for further ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:8128,Load,Loading,8128,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['Load'],['Loading']
Performance,"257700 (LWP 27934)]; [New Thread 0x7ff4f7256700 (LWP 27935)]; [Thread 0x7ffb77263700 (LWP 27922) exited]; [Thread 0x7ffa77261700 (LWP 27924) exited]; [Thread 0x7ffaf7262700 (LWP 27923) exited]; [New Thread 0x7ff477255700 (LWP 27936)]; [Thread 0x7ff9f7260700 (LWP 27925) exited]; terminate called without an active exception; [Thread 0x7ff77725b700 (LWP 27930) exited]; [Thread 0x7ff8f725e700 (LWP 27927) exited]. Program received signal SIGABRT, Aborted.; [Switching to Thread 0x7ffcf97e7700 (LWP 27870)]; 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:4199,optimiz,optimized,4199,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['optimiz'],['optimized']
Performance,"260700 (LWP 27925) exited]; terminate called without an active exception; [Thread 0x7ff77725b700 (LWP 27930) exited]; [Thread 0x7ff8f725e700 (LWP 27927) exited]. Program received signal SIGABRT, Aborted.; [Switching to Thread 0x7ffcf97e7700 (LWP 27870)]; 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; 56 ../nptl/sysdeps/unix/sysv/linux/raise.c: No such file or directory.; (gdb) bt; #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<ch",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:4413,optimiz,optimized,4413,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,2,['optimiz'],['optimized']
Performance,"26] [alevinLog] [info] Forcing to use 100000 cells; > [2020-06-03 13:54:43.964] [alevinLog] [info] Throwing 49909 barcodes with < 10 reads; > [2020-06-03 13:54:43.984] [alevinLog] [info] Total 50092(has 201 low confidence) barcodes; > [2020-06-03 13:54:44.191] [alevinLog] [info] Done True Barcode Sampling; > [2020-06-03 13:54:44.285] [alevinLog] [info] Total 1.70493% reads will be thrown away because of noisy Cellular barcodes.; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done populating Z matrix; > [2020-06-03 13:54:45.790] [alevinLog] [info] Total 0 CB got sequence corrected; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done indexing Barcodes; > [2020-06-03 13:54:45.790] [alevinLog] [info] Total Unique barcodes found: 604589; > [2020-06-03 13:54:45.790] [alevinLog] [info] Used Barcodes except Whitelist: 0; > [2020-06-03 13:54:46.493] [jointLog] [info] There is 1 library.; > ; > -----------------------------------------; > [2020-06-03 13:54:46.551] [jointLog] [info] Loading pufferfish index; > [2020-06-03 13:54:46.551] [jointLog] [info] Loading dense pufferfish index.; > [2020-06-03 13:54:46.552] [jointLog] [info] done; > [2020-06-03 13:54:46.552] [jointLog] [info] Index contained 64 targets; > [2020-06-03 13:54:46.552] [jointLog] [info] Number of decoys : 0; > ; > [2020-06-03 13:54:46.493] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; > ; > processed 52 Million fragmentsvinLog] [info] parsing read library format; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:55:42.905] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:55:42.931] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.931] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/531:2338,Load,Loading,2338,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531,1,['Load'],['Loading']
Performance,2:16:37.862] [alevinLog] [info] Total 195(has 201 low confidence) barcodes; [2021-04-09 12:16:37.883] [alevinLog] [info] Done True Barcode Sampling; [2021-04-09 12:16:37.884] [alevinLog] [info] Total 15.7% reads will be thrown away because of noisy Cellular barcodes.; [2021-04-09 12:16:37.892] [alevinLog] [info] Done populating Z matrix; [2021-04-09 12:16:37.892] [alevinLog] [info] Total 0 CB got sequence corrected; [2021-04-09 12:16:37.892] [alevinLog] [info] Done indexing Barcodes; [2021-04-09 12:16:37.892] [alevinLog] [info] Total Unique barcodes found: 822; [2021-04-09 12:16:37.892] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2021-04-09 12:16:37.914] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-04-09 12:16:37.914] [alevinLog] [info] parsing read library format; [2021-04-09 12:16:37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading pufferfish index; [2021-04-09 12:16:38.027] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; --------------------------,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:4167,Load,Loading,4167,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['Load'],['Loading']
Performance,"311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-29 11:33:18.039] [jointLog] [info] Mapping rate = 43.5974%. [2018-08-29 11:33:18.039] [jointLog] [info] finished quantifyLibrary(); Analyzed 14 cells (0% of all).vinLog] [info] Starting optimizer; ......; ......; Analyzed 544 cells (16% of all). ERROR: cell doesn't have any read count; ------------------------------------------------------------; Sender: LSF System <lsf@ebi5-164>; Subject: Job 9248384: <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> in cluster <EBI> Exited. Job <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> was submitted from host <ebi-login-001> by user <mahogny> in cluster <EBI>.; Job was executed on host(s) <10*ebi5-164>, in queue <research-rh7>, as user <mahogny> in cluster <EBI>.; </homes/mahogny> was used as the home directory.; </homes/mahogny/com",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:4718,optimiz,optimizer,4718,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,1,['optimiz'],['optimizer']
Performance,"35.112] [alevinLog] [info] Total 49.4292% reads will be thrown away because of noisy Cellular barcodes.; [2019-01-29 15:49:35.112] [alevinLog] [info] Total 4000(has 1000 low confidence) barcodes; [2019-01-29 15:49:35.251] [alevinLog] [info] Done True Barcode Sampling; [2019-01-29 15:49:35.896] [alevinLog] [info] Done populating Z matrix; [2019-01-29 15:49:35.994] [alevinLog] [info] Done indexing Barcodes; [2019-01-29 15:49:35.994] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-29 15:49:35.994] [alevinLog] [info] Used Barcodes except Whitelist: 105901; [2019-01-29 15:49:36.107] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-29 15:49:36.107] [alevinLog] [info] parsing read library format; [2019-01-29 15:49:36.415] [stderrLog] [info] Loading Suffix Array; [2019-01-29 15:49:36.107] [jointLog] [info] There is 1 library.; [2019-01-29 15:49:36.373] [jointLog] [info] Loading Quasi index; [2019-01-29 15:49:36.396] [jointLog] [info] Loading 32-bit quasi index; [2019-01-29 15:49:50.479] [stderrLog] [info] Loading Transcript Info; [2019-01-29 15:49:55.550] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-01-29 15:49:56.036] [stderrLog] [info] There were 58,086 set bits in the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Found 21006 reads with `N` in the UMI sequence and ignored the reads.; P",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:1434,Load,Loading,1434,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['Load'],['Loading']
Performance,"35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; -----------------------------------------; | Loading positions | Time = 14.838 s; -----------------------------------------; size = 3401221626; -----------------------------------------; | Loading reference sequence | Time = 1.1113 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 9.0843 ms; -----------------------------------------. [2020-08-13 09:36:14.700] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/560:2058,Load,Loading,2058,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560,1,['Load'],['Loading']
Performance,"3] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------------------------------; size = 74351806; -----------------------------------------; | Loading reference sequence | Time = 7.0924 ms; -----------------------------------------; -",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:3021,Load,Loading,3021,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,2,['Load'],['Loading']
Performance,"4	0; True junctions count = 472636; False junctions count = 799354; Hash table size = 1271990; Candidate marks count = 5149133; --------------------------------------------------------------------------------; Reallocating bifurcations time: 0; True marks count: 3362277; Edges construction time: 4; --------------------------------------------------------------------------------; Distinct junctions = 472636. allowedIn: 21; Max Junction ID: 563055; seen.size():4504449 kmerInfo.size():563056; approximateContigTotalLength: 72618120; counters for complex kmers:; (prec>1 & succ>1)=21819 | (succ>1 & isStart)=419 | (prec>1 & isEnd)=421 | (isStart & isEnd)=30; contig count: 717834 element count: 122492815 complex nodes: 22689; # of ones in rank vector: 717833; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2021-08-20 18:05:53.542] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory indexs/alt_long_index; size = 122492815; -----------------------------------------; | Loading contigs | Time = 11.032 ms; -----------------------------------------; size = 122492815; -----------------------------------------; | Loading contig boundaries | Time = 5.8509 ms; -----------------------------------------; Number of ones: 717833; Number of ones per inventory item: 512; Inventory entries filled: 1403; 717833; [2021-08-20 18:05:53.775] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2021-08-20 18:05:53.780] [puff::index::jointLog] [info] contig count for validation: 717,833; [2021-08-20 18:05:53.943] [puff::index::jointLog] [info] Total # of Contigs : 717,833; [2021-08-20 18:05:53.944] [puff::index::jointLog] [info] Total # of numerical Contigs : 717,833; [2021-08-20 18:05:53.963] [puff::index::jointLog] [info] Total # of contig vec entries: 3,341,414; [2021-08-20 18:05:53.964] [puff::index::jointLog] [info] bits per offset entry 22; [2021-08-20 18:05:54.03",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:4497,Load,Loading,4497,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['Load'],['Loading']
Performance,"4 15:58:27.583] [alevinLog] [info] Total 0 white-listed Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [warning] Total 100% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 15:58:27.594] [alevinLog] [info] Done populating Z matrix; [2019-06-04 15:58:27.594] [alevinLog] [warning] 0 Whitelisted Barcodes with 0 frequency; [2019-06-04 15:58:27.594] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [info] Total Unique barcodes found: 5; [2019-06-04 15:58:27.594] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 15:58:27.617] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 15:58:27.617] [alevinLog] [info] parsing read library format; [2019-06-04 15:58:27.617] [jointLog] [info] There is 1 library.; [2019-06-04 15:58:27.750] [jointLog] [info] Loading Quasi index; [2019-06-04 15:58:27.750] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 15:58:27.750] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 15:58:28.626] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 15:58:28.866] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 15:58:28.900] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 15:58:28.922] [stderrLog] [info] Computing transcript lengths; [2019-06-04 15:58:28.922] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 15:58:38.645] [jointLog] [info] done; [2019-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million fragments; processed 5 Million fragments; processed 5 Million fragments; hits: 0, hits per frag: 0. [2019-06-04 15:58:42.486] [jointLog] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369:2324,Load,Loading,2324,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369,1,['Load'],['Loading']
Performance,"4%. [2018-08-29 11:33:18.039] [jointLog] [info] finished quantifyLibrary(); Analyzed 14 cells (0% of all).vinLog] [info] Starting optimizer; ......; ......; Analyzed 544 cells (16% of all). ERROR: cell doesn't have any read count; ------------------------------------------------------------; Sender: LSF System <lsf@ebi5-164>; Subject: Job 9248384: <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> in cluster <EBI> Exited. Job <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> was submitted from host <ebi-login-001> by user <mahogny> in cluster <EBI>.; Job was executed on host(s) <10*ebi5-164>, in queue <research-rh7>, as user <mahogny> in cluster <EBI>.; </homes/mahogny> was used as the home directory.; </homes/mahogny/common/data/henrikson_celsee_20180825> was used as the working directory.; Started at Wed Aug 29 11:26:42 2018; Results reported at Wed Aug 29 11:33:22 2018. Your job looked like:. ------------------------------------------------------------; # LSBATCH: User input; ./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv; ------------------------------------------------------------. Exited with exit code 1. Resource usage summary:. CPU time : 306.36 sec.; Max Memory : 4490 MB; Average Memory : 2219.44 MB; Total Requested Memory : 30000.00 MB; Delta Memory : 25510.00 MB; (Delta: the difference between total requested memory and actual max usage.); Max Swap : 6420 MB. Max Processes : 3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:5584,queue,queue,5584,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,1,['queue'],['queue']
Performance,"4507; [2021-06-07 21:05:23.304] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.109772; [2021-06-07 21:05:23.469] [jointLog] [info] iteration = 1,711 | max rel diff. = 0.00699727; [2021-06-07 21:05:23.499] [jointLog] [info] finished optimizer; [2021-06-07 21:05:23.499] [jointLog] [info] writing output; [2021-06-07 21:05:23.829] [jointLog] [info] Staring Bootstrapping; [2021-06-07 21:05:23.962] [jointLog] [info] Will draw 30 bootstrap samples; [2021-06-07 21:05:23.962] [jointLog] [info] Optimizing over 430,852 equivalence classes; ```. `-l ISF`:; ```; Completed first pass through the alignment file.; Total # of mapped reads : 30,418,756; # of uniquely mapped reads : 8,515,058; # ambiguously mapped reads : 21,903,698; [2021-06-08 03:44:49.444] [jointLog] [info] Computed 430,882 rich equivalence classes for further processing; [2021-06-08 03:44:49.444] [jointLog] [info] Counted 29,619,881 total reads in the equivalence classes; [2021-06-08 03:44:49.445] [jointLog] [info] starting optimizer; [2021-06-08 03:44:49.599] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-06-08 03:44:49.615] [jointLog] [info] iteration = 0 | max rel diff. = 5827.73; [2021-06-08 03:44:51.123] [jointLog] [info] iteration = 100 | max rel diff. = 17.6527; [2021-06-08 03:44:52.620] [jointLog] [info] iteration = 200 | max rel diff. = 20.0555; [2021-06-08 03:44:54.133] [jointLog] [info] iteration = 300 | max rel diff. = 2.81129; [2021-06-08 03:44:55.641] [jointLog] [info] iteration = 400 | max rel diff. = 12.4174; [2021-06-08 03:44:57.128] [jointLog] [info] iteration = 500 | max rel diff. = 0.464718; [2021-06-08 03:44:58.630] [jointLog] [info] iteration = 600 | max rel diff. = 1.03722; [2021-06-08 03:45:00.132] [jointLog] [info] iteration = 700 | max rel diff. = 0.109768; [2021-06-08 03:45:01.617] [jointLog] [info] iteration = 800 | max rel diff. = 1.21662; [2021-06-08 03:45:03.120] [jointLog] [info] iteration = 900 | max rel diff. = 3.66627; [2021-06-08 03:45:04.6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/669:5089,optimiz,optimizer,5089,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669,1,['optimiz'],['optimizer']
Performance,"450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:3881,Load,Loading,3881,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['Load'],['Loading']
Performance,"51749 / 267548197.; [2018-12-05 15:12:25.126] [alevinLog] [info] Knee found left boundary at 11954 ; [2018-12-05 15:12:27.371] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-12-05 15:12:27.371] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-12-05 15:12:27.371] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-12-05 15:12:27.494] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 15:12:27.880] [alevinLog] [info] Done populating Z matrix; [2018-12-05 15:12:27.952] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 15:12:27.952] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 15:12:30.141] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 15:12:30.181] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:7006,Load,Loading,7006,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['Load'],['Loading']
Performance,"563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading reference sequence | Time = 681.27 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 21.142 ms; -----------------------------------------; [2024-11-01 05:14:22.991] [jointLog] [info] done; [2024-11-01 05:14:23.016] [jointLog] [info] Index contained 252,149 targets. [2024-11-01 05:14:24.607] [jointLog] [info] Number of decoys : 194; [2024-11-01 05:14:24.607] [jointLog] [info] First decoy index : 251,913 ; [2024-11-01 05:14:29.425] [jointLog] [info] Automatically detected most likely library type as ISR. [A. [32mprocessed[31m 500,000 [32mfragments[0m; hits: 216,939, h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:3655,Load,Loading,3655,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['Load'],['Loading']
Performance,"5:58:27.617] [jointLog] [info] There is 1 library.; [2019-06-04 15:58:27.750] [jointLog] [info] Loading Quasi index; [2019-06-04 15:58:27.750] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 15:58:27.750] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 15:58:28.626] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 15:58:28.866] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 15:58:28.900] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 15:58:28.922] [stderrLog] [info] Computing transcript lengths; [2019-06-04 15:58:28.922] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 15:58:38.645] [jointLog] [info] done; [2019-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million fragments; processed 5 Million fragments; processed 5 Million fragments; hits: 0, hits per frag: 0. [2019-06-04 15:58:42.486] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2019-06-04 15:58:42.487] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2019-06-04 15:58:42.487] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-04 15:58:42.508] [jointLog] [info] Mapping rate = 0%. [2019-06-04 15:58:42.508] [jointLog] [info] finished quantifyLibrary(); [2019-06-04 15:58:42.519] [alevinLog] [info] Starting optimizer. [2019-06-04 15:58:43.232] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-06-04 15:58:43.232] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-06-04 15:58:43.237] [alevinLog] [info] Tota",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369:2914,load,loading,2914,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369,1,['load'],['loading']
Performance,"5a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:3954,Load,Loading,3954,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['Load'],['Loading']
Performance,"6125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. **Desktop (please complete the following information):**. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. **Additional context**; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/317:2154,Load,Loading,2154,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317,4,"['Load', 'load']","['Loading', 'loading']"
Performance,"6665; [2021-01-25 16:27:07.414] [alevinLog] [info] Used Barcodes except Whitelist: 3667; [2021-01-25 16:27:07.498] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-25 16:27:07.498] [alevinLog] [info] parsing read library format; [2021-01-25 16:30:54.542] [alevinLog] [info] Starting optimizer; [2021-01-25 16:30:54.782] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-01-25 16:30:54.782] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 1350278.00 UMI after deduplicating.; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 30909 BiDirected Edges.; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 8817 UniDirected Edges.; [2021-01-25 16:30:55.969] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-01-25 16:30:56.294] [alevinLog] [warning] Num High confidence barcodes too less 20 < 90.Can't performing whitelisting; Skipping; [2021-01-25 16:30:56.297] [alevinLog] [info] Finished optimizer. ### with `--exceptCells 7000`; > [2021-01-21 09:24:45.891] [alevinLog] [info] Found 43030 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); [2021-01-21 09:24:45.942] [alevinLog] [info] Filled with 43030 txp to gene entries; [2021-01-21 09:24:45.947] [alevinLog] [info] Found all transcripts to gene mappings; [2021-01-21 09:24:45.967] [alevinLog] [info] Processing barcodes files (if Present); [2021-01-21 09:33:35.885] [alevinLog] [info] Done barcode density calculation.; [2021-01-21 09:33:35.885] [alevinLog] [info] # Barcodes Used: 188934609 / 188934609.; [2021-01-21 09:33:37.337] [alevinLog] [info] Total 10016(has 1000 low confidence) barcodes; [2021-01-21 09:33:38.202] [alevinLog] [info] Done True Barcode Sampling; [2021-01-21 09:33:39.137] [alevinLog] [warning] Total **52.0343% reads will be thrown away** because of noisy Cellular barcodes.; [2021-01-21 09:33:39.960] [alevinLog] [info] Done ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/620:4987,perform,performing,4987,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620,1,['perform'],['performing']
Performance,"69.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size: 6442721444>6442720932; ...; ```. The index does not finish loading, and so salmon does not enter read quantification routines. **To Reproduce**. * ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/463:1708,Load,Loading,1708,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463,1,['Load'],['Loading']
Performance,"709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] done; ```; (taken from the terminal as the logfile is empty, and the current time is 12:54 pm = >3 hr run time so far). **To Reproduce**; I ran the following command:. ```; salmon quant \; --geneMap Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:10157,Load,Loading,10157,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['Load'],['Loading']
Performance,"7:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivalence classes . [2023-03-17 07:46:19.488] [jointLog] [warning] 0.22783% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smalle",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:7779,Load,Loading,7779,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['Load'],['Loading']
Performance,"8.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 3.165 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 75.428 ms; -----------------------------------------. [2021-09-20 16:22:03.730] [jointLog] [info] done; [2021-09-20 16:22:03.778] [jointLog] [info] Index contained 116,612 targets; [2021-09-20 16:22:03.892] [jointLog] [info] Number of decoys : 66; [2021-09-20 16:22:03.892] [jointLog] [info] First decoy index : 116,507 ; [2021-09-20 16:22:04.460] [jointLog] [info] Automatically detected most likely library type as U; processed 37,000,000 fragments; hits: 117,167,504; hits per frag: 3.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:5349,Load,Loading,5349,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"8.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; -----------------------------------------; | Loading positions | Time = 14.838 s; -----------------------------------------; size = 3401221626; -----------------------------------------; | Loading reference sequence | Time = 1.1113 s; -----------------------------------------; -----------------------------------------; | Loading reference ac",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/560:1924,Load,Loading,1924,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560,1,['Load'],['Loading']
Performance,8.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 2.1723 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 2.8044 ms; -----------------------------------------. [2023-11-30 09:37:51.026] [jointLog] [info] done; [2023-11-30 09:37:51.104] [jointLog] [info] Index contained 253166 targets; [2023-11-30 09:37:51.166] [jointLog] [info] Number of decoys : 194; [2023-11-30 09:37:51.166] [jointLog] [info] First decoy index : 252924 ; [2023-11-30 09:37:54.100] [jointLog] [info] Automatically detected most likely library type as ISR. [2023-11-30 09:38:33.382] [jointLog] [info] Thread saw mini-batch w,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:7147,Load,Loading,7147,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; -----------------------------------------; size = 2139249936; -----------------------------------------; | Loading reference sequence | Time = 408.65 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 48.085 ms; -----------------------------------------; Exception : [boost::filesystem::status: File name too long: ""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_33-41/33-41_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_32-40/32-40_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_38-45_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_30-38/30-38_221020_L002_R1.fastq",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:11009,Load,Loading,11009,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['Load'],['Loading']
Performance,"9-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million fragments; processed 5 Million fragments; processed 5 Million fragments; hits: 0, hits per frag: 0. [2019-06-04 15:58:42.486] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2019-06-04 15:58:42.487] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2019-06-04 15:58:42.487] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-04 15:58:42.508] [jointLog] [info] Mapping rate = 0%. [2019-06-04 15:58:42.508] [jointLog] [info] finished quantifyLibrary(); [2019-06-04 15:58:42.519] [alevinLog] [info] Starting optimizer. [2019-06-04 15:58:43.232] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-06-04 15:58:43.232] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-06-04 15:58:43.237] [alevinLog] [info] Total 0.00 UMI after deduplicating.; [2019-06-04 15:58:43.237] [alevinLog] [info] Total 0 BiDirected Edges.; [2019-06-04 15:58:43.237] [alevinLog] [info] Total 0 UniDirected Edges.; [2019-06-04 15:58:43.259] [alevinLog] [info] Finished optimizer; Floating point exception (core dumped); ```. Alevin fails to read the barcode, or something like that, from the whitelist, and there are no reads to be processed. If instead of running the `--whitelist` command I run the `--expectCells 50` command, the results are these:. ```; [2019-06-04 16:33:41.634] [alevinLog] [info] Found all transcripts to gene mappings; [2019-06-04 16:33:41.650] [alevinLog] [info] Processing barcodes files (if Present) . ; process",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369:3803,optimiz,optimizer,3803,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369,1,['optimiz'],['optimizer']
Performance,": 713.683 normfactor: 1183.93; [2018-09-11 16:33:59.242] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-09-11 16:33:59.358] [alevinLog] [info] Done True Barcode Sampling; [2018-09-11 16:33:59.891] [alevinLog] [info] Done populating Z matrix; [2018-09-11 16:33:59.972] [alevinLog] [info] Done indexing Barcodes; [2018-09-11 16:33:59.972] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-11 16:34:30.116] [jointLog] [warning] Something seems to be wrong w",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:11182,Load,Loading,11182,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['Load'],['Loading']
Performance,": 713.683 normfactor: 1183.93; [2018-12-05 15:12:27.371] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-12-05 15:12:27.494] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 15:12:27.880] [alevinLog] [info] Done populating Z matrix; [2018-12-05 15:12:27.952] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 15:12:27.952] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 15:12:30.141] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 15:12:30.181] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counted 163,106,139 total reads in the equivalence classes ; [2018-12-05 15:45:46.199] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 15",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:7248,Load,Loading,7248,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['Load'],['Loading']
Performance,": Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21 10:00:40.560] [jointLog] [info] Index contained 35448 targets. terminate called after throwing an instance of 'terminate called recursively; std::length_error'; ```. Best,; Alex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/210:1329,Load,Loading,1329,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210,7,"['Load', 'load']","['Loading', 'loading']"
Performance,":35.455] [alevinLog] [info] Total Unique barcodes found: 604589; > [2020-06-03 13:48:35.455] [alevinLog] [info] Used Barcodes except Whitelist: 4282; > [2020-06-03 13:48:35.558] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; > ...; > processed 52 Million fragments; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:49:37.892] [jointLog] [info] Computed 0 rich equivalence classes for further processing; > [2020-06-03 13:49:37.892] [jointLog] [info] Counted 0 total reads in the equivalence classes ; > [2020-06-03 13:49:37.893] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2020-06-03 13:49:37.893] [jointLog] [warning] Found 370 reads with `N` in the UMI sequence and ignored the reads.; > Please report on github if this number is too large; > [2020-06-03 13:49:37.893] [jointLog] [info] Mapping rate = 0%; > ; > [2020-06-03 13:49:37.893] [jointLog] [info] finished quantifyLibrary(); > [2020-06-03 13:49:37.899] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:49:38.613] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:49:38.613] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:49:38.614] [alevinLog] [info] Total 0 UniDirected Edges.; > [2020-06-03 13:49:38.614] [alevinLog] [warning] Skipped 348 barcodes due to No mapped read; > [2020-06-03 13:49:38.614] [alevinLog] [info] Clearing EqMap; Might take some time.; > [2020-06-03 13:49:38.620] [alevinLog] [warning] Num Low confidence barcodes too less 1 < 200.Can't performing whitelisting; Skipping; > [2020-06-03 13:49:38.620] [alevinLog] [info] Finished optimizer; > Floating point exception (core dumped); > `. Any suggestions on how to get this working are highly appreciated!. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/531:6334,optimiz,optimizer,6334,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531,3,"['optimiz', 'perform']","['optimizer', 'performing']"
Performance,":37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading pufferfish index; [2021-04-09 12:16:38.027] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.9587 ms; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2021-04-09 12:16:41.658] [jointLog] [info] Index contained 45,375 targets; [2021-04-09 12:16:41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] First decoy index : 45,374. [2021-04-09 12:16:42.811] [alevinLog] [info] Starting optimizer. [2021-04-09 12:16:42.800] [jointLog] [info] Computed 84 rich equivalence classes for further processing; [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:5047,Load,Loading,5047,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['Load'],['Loading']
Performance,":54.759] [jointLog] [info] setting maxHashResizeThreads to 20; [2021-05-20 10:53:54.760] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-20 10:53:54.760] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-20 10:53:54.760] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:1981,Load,Loading,1981,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['Load'],['Loading']
Performance,; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag: 5.08859[A. [32mprocessed[31m 1000002 [32mfragments[0m; hits: 4422312; hits per frag: 4.78092[A. [32mprocessed[31m 1500006 [32mfragments[0m; hits: 6635818; hits per frag: 4.69843[A. [32mprocessed[31m 2000001 [32mfragments[0m; hits: 8846970; hits per frag: 4.55737[A. [32mprocessed[31m 2500021 [32mfragments[0m; hits: 11062734; hits per frag: 4.49592[A. [32mprocessed[31m 30,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:24252,Load,Loading,24252,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['Load'],['Loading']
Performance,"; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; --------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:2926,Load,Loading,2926,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['Load'],['Loading']
Performance,"; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias. **Steps and data to reproduce the behavior: for version 0.12**; module load Cufflinks/2.2.1; gffread MSU7_all.gff3 -g all.chrs.fasta -w MSU7_newtranscript.fasta. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.12.0-IGB-gcc-8.2.0. salmon index -t ~/data/genome/MSU7_newtranscript.fasta -i ~/data/genome/MSU7new_transcript.index --type quasi -k 31. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias --validateMappings. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon/0.8.2-IGB-gcc-4.9.4-Python",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:3243,load,load,3243,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['load'],['load']
Performance,"; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report.**. [2016-07-11 09:52:39.858] [jointLog] [info] Mapping rate = 0%. [2016-07-11 09:52:39.858] [jointLog] [info] finished quantifyLibrary(); [2016-07-11 09:52:39.858] [jointLog] [info] Starting optimizer; [2016-07-11 09:52:39.894] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-07-11 09:52:39.895] [jointLog] [info] iteration = 0 | max rel diff. = -1.79769e+308; [2016-07-11 09:52:39.921] [jointLog] [info] iteration = 50 | max rel diff. = -1.79769e+308; [2016-07-11 09:52:39.932] [jointLog] [info] Finished optimizer; [2016-07-11 09:52:39.932] [jointLog] [info] writing output ; ```. I am not exactly sure where the problem is. The output file is created, but all the transcripts are '0'. Any ideas, what was done wrong?. thanks. Assa. PS.; this is how I have indexed the data. `salmon index -t Homo_sapiens.GRCh38.rel79.cdna.all.fa -i Homo_sapiens.GRCh38.rel79 --type quasi -k 31 -p 24`. it is is also important.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/65:2365,optimiz,optimizer,2365,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65,2,['optimiz'],['optimizer']
Performance,"; [2019-06-23 18:11:52.383] [alevinLog] [info] Done True Barcode Sampling; [2019-06-23 18:11:52.489] [alevinLog] [warning] Total 91.1983% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-23 18:11:52.507] [alevinLog] [info] Done populating Z matrix; [2019-06-23 18:11:52.507] [alevinLog] [info] Done indexing Barcodes; [2019-06-23 18:11:52.507] [alevinLog] [info] Total Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi index; [2019-06-23 18:11:53.483] [jointLog] [info] Loading 32-bit quasi index; [2019-06-23 18:11:56.286] [stderrLog] [info] Loading Transcript Info ; [2019-06-23 18:11:57.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-23 18:11:57.409] [stderrLog] [info] There were 184,367 set bits in the bit array; [2019-06-23 18:11:57.434] [stderrLog] [info] Computing transcript lengths; [2019-06-23 18:11:57.434] [stderrLog] [info] Waiting to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: 26644540, hits per frag: 0.249194. [2019-06-23 18:14:43.418] [jointLog] [info] Computed 90,673 rich equivalence classes for further processing; [2019-06-23 18:14:43.418] [jointLog] [info] Counted 5,043,781 total reads in the equivalence classes ; [2019-06-23 18:14:43.419]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:5283,Load,Loading,5283,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['Load'],['Loading']
Performance,"; [2021-04-20 10:11:46.842] [jointLog] [info] iteration = 1,000 | max rel diff. = 2.40606; [2021-04-20 10:11:47.548] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.715333; [2021-04-20 10:11:48.250] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.181266; [2021-04-20 10:11:48.938] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.152511; [2021-04-20 10:11:49.636] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.11611; [2021-04-20 10:11:50.315] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.482892; [2021-04-20 10:11:51.013] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0388567; [2021-04-20 10:11:51.673] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.518366; [2021-04-20 10:11:52.333] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.117083; [2021-04-20 10:11:53.007] [jointLog] [info] iteration = 1,900 | max rel diff. = 0.306961; [2021-04-20 10:11:53.694] [jointLog] [info] iteration = 2,000 | max rel diff. = 0.078216; [2021-04-20 10:11:54.354] [jointLog] [info] iteration = 2,100 | max rel diff. = 1.17575; [2021-04-20 10:11:54.521] [jointLog] [info] iteration = 2,125 | max rel diff. = 0.00514978; [2021-04-20 10:11:54.541] [jointLog] [info] Finished optimizer; [2021-04-20 10:11:54.541] [jointLog] [info] writing output. [2021-04-20 10:11:54.750] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-20 10:11:54.845] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-20 10:11:54.846] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-20 10:11:55.040] [jointLog] [info] Aggregating expressions to gene level; [2021-04-20 10:11:55.126] [jointLog] [info] done; ````. So, are there some bugs in version 0.14.1 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:8780,optimiz,optimizer,8780,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,1,['optimiz'],['optimizer']
Performance,"; observed = }; Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:observed = Library format { type: }; paired endLibrary format { type:paired end, relative orientation:, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:observed = inward, strandedness:(antisense, sense) }; (antisense, sense) }paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense)expected = Library format { type:Library format { type:; }paired endpaired endexpected = Library format { type:paired end, relative orientation:; , relative orientation:inwardinward, strandedness:(sense, antisense)observed = , strandedness:(antisense, sense) }; }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }expected = Library format { type:, relative orientation:Library format { type:paired end; ```. and so on... It seems that the [`LibraryFormat` class](https://github.com/COMBINE-lab/salmon/blob/a6a4fe0dcf71674a59eb901d5ec6933df40de7f2/src/LibraryFormat.cpp#L52) is performing this check, and that the string format method is producing all of this output on stderr. . I believe that the Salmon index I'm using contains some transcript sequences from the ""wrong"" strand, and it would be helpful if the program gave information about the observed mapping (maybe just the transcript sequence ID) so that I could track down the error during index generation. . It also seems that all of the above error output contains no line terminators, although maybe this has been fixed in a more recent version. ```; -bash-4.1$ salmon --version; version : 0.4.0; ```. cc @jmerkin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/16:2078,perform,performing,2078,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/16,1,['perform'],['performing']
Performance,"; salmon quant -p 16 --biasCorrect --libType IU -i ~./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ --numBootstraps 100 -o $base <(zcat ${base}_1.fastq.gz ) <(zcat ${base}_2.fastq.gz); Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0 ; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/65:1092,Load,Loading,1092,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65,1,['Load'],['Loading']
Performance,"= 5315.17; [2020-09-05 17:54:33.041] [jointLog] [info] iteration = 100 | max rel diff. = 19.0781; [2020-09-05 17:55:12.013] [jointLog] [info] iteration = 200 | max rel diff. = 14.788; [2020-09-05 17:55:49.642] [jointLog] [info] iteration = 300 | max rel diff. = 1.29965; [2020-09-05 17:56:27.111] [jointLog] [info] iteration = 400 | max rel diff. = 12.8157; [2020-09-05 17:57:04.974] [jointLog] [info] iteration = 500 | max rel diff. = 5.26288; [2020-09-05 17:57:42.449] [jointLog] [info] iteration = 600 | max rel diff. = 3.19907; [2020-09-05 17:58:19.892] [jointLog] [info] iteration = 700 | max rel diff. = 1.79807; [2020-09-05 17:58:57.376] [jointLog] [info] iteration = 800 | max rel diff. = 3.00673; [2020-09-05 17:59:35.303] [jointLog] [info] iteration = 900 | max rel diff. = 0.498694; [2020-09-05 18:00:12.798] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.426497; [2020-09-05 18:00:51.071] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0656976; [2020-09-05 18:01:28.449] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.066711; [2020-09-05 18:02:05.812] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0878689; [2020-09-05 18:02:43.251] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.136252; [2020-09-05 18:03:20.628] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.086622; [2020-09-05 18:03:58.141] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.294687; [2020-09-05 18:04:36.652] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.0428479; [2020-09-05 18:05:14.956] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.207862; [2020-09-05 18:05:53.140] [jointLog] [info] iteration = 1,900 | max rel diff. = 0.0591381; [2020-09-05 18:06:05.915] [jointLog] [info] iteration = 1,935 | max rel diff. = 0.00844302; [2020-09-05 18:06:05.977] [jointLog] [info] Finished optimizer; [2020-09-05 18:06:05.977] [jointLog] [info] writing output ; ```. Any suggestions or ideas to increase my mapping rate would be much appreciated!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/571:5645,optimiz,optimizer,5645,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571,1,['optimiz'],['optimizer']
Performance,"=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<ch",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:13196,optimiz,optimized,13196,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,2,['optimiz'],['optimized']
Performance,"=========; Observed 42829220 total fragments (42829220 in most recent round). [2022-05-13 03:02:14.185] [jointLog] [info] Computed 384,282 rich equivalence classes for further processing; [2022-05-13 03:02:14.185] [jointLog] [info] Counted 27,069,942 total reads in the equivalence classes ; [2022-05-13 03:02:14.202] [jointLog] [info] Number of mappings discarded because of alignment score : 262,747,517; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 2,776,678; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2022-05-13 03:02:14.202] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 1,099,008; [2022-05-13 03:02:14.202] [jointLog] [info] Mapping rate = 63.2044%. [2022-05-13 03:02:14.202] [jointLog] [info] finished quantifyLibrary(); [2022-05-13 03:02:14.226] [jointLog] [info] Starting optimizer; [2022-05-13 03:02:14.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2022-05-13 03:02:14.325] [jointLog] [info] iteration = 0 | max rel diff. = 10590.7; [2022-05-13 03:02:15.594] [jointLog] [info] iteration = 100 | max rel diff. = 16.0264; [2022-05-13 03:02:16.882] [jointLog] [info] iteration = 200 | max rel diff. = 7.78855; [2022-05-13 03:02:18.217] [jointLog] [info] iteration = 300 | max rel diff. = 1.68712; [2022-05-13 03:02:19.507] [jointLog] [info] iteration = 400 | max rel diff. = 5.00889; [2022-05-13 03:02:20.812] [jointLog] [info] iteration = 500 | max rel diff. = 10.9087; [2022-05-13 03:02:22.073] [jointLog] [info] iteration = 600 | max rel diff. = 0.162723; [2022-05-13 03:02:23.316] [jointLog] [info] iteration = 700 | max rel diff. = 0.125884; [2022-05-13 03:02:24.647] [jointLog] [info] iteration = 800 | max rel diff. = 0.611449; [2022-05-13 03:02:26.020] [jointLog] [info] iteration = 900 | max rel diff. = 0.0687607; [2022-05-13 03:02:2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/775:1640,optimiz,optimizer,1640,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/775,1,['optimiz'],['optimizer']
Performance,"=> { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; ---------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:5847,Load,Loading,5847,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['Load'],['Loading']
Performance,"> { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; --------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:2770,Load,Loading,2770,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['Load'],['Loading']
Performance,"> { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivale",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:7567,Load,Loading,7567,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['Load'],['Loading']
Performance,"> { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salmon ERROR code 137; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:4376,Load,Loading,4376,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['Load'],['Loading']
Performance,"?**; No; **Describe the bug**; Running salmon 0.11.3, quasi mode, with 192M of ram.; Salmon quasi mode aborted with following message:; processed 14,000,000 fragmentsntLog] [info] Automatically detected most likely library type as SR; hits: 108,161,934; hits per frag: 8.53594terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; This happens when using a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; Al",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/304:1072,Load,Loading,1072,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304,1,['Load'],['Loading']
Performance,"A. [32mprocessed[31m 70000000 [32mfragments[0m; hits: 87005981, hits per frag: 1.24303[A. [32mprocessed[31m 70500000 [32mfragments[0m; hits: 87631613, hits per frag: 1.24309[A. [32mprocessed[31m 71000000 [32mfragments[0m; hits: 88257540, hits per frag: 1.24315[A. [32mprocessed[31m 71500000 [32mfragments[0m; hits: 88882417, hits per frag: 1.2432[A. [32mprocessed[31m 72000000 [32mfragments[0m; hits: 89501627, hits per frag: 1.24316[A. [32mprocessed[31m 72500000 [32mfragments[0m; hits: 90123272, hits per frag: 1.24317. [1m[2017-03-07 17:20:23.878] [jointLog] [info] Computed 502158 rich equivalence classes for further processing; [00m[1m[2017-03-07 17:20:23.878] [jointLog] [info] Counted 29351922 total reads in the equivalence classes ; [00m[1m[2017-03-07 17:20:23.883] [jointLog] [info] Mapping rate = 40.2691%. [00m[1m[2017-03-07 17:20:23.883] [jointLog] [info] finished quantifyLibrary(); [00m[1m[2017-03-07 17:20:23.943] [jointLog] [info] Starting optimizer; [00m[1m[2017-03-07 17:20:25.002] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [00m[1m[2017-03-07 17:20:25.395] [jointLog] [info] iteration = 0 | max rel diff. = 41.1005; [00m[1m[2017-03-07 17:21:08.165] [jointLog] [info] iteration = 100 | max rel diff. = 0.102245; [00m[1m[2017-03-07 17:22:01.050] [jointLog] [info] iteration = 200 | max rel diff. = 0.0530265; [00m[1m[2017-03-07 17:22:45.312] [jointLog] [info] iteration = 300 | max rel diff. = 0.0489765; [00m[1m[2017-03-07 17:23:12.877] [jointLog] [info] iteration = 400 | max rel diff. = 0.026371; [00m[1m[2017-03-07 17:23:37.183] [jointLog] [info] iteration = 500 | max rel diff. = 0.0212965; [00m[1m[2017-03-07 17:24:04.277] [jointLog] [info] iteration = 600 | max rel diff. = 0.0183011; [00m[1m[2017-03-07 17:24:42.607] [jointLog] [info] iteration = 700 | max rel diff. = 0.0209044; [00m[1m[2017-03-07 17:25:22.112] [jointLog] [info] iteration = 800 | max rel diff. = 0.0152222; [00m[1m[20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:18087,optimiz,optimizer,18087,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['optimiz'],['optimizer']
Performance,"Add [inDropv2 protocol](https://www.nature.com/articles/nprot.2016.154) to salmon alevin. To use this protocol pass the `--indropV2` flag. The details of library preparation can be seen [here](https://teichlab.github.io/scg_lib_structs/methods_html/inDrop.html). R1 is the biological read and R2 is the metadata read. Briefly, the reads have 8-11 bp barcode1, followed by a `W1` sequence which should be specified using `--w1` flag then 8bp barcode2 and 6 bp UMI sequence follows. . Summary of changes:; 1. `--indropV2` flag added to process indropV2 reads; 2. a local copy of single cell protocol is created before barcodes and UMI are extracted to allow share the positions and avoid searching twice; 3. In case the barcode1 is less than 11bp, `A` is added after joining barcodes 1 and 2 to make the total length 19 bp; 4. If no exact match for w1 is found, a search for w1 with a hamming distance <=2 is performed. It was tested for correlation on run SRR7165069 from GEO submission [GSM3141960](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3141960).; Results:; ![image](https://user-images.githubusercontent.com/12998572/133622734-9b473318-fb39-421d-a322-b018f93ac139.png). ```; Min. 1st Qu. Median Mean 3rd Qu. Max. ; 0.3634 0.8981 0.9655 0.9307 0.9874 0.9976 ; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/703:907,perform,performed,907,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/703,1,['perform'],['performed']
Performance,"After generating issue #48, I took the recommendation of switching to the standard EM algorithm, but I'm having further problems. However, I don't think the problem was with the Variational EM algorithm, but an issue with how the dataset is behaving. . This is with the same dataset as before (single end, rRNA-depleted, second-strand protocol, extreme depth of 170M+ reads). I have the options --useFSPD and --biasCorrect turned on with library type ""SF""; the full call is . ```; salmon quant -i $SALMON_DIR -l SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT \; --numBootstraps 100 --useFSPD --geneMap $GENES \; --biasCorrect -p 59; ```. I had attempted to use wasabi and run sleuth, but I got an error where the number of transcripts passing the initial filter was ""NA"". I then discovered that for four samples, many of the transcripts had ""-nan"" generated for the ""NumReads"" column, and this led to all of them having ""-nan"" for the TPM column. One sample had ~100 that failed, but the other three had a variable 106K-109K out of 176K total transcripts fail. No warning or error was thrown during the quantifying or EM optimization steps, so I don't know what happened. Interesting, I should note that the NaNs are only generated when both biasCorrect and useFSPD are turned on. NaNs are not generated when I use only one or neither option. (this was only tested with one sample though). If you have immediate suggestions, that would be great. Otherwise, I can work on generating a test dataset.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/50:1114,optimiz,optimization,1114,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50,1,['optimiz'],['optimization']
Performance,"Barcodes Used: 287883370 / 287983348.; [2019-01-28 21:07:57.808] [alevinLog] [info] Done importing white-list Barcodes; [2019-01-28 21:07:58.273] [alevinLog] [warning] Skipping 290359 Barcodes with 0 reads; Assuming this is the required behavior.; [2019-01-28 21:07:58.517] [alevinLog] [info] Total 446921 white-listed Barcodes; [2019-01-28 21:09:02.029] [alevinLog] [info] Done populating Z matrix; [2019-01-28 21:09:02.331] [alevinLog] [info] Done indexing Barcodes; [2019-01-28 21:09:02.331] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-28 21:09:02.331] [alevinLog] [info] Used Barcodes except Whitelist: 168781; [2019-01-28 21:09:02.559] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-28 21:09:02.559] [alevinLog] [info] parsing read library format; [2019-01-28 21:40:44.514] [alevinLog] [info] Starting optimizer. [2019-01-28 22:05:50.958] [alevinLog] [info] Total 39006157.00 UMI after deduplicating.; [2019-01-28 22:05:50.960] [alevinLog] [warning] Skipped 160108 barcodes due to No mapped read; [2019-01-28 22:11:23.270] [alevinLog] [info] Finished optimizer. [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total reads in the equivalence classes; [2019-01-28 21:40:30.446] [jointLog] [warning] Found 39484 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-28 21:40:30.446] [jointLog] [info] Mapping rate = 37.2969%. [2019-01-28 21:40:30.446] [jointLog] [info] finished quantifyLibrary(); [2019-01-28 21:40:44.514] [alevinLog] [info] Starting optimizer. Analyzed 446921 cells (100% of all).; [2019-01-28 22:05:50.958] [alevinLog] [info] Total 39006157.00 UMI after deduplicating.; [2019-01-28 22:05:50.960] [alevinLog] [warning] Skipped 160108 barcodes due to No mapped read; [2019-01-28 22:11:23.270] [alevinLog] [info] Finished optimizer. ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:8218,optimiz,optimizer,8218,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,3,['optimiz'],['optimizer']
Performance,"C 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=ye",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:7995,Cache,Cache,7995,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Cache'],['Cache']
Performance,"CTGCCAGGTCGCTGTCCGAGATGCCGCCTGTggggggg; [...]; >sampletag11G; GTTGTCAAGATGCTACCGTTCAGAGGGTTGGCTCAGAGGCCCCAGGCTGCGGACGTCGTCGGACTCGCGT; >sampletag12G; GTTGTCAAGATGCTACCGTTCAGAGCTGGGTGCCTGGTCGGGTTACGTCGGCCCTCGGGTCGCGAAGGTC; ```. 2. Added the sample tag names to the end of decoy file; ```; [user@remote]$ tail -n 15 m.musculus_decoys.txt; GL456368.1; MU069434.1; JH584295.1; sampletag1G; sampletag2G; [...]; sampletag12G; ```. 3. Created the index; ```; salmon index -t m.mus_gentrome.fa.gz -d m.musculus_decoys.txt -p 12 -i m.mus_salmon_index --gencode; ```. 4. Aligned the 4 fastq files from the first cartridge (2 Lanes, each with one R1 and one R2); ```; salmon alevin -l ISR -1 Library1_WTA_S1_L00*_R1_001.fastq -2 Library1_WTA_S1_L00*_R2_001.fastq -i reference_genome/m.musculus/m.mus_salmon_index -p 10 --whitelist reference_genome/m.musculus/bd_rhapsody_barcode.txt -o alevin_output --umi-geometry '1[53-60]' --bc-geometry '1[1-9,22-30,44-52]' --read-geometry '2[1-end]' --tgMap reference_genome/m.musculus/txp2gene_2.tsv; ```. In which:; `whitelist` is a file containing possible CBs (I have not added anything related to sample tags here); `txp2gene` is a file that I did not change anything also. 5. Loaded the output in R with `ReadAlevin` from `SeuratWrappers`. ### **My issue**; I expected to have information for each cell (CB) which sampletag was present in its reads (vide page 20, figure 13 of the [Handbook](https://scomix.bd.com/hc/article_attachments/9315606097549/23-21713_03__BD_Single-Cell_Multiomics_Bioinformatics_Handbook_EN.pdf)); <img width=""792"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/67844695/da2ceba4-3c33-4296-9608-87dc4f6e642a"">. This information however is not present in the SeuratObject neither in the alevin_output directory (as seen by `grep -r ""sample""` not returning anything). Can you help me out with this? I am not sure why I don't have any reads mapping to the sampletags and have tried everything I could think of. Kind regards,; Igor",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/850:2971,Load,Loaded,2971,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/850,1,['Load'],['Loaded']
Performance,"Cov: 166.8 normfactor: 2759.5; [2018-12-05 16:31:50.571] [alevinLog] [info] Total 3856(has 998 low confidence) barcodes; [2018-12-05 16:31:50.638] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 16:31:50.935] [alevinLog] [info] Done populating Z matrix; [2018-12-05 16:31:51.000] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 16:31:51.000] [alevinLog] [info] Total Unique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 16:31:51.960] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 16:31:52.001] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 16:31:52.022] [stderrLog] [info] Computing transcript lengths; [2018-12-05 16:31:52.022] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 16:31:56.025] [stderrLog] [info] Done loading index; [2018-12-05 16:31:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:12760,Load,Loading,12760,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['Load'],['Loading']
Performance,"Dear COMBINE-lab team,. I am using **Alevin** pipeline from the **salmon-1.4.0 release** to preprocess some Drop-Seq data. . From what I understood, Alevin is using sets of low quality, ambiguous and high quality barcodes for the final whitelisting. Ambiguous and high quality ones are sets of barcodes of equal sizes above the knee/threshold used for the initial whitelisting. Ambiguous barcodes get classified as either high or low quality. Correct me if I'm wrong, but I think this means that the final whitelisted barcodes (those of high quality) should all be above the knee/threshold.; However I observed that **some of the barcodes dumped in the whitelist.txt file from the intelligent whitelisting were not above the knee/threshold used for initial whitelisting.** . I was wondering if you could reproduce my observation, or tell me if I misunderstood something. Here's the code I used :. ```; with open(f""./aux_info/alevin_meta_info.json"") as f:; alevin_meta_info = json.load(f). knee_or_threshold = alevin_meta_info[""initial_whitelist""]; whitelist = pd.read_table(f""./alevin/whitelist.txt"", header=None)[0].values; quants_mat_rows = pd.read_table(f""./alevin/quants_mat_rows.txt"", header=None).values.ravel(); raw_cb_frequency = pd.read_table(f""./alevin/raw_cb_frequency.txt"", header=None, index_col=0). print(alevin_meta_info) >>. {'total_reads': 145095156,; 'reads_with_N': 0,; 'noisy_cb_reads': 66182273,; 'noisy_umi_reads': 3866,; 'used_reads': 78909017,; 'mapping_rate': 44.93378883027631,; 'reads_in_eqclasses': 65196751,; 'total_cbs': 3146561,; 'used_cbs': 92693,; 'initial_whitelist': 3000,; 'low_conf_cbs': 1000,; 'num_features': 7,; 'no_read_mapping_cbs': 1,; 'final_num_cbs': 2597,; 'deduplicated_umis': 6871590,; 'mean_umis_per_cell': 2645,; 'mean_genes_per_cell': 1370}. print(len(quants_mat_rows)) >> 3999; print(knee_or_threshold) >> 3000. print(len(whitelist)) >> 2597; print(len(np.intersect1d(raw_cb_frequency[:knee_or_threshold].index, whitelist))) >> 2513; ```. The thresh",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/733:980,load,load,980,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/733,1,['load'],['load']
Performance,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/562:1042,perform,performed,1042,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562,1,['perform'],['performed']
Performance,"Dear `salmon` developers,. We are using salmon at ONT for quantifying transcripts from alignments of cDNA reads to transcriptomes on a regular basis and in [some](https://github.com/nanoporetech/pipeline-transcriptome-de) of our pipelines.; Transcriptomic aligments of long reads generate less multimapping reads than short reads (depeneding on the structure of the transcriptome), however we would prefer not to ignore them during quantification in order to make maximal use of the data.; However, since the error model was built for short reads, until now we have used the tool with the error model turned off (`--noErrorModel`), which is not optimal. Would it be possible to add a simple error model suitable for long read alignments? We propose something like the following for calculating the likelihood of an alignment:. - The likelihood of the aligment would be calculated based on the empirical distributions (or a normal fit) of edit distances conditioned on the length of the alignment. We could provide you with this information if needed.; - The likelihood of left and right soft or hard clipped sequences would be calculated as a function of their length (such as (1/x)^z, where the parameter z can be tuned based on real datasets). A more complicated model could be build taking into account the error profile of the long reads. It might be overkill though. I had a look at the source code and it seems to me that it might not be hard to implement it, however I am lacking the intimate knowledge of the codebase to do it easily.; Let me know if you would be interested in adding this feature. If yes, we could evaluate the change in the quality of estimates on real datasets. Best regards,; Botond Sipos",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/519:1215,tune,tuned,1215,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/519,1,['tune'],['tuned']
Performance,"Done indexing Barcodes; [2019-01-29 15:49:35.994] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-29 15:49:35.994] [alevinLog] [info] Used Barcodes except Whitelist: 105901; [2019-01-29 15:49:36.107] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-29 15:49:36.107] [alevinLog] [info] parsing read library format; [2019-01-29 15:49:36.415] [stderrLog] [info] Loading Suffix Array; [2019-01-29 15:49:36.107] [jointLog] [info] There is 1 library.; [2019-01-29 15:49:36.373] [jointLog] [info] Loading Quasi index; [2019-01-29 15:49:36.396] [jointLog] [info] Loading 32-bit quasi index; [2019-01-29 15:49:50.479] [stderrLog] [info] Loading Transcript Info; [2019-01-29 15:49:55.550] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-01-29 15:49:56.036] [stderrLog] [info] There were 58,086 set bits in the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Found 21006 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-29 16:05:46.678] [jointLog] [info] Mapping rate = 20.1566%. [2019-01-29 16:05:46.678] [jointLog] [info] finished quantifyLibrary(); [2019-01-29 16:05:51.316] [alevinLog] [info] Starting optimizer. **Analyzed 4000 cells (100% of all).**; [2019-01-29 16:06:27.447] [alevinLog] [info] Total 20167967.00 UMI after deduplicating.;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:1836,load,loading,1836,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['load'],['loading']
Performance,"Due to a current default in the boost library (https://github.com/boostorg/math/issues/1211) in boost::math::digamma, there is a performance hit on aarch64. This happens on v1.10.3 of Salmon, with GNU compiler 13 on Linux aarch64. A 4-thread quantization of one of the Salmon tutorials DRR0* series files spends ~15% of time in this routine (called within CollapsedEMOptimizer). On a larger example, we see 7% performance hit over a run that takes 1300 seconds on 4 cores. On x86 this time is small enough to be lost in the noise. `salmon quant -i athal_index -l A ; -1 DRR016125/DRR016125_1.fastq.gz; -2 DRR016125/DRR016125_2.fastq.gz ; -p $threads --validateMappings -o quants/DRR016125_quant`. There is a simple fix which is to ensure the CMake/Makefiles ensure salmon compiles with: ; `-DBOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS`; or to add that to any file that brings in boost::math via adding `#define BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS` at the start. With that change, a 1300 second runtime drops to 1212 for the larger test case, and for the tutorial case is 48 seconds down to 40 on a 4-core r8g.xlarge (Graviton4). Whilst Boost may fix the issue soon - it's likely that older versions of the library will be found installed for some time. It would be helpful to add this define to cmake settings, or the sources.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/966:129,perform,performance,129,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966,2,['perform'],['performance']
Performance,Error while loading shared libraries: libtbbmalloc_proxy.so.2: cannot open shared object file: No such file or directory,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/219:12,load,loading,12,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/219,1,['load'],['loading']
Performance,"Fixes #966 ; This fix resolves performance issue where Boost::math unnecessarily promotes doubles to long double, which is not fully supported by hardware leading to slow-downs. The change is to set a define during cmake process which prevents promotion ( -DBOOST_MATH_PROMOTE_DOUBLE_POLICY=false )",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/968:31,perform,performance,31,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/968,1,['perform'],['performance']
Performance,"GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per frag: 1.25428[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 1873468, hits per frag: 1.25316[A. [32mprocessed[31m 2000000 [32mfragments[0m; h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:3660,Load,Loading,3660,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['Load'],['Loading']
Performance,"Good morning,. I'm a *nix developer with a lot of experience porting software to various platforms. My preferred method for deployment is build-from-source package managers such as FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc (which I use extensively on CentOS), etc. Package managers in-general minimize problems for end users (and hence reduce PRs for you guys). Build-from-source package managers also allow customizing build options (e.g. adding -march=native), which can sometimes offer significantly better performance than you can get from a generic binary package that has to support older CPUs. Currently, developing such packages for salmon is a challenge due to the way the build system works. I've been looking through the build system and the main barrier to packaging is the unconditional bundling of some dependencies, such as seqlib and htslib. If you were to update the cmake systems so that they first look for *all* dependencies installed externally, as they already do for jemalloc and tbb, then it would be easier for developers to package salmon. Best,. Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/502:516,perform,performance,516,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/502,1,['perform'],['performance']
Performance,"Greetings,. I would like to thank you for providing this as an open-source tool. Currently, I am performing Salmon Indexing using human Gencode V35. I am following the instruction from: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. But when I try running the command of ""**salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode**"", I hit the error of ""exception : [unrecognised option '-d']. Exiting."". In the --help section the argument of ""-d"" is not present. Please do advise me on how I should proceed with indexing?. Regards,; Ben. ![image](https://user-images.githubusercontent.com/69944967/137584568-a0378455-a751-4d1f-885b-a66addf07160.png). ![image](https://user-images.githubusercontent.com/69944967/137584591-c61a3777-aff5-416f-beee-a33ad81ea5dd.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/714:97,perform,performing,97,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/714,1,['perform'],['performing']
Performance,"Hello everybody, . I've checked the google group, but it seems pretty deserted. I'm new to Salmon, but I do need to process a lot of experiments on my cluster, and it keeps overwhelming the I/O (and if I don't, the process would take much longer than I can wait - order of years). . So, I've had two questions: ; - can Salmon use SRA files directly? I.e. in hisat2 they implemented NGS sdk from NCBI and if you have your SRA file downloaded, you can read it same as you'd read fastq or fastq.gz. ; - can Salmon batch-process RNA-seq experiments? The goal is to not read the index every time - e.g. you've loaded the human transcriptome index into memory once, and then processed 100 files or so. . Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/319:605,load,loaded,605,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/319,1,['load'],['loaded']
Performance,"Hello, ; Could someone tell me what this error message means and if there is a way to fix the issue? I'm trying to use salmon for my Master's project data (I break down salmon into two parts to make it easier for myself) but keep getting the error message below during the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/855:856,load,load,856,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855,5,['load'],['load']
Performance,"Hello, I hope you're well!. ### Context. 1. I performed short-read (Illumina, 150bp PE) and long-read (ONT, cDNA+PCR) RNA-sequencing on 12 human cell line samples (4 conditions, 3 biological replicates each).; 2. I aligned the short-reads to chm13v2.0_RefSeq_Liftoff_v5.1.gff3 using HISAT2, and the long reads to chm13v2.0.fa using Minimap2.; 4. I used StringTie hybrid assembly mode (--mix option) to generate GTFs using both technologies (to take advantage of structural information from long reads and accuracy from short reads).; 5. I then ran stringtie --merge to generate the transcriptome assembly GTF from the sample GTFs.; 6. I took this merged transcriptome and further annotated it using SQANTI3 (with chm13v2.0_RefSeq_Liftoff_v5.1.gtf and chm13v2.0.fa).; 7. I converted both the SQANTI-annotated and the StringTie GTFs into fasta as follows:; `gffread -w merged_transcriptome.fa -g chm13v2.0.fa merged_transcripts.gtf`. Now I'm trying to quantify with Salmon. Firstly, I'm not sure whether it's better to use the short or long reads here as input to Salmon, given that my goal is to identify short peptides (I have peptidomics data) derived from specific splicing events. You may or may not be able to help me with that, but if you have thoughts, I'd appreciate them! Anyway, I decided arbitrarily to use the long-read BAMs as input to Salmon. ### Bug description; Secondly, as discussed a little in #104 , I keep running into:; `Transcript NM_032515.5 appears in the reference but did not appear in the BAM`; and; `Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffrea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/863:46,perform,performed,46,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863,1,['perform'],['performed']
Performance,"Hello, I'm debugging a salmon install problem with conda. I don't have time to double check, but it looks something like:. * if you install salmon 1.1.0, you get a version of tbb, 2021.1.1, from conda-forge ; * if you then try to upgrade to salmon 1.4.0, you actually want to get a different version of tbb from defaults, but the version pinning doesn't require it so it sticks with conda-forge; * if you force `tbb==2020.3` for salmon 1.4.0, things work; * if you don't, you get `salmon: error while loading shared libraries: libtbb.so.2: cannot open shared object file: No such file or directory`. The error shows up with:; `tbb 2021.1.1 h4bd325d_0 conda-forge`. and the functioning version of tbb seems to be:; `tbb 2020.3 hfd86e86_0 defaults`. I don't have time to chase this down further at the moment, but hopefully this will be sufficiently clear for me to figure it out later :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/637:501,load,loading,501,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/637,1,['load'],['loading']
Performance,"Hello,. I am using the recent downloaded executable for v1.1.0 and am using salmon (bulk-mode). Noticed one potential bug and have some general questions regarding bootstraps. 1. The potential bug I noticed was when I use `--numGibbsSamples` the logs/salmon_quant.log file is always blank. When I remove this flag and re-run the program the log file is correctly printed out. 2. Regarding Bootstraps:. I've been working with parameters to min/max my predicted estimates to quantified cDNA results that we have. Through this process I was not performing bootstraps and was just using the TPM results that were located within the `quants.sf` file and have been getting some good results, with R-squared values of ~0.98 for actual v. predicted plots. As a note, even after running hundreds of runs with the same parameters, the TPM values in the `quants.sf` file never really fluctuated that much between runs and were generally nearly identical. . However, I thought it would be best to bootstrap `--numBootstraps` each Salmon run and average the bootstraps to get more accurate results. After doing 1,000 bootstraps per sample I noticed that the TPM values I calculated from numbers of mapped reads in the `bootstraps.gz` fluctuated a lot more and overall brought my R-squared values down to ~0.87. (I used your ConvertBootstrapsToTSV.py script to get the read counts from the bootstrap file and then calculated the TPMs using the effective lengths from the `quants.sf` file. As looking through previous issues (#246) I was under the assumption that the bootstrap file only contained new mapped read estimates and the effective lengths should be the same for all bootstrap runs.) . My question is why do the TPM values in the `quants.sf` file not fluctuate as much (even after 100+ runs using the same parameters), while calculated TPM values from bootstraps of the same run are showing greater variance?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/466:542,perform,performing,542,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/466,1,['perform'],['performing']
Performance,"Hello,. This is the first time I am using Salmon and tried following up all steps but got 0 fragments mapped.. . 1) copied unzip Salmon-0.8.2_linux_x86_64 into folder in server; 2) exported path: export PATH=$PATH:/.../.../Salmon-0.8.2_linux_x86_64/bin/; 3) built index: salmon index -t salmon.index.human.052617.tar -i human_index; 4) now I want to preform quantification on fastq files (only one end of paired end, trimmed for 40 bp): ; salmon quant -i human_index -l U -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/167:763,Load,Loading,763,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167,2,['Load'],['Loading']
Performance,"Hello,. We are using Salmon to quantify gene counts for samples in RNA-Seq experiment. We will be using the weights of the equivalence class to perform a calculation for which we require the effective length of the equivalence classes. I checked in the eq_class.txt file under the aux_info directory but I was unable to find it. We are using alignment-based method where we supply a bamfile to salmon. Could you please help us to obtain the effective length of the equivalence classes?. I have another question. Salmon operates in both lightweight alignment mode and in alignment mode. For the lightweight mode, one needs to first create an index (which is the colored De Bruijn graph). I understand that this index (along with all the equivalence class) remains the same even when gene counts of different RNA-Seq samples are estimated. But I am a bit confused about the alignment-based method. In this case, salmon does not require an index since it has the actual alignments. If we have multiple samples, which are mapped to the same transcriptome will Salmon return the same set of equivalence classes? Since the samples are different the weights will change and so will the reads mapped to each equivalence class but will the set of eq. classes change?. Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/579:144,perform,perform,144,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/579,1,['perform'],['perform']
Performance,"Hello,; I'm trying to run the docker image on a cluster to quantify fastq files using the mapping mode. ; I'm using it with singularity ( already used it on another cluster and it worked perfectly). Here the command:; singularity exec docker://combinelab/salmon:latest salmon quant --validateMappings -l A -p ${threads} -o ./salmon_map -i ${salmon_index} -1 ${file_1} -2 ${file_2}. And the error:; salmon: error while loading shared libraries: libtbbmalloc.so.2: cannot open shared object file: No such file or directory. I suspect that it's missing inside the image and that in the other cluster it was running because it was taking the one outside the image ( the cluster where it worked had lots of libraries and softwares available, in this other you need to load the modules). Cheers; Claudio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/447:418,load,loading,418,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/447,2,['load'],"['load', 'loading']"
Performance,"Hi , . I am having issues with calculating the differential splicing using SUPPA. I have tried several times but kept getting the same error message, even though all files required are uploaded. . The error message is below:; ```; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; [1] ""Parsing samples...""; [1] ""Loading ./results/iso_tpm_formatted.txt...""; Error: first_condition %in% colnames(input_file) are not all TRUE; Execution halted; [1] ""Parsing samples...""; [1] ""Loading ./results/events.psi...""; Error in file(file, ""rt"") : cannot open the connection; Calls: read.table -> file; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './results/events.psi': No such file or directory; Execution halted; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; CalculateDifferentialSplicingEvents.sh: line 24: -e: command not found; ```. Could you please help me with this ; **Thank you in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/859:586,Load,Loading,586,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/859,2,['Load'],['Loading']
Performance,"Hi , Thank you very much for check the problem in my results. I used the salmon11.3 and salmon14.1 to analyze my data, the tpm value of the salmon4.1 is much smaller than the data got from salmon11.3 using the same raw data. ; [Lei_Tpm_vs_Jack_index_tpm.pdf](https://github.com/COMBINE-lab/salmon/files/3497212/Lei_Tpm_vs_Jack_index_tpm.pdf); my code as follow: . module load salmon/0.11.3 ; salmon index -t gencode.vM16.transcripts.fa -i 0.11.3_Lei.ind -k 31 --gencode; salmon quant -p 10 --numBootstraps 200 --gcBias --seqBias -l A -i 0.11.3_Lei.ind -1 read1.fq.gz -2 read2.fq.gz -o vM16 -g gencode.vM16.annotation.gtf. module load salmon/0.14.1 || exit 1; salmon index -t gencode.vM16.transcripts.fa -i 14.1_Lei.ind -d decoys.txt -k 31 --gencode; salmon quant -p 10 --numBootstraps 200 --gcBias --seqBias -l A -i 14.1_Lei.ind -1 read1.fq.gz -2 read2.fq.gz -o vM16_1 -g gencode.vM16.annotation.gtf. I do not understand if where is the problem in my analyze? Thank you very much.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/415:371,load,load,371,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/415,2,['load'],['load']
Performance,"Hi ; I am running an analysis using FLAIR (https://github.com/BrooksLabUCSC/flair) that uses the desired salmon version at the back end. Since it is trying to construct a de-novo transcriptome it pools the samples resulting in a sam file that is 266GB. When I run this analysis on the HPC, the salmon analysis ends without quant.sf file being written. The start and end of the STDERR written by salmon are shown below. . ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.6.0; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { ../data/FLAIR_2021-12-26/collapse_2021-12-26.firstpass.fa }; # [ output ] => { tmp99xm2qn8_2 }; # [ threads ] => { 8 }; # [ ont ] => { }; # [ libType ] => { U }; # [ alignments ] => { tmp99xm2qn8.firstpass.sam }; ---------------------------------------------; Completed first pass through the alignment file.; Total # of mapped reads : 74567310; # of uniquely mapped reads : 8113553; # ambiguously mapped reads : 66453757. Freeing memory used by read queue . . .; Joined parsing thread . . . ""tmp99xm2qn8.firstpass.sam""; Closed all files . . .; Emptied frag queue. . .; Emptied Alignment Group Pool. .; Emptied Alignment Group Queue. . . done; ============; Exception : [std::bad_alloc]; ============; ```; /home/ys/work_lies/Tools/salmon-1.6.0_linux_x86_64/bin/salmon alignment-quant was invoked improperly.; For usage information, try /home/ys/work_lies/Tools/salmon-1.6.0_linux_x86_64/bin/salmon quant --help-alignments. I have tried increasing the memory allocated to the analysis. It seems to complete but without the quantification files. . I also do not understand if it runs to the this point how this statement ""alignment-quant was invoked improperly."" could be true. . Any help would be greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/732:1038,queue,queue,1038,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/732,3,"['Queue', 'queue']","['Queue', 'queue']"
Performance,"Hi @Ray6283,. It seems you are asking about the EM/VBEM algorithm in general. I would say your description is _almost_ right, except this part:. > Then using p_ij s , we put f_j to transcripts with highest probability , say t_jm , we do this for all fragments, so for each fragment we have assigned unique transcript. So we can have new eta, call it eta_1 ( because we have abundance). Specifically, the EM algorithm does _not_ do ""hard"" assignment. That is, at no point during the algorithm, is a fragment fully assigned to a specific transcript (unless it was uniquely mapped there). Rather, the EM algorithm performs ""soft"" assignment. So, consider we have a fragment $f_j$ that maps to two transcripts $t_{j1}$ and $t_{j2}$. The EM algorithm will ""partially"" allocate this fragment to each of the transcripts. Specifically, it will allocate them proportional to $P(f_j \in t_{j1}) \propto P(t_{j1} \mid \eta) P(f_j \mid t_{j1})$ and $P(f_j \in t_{j2}) \propto P(t_{j2} \mid \eta) P(f_j \mid t_{j2})$ respectively. Then, in the ""M"" phase of the EM algorithm, one calculates the total mass arising from a transcript $t_i$ as $\sum_{f_j \text{ such that } f_j \text{ maps to } t_i} P(f_j \in t_i)$ (one sum). Computing these abundances for all $t_i$ gives us our next estimate of $\eta$, and then we can go back and re-compute the probabilities $P(f_j \in t_{j1})$ etc. This is done until convergence. _Originally posted by @rob-p in https://github.com/COMBINE-lab/salmon/discussions/889#discussioncomment-7304773_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/890:611,perform,performs,611,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/890,1,['perform'],['performs']
Performance,"Hi @rob-p ! I try to install Salmon on macOS M1 Max with hombrew (brewsci) ; but I guess the formula is the UNIX one on it. I got :. ```; Benjamin@macbook-pro ~ % brew install salmon ; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v1.3.0.tar.gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/787:306,Cache,Caches,306,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787,1,['Cache'],['Caches']
Performance,"Hi @rob-p . A question: Can salmon be made available for ARM based arch?. Context: [AWS has recently launched instances with ARM based processors](https://aws.amazon.com/ec2/instance-types/r6/#:~:text=Amazon%20EC2%20R6g%20instances%20are,real%20time%20big%20data%20analytics.) which claim to have better performance. I would like to test/use salmon workflows with ARM based instances. Thanks in advance,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/556:304,perform,performance,304,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/556,1,['perform'],['performance']
Performance,"Hi @rob-p @k3yavi . A question (or feature enhancement); When I am doing salmon indexing, is there a metadata file that will capture info about the salmon version used for indexing. Why am I asking this: I am developing a high throughput pipeline (with bbmap, bbduk, etc and then salmon) where I use salmon 1.1.0 for quantification - in this scenario, independent users have to build their own salmon indices and I want to trap/capture the situation where the user has used a different salmon version of indexing. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/498:227,throughput,throughput,227,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/498,1,['throughput'],['throughput']
Performance,"Hi there, I'am using a old version (0.14.1) of salmon and often get a low mapping rate of my samples. This time I got the lowest ratio ever, 0.0417748%. . ```; [2021-04-16 16:40:11.804] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ig; nored.; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly; specified, it is being set to 0.65; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorizati; on. rangeFactorizationBins is being set to 4; [2021-04-16 16:40:11.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting cons; ensusSlack to 0.2.; [2021-04-16 16:40:11.804] [jointLog] [info] parsing read library format; [2021-04-16 16:40:11.804] [jointLog] [info] There is 1 library.; [2021-04-16 16:40:11.898] [jointLog] [info] Loading Quasi index; [2021-04-16 16:40:11.898] [jointLog] [info] Loading 32-bit quasi index; [2021-04-16 16:40:17.838] [jointLog] [info] done; [2021-04-16 16:40:17.838] [jointLog] [info] Index contained 77,654 targets; [2021-04-16 16:57:15.485] [fileLog] [info]; At end of round 0. Observed 25613538 total fragments (25613538 in most recent round). [2021-04-16 16:57:15.485] [jointLog] [info] Computed 1,663 rich equivalence classes for further processing; [2021-04-16 16:57:15.485] [jointLog] [info] Counted 10,700 total reads in the equivalence classes; [2021-04-16 16:57:15.488] [jointLog] [warning] 0.00162414% of fragments were shorter than the k used to build the index (21).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-16 16:57:15.488] [jointLog] [info] Number of mappings discarded because of alignment score : 86,602; [2021-04-16 16:57:15.488] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 124,571; [2021-04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:962,Load,Loading,962,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,1,['Load'],['Loading']
Performance,"Hi!; Thank you for making salmon. Great work!. my command line is ; salmon quant -t /hpc/grid/shared/ngsdb/fasta/gencode.v24.transcripts.no_annotation.fa -l ISR -a RC-140808-00004.tx.bam -p 8 -o salmon_aln --useVBOpt --incompatPrior 0. The end of log file looks like:. 1008 Completed first pass through the alignment file.; 1009 Total # of mapped reads : 53203073; 1010 # of uniquely mapped reads : 14377795; 1011 # ambiguously mapped reads : 38825278; 1012; 1013; 1014; 1015 [2016-08-19 14:45:45.648] [fileLog] [info] quantification processed 53203073 fragments so far; 1016; 1017 [2016-08-19 14:45:45.982] [jointLog] [info] Computed 292761 rich equivalence classes for further processing; 1018 [2016-08-19 14:45:45.982] [jointLog] [info] Counted 53203073 total reads in the equivalence classes; 1019 [2016-08-19 14:45:45.983] [jointLog] [info] starting optimizer; 1020 [2016-08-19 14:45:48.932] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate. I tried dropping the --useVBOpt and it only outputs ""nan"". I also tried --useVBOpt in quasi-mapping base mode.; salmon quant -i /hpc/grid/shared/ngsdb/annotation/gencode/salmon_0.6.1_v24/ -l ISR -1 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz -2 /hpc/grid/ngsws/btx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz -p 8 -o salmon --useVBOpt --incompatPrior 0; That worked fine. More on the bam file:; it was generated by STAR with write alignments to transcriptome option. STAR --genomeDir /hpc/grid/shared/ngsdb/STAR/GRCh38_gencode24_100 --readFilesIn /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_1.fq.gz /hpc/grid/ngsws/ptx_clinical/zhanc120/test/longitudinal/fastq/RC-140808-00004_2.fq.gz --readFilesCommand zcat --runThreadN 8 --alignSJDBoverhangMin 1 --outFilterScoreMinOverLread 0.90 --outFilterMatchNminOverLread 0.90 --outFilterMis matchNoverLmax 0.05 --quantMode TranscriptomeSAM --alignEndsType EndToEnd --alignIntronMax 1000000 --o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/78:855,optimiz,optimizer,855,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/78,1,['optimiz'],['optimizer']
Performance,"Hi!; This is probably not a question for the github, but I wasn't sure where to post; (please redirect me, and I'll happily remove it). I had one small question related to the paper; https://www.biorxiv.org/content/10.1101/657874v1. When performing the benchmarking of all different approaches, the parameters used when testing STAR+Salmon are listed of course. It's mentioned that the parameters of STAR are meant to be kept the same as RSEM uses them in order to get the actual proper comparisons.; All the parameters do look the same, except for one; --sjdbScore; In your paper, this param is not being used, which means that the default value of 2 is active.; RSEM, however, sets this to 1. . I'm not sure if this will affect the results in any major way though, so I just wanted to check if there was maybe a reason behind leaving this value to 2 in the paper. The --sjdbScore value scores alignments with annotated junctions higher over unspliced alignments. ; I'm not even actually sure why RSEM lowers this to 1. ; I was trying to replicate some of your benchmarking, and I was just curious about this one if you have any info that can help out. And again, I probably don't need to mention it anymore, but awesome job with the Salmon! Thanks once more for the awesome software!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/490:238,perform,performing,238,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/490,1,['perform'],['performing']
Performance,"Hi, . I'm new to RNA seq and trying to use Salmon to analyse my dataset. However, it gives an error when I try to run it after downloading the package: . ` ~/Downloads/Salmon-0.8.2_macOX_10.12/bin/salmon`. It gves the following error: . `dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Users/rishika/Downloads/Salmon-0.8.2_macOX_10.12/bin/./salmon; Reason: image not found; Abort trap: 6`. I would be grateful for your help. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/172:256,load,loaded,256,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172,1,['load'],['loaded']
Performance,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/854:273,perform,performing,273,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854,1,['perform'],['performing']
Performance,"Hi, ; the output from the log is shown below. So apparently, everything went well, except for one minor issue... but my gene counts and my transcript count files are empty??; How is that possible; Cheers; Ashok; ```; [2017-07-18 17:14:11.438] [jointLog] [info] parsing read library format; [2017-07-18 17:14:11.438] [jointLog] [info] There is 1 library.; [2017-07-18 17:14:11.485] [jointLog] [info] Loading Quasi index; [2017-07-18 17:14:11.485] [jointLog] [info] Loading 32-bit quasi index; [2017-07-18 17:14:21.207] [jointLog] [info] done; [2017-07-18 17:14:21.207] [jointLog] [info] Index contained 107368 targets; [2017-07-18 17:14:22.320] [jointLog] [info] Automatically detected most likely library type as SF; [2017-07-18 17:22:52.788] [jointLog] [info] Computed 280679 rich equivalence classes for further processing; [2017-07-18 17:22:52.788] [jointLog] [info] Counted 27517563 total reads in the equivalence classes; [2017-07-18 17:22:52.850] [jointLog] [info] Mapping rate = 37.9965%. [2017-07-18 17:22:52.850] [jointLog] [info] finished quantifyLibrary(); [2017-07-18 17:22:52.853] [jointLog] [info] Starting optimizer; [2017-07-18 17:22:52.789] [fileLog] [info]; At end of round 0; ==================; Observed 72421398 total fragments (72421398 in most recent round). [2017-07-18 17:22:52.981] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2017-07-18 17:22:52.990] [jointLog] [info] iteration = 0 | max rel diff. = 9.36177; [2017-07-18 17:22:53.935] [jointLog] [info] iteration = 100 | max rel diff. = 0.0782409; [2017-07-18 17:22:54.889] [jointLog] [info] iteration = 200 | max rel diff. = 0.0347085; [2017-07-18 17:22:55.784] [jointLog] [info] iteration = 300 | max rel diff. = 0.0249461; [2017-07-18 17:22:56.790] [jointLog] [info] iteration = 400 | max rel diff. = 0.0188653; [2017-07-18 17:22:57.752] [jointLog] [info] iteration = 500 | max rel diff. = 0.0157419; [2017-07-18 17:22:58.688] [jointLog] [info] iteration = 600 | max rel diff. = 0.0128394; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/143:399,Load,Loading,399,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/143,2,['Load'],['Loading']
Performance,"Hi, I have noticed that when following the instructions (https://combine-lab.github.io/alevin-tutorial/2018/output-format/) for loading binary data it can sometimes be very slow. I am using the command:; `alevin_df = parser.read_quants_bin('./salmon_folder')`. However loading the raw output of a normal run with ~120k barcodes takes upwards of an hour. Is there another way to load the binary output?. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/354:128,load,loading,128,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/354,3,['load'],"['load', 'loading']"
Performance,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/518:1068,Load,Loading,1068,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518,1,['Load'],['Loading']
Performance,"Hi, I'm just starting with RNA-Seq and tryed to install salmon on the HPC of my university. However I get following error message when recompiling with ""$ make"". . ```; [ 6%] Built target libbz2; [ 13%] Built target libgff; [ 19%] Built target libbwa; [ 26%] Built target libjellyfish; [ 27%] Performing build step for 'libstadenio'; Making all in io_lib; Making all in progs; libtool: link: /usr/bin/cc -o convert_trace convert_trace.o ../io_lib/.libs/libstaden-read.a -lz -lm -lpthread -llzma -lbz2; /usr/bin/ld: cannot find -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; collect2: error: ld returned 1 exit status; make[5]: *** [convert_trace] Fehler 1; make[4]: *** [all-recursive] Fehler 1; make[3]: *** [all] Fehler 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Fehler 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Fehler 2; make: *** [all] Fehler 2. ```. Does this have anything to do with ""bzip2"" or ""libbz2"" and how would I provide missing paths to cmake?; I have bzip2 but not libbz2 availible on my system. I would be gratefull for any help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/216:293,Perform,Performing,293,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216,1,['Perform'],['Performing']
Performance,"Hi,. I am getting the following when building Salmon (gcc/g++ 4.8.2, and boost from `-DFETCH_BOOST=TRUE` when calling cmake). ```; (...); [ 64%] Performing build step for 'libtbb'; cd /opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/sa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/20:145,Perform,Performing,145,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20,1,['Perform'],['Performing']
Performance,"Hi,. I am running salom 0.6.0 on a Ubuntu server. here is my command as well as the STDOUT output:. ```; salmon quant -p 16 --biasCorrect --libType IU -i ~./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ --numBootstraps 100 -o $base <(zcat ${base}_1.fastq.gz ) <(zcat ${base}_2.fastq.gz); Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0 ; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 16 }; # [ biasCorrect ] => { }; # [ libType ] => { IU }; # [ index ] => { ./Salmon/Salmon.index/Homo_sapiens.GRCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/65:821,Load,Loading,821,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65,3,['Load'],['Loading']
Performance,"Hi,. I am running the latest version of Salmon 0.8.2 and I am getting the following error. I did remake the transcript index with the new version of salmon. I get no errors when i compile or run the ""make test"". . Logs will be written to salmon_output_A9039/logs; [2017-05-08 08:59:23.370] [jointLog] [info] parsing read library format; [2017-05-08 08:59:23.370] [jointLog] [info] There is 1 library.; [2017-05-08 08:59:23.395] [stderrLog] [error] Encountered exception [JSON Parsing failed - provided NVP (SeqHash) not found] when loading index.; [2017-05-08 08:59:23.395] [stderrLog] [error] The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version. Using boost 1.64, Clang 3.9, on a linux box. Any help will be appreciated. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/135:532,load,loading,532,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135,1,['load'],['loading']
Performance,"Hi,. I am using Salmon to quantify single cell RNA-seq data using quasi-mapping. Therefore, I have many different FastQ files (288 to be exact), each for a different cell. Many files have less than a million reads. . I am concerned that performing the 3 bias corrections would introduce a systematic bias in itself between the samples, if the corrections are performed independently on each sample. I imagine that this would cause the read counts to be adjusted to different extents in different samples. This is compounded by the fact that number of reads in different files are so different as that might affect the sampling needed to measure bias. Ideally, I imagine the bias corrections should be performed on all 288 samples as a whole together. i.e. I concatenate all 288 FastQ files and run salmon on the concatenated file. But I would not be able to de-multiplex the reads afterwards.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/165:237,perform,performing,237,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/165,3,['perform'],"['performed', 'performing']"
Performance,"Hi,. I am using Salmon v 1.10.1 do perform selective alignment on paired end RNAseq samples and I have trouble to interpret the output statistics (i.e succesfully mapped pairs ....); Here is my command line on a sample containing 34,462,097 pairs (After cleaning, adapter removal, rRNA trimming). **salmon quant -i $IndexDir -l A -1 $forward -2 $reverse -p 8 --seqBias --gcBias –useVBOpt --discardOrphansQuasi –consensusSlack 0.35 --minScoreFraction 0.8 --decoyThreshold 1 -o $OutputDir/$pairname_Output**. Here is the the output statistics of the alignment; [Salmon_quant_output.txt](https://github.com/COMBINE-lab/salmon/files/11768911/Salmon_quant_output.txt). So I have few questions : . 1- Where is idicated the numer of processed pairs, i.e. the number of pairs in the sample ?. 2- Does the mapping rate correspond to the reads that will be used for the quantification (i.e. succesfully mapped and that were above every filtering thresholds) or this % also takes into account the discarded mapping ? This is of great importance to tell if the mapping step is good or not. 3- Counted 20,588,460 total reads in the equivalence classes What does this mean ? Is it the numner of pairs that mapped (discarded and not discarded or only the ones that are kept for quentification). 4- What is the difference between mapping discarded and fragment discarded ? To count the number if pairs that did not map to my reference should I sum Number of mappings discarded because of alignment score + Number of fragments entirely discarded because of alignment score + Number of fragments discarded because they are best-mapped to decoys + Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets. Thanks in advance for your time and answers,,. Florian Rocher",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/852:35,perform,perform,35,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/852,1,['perform'],['perform']
Performance,"Hi,. I have been trying to run the installed salmon version on our HPC cluster on minimap aligned ONT reads and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/898:303,load,load,303,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898,1,['load'],['load']
Performance,"Hi,. I try to follow Alevin tutorial on 'How to Use alevin with Seurat' and have an issue with tximport(). I found this step is extremely **slow**. For **quants_mat.gz** file with **4.7M** in size, it took **12** minutes to finish. Is this common for alevin generated single cell data? . Thanks!; Lei. ## Test data: 10x 1k_PMBC_v2; ### Intel(R) Xeon(R) CPU E5-2698 v3 @ 2.30GHz; ## alevin.log; [2019-07-18 14:13:59.692] [alevinLog] [info] Loading Header; [2019-07-18 14:13:59.692] [alevinLog] [info] Loading Transcript Info; [2019-07-18 14:14:00.014] [alevinLog] [info] Found all transcripts to gene mappings; [2019-07-18 14:14:00.023] [alevinLog] [info] Processing barcodes files (if Present); [2019-07-18 14:15:51.124] [alevinLog] [info] Done barcode density calculation.; [2019-07-18 14:15:51.124] [alevinLog] [info] # Barcodes Used: 76866957 76921082.; [2019-07-18 14:15:51.553] [alevinLog] [info] Done importing white-list Barcodes; [2019-07-18 14:15:51.853] [alevinLog] [warning] Skipping 575996 Barcodes as no read was mapped; [2019-07-18 14:15:52.078] [alevinLog] [info] Total 161284 white-listed Barcodes; [2019-07-18 14:15:52.259] [alevinLog] [info] Total 5.95793% reads will be thrown away because of noisy Cellular barcodes.; [2019-07-18 14:15:58.709] [alevinLog] [info] Done populating Z matrix; [2019-07-18 14:15:58.741] [alevinLog] [info] Total 56814 CB got sequence corrected; [2019-07-18 14:15:58.750] [alevinLog] [info] Done indexing Barcodes; [2019-07-18 14:15:58.750] [alevinLog] [info] Total Unique barcodes found: 687531; [2019-07-18 14:15:58.750] [alevinLog] [info] Used Barcodes except Whitelist: 44516; [2019-07-18 14:15:58.973] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2019-07-18 14:15:58.973] [alevinLog] [info] parsing read library format; [2019-07-18 14:24:27.923] [alevinLog] [info] Starting optimizer; [2019-07-18 14:24:28.655] [alevinLog] [warning] 24 mitorna gene(s) does not have transcript in the reference; [2019-07-18 14:24:28.655] [al",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/404:439,Load,Loading,439,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/404,2,['Load'],['Loading']
Performance,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/66:939,Load,Loading,939,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66,8,"['Load', 'load']","['Loading', 'loading']"
Performance,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/112:461,Cache,Caches,461,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112,1,['Cache'],['Caches']
Performance,"I am trying to quantify some rna sequences with Salmon. Instead of creating my own index, I downloaded a pre-build version from here: [http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4](url) suggested in the salmon doc. I downloaded the file: `salmon_partial_sa_index:default` which is under my scope of research. Then, I just run the following command: `salmon quant -i default -l A -1 P10_1.fq.gz -2 P10_2.fq.gz --validateMappings -o transcripts_quant`, where `default` is the name of the folder resulting after the decompression of the salmon pre-build index, and `P10_1.fq.gz -2 P10_2.fq.gz` are paired reads of rna. I get this error: **rapidjson internal assertion failure: IsObject()**. I read a thread where a user performed a re-build. But since I am new to this filed I don't know what FASTA file I could use to do it. It's worth mentioning that I am working on a remote server and I downloaded the pre-build index directly on it, using `wget`. Some screenshot of what the `default` folder contains:. <img width=""806"" alt=""Schermata 2023-07-27 alle 14 42 59"" src=""https://github.com/COMBINE-lab/salmon/assets/81829336/e0bda06a-f344-4836-9e27-8e2de6a10265"">",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/862:769,perform,performed,769,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862,1,['perform'],['performed']
Performance,"I am using Salmon (Salmon 1.3 installed through homebrew on mac ventura 13.5.2) for quantification in alignment mode. I have bam files (aligned to transcriptome) for nanopore data from Minimap2, which has primary and secondary alignments both (50% of total mapped reads are primary and other 50% are secondary alignments). Salmon is only performing quantification for primary alignments, but I also want to include the secondary alignments. . 1. Is there any argument I could use to include secondary alignments for quantification in Salmon Alignment mode? ; 2. Is it a good practice to include secondary alignments? 3. Are there any other important flags I should use which might be specific to ""Nanopore"" or ""Splicing Analysis"". . This is the code I am using at the moment: . salmon quant -t gencode.vM33.transcripts.fa -l A -g gencode.vM32.annotation.gtf -a barcode07.bam -o barcode_07_salmon_quant",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/903:338,perform,performing,338,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/903,1,['perform'],['performing']
Performance,"I am working with Salmon in mapping-based mode to perform differential expression.; I am interested to understand which reads Salmon uses to produce counts, so I added --writeMappings and I checked the bam.; I hoped that Salmon would take into account samflags on field $3 to filter out 'bad' alignments, however, I am not able to figure out if Salmon consider flags. Moreover, in the 5th field (MAPQ) only 0 and 1 are produced. Should I suppose that 1 is considered 'mapped' and 0 to be 'unmapped' ?; I thank you in advance for your willingness; Bests",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/799:50,perform,perform,50,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/799,1,['perform'],['perform']
Performance,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/37:552,Load,Loading,552,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37,8,"['Load', 'load']","['Loading', 'loading']"
Performance,"I have been trying to use the salmon docker container available on docker hub. When I run salmon quant I am able to load all of the files and start the program, but I get a killed message while loading hash. I get an empty log file and empty folders created after the container is killed. **To Reproduce**; I run the following command to run the container:; `docker run -v /Users/caz3so/workspaces/salmon_docker:/temp -w /temp -ti combinelab/salmon`. The following is the output:; <img width=""1389"" alt=""screenshot 2018-06-27 11 15 56"" src=""https://user-images.githubusercontent.com/31480706/41983246-8296bb76-79fb-11e8-9710-c38ec051b7e7.png"">. **Expected behavior**; I have salmon installed on my machine and was able to run these files with no problem. It is only when I am using the docker container, so it could be a docker related problem. . **Desktop (please complete the following information):**; I am using a 2017 Macbook pro with 16 GB 2133 MHz LPDDR3 memory and a 2.8 GHz Intel Core i7 processor.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/243:116,load,load,116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243,2,['load'],"['load', 'loading']"
Performance,"I installed salmon from conda environment using python3 and got the below error:. ```; $ salmon. salmon: error while loading shared libraries: libboost_thread.so.1.60.0: cannot open shared object file: No such file or directory; ```. I am using Ubuntu 16.04 Xenial for which the latest Boost version is [1.58](https://launchpad.net/ubuntu/xenial/+package/libboost-dev). Since it was originally compiled under a later version of Boost (1.60), it gives the above error. I found this post to fix the issue temporarily:; https://www.biostars.org/p/389360/. It would be nice to fix it to search for the latest version of boost available though. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/565:117,load,loading,117,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565,1,['load'],['loading']
Performance,"I just cloned salmon from github repository. Everything was working good, I was able to perform cmake with the code: salmon/build cmake -DFETCH_BOOST=TRUE ..; but when I started to built with make, after several minutes it prompts the following error:. [ 7%] Built target libdivsufsort; [ 14%] Built target libtbb; [ 20%] Built target liblzma; [ 26%] Built target libjemalloc; [ 33%] Built target libcereal; [ 33%] Performing build step for 'libstadenio'; Making all in io_lib; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; compilation terminated.; Makefile:922: recipe for target 'libstaden_read_la-cram_io.lo' failed; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. I have looking for any solution but without success, Can anyone help me with this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/357:88,perform,perform,88,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/357,2,"['Perform', 'perform']","['Performing', 'perform']"
Performance,"I know this problem was reported previously. I checked all the answers and I can see there are many reasons for this. In my case, I have a 'high number of mappings discarded because of alignment score'. I created the index using mature transcripts (without introns and genome decoy). The command I used to perform quantification:. ```; salmon quant -i BANY_transcript_index -p 36 --libType A -g BANY_v2.gtf -1 ${i}_1P.fq.gz -2 ${i}_2P.fq.gz --validateMappings -o ${i}.quant. ```; The mapping rate I got. ```; [2020-06-04 18:03:49.102] [jointLog] [info] Number of mappings discarded because of alignment score : 57,476,847; [2020-06-04 18:03:49.102] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 4,980,029; [2020-06-04 18:03:49.102] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2020-06-04 18:03:49.102] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 366,055; [2020-06-04 18:03:49.102] [jointLog] [info] Mapping rate = 56.3428%; ```. The mapping rates I got are ~50-65%...Here are some of the reasons for low mapping rates based on previous posts:. 1. rRNA contamination: In my case, rRNAs were removed during library construction, also I quantified rRNA contents in my trimmed reads, and it's very low (<5%).; 2. DNA contamination: This is possible, I got ~98% genome mapping rate using hisat2. But in fact, DNAs are removed in my RNA extraction process...and poly-T was used to select mRNAs during the library construction...; 3. Not using pre-mature transcripts so reads mapping to introns are discarded: I am not sure if this is a valid point since we usually quantify mature mRNAs, not pre-mature ones.; 4. Library type: my library was constructed in a stranded way. The program detected my libtype as ISR:; ```; {; ""read_files"": ""[ DS_1_HW_FM_1P.fq.gz, DS_1_HW_FM_2P.fq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/533:306,perform,perform,306,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/533,1,['perform'],['perform']
Performance,"I ran salmon alevin 0.14.0 with a custom transcriptome reference and the following options: --chromium --dumpFeatures --dumpMtx --whitelist mylist.txt. Everything ran through OK. However, when I tried to load the .mtx file with readMM() in R, I got the error: ; ` Error: readMM(): column values 'j' are not in 1:nc `. When I tried to read directly the binary file into a matrix, there's a warning:; ```; counts <- readBin(quants_mat.gz, what = 'numeric', n = length(genes)*length(cells)); close.connection(quants_mat.gz); Warning message:; In matrix(data = counts, nrow = length(cells), ncol = length(genes), :; data length [391335] is not a sub-multiple or multiple of the number of rows [4942]; ```; It seems like there's issue with the dimensions; [out.zip](https://github.com/COMBINE-lab/salmon/files/3296080/out.zip); of the output matrix. I've attached my log file as well as my output files (both .mtx and binary). Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/380:204,load,load,204,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/380,1,['load'],['load']
Performance,"I tend to benchmark new versions of software mostly to check how much better things get over time at solving our problems. My strategy for benchmarking is to look at correlation between spike-ins at known abundances and estimated expression by software. The latest version of Salmon (0.4.0) performs markedly worse than all the previous versions of Salmon on the same data. ![salmong-performance](https://cloud.githubusercontent.com/assets/668803/8134113/8ff1a4ae-1124-11e5-80d5-10022530ba99.png). For running parameters, here is the top part of one of the `quant.sf` files. ```; # salmon (smem-based) v0.4.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /nfs/research2/teichmann/reference/homo-sapiens/salmon/Homo_sapiens.GRCh38.78.cdna_ERCC }; # [ libType ] => { IU }; # [ threads ] => { 4 }; # [ mates1 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_1.fastq }; # [ mates2 ] => { /nfs/research2/teichmann/valentine/detection-comparison/salmon-comparison/human/SRP030617_HCT116_86_2.fastq }; # [ output ] => { /tmp/SRP030617_HCT116_86_salmon_out }; # [ geneMap ] => { /nfs/research2/teichmann/reference/homo-sapiens/Homo_sapiens.GRCh38.78.cdna_ERCC.gene_map.txt }; # [ useVBOpt ] => { }; # [ mapping rate ] => { 48.8199% }; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/6:291,perform,performs,291,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6,2,['perform'],"['performance', 'performs']"
Performance,"I understand that salmon does not use read quality scores when performing alignment/quantitation but, as it stands, running with `--writeMappings` it also doesn't output the qualities in its SAM-format output. That may not impact most downstream applications of the data but it does limit some. I'd be particularly interested in using reads that have been aligned and assigned to transcripts with an EM algorithm to investigate RNA editing. The most advanced methods of doing this integrate the quality of base calls from the sequencer into the models and, as such, cannot currently run on the data output. Although it may save a few CPU cycles in not reading and outputting the qualities - I can understand the choice when running with default settings - when running with `--writeMappings` that nominal difference in speed needs to be weighed up against downstream utility. Could this be looked into?. Cheers! George",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/756:63,perform,performing,63,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/756,1,['perform'],['performing']
Performance,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/209:1168,Load,Loading,1168,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209,3,['Load'],['Loading']
Performance,"I was just trying out the new version. It seems to be working, but it seems to fail at the time of printing results. Here's a tail of the text output:. ```; [2016-01-02 00:08:48.445] [jointLog] [info] Computed 66783 rich equivalence classes for further processing; [2016-01-02 00:08:48.445] [jointLog] [info] Counted 2977936 total reads in the equivalence classes; [2016-01-02 00:08:54.862] [jointLog] [warning] Only 2977936 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2016-01-02 00:08:54.862] [jointLog] [warning] Since only 2977936 (< 5000000) fragments were observed, modeling of the fragment start position distribution has been disabled; [2016-01-02 00:08:54.862] [jointLog] [info] Mapping rate = 48.8134%. [2016-01-02 00:08:54.862] [jointLog] [info] finished quantifyLibrary(); [2016-01-02 00:08:54.863] [jointLog] [info] Starting optimizer; [2016-01-02 00:08:54.918] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-01-02 00:08:54.921] [jointLog] [info] iteration = 0 | max rel diff. = 48.4964; [2016-01-02 00:08:55.024] [jointLog] [info] iteration 50, recomputing effective lengths; [2016-01-02 00:08:57.626] [jointLog] [info] iteration = 100 | max rel diff. = 0.157189; [2016-01-02 00:08:57.835] [jointLog] [info] iteration = 200 | max rel diff. = 0.0984302; [2016-01-02 00:08:58.048] [jointLog] [info] iteration = 300 | max rel diff. = 0.0774471; [2016-01-02 00:08:58.265] [jointLog] [info] iteration = 400 | max rel diff. = 0.0866256; [2016-01-02 00:08:58.472] [jointLog] [info] iteration 500, recomputing effective lengths; [2016-01-02 00:09:00.486] [jointLog] [info] iteration = 500 | max rel diff. = 0.0216284; [2016-01-02 00:09:00.696] [jointLog] [info] iteration = 600 | max rel diff. = 0.0269734; [2016-01-02 00:09:00.905] [jointLog] [info] iteration = 700 | max rel diff. = 0.0166003; [2016-01-02 00:09:01.113] [jointLog] [info] iteration = 800 | m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/34:944,optimiz,optimizer,944,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34,1,['optimiz'],['optimizer']
Performance,"I'm planning on using your wonderful Salmon tool v0.12.0 for generating TPM counts with a view to quantifying relative abundance of certain bacterial antibiotic resistance genes in my shotgun (human gut) metagenomes. So as to ensure strict mappings to the genes of interest, I would like to set the value of the flag '--minScoreFraction' to 0.90. Since its a metagenome with a truck-load of genes from several microbes, I plan to quantify only those genes that show >=90% identity at the nucleotide-level to the known antibiotic resistance genes (of interest). My question here really is whether setting the flag minScoreFraction to 0.90 achieves anything close to what I've in mind? Below is the full command line I used for Salmon-based quantification of the tetracycline resistance gene tetW. salmon quant --meta -i amr_indices/tetW_index -l A -1 Corr_clean_phiclean_10_8_L001_R1_001.fastq.gz -2 Corr_clean_phiclean_10_8_L001_R2_001.fastq.gz -o 10_tetW_test_quant --mimicStrictBT2 --validateMappings --minScoreFraction=0.90. I would highly appreciate any feedback from you in this regard. Many thanks in advance for your time.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/330:383,load,load,383,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/330,1,['load'],['load']
Performance,"I'm running salmon v.4 (downloaded and compiled today) on gencode v22 and got the following error:. Performing PCA decomposition; salmon: /home/merkija1/software/salmon-0.4.0/include/eigen3/Eigen/src/Core/Redux.h:202: static Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Derived, 3, 0>::run(const Derived&, const Func&) [with Func = Eigen::internal::scalar_sum_op<double>; Derived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar = double]: Assertion `size && ""you are using an empty matrix""' failed.; Aborted. The command I ran is:; salmon-0.4.0/src/salmon quant --index gencode.v22.index_0.4.0/ --mates1 <(gunzip -c r1_fq1.gz r1_fq2.gz --mates2 <(gunzip -c r2_fq1.gz r2_fq2.gz ) --output $OUTPUT_DIR --biasCorrect --threads 4 --geneMap gencode.v22.annotation.nochr.gtf --libType ""ISF"". If I remove the --biasCorrect flag, it runs without error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/5:100,Perform,Performing,100,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5,1,['Perform'],['Performing']
Performance,"I'm trying to build salmon on FreeBSD. . First issue, fetchRapMap.sh fails because it calls /bin/bash. Bash on FreeBSD is in /usr/local/bin/bash.; This is easily worked around with a symlink. Second issue: libbwa fails to build. . ```; [ 34%] Performing build step for 'libbwa'; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 17: Missing dependency operator; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 19: Need an operator; make[3]: Fatal errors encountered -- cannot continue; make[3]: stopped in /usr/home/esiefker/salmon/salmon/external/bwa-master; *** Error code 1; ```; In addition to failing to build bwa, bwa is present in ports and already installed on this machine. Cmake should check for this.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/162:243,Perform,Performing,243,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162,1,['Perform'],['Performing']
Performance,"I'm trying to use Trinity; With the modules:; module load trinityrnaseq/2.6.2; module load samtools/1.16; module load jellyfish/2.3.0; module load jdk/1.8.0_151; module load bowtie2/2.2.9; module load salmon/1.9.0; But I get the error:; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; Error, cmd:; salmon index -t /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp -i /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx --type quasi -k 25 -p 1; died with ret (256) at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; 	Process_cmd::process_cmd('salmon index -t /work/luarrieta/proy_labap/Output/trinity/rea...') called at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/salmon_runner.pl line 20; Trinity run failed. Must investigate error above. @brianjohnhaas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/832:53,load,load,53,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832,6,['load'],['load']
Performance,"I've got some SMART-seq2 data that's been demultiplexed, so hundreds of small Fastq files. So, I was wondering: . - Does Salmon have a way to take multiple samples / libraries on a single run and perform quantification in an optimised serial way? ; - Does Salmon have a way to keep the index in memory similar to STAR? . I guess the obvious alternative is to schedule lots of runs, but just wondered if there were alternative options. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/589:196,perform,perform,196,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/589,1,['perform'],['perform']
Performance,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/913:1393,Load,Loading,1393,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913,1,['Load'],['Loading']
Performance,"I've switched to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/54:934,Load,Loading,934,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54,1,['Load'],['Loading']
Performance,Installing salmon with this command; ```; conda install -c bioconda salmon. ```; ```; kokyriakidis@Konstantinos:/mnt/36642bae-9ec9-4100-88a2-ac173a20ea16/CLL_PROJECT/CLL_TEST1/work$ conda install -c bioconda salmon. Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.7.12; latest version: 4.8.0. Please update conda by running. $ conda update -n base conda. # All requested packages already installed.; ```; seem to not update to 1.0.0 and stuck with v0.14.1; ```; salmon v0.14.1. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index Create a salmon index; quant Quantify a sample; alevin single cell analysis; swim Perform super-secret operation; quantmerge Merge multiple quantifications into a single file; ```. Any thoughts?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/461:815,Perform,Perform,815,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/461,1,['Perform'],['Perform']
Performance,"InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLog] [info] Done populating Z matrix; [2018-06-30 22:10:53.103] [alevinLog] [info] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] Loading Transcript Info; [2018-06-30 22:10:53.396] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-30 22:10:53.402] [stderrLog] [info] There were 36541 set bits in the bit array; [2018-06-30 22:10:53.405] [stderrLog] [info] Computing transcript lengths; [2018-06-30 22:10:53.405] [stderrLog] [info] Waiting to finish loading hash; [2018-06-30 22:10:54.783] [stderrLog] [info] Done loading index; [2018-06-30 22:10:54.783] [jointLog] [info] done; [2018-06-30 22:10:54.783] [jointLog] [info] Index contained 36541 targets. processed 17 Million fragments; hits: 18237834, hits per frag: 1.04278[2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.50% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.30% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:2754,Load,Loading,2754,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,1,['Load'],['Loading']
Performance,"Is there a way to compile Salmon to a 32-bit architecture by any chance? I ask because I'd like to have single-cell tutorials on sandbox.bio v2 that use Salmon. But to power the platform, I'm running a 32-bit/i686 Debian OS in the browser 😬. When I try to compile it in a [i386/debian:bookworm-20230904-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/872:500,Perform,Performing,500,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872,1,['Perform'],['Performing']
Performance,"Is there an option to use salmon only to identify the library type? I want to use the option libType -A to use salmon at a pre-processing step to identify the library type without performing quantification. An option like ""salmon identify"" would be really useful, and I can imagine easy to implement.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/138:180,perform,performing,180,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/138,1,['perform'],['performing']
Performance,"Is this a user error or a programming error?. FreeBSD 12.0-RELEASE FreeBSD 12.0-RELEASE r341666 GENERIC amd64 ; 8G memory, 2T disc.; Salmon installed as Linux binary. The command I issued was; salmon quant -i salmonIndexMouse -l IU -1 SRR1818187_2.fastq.gz -2 SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant; nuc11.2 wayne@dideoxy2:~/rnaseq > sh salmonQuant.sh; Version Info: This is the most recent version of salmon. [ 0.14.1 ]. ......; It was going well, until:; ....; [2019-08-17 11:51:58.943] [stderrLog] [info] There were 134,473,138 set bits in the bit array; [2019-08-17 11:51:58.995] [stderrLog] [info] Computing transcript lengths; [2019-08-17 11:51:58.995] [stderrLog] [info] Waiting to finish loading hash. [2019-08-17 11:52:03.223] [stderrLog] [info] Done loading index; [2019-08-17 11:52:03.223] [jointLog] [info] done; [2019-08-17 11:52:03.223] [jointLog] [info] Index contained 106,434 targets; Segmentation fault (core dumped)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/419:725,load,loading,725,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419,2,['load'],['loading']
Performance,JSON Parsing failed - provided NVP (SeqHash) not found when loading index... older version of RapMap,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/232:60,load,loading,60,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232,1,['load'],['loading']
Performance,Library not loaded: @rpath/libtbbmalloc_proxy.dylib,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/215:12,load,loaded,12,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215,1,['load'],['loaded']
Performance,Loading binary data with `alevin_df = parser.read_quants_bin('./salmon_folder')` is slow,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/354:0,Load,Loading,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/354,1,['Load'],['Loading']
Performance,Loading index exception,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/345:0,Load,Loading,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345,1,['Load'],['Loading']
Performance,"Log] [info] Thread saw mini-batch with a maximum of 2.00% zero probability fragments; [2020-09-05 17:53:51.128] [jointLog] [info] Computed 344,342 rich equivalence classes for further processing; [2020-09-05 17:53:51.128] [jointLog] [info] Counted 20,897,706 total reads in the equivalence classes ; [2020-09-05 17:53:51.133] [jointLog] [info] Number of mappings discarded because of alignment score : 116,214,502; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 1,428,490; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2020-09-05 17:53:51.133] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0; [2020-09-05 17:53:51.133] [jointLog] [info] Mapping rate = 40.8004%. [2020-09-05 17:53:51.133] [jointLog] [info] finished quantifyLibrary(); [2020-09-05 17:53:51.242] [jointLog] [info] Starting optimizer; [2020-09-05 17:53:51.129] [fileLog] [info] ; At end of round 0. Observed 51219317 total fragments (51219317 in most recent round). [2020-09-05 17:53:52.959] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2020-09-05 17:53:53.484] [jointLog] [info] iteration = 0 | max rel diff. = 5315.17; [2020-09-05 17:54:33.041] [jointLog] [info] iteration = 100 | max rel diff. = 19.0781; [2020-09-05 17:55:12.013] [jointLog] [info] iteration = 200 | max rel diff. = 14.788; [2020-09-05 17:55:49.642] [jointLog] [info] iteration = 300 | max rel diff. = 1.29965; [2020-09-05 17:56:27.111] [jointLog] [info] iteration = 400 | max rel diff. = 12.8157; [2020-09-05 17:57:04.974] [jointLog] [info] iteration = 500 | max rel diff. = 5.26288; [2020-09-05 17:57:42.449] [jointLog] [info] iteration = 600 | max rel diff. = 3.19907; [2020-09-05 17:58:19.892] [jointLog] [info] iteration = 700 | max rel diff. = 1.79807; [2020-09-05 17:58:57.376] [jointLog] [info] iteration = 800 | max re",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/571:3489,optimiz,optimizer,3489,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/571,1,['optimiz'],['optimizer']
Performance,Log] [info] iteration = 100 | max rel diff. = 0.124404; [2023-03-07 06:54:54.362] [jointLog] [info] iteration = 200 | max rel diff. = 0.0697214; [2023-03-07 06:54:58.083] [jointLog] [info] iteration = 300 | max rel diff. = 0.0335353; [2023-03-07 06:55:01.780] [jointLog] [info] iteration = 400 | max rel diff. = 0.0247299; [2023-03-07 06:55:05.539] [jointLog] [info] iteration = 500 | max rel diff. = 0.0189304; [2023-03-07 06:55:09.278] [jointLog] [info] iteration = 600 | max rel diff. = 0.017332; [2023-03-07 06:55:13.044] [jointLog] [info] iteration = 700 | max rel diff. = 0.013562; [2023-03-07 06:55:16.780] [jointLog] [info] iteration = 800 | max rel diff. = 0.0118759; [2023-03-07 06:55:20.542] [jointLog] [info] iteration = 900 | max rel diff. = 0.0114777; [2023-03-07 06:55:24.213] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0100626; [2023-03-07 06:55:24.977] [jointLog] [info] iteration = 1022 | max rel diff. = 0.00967998; [2023-03-07 06:55:25.088] [jointLog] [info] Finished optimizer; [2023-03-07 06:55:25.088] [jointLog] [info] writing output ; ```; And the quality control report by `fastp` ; [fastp_report.pdf](https://github.com/COMBINE-lab/salmon/files/10999908/fastp_report.pdf). The log of `bowtie2`:; ```{shell}; $cat bowtie2.log ; 40535435 reads; of these:; 40535435 (100.00%) were paired; of these:; 38666766 (95.39%) aligned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:4879,optimiz,optimizer,4879,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['optimiz'],['optimizer']
Performance,"Logs will be written to salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant/logs; [2023-08-27 19:59:26.866] [jointLog] [info] setting maxHashResizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; -----------------------------------------; size = 2139249936; -----------------------------------------; | Loading refe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:10347,Load,Loading,10347,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['Load'],['Loading']
Performance,"Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-08-02 14:41:46.432] [jointLog] [info] Mapping rate = 42.625",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:1272,Load,Loading,1272,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,1,['Load'],['Loading']
Performance,"NA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.432] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.469] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.513] [jointLog] [info] Thread saw mini-batch w",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261:2487,load,loading,2487,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261,1,['load'],['loading']
Performance,"On a fresh conda install,. ```; conda create -n slm2 -y -c bioconda salmon; ```; yields a broken salmon:; ```; $ conda activate slm2; (slm2) ggg298-43@farm:~$ salmon; salmon: error while loading shared libraries: libboost_iostreams.so.1.60.0: cannot open shared object file: No such file or directory; ```. This seems to be because I'm missing conda-forge; this:. ```; conda create -n slm3 -y -c conda-forge -c bioconda salmon; conda activate slm3; salmon; ```; works fine!. Nothing needs to be done, and I will update as I debug, but I wanted to put this here for google bait.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/480:187,load,loading,187,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/480,1,['load'],['loading']
Performance,"P0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119:1674,load,loading,1674,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119,1,['load'],['loading']
Performance,Perform salmon on only UTR region,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/248:0,Perform,Perform,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/248,1,['Perform'],['Perform']
Performance,Performance fix: don't let boost promote doubles to long doubles,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/967:0,Perform,Performance,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/967,2,['Perform'],['Performance']
Performance,Performance issue in use of boost::math::digamma on aarch64 Linux,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/966:0,Perform,Performance,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966,1,['Perform'],['Performance']
Performance,Performing download step for 'libtbb'; tbb-2017_U3.tgz: FAILED; sha256sum: WARNING: 1 of 1 computed checksum did NOT match; tbb-2017_U3.tgz did not match expected SHA256! Exiting.; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make: *** [all] Error 2; -----------------------------------------------------------; command used; cmake -DBOOST_INCLUDEDIR=/local/genome/packages/boost/1.57.0/include/ -DBOOST_LIBRARYDIR=/local/genome/packages/boost/1.57.0/lib/ -DCMAKE_INSTALL_PREFIX=/local/genome/packages/salmon/0.8.2. ------------------------------------------------------------------------; boost/1.57.0 ; gcc/4.9.4,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/153:0,Perform,Performing,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/153,1,['Perform'],['Performing']
Performance,"RCh38.rel79/ }; # [ numBootstraps ] => { 100 }; # [ output ] => { 61LP1AAXX_8 } ; # [ ] => { /dev/fd/63 }; # [ ] => { /dev/fd/62 }; Logs will be written to 61LP1AAXX_8/logs; there is 0[2016-07-11 09:51:45.206] [jointLog] [info] parsing read library format; lib; Loading 32-bit quasi index[2016-07-11 09:51:45.328] [jointLog] [info] Loading Quasi index; [2016-07-11 09:51:45.736] [stderrLog] [info] Loading Suffix Array; [2016-07-11 09:51:45.771] [stderrLog] [info] Loading Position Hash; [2016-07-11 09:52:13.781] [stderrLog] [info] Loading Transcript Info; [2016-07-11 09:52:20.821] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-11 09:52:21.877] [stderrLog] [info] There were 173259 set bits in the bit array; [2016-07-11 09:52:22.030] [stderrLog] [info] Computing transcript lengths; [2016-07-11 09:52:22.030] [stderrLog] [info] Waiting to finish loading hash; Index contained 173259 targets; [2016-07-11 09:52:26.970] [jointLog] [info] done; [2016-07-11 09:52:26.970] [stderrLog] [info] Done loading index. [2016-07-11 09:52:27.327] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2016-07-11 09:52:27.327] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2016-07-11 09:52:39.858] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. **[2016-07-11 09:52:39.858] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report.**. [2016-07-11 09:52:39.858] [jointLog] [info] Mapping rate = 0%. [2016-07-11 09:52:39.858] [jointLog] [info] finished quantifyLibrary(); [2016-07-11 09:52:39.858] [jointLog] [info] Starting optimizer; [2016-07-11 09:52:39.894] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-07-11 09:52:39.895] [jointLog] [info] iteration = 0 | max rel diff. = -1.79769e+3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/65:1567,load,loading,1567,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/65,1,['load'],['loading']
Performance,"R_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:12397,optimiz,optimized,12397,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['optimiz'],['optimized']
Performance,"ResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 2.1723 s; -----------------------------------------; -----------------------------------------; | Loading reference ac",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:6617,Load,Loading,6617,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"ResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference ac",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:3492,Load,Loading,3492,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"ResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 3.165 s; -----------------------------------------; -----------------------------------------; | Loading reference acc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:4819,Load,Loading,4819,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"ResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference ac",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:1855,Load,Loading,1855,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"ResizeThreads to 6; [2023-02-23 09:39:48.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:9626,Load,Loading,9626,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['Load'],['Loading']
Performance,"Running Salmon-0.7.2_linux_x86_64 with --writeMappings=map.out and it crashes with:. Exception : [boost::filesystem::create_directory: No such file or directory]. When I run without a file name, it outputs to stdout, but it also outputs messages such as:; ESC[1m[2016-09-14 11:06:07.550] [jointLog] [info] parsing read library format; ESC[00mESC[1m[2016-09-14 11:06:07.550] [jointLog] [info] There is 1 library.; ESC[00mESC[1m[2016-09-14 11:06:08.300] [jointLog] [info] Loading Quasi index; ESC[00mESC[1m[2016-09-14 11:06:08.300] [jointLog] [info] Loading 32-bit quasi index; So the output is not a clean .sam file. ~/programs/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /data/reference/salmon/gencode.grch37.v19/ -r test.fastq --seqBias --gcBias --posBias -p 12 --writeMappings=map.out --geneMap /data/reference/salmon/gencode.grch37.v19/geneMap.txt --libType U -o x",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/90:470,Load,Loading,470,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/90,2,['Load'],['Loading']
Performance,Salmon takes hours to start optimizer,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/532:28,optimiz,optimizer,28,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/532,1,['optimiz'],['optimizer']
Performance,Salmon won't finish loading index,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/667:20,load,loading,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667,1,['load'],['loading']
Performance,"SalmonQuantFiles/logs; [2023-01-29 16:06:31.513] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:06:31.513] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:06:31.580] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""apex_infe_t1_rep1_S29_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:06:34.583] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:06:35.068] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:06:35.443] [jointLog] [info] . The alignment group queue pool has been exhausted. 1955 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 26000000 reads in current roundSegmentation fault (core dumped); ```. Output for failure case - four files. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:7741,queue,queue,7741,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['queue'],['queue']
Performance,"Seeing lots of these - any ideas? v0.9.1. ```; ERROR [processor_job: 399381] [pipeline_applied: SALMON] [no_retry: False] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/MUS_MUSCULUS/short }; ### [ mates1 ] => { /home/user/data_store/processor_job_399381/ERR1680104_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_399381/ERR1680104_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_399381/ERR1680104_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_399381/ERR1680104_output/logs; [2018-11-28 17:08:09.121] [jointLog] [info] parsing read library format; [2018-11-28 17:08:09.121] [jointLog] [info] There is 1 library.; [2018-11-28 17:08:09.165] [stderrLog] [info] Loading Suffix Array; [2018-11-28 17:08:09.165] [jointLog] [info] Loading Quasi index; [2018-11-28 17:08:09.165] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 879238456 bytes from input stream! Read 851443704]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.]: Processor job failed!; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/321:1045,Load,Loading,1045,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321,3,['Load'],['Loading']
Performance,Significant performance regression in version 0.4.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/6:12,perform,performance,12,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6,1,['perform'],['performance']
Performance,Silent failure while loading index,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/37:21,load,loading,21,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37,1,['load'],['loading']
Performance,Some refactoring to clean some of the argument parsing and to allow future new features. * argument parsing; * allow early load of the index,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/665:123,load,load,123,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/665,1,['load'],['load']
Performance,"Thank you for providing this good software！. It has a very good performance in the process of quantifying scRNA-seq data.Next, I'm thinking about whether it can be used to quantify the combination of genes and TEs.And I have tried this idea according to the following steps：. 1.Change the classification information in the third column of the annotated TEs gff file to ""gene"" or ""exon"", and number all TEs as genes.; 2.Merge genes and modified TEs files into a gff file.; 3.After the transcript sequences are extracted, the index is established using the salmon index and the salmon alevin is used for quantification. The program can run normally, including subsequent analysis in R. But I'm not sure if this is correct, so I would be very grateful if you have any suggestions！",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/828:64,perform,performance,64,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/828,1,['perform'],['performance']
Performance,"Thanks for nice tool!. I performed alevin with 10X Chromium (v3) data and it seems to be nice result. By the way, I followed the Alevin-Tutorial and Ipython Notebook as below,; but generating txp2gene.tsv took some time.; https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/; https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001. Especially, bioawk is not installed in any machine by default, and also just copy & past of the bioawk code could not run in my machine. For the above reason, I would like to suggest an alternative code to process this task. For example, I modified the code by using only grep, awk, sed, and uniq as below.; Is this also okay?. ```; wget -P data ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_32/gencode.v32.primary_assembly.annotation.gtf.gz; gunzip -c data/gencode.v32.primary_assembly.annotation.gtf.gz | grep transcript | awk '{print $12,$10}' | sed -e 's|""||g' -e 's|;||g' | uniq > data/txp2gene.tsv; ```. Otherwise, I appreciate it if you could support this task by implementing the subcommand of salmon as bellow. ```; salmon t2g [GTFfile]; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/467:25,perform,performed,25,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/467,1,['perform'],['performed']
Performance,"The use case is to allow using [SoupX](https://github.com/constantAmateur/SoupX) which removes ambient reads from cell lysis (the soup). Here is what SoupX does with cellranger output:. 1) loads the .mtx file in the `raw_gene_bc_matrices` directory output by cellranger as argument `tod` to `SoupX::SoupChannel`. . 2) Subsets this matrix to those in `barcodes.tsv` inside the `filtered_gene_bc_matrices` directory as the argument to `toc`. It looks like to use SoupX with alevin would require quantification for all barcodes, not just those that pass the initial alevin whitelist. I guess I would need alevin to perform the initial whitelisting (to get the `toc` argument to `SoupX::SoupChannel`), but then ignore it and quantify all barcodes so that the `tod` matrix can be provided. The approach I am currently using:. 1) Run `alevin --keepCBFraction 1 --maxNumBarcodes 4294967295` to get quants for all barcodes. 2) rerun alevin normally to get whitelisted cells (both from initial and final whitelisting). It would be nice not to have to run alevin twice in order to achieve this result. Perhaps an option so that alevin could proceed to quantify all barcodes but still output a whitelist. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/377:189,load,loads,189,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/377,2,"['load', 'perform']","['loads', 'perform']"
Performance,"This fix resolves performance issue where Boost::math unnecessarily promotes doubles to long double, which is not fully supported by hardware leading to slow-downs. The change is to set a define during cmake process which prevents promotion ( -DBOOST_MATH_PROMOTE_DOUBLE_POLICY=false )",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/967:18,perform,performance,18,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/967,1,['perform'],['performance']
Performance,"Threads to 16; [2022-01-26 12:55:04.037] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 12:55:04.037] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 12:55:04.037] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 12:55:04.037] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 12:55:04.037] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 12:55:04.037] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-01-26 13:09:14.959] [jointLog] [info] There is 1 library.; [2022-01-26 13:09:14.961] [jointLog] [info] Loading pufferfish index; [2022-01-26 13:09:14.962] [jointLog] [info] Loading dense pufferfish index.; [2022-01-26 13:09:19.753] [jointLog] [info] done; [2022-01-26 13:09:20.383] [jointLog] [info] Index contained 184,844 targets; [2022-01-26 13:09:20.563] [jointLog] [info] Number of decoys : 0; [2022-01-26 13:43:01.425] [jointLog] [info] Computed 288,594 rich equivalence classes for further processing; [2022-01-26 13:43:01.425] [jointLog] [info] Counted 280,466,412 total reads in the equivalence classes ; [2022-01-26 13:43:01.426] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2022-01-26 13:43:01.426] [jointLog] [warning] Found 14751 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2022-01-26 13:43:01.426] [jointLog] [info] Mapping rate = 58.3421%. [2022-01-26 13:43:01.426] [jointLog] [info] finished quantifyLibrary()",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/742:3875,Load,Loading,3875,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742,2,['Load'],['Loading']
Performance,"Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-11 16:34:30.116] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-11 16:34:30.116] [jointLog] [info] Mapping rate = 0%. [2018-09-11 16:34:30.116] [jointLog] [info] finished quantifyLibrary(); [2018-09-11 16:34:30.156] [alevinLog] [info] Starting optimizer; ```. **Desktop (please complete the following information):**; - OS: CentO",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:11575,load,loading,11575,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['load'],['loading']
Performance,"UnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading refe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:3219,Load,Loading,3219,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['Load'],['Loading']
Performance,"When I followed the tutorial here (https://combine-lab.github.io/alevin-tutorial/2020/alevin-features/ ) to perform HTO quantification by alevin (also add --dumpMtx option), a malformed MTX file was generated. <img width=""551"" alt=""image"" src=""https://user-images.githubusercontent.com/77259528/181101587-d06b7ab1-1d86-4eee-bf45-2a9432facf80.png"">. Has 999230 nonzero entries, but the second line indicates the number of nonzero entries is `0`, which should be `999230`? So when I read the matrix by `scipy.io.mmread`, all entries would be zero. . Thank you very much for your help in advance! If I misunderstood anything, please kindly let me know.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/791:108,perform,perform,108,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/791,1,['perform'],['perform']
Performance,"When doing paired mapping, we get a lot of single-mapped reads (probably indicative of a crappy transcriptome - we know, we know). Do these reads count towards quantification?. ```; salmon quant -i cDNA_transcripts.index --libType ISR -1 L101_resync_R1.fastq -2 L101_resync_R2.fastq -o L101.quant. [2015-11-03 14:08:26.861] [jointLog] [info] Mapping rate = 26.4703%. [2015-11-03 14:08:26.861] [jointLog] [info] finished quantifyLibrary(); [2015-11-03 14:08:26.861] [jointLog] [info] Starting optimizer; [2015-11-03 14:08:26.878] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2015-11-03 14:08:26.889] [jointLog] [info] iteration = 0 | max rel diff. = 499.998; [2015-11-03 14:08:27.264] [jointLog] [info] iteration = 100 | max rel diff. = 0.216535; [2015-11-03 14:08:27.647] [jointLog] [info] iteration = 200 | max rel diff. = 0.123972; [2015-11-03 14:08:28.032] [jointLog] [info] iteration = 300 | max rel diff. = 0.108899; [2015-11-03 14:08:28.403] [jointLog] [info] iteration = 400 | max rel diff. = 0.0560467; [2015-11-03 14:08:28.772] [jointLog] [info] iteration = 500 | max rel diff. = 0.0441335; [2015-11-03 14:08:29.147] [jointLog] [info] iteration = 600 | max rel diff. = 0.0387812; [2015-11-03 14:08:29.524] [jointLog] [info] iteration = 700 | max rel diff. = 0.0333914; [2015-11-03 14:08:29.901] [jointLog] [info] iteration = 800 | max rel diff. = 0.0282682; [2015-11-03 14:08:30.279] [jointLog] [info] iteration = 900 | max rel diff. = 0.0253705; [2015-11-03 14:08:30.659] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0229764; [2015-11-03 14:08:31.040] [jointLog] [info] iteration = 1100 | max rel diff. = 0.0223721; [2015-11-03 14:08:31.414] [jointLog] [info] iteration = 1200 | max rel diff. = 0.0202505; [2015-11-03 14:08:31.792] [jointLog] [info] iteration = 1300 | max rel diff. = 0.0186214; [2015-11-03 14:08:32.177] [jointLog] [info] iteration = 1400 | max rel diff. = 0.0181308; [2015-11-03 14:08:32.568] [jointLog] [info] iteration = 1500 | max r",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/31:492,optimiz,optimizer,492,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/31,1,['optimiz'],['optimizer']
Performance,"XX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per frag: 1.25428[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 1873468, hits per frag: 1.25316[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2492702, hits per frag: 1.24947[A. [32mprocessed[31m 2500000 [32mfragments[0m; hits: 3114558, hits per frag: 1.24832[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 3733674, hits per frag: 1.24664[A. [32mprocessed[31m 3500000 [32mfragments[0m; hits: 4356329, hits per frag: 1.24645[A. [32mprocessed[31m 4000000 [32mfragments[0m; hits: 4978863, hits per frag: 1.24627[A. [32mprocessed[31m 4500000 [32mfragm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:4107,load,loaded,4107,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['load'],['loaded']
Performance,"[ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:2877,Load,Loading,2877,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,1,['Load'],['Loading']
Performance,"[2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_64 x86_64 x86_64 GNU/Linux`; `$ lsb_release -a; LSB Version:	core-2.0-noarch:core-3.2-noarch:core-4.0-noarch:core-2.0-x86_64:core-3.2-x86_64:core-4.0-x86_64:desktop-4.0-amd64:desktop-4.0-noarch:graphics-2.0-amd64:graphics-2.0-noarch:graphics-3.2-amd64:graphics-3.2-noarch:graphics-4.0-amd64:graphics-4.0-noarch; Distributor ID:	SUSE LINUX; Description:	SUSE Linux Enterprise Server 11 (x86_64); Release:	11; Codename:	n/a`. **Additional context**; I included a 10K subset of reads in the tarball, which leads to the same behavior by Alevin.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:5728,Load,Loading,5728,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['Load'],['Loading']
Performance,"[2018-09-11 16:33:59.242] [alevinLog] [info] Gauss Corrected Boundary at 4345 ; [2018-09-11 16:33:59.242] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-09-11 16:33:59.242] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-09-11 16:33:59.358] [alevinLog] [info] Done True Barcode Sampling; [2018-09-11 16:33:59.891] [alevinLog] [info] Done populating Z matrix; [2018-09-11 16:33:59.972] [alevinLog] [info] Done indexing Barcodes; [2018-09-11 16:33:59.972] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The ef",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:11041,Load,Loading,11041,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['Load'],['Loading']
Performance,"[2019-06-04 16:33:41.634] [alevinLog] [info] Found all transcripts to gene mappings; [2019-06-04 16:33:41.650] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369:5602,Load,Loading,5602,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369,1,['Load'],['Loading']
Performance,"[2021-09-20 22:30:13.043] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-09-20 22:30:13.044] [alevinLog] [info] parsing read library format; [2021-09-20 22:33:09.346] [alevinLog] [info] Starting optimizer. [2021-09-20 22:33:09.516] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-09-20 22:33:09.516] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 46357.00 UMI after deduplicating.; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 2930 BiDirected Edges.; [2021-09-20 22:33:09.576] [alevinLog] [info] Total 3804 UniDirected Edges.; [2021-09-20 22:33:09.576] [alevinLog] [warning] Skipped 21 barcodes due to No mapped read; [2021-09-20 22:33:09.579] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-09-20 22:33:09.590] [alevinLog] [warning] Num Low confidence barcodes too less 186 < 200.Can't performing whitelisting; Skipping; [2021-09-20 22:33:09.591] [alevinLog] [info] Finished optimizer. ```; Then I tried setting `--keepCBFraction 1`. This does decrease the total number of reads being thrown away. However, mapping percentage is still low as compared to what I was getting from CellRanger (27%). I thought that since Alevin takes into consideration the multi mapping reads, the mapping percentage will likely increase because when we ran STAR on this data we found a lot of multi mapping reads. ```bash; nohup ./salmon alevin -l ISR -1 S1_L003_R1_001.fastq.gz -2 S1_L003_R2_001.fastq.gz --chromiumV3 -i ~/salmon_selective/salmon_index/ -p 20 -o ~/salmon_selective/9NT_keepCBfraction --keepCBFraction 1 --tgMap ~/salmon_selective/txgene_p3d7.txt &. [2021-09-21 00:11:13.532] [alevinLog] [info] Total 1.97665% reads will be thrown away because of noisy Cellular barcodes.; [2021-09-21 00:11:17.977] [alevinLog] [info] Done populating Z matrix; [2021-09-21 00:11:17.984] [alevinLog] [info] Total 21839 CB got seque",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/706:4708,perform,performing,4708,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/706,1,['perform'],['performing']
Performance,"[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mapping",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:1205,Load,Loading,1205,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,1,['Load'],['Loading']
Performance,"[info] Computed 0 rich equivalence classes for further processing; [2019-06-04 15:58:42.487] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2019-06-04 15:58:42.487] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-04 15:58:42.508] [jointLog] [info] Mapping rate = 0%. [2019-06-04 15:58:42.508] [jointLog] [info] finished quantifyLibrary(); [2019-06-04 15:58:42.519] [alevinLog] [info] Starting optimizer. [2019-06-04 15:58:43.232] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-06-04 15:58:43.232] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-06-04 15:58:43.237] [alevinLog] [info] Total 0.00 UMI after deduplicating.; [2019-06-04 15:58:43.237] [alevinLog] [info] Total 0 BiDirected Edges.; [2019-06-04 15:58:43.237] [alevinLog] [info] Total 0 UniDirected Edges.; [2019-06-04 15:58:43.259] [alevinLog] [info] Finished optimizer; Floating point exception (core dumped); ```. Alevin fails to read the barcode, or something like that, from the whitelist, and there are no reads to be processed. If instead of running the `--whitelist` command I run the `--expectCells 50` command, the results are these:. ```; [2019-06-04 16:33:41.634] [alevinLog] [info] Found all transcripts to gene mappings; [2019-06-04 16:33:41.650] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [201",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369:4323,optimiz,optimizer,4323,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369,1,['optimiz'],['optimizer']
Performance,"[info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping rate = 53.3587%. [2018-11-29 22:40:56.510] [jointLog] [info] finished quantifyLibrary(); [2018-11-29 22:41:01.682] [alevinLog] [info] Starting optimizer. Analyzed 12346 cells (100% of all).; Skipped Barcodes are",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/324:2400,Load,Loading,2400,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324,1,['Load'],['Loading']
Performance,"[info] Total 3385(has 1000 low confidence) barcodes; [2018-08-29 11:28:19.297] [alevinLog] [info] Done True Barcode Sampling; [2018-08-29 11:28:19.433] [alevinLog] [info] Done populating Z matrix; [2018-08-29 11:28:19.437] [alevinLog] [info] Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] Loading Transcript Info ; [2018-08-29 11:30:08.761] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-29 11:30:11.254] [stderrLog] [info] There were 135226 set bits in the bit array; [2018-08-29 11:30:11.311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-29 11:33:18.039] [jointLog] [info] Mapping rate = 43",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:3570,Load,Loading,3570,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,1,['Load'],['Loading']
Performance,"[info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; -----------------------------------------; | Loading positions | Time = 68.544 ms; -----------------------------------------; size = 74351806; -----------------------------------------; | Loading reference sequence | Time = 7.0924 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 325.83 us; -----------------------------------------; [2020-05-29 20:14:24.638] [jointLog] [info] done; [2020-05-29 20:14:24.638] [jointLog] [info] Index contained 57,190 targets; [2020-05-29 20:14:25.202] [jointLog] [info] Number of decoys : 0. processed 38,500,000 fragmentsntLog] [info] Automat",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:3522,Load,Loading,3522,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,1,['Load'],['Loading']
Performance,"\; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [info] finished quantifyLibrary(); [2016-06-21 10:05:13.894] [jointLog] [info] Starting optimizer; Segmentation fault (core dumped); ```.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/64:1575,Load,Loading,1575,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64,1,['Load'],['Loading']
Performance,"] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:3074,Load,Loading,3074,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['Load'],['Loading']
Performance,] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 18:26:13.307] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 18:26:13.307] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 18:26:13.334] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 18:26:13.334] [alevinLog] [info] Total 54879 white-listed Barcodes; [2018-07-19 18:26:18.285] [alevinLog] [info] Done populating Z matrix; [2018-07-19 18:26:18.300] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:5148,Load,Loading,5148,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['Load'],['Loading']
Performance,"] Total 3856(has 998 low confidence) barcodes; [2018-12-05 16:31:50.638] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 16:31:50.935] [alevinLog] [info] Done populating Z matrix; [2018-12-05 16:31:51.000] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 16:31:51.000] [alevinLog] [info] Total Unique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 16:31:51.960] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 16:31:52.001] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 16:31:52.022] [stderrLog] [info] Computing transcript lengths; [2018-12-05 16:31:52.022] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 16:31:56.025] [stderrLog] [info] Done loading index; [2018-12-05 16:31:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:12831,Load,Loading,12831,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['Load'],['Loading']
Performance,"] Total 5344(has 999 low confidence) barcodes; [2018-09-11 16:33:59.358] [alevinLog] [info] Done True Barcode Sampling; [2018-09-11 16:33:59.891] [alevinLog] [info] Done populating Z matrix; [2018-09-11 16:33:59.972] [alevinLog] [info] Done indexing Barcodes; [2018-09-11 16:33:59.972] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-11 16:34:30.116] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wro",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:11253,Load,Loading,11253,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['Load'],['Loading']
Performance,"] Total 5344(has 999 low confidence) barcodes; [2018-12-05 15:12:27.494] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 15:12:27.880] [alevinLog] [info] Done populating Z matrix; [2018-12-05 15:12:27.952] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 15:12:27.952] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 15:12:30.141] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 15:12:30.181] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counted 163,106,139 total reads in the equivalence classes ; [2018-12-05 15:45:46.199] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 15:45:46.199] [jointLog] [info] Mapping rate = 60.9633%. [2018-12-05 15:45:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:7319,Load,Loading,7319,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['Load'],['Loading']
Performance,"] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] Loading Transcript Info; [2018-06-30 22:10:53.396] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-30 22:10:53.402] [stderrLog] [info] There were 36541 set bits in the bit array; [2018-06-30 22:10:53.405] [stderrLog] [info] Computing transcript lengths; [2018-06-30 22:10:53.405] [stderrLog] [info] Waiting to finish loading hash; [2018-06-30 22:10:54.783] [stderrLog] [info] Done loading index; [2018-06-30 22:10:54.783] [jointLog] [info] done; [2018-06-30 22:10:54.783] [jointLog] [info] Index contained 36541 targets. processed 17 Million fragments; hits: 18237834, hits per frag: 1.04278[2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.50% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.30% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.06% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.64% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 9.94% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:3146,load,loading,3146,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,1,['load'],['loading']
Performance,"] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; -----------------------------------------; | Loading positions | Time = 14.838 s; -----------------------------------------; size = 3401221626; -----------------------------------------; | Loading reference sequence | Time = 1.1113 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 9.0843 ms; -----------------------------------------. [2020-08-13 09:36:14.700] [jointLog] [info] done; [2020-08-13 09:36:14.700] [jointLog] [info] Index contained 177,651 targets; [2020-08-13 09:36:14.782] [jointLog] [info] Number of decoys : 195; processed 500,000 fragmentsjointLog] [info",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/560:2302,Load,Loading,2302,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560,1,['Load'],['Loading']
Performance,"] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLog] [info] Done populating Z matrix; [2018-06-30 22:10:53.103] [alevinLog] [info] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] Loading Transcript Info; [2018-06-30 22:10:53.396] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-30 22:10:53.402] [stderrLog] [info] There were 36541 set bits in the bit array; [2018-06-30 22:10:53.405] [stderrLog] [info] Computing transcript lengths; [2018-06-30 22:10:53.405] [stderrLog] [info] Waiting to finish loading hash; [2018-06-30 22:10:54.783] [stderrLog] [info] Done loading index; [2018-06-30 22:10:54.783] [jointLog] [info] done; [2018-06-30 22:10:54.783] [jointLog] [info] Index contained 36541 targets. processed 17 Million fragments; hits: 18237834, hits per frag: 1.04278[2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.50% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.116] [jointL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:2614,Load,Loading,2614,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,1,['Load'],['Loading']
Performance,"] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLog] [info] Done populating Z matrix; [2018-06-30 22:10:53.103] [alevinLog] [info] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] Loading Transcript Info; [2018-06-30 22:10:53.396] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-30 22:10:53.402] [stderrLog] [info] There were 36541 set bits in the bit array; [2018-06-30 22:10:53.405] [stderrLog] [info] Computing transcript lengths; [2018-06-30 22:10:53.405] [stderrLog] [info] Waiting to finish loading hash; [2018-06-30 22:10:54.783] [stderrLog] [info] Done loading index; [2018-06-30 22:10:54.783] [jointLog] [info] done; [2018-06-30 22:10:54.783] [jointLog] [info] Index contained 36541 targets. processed 17 Million fragments; hits: 18237834, hits per frag: 1.04278[2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.50% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.30% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.06% zero probability fragments; [2018-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:2824,Load,Loading,2824,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,1,['Load'],['Loading']
Performance,"_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; -----------------------------------------; | Loading positions | Time = 14.838 s; -----------------------------------------; size = 3401221626; -----------------------------------------; | Loading refere",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/560:1793,Load,Loading,1793,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560,1,['Load'],['Loading']
Performance,"_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-08-02 14:41:46.432] [jointLog] [info] Mapping rate = 42.6252%. [2017-08-02 14:41:46.432] [jointLog] [info] finished quantifyLibrary(); [2017-08-02 14:41:46.446] [jointLog] [info] Starting optimizer; [2017-08-02 14:41:46.508] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-08-02 14:41:46.510] [jointLog] [info] iteration = 0 | max rel diff. = 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:1600,load,loading,1600,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,1,['load'],['loading']
Performance,"_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam"", fasta = ""a; ll_transcripts.fa"" . . .done; [2021-03-05 18:20:24.846] [jointLog] [info] replaced 1216 non-ACGT nucleotides with random nucleotides; processed 0 reads in current round[2021-03-05 18:20:25.180] [jointLog] [info] Automatically detected most likely library type as ISR; processed 3000000 reads in current round[2021-03-05 18:20:39.705] [jointLog] [info]; The alignment group queue pool has been exhausted. 7187672 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated; processed 12000000 reads in current round; processed 21000000 reads in current round; processed 29000000 reads in current round; processed 38000000 reads in current round; processed 47000000 reads in current round; processed 56000000 reads in current round; processed 57000000 reads in current round/var/spool/slurmd/job599153/slurm_script: line 102: 17542 Segmentation fault singularity exec --bind $TMPDIR:/tmp,/groups:/groups,/work:/work /groups/arcsingularity/salmon_1.4.0.sif salmon quant -t all_transcripts.fa -l A -p 10 -a $in_FILES -o $outdir.salmon_quant. Salmon does not quantify transcript expression. I would appreciate any suggestions.; Thanks, Ina",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/638:2485,queue,queue,2485,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638,1,['queue'],['queue']
Performance,"_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per frag: 1.25428[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 1873468, hits per frag: 1.25316[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2492702, hits per frag: 1.24947[A. [32mprocessed[31m 2500000 [32mfragments[0m; hits: 3114558, hits per frag: 1.24832[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 3733674, hits per frag: 1.24664[A. [32mprocessed[31m 3500000 [32mfragments[0m; hits: 4356329, hits per frag: 1.24645[A. [32mprocessed[31m 4000000 [32mfragments[0m; hits: 4978863, hits per frag: 1.24627[A. [32mprocessed[31m 4500000 [32mfragments[0m; hits: 5601788, hits per frag: 1.24623[A. [32mprocessed[31m 5000000 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:4188,load,loading,4188,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['load'],['loading']
Performance,```; % salmon cite. Version Info: This is the most recent version of Salmon.; Salmon v0.8.2. Usage: salmon -h|--help or; salmon -v|--version or; salmon -c|--cite or; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; cite Show salmon citation information; index Create a salmon index; quant Quantify a sample; swim Perform super-secret operation; ```. It seems I need to do `salmon -c` instead,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/149:329,Perform,Perform,329,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/149,1,['Perform'],['Perform']
Performance,"`salmon` command gives as expected:. ```; salmon v1.1.0. Usage: salmon -h|--help or; salmon -v|--version or; salmon -c|--cite or; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index Create a salmon index; quant Quantify a sample; alevin single cell analysis; swim Perform super-secret operation; quantmerge Merge multiple quantifications into a single file; ```. However, `salmon index --help` freezes without any CPU usage. `strace` shows it's trying to connect to an IP address, which belongs to GitHub but out of commission right now. ```; socket(AF_INET, SOCK_STREAM, IPPROTO_TCP) = 6; epoll_ctl(4, EPOLL_CTL_ADD, 6, {EPOLLIN|EPOLLPRI|EPOLLERR|EPOLLHUP|EPOLLET, {u32=509961152, u64=140196832437184}}) = 0; ioctl(6, FIONBIO, [1]) = 0; connect(6, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(""185.199.108.153"")}, 16) = -1 EINPROGRESS (Operation now in progress); epoll_ctl(4, EPOLL_CTL_MOD, 6, {EPOLLIN|EPOLLPRI|EPOLLOUT|EPOLLERR|EPOLLHUP|EPOLLET, {u32=509961152, u64=140196832437184}}) = 0; epoll_wait(4, ^Cstrace: Process 4488 detached; ```. Waiting long enough, it tries another IP address, which is also broken. My Salmon is compiled with GCC 8.2.0 / gompi2019a toolset using EasyBuild. It runs on Centos 7. Passing `--no-version-check` solves the problem but this option isn't displayed on main help screen, I found it somewhere in the source.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/486:283,Perform,Perform,283,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/486,1,['Perform'],['Perform']
Performance,"`salmon` is found from `bioconda` but ... ```; $ conda search salmon; Loading channels: done; # Name Version Build Channel; salmon 0.5.1 0 bioconda; salmon 0.6.0 0 bioconda; salmon 0.6.0 1 bioconda; salmon 0.6.0 boost1.60_1 bioconda; salmon 0.6.0 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_3 bioconda; salmon 0.7.2 boost1.61_3 bioconda; salmon 0.8.0 boost1.60_0 bioconda; salmon 0.8.0 boost1.61_0 bioconda; salmon 0.8.1 0 bioconda; salmon 0.8.2 0 bioconda; salmon 0.8.2 1 bioconda; salmon 0.9.0 0 bioconda; salmon 0.9.1 0 bioconda; salmon 0.9.1 1 bioconda; salmon 0.10.0 1 bioconda; salmon 0.10.1 1 bioconda; salmon 0.10.2 1 bioconda; salmon 0.11.0 h445c947_0 bioconda; salmon 0.11.1 h445c947_0 bioconda; salmon 0.11.2 h445c947_0 bioconda; salmon 0.11.3 h86b0361_1 bioconda; salmon 0.11.3 h86b0361_2 bioconda; ```. When I try to install, I get `PackageNotFoundError`.; ```; $ conda create -n salmon salmon=0.11.3; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon=0.11.3; - jemalloc[version='>=5.1.0']; - salmon=0.11.3; - libcxx. Current channels:. - https://conda.anaconda.org/bioconda/linux-64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/free/linux-64; - https://repo.anaconda.com/pkgs/free/noarch; - https://repo.anaconda.com/pkgs/r/linux-64; - https://repo.anaconda.com/pkgs/r/noarch; - https://repo.anaconda.com/pkgs/pro/linux-64; - https://repo.anaconda.com/pkgs/pro/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. It is weird because I am installing on `linux64`.; ```; $ lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/308:70,Load,Loading,70,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/308,1,['Load'],['Loading']
Performance,"aco_m@med0113 1_bootstrappedAlevin]$ ls -al alevin; total 1; drwxrwxr-x 2 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 .; drwxrwxr-x 3 amonaco_m hpc-ag-zinzen 4096 Mar 3 11:00 ..; -rw-rw-r-- 1 amonaco_m hpc-ag-zinzen 0 Mar 3 11:00 alevin.log; ```. I have used Salmon Alevin before on this dataset - without the bootstrap option - while providing the Cell Ranger whitelisted barcodes, and everything has gone smoothly (same script as below, commented out line). I have tried increasing the allotted memory and thread number as well, but with no change in outcome. Have you ever encountered something like this or could address me to where the issue may be (I'm assuming something to do with the bootstrap)?. *****Script I submit:*****; ```; #!/bin/bash; # expected run time ; #SBATCH --time=24:00:00 ; # Combine stderr and stdout log files into the stdout log file.; #SBATCH -o without -e; # Keep current environment variables.; #SBATCH --export=variables; # number of cores; #SBATCH -n 30; # expected memory to be used; #SBATCH —mem=50000; # Specify queue via expected length of job. ; #SBATCH --partition=medium; # Set the log directory.; #SBATCH -o logs. ####declarations; conda activate salmon. Read1=$1 # fastq file - CB+UMI; Read2=$2 # fastq file - insert read; index=$3 # directory from salmon index; outDir=$4 # output directory; tsv=$5 # tsv containing txp-gene-id pairs; whitelist=$6 # cell ranger output barcodes. salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist --numCellBootstraps 20 --dumpFeatures. #salmon alevin -lISR -1 $Read1 -2 $Read2 --chromiumV3 -i $index -p 8 -o $outDir --tgMap $tsv --whitelist $whitelist. ```. Thank you in advance!; Anna. -------------------------; Additional FYI:; ```; (salmon) [amonaco_m@med0113 1_bootstrappedAlevin]$ salmon version; Version Info: This is the most recent version of salmon.; salmon v1.4.0. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--n",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/636:1876,queue,queue,1876,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/636,1,['queue'],['queue']
Performance,"ads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per frag: 1.25428[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 1873468, hits per frag: 1.25316[A. [32mprocessed[31m 2000000 [32mfragments[0m; hits: 2492702, hits per frag: 1.24947[A. [32mprocessed[31m 2500000 [32mfragments",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:3740,Load,Loading,3740,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['Load'],['Loading']
Performance,agments will be ignored.; [2018-07-19 18:24:03.059] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 18:26:13.307] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 18:26:13.307] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 18:26:13.334] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 18:26:13.334] [alevinLog] [info] Total 54879 white-listed Barcodes; [2018-07-19 18:26:18.285] [alevinLog] [info] Done populating Z matrix; [2018-07-19 18:26:18.300] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:5080,Load,Loading,5080,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['Load'],['Loading']
Performance,"ail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_old/${line} --seqBias --gcBias. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias. **Steps and data to reproduce the behavior: for version 0.12**; module load Cufflinks/2.2.1; gffread MSU7_all.gff3 -g all.chrs.fasta -w MSU7_newtranscript.fasta. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.12.0-IGB-gcc-8.2.0. salmon index -t ~/data/genome/MSU7_newtranscript.fasta -i ~/data/genome/MSU7new_transcript.index --type quasi -k 31. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:2726,load,load,2726,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['load'],['load']
Performance,"alevinLog] [info] Total 958944 UniDirected Edges.; [2019-07-18 14:30:09.475] [alevinLog] [warning] Skipped 28272 barcodes due to No mapped read; [2019-07-18 14:30:09.552] [alevinLog] [info] Finished optimizer; ```. ## R code (How to Use alevin with Seurat). ```; > library(here); > library(tidyverse); > library(Seurat); > library(tximport); > library(tictoc). > files <- file.path(here(""alevin_output/alevin/quants_mat.gz"")); > file.exists(files); [1] TRUE; >; > tic(""starts...""); > txi <- tximport(files, type=""alevin""; > toc(); starts...: 728.506 sec elapsed; > sessionInfo(); ```; R version 3.6.1 (2019-07-05); Platform: x86_64-conda_cos6-linux-gnu (64-bit); Running under: CentOS Linux 7 (Core). Matrix products: default; BLAS/LAPACK: /gpfs/data/software/anaconda3/envs/R3.6/lib/libopenblasp-r0.3.6.so. locale:; [1] LC_CTYPE=en_US.UTF-8 LC_NUMERIC=C; [3] LC_TIME=en_US.UTF-8 LC_COLLATE=en_US.UTF-8; [5] LC_MONETARY=en_US.UTF-8 LC_MESSAGES=en_US.UTF-8; [7] LC_PAPER=en_US.UTF-8 LC_NAME=C; [9] LC_ADDRESS=C LC_TELEPHONE=C; [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C. attached base packages:; [1] stats graphics grDevices utils datasets methods base. other attached packages:; [1] tictoc_1.0.1 tximport_1.12.3 forcats_0.4.0 stringr_1.4.0; [5] dplyr_0.8.3 purrr_0.3.2 readr_1.3.1 tidyr_0.8.3; [9] tibble_2.1.3 ggplot2_3.2.0 tidyverse_1.2.1 here_0.1. loaded via a namespace (and not attached):; [1] Rcpp_1.0.1 cellranger_1.1.0 pillar_1.4.2 compiler_3.6.1; [5] tools_3.6.1 zeallot_0.1.0 jsonlite_1.6 lubridate_1.7.4; [9] gtable_0.3.0 nlme_3.1-140 lattice_0.20-38 pkgconfig_2.0.2; [13] rlang_0.4.0 cli_1.1.0 rstudioapi_0.10 haven_2.1.1; [17] withr_2.1.2 xml2_1.2.0 httr_1.4.0 generics_0.0.2; [21] vctrs_0.2.0 hms_0.5.0 rprojroot_1.3-2 grid_3.6.1; [25] tidyselect_0.2.5 glue_1.3.1 R6_2.4.0 readxl_1.3.1; [29] modelr_0.1.4 magrittr_1.5 backports_1.1.4 scales_1.0.0; [33] rvest_0.3.4 assertthat_0.2.1 colorspace_1.4-1 stringi_1.4.3; [37] lazyeval_0.2.2 munsell_0.5.0 broom_0.5.2 crayon_1.3.4; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/404:3787,load,loaded,3787,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/404,1,['load'],['loaded']
Performance,"alevinLog] [warning] Gauss Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog] [info] Loading Suffix Array ; [2018-06-12 21:08:56.530] [stderrLog] [info] Loading Transcript Info ; [2018-06-12 21:08:56.675] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-12 21:08:56.724] [stderrLog] [info] There were 36191 set bits in the bit array; [2018-06-12 21:08:56.729] [stderrLog] [info] Computing transcript lengths; [2018-06-12 21:08:56.729] [stderrLog] [info] Waiting to finish loading hash; [2018-06-12 21:08:58.508] [jointLog] [info] done; [2018-06-12 21:08:58.508] [jointLog] [info] Index contained 36191 targets; [2018-06-12 21:08:58.508] [stderrLog] [info] Done loading index. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; hits: 169917, hits per frag: 0.0489674[2018-06-12 21:09:22.500] [jointLog] [error] umi indexing of jellyfish failing.; Ple",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/237:3466,Load,Loading,3466,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237,1,['Load'],['Loading']
Performance,"alidateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-20 10:53:54.760] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference sequence | Time = 62.735 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:2256,Load,Loading,2256,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['Load'],['Loading']
Performance,"almon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:3501,Load,Loading,3501,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['Load'],['Loading']
Performance,"and ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:6193,Load,Loading,6193,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"ant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.26074[A. [32mprocessed[31m 1000000 [32mfragments[0m; hits: 1248009, hits per frag: 1.25428[A. [32mprocessed[31m 1500000 [32mfragments[0m; hits: 1873468",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:3583,Load,Loading,3583,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['Load'],['Loading']
Performance,"ar, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_status cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >(unsigned long)::{lambda(unsigned long, unsigned long, std::__exception_ptr::exception_ptr&)#1}) (this=this@entry=0x7fffffffc520, start=34816, start@entry=0, end=65536, func=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1756; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:7808,optimiz,optimized,7808,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['optimiz'],['optimized']
Performance,arcodes; [2018-07-19 18:26:13.334] [alevinLog] [info] Total 54879 white-listed Barcodes; [2018-07-19 18:26:18.285] [alevinLog] [info] Done populating Z matrix; [2018-07-19 18:26:18.300] [alevinLog] [info] Done indexing Barcodes; [2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_64 x86_64 x86_64 GNU/Linux`; `$ lsb_release -a; LSB Version:	core-2.0-noarch:core-3.2-noarch:core-4.0-noarch:core-2.0-x86_64:core-3.2-x86_64:core-4.0-x86_64:desktop-4.0-amd64:desktop-4.0-noarch:graphics-2.0-amd64:graphics-2.0-noarch:graphics-3.2-amd64:graphics-3.2-noarch:graphics-4.0-amd64:graphics-4.0-noarch; ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:5475,load,loading,5475,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['load'],['loading']
Performance,"ary format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping rate = 53.3587%. [2018-11-29 22:40:56.510] [jointLog] [info] finished quantifyLibrary(); [2018-11-29 22:41:01.682] [alevinLog] [info] Starting optimizer. Analyzed 12346 cells (100% of all).; Skipped Barcodes are from High Confidence Region; Should not happen%. **Desktop (please complete the following information):**; - OS: macOS; - Version: 10.14.1. **Additional context**; This failure comes when analyzing data from the new 10X v3 chemistry. Initially, I thought that was the issue, but our analysis worked when using the 'neuron_1k' dataset (the read sequences that makes the program fail come from the 'neuron_10k' dataset), which was also produced with similar v3 chemistry but quasi-maps correctly. I can attach screenshots for either dataset for anyone still trying to figure out the problem.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/324:3346,optimiz,optimizer,3346,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324,1,['optimiz'],['optimizer']
Performance,"ase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:1132,Load,Loading,1132,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,1,['Load'],['Loading']
Performance,"assigned_fragments"": 46363434,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 135602410,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; ```. And here is the `alevin_meta_info.json`, which shows the huge attrition in recognized CBs and poor mapping rate:; ```; ""total_reads"": 1153394214,; ""reads_with_N"": 17295,; ""noisy_cb_reads"": 708796684,; ""noisy_umi_reads"": 149640,; ""used_reads"": 444430595,; ""mapping_rate"": 4.019738736091838,; ""reads_in_eqclasses"": 46363434,; ""total_cbs"": 132768705,; ""used_cbs"": 398369,; ""initial_whitelist"": 5383,; ""low_conf_cbs"": 1000,; ""num_features"": 5,; ""no_read_mapping_cbs"": 148,; ""final_num_cbs"": 3931,; ""deduplicated_umis"": 24178832,; ""mean_umis_per_cell"": 6150,; ""mean_genes_per_cell"": 2810; ```. This, in conjunction with the fact that running with `-l A` suggests incorrectly the data are unstranded (`IU`), led @mikelove to suspect alevin may be skipping the libType guesswork that salmon typically performs. . I know these data are of reasonably good quality, because I have instead processed them using [zUMIs](https://github.com/sdparekh/zUMIs), which supports SPLiT-seq data. A side-by-side of the same FASTQs processed this way using alevin or using zUMIs gave me ~270 cells that pass filters (alevin) vs ~50k cells that pass filters (zUMIs), so something is definitely up here. . I'd like to confirm a few details and ask for some guidance on how to move forward:. 1. Is the reversal of R1/R2 like I did here necessary/recommended/correct?; 2. Is alevin truly skipping the libType identification bits such that I need to know which architecture to use? If so, how do I know?; 3. Why are so many CBs called as ""noisy"" here?; 4. Why is the mapping rate so low?; 5. Is there anything else I'm missing that can explain the unexpectedly poor outcome, or some other reason why this approach will not w",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699:6444,perform,performs,6444,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699,1,['perform'],['performs']
Performance,"at 4345 ; [2018-09-11 16:33:59.242] [alevinLog] [info] Learned InvCov: 713.683 normfactor: 1183.93; [2018-09-11 16:33:59.242] [alevinLog] [info] Total 5344(has 999 low confidence) barcodes; [2018-09-11 16:33:59.358] [alevinLog] [info] Done True Barcode Sampling; [2018-09-11 16:33:59.891] [alevinLog] [info] Done populating Z matrix; [2018-09-11 16:33:59.972] [alevinLog] [info] Done indexing Barcodes; [2018-09-11 16:33:59.972] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-09-11 16:33:59.972] [alevinLog] [info] Used Barcodes except Whitelist: 173007; [2018-09-11 16:34:00.783] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-09-11 16:34:00.784] [alevinLog] [info] parsing read library format; [2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:11114,Load,Loading,11114,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['Load'],['Loading']
Performance,"ause of noisy Cellular barcodes.; [2019-01-29 15:49:35.112] [alevinLog] [info] Total 4000(has 1000 low confidence) barcodes; [2019-01-29 15:49:35.251] [alevinLog] [info] Done True Barcode Sampling; [2019-01-29 15:49:35.896] [alevinLog] [info] Done populating Z matrix; [2019-01-29 15:49:35.994] [alevinLog] [info] Done indexing Barcodes; [2019-01-29 15:49:35.994] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-29 15:49:35.994] [alevinLog] [info] Used Barcodes except Whitelist: 105901; [2019-01-29 15:49:36.107] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-29 15:49:36.107] [alevinLog] [info] parsing read library format; [2019-01-29 15:49:36.415] [stderrLog] [info] Loading Suffix Array; [2019-01-29 15:49:36.107] [jointLog] [info] There is 1 library.; [2019-01-29 15:49:36.373] [jointLog] [info] Loading Quasi index; [2019-01-29 15:49:36.396] [jointLog] [info] Loading 32-bit quasi index; [2019-01-29 15:49:50.479] [stderrLog] [info] Loading Transcript Info; [2019-01-29 15:49:55.550] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-01-29 15:49:56.036] [stderrLog] [info] There were 58,086 set bits in the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Found 21006 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-29 16:05:4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:1507,Load,Loading,1507,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['Load'],['Loading']
Performance,"b total reads per sample (90,000,000 to 100,000,000 reads, ~75 bp reads). I've tried running these samples through the `nf-core/rnaseq` pipeline, but the pipeline took an age to run before dying at the `salmon quant` steps. Some samples finished in about 12 minutes. Others timed out after 8+ hours. - Successful log:. ```; [2023-02-22 16:33:49.782] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-22 16:33:49.782] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-22 16:33:49.782] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-22 16:33:49.782] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-22 16:33:49.782] [jointLog] [info] parsing read library format; [2023-02-22 16:33:49.783] [jointLog] [info] There is 1 library.; [2023-02-22 16:33:49.784] [jointLog] [info] Loading pufferfish index; [2023-02-22 16:33:49.784] [jointLog] [info] Loading dense pufferfish index.; [2023-02-22 16:34:17.987] [jointLog] [info] done; [2023-02-22 16:34:18.037] [jointLog] [info] Index contained 245549 targets; [2023-02-22 16:34:19.908] [jointLog] [info] Number of decoys : 194; [2023-02-22 16:34:19.908] [jointLog] [info] First decoy index : 245314 ; [2023-02-22 16:39:30.638] [jointLog] [info] Thread saw mini-batch with a maximum of 1.10% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.02% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2023-02-22 16:39:30.654] [jointLog] [info] Thread saw mini-batch with a maximum of 1.12% zero probability fragments; [2023-02-22 16:39:30.679] [jointLog] [info] Thread saw mini-batch with a maximum of 1.02% zero probability fragments; [2023-02-22 16:39:30.680] [jointLog] [info] Thread s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:1142,Load,Loading,1142,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['Load'],['Loading']
Performance,"b2450d88e8e92fa0f3c06/ACV_REP2_1_val_1.fq.gz }; ### [ mates2 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_2_val_2.fq.gz }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { ACV_REP2 }; Logs will be written to ACV_REP2/logs; [2023-02-23 09:39:48.709] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-23 09:39:48.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; --------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:9202,Load,Loading,9202,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['Load'],['Loading']
Performance,barcodes; [2021-04-09 12:16:37.883] [alevinLog] [info] Done True Barcode Sampling; [2021-04-09 12:16:37.884] [alevinLog] [info] Total 15.7% reads will be thrown away because of noisy Cellular barcodes.; [2021-04-09 12:16:37.892] [alevinLog] [info] Done populating Z matrix; [2021-04-09 12:16:37.892] [alevinLog] [info] Total 0 CB got sequence corrected; [2021-04-09 12:16:37.892] [alevinLog] [info] Done indexing Barcodes; [2021-04-09 12:16:37.892] [alevinLog] [info] Total Unique barcodes found: 822; [2021-04-09 12:16:37.892] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2021-04-09 12:16:37.914] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-04-09 12:16:37.914] [alevinLog] [info] parsing read library format; [2021-04-09 12:16:37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading pufferfish index; [2021-04-09 12:16:38.027] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:4245,Load,Loading,4245,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['Load'],['Loading']
Performance,"be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:02:11.308] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment group queue pool has been exhausted. 1842 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 13423395 reads in current round; killing thread 3 . . . done. Freeing memory used by read queue . . . 00000; Joined parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointLog] [info] iteration = 0 | max rel diff. = 237.557; [2023-01-29 16:02:59.282] [jointLog] [info] iteration = 100 | max rel diff. = 3.78077e-16; [2023-01-29 16:02:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:3005,queue,queue,3005,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['queue'],['queue']
Performance,"be ignored.; [2021-08-20 12:29:32.343] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-08-20 12:29:32.343] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 12:29:32.343] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-08-20 12:29:32.343] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 12:29:32.343] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-08-20 13:19:51.055] [jointLog] [info] There is 1 library.; [2021-08-20 13:19:51.124] [jointLog] [info] Loading pufferfish index; [2021-08-20 13:19:51.125] [jointLog] [info] Loading dense pufferfish index.; [2021-08-20 13:19:53.706] [jointLog] [info] done; [2021-08-20 13:19:53.706] [jointLog] [info] Index contained 231,288 targets; [2021-08-20 13:19:53.777] [jointLog] [info] Number of decoys : 0; [2021-08-20 16:03:00.061] [jointLog] [info] Computed 307,354 rich equivalence classes for further processing; [2021-08-20 16:03:00.061] [jointLog] [info] Counted 46,363,434 total reads in the equivalence classes ; [2021-08-20 16:03:00.062] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2021-08-20 16:03:00.062] [jointLog] [warning] Found 149640 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2021-08-20 16:03:00.062] [jointLog] [info] Mapping rate = 4.01974%. [2021-08-20 16:03:00.062] [jointLog] [info] finished quantifyLibrary(); ```. And here is my `lib_format_counts.json`, which has 0s for the different potential libTypes and shows a very high rate of inconsi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699:4150,Load,Loading,4150,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699,1,['Load'],['Loading']
Performance,"cessing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinLog] [error] Barcode not found in frequency table; ```. Is there any way to avoid using barcodes, or to overcome this error. ; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369:5799,Load,Loading,5799,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369,5,"['Load', 'load']","['Loading', 'loading']"
Performance,"ckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, A",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:9567,optimiz,optimized,9567,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['optimiz'],['optimized']
Performance,"ckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:11529,optimiz,optimized,11529,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,2,['optimiz'],['optimized']
Performance,"command ] => quant; \#\#\# [ index ] => { salmon010.index.all_combined }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { R1.fastq.gz }; \#\#\# [ mates2 ] => { R2.fastq.gz }; \#\#\# [ posBias ] => { }; \#\#\# [ gcBias ] => { }; \#\#\# [ seqBias ] => { }; \#\#\# [ useVBOpt ] => { }; \#\#\# [ validateMappings ] => { }; \#\#\# [ output ] => { processed_salmon0100_k31_allcombined/R }; Logs will be written to processed_salmon0100_k31_allcombined/R/logs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229:1235,Load,Loading,1235,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229,1,['Load'],['Loading']
Performance,"common/modules/el8/x86_64/software/${package}/${pversion}-CentOS-vanilla; THELUA=/usr/common/modules/el8/x86_64/modules/all/${package}/${pversion}-CentOS-vanilla.lua; cd /usr/common/src; git clone -b develop https://github.com/COMBINE-lab/salmon.git; mv ${package} ${package}-${pversion}; cd ${package}-${pversion}; cp CMakeLists.txt CMakeLists.txt.dist; cat >mypatch <<'EOD'; --- CMakeLists.txt.dist	2020-04-21 22:31:07.000000000 -0700; +++ CMakeLists.txt	2020-06-09 14:55:02.733885772 -0700; @@ -419,6 +419,10 @@; find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); +message(""Forcing Boost_FOUND to TRUE""); +set(Boost_FOUND TRUE); +set(Boost_LIBRARY_DIRS ""/usr/lib64/boost169""); +set(Boost_LIBRARIES -lboost_iostreams -lboost_filesystem -lboost_system -lboost_timer -lboost_chrono -lboost_program_options); message(""Boost_FOUND = ${Boost_FOUND}""); endif(); ; EOD; patch -p0 <mypatch; module load cmake; module load io_lib; module load libgff; module load libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provid",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/541:1150,load,load,1150,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541,5,['load'],['load']
Performance,"d 52 Million fragmentsvinLog] [info] parsing read library format; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:55:42.905] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:55:42.931] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.931] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 UniDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [warning] Skipped 50091 barcodes due to No mapped read; > [2020-06-03 13:55:42.934] [alevinLog] [info] Clearing EqMap; Might take some time.; > [2020-06-03 13:55:42.940] [alevinLog] [warning] Num Low confidence barcodes too less 1 < 200.Can't performing whitelisting; Skipping; > [2020-06-03 13:55:42.940] [alevinLog] [info] Finished optimizer; > `. I also tried . `salmon alevin -l ISR --chromium --featureStart 19 --featureLength 21 --tgMap guide_to_gene.tsv`. But I get the following output. > `; > [2020-06-03 13:47:17.330] [alevinLog] [info] Found 64 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); > [2020-06-03 13:47:17.330] [alevinLog] [info] Filled with 64 txp to gene entries ; > [2020-06-03 13:47:17.330] [alevinLog] [info] Found all transcripts to gene mappings; > [2020-06-03 13:47:17.336] [alevinLog] [info] Processing barcodes files (if Present) ; > ; > processed 52 Million barcodes; > ; > [2020-06-03 13:48:30.047] [alevinLog] [info] Done barcode density calculation.; > [2020-06-03 13:48:30.047] [alevinLog] [info] # Barcodes Used: 52200250 / 52200250.; > [2020-06-03 13:48:33.285] [alevinLog] [info] Knee found left boundary at 1174 ; > [2020-06-03 13:48:34.501] [alevinLog] [info] Gauss Corrected Boundary at 148 ; > [2020-06-03 13:48:34.501] [alevinLog] [info] Learned InvCov: 985.9",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/531:3761,optimiz,optimizer,3761,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531,1,['optimiz'],['optimizer']
Performance,"d libtbb; # module load pufferfish #ignored even if set; mkdir build; cd build; cmake \; -DCMAKE_INSTALL_PREFIX=$TOPDIR \; -DSTADEN_ROOT=$ROOT_IO_LIB \; -DGFF_ROOT=$ROOT_LIBGFF \; -DTBB_ROOT=$ROOT_LIBTBB \; -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_23.log; make -j 4 2>&1 | tee build_2020_06_23.log; make test # both passed; make install 2>&1 | tee install_2020_06_23.log; cd ..; cp sample_data.tgz $TOPDIR; module_generate_from_directory.sh \; $package \; $pversion \; CentOS/vanilla \; $TOPDIR \; ""Fast highly-accurate, transcript-level quantification estimates from RNA-seq data."" \; ""https://github.com/COMBINE-lab/salmon""; ```. When the following commands are run in an XFCE4 terminal or an uxterm (black text, white background) using the sample data provided in the distribution:. ```; gunzip -c sample_data.tgz | (cd /tmp; tar -xf -); module load salmon; cd /tmp/sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type puff; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant. ```; the output line:. ```; [2020-06-23 13:58:50.657] [jointLog] [warning] Only 10000 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings.; ```. is emitted in yellow. Yellow on white is nearly impossible to read. The rest of the text is black (as it should be). If the final command is instead:. ```; salmon quant -i sample_salmon_fmd_index \; -l IU \; -1 reads_1.fastq -2 reads_2.fastq \; -o sample_salmon_fmd_quant >/tmp/sq.log 2>&1. ```. There are no embedded control codes in the sq.log file. Changing the terminal to white text on black background also results in that line being colored yellow. Yellow on black is easy enough to read. I understand that normally this is run in a script ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/541:2199,load,load,2199,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/541,1,['load'],['load']
Performance,"d parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointLog] [info] iteration = 0 | max rel diff. = 237.557; [2023-01-29 16:02:59.282] [jointLog] [info] iteration = 100 | max rel diff. = 3.78077e-16; [2023-01-29 16:02:59.282] [jointLog] [info] finished optimizer; [2023-01-29 16:02:59.282] [jointLog] [info] writing output. ```. Output for failure case - 48 files:. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a $file_list -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { apex_infe_t1_rep1_S29_R1_001Aligned.out.bam apex_infe_t1_rep3_S53_R1_001Aligned.out.bam apex_infe_t2_rep1_S30_R1_001Aligned.out.bam apex_infe_t2_rep3_S54_R1_001Aligned.out.bam apex_infe_t3_rep1_S31_R1_001Aligned.out.bam apex_infe_t3_rep3_S55_R1_001Aligned.out.bam apex_infe_t4_rep1_S32_R1_001Aligned.out.bam apex_infe_t4_rep3_S56_R1_001Aligned.out.bam apex_infe_t5_rep1_S33_R1_001Aligned.out.bam apex_infe_t5_rep3_S57_R1_001Aligned.out.bam apex_infe_t6_rep1_S34_R1_00",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:4029,optimiz,optimizer,4029,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['optimiz'],['optimizer']
Performance,"d }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { R1.fastq.gz }; \#\#\# [ mates2 ] => { R2.fastq.gz }; \#\#\# [ posBias ] => { }; \#\#\# [ gcBias ] => { }; \#\#\# [ seqBias ] => { }; \#\#\# [ useVBOpt ] => { }; \#\#\# [ validateMappings ] => { }; \#\#\# [ output ] => { processed_salmon0100_k31_allcombined/R }; Logs will be written to processed_salmon0100_k31_allcombined/R/logs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229:1308,Load,Loading,1308,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229,1,['Load'],['Loading']
Performance,"d.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-27 11:44:12.350] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-27 11:44:12.350] [jointLog] [info] parsing read library format; [2019-08-27 11:44:12.350] [jointLog] [info] There is 1 library.; [2019-08-27 11:44:12.396] [stderrLog] [info] Loading Suffix Array; [2019-08-27 11:44:12.395] [jointLog] [info] Loading Quasi index; [2019-08-27 11:44:12.395] [jointLog] [info] Loading 32-bit quasi index; [2019-08-27 11:44:13.913] [stderrLog] [info] Loading Transcript Info; [2019-08-27 11:44:14.720] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-08-27 11:44:14.809] [stderrLog] [info] There were 583,596 set bits in the bit array; [2019-08-27 11:44:14.859] [stderrLog] [info] Computing transcript lengths; [2019-08-27 11:44:14.860] [stderrLog] [info] Waiting to finish loading hash; [2019-08-27 11:44:23.916] [stderrLog] [info] Done loading index; [2019-08-27 11:44:23.916] [jointLog] [info] done; [2019-08-27 11:44:23.916] [jointLog] [info] Index contained 583,596 targets. processed 978,500,000 fragments; hits: 2,484,589,998, hits per frag: 2.53933terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted. ```. **Desktop (please complete the following information):**; - OS: RHEL 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/426:2696,Load,Loading,2696,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426,7,"['Load', 'load']","['Loading', 'loading']"
Performance,"d1c4adaacc6b23ad10cc00; seqHash 512 : 29ef1f67a252009538c30d22ab52f1aae09605f9cd6eb731cb5866275eeb4f50917c409fdac10c5da1a6396687c8d3da64ab33dc7cb426dba961639385ce7040; nameHash 256 : 120179531963e6930022681ba9f4226ad0871ca0f6ae01f6c16be496fee9e03f; nameHash 512 : 3ba5b8d011fe981bf67b581cb6d3d83ae1b8d7885c868b7ab634bbf86448889fcc246b9e65374b79270f6d11d5a71ac6335910fcda2b1b9e86bcafe1ae3ae89f; [2020-07-04 15:10:22.800] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-07-04 15:11:07.094] [puff::index::jointLog] [info] ntHll estimated 2630714644 distinct k-mers, setting filter size to 2^36; error: Can't open a temporary file; error: Can't read the input file; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory /scratch/jl2e19/salmon_index; size = 0; -----------------------------------------; | Loading contigs | Time = 84.402 us; -----------------------------------------; size = 0; -----------------------------------------; | Loading contig boundaries | Time = 30.909 us; -----------------------------------------; Number of ones: 0; Number of ones per inventory item: 512; Inventory entries filled: 1; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] contig count for validation: 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info]; Total # of segments we have position for : 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] total contig vec entries 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] bits per offset entry 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] there were 0 equivalence classes; [2020-07-04 15:34:24.278] [puff::index::jointLog] [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:16403,Load,Loading,16403,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,1,['Load'],['Loading']
Performance,"ds/Trimmed/P2-5-11_221020_L002_R2.fastq.gz }; ### [ threads ] => { 100 }; ### [ validateMappings ] => { }; ### [ output ] => { salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant }; Logs will be written to salmon_out/P2-45-54_221020_L002_R1.fastq.gz_quant/logs; [2023-08-27 19:59:26.866] [jointLog] [info] setting maxHashResizeThreads to 100; [2023-08-27 19:59:26.866] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; ---------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:10124,Load,Loading,10124,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['Load'],['Loading']
Performance,"e = 0.590918%. ```. and then this after processing the cells:; ```; [2018-07-24 10:56:23.180] [alevinLog] [info] Total 21135 UMI after deduplicating.; [2018-07-24 10:56:23.180] [alevinLog] [warning] Skipped 4 barcodes due to No mapped read; [2018-07-24 10:56:23.213] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-07-24 10:56:23.230] [alevinLog] [info] Starting Import of the gene count matrix.; [2018-07-24 10:56:23.743] [alevinLog] [info] Done Importing gene count matrix for dimension 290x57964; [2018-07-24 10:56:23.743] [alevinLog] [info] Starting dumping cell v gene counts in csv format; [2018-07-24 10:56:29.089] [alevinLog] [info] Finished dumping csv counts; [2018-07-24 10:56:29.089] [alevinLog] [info] Starting white listing; [2018-07-24 10:56:29.090] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2018-07-24 10:56:29.090] [alevinLog] [info] Total 290 barcodes found; [2018-07-24 10:56:29.090] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [info] Starting to make feature Matrix; [2018-07-24 10:56:29.354] [alevinLog] [info] Done making regular featues; [2018-07-24 10:56:29.354] [alevinLog] [info] Done making feature Matrix; [2018-07-24 10:56:29.359] [alevinLog] [info] Finished white listing; [2018-07-24 10:56:29.371] [alevinLog] [info] Finished optimizer; ```. Other info:; Salmon v0.11.0 - downloaded binary from Github; I used Gencode 28 for the transcriptome; read files: https://www.ncbi.nlm.nih.gov/sra/SRX2676721[accn]. OS: CentOS; version: 2.6.32-696.23.1.el6.centos.plus.x86_64; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	CentOS; Description:	CentOS release 6.9 (Final); Release:	6.9; Codename:	Final",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/258:5970,optimiz,optimizer,5970,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258,1,['optimiz'],['optimizer']
Performance,"e as U; processed 37,000,000 fragments; hits: 117,167,504; hits per frag: 3.16785. [2021-09-20 16:24:48.269] [jointLog] [info] Computed 309,226 rich equivalence classes for further processing; [2021-09-20 16:24:48.269] [jointLog] [info] Counted 34,252,402 total reads in the equivalence classes ; [2021-09-20 16:24:48.274] [jointLog] [info] Number of mappings discarded because of alignment score : 13,534,931; [2021-09-20 16:24:48.274] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 627,298; [2021-09-20 16:24:48.274] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 340,039; [2021-09-20 16:24:48.274] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 0; [2021-09-20 16:24:48.274] [jointLog] [info] Mapping rate = 91.4927%. [2021-09-20 16:24:48.274] [jointLog] [info] finished quantifyLibrary(); [2021-09-20 16:24:48.279] [jointLog] [info] Starting optimizer; [2021-09-20 16:24:48.402] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-09-20 16:24:48.422] [jointLog] [info] iteration = 0 | max rel diff. = 9200.26; [2021-09-20 16:24:49.989] [jointLog] [info] iteration = 100 | max rel diff. = 17.4012; [2021-09-20 16:24:51.518] [jointLog] [info] iteration = 200 | max rel diff. = 19.9377; [2021-09-20 16:24:53.017] [jointLog] [info] iteration = 300 | max rel diff. = 14.738; [2021-09-20 16:24:54.590] [jointLog] [info] iteration = 400 | max rel diff. = 8.91734; [2021-09-20 16:24:56.130] [jointLog] [info] iteration = 500 | max rel diff. = 1.26201; [2021-09-20 16:24:57.628] [jointLog] [info] iteration = 600 | max rel diff. = 0.155034; [2021-09-20 16:24:59.130] [jointLog] [info] iteration = 700 | max rel diff. = 16.1436; [2021-09-20 16:25:00.660] [jointLog] [info] iteration = 800 | max rel diff. = 2.09965; [2021-09-20 16:25:02.202] [jointLog] [info] iteration = 900 | max rel diff. = 0.122996; [2021-09-20 16:25:03.75",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:7229,optimiz,optimizer,7229,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['optimiz'],['optimizer']
Performance,"e of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.84% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.88% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.00% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.92% zero probability fragments; [2018-05-31 17",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229:1894,load,loading,1894,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229,1,['load'],['loading']
Performance,"e, consider re-building the index with a smaller k.; The minimum read size found was 20. [2024-01-27 01:10:28.202] [jointLog] [info] Number of mappings discarded because of alignment score : 18,226,670; [2024-01-27 01:10:28.202] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 762,980; [2024-01-27 01:10:28.202] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2024-01-27 01:10:28.202] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 82,701; [2024-01-27 01:10:28.219] [jointLog] [warning] Only 446871 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2024-01-27 01:10:28.219] [jointLog] [info] Mapping rate = 12.4124%. [2024-01-27 01:10:28.219] [jointLog] [info] finished quantifyLibrary(); [2024-01-27 01:10:28.224] [jointLog] [info] Starting optimizer; [2024-01-27 01:10:28.368] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2024-01-27 01:10:28.376] [jointLog] [info] iteration = 0 | max rel diff. = 174.042; [2024-01-27 01:10:28.453] [jointLog] [info] iteration 11, adjusting effective lengths to account for biases; [2024-01-27 01:10:52.990] [jointLog] [info] Computed expected counts (for bias correction); [2024-01-27 01:10:52.990] [jointLog] [info] processed bias for 0.0% of the transcripts; [2024-01-27 01:10:55.410] [jointLog] [info] processed bias for 10.0% of the transcripts; [2024-01-27 01:10:57.934] [jointLog] [info] processed bias for 20.0% of the transcripts; [2024-01-27 01:11:00.570] [jointLog] [info] processed bias for 30.0% of the transcripts; [2024-01-27 01:11:03.092] [jointLog] [info] processed bias for 40.0% of the transcripts; [2024-01-27 01:11:05.416] [jointLog] [info] processed bias for 50.0% of the transcripts; [2024-01-27 01:11:07.798] [jointLog] [info] processed bias for 60.0% of t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/908:2943,optimiz,optimizer,2943,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908,1,['optimiz'],['optimizer']
Performance,"e; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-08-02 14:41:46.432] [jointLog] [info] Mapping rate = 42.6252%. [2017-08-02 14:41:46.432] [jointLog] [info] finished quantifyLibrary(",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:1342,Load,Loading,1342,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,1,['Load'],['Loading']
Performance,"eads to 48; [2022-12-03 15:43:11.767] [jointLog] [info] Fragment incompatibility prior below threshold. ; Incompatible fragments will be ignored.; [2022-12-03 15:43:11.767] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-12-03 15:43:11.767] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-12-03 15:43:11.767] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2022-12-03 15:43:11.767] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-12-03 15:43:11.767] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2022-12-03 15:58:24.389] [jointLog] [info] There is 1 library.; [2022-12-03 15:58:24.435] [jointLog] [info] Loading pufferfish index; [2022-12-03 15:58:24.454] [jointLog] [info] Loading dense pufferfish index.; [2022-12-03 15:58:26.905] [jointLog] [info] done; [2022-12-03 15:58:26.973] [jointLog] [info] Index contained 117,377 targets; [2022-12-03 15:58:27.002] [jointLog] [info] Number of decoys : 0; [2022-12-03 16:17:44.963] [jointLog] [info] Computed 194,611 rich equivalence classes for further processing; [2022-12-03 16:17:44.963] [jointLog] [info] Counted 35,761,228 total reads in the equivalence classes; [2022-12-03 16:17:44.964] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2022-12-03 16:17:44.964] [jointLog] [warning] Found 9264 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2022-12-03 16:17:44.964] [jointLog] [info] Mapping rate = 5.59508%. [2022-12-03 16:17:44.964] [jointLog] [info] finished quantifyLibrary(). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/814:5202,Load,Loading,5202,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814,2,['Load'],['Loading']
Performance,"ed alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment group queue pool has been exhausted. 1842 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 13423395 reads in current round; killing thread 3 . . . done. Freeing memory used by read queue . . . 00000; Joined parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointLog] [info] iteration = 0 | max rel diff. = 237.557; [2023-01-29 16:02:59.282] [jointLog] [info] iteration = 100 | max rel diff. = 3.78077e-16; [2023-01-29 16:02:59.282] [jointLog] [info] finished optimizer; [2023-01-29 16:02:59.282] [jointLog] [info] writing output. ```. Output for failure case - 48 files:. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/A",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:3209,Queue,Queue,3209,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['Queue'],['Queue']
Performance,"ed more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/304:1660,load,loading,1660,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304,1,['load'],['loading']
Performance,"eduplicated_umis"": 402386555,; ""mean_umis_per_cell"": 2954,; ""mean_genes_per_cell"": 896; }; ```. \* total reads have been corrected by adding 2^32. From my understanding of the numbers, this suggests a PCR duplication rate of either 8.95X (comparing ""used reads"" with ""deduplicated umis"") or 6.16X (comparing ""reads in eqclasses"" with ""deduplicated umis""). I had a go at trying to ""manually"" count (via awk/grep/sort/uniq/etc.) the cell barcodes and UMIs associated with the MT-ND1 gene:. ND1-matching reads with good cell barcode QC (barcodes linkable to expected cell barcodes), and good mapping (>60bp matching): 5292134; Unique cell/UMI pairs (subset from the above data): 1590232; => PCR duplication rate ~= 3.32 reads per unique molecule. So it seems like the duplication rate might be closer to the SevenBridges estimate than the Alevin estimate. The Alevin documentation seems to suggest that cell/transcript/UMI triplets are being used for UMI collapsing (""identify potential PCR/sequencing errors in the UMIs, and performs hybrid de-duplication while accounting for UMI collisions""), so I'm at a loss as to why the difference is this large. I'm not too worried about numbers being different, but the UMI proportion is a concern to me, because sequencing is expensive, and it'd be good to have an idea of whether we need to further improve our library prep (which would certainly be the case for 9X duplication, but less important with 3-5X duplication). Is anyone able to explain how the UMI deduplication is applied in Salmon Alevin, or why it might be different from other analysis platforms?. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? Binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v42; * Which read files were used? NovaSeq 6000 S2; * Which program options were used?. ```; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/808:2060,perform,performs,2060,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808,1,['perform'],['performs']
Performance,"elist: 0; [2021-04-09 12:16:37.914] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-04-09 12:16:37.914] [alevinLog] [info] parsing read library format; [2021-04-09 12:16:37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading pufferfish index; [2021-04-09 12:16:38.027] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.9587 ms; -----------------------------------------; [2021-04-09 12:16:41.658] [jointLog] [info] done; [2021-04-09 12:16:41.658] [jointLog] [info] Index contained 45,375 targets; [2021-04-09 12:16:41.673] [jointLog] [info] Number of decoys : 1; [2021-04-09 12:16:41.673] [jointLog] [info] Firs",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:4895,Load,Loading,4895,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['Load'],['Loading']
Performance,"ells 3000; ```; [2019-01-29 15:49:33.693] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:49:33.693] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:49:35.112] [alevinLog] [info] Total 49.4292% reads will be thrown away because of noisy Cellular barcodes.; [2019-01-29 15:49:35.112] [alevinLog] [info] Total 4000(has 1000 low confidence) barcodes; [2019-01-29 15:49:35.251] [alevinLog] [info] Done True Barcode Sampling; [2019-01-29 15:49:35.896] [alevinLog] [info] Done populating Z matrix; [2019-01-29 15:49:35.994] [alevinLog] [info] Done indexing Barcodes; [2019-01-29 15:49:35.994] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-29 15:49:35.994] [alevinLog] [info] Used Barcodes except Whitelist: 105901; [2019-01-29 15:49:36.107] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-29 15:49:36.107] [alevinLog] [info] parsing read library format; [2019-01-29 15:49:36.415] [stderrLog] [info] Loading Suffix Array; [2019-01-29 15:49:36.107] [jointLog] [info] There is 1 library.; [2019-01-29 15:49:36.373] [jointLog] [info] Loading Quasi index; [2019-01-29 15:49:36.396] [jointLog] [info] Loading 32-bit quasi index; [2019-01-29 15:49:50.479] [stderrLog] [info] Loading Transcript Info; [2019-01-29 15:49:55.550] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-01-29 15:49:56.036] [stderrLog] [info] There were 58,086 set bits in the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.67",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:1238,Load,Loading,1238,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['Load'],['Loading']
Performance,ene counts and my transcript count files are empty??; How is that possible; Cheers; Ashok; ```; [2017-07-18 17:14:11.438] [jointLog] [info] parsing read library format; [2017-07-18 17:14:11.438] [jointLog] [info] There is 1 library.; [2017-07-18 17:14:11.485] [jointLog] [info] Loading Quasi index; [2017-07-18 17:14:11.485] [jointLog] [info] Loading 32-bit quasi index; [2017-07-18 17:14:21.207] [jointLog] [info] done; [2017-07-18 17:14:21.207] [jointLog] [info] Index contained 107368 targets; [2017-07-18 17:14:22.320] [jointLog] [info] Automatically detected most likely library type as SF; [2017-07-18 17:22:52.788] [jointLog] [info] Computed 280679 rich equivalence classes for further processing; [2017-07-18 17:22:52.788] [jointLog] [info] Counted 27517563 total reads in the equivalence classes; [2017-07-18 17:22:52.850] [jointLog] [info] Mapping rate = 37.9965%. [2017-07-18 17:22:52.850] [jointLog] [info] finished quantifyLibrary(); [2017-07-18 17:22:52.853] [jointLog] [info] Starting optimizer; [2017-07-18 17:22:52.789] [fileLog] [info]; At end of round 0; ==================; Observed 72421398 total fragments (72421398 in most recent round). [2017-07-18 17:22:52.981] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2017-07-18 17:22:52.990] [jointLog] [info] iteration = 0 | max rel diff. = 9.36177; [2017-07-18 17:22:53.935] [jointLog] [info] iteration = 100 | max rel diff. = 0.0782409; [2017-07-18 17:22:54.889] [jointLog] [info] iteration = 200 | max rel diff. = 0.0347085; [2017-07-18 17:22:55.784] [jointLog] [info] iteration = 300 | max rel diff. = 0.0249461; [2017-07-18 17:22:56.790] [jointLog] [info] iteration = 400 | max rel diff. = 0.0188653; [2017-07-18 17:22:57.752] [jointLog] [info] iteration = 500 | max rel diff. = 0.0157419; [2017-07-18 17:22:58.688] [jointLog] [info] iteration = 600 | max rel diff. = 0.0128394; [2017-07-18 17:22:59.422] [jointLog] [info] iteration = 681 | max rel diff. = 0.00982758; [2017-07-18 17:22:59.432] [jointL,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/143:1121,optimiz,optimizer,1121,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/143,1,['optimiz'],['optimizer']
Performance,"ents will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] do",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:3484,Load,Loading,3484,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['Load'],['Loading']
Performance,"eq"": true,; > ""have_edge_vec"": false,; > ""SeqHash"": ""34c8b30e5d42a0d4459fb24e44ecef46af39893984bf9613001e925a7b1308b7"",; > ""NameHash"": ""b503f6a369add974e996e5f42942882b50c2bf1419400420255d32a88fb61a18"",; > ""SeqHash512"": ""4b94376c390dd8e917d39dfbaed1092d9a661dbdb67635863f9a14b129948f1244929faf60f5b7c1d6fae142d87fb2c66455f49d0d3663f7498b275efad4ed93"",; > ""NameHash512"": ""46c31c9178b3290b2f57e9b682ea8eebe885ba9037e48cb6b385a0c70ce13e2b259400bc9bda4aca912c3b857edde7de41d11b1a7b9ccbe8b24df77808c22e59"",; > ""DecoySeqHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""DecoyNameHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""num_decoys"": 0,; > ""first_decoy_index"": 18446744073709551607,; > ""keep_duplicates"": false; > }. And the command I used:. `/home/bayegy/pipelines/metagenome/softwares/salmon-latest_linux_x86_64/bin/salmon quant --validateMappings -i /media/bayegy/disk1/Projects/qianquan-zhangke/result/Assembly_out//salmon_index -l A -p 90 --meta -1 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_1.fastq.gz -2 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_2.fastq.gz -o /media/bayegy/disk1/Projects/qianquan-zhangke/result/salmon_out//YGSC11.quant`. Sometimes, salmon would stay at the step of ""Starting optimizer"" for hours(10 hours at least). The CPU utilization is 100%, but the procedure never move forward. > [2020-06-04 12:06:12.254] [jointLog] [info] Mapping rate = 91.8009%; > ; > [2020-06-04 12:06:12.254] [jointLog] [info] finished quantifyLibrary(); > [2020-06-04 12:06:12.254] [jointLog] [info] Starting optimizer. The funny thing is that salmon would pass this step in no time if I restart the procedure with same command. It is annoying that I have to check the log time to time to restart salmon when it get blocked. I wonder what is the possible reason for this and how can i stop this from happening again. . Many thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/532:1822,optimiz,optimizer,1822,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/532,2,['optimiz'],['optimizer']
Performance,"er; 2) exported path: export PATH=$PATH:/.../.../Salmon-0.8.2_linux_x86_64/bin/; 3) built index: salmon index -t salmon.index.human.052617.tar -i human_index; 4) now I want to preform quantification on fastq files (only one end of paired end, trimmed for 40 bp): ; salmon quant -i human_index -l U -r Sample1_r1_trimmed.fastq -p 5 -o quants/Sample1_quant. Logs will be written to quants/Sample1_quant/logs; [2017-10-25 10:57:25.879] [jointLog] [info] parsing read library format; [2017-10-25 10:57:25.879] [jointLog] [info] There is 1 library.; [2017-10-25 10:57:26.002] [jointLog] [info] Loading Quasi index; [2017-10-25 10:57:26.002] [jointLog] [info] Loading 32-bit quasi index; [2017-10-25 10:57:26.012] [jointLog] [info] done; [2017-10-25 10:57:26.012] [jointLog] [info] Index contained 28 targets; [2017-10-25 10:57:26.003] [stderrLog] [info] Loading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 10:58:22.295] [jointLog] [info] Starting optimizer; [2017-10-25 10:58:22.3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/167:1160,Load,Loading,1160,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167,1,['Load'],['Loading']
Performance,"eration = 1,100 | max rel diff. = 0.172304; [2021-06-07 21:05:14.993] [jointLog] [info] iteration = 1,200 | max rel diff. = 1.17312; [2021-06-07 21:05:16.651] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.111995; [2021-06-07 21:05:18.313] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.0191206; [2021-06-07 21:05:19.978] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.125342; [2021-06-07 21:05:21.640] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.024507; [2021-06-07 21:05:23.304] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.109772; [2021-06-07 21:05:23.469] [jointLog] [info] iteration = 1,711 | max rel diff. = 0.00699727; [2021-06-07 21:05:23.499] [jointLog] [info] finished optimizer; [2021-06-07 21:05:23.499] [jointLog] [info] writing output; [2021-06-07 21:05:23.829] [jointLog] [info] Staring Bootstrapping; [2021-06-07 21:05:23.962] [jointLog] [info] Will draw 30 bootstrap samples; [2021-06-07 21:05:23.962] [jointLog] [info] Optimizing over 430,852 equivalence classes; ```. `-l ISF`:; ```; Completed first pass through the alignment file.; Total # of mapped reads : 30,418,756; # of uniquely mapped reads : 8,515,058; # ambiguously mapped reads : 21,903,698; [2021-06-08 03:44:49.444] [jointLog] [info] Computed 430,882 rich equivalence classes for further processing; [2021-06-08 03:44:49.444] [jointLog] [info] Counted 29,619,881 total reads in the equivalence classes; [2021-06-08 03:44:49.445] [jointLog] [info] starting optimizer; [2021-06-08 03:44:49.599] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-06-08 03:44:49.615] [jointLog] [info] iteration = 0 | max rel diff. = 5827.73; [2021-06-08 03:44:51.123] [jointLog] [info] iteration = 100 | max rel diff. = 17.6527; [2021-06-08 03:44:52.620] [jointLog] [info] iteration = 200 | max rel diff. = 20.0555; [2021-06-08 03:44:54.133] [jointLog] [info] iteration = 300 | max rel diff. = 2.81129; [2021-06-08 03:44:55.641] [jointLog] [info] iteration = 40",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/669:4588,Optimiz,Optimizing,4588,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669,1,['Optimiz'],['Optimizing']
Performance,es/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [jointLog] [info] Computed 137534 rich equivalence classes for further processin; g; [2016-12-13 12:46:51.776] [jointLog] [info] Counted 16265961 total reads in the equivalence classes . [2016-12-13 12:46:51.786] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 12:46:51.786] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 12:46:51.786] [jointLog] [info] Starting optimizer; [2016-12-13 12:46:51.867] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 12:46:51.877] [jointLog] [inf,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111:2019,load,loading,2019,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111,1,['load'],['loading']
Performance,"es` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference sequence | Time = 62.735 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 650 us; -----------------------------------------; [2021-05-20 10:53:56.156] [jointLog] [info] done; [2021-05-20 10:53:56.156] [jointLog] [info] Index contained 44,026 targets. [2021-05-20 10:53:58.080] [jointLog] [info] Number of decoys : 0; [2021-05-20 10:54:28.729] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-20 11:34:48.022] [jointLog] [info] Computed 145,552 rich equivalence classes for further processing; [2021-05-20 11:34:48.022] [jointLog] [i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:2784,Load,Loading,2784,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['Load'],['Loading']
Performance,"esizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading reference sequence | Time = 681.27 ms; -----------------------------------------; -----------------------------------------; | Loading reference",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:3124,Load,Loading,3124,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['Load'],['Loading']
Performance,"esizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:6201,Load,Loading,6201,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['Load'],['Loading']
Performance,evinLog] [info] Total 15.7% reads will be thrown away because of noisy Cellular barcodes.; [2021-04-09 12:16:37.892] [alevinLog] [info] Done populating Z matrix; [2021-04-09 12:16:37.892] [alevinLog] [info] Total 0 CB got sequence corrected; [2021-04-09 12:16:37.892] [alevinLog] [info] Done indexing Barcodes; [2021-04-09 12:16:37.892] [alevinLog] [info] Total Unique barcodes found: 822; [2021-04-09 12:16:37.892] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2021-04-09 12:16:37.914] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-04-09 12:16:37.914] [alevinLog] [info] parsing read library format; [2021-04-09 12:16:37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading pufferfish index; [2021-04-09 12:16:38.027] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:4388,Load,Loading,4388,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['Load'],['Loading']
Performance,"ex ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:3068,Load,Loading,3068,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; -----------------------------------------; | Loading positions | Time = 14.838 s; -------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/560:1648,Load,Loading,1648,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560,1,['Load'],['Loading']
Performance,"finished quantifyLibrary(); [2020-06-13 06:56:12.991] [jointLog] [info] Starting optimizer; [2020-06-13 06:56:13.091] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2020-06-13 06:56:13.106] [jointLog] [info] iteration = 0 | max rel diff. = 8178.65; [2020-06-13 06:56:14.511] [jointLog] [info] iteration = 100 | max rel diff. = 17.6849; [2020-06-13 06:56:16.028] [jointLog] [info] iteration = 200 | max rel diff. = 6.46204; [2020-06-13 06:56:17.541] [jointLog] [info] iteration = 300 | max rel diff. = 1.8111; [2020-06-13 06:56:19.027] [jointLog] [info] iteration = 400 | max rel diff. = 12.2108; [2020-06-13 06:56:20.501] [jointLog] [info] iteration = 500 | max rel diff. = 0.616929; [2020-06-13 06:56:21.954] [jointLog] [info] iteration = 600 | max rel diff. = 0.218435; [2020-06-13 06:56:23.439] [jointLog] [info] iteration = 700 | max rel diff. = 0.068711; [2020-06-13 06:56:24.945] [jointLog] [info] iteration = 800 | max rel diff. = 0.044637; [2020-06-13 06:56:26.398] [jointLog] [info] iteration = 900 | max rel diff. = 0.0340291; [2020-06-13 06:56:27.811] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.237808; [2020-06-13 06:56:29.235] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0764161; [2020-06-13 06:56:30.717] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.0683725; [2020-06-13 06:56:32.253] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0990377; [2020-06-13 06:56:33.509] [jointLog] [info] iteration = 1,389 | max rel diff. = 0.00998936; [2020-06-13 06:56:33.511] [jointLog] [info] Finished optimizer; [2020-06-13 06:56:33.511] [jointLog] [info] writing output ; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ProductName:	Mac OS X; ProductVersion:	10.15.5; BuildVersion:	19F101. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/537:5329,optimiz,optimizer,5329,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537,1,['optimiz'],['optimizer']
Performance,"fo] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] Loading Transcript Info; [2018-06-30 22:10:53.396] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-30 22:10:53.402] [stderrLog] [info] There were 36541 set bits in the bit array; [2018-06-30 22:10:53.405] [stderrLog] [info] Computing transcript lengths; [2018-06-30 22:10:53.405] [stderrLog] [info] Waiting to finish loading hash; [2018-06-30 22:10:54.783] [stderrLog] [info] Done loading index; [2018-06-30 22:10:54.783] [jointLog] [info] done; [2018-06-30 22:10:54.783] [jointLog] [info] Index contained 36541 targets. processed 17 Million fragments; hits: 18237834, hits per frag: 1.04278[2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.50% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.30% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.06% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.64% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 9.94% zero probability fragments; [2018-06-3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:3082,load,loading,3082,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,1,['load'],['loading']
Performance,"fo] Done indexing Barcodes; [2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_64 x86_64 x86_64 GNU/Linux`; `$ lsb_release -a; LSB Version:	core-2.0-noarch:core-3.2-noarch:core-4.0-noarch:core-2.0-x86_64:core-3.2-x86_64:core-4.0-x86_64:desktop-4.0-amd64:desktop-4.0-noarch:graphics-2.0-amd64:graphics-2.0-noarch:graphics-3.2-amd64:graphics-3.2-noarch:graphics-4.0-amd64:graphics-4.0-noarch; Distributor ID:	SUSE LINUX; Description:	SUSE Linux Enterprise Server 11 (x86_64); Release:	11; Codename:	n/a`. **Additional context**; I included a 10K subset of reads in the tarball, which leads to t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:5663,Load,Loading,5663,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['Load'],['Loading']
Performance,"fo] Knee found left boundary at 11347; [2018-11-29 22:28:16.264] [alevinLog] [warning] Gauss Prediction 11502 Too far from knee prediction skipping it; [2018-11-29 22:28:16.264] [alevinLog] [info] Learned InvCov: 180.957 normfactor: 13235.2; [2018-11-29 22:28:16.264] [alevinLog] [info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equiv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/324:2125,Load,Loading,2125,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324,1,['Load'],['Loading']
Performance,fo] Learned InvCov: 419.096 normfactor: 100.648; [2021-04-09 12:16:37.862] [alevinLog] [info] Total 195(has 201 low confidence) barcodes; [2021-04-09 12:16:37.883] [alevinLog] [info] Done True Barcode Sampling; [2021-04-09 12:16:37.884] [alevinLog] [info] Total 15.7% reads will be thrown away because of noisy Cellular barcodes.; [2021-04-09 12:16:37.892] [alevinLog] [info] Done populating Z matrix; [2021-04-09 12:16:37.892] [alevinLog] [info] Total 0 CB got sequence corrected; [2021-04-09 12:16:37.892] [alevinLog] [info] Done indexing Barcodes; [2021-04-09 12:16:37.892] [alevinLog] [info] Total Unique barcodes found: 822; [2021-04-09 12:16:37.892] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2021-04-09 12:16:37.914] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-04-09 12:16:37.914] [alevinLog] [info] parsing read library format; [2021-04-09 12:16:37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading pufferfish index; [2021-04-09 12:16:38.027] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -------------------------,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:4097,Load,Loading,4097,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['Load'],['Loading']
Performance,fo] done; [2017-07-18 17:14:21.207] [jointLog] [info] Index contained 107368 targets; [2017-07-18 17:14:22.320] [jointLog] [info] Automatically detected most likely library type as SF; [2017-07-18 17:22:52.788] [jointLog] [info] Computed 280679 rich equivalence classes for further processing; [2017-07-18 17:22:52.788] [jointLog] [info] Counted 27517563 total reads in the equivalence classes; [2017-07-18 17:22:52.850] [jointLog] [info] Mapping rate = 37.9965%. [2017-07-18 17:22:52.850] [jointLog] [info] finished quantifyLibrary(); [2017-07-18 17:22:52.853] [jointLog] [info] Starting optimizer; [2017-07-18 17:22:52.789] [fileLog] [info]; At end of round 0; ==================; Observed 72421398 total fragments (72421398 in most recent round). [2017-07-18 17:22:52.981] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2017-07-18 17:22:52.990] [jointLog] [info] iteration = 0 | max rel diff. = 9.36177; [2017-07-18 17:22:53.935] [jointLog] [info] iteration = 100 | max rel diff. = 0.0782409; [2017-07-18 17:22:54.889] [jointLog] [info] iteration = 200 | max rel diff. = 0.0347085; [2017-07-18 17:22:55.784] [jointLog] [info] iteration = 300 | max rel diff. = 0.0249461; [2017-07-18 17:22:56.790] [jointLog] [info] iteration = 400 | max rel diff. = 0.0188653; [2017-07-18 17:22:57.752] [jointLog] [info] iteration = 500 | max rel diff. = 0.0157419; [2017-07-18 17:22:58.688] [jointLog] [info] iteration = 600 | max rel diff. = 0.0128394; [2017-07-18 17:22:59.422] [jointLog] [info] iteration = 681 | max rel diff. = 0.00982758; [2017-07-18 17:22:59.432] [jointLog] [info] Finished optimizer; [2017-07-18 17:22:59.432] [jointLog] [info] writing output. [2017-07-18 17:22:59.642] [jointLog] [info] Computing gene-level abundance estimates; [2017-07-18 17:23:27.020] [jointLog] [info] There were 128717 transcripts mapping to 51912 genes; [2017-07-18 17:23:27.021] [jointLog] [info] Aggregating expressions to gene level; [2017-07-18 17:23:27.021] [jointLog] [info] done; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/143:2141,optimiz,optimizer,2141,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/143,1,['optimiz'],['optimizer']
Performance,"fo] parsing read library format; [2022-12-03 16:17:47.714] [alevinLog] [info] Starting optimizer. [2022-12-03 16:17:47.868] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2022-12-03 16:17:47.868] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 17192510.00 UMI after deduplicating.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 1333800 BiDirected Edges.; [2022-12-03 16:18:01.362] [alevinLog] [info] Total 181036 UniDirected Edges.; [2022-12-03 16:18:01.432] [alevinLog] [info] Clearing EqMap; Might take some time.; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting white listing of 5460 cells; [2022-12-03 16:18:08.522] [alevinLog] [info] Starting to make feature Matrix; [2022-12-03 16:18:08.535] [alevinLog] [info] Done making feature Matrix; [2022-12-03 16:18:09.324] [alevinLog] [info] Finished white listing; [2022-12-03 16:18:09.513] [alevinLog] [info] Finished optimizer. Salmon_quant log:; [2022-12-03 15:43:11.767] [jointLog] [info] setting maxHashResizeThreads to 48; [2022-12-03 15:43:11.767] [jointLog] [info] Fragment incompatibility prior below threshold. ; Incompatible fragments will be ignored.; [2022-12-03 15:43:11.767] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-12-03 15:43:11.767] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-12-03 15:43:11.767] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2022-12-03 15:43:11.767] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-12-03 15:43:11.767] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/814:4045,optimiz,optimizer,4045,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814,1,['optimiz'],['optimizer']
Performance,"fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-16 16:57:15.488] [jointLog] [info] Number of mappings discarded because of alignment score : 86,602; [2021-04-16 16:57:15.488] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 124,571; [2021-04-16 16:57:15.488] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2021-04-16 16:57:15.488] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 32,784; [2021-04-16 16:57:15.493] [jointLog] [warning] Only 10700 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2021-04-16 16:57:15.493] [jointLog] [info] Mapping rate = 0.0417748%. [2021-04-16 16:57:15.493] [jointLog] [info] finished quantifyLibrary(); [2021-04-16 16:57:15.535] [jointLog] [info] Starting optimizer; [2021-04-16 16:57:15.564] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-04-16 16:57:15.568] [jointLog] [info] iteration = 0 | max rel diff. = 6.66952; [2021-04-16 16:57:16.080] [jointLog] [info] iteration = 100 | max rel diff. = 0.0161125; [2021-04-16 16:57:16.555] [jointLog] [info] iteration = 194 | max rel diff. = 0.000157223; [2021-04-16 16:57:16.558] [jointLog] [info] Finished optimizer; [2021-04-16 16:57:16.558] [jointLog] [info] writing output. [2021-04-16 16:57:16.681] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-16 16:57:16.775] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-16 16:57:16.775] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information du",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:2653,optimiz,optimizer,2653,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,1,['optimiz'],['optimizer']
Performance,"g bifurcations time: 8; True marks count: 335754103; Edges construction time: 117. Distinct junctions = 14895414. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 21; Max Junction ID: 14896947; seen.size():119175585 kmerInfo.size():14896948; approximateContigTotalLength: 1087128541; counters for complex kmers:; (prec>1 & succ>1)=3126880 | (succ>1 & isStart)=773 | (prec>1 & isEnd)=671 | (isStart & isEnd)=30; contig count: 24974474 element count: 3020582944 complex nodes: 3128354; # of ones in rank vector: 24974473; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory Mus_musculus.GRCm39_v1.8.0_decoy.index; size = 3020582944. | Loading contigs | Time = 469.49 ms. size = 3020582944. | Loading contig boundaries | Time = 242.8 ms. Number of ones: 24974473; Number of ones per inventory item: 512; Inventory entries filled: 48779; 24974473; [2022-06-01 18:28:15.208] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2022-06-01 18:28:15.619] [puff::index::jointLog] [info] contig count for validation: 24,974,473; [2022-06-01 18:28:31.732] [puff::index::jointLog] [info] Total # of Contigs : 24,974,473; [2022-06-01 18:28:31.732] [puff::index::jointLog] [info] Total # of numerical Contigs : 24,974,473; [2022-06-01 18:28:33.958] [puff::index::jointLog] [info] Total # of contig vec entries: 345,523,986; [2022-06-01 18:28:33.958] [puff::index::jointLog] [info] bits per offset entry 29; [2022-06-01 18:28:53.341] [puff::index::jointLog] [info] Done constructing the contig vector. 24974474; [2022-06-01 18:29:07.368] [puff::index::jointLog] [info] # segments = 24,974,473; [2022-06-01 18:29:07.368] [puff::index::jointLog] [info] total length = 3,020,582,944; [202",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783:12610,Load,Loading,12610,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783,1,['Load'],['Loading']
Performance,"g file in the folder of logs:; ```{shell}; $cat salmon_quant.log ; [2023-03-07 06:47:10.266] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-07 06:47:10.266] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-07 06:47:10.266] [jointLog] [info] parsing read library format; [2023-03-07 06:47:10.266] [jointLog] [info] There is 1 library.; [2023-03-07 06:47:10.412] [jointLog] [info] Loading Quasi index; [2023-03-07 06:47:10.412] [jointLog] [info] Loading 64-bit quasi index; [2023-03-07 06:51:59.707] [jointLog] [info] done; [2023-03-07 06:51:59.707] [jointLog] [info] Index contained 777288 targets; [2023-03-07 06:52:10.338] [jointLog] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54:46.141] [jointLog] [info] Computed 1249282 rich equivalence classes for further processing; [2023-03-07 06:54:46.141] [jointLog] [info] Counted 8925446 total reads in the equivalence classes ; [2023-03-07 06:54:46.282] [jointLog] [warning] 0.0015986% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-07 06:54:46.282] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 2762; [2023-03-07 06:54:4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:2466,Load,Loading,2466,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['Load'],['Loading']
Performance,"g it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Why does it say `salmon quant was invoked improperly`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/512:1732,Load,Loading,1732,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512,3,['Load'],['Loading']
Performance,"g<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:12982,optimiz,optimized,12982,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['optimiz'],['optimized']
Performance,"g] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:49:35.112] [alevinLog] [info] Total 49.4292% reads will be thrown away because of noisy Cellular barcodes.; [2019-01-29 15:49:35.112] [alevinLog] [info] Total 4000(has 1000 low confidence) barcodes; [2019-01-29 15:49:35.251] [alevinLog] [info] Done True Barcode Sampling; [2019-01-29 15:49:35.896] [alevinLog] [info] Done populating Z matrix; [2019-01-29 15:49:35.994] [alevinLog] [info] Done indexing Barcodes; [2019-01-29 15:49:35.994] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-29 15:49:35.994] [alevinLog] [info] Used Barcodes except Whitelist: 105901; [2019-01-29 15:49:36.107] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-29 15:49:36.107] [alevinLog] [info] parsing read library format; [2019-01-29 15:49:36.415] [stderrLog] [info] Loading Suffix Array; [2019-01-29 15:49:36.107] [jointLog] [info] There is 1 library.; [2019-01-29 15:49:36.373] [jointLog] [info] Loading Quasi index; [2019-01-29 15:49:36.396] [jointLog] [info] Loading 32-bit quasi index; [2019-01-29 15:49:50.479] [stderrLog] [info] Loading Transcript Info; [2019-01-29 15:49:55.550] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-01-29 15:49:56.036] [stderrLog] [info] There were 58,086 set bits in the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Foun",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:1369,Load,Loading,1369,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['Load'],['Loading']
Performance,"g] [info] Automatically detected most likely library type as IU; [2023-03-07 06:54:46.142] [fileLog] [info] ; At end of round 0; ==================; Observed 40535435 total fragments (40535435 in most recent round). [2023-03-07 06:54:46.141] [jointLog] [info] Computed 1249282 rich equivalence classes for further processing; [2023-03-07 06:54:46.141] [jointLog] [info] Counted 8925446 total reads in the equivalence classes ; [2023-03-07 06:54:46.282] [jointLog] [warning] 0.0015986% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-07 06:54:46.282] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 2762; [2023-03-07 06:54:46.290] [jointLog] [info] Mapping rate = 22.0189%. [2023-03-07 06:54:46.290] [jointLog] [info] finished quantifyLibrary(); [2023-03-07 06:54:46.290] [jointLog] [info] Starting optimizer; [2023-03-07 06:54:46.960] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-03-07 06:54:47.001] [jointLog] [info] iteration = 0 | max rel diff. = 433.028; [2023-03-07 06:54:50.676] [jointLog] [info] iteration = 100 | max rel diff. = 0.124404; [2023-03-07 06:54:54.362] [jointLog] [info] iteration = 200 | max rel diff. = 0.0697214; [2023-03-07 06:54:58.083] [jointLog] [info] iteration = 300 | max rel diff. = 0.0335353; [2023-03-07 06:55:01.780] [jointLog] [info] iteration = 400 | max rel diff. = 0.0247299; [2023-03-07 06:55:05.539] [jointLog] [info] iteration = 500 | max rel diff. = 0.0189304; [2023-03-07 06:55:09.278] [jointLog] [info] iteration = 600 | max rel diff. = 0.017332; [2023-03-07 06:55:13.044] [jointLog] [info] iteration = 700 | max rel diff. = 0.013562; [2023-03-07 06:55:16.780] [jointLog] [info] iteration = 800 | max rel diff. = 0.0118759; [2023-03-07 06:55:20.542] [jointLog] [info] iteration = 900 | max rel diff. = 0.0114777; [2023-03-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:3654,optimiz,optimizer,3654,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['optimiz'],['optimizer']
Performance,"g] [info] iteration 11, adjusting effective lengths to account for biase; s; [2016-12-13 12:52:42.161] [jointLog] [info] Computed expected counts (for bias correction); [2016-12-13 12:52:42.162] [jointLog] [info] processed bias for 0.0% of the transcripts; [2016-12-13 12:53:40.240] [jointLog] [info] processed bias for 10.0% of the transcripts; [2016-12-13 12:54:40.032] [jointLog] [info] processed bias for 20.0% of the transcripts; [2016-12-13 12:55:40.277] [jointLog] [info] processed bias for 30.0% of the transcripts; [2016-12-13 12:56:41.225] [jointLog] [info] processed bias for 40.0% of the transcripts; [2016-12-13 12:57:41.888] [jointLog] [info] processed bias for 50.0% of the transcripts; [2016-12-13 12:58:37.148] [jointLog] [info] processed bias for 100.0% of the transcripts; [2016-12-13 12:58:37.809] [jointLog] [info] iteration = 100 | max rel diff. = 0.272558; [2016-12-13 12:58:38.544] [jointLog] [info] iteration = 200 | max rel diff. = 0.213603; [2016-12-13 12:58:39.275] [jointLog] [info] iteration = 300 | max rel diff. = 0.254034; [2016-12-13 12:58:40.017] [jointLog] [info] iteration = 400 | max rel diff. = 0.120455; [2016-12-13 12:58:40.754] [jointLog] [info] iteration = 500 | max rel diff. = 0.020828; [2016-12-13 12:58:41.487] [jointLog] [info] iteration = 600 | max rel diff. = 0.0153173; [2016-12-13 12:58:42.222] [jointLog] [info] iteration = 700 | max rel diff. = 0.0746574; [2016-12-13 12:58:42.359] [jointLog] [info] iteration = 720 | max rel diff. = 0.00908527; [2016-12-13 12:58:42.368] [jointLog] [info] Finished optimizer; [2016-12-13 12:58:42.368] [jointLog] [info] writing output . [2016-12-13 12:58:42.943] [jointLog] [info] Starting Gibbs Sampler; 0% [> ] ETA > 1 week ; ```. It remained stuck at 0% until I terminated it with Control+C around 2016-12-13 14:21, nearly 1.5 hours after the Gibbs sample started. Running it again on the same sample, I see the same behavior. I'm currently re-running with different options to see if that makes a difference.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111:4647,optimiz,optimizer,4647,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111,1,['optimiz'],['optimizer']
Performance,"g] [info] iteration = 1200 | max rel diff. = 0.11409; [2023-02-22 16:42:12.875] [jointLog] [info] iteration = 1300 | max rel diff. = 3.98708; [2023-02-22 16:42:16.211] [jointLog] [info] iteration = 1400 | max rel diff. = 0.146333; [2023-02-22 16:42:19.531] [jointLog] [info] iteration = 1500 | max rel diff. = 0.118365; [2023-02-22 16:42:22.871] [jointLog] [info] iteration = 1600 | max rel diff. = 0.073492; [2023-02-22 16:42:26.203] [jointLog] [info] iteration = 1700 | max rel diff. = 0.201421; [2023-02-22 16:42:29.533] [jointLog] [info] iteration = 1800 | max rel diff. = 0.127739; [2023-02-22 16:42:32.868] [jointLog] [info] iteration = 1900 | max rel diff. = 0.042789; [2023-02-22 16:42:36.215] [jointLog] [info] iteration = 2000 | max rel diff. = 0.0303234; [2023-02-22 16:42:39.544] [jointLog] [info] iteration = 2100 | max rel diff. = 0.0413186; [2023-02-22 16:42:40.309] [jointLog] [info] iteration = 2124 | max rel diff. = 0.00863591; [2023-02-22 16:42:40.317] [jointLog] [info] Finished optimizer; [2023-02-22 16:42:40.317] [jointLog] [info] writing output . [2023-02-22 16:42:40.556] [jointLog] [info] Computing gene-level abundance estimates; [2023-02-22 16:45:41.884] [jointLog] [info] There were 246511 transcripts mapping to 61552 genes; [2023-02-22 16:45:41.884] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2023-02-22 16:45:42.113] [jointLog] [info] Aggregating expressions to gene level; [2023-02-22 16:45:42.215] [jointLog] [info] done; ```. - Unsuccessful log:. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ geneMap ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a12",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:6898,optimiz,optimizer,6898,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['optimiz'],['optimizer']
Performance,"gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:6263,Load,Loading,6263,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"generate; [2024-01-27 01:10:28.376] [jointLog] [info] iteration = 0 | max rel diff. = 174.042; [2024-01-27 01:10:28.453] [jointLog] [info] iteration 11, adjusting effective lengths to account for biases; [2024-01-27 01:10:52.990] [jointLog] [info] Computed expected counts (for bias correction); [2024-01-27 01:10:52.990] [jointLog] [info] processed bias for 0.0% of the transcripts; [2024-01-27 01:10:55.410] [jointLog] [info] processed bias for 10.0% of the transcripts; [2024-01-27 01:10:57.934] [jointLog] [info] processed bias for 20.0% of the transcripts; [2024-01-27 01:11:00.570] [jointLog] [info] processed bias for 30.0% of the transcripts; [2024-01-27 01:11:03.092] [jointLog] [info] processed bias for 40.0% of the transcripts; [2024-01-27 01:11:05.416] [jointLog] [info] processed bias for 50.0% of the transcripts; [2024-01-27 01:11:07.798] [jointLog] [info] processed bias for 60.0% of the transcripts; [2024-01-27 01:11:10.207] [jointLog] [info] processed bias for 70.0% of the transcripts; [2024-01-27 01:11:12.614] [jointLog] [info] processed bias for 80.0% of the transcripts; [2024-01-27 01:11:15.076] [jointLog] [info] processed bias for 90.0% of the transcripts; [2024-01-27 01:11:17.845] [jointLog] [info] processed bias for 100.0% of the transcripts; [2024-01-27 01:11:18.538] [jointLog] [info] iteration = 100 | max rel diff. = 3.26654; [2024-01-27 01:11:19.295] [jointLog] [info] iteration = 200 | max rel diff. = 0.0770813; [2024-01-27 01:11:20.053] [jointLog] [info] iteration = 300 | max rel diff. = 0.194297; [2024-01-27 01:11:20.809] [jointLog] [info] iteration = 400 | max rel diff. = 0.0224582; [2024-01-27 01:11:21.021] [jointLog] [info] iteration = 429 | max rel diff. = 0.00843674; [2024-01-27 01:11:21.067] [jointLog] [info] Finished optimizer; [2024-01-27 01:11:21.067] [jointLog] [info] writing output ; ```. Is it normal for such converted fastq files?; Thanks a lot!. _Originally posted by @KOBE24DUNK in https://github.com/COMBINE-lab/salmon/discussions/906_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/908:4812,optimiz,optimizer,4812,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908,1,['optimiz'],['optimizer']
Performance,"h 192M of ram.; Salmon quasi mode aborted with following message:; processed 14,000,000 fragmentsntLog] [info] Automatically detected most likely library type as SR; hits: 108,161,934; hits per frag: 8.53594terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; This happens when using a gffread-created transcripts.fa. Salmon built the index that have 309,566 targets. Do I just need more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/304:1139,Load,Loading,1139,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304,1,['Load'],['Loading']
Performance,"h Barcode Processing; Moving to Quantify; > ; > processed 52 Million fragmentsvinLog] [info] parsing read library format; > hits: 0, hits per frag: 0; > ; > [2020-06-03 13:55:42.905] [alevinLog] [info] Starting optimizer; > ; > [2020-06-03 13:55:42.931] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.931] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0.00 UMI after deduplicating.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 BiDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [info] Total 0 UniDirected Edges.; > [2020-06-03 13:55:42.933] [alevinLog] [warning] Skipped 50091 barcodes due to No mapped read; > [2020-06-03 13:55:42.934] [alevinLog] [info] Clearing EqMap; Might take some time.; > [2020-06-03 13:55:42.940] [alevinLog] [warning] Num Low confidence barcodes too less 1 < 200.Can't performing whitelisting; Skipping; > [2020-06-03 13:55:42.940] [alevinLog] [info] Finished optimizer; > `. I also tried . `salmon alevin -l ISR --chromium --featureStart 19 --featureLength 21 --tgMap guide_to_gene.tsv`. But I get the following output. > `; > [2020-06-03 13:47:17.330] [alevinLog] [info] Found 64 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); > [2020-06-03 13:47:17.330] [alevinLog] [info] Filled with 64 txp to gene entries ; > [2020-06-03 13:47:17.330] [alevinLog] [info] Found all transcripts to gene mappings; > [2020-06-03 13:47:17.336] [alevinLog] [info] Processing barcodes files (if Present) ; > ; > processed 52 Million barcodes; > ; > [2020-06-03 13:48:30.047] [alevinLog] [info] Done barcode density calculation.; > [2020-06-03 13:48:30.047] [alevinLog] [info] # Barcodes Used: 52200250 / 52200250.; > [2020-06-03 13:48:33.285] [alevinLog] [info] Knee found left boundary at 1174 ; > [2020-06-03 13:48:34.501] [alevinLog] [info] Gauss Corrected Boundary at 148 ; > [2020-06-0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/531:3670,perform,performing,3670,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531,1,['perform'],['performing']
Performance,"hResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:3350,Load,Loading,3350,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['Load'],['Loading']
Performance,"he bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [jointLog] [info] Computed 137534 rich equivalence classes for further processin; g; [2016-12-13 12:46:51.776] [jointLog] [info] Counted 16265961 total reads in the equivalence classes . [2016-12-13 12:46:51.786] [jointLog] [info] Mapping rate = 83.509%. [2016-12-13 12:46:51.786] [jointLog] [info] finished quantifyLibrary(); [2016-12-13 12:46:51.786] [jointLog] [info] Starting optimizer; [2016-12-13 12:46:51.867] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2016-12-13 12:46:51.877] [jointLog] [info] iteration = 0 | max rel diff. = 299.948; [2016-12-13 12:46:51.959] [jointLog] [info] iteration 11, adjusting effective lengths to account for biase; s; [2016-12-13 12:52:42.161] [jointLog] [info] Computed expected counts (for bias correction); [2016-12-13 12:52:42.162] [jointLog] [info] processed bias for 0.0% of the transcripts; [2016-12-13 12:53:40.240] [jointLog] [info] processed bias for 10.0% of the transcripts; [2016-12-13 12:54:40.032] [jointLog] [info] processed bias for 20.0% of the transcripts; [2016-12-13 12:55:40.277] [jointLog] [info] processed bias for 30.0% of the transcripts; [2016-12-13 12:56:41.225] [jointLog] [info] processed bias for 40.0% of the transcripts; [2016-12-13 12:57:41.888] [jointLog] [info] processed bias for 50.0% of the transcripts; [2016-12-13 12:58:37.148] [jointLog] [info] processed bias for 100.0% o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111:2867,optimiz,optimizer,2867,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111,1,['optimiz'],['optimizer']
Performance,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/54:1004,Load,Loading,1004,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54,8,"['Load', 'load']","['Loading', 'loading']"
Performance,"hensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; ----------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:3138,Load,Loading,3138,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"hi, I am running Salmon-1.2.1 on my MacBook with Sierra 10.13.6. I try to run Salmon binary with terminal, and I get this error. How'd do solve this problem? . Last login: Sat May 2 23:14:08 on ttys007; /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; Maysons-MacBook-Air:~ maysonlin$ /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; dyld: Library not loaded: @rpath/libtbbmalloc.dylib; Referenced from: /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0 2/bin/salmon; Reason: image not found; Abort trap: 6; logout; Saving session...; ...copying shared history...; ...saving history...truncating history files...; ...completed. [Process completed]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/517:402,load,loaded,402,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517,1,['load'],['loaded']
Performance,"hitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] There is 1 library.; [2019-01-28 21:09:04.049] [jointLog] [info] Loading Quasi index; [2019-01-28 21:09:04.286] [jointLog] [info] Loading 32-bit quasi index; [2019-01-28 21:09:43.870] [jointLog] [info] done; [2019-01-28 21:09:43.870] [jointLog] [info] Index contained 58,086 targets; [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total reads in the equivalence classes; [2019-01-28 21:40:30.446] [jointLog] [warning] Found 39484 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-28 21:40:30.446] [jointLog] [info] Mapping rate = 37.2969%. [2019-01-28 21:40:30.446] [jointLog] [info] finished quantifyLibrary(). cat alevin/alevin.log; [2019-01-28 21:02:08.496] [alevinLog] [info] Processing barcodes files (if Present). [2019-01-28 21:07:56.106] [alevinLog] [info] Done barcode density calculation.; [2019-01-28 21:07:56.106] [alevinLog] [info] # Barcodes Used: 287883370 / 2879",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:6130,Load,Loading,6130,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['Load'],['Loading']
Performance,"hold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux 0f0e43816679 6.4.16-li",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:3289,Load,Loading,3289,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['Load'],['Loading']
Performance,"ible fragments will be ignored.; [2021-05-19 18:46:25.303] [jointLog] [info] You specified --dumpEqWeights, which implies --dumpEq; that option has been enabled.; [2021-05-19 18:46:25.303] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-05-19 18:46:25.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 aft",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:1839,Load,Loading,1839,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['Load'],['Loading']
Performance,"idateMappings ] => { }; ### [ gcBias ] => { }; Logs will be written to out/logs; [2021-09-20 16:29:51.663] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:29:51.663] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading refere",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:1724,Load,Loading,1724,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"iff. = 0.109768; [2021-06-08 03:45:01.617] [jointLog] [info] iteration = 800 | max rel diff. = 1.21662; [2021-06-08 03:45:03.120] [jointLog] [info] iteration = 900 | max rel diff. = 3.66627; [2021-06-08 03:45:04.608] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.588204; [2021-06-08 03:45:06.110] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0684939; [2021-06-08 03:45:07.618] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.12848; [2021-06-08 03:45:09.127] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0314333; [2021-06-08 03:45:10.652] [jointLog] [info] iteration = 1,400 | max rel diff. = 1.66027; [2021-06-08 03:45:12.161] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.0215391; [2021-06-08 03:45:13.652] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0482054; [2021-06-08 03:45:15.168] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.10638; [2021-06-08 03:45:16.664] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.527726; [2021-06-08 03:45:16.709] [jointLog] [info] iteration = 1,804 | max rel diff. = 0.00520282; [2021-06-08 03:45:16.741] [jointLog] [info] finished optimizer; [2021-06-08 03:45:16.741] [jointLog] [info] writing output; [2021-06-08 03:45:17.047] [jointLog] [info] Staring Bootstrapping; [2021-06-08 03:45:17.157] [jointLog] [info] Will draw 30 bootstrap samples; [2021-06-08 03:45:17.157] [jointLog] [info] Optimizing over 430,882 equivalence classes; ```. I.e. `-l A` gives slightly more counts. When we excluded STAR from the process, and counted pseudoalignments, `-l A` again produced a bit more counts, so this effect is persistent for `-l A`:; - `-l A`: 36,310,400; - `-l ISF`: 36,309,800. (Here we are not comparing counts for pseudoalignments vs STAR aligments, just libtypes withing the same mode). While this difference in counts is not crucial and likely will not affect any downstream analyses, I would appreciate if you could share any insights on what could cause that difference!. Sergey",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/669:7023,optimiz,optimizer,7023,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669,2,"['Optimiz', 'optimiz']","['Optimizing', 'optimizer']"
Performance,"ile. First, I've been using salmon for years and I love all the updates that have come about recently. The new selective alignment mode is an amazing upgrade!. My general question here is how to quantify various truncated isoforms of the same transcript. I'm working in S. cerevisiae and I am not referring to isoform switching via alternative splicing, but various isoforms that are fully contained as a subset of a larger transcript sequence. Imagine a standard gene that gives rise to a 1000 bp transcript. Through alternative promoter usage or post-transcriptional processing, it can give rise a truncated form that is identical to the parent transcript, except only has sequence from bases 400 to 1000. I know this scenario is similar to detecting differential splice forms, and indeed when I see overlapping genes that nonetheless have some unique sequence, salmon does an excellent job at fractionally apportioning the reads. In this particular case, however, it seems that because all mappings to the truncated isoform also give perfect mappings to the longer isoform, even a single few reads mapping uniquely to the longer isoform is enough evidence for the salmon EM algorithm (I assume that's the relevant part?) to give *all* of the reads to the long isoform. To visualize the problem, I'm attaching an image of alignments over a transcript that is only expressed as a portion of the annotated parent transcript. If i encode the short and long forms as separate transcripts in salmon fasta index, all of the reads get assigned to the longer form with the options I've tried. My question then is whether there's a combination of salmon quant options that would optimize apportioning the reads better for this class of transcript, or whether it's simply not going to work given the underlying assumptions in the software?. Thanks a ton for any help,; Jason. ![hmlalpha2_truncated_example](https://user-images.githubusercontent.com/10292386/80483743-6c217900-890b-11ea-8469-4883914d8ec0.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/514:1811,optimiz,optimize,1811,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514,1,['optimiz'],['optimize']
Performance,"imizer; [2021-01-21 09:48:12.160] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-01-21 09:48:12.160] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 19031525.00 UMI after deduplicating.; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 454402 BiDirected Edges.; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 113688 UniDirected Edges.; [2021-01-21 09:48:36.288] [alevinLog] [warning] Skipped 44 barcodes due to No mapped read; [2021-01-21 09:48:36.307] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-01-21 09:48:41.314] [alevinLog] [info] Starting white listing of 9971 cells; [2021-01-21 09:48:41.314] [alevinLog] [info] Starting to make feature Matrix; [2021-01-21 09:48:41.337] [alevinLog] [info] Done making feature Matrix; [2021-01-21 09:48:41.557] [alevinLog] [info] Finished white listing; [2021-01-21 09:48:41.580] [alevinLog] [info] Finished optimizer. > {; ""total_reads"": 188934609,; ""reads_with_N"": 0,; ""noisy_cb_reads"": 98310747,; ""noisy_umi_reads"": 16600,; ""used_reads"": 90607262,; ""mapping_rate"": 18.89108045842464,; ""reads_in_eqclasses"": 35691789,; ""total_cbs"": 3896665,; ""used_cbs"": 44518,; ""initial_whitelist"": 9015,; ""low_conf_cbs"": 1000,; ""num_features"": 5,; ""no_read_mapping_cbs"": 44,; ""final_num_cbs"": 6765,; ""deduplicated_umis"": 19031525,; ""mean_umis_per_cell"": 2813,; ""mean_genes_per_cell"": 1315; }. ### My best result with `--exceptCells 30000`; > ...; [2021-01-23 11:07:52.910] [alevinLog] [info] Done barcode density calculation.; [2021-01-23 11:07:52.910] [alevinLog] [info] # Barcodes Used: 188934609 / 188934609.; [2021-01-23 11:07:54.387] [alevinLog] [info] Total 12507(has 995 low confidence) barcodes; [2021-01-23 11:07:55.251] [alevinLog] [info] Done True Barcode Sampling; [2021-01-23 11:07:56.200] [alevinLog] [info] Total **49.0191% reads will be thrown away** because of noisy Cellular barcodes.; [2021-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/620:7591,optimiz,optimizer,7591,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620,1,['optimiz'],['optimizer']
Performance,"implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.2186 s; -----------------------------------------; size = 3784352032; Number of ones: 36981177; Number of ones per inventory item: 512; Inventory entries filled: 72229; -----------------------------------------; | Loading contig boundaries | Time = 5.2845 s; -----------------------------------------; size = 3784352032; -----------------------------------------; | Loading sequence | Time = 1.1989 s; -----------------------------------------; size = 2674916722; -----------------------------------------; | Loading positions | Time = 14.838 s; -----------------------------------------; size = 3401221626; -----------------------------------------; | Loading reference sequence | Time = 1.1113 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 9.0843 ms; -----------------------------------------. [2020-08-13 09:36:14.700] [jointLog] [info] done; [2020-08-13 09:36:14.700] [jointLog] [info] Index contained 177,651 targets; [2020-08-13 09:36:14.782] [jointLog] [info] Number of decoys : 195; processed 500,000 fragmentsjointLog] [info] First decoy index : 177,412",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/560:2454,Load,Loading,2454,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560,4,['Load'],['Loading']
Performance,"info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-08-02 14:41:46.432] [jointLog] [info] Mapping rate = 42.6252%. [2017-08-02 14:41:46.432] [jointLog] [info] finished quantifyLibrary(); [2017-08-02 14:41:46.446] [jointLog] [info] Starting optimizer; [2017-08-02 14:41:46.508] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-08-02 14:41:46.510] [jointLog] [info] iteration = 0 | max rel diff. = 2.50175; [2017-08-02 14:41:46.521] [jointLog] [info] iteration 11, adjusting effective lengths to account for biases; salmon: /drone/src/github.com/COMBINE-lab/salmon/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) /home/ngs/programs/salmon/Salmon-0.8.2_linux_x86_64/bin/salmon quant -i ""$path_dr_salmonindex_transcriptome_ercc"" -o ""$newfilename-salmon-quant"" -g ""$path_dr_gtf"" -l ""U"" -p 1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:2412,optimiz,optimizer,2412,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,1,['optimiz'],['optimizer']
Performance,"info] Total 222(has 200 low confidence) barcodes; [2018-07-26 11:25:31.440] [alevinLog] [info] Done True Barcode Sampling; [2018-07-26 11:25:31.789] [alevinLog] [info] Done populating Z matrix; [2018-07-26 11:25:31.793] [alevinLog] [info] Done indexing Barcodes; [2018-07-26 11:25:31.793] [alevinLog] [info] Total Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] Loading Transcript Info ; [2018-07-26 11:26:10.896] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-26 11:26:11.159] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-26 11:26:11.225] [stderrLog] [info] Computing transcript lengths; [2018-07-26 11:26:11.226] [stderrLog] [info] Waiting to finish loading hash; [2018-07-26 11:26:14.654] [stderrLog] [info] Done loading index; [2018-07-26 11:26:14.654] [jointLog] [info] done; [2018-07-26 11:26:14.654] [jointLog] [info] Index contained 203027 targets. Incorrect call for umi extractIncorrect call for umi extract; ```. I traced it back to AlevinUtils.cpp in the source files but could not make sense of it from there. The program will run completely on the same data and library if I change --dropseq to --Chromium, eventually outputting the following after processing the reads:. ```; [2018-07-24 10:56:20.712] [jointLog] [info] Computed 9968 rich equivalence classes for further processing; [2018-07-24 10:56:20.712] [jointLog] [info] Counted 2785976 total reads in the equivalence classes; [2018-07-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/258:3029,Load,Loading,3029,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258,1,['Load'],['Loading']
Performance,"info] Total 4000(has 1000 low confidence) barcodes; [2019-01-29 15:49:35.251] [alevinLog] [info] Done True Barcode Sampling; [2019-01-29 15:49:35.896] [alevinLog] [info] Done populating Z matrix; [2019-01-29 15:49:35.994] [alevinLog] [info] Done indexing Barcodes; [2019-01-29 15:49:35.994] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-29 15:49:35.994] [alevinLog] [info] Used Barcodes except Whitelist: 105901; [2019-01-29 15:49:36.107] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-29 15:49:36.107] [alevinLog] [info] parsing read library format; [2019-01-29 15:49:36.415] [stderrLog] [info] Loading Suffix Array; [2019-01-29 15:49:36.107] [jointLog] [info] There is 1 library.; [2019-01-29 15:49:36.373] [jointLog] [info] Loading Quasi index; [2019-01-29 15:49:36.396] [jointLog] [info] Loading 32-bit quasi index; [2019-01-29 15:49:50.479] [stderrLog] [info] Loading Transcript Info; [2019-01-29 15:49:55.550] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-01-29 15:49:56.036] [stderrLog] [info] There were 58,086 set bits in the bit array; [2019-01-29 15:49:56.077] [stderrLog] [info] Computing transcript lengths; [2019-01-29 15:49:56.077] [stderrLog] [info] Waiting to finish loading hash; [2019-01-29 15:49:56.077] [stderrLog] [info] Done loading index; [2019-01-29 15:49:56.077] [jointLog] [info] done; [2019-01-29 15:49:56.077] [jointLog] [info] Index contained 58,086 targets; processed 287 Million fragments; hits: 152080339, hits per frag: 0.529087. [2019-01-29 16:05:46.677] [jointLog] [info] Computed 58,128 rich equivalence classes for further processing; [2019-01-29 16:05:46.677] [jointLog] [info] Counted 58,047,553 total reads in the equivalence classes; [2019-01-29 16:05:46.678] [jointLog] [warning] Found 21006 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-29 16:05:46.678] [jointLog] [info] Mapping rate = 20.1566%. [2019-01-29 16:05:46.67",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:1577,Load,Loading,1577,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['Load'],['Loading']
Performance,"info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment group queue pool has been exhausted. 1842 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 13423395 reads in current round; killing thread 3 . . . done. Freeing memory used by read queue . . . 00000; Joined parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointLog] [info] iteration = 0 | max rel diff. = 237.557; [2023-01-29 16:02:59.282] [jointLog] [info] iteration = 100 | max rel diff. = 3.78077e-16; [2023-01-29 16:02:59.282] [jointLog] [info] finished optimizer; [2023-01-29 16:02:59.282] [jointLog] [info] writing output. ```. Output for failure case - 48",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:3138,queue,queue,3138,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['queue'],['queue']
Performance,"intLog] [info] You specified --dumpEqWeights, which implies --dumpEq; that option has been enabled.; [2021-05-19 18:46:25.303] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-05-19 18:46:25.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:1909,Load,Loading,1909,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['Load'],['Loading']
Performance,"ion skipping it; [2018-08-29 11:28:19.290] [alevinLog] [info] Learned InvCov: 568.346 normfactor: 688.271; [2018-08-29 11:28:19.290] [alevinLog] [info] Total 3385(has 1000 low confidence) barcodes; [2018-08-29 11:28:19.297] [alevinLog] [info] Done True Barcode Sampling; [2018-08-29 11:28:19.433] [alevinLog] [info] Done populating Z matrix; [2018-08-29 11:28:19.437] [alevinLog] [info] Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] Loading Transcript Info ; [2018-08-29 11:30:08.761] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-29 11:30:11.254] [stderrLog] [info] There were 135226 set bits in the bit array; [2018-08-29 11:30:11.311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI se",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:3426,Load,Loading,3426,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,1,['Load'],['Loading']
Performance,ion.; [2021-01-21 09:33:35.885] [alevinLog] [info] # Barcodes Used: 188934609 / 188934609.; [2021-01-21 09:33:37.337] [alevinLog] [info] Total 10016(has 1000 low confidence) barcodes; [2021-01-21 09:33:38.202] [alevinLog] [info] Done True Barcode Sampling; [2021-01-21 09:33:39.137] [alevinLog] [warning] Total **52.0343% reads will be thrown away** because of noisy Cellular barcodes.; [2021-01-21 09:33:39.960] [alevinLog] [info] Done populating Z matrix; [2021-01-21 09:33:39.989] [alevinLog] [info] Total 34923 CB got sequence corrected; [2021-01-21 09:33:39.994] [alevinLog] [info] Done indexing Barcodes; [2021-01-21 09:33:39.994] [alevinLog] [info] Total Unique barcodes found: 3896665; [2021-01-21 09:33:39.994] [alevinLog] [info] Used Barcodes except Whitelist: 34503; [2021-01-21 09:33:40.718] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-21 09:33:40.718] [alevinLog] [info] parsing read library format; [2021-01-21 09:48:11.430] [alevinLog] [info] Starting optimizer; [2021-01-21 09:48:12.160] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-01-21 09:48:12.160] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 19031525.00 UMI after deduplicating.; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 454402 BiDirected Edges.; [2021-01-21 09:48:36.288] [alevinLog] [info] Total 113688 UniDirected Edges.; [2021-01-21 09:48:36.288] [alevinLog] [warning] Skipped 44 barcodes due to No mapped read; [2021-01-21 09:48:36.307] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-01-21 09:48:41.314] [alevinLog] [info] Starting white listing of 9971 cells; [2021-01-21 09:48:41.314] [alevinLog] [info] Starting to make feature Matrix; [2021-01-21 09:48:41.337] [alevinLog] [info] Done making feature Matrix; [2021-01-21 09:48:41.557] [alevinLog] [info] Finished white listing; [2021-01-21 09:48:41.580] [alevinLog] [,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/620:6576,optimiz,optimizer,6576,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620,1,['optimiz'],['optimizer']
Performance,"ique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 16:31:51.960] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 16:31:52.001] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 16:31:52.022] [stderrLog] [info] Computing transcript lengths; [2018-12-05 16:31:52.022] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 16:31:56.025] [stderrLog] [info] Done loading index; [2018-12-05 16:31:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16:57:31.421] [jointLog] [warning] Found 539897 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 16:57:31.421] [jointLog] [info] Mapping rate = 70.9532%. [2018-12-05 16:57:31.421] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 16:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:13155,load,loading,13155,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['load'],['loading']
Performance,"ique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 15:12:30.141] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 15:12:30.181] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counted 163,106,139 total reads in the equivalence classes ; [2018-12-05 15:45:46.199] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 15:45:46.199] [jointLog] [info] Mapping rate = 60.9633%. [2018-12-05 15:45:46.199] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 15:45:47.617] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-05 15:47:14.597] [alevinLog] [info] Total 1870793 UMI after deduplicating.; [2018-12-05 15:47:14.693] [alevinLog] [info] Clearing EqMap; Might take so",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:7643,load,loading,7643,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['load'],['loading']
Performance,"iteration = 1200 | max rel diff. = 0.0202505; [2015-11-03 14:08:31.792] [jointLog] [info] iteration = 1300 | max rel diff. = 0.0186214; [2015-11-03 14:08:32.177] [jointLog] [info] iteration = 1400 | max rel diff. = 0.0181308; [2015-11-03 14:08:32.568] [jointLog] [info] iteration = 1500 | max rel diff. = 0.0159512; [2015-11-03 14:08:32.948] [jointLog] [info] iteration = 1600 | max rel diff. = 0.0156004; [2015-11-03 14:08:33.323] [jointLog] [info] iteration = 1700 | max rel diff. = 0.0134322; [2015-11-03 14:08:33.700] [jointLog] [info] iteration = 1800 | max rel diff. = 0.0131983; [2015-11-03 14:08:34.077] [jointLog] [info] iteration = 1900 | max rel diff. = 0.0123282; [2015-11-03 14:08:34.453] [jointLog] [info] iteration = 2000 | max rel diff. = 0.0123282; [2015-11-03 14:08:34.835] [jointLog] [info] iteration = 2100 | max rel diff. = 0.0105099; [2015-11-03 14:08:35.439] [jointLog] [info] iteration = 2261 | max rel diff. = 0.00994575; [2015-11-03 14:08:35.441] [jointLog] [info] Finished optimizer; [2015-11-03 14:08:35.441] [jointLog] [info] writing output ; [2015-11-03 14:08:35.213] [jointLog] [info] iteration = 2200 | max rel diff. = 0.0105132. [2015-11-03 14:08:35.481] [jointLog] [warning] NOTE: Read Lib [( L101_resync_R1.fastq, L101_resync_R2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: L101.quant/libFormatCounts.txt for details. L101.quant/libFormatCounts.txt. ========; Read library consisting of files: ( L101_resync_R1.fastq, L101_resync_R2.fastq ). Expected format: Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }. # of consistent alignments: 6342265; # of inconsistent alignments: 2277243. ========; ---- counts for each format type ---; Library format { type:single end, relative orientation:matching, strandedness:(sense, antisense) } : 0; Library format { type:paired end, relative orientation:matching, strandedness:(sense, antise",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/31:2707,optimiz,optimizer,2707,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/31,1,['optimiz'],['optimizer']
Performance,"ityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>; Args = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOpt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:9770,optimiz,optimized,9770,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['optimiz'],['optimized']
Performance,"ize = 16096732; Candidate marks count = 337141231. Reallocating bifurcations time: 8; True marks count: 335754103; Edges construction time: 117. Distinct junctions = 14895414. TwoPaCo::buildGraphMain:: allocated with scalable_malloc; freeing.; TwoPaCo::buildGraphMain:: Calling scalable_allocation_command(TBBMALLOC_CLEAN_ALL_BUFFERS, 0);; allowedIn: 21; Max Junction ID: 14896947; seen.size():119175585 kmerInfo.size():14896948; approximateContigTotalLength: 1087128541; counters for complex kmers:; (prec>1 & succ>1)=3126880 | (succ>1 & isStart)=773 | (prec>1 & isEnd)=671 | (isStart & isEnd)=30; contig count: 24974474 element count: 3020582944 complex nodes: 3128354; # of ones in rank vector: 24974473; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Starting the Pufferfish indexing by reading the GFA binary file.; [2022-06-01 18:28:09.708] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory Mus_musculus.GRCm39_v1.8.0_decoy.index; size = 3020582944. | Loading contigs | Time = 469.49 ms. size = 3020582944. | Loading contig boundaries | Time = 242.8 ms. Number of ones: 24974473; Number of ones per inventory item: 512; Inventory entries filled: 48779; 24974473; [2022-06-01 18:28:15.208] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2022-06-01 18:28:15.619] [puff::index::jointLog] [info] contig count for validation: 24,974,473; [2022-06-01 18:28:31.732] [puff::index::jointLog] [info] Total # of Contigs : 24,974,473; [2022-06-01 18:28:31.732] [puff::index::jointLog] [info] Total # of numerical Contigs : 24,974,473; [2022-06-01 18:28:33.958] [puff::index::jointLog] [info] Total # of contig vec entries: 345,523,986; [2022-06-01 18:28:33.958] [puff::index::jointLog] [info] bits per offset entry 29; [2022-06-01 18:28:53.341] [puff::index::jointLog] [info] Done constructing the contig vector. 24974474; [2022-06-01 18:29:07.368] [puff::index::jointLog] [info] # segments = 24,974,473; [2022-06-01 18:29:07.368] [pu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783:12553,Load,Loading,12553,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783,1,['Load'],['Loading']
Performance,"l Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] Loading Transcript Info ; [2018-07-26 11:26:10.896] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-26 11:26:11.159] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-26 11:26:11.225] [stderrLog] [info] Computing transcript lengths; [2018-07-26 11:26:11.226] [stderrLog] [info] Waiting to finish loading hash; [2018-07-26 11:26:14.654] [stderrLog] [info] Done loading index; [2018-07-26 11:26:14.654] [jointLog] [info] done; [2018-07-26 11:26:14.654] [jointLog] [info] Index contained 203027 targets. Incorrect call for umi extractIncorrect call for umi extract; ```. I traced it back to AlevinUtils.cpp in the source files but could not make sense of it from there. The program will run completely on the same data and library if I change --dropseq to --Chromium, eventually outputting the following after processing the reads:. ```; [2018-07-24 10:56:20.712] [jointLog] [info] Computed 9968 rich equivalence classes for further processing; [2018-07-24 10:56:20.712] [jointLog] [info] Counted 2785976 total reads in the equivalence classes; [2018-07-24 10:56:20.729] [jointLog] [warning] Only 2785976 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-07-24 10:56:20.729] [jointLog] [warning] Found 82730645 reads with CB+UMI length smaller than expected.Ple",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/258:3352,load,loading,3352,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258,1,['load'],['loading']
Performance,"le | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 320.51 us; -----------------------------------------; [2024-05-03 15:10:04.136] [jointLog] [info] done; [2024-05-03 15:10:04.170] [jointLog] [info] Index contained 147554 targets. [2024-05-03 15:10:05.131] [jointLog] [info] Number of decoys : 61 ; processed 21000000 fragmentsointLog] [info] First decoy index : 147456; hits: 25885546, hits per frag: 1.2683(base) [**no further output**]; ```. **Desktop (please complete the following information):**; - OS: Ubuntu linux. ```; $ uname -a; Linux big-bird 5.15.0-102-generic #112-Ubuntu SMP Tue Mar 5 16:50:32 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Ubuntu; Description: Ubuntu 22.04.4 LTS; Release: 22.04; Codename: jammy; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:7019,Load,Loading,7019,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,2,['Load'],['Loading']
Performance,"lentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/64:1442,Load,Loading,1442,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64,1,['Load'],['Loading']
Performance,"lip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; ------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:5925,Load,Loading,5925,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['Load'],['Loading']
Performance,"ll/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_INSTALL_PREFIX:PATH=/gpfs/software/salmon/xeonmax/gcc13.2.0/1.10.3. make clean; make -j 25; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? **1.10.3**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **compiled**. **Expected behavior**; A successful build. **Desktop (please complete the following information):**; - OS: **Rocky Linux 9.4**; - Version: **Linux xm013 5.14.0-427.26.1.el9_4.x86_64 #1 SMP PREEMPT_DYNAMIC T",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:2986,load,load,2986,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['load'],['load']
Performance,"lmon (mapping-based) v0.10.0; \#\#\# [ program ] => salmon; \#\#\# [ command ] => quant; \#\#\# [ index ] => { salmon010.index.all_combined }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { R1.fastq.gz }; \#\#\# [ mates2 ] => { R2.fastq.gz }; \#\#\# [ posBias ] => { }; \#\#\# [ gcBias ] => { }; \#\#\# [ seqBias ] => { }; \#\#\# [ useVBOpt ] => { }; \#\#\# [ validateMappings ] => { }; \#\#\# [ output ] => { processed_salmon0100_k31_allcombined/R }; Logs will be written to processed_salmon0100_k31_allcombined/R/logs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229:1170,Load,Loading,1170,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229,1,['Load'],['Loading']
Performance,"lude/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:1067,Load,Loading,1067,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,1,['Load'],['Loading']
Performance,"m protocol (END, BC length, UMI length) = (5, 16, 10) is being used. Updating UMI k-mer length accordingly.; [2019-06-23 18:08:01.803] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-23 18:08:01.804] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-23 18:08:01.804] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-06-23 18:08:01.805] [alevinLog] [info] Loading Header; [2019-06-23 18:08:01.807] [alevinLog] [info] Loading Transcript Info ; [2019-06-23 18:08:02.243] [alevinLog] [warning] Found {} transcripts with duplicate names; [2019-06-23 18:08:02.530] [alevinLog] [info] Found all transcripts to gene mappings; ### alevin (dscRNA-seq quantification) v0.14.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { U }; ### [ mates2 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/read_fastq//sample.fastq }; ### [ mates1 ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018/CB_UMI//sample.fastq }; ### [ index ] => { /mnt/beegfs/alexmascension/STAR//hg38/salmon_index/ }; ### [ threads ] => { 40 }; ### [ output ] => { /mnt/beegfs/alexmascension/Projects/Single-cell_skin_analysis//Data/Cheng-2018//Alevin/sample }; ### [ end ] => { 5 }; ### [ barcodeLength ] => { 16 }; ### [ umiLength ] => { 10 }; ### [ dumpUmiGraph ] => { }; ### [ tgMap ] => { /mnt/beegfs/alexmascension/STAR//hg38/dict_transcript_gene.tsv }. [2019-06-23 18",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:2641,Load,Loading,2641,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['Load'],['Loading']
Performance,mand ] => quant ; ### [ index ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { fastq_files/SRR2454059.fq.gz }; ### [ threads ] => { 8 }; ### [ libType ] => { ISF }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [jointLog] [info] Computed 137534 rich equivalence classes for further processin; g; [2016-12-13 12:46:51.776] [jointLog] [info] Counted 1626596,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111:1621,Load,Loading,1621,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111,1,['Load'],['Loading']
Performance,"ments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 3.165 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 75.428 ms; -----------------------------------------. [2021-09-20 16:22:03.730] [jointLog] [info] done;",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:4953,Load,Loading,4953,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"ments will be ignored.; [2021-09-20 16:29:51.663] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:29:51.663] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:29:51.663] [jointLog] [info] parsing read library format; [2021-09-20 16:29:51.663] [jointLog] [info] There is 1 library.; [2021-09-20 16:29:51.736] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:29:51.738] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:1989,Load,Loading,1989,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"ments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog] [info] parsing read library format; [2023-11-30 09:36:58.680] [jointLog] [info] There is 1 library.; [2023-11-30 09:36:58.681] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:36:58.681] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 2.1723 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 2.8044 ms; -----------------------------------------. [2023-11-30 09:37:51.026] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:6751,Load,Loading,6751,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"ments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:40:21.543] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:40:21.543] [jointLog] [info] parsing read library format; [2023-11-30 09:40:21.543] [jointLog] [info] There is 1 library.; [2023-11-30 09:40:21.544] [jointLog] [info] Loading pufferfish index; [2023-11-30 09:40:21.545] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output wh",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:3626,Load,Loading,3626,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"mples that have worked with Cell Ranger. I recompiled the program with `-DCMAKE_BUILD_TYPE=Debug` and have attached the output and gdb backtrace. There is roughly 8M reads in the single fastq file I am testing with. I can see a whole bunch of threads being created despite limiting the number of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:1151,load,loading,1151,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['load'],['loading']
Performance,"mum of 0.90% zero probability fragments; [2018-05-31 17:08:09.572] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.634] [jointLog] [info] Thread saw mini-batch with a maximum of 0.90% zero probability fragments; [2018-05-31 17:08:09.641] [jointLog] [info] Thread saw mini-batch with a maximum of 1.00% zero probability fragments; [2018-05-31 17:08:09.649] [jointLog] [info] Thread saw mini-batch with a maximum of 0.88% zero probability fragments; [2018-05-31 17:08:09.690] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.702] [jointLog] [info] Thread saw mini-batch with a maximum of 0.92% zero probability fragments; [2018-05-31 17:08:09.721] [jointLog] [info] Thread saw mini-batch with a maximum of 0.88% zero probability fragments; [2018-05-31 17:08:09.728] [jointLog] [info] Thread saw mini-batch with a maximum of 0.90% zero probability fragments; [2018-05-31 17:08:09.782] [jointLog] [info] Thread saw mini-batch with a maximum of 0.86% zero probability fragments; [2018-05-31 17:08:09.786] [jointLog] [info] Thread saw mini-batch with a maximum of 0.90% zero probability fragments. [2018-05-31 17:08:10.483] [jointLog] [info] Computed 582392 rich equivalence classes for further processing; [2018-05-31 17:08:10.483] [jointLog] [info] Counted 59985194 total reads in the equivalence classes; [2018-05-31 17:08:10.551] [jointLog] [info] Mapping rate = 88.2723%. [2018-05-31 17:08:10.551] [jointLog] [info] finished quantifyLibrary(); [2018-05-31 17:08:10.551] [jointLog] [info] Starting optimizer; [2018-05-31 17:08:11.488] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2018-05-31 17:08:11.523] [jointLog] [info] iteration = 0 | max rel diff. = 127.399; Exception : [Error in function boost::math::digamma<double>(double): numeric overflow]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229:7171,optimiz,optimizer,7171,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229,1,['optimiz'],['optimizer']
Performance,"n order to do that I run the following code:; Code (example):; `salmon quant -l A -i /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/spikein/Flox5YFP0_B07_R/index -p 6 -o /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/bcbiotx/tmpTest2/quant -1 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R1_Flox5YFP0_B07_R.trimmed.fastq.gz) -2 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119:1219,Load,Loading,1219,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119,1,['Load'],['Loading']
Performance,"n quant -l A -i /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/spikein/Flox5YFP0_B07_R/index -p 6 -o /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/bcbiotx/tmpTest2/quant -1 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R1_Flox5YFP0_B07_R.trimmed.fastq.gz) -2 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119:1286,Load,Loading,1286,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119,1,['Load'],['Loading']
Performance,"n to salmonquant/logs; [2023-01-29 16:02:11.267] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:02:11.308] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:02:12.216] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; [2023-01-29 16:02:12.668] [jointLog] [info] Automatically detected most likely library type as U. processed 2000000 reads in current round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment group queue pool has been exhausted. 1842 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 13423395 reads in current round; killing thread 3 . . . done. Freeing memory used by read queue . . . 00000; Joined parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivale",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:2768,queue,queue,2768,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['queue'],['queue']
Performance,"nLog] [warning] Skipping 50 Barcodes as no read was mapped; [2019-06-04 15:58:27.583] [alevinLog] [info] Total 0 white-listed Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [warning] Total 100% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 15:58:27.594] [alevinLog] [info] Done populating Z matrix; [2019-06-04 15:58:27.594] [alevinLog] [warning] 0 Whitelisted Barcodes with 0 frequency; [2019-06-04 15:58:27.594] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 15:58:27.594] [alevinLog] [info] Total Unique barcodes found: 5; [2019-06-04 15:58:27.594] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 15:58:27.617] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 15:58:27.617] [alevinLog] [info] parsing read library format; [2019-06-04 15:58:27.617] [jointLog] [info] There is 1 library.; [2019-06-04 15:58:27.750] [jointLog] [info] Loading Quasi index; [2019-06-04 15:58:27.750] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 15:58:27.750] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 15:58:28.626] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 15:58:28.866] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 15:58:28.900] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 15:58:28.922] [stderrLog] [info] Computing transcript lengths; [2019-06-04 15:58:28.922] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 15:58:38.645] [jointLog] [info] done; [2019-06-04 15:58:38.645] [jointLog] [info] Index contained 136,011 targets. [2019-06-04 15:58:38.645] [stderrLog] [info] Done loading index; processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; processed 4 Million fragments; processed 4 Million fragments; processed 5 Million fragments; processed 5 Million fragm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369:2251,Load,Loading,2251,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369,1,['Load'],['Loading']
Performance,n_index_hg38.analysisSet_knownGene }; ### [ unmatedReads ] => { fastq_files/SRR2454059.fq.gz }; ### [ threads ] => { 8 }; ### [ libType ] => { ISF }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ useVBOpt ] => { }; ### [ dumpEq ] => { }; ### [ dumpEqWeights ] => { }; ### [ geneMap ] => { /home/ryan/references/hg38/Salmon_index_hg38.analysisSet_knownGene/genemap.txt }; ### [ output ] => { salmon_quant/hg38.analysisSet_knownGene/SRR2454059 }; ### [ auxDir ] => { aux_info }; ### [ numGibbsSamples ] => { 100 }; Logs will be written to salmon_quant/hg38.analysisSet_knownGene/SRR2454059/logs; [2016-12-13 12:44:39.271] [jointLog] [info] parsing read library format; [2016-12-13 12:44:39.271] [jointLog] [info] There is 1 library.; [2016-12-13 12:44:39.836] [jointLog] [info] Loading Quasi index; [2016-12-13 12:44:39.836] [jointLog] [info] Loading 32-bit quasi index; [2016-12-13 12:44:39.836] [stderrLog] [info] Loading Suffix Array ; [2016-12-13 12:44:43.439] [stderrLog] [info] Loading Transcript Info ; [2016-12-13 12:44:44.355] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-12-13 12:44:44.613] [stderrLog] [info] There were 182608 set bits in the bit array; [2016-12-13 12:44:44.629] [stderrLog] [info] Computing transcript lengths; [2016-12-13 12:44:44.629] [stderrLog] [info] Waiting to finish loading hash; [2016-12-13 12:44:44.629] [stderrLog] [info] Done loading index; [2016-12-13 12:44:44.629] [jointLog] [info] done; [2016-12-13 12:44:44.629] [jointLog] [info] Index contained 182608 targets; [2016-12-13 12:44:49.583] [jointLog] [warning] Fragment GC bias correction is currently *experimental* in ; single-end libraries. Please use this option with caution. processed 19000000 fragments; hits: 65897660; hits per frag: 3.46963. [2016-12-13 12:46:51.776] [jointLog] [info] Computed 137534 rich equivalence classes for further processin; g; [2016-12-13 12:46:51.776] [jointLog] [info] Counted 16265961 total reads in the equivalence classes . [2016-12-13 12:46:51.786] [,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111:1689,Load,Loading,1689,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111,1,['Load'],['Loading']
Performance,"n_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.840] [stderrLog] [info] Loading Suffix Array ; [2018-07-30 15:42:39.168] [stderrLog] [info] Loading Transcript Info ; [2018-07-30 15:42:53.599] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-30 15:42:56.236] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-30 15:42:56.328] [stderrLog] [info] Computing transcript lengths; [2018-07-30 15:42:56.329] [stderrLog] [info] Waiting to finish loading hash; [2018-07-30 15:42:56.329] [stderrLog] [info] Done loading index; [2018-07-30 15:42:56.329] [jointLog] [info] done; [2018-07-30 15:42:56.329] [jointLog] [info] Index contained 203027 targets. processed 4000003 fragments; processed 298000000 fragments 0.071773[2018-07-30 15:43:47.415] [jointLog] [info] Automatically detected most likely library type as IU; hits: 20950511, hits per frag: 0.0703073[2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.432] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.469] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragmen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261:2423,load,loading,2423,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261,1,['load'],['loading']
Performance,"nd minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [jointLog] [info] There is 1 library.; [00m[1m[2017-03-07 03:00:41.948] [jointLog] [info] Loading Quasi index; [00m[1m[2017-03-07 03:00:41.972] [jointLog] [info] Loading 32-bit quasi index; [00m[1m[2017-03-07 03:42:43.689] [stderrLog] [info] Loading Suffix Array ; [00m[1m[2017-03-07 04:54:34.756] [stderrLog] [info] Loading Transcript Info ; [00m[1m[2017-03-07 04:58:51.467] [stderrLog] [info] Loading Rank-Select Bit Array; [00m[1m[2017-03-07 06:59:17.578] [stderrLog] [info] There were 198093 set bits in the bit array; [00m[1m[2017-03-07 07:29:20.417] [stderrLog] [info] Computing transcript lengths; [00m[1m[2017-03-07 07:56:34.913] [stderrLog] [info] Waiting to finish loading hash; [00m[1m[2017-03-07 08:38:09.635] [stderrLog] [info] Successfully loaded position hash; [00m[1m[2017-03-07 08:38:09.636] [stderrLog] [info] Done loading index; [00m[1m[2017-03-07 08:38:09.637] [jointLog] [info] done; [00m[1m[2017-03-07 08:38:09.655] [jointLog] [info] Index contained 198093 targets; [00m. [A. [32mprocessed[31m 500000 [32mfragments[0m; hits: 624068, hits per frag: 1.2607",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:3427,Load,Loading,3427,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['Load'],['Loading']
Performance,"ndexing Barcodes; [2018-12-05 15:12:27.952] [alevinLog] [info] Total Unique barcodes found: 4180559; [2018-12-05 15:12:27.952] [alevinLog] [info] Used Barcodes except Whitelist: 134856; [2018-12-05 15:12:29.321] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 15:12:29.216] [jointLog] [info] There are 2 libraries.; [2018-12-05 15:12:29.318] [jointLog] [info] Loading Quasi index; [2018-12-05 15:12:29.319] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 15:12:29.216] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 15:12:29.216] [alevinLog] [info] parsing read library format; [2018-12-05 15:12:29.949] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 15:12:30.141] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 15:12:30.181] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 15:12:30.197] [stderrLog] [info] Computing transcript lengths; [2018-12-05 15:12:30.197] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 15:12:34.297] [stderrLog] [info] Done loading index; [2018-12-05 15:12:34.297] [jointLog] [info] done; [2018-12-05 15:12:34.297] [jointLog] [info] Index contained 167,268 targets. processed 267 Million fragments; hits: 892324990, hits per frag: 3.33692. [2018-12-05 15:45:46.198] [jointLog] [info] Computed 185,593 rich equivalence classes for further processing; [2018-12-05 15:45:46.198] [jointLog] [info] Counted 163,106,139 total reads in the equivalence classes ; [2018-12-05 15:45:46.199] [jointLog] [warning] Found 115077 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 15:45:46.199] [jointLog] [info] Mapping rate = 60.9633%. [2018-12-05 15:45:46.199] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 15:45:47.617] [alevinLog] [info] Starting optimizer. Analyzed 5344 cells (100% of all).; [2018-12-05 15:47:14.597] [alevinLog] [info] Total 1870793 UMI after deduplicating.; [20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:7579,load,loading,7579,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['load'],['loading']
Performance,"ndexing Barcodes; [2018-12-05 16:31:51.000] [alevinLog] [info] Total Unique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 16:31:51.960] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 16:31:52.001] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 16:31:52.022] [stderrLog] [info] Computing transcript lengths; [2018-12-05 16:31:52.022] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 16:31:56.025] [stderrLog] [info] Done loading index; [2018-12-05 16:31:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16:57:31.421] [jointLog] [warning] Found 539897 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 16:57:31.421] [jointLog] [info] Mapping rate = 70.9532%. [2018-12-05 16:5",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:13091,load,loading,13091,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['load'],['loading']
Performance,"ne indexing Barcodes; [2018-07-26 11:25:31.793] [alevinLog] [info] Total Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] Loading Transcript Info ; [2018-07-26 11:26:10.896] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-26 11:26:11.159] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-26 11:26:11.225] [stderrLog] [info] Computing transcript lengths; [2018-07-26 11:26:11.226] [stderrLog] [info] Waiting to finish loading hash; [2018-07-26 11:26:14.654] [stderrLog] [info] Done loading index; [2018-07-26 11:26:14.654] [jointLog] [info] done; [2018-07-26 11:26:14.654] [jointLog] [info] Index contained 203027 targets. Incorrect call for umi extractIncorrect call for umi extract; ```. I traced it back to AlevinUtils.cpp in the source files but could not make sense of it from there. The program will run completely on the same data and library if I change --dropseq to --Chromium, eventually outputting the following after processing the reads:. ```; [2018-07-24 10:56:20.712] [jointLog] [info] Computed 9968 rich equivalence classes for further processing; [2018-07-24 10:56:20.712] [jointLog] [info] Counted 2785976 total reads in the equivalence classes; [2018-07-24 10:56:20.729] [jointLog] [warning] Only 2785976 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-07-24 10:56:20.729] [jointLog] [war",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/258:3288,load,loading,3288,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258,1,['load'],['loading']
Performance,"ne is split into two version by exon skipping and is not alternatively spliced. I also want to make this process fast as the idea would be to look for differences in the proportions of gene versions that are created based on a large databases of RNAseq data (easily 200+ different RNAseq experiments). So to make it quick I am only passing two transcripts to Salmon (T - 1, and T - 2) for version 1 and 2 of the transcript, where version 2 has the 2nd exon (of 4 total exons) removed. . Now I know Salmon was created to map reads to a large number of transcripts across the whole genome, but I believe it still should be possible to narrow down the view to only 1 gene with 2 versions. I believe I just need to set the parameters right, but I also want to set the parameters in a general way so that my script can work across different species with different input RNAseq data. The other problem is that we currently do not have an idea of what proportion of these two versions of the gene should actually exist in the RNAseq data I have (which we didn't perform but just grabbed a random sample from GenBank to test with). My adviser wants to first try and test it computationally first and then verify it in the lab (which is somewhat backwards in my mind, as it's really just a shot in the dark and from my preliminary analysis of Salmon, different parameters can drastically change the proportions of the two versions). . As you can see below, I have tried some parameter settings that I thought would be helpful (particularly ```--quasiCoverage```). But again I could be wrong and would like to know your opinions in the matter. . These runs were all performed with this 'default' run: ; ```; salmon quant -i index -l A -1 reads_1.fq -2 reads_2.fq --validateMappings -p 20 --numPreAuxModelSamples 250 --numAuxModelSamples 1000 -o output ; ```; I changes the ```AuxModelSamples``` to low values as I was generally only mapping 6000 reads to the two transcripts in total, so I didn't think they we",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/401:1712,perform,perform,1712,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401,1,['perform'],['perform']
Performance,nfo] Thread saw mini-batch with a maximum of 9.94% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.26% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.30% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.56% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.48% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.16% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.02% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 9.84% zero probability fragments; [2018-06-30 22:12:13.117] [jointLog] [info] Thread saw mini-batch with a maximum of 10.24% zero probability fragments; [2018-06-30 22:12:13.120] [jointLog] [info] Thread saw mini-batch with a maximum of 10.88% zero probability fragments; [2018-06-30 22:12:13.141] [jointLog] [info] Thread saw mini-batch with a maximum of 10.26% zero probability fragments; [2018-06-30 22:12:13.146] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.160] [jointLog] [info] Thread saw mini-batch with a maximum of 10.24% zero probability fragments. [2018-06-30 22:12:13.224] [jointLog] [info] Computed 22103 rich equivalence classes for further processing; [2018-06-30 22:12:13.224] [jointLog] [info] Counted 12658995 total reads in the equivalence classes; [2018-06-30 22:12:13.224] [jointLog] [info] Mapping rate = 71.4689%. [2018-06-30 22:12:13.224] [jointLog] [info] finished quantifyLibrary(); [2018-06-30 22:12:13.424] [alevinLog] [info] Starting optimizer. Analyzed 1137 cells (11% of all).; ERROR: cell doesn't have any read count; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:5900,optimiz,optimizer,5900,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,1,['optimiz'],['optimizer']
Performance,"nfo] iteration = 200 | max rel diff. = 0.0530265; [00m[1m[2017-03-07 17:22:45.312] [jointLog] [info] iteration = 300 | max rel diff. = 0.0489765; [00m[1m[2017-03-07 17:23:12.877] [jointLog] [info] iteration = 400 | max rel diff. = 0.026371; [00m[1m[2017-03-07 17:23:37.183] [jointLog] [info] iteration = 500 | max rel diff. = 0.0212965; [00m[1m[2017-03-07 17:24:04.277] [jointLog] [info] iteration = 600 | max rel diff. = 0.0183011; [00m[1m[2017-03-07 17:24:42.607] [jointLog] [info] iteration = 700 | max rel diff. = 0.0209044; [00m[1m[2017-03-07 17:25:22.112] [jointLog] [info] iteration = 800 | max rel diff. = 0.0152222; [00m[1m[2017-03-07 17:26:12.037] [jointLog] [info] iteration = 900 | max rel diff. = 0.0129215; [00m[1m[2017-03-07 17:26:59.294] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0111141; [00m[1m[2017-03-07 17:27:42.086] [jointLog] [info] iteration = 1080 | max rel diff. = 0.00971233; [00m[1m[2017-03-07 17:27:42.099] [jointLog] [info] Finished optimizer; [00m[1m[2017-03-07 17:27:42.099] [jointLog] [info] writing output . [00m[33m[1m[2017-03-07 17:27:42.729] [jointLog] [warning] NOTE: Read Lib [( /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz, /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz )] :. Greater than 5% of the fragments disagreed with the provided library type; check the file: /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/lib_format_counts.json for details. [00m**** Job ends ****; Tue Mar 7 17:27:45 EST 2017; ```. The log looks ok to us. Using `qacct` (an SGE command) I can check the memory it used, and it used ~9 GB of RAM:. ```bash; $ qacct -j 9958683 -t 3; ==============================================================; qname shared.q; hostname compute-068.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-txQuant-alzheimer.gsk_phaseII; jobnumber 9958683",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:19439,optimiz,optimizer,19439,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['optimiz'],['optimizer']
Performance,"ng it; [2021-01-25 16:27:05.707] [alevinLog] [info] Learned InvCov: 556.394 normfactor: 9159.58; [2021-01-25 16:27:05.707] [alevinLog] [info] Total 222(has 201 low confidence) barcodes; [2021-01-25 16:27:06.573] [alevinLog] [info] Done True Barcode Sampling; [2021-01-25 16:27:07.383] [alevinLog] [warning] Total **96.7029% reads will be thrown away** because of noisy Cellular barcodes.; [2021-01-25 16:27:07.412] [alevinLog] [info] Done populating Z matrix; [2021-01-25 16:27:07.414] [alevinLog] [info] Total 3667 CB got sequence corrected; [2021-01-25 16:27:07.414] [alevinLog] [info] Done indexing Barcodes; [2021-01-25 16:27:07.414] [alevinLog] [info] Total Unique barcodes found: 3896665; [2021-01-25 16:27:07.414] [alevinLog] [info] Used Barcodes except Whitelist: 3667; [2021-01-25 16:27:07.498] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; [2021-01-25 16:27:07.498] [alevinLog] [info] parsing read library format; [2021-01-25 16:30:54.542] [alevinLog] [info] Starting optimizer; [2021-01-25 16:30:54.782] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2021-01-25 16:30:54.782] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 1350278.00 UMI after deduplicating.; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 30909 BiDirected Edges.; [2021-01-25 16:30:55.950] [alevinLog] [info] Total 8817 UniDirected Edges.; [2021-01-25 16:30:55.969] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-01-25 16:30:56.294] [alevinLog] [warning] Num High confidence barcodes too less 20 < 90.Can't performing whitelisting; Skipping; [2021-01-25 16:30:56.297] [alevinLog] [info] Finished optimizer. ### with `--exceptCells 7000`; > [2021-01-21 09:24:45.891] [alevinLog] [info] Found 43030 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); [2021-01-21 09:24:45.942] [alevinLog] [info] Filled with 43030 txp to gene en",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/620:4324,optimiz,optimizer,4324,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620,1,['optimiz'],['optimizer']
Performance,"nt incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-20 10:53:54.760] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-20 10:53:54.760] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference se",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:2125,Load,Loading,2125,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['Load'],['Loading']
Performance,"ntLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading reference sequence | Time = 681.27 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 21.142 ms; -----------------------------------------; [2024-11-01 05:14:22.991] [jointLog] [info] done; [2024-11-01 05:14:23.016] [jointLog] [info] Index contained 252,149 targets. [2024-11-01 05:14:24.607] [jointLog] [info] Number of decoys : 194; [2024-11-01 05:14:24.607] [jointLog] [info] First decoy index : 251,913 ; [2024-11-01 05:14:29.425] [jointLog] [info] Automatically detected most likely library type as ISR. [A. [32mprocessed[31m 500,000 [32mfragments[0m; hits: 216,939, hits per frag: 0.43692[A. [32mprocessed[31m 1,000,000 [32mfragments[0m; hits: 435,436, hits per frag: 0.442697[A. [32mprocessed[31m 1,500,000 [32",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:3799,Load,Loading,3799,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['Load'],['Loading']
Performance,"ntLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] done; ```; (taken from the terminal as the logfile is empty, and the current time is 12:54 pm = >3 hr run time so far). **To Reproduce**; I ran the following command:. ```; salmon quant \; --geneMap Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: v",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:10301,Load,Loading,10301,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['Load'],['Loading']
Performance,"ntLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; -----------------------------------------; size = 2139249936; -----------------------------------------; | Loading reference sequence | Time = 408.65 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 48.085 ms; -----------------------------------------; Exception : [boost::filesystem::status: File name too long: ""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_33-41/33-41_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_32-40/32-40_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_38-45_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_30-38/30-38_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_20-28/20-28_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-re",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:11152,Load,Loading,11152,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['Load'],['Loading']
Performance,"ntLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 31.648 s; -----------------------------------------; size = 45110164; -----------------------------------------; | Loading contig offsets | Time = 96.211 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 9.7567 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 754.87 ms; -----------------------------------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.63223/.../work2/c3/593743a22569a97e1d10b2a200b713/.command.sh: line 4: 38 Segmentation fault (core dumped) /usr/local/bin/salmon quant -i referen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:4025,Load,Loading,4025,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['Load'],['Loading']
Performance,"ntLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 320.51 us; -----------------------------------------; [2024-05-03 15:10:04.136] [jointLog] [info] done; [2024-05-03 15:10:04.170] [jointLog] [info] Index contained 147554 targets. [2024-05-03 15:10:05.131] [jointLog] [info] Number of decoys : 61 ; processed 21000000 fragmentsointLog] [info] First decoy index : 147456; hits: 25885546, hits per frag: 1.2683(base) [**no further output**]; ```. **Desktop (please complete the following information):**; - OS: Ubuntu linux. ```; $ uname -a; Linux big-bird 5.15.0-102-generic #112-Ubuntu SMP Tue Mar 5 16:50:32 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; No LSB modules",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:6875,Load,Loading,6875,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['Load'],['Loading']
Performance,"ntLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux 0f0e43816679 6.4.16-linuxkit. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:3549,load,loading,3549,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,2,['load'],['loading']
Performance,"nted 19,682,132 total reads in the equivalence classes; [2021-04-20 10:11:39.190] [jointLog] [warning] 0.00192356% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 15. [2021-04-20 10:11:39.190] [jointLog] [info] Number of mappings discarded because of alignment score : 17,018,803; [2021-04-20 10:11:39.190] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 1,750,387; [2021-04-20 10:11:39.190] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2021-04-20 10:11:39.190] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 234,041; [2021-04-20 10:11:39.190] [jointLog] [info] Mapping rate = 77.1074%. [2021-04-20 10:11:39.190] [jointLog] [info] finished quantifyLibrary(); [2021-04-20 10:11:39.193] [jointLog] [info] Starting optimizer; [2021-04-20 10:11:39.263] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2021-04-20 10:11:39.273] [jointLog] [info] iteration = 0 | max rel diff. = 14720; [2021-04-20 10:11:40.059] [jointLog] [info] iteration = 100 | max rel diff. = 11.9398; [2021-04-20 10:11:40.838] [jointLog] [info] iteration = 200 | max rel diff. = 8.95043; [2021-04-20 10:11:41.616] [jointLog] [info] iteration = 300 | max rel diff. = 8.965; [2021-04-20 10:11:42.390] [jointLog] [info] iteration = 400 | max rel diff. = 2.77483; [2021-04-20 10:11:43.170] [jointLog] [info] iteration = 500 | max rel diff. = 18.7693; [2021-04-20 10:11:43.921] [jointLog] [info] iteration = 600 | max rel diff. = 2.07666; [2021-04-20 10:11:44.677] [jointLog] [info] iteration = 700 | max rel diff. = 0.395157; [2021-04-20 10:11:45.418] [jointLog] [info] iteration = 800 | max rel diff. = 0.905927; [2021-04-20 10:11:46.136] [jointLog] [info] iteration = 900 | max rel diff. = 1.75975; [2021-04-20 10:11:46.842] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:6583,optimiz,optimizer,6583,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,1,['optimiz'],['optimizer']
Performance,"nted 22,215,758 total reads in the equivalence classes ; [2020-06-03 23:47:07.131] [jointLog] [warning] 0.00138398% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 1. [2020-06-03 23:47:07.131] [jointLog] [info] Number of mappings discarded because of alignment score : 50,180,647; [2020-06-03 23:47:07.131] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 5,461,169; [2020-06-03 23:47:07.131] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2020-06-03 23:47:07.131] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 324,394; [2020-06-03 23:47:07.131] [jointLog] [info] Mapping rate = 63.6568%. [2020-06-03 23:47:07.131] [jointLog] [info] finished quantifyLibrary(); [2020-06-03 23:47:07.136] [jointLog] [info] Starting optimizer; [2020-06-03 23:47:07.076] [fileLog] [info] ; At end of round 0; ==================; Observed 34899252 total fragments (34899252 in most recent round). [2020-06-03 23:47:08.309] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2020-06-03 23:47:08.317] [jointLog] [info] iteration = 0 | max rel diff. = 41473.1; [2020-06-03 23:47:08.967] [jointLog] [info] iteration = 100 | max rel diff. = 9.06606; [2020-06-03 23:47:09.603] [jointLog] [info] iteration = 200 | max rel diff. = 1.25243; [2020-06-03 23:47:10.262] [jointLog] [info] iteration = 300 | max rel diff. = 19.2449; [2020-06-03 23:47:10.896] [jointLog] [info] iteration = 400 | max rel diff. = 0.263527; [2020-06-03 23:47:11.533] [jointLog] [info] iteration = 500 | max rel diff. = 0.630176; [2020-06-03 23:47:12.175] [jointLog] [info] iteration = 600 | max rel diff. = 0.250806; [2020-06-03 23:47:12.830] [jointLog] [info] iteration = 700 | max rel diff. = 0.228813; [2020-06-03 23:47:13.475] [jointLog] [info]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/530:5414,optimiz,optimizer,5414,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530,1,['optimiz'],['optimizer']
Performance,"nted 34607288 total reads in the equivalence classes ; [2023-02-22 16:39:31.099] [jointLog] [warning] 5.2431e-05% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 26. [2023-02-22 16:39:31.099] [jointLog] [info] Number of mappings discarded because of alignment score : 10896346; [2023-02-22 16:39:31.099] [jointLog] [info] Number of fragments entirely discarded because of alignment score : 2579830; [2023-02-22 16:39:31.099] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 2262090; [2023-02-22 16:39:31.099] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 222960; [2023-02-22 16:39:31.099] [jointLog] [info] Mapping rate = 72.5797%. [2023-02-22 16:39:31.099] [jointLog] [info] finished quantifyLibrary(); [2023-02-22 16:39:31.099] [jointLog] [info] Starting optimizer; [2023-02-22 16:39:31.095] [fileLog] [info] ; At end of round 0; ==================; Observed 47681748 total fragments (47681748 in most recent round). [2023-02-22 16:39:31.343] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-02-22 16:39:31.387] [jointLog] [info] iteration = 0 | max rel diff. = 4339.45; [2023-02-22 16:39:31.726] [jointLog] [info] iteration 11, adjusting effective lengths to account for biases; [2023-02-22 16:40:27.779] [jointLog] [info] Computed expected counts (for bias correction); [2023-02-22 16:40:27.779] [jointLog] [info] processed bias for 0.0% of the transcripts; [2023-02-22 16:40:33.273] [jointLog] [info] processed bias for 10.0% of the transcripts; [2023-02-22 16:40:39.173] [jointLog] [info] processed bias for 20.0% of the transcripts; [2023-02-22 16:40:44.721] [jointLog] [info] processed bias for 30.0% of the transcripts; [2023-02-22 16:40:50.705] [jointLog] [info] processed bias for 40.0% of the transcripts; [2023-02-22",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:3376,optimiz,optimizer,3376,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['optimiz'],['optimizer']
Performance,"nts will be ignored.; [2023-02-23 09:39:48.709] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-23 09:39:48.709] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-23 09:39:48.709] [jointLog] [info] parsing read library format; [2023-02-23 09:39:48.709] [jointLog] [info] There is 1 library.; [2023-02-23 09:39:48.709] [jointLog] [info] Loading pufferfish index; [2023-02-23 09:39:48.709] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 15.056 s; -----------------------------------------; size = 37280289; -----------------------------------------; | Loading contig offsets | Time = 61.965 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 513.44 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 755.36 ms; -----------------------------------------; size = 3783918493; Number of ones: 37280288; Number of ones per inventory item: 512; Inventory entries filled: 72814; -----------------------------------------; | Loading contig boundaries | Time = 4.2405 s; -----------------------------------------; size = 3783918493; -----------------------------------------; | Loading sequence | Time = 387.95 ms; -----------------------------------------; size = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] don",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:9760,Load,Loading,9760,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['Load'],['Loading']
Performance,"nts will be ignored.; [2023-08-27 19:59:26.866] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-08-27 19:59:26.866] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-08-27 19:59:26.866] [jointLog] [info] parsing read library format; [2023-08-27 19:59:26.866] [jointLog] [info] There is 1 library.; [2023-08-27 19:59:26.867] [jointLog] [info] Loading pufferfish index; [2023-08-27 19:59:26.867] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 3.5071 s; -----------------------------------------; size = 23930024; -----------------------------------------; | Loading contig offsets | Time = 66.098 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 15.687 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 157.98 ms; -----------------------------------------; size = 2092742871; Number of ones: 23930023; Number of ones per inventory item: 512; Inventory entries filled: 46739; -----------------------------------------; | Loading contig boundaries | Time = 2.8293 s; -----------------------------------------; size = 2092742871; -----------------------------------------; | Loading sequence | Time = 394.6 ms; -----------------------------------------; size = 1374842181; -----------------------------------------; | Loading positions | Time = 4.3258 s; -----------------------------------------; size = 2139249936; -----------------------------------------; | Loading reference sequence | Time = 408.65 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 48.085 ms; -----------------------------------------; Exception : [boost::filesystem::status: File na",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:10612,Load,Loading,10612,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['Load'],['Loading']
Performance,"nts will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 320.51 us; -----------------------------------------; [2024-05-03 15:10:04.136] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:6335,Load,Loading,6335,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['Load'],['Loading']
Performance,"nts will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 10.554 s; -----------------------------------------; size = 37302779; -----------------------------------------; | Loading contig offsets | Time = 91.707 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 21.463 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 725.65 ms; -----------------------------------------; size = 3781971583; Number of ones: 37302778; Number of ones per inventory item: 512; Inventory entries filled: 72857; -----------------------------------------; | Loading contig boundaries | Time = 5.6684 s; -----------------------------------------; size = 3781971583; -----------------------------------------; | Loading sequence | Time = 688.13 ms; -----------------------------------------; size = 2662888243; -----------------------------------------; | Loading positions | Time = 4.9343 s; -----------------------------------------; size = 3536939191; -----------------------------------------; | Loading reference sequence | Time = 681.27 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 21.142 ms; -----------------------------------------; [2024-11-01 05:14:22.991] [jointLog] [info] do",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:3258,Load,Loading,3258,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['Load'],['Loading']
Performance,"nvCov: 1044.2 normfactor: 295.235; [2018-07-26 11:25:31.135] [alevinLog] [info] Total 222(has 200 low confidence) barcodes; [2018-07-26 11:25:31.440] [alevinLog] [info] Done True Barcode Sampling; [2018-07-26 11:25:31.789] [alevinLog] [info] Done populating Z matrix; [2018-07-26 11:25:31.793] [alevinLog] [info] Done indexing Barcodes; [2018-07-26 11:25:31.793] [alevinLog] [info] Total Unique barcodes found: 10630133; [2018-07-26 11:25:31.793] [alevinLog] [info] Used Barcodes except Whitelist: 10603; [2018-07-26 11:25:31.938] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-26 11:25:31.939] [alevinLog] [info] parsing read library format; [2018-07-26 11:25:31.949] [jointLog] [info] There is 1 library.; [2018-07-26 11:25:32.331] [jointLog] [info] Loading Quasi index; [2018-07-26 11:25:32.331] [jointLog] [info] Loading 32-bit quasi index; [2018-07-26 11:25:32.357] [stderrLog] [info] Loading Suffix Array ; [2018-07-26 11:26:09.413] [stderrLog] [info] Loading Transcript Info ; [2018-07-26 11:26:10.896] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-26 11:26:11.159] [stderrLog] [info] There were 203027 set bits in the bit array; [2018-07-26 11:26:11.225] [stderrLog] [info] Computing transcript lengths; [2018-07-26 11:26:11.226] [stderrLog] [info] Waiting to finish loading hash; [2018-07-26 11:26:14.654] [stderrLog] [info] Done loading index; [2018-07-26 11:26:14.654] [jointLog] [info] done; [2018-07-26 11:26:14.654] [jointLog] [info] Index contained 203027 targets. Incorrect call for umi extractIncorrect call for umi extract; ```. I traced it back to AlevinUtils.cpp in the source files but could not make sense of it from there. The program will run completely on the same data and library if I change --dropseq to --Chromium, eventually outputting the following after processing the reads:. ```; [2018-07-24 10:56:20.712] [jointLog] [info] Computed 9968 rich equivalence classes for further processing; [2018-07-24 10:56:20.712] [jointLog]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/258:2958,Load,Loading,2958,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258,1,['Load'],['Loading']
Performance,"nvCov: 568.346 normfactor: 688.271; [2018-08-29 11:28:19.290] [alevinLog] [info] Total 3385(has 1000 low confidence) barcodes; [2018-08-29 11:28:19.297] [alevinLog] [info] Done True Barcode Sampling; [2018-08-29 11:28:19.433] [alevinLog] [info] Done populating Z matrix; [2018-08-29 11:28:19.437] [alevinLog] [info] Done indexing Barcodes; [2018-08-29 11:28:19.437] [alevinLog] [info] Total Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] Loading Transcript Info ; [2018-08-29 11:30:08.761] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-29 11:30:11.254] [stderrLog] [info] There were 135226 set bits in the bit array; [2018-08-29 11:30:11.311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:3499,Load,Loading,3499,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,1,['Load'],['Loading']
Performance,"o /results/RNA-Seq/Mice_A_batch2/salmon_out/logs; [2021-05-20 10:53:54.759] [jointLog] [info] setting maxHashResizeThreads to 20; [2021-05-20 10:53:54.760] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-20 10:53:54.760] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-20 10:53:54.760] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-20 10:53:54.760] [jointLog] [info] parsing read library format; [2021-05-20 10:53:54.760] [jointLog] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; ---------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:1903,Load,Loading,1903,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['Load'],['Loading']
Performance,"o] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivalence classes . [2023-03-17 07:46:19.488] [jointLog] [warning] 0.22783% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-17 07:46:19.488] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 0; [2023-03-17 07:46:19.488] [jointLog] [info] Mapping rate = 80.5964%. [2023-03-17 07:46:19.488] [jointLog] [info] finished quantifyLibrary(); [2023-03-17 07:46:19.489] [jointLog] [info] Starting optimizer; [2023-03-17 07:46:20.246] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-03-17 07:46:20.304] [jointLog] [info] iteration = 0 | max rel diff. = 431.329; [2023-03-17 07:46:25.793] [jointLog] [info] iteration = 100 | max rel diff. = 0.170791; [2023-03-17 07:46:31.221] [jointLog] [info] iteration = 200 | max rel diff. = 0.0893134; [2023-03-17 07:46:36.693] [jointLog] [info] iteration = 300 | max rel diff. = 0.0353826; [2023-03-17 07:46:42.208] [jointLog] [info] iteration = 400 | max rel diff. = 0.0328108; [2023-03-17 07:46:47.631] [jointLog] [info] iteration = 500 | max rel diff. = 0.0266592; [2023-03-17 07:46:53.042] [jointLog] [info] iteration = 600 | max rel diff. = 0.0419357; [2023-03-17 07:46:58.543] [jointLog] [info] iteration = 700 | max rel diff. = 0.0160998; [2023-03-17 07:47:04.035] [jointLog] [info] iteration = 800 | max rel diff. = 0.0122848; [2023-03-17 07:47:09.471] [jointLog] [info] iteration = 900 | max rel diff. = 0.0122846. ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:9162,optimiz,optimizer,9162,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['optimiz'],['optimizer']
Performance,"oading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 10:58:22.295] [jointLog] [info] Starting optimizer; [2017-10-25 10:58:22.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 0 | max rel diff. = 0.455425; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 50 | max rel diff. = -1.79769e+308; [2017-10-25 10:58:22.308] [jointLog] [error] Total alpha weight was too small! Make sure you ran salmon correclty.; [2017-10-25 10:58:22.308] [jointLog] [error] The optimization algorithm failed. This is likely the result of bad input (or a bug). If you cannot track down the cause, please report this issue on GitHub. I had a look at my fastq and all seems normal (?):. @HF1_23952:5:1101:9161:20709/1; CTCACAAGAGTGTGATCCAAGTCGGCCGTCGTCTTCTGCA; +; AAFFFJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ; @HF1_23952:5:1101:9343:20814/1; CTCACAAGAGTGTGATCCAAGTCGGCCGTCGTCTTCTGCA; +. Thank you for your help,; Rute",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/167:2141,optimiz,optimizer,2141,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167,2,['optimiz'],"['optimization', 'optimizer']"
Performance,"oading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size: 6442721444>6442720932; ...; ```. The index does not finish loading, and so salmon does not enter read quantification routines. **To Reproduce**. * Which version of salmon was used? 1.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Github release tarball; * Which reference (e.g. transcriptome) was used?; Gencode v32, with additional elements representing genic introns and intergenic spaces.; * Which read files were used?; NCBI SRA run accession GSM2392582; * Which which program options were used?; --no-version-check --libType ISR --threads 4 --seqBias --gcBias --useVBOpt. **Expected behavior**; I expected index loading to complete successfully.; **Desktop (please complete the following information):**; - OS: CentOS6. **Additional context**; I've uploaded the index file archive [here](https://www.icloud.com/iclouddrive/00DWWhkSucg2BTWLuFswSHwvQ#rapmap_issue_8_index) and the transcripts fasta file [here](https://www.icloud.com/iclouddrive/0oCdFG64TJe0IlvkYyIUZRfSQ#rapmap_issue_8_transcripts).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/463:2583,load,loading,2583,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463,2,['load'],['loading']
Performance,"oblematic sample where the knee autodetection fails (way too high cell number). So I created a whitelist of the 5000 most frequent entries of the filtered_cb_frequency.txt. It seems to work as expected, but the quants_mat.csv is not created, which I need for further downstream analysis (Seurat). The quant_mat.gz is created though, is there a way to manually create a .csv from this file (it seems to be binary).; Thanks. P.S.: The alevin logs seem to contain some non-standard characters when the number of ""Barcodes used"" should be printed (maybe because of the colour highlighting?). **Expected behavior**; quants_mat.csv of the whitelisted cells should be created. **Logs**; ```; [2019-05-17 07:28:11.279] [alevinLog] [info] Processing barcodes files (if Present) . ; [2019-05-17 07:39:15.712] [alevinLog] [info] Done barcode density calculation.; [2019-05-17 07:39:15.712] [alevinLog] [info] # Barcodes Used: [32m346967519[0m / [31m347069857[0m.; [2019-05-17 07:39:15.731] [alevinLog] [info] Done importing white-list Barcodes; [2019-05-17 07:39:15.732] [alevinLog] [info] Total 4000 white-listed Barcodes; [2019-05-17 07:39:16.050] [alevinLog] [info] Done populating Z matrix; [2019-05-17 07:39:16.112] [alevinLog] [info] Done indexing Barcodes; [2019-05-17 07:39:16.112] [alevinLog] [info] Total Unique barcodes found: 3968995; [2019-05-17 07:39:16.112] [alevinLog] [info] Used Barcodes except Whitelist: 80709; [2019-05-17 07:39:16.858] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-05-17 07:39:16.868] [alevinLog] [info] parsing read library format; [2019-05-17 08:05:24.319] [alevinLog] [info] Starting optimizer. [2019-05-17 08:06:06.627] [alevinLog] [info] Total 14429442.00 UMI after deduplicating.; [2019-05-17 08:06:06.627] [alevinLog] [info] Total 14027858 BiDirected Edges.; [2019-05-17 08:06:06.627] [alevinLog] [info] Total 794402 UniDirected Edges.; [2019-05-17 08:06:06.689] [alevinLog] [info] Finished optimizer; ```. **Desktop:**; - OS: Ubuntu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/363:2103,optimiz,optimizer,2103,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/363,2,['optimiz'],['optimizer']
Performance,"odeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x000000",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:12190,optimiz,optimized,12190,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['optimiz'],['optimized']
Performance,"odes files (if Present). [2019-01-28 21:07:56.106] [alevinLog] [info] Done barcode density calculation.; [2019-01-28 21:07:56.106] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-28 21:07:57.808] [alevinLog] [info] Done importing white-list Barcodes; [2019-01-28 21:07:58.273] [alevinLog] [warning] Skipping 290359 Barcodes with 0 reads; Assuming this is the required behavior.; [2019-01-28 21:07:58.517] [alevinLog] [info] Total 446921 white-listed Barcodes; [2019-01-28 21:09:02.029] [alevinLog] [info] Done populating Z matrix; [2019-01-28 21:09:02.331] [alevinLog] [info] Done indexing Barcodes; [2019-01-28 21:09:02.331] [alevinLog] [info] Total Unique barcodes found: 3214859; [2019-01-28 21:09:02.331] [alevinLog] [info] Used Barcodes except Whitelist: 168781; [2019-01-28 21:09:02.559] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-01-28 21:09:02.559] [alevinLog] [info] parsing read library format; [2019-01-28 21:40:44.514] [alevinLog] [info] Starting optimizer. [2019-01-28 22:05:50.958] [alevinLog] [info] Total 39006157.00 UMI after deduplicating.; [2019-01-28 22:05:50.960] [alevinLog] [warning] Skipped 160108 barcodes due to No mapped read; [2019-01-28 22:11:23.270] [alevinLog] [info] Finished optimizer. [2019-01-28 21:40:30.445] [jointLog] [info] Computed 64,654 rich equivalence classes for further processing; [2019-01-28 21:40:30.445] [jointLog] [info] Counted 107,408,832 total reads in the equivalence classes; [2019-01-28 21:40:30.446] [jointLog] [warning] Found 39484 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-01-28 21:40:30.446] [jointLog] [info] Mapping rate = 37.2969%. [2019-01-28 21:40:30.446] [jointLog] [info] finished quantifyLibrary(); [2019-01-28 21:40:44.514] [alevinLog] [info] Starting optimizer. Analyzed 446921 cells (100% of all).; [2019-01-28 22:05:50.958] [alevinLog] [info] Total 39006157.00 UMI after deduplicating.; [2019-01-28 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:7969,optimiz,optimizer,7969,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['optimiz'],['optimizer']
Performance,"of the parameters in the quant.sf parameters across all genes and across samples.; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ### For version 0.8. This is similar across all samples:; Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250 28.8836 527.392; LOC_Os01g01010.2 2218 250 1.84062 33.6083; LOC_Os01g01019.1 1127 250 0.0547668 1; LOC_Os01g01030.1 2464 250 4.43611 81; LOC_Os01g01040.4 1524 250 0.941635 17.1935; LOC_Os01g01040.1 2508 250 11.5632 211.135; LOC_Os01g01040.2 2482 250 8.02081 146.454; LOC_Os01g01040.3 2583 250 8.55554 156.218; LOC_Os01g01050.1 2039 250 17.2333 314.667. ### The counted total reads, observed total fragments, and the mapping rate is similar for all samples for both the raw-dat and the trimmed reads.; [2019-03-03 06:29:53.168] [jointLog] [info] parsing read library format; [2019-03-03 06:29:53.168] [jointLog] [info] There is 1 library.; [2019-03-03 06:29:53.224] [jointLog] [info] Loading Quasi index; [2019-03-03 06:29:53.224] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 06:30:02.239] [jointLog] [info] done; [2019-03-03 06:30:02.239] [jointLog] [info] Index contained 66153 targets; [2019-03-03 06:30:03.414] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 06:31:37.523] [fileLog] [info]; At end of round 0; ==================; Observed 18861231 total fragments (18861231 in most recent round). [2019-03-03 06:31:37.522] [jointLog] [info] Computed 48502 rich equivalence classes for further processing; [2019-03-03 06:31:37.522] [jointLog] [info] Counted 17308442 total reads in the equivalence classes; [2019-03-03 06:31:37.528] [jointLog] [info] Mapping rate = 91.7673%. [2019-03-03 06:31:37.528] [jointLog] [info] finished quantifyLibrary(). ### For version 0.12. This is similar across all samples:. Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250.000 30.539503 527.399; LOC_Os01g01010.2 2218 250.000 1.714089 29.6",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:6011,Load,Loading,6011,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['Load'],['Loading']
Performance,"og] [info] Knee found left boundary at 9447; [2018-06-30 22:10:52.498] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLog] [info] Done populating Z matrix; [2018-06-30 22:10:53.103] [alevinLog] [info] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] Loading Transcript Info; [2018-06-30 22:10:53.396] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-30 22:10:53.402] [stderrLog] [info] There were 36541 set bits in the bit array; [2018-06-30 22:10:53.405] [stderrLog] [info] Computing transcript lengths; [2018-06-30 22:10:53.405] [stderrLog] [info] Waiting to finish loading hash; [2018-06-30 22:10:54.783] [stderrLog] [info] Done loading index; [2018-06-30 22:10:54.783] [jointLog] [info] done; [2018-06-30 22:10:54.783] [jointLog] [info] Index contained 36541 targets. processed 17 Million fragments; hits: 18237834, hits per frag: 1.04278[2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.50% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:2549,Load,Loading,2549,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,1,['Load'],['Loading']
Performance,"og] [info] There is 1 library.; [2021-05-20 10:53:54.892] [jointLog] [info] Loading pufferfish index; [2021-05-20 10:53:54.901] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information.; [2021-05-20 10:53:54.901] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 443.9 ms; -----------------------------------------; size = 1248328; -----------------------------------------; | Loading contig offsets | Time = 23.968 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 5.7496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 86.515 ms; -----------------------------------------; size = 115684262; Number of ones: 1248327; Number of ones per inventory item: 512; Inventory entries filled: 2439; -----------------------------------------; | Loading contig boundaries | Time = 277.94 ms; -----------------------------------------; size = 115684262; -----------------------------------------; | Loading sequence | Time = 56.72 ms; -----------------------------------------; size = 78234452; -----------------------------------------; | Loading positions | Time = 288.6 ms; -----------------------------------------; size = 128312800; -----------------------------------------; | Loading reference sequence | Time = 62.735 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 650 us; -----------------------------------------; [2021-05-20 10:53:56.156] [jointLog] [info] done; [2021-05-20 10:53:56.156] [jointLog] [info] Index contained 44,026 targets. [2021-05-20 10:53:58.080] [jointLog] [info] Number of decoys : 0; [2021-05-20 10:54:28.729] [jointLog] [info] Automati",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661:2632,Load,Loading,2632,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661,1,['Load'],['Loading']
Performance,"ogram ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog] [info] Loading Suffix Array ; [2017-03-15 12:19:05.982] [stderrLog] [info] Loading Transcript Info ; Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Index building log:. ```; Version Info: This is the most recent version of Salmon.; index ["" ./storage/tmm.idx""] did not previously exist . . . creating it; [2017-03-14 12:10:34.791] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2017-03-14 12:10:36.701] [jointLog] [warning] Entry with header [734bf21190b56e1ed4c8d7093c340df1fc6266bd80ed60ebc0ae0f4e9343c3a4], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 420000 transcripts[2017-03-14 12:10:56.697] [jointLog] [warning] Entry with header [0c9d699aa70741734115dadd8175a44a013ad4122a3af7952e3b38e9593da047], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 11130000 transcripts[2017-03-14 12:20:15.975] [jointLog] [warning] Entry with h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/129:2077,Load,Loading,2077,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129,1,['Load'],['Loading']
Performance,"ogs; [2018-05-31 16:54:42.310] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-05-31 16:54:42.310] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2018-05-31 16:54:42.310] [jointLog] [info] parsing read library format; [2018-05-31 16:54:42.310] [jointLog] [info] There is 1 library.; [2018-05-31 16:54:42.480] [jointLog] [info] Loading Quasi index; [2018-05-31 16:54:42.501] [jointLog] [info] Loading 32-bit quasi index; [2018-05-31 16:54:42.501] [stderrLog] [info] Loading Suffix Array; [2018-05-31 16:55:01.293] [stderrLog] [info] Loading Transcript Info; [2018-05-31 16:55:06.428] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-05-31 16:55:07.107] [stderrLog] [info] There were 310732 set bits in the bit array; [2018-05-31 16:55:07.158] [stderrLog] [info] Computing transcript lengths; [2018-05-31 16:55:07.159] [stderrLog] [info] Waiting to finish loading hash; [2018-05-31 16:55:25.973] [jointLog] [info] done; [2018-05-31 16:55:25.973] [jointLog] [info] Index contained 310732 targets; [2018-05-31 16:55:25.973] [stderrLog] [info] Done loading index. processed 67500000 fragmentsointLog] [info] Automatically detected most likely library type as IU; hits: 224580543, hits per frag: 3.35031[2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.84% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batch with a maximum of 0.88% zero probability fragments; [2018-05-31 17:08:09.486] [jointLog] [info] Thread saw mini-batc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229:1704,load,loading,1704,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229,1,['load'],['loading']
Performance,ointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.497 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 192.67 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.1496 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.0304 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.3668 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.5058 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 22.571 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 2.1723 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 2.8044 ms; -----------------------------------------. [2023-11-30 09:37:51.026] [jointLog] [info] done; [2023-11-30 09:37:51.104] [jointLog] [info] Index contained 253166 targets; [2023-11-30 09:37:51.166] [jointLog] [info] Number of decoys : 194; [2023-11-30 09:37:51.166] [jointLog] [info] First decoy index : 252924 ; [2023-11-30 09:37:54.100] [jointLog] [info] Automatically detected most likely library type as ISR. [2023-11-30 09:38:33.382] [jointLog] [info] Thread saw mini-batch with a maximum of 3.76% zero probability fragments; [2023-11-30 09:38:33.406] [jointLog] [info] Computed 12939 rich equivalence classes for furth,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:7290,Load,Loading,7290,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"ointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 17.538 s; -----------------------------------------; size = 37303070; -----------------------------------------; | Loading contig offsets | Time = 413.98 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.3736 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:4165,Load,Loading,4165,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['Load'],['Loading']
Performance,"ointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 3.165 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 75.428 ms; -----------------------------------------. [2021-09-20 16:22:03.730] [jointLog] [info] done; [2021-09-20 16:22:03.778] [jointLog] [info] Index contained 116,612 targets; [2021-09-20 16:22:03.892] [jointLog] [info] Number of decoys : 66; [2021-09-20 16:22:03.892] [jointLog] [info] First decoy index : 116,507 ; [2021-09-20 16:22:04.460] [jointLog] [info] Automatically detected most likely library type as U; processed 37,000,000 fragments; hits: 117,167,504; hits per frag: 3.16785. [2021-09-20 16:24:48.269] [jointLog] [info] Computed 309,226 rich equivalence classes for further processing; [2021-09-20 16:24:48.269] [j",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:5492,Load,Loading,5492,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"ointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 23.321 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 378.39 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.5966 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 5.4807 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.7705 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.7757 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 31.703 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading reference sequence | Time = 2.4349 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 5.1367 ms; -----------------------------------------; [2021-09-20 16:31:04.631] [jointLog] [info] done; [2021-09-20 16:31:04.632] [jointLog] [info] Index contained 116,612 targets; Killed. ```. However, if I run it only with --validateMappings, it works fine and generates the output quant.sf file. ```; $ salmon quant -l A -i /mnt/hgfs/Data/reference_data/mm10/default -r /mnt/hgfs/Data/raw_data/S01_S1_R1_001.fastq.gz -o out -p 6 --validateMappings; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ libType ] => { A }; ### [ index ] =>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:2528,Load,Loading,2528,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"ok, this is not really a bug but I think it needs attention. i am using anaconda environment for many tools and keep it updated as much as possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/286:195,bottleneck,bottleneck,195,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286,1,['bottleneck'],['bottleneck']
Performance,"ome a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivalence classes . [2023-03-17 07:46:19.488] [jointLog] [warning] 0.22783% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 20. [2023-03-17 07:46:19.488] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings : 0; [2023-03-17 07:46:19.488] [jointLog] [info] Mapping rate = 80.5964%. [2023-03-17 07:46:19.488] [jointLog] [info] finished quantifyLibrary(",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:8102,load,loading,8102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['load'],['loading']
Performance,"on creates the appropriate offset for you to perform gene-level differential expression; - The second method is to use the tximport argument countsFromAbundance=""lengthScaledTPM"" or ""scaledTPM"", and then to use the gene-level count matrix txi$counts directly as you would a regular count matrix with these software. Let’s call this method “bias corrected counts without an offset”. Now, if I were to use the 2nd bullet as guide, shouldn't txi be generated this way for use with DESeq -- see the addition of `countsFromAbundance = ""lengthScaledTPM""` to tximport line. ```; files <- file.path(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene, countsFromAbundance = ""lengthScaledTPM""); head(txi.salmon$counts); write.csv(as.data.frame(txi.salmon$counts), file = ""tx2gene_NumReads.csv""); ```. And then use the tx2gene_NumReads.csv with DESeqDataSetFromMatrix, where the countData comes after reading in tx2gene_NumReads.csv upstream in the code. **Note**: I am using DESeqDataSetFromMatrix here and not DESeqDataSetFromTximport as I have used tximport with countsFromAbundance=lengthScaledTPM. ```; library(""DESeq2""); dds <- DESeqDataSetFromMatrix(countData = cts,; colData = coldata,; design = ~ condition); dds; ```. I also saw these 2 links - https://hbctraining.github.io/DGE_workshop_salmon/lessons/07_DGE_summarizing_workflow.html and https://hbctraining.github.io/DGE_workshop_salmon/lessons/01_DGE_setup_and_overview.html. - pseudocounts generated by Salmon are represented as normalized TPM (transcripts per million) counts and map to transcripts. These need to be converted into non-normalized count estimates for performing DESeq2 analysis. To use DESeq2 we also need to collapse our abundance estimates from the transcript level to the gene-level.; - note - the 1st link uses DESeqDataSetFromTximport after using tximport to get txi with countsFromAbundance=lengthScaledTPM. Thanks in advance,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/581:3655,perform,performing,3655,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581,1,['perform'],['performing']
Performance,"on skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLog] [info] Done populating Z matrix; [2018-06-30 22:10:53.103] [alevinLog] [info] Done indexing Barcodes; [2018-06-30 22:10:53.104] [alevinLog] [info] Total Unique barcodes found: 263650; [2018-06-30 22:10:53.104] [alevinLog] [info] Used Barcodes except Whitelist: 5556; [2018-06-30 22:10:53.248] [jointLog] [info] There is 1 library.; [2018-06-30 22:10:53.248] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-30 22:10:53.248] [alevinLog] [info] parsing read library format; [2018-06-30 22:10:53.308] [jointLog] [info] Loading Quasi index; [2018-06-30 22:10:53.308] [jointLog] [info] Loading 32-bit quasi index; [2018-06-30 22:10:53.308] [stderrLog] [info] Loading Suffix Array; [2018-06-30 22:10:53.375] [stderrLog] [info] Loading Transcript Info; [2018-06-30 22:10:53.396] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-30 22:10:53.402] [stderrLog] [info] There were 36541 set bits in the bit array; [2018-06-30 22:10:53.405] [stderrLog] [info] Computing transcript lengths; [2018-06-30 22:10:53.405] [stderrLog] [info] Waiting to finish loading hash; [2018-06-30 22:10:54.783] [stderrLog] [info] Done loading index; [2018-06-30 22:10:54.783] [jointLog] [info] done; [2018-06-30 22:10:54.783] [jointLog] [info] Index contained 36541 targets. processed 17 Million fragments; hits: 18237834, hits per frag: 1.04278[2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.50% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.30% zero probabi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:2687,Load,Loading,2687,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,1,['Load'],['Loading']
Performance,"on-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence classes; [2017-08-02 14:41:46.432] [jointLog] [warning] Only 98301 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-08-02 14:41:46.432] [jointLog] [info] Mapping rate = 42.6252%. [2017-08-02 14:41:46.432] [jointLog] [info] finished quantifyLibrary(); [2017-08-02 14:41:46.446] [jointLog] [info] Starting optimizer; [2017-08-02 14:41:46.508] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-08-02 14:41:46.510] [jointLog] [info] iteration = 0 | max rel diff. = 2.50175; [2017-08-02 14:41:46.521] [jointLog] [info] iteratio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:1664,load,loading,1664,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,1,['load'],['loading']
Performance,onvenience.; ###; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag: 5.08859[A. [32mprocessed[31m 1000002 [32mfragments[0m; hits: 4422312; hits per frag: 4.78092[A. [32mprocessed[31m 1500006 [32mfragments[0m; hits: 6635818; hits per frag: 4.69843,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:24047,Load,Loading,24047,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['Load'],['Loading']
Performance,"or below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2023-03-17 07:40:15.733] [jointLog] [info] parsing read library format; [2023-03-17 07:40:15.733] [jointLog] [info] There is 1 library.; [2023-03-17 07:40:15.882] [jointLog] [info] Loading Quasi index; [2023-03-17 07:40:15.882] [jointLog] [info] Loading 64-bit quasi index; [2023-03-17 07:40:15.882] [stderrLog] [info] Loading Suffix Array ; [2023-03-17 07:42:06.971] [stderrLog] [info] Loading Transcript Info ; [2023-03-17 07:42:17.580] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-03-17 07:42:20.101] [stderrLog] [info] There were 777288 set bits in the bit array; [2023-03-17 07:42:20.887] [stderrLog] [info] Computing transcript lengths; [2023-03-17 07:42:20.892] [stderrLog] [info] Waiting to finish loading hash; [2023-03-17 07:44:44.131] [stderrLog] [info] Done loading index; [2023-03-17 07:44:44.131] [jointLog] [info] done; [2023-03-17 07:44:44.131] [jointLog] [info] Index contained 777288 targets. processed 40500000 fragmentsointLog] [info] Automatically detected most likely library type as U; hits: 157805072; hits per frag: 3.96148. [2023-03-17 07:46:19.284] [jointLog] [info] Computed 1819655 rich equivalence classes for further processing; [2023-03-17 07:46:19.284] [jointLog] [info] Counted 32670107 total reads in the equivalence classes . [2023-03-17 07:46:19.488] [jointLog] [warning] 0.22783% of fragments were shorter than the k used to build the index (31).; If",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:7708,Load,Loading,7708,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['Load'],['Loading']
Performance,"or**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /us",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:3598,Perform,Performing,3598,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['Perform'],['Performing']
Performance,"oss samples.; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ### For version 0.8. This is similar across all samples:; Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250 28.8836 527.392; LOC_Os01g01010.2 2218 250 1.84062 33.6083; LOC_Os01g01019.1 1127 250 0.0547668 1; LOC_Os01g01030.1 2464 250 4.43611 81; LOC_Os01g01040.4 1524 250 0.941635 17.1935; LOC_Os01g01040.1 2508 250 11.5632 211.135; LOC_Os01g01040.2 2482 250 8.02081 146.454; LOC_Os01g01040.3 2583 250 8.55554 156.218; LOC_Os01g01050.1 2039 250 17.2333 314.667. ### The counted total reads, observed total fragments, and the mapping rate is similar for all samples for both the raw-dat and the trimmed reads.; [2019-03-03 06:29:53.168] [jointLog] [info] parsing read library format; [2019-03-03 06:29:53.168] [jointLog] [info] There is 1 library.; [2019-03-03 06:29:53.224] [jointLog] [info] Loading Quasi index; [2019-03-03 06:29:53.224] [jointLog] [info] Loading 32-bit quasi index; [2019-03-03 06:30:02.239] [jointLog] [info] done; [2019-03-03 06:30:02.239] [jointLog] [info] Index contained 66153 targets; [2019-03-03 06:30:03.414] [jointLog] [info] Automatically detected most likely library type as MU; [2019-03-03 06:31:37.523] [fileLog] [info]; At end of round 0; ==================; Observed 18861231 total fragments (18861231 in most recent round). [2019-03-03 06:31:37.522] [jointLog] [info] Computed 48502 rich equivalence classes for further processing; [2019-03-03 06:31:37.522] [jointLog] [info] Counted 17308442 total reads in the equivalence classes; [2019-03-03 06:31:37.528] [jointLog] [info] Mapping rate = 91.7673%. [2019-03-03 06:31:37.528] [jointLog] [info] finished quantifyLibrary(). ### For version 0.12. This is similar across all samples:. Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250.000 30.539503 527.399; LOC_Os01g01010.2 2218 250.000 1.714089 29.601; LOC_Os01g01019.1 1127 250.000 0.057906 1.000; LOC_Os01g01030.1 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:6076,Load,Loading,6076,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['Load'],['Loading']
Performance,"otal Unique barcodes found: 215368; [2018-08-29 11:28:19.437] [alevinLog] [info] Used Barcodes except Whitelist: 8563; [2018-08-29 11:28:19.464] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-08-29 11:28:19.477] [alevinLog] [info] parsing read library format; [2018-08-29 11:28:19.477] [jointLog] [info] There is 1 library.; [2018-08-29 11:28:27.306] [stderrLog] [info] Loading Suffix Array ; [2018-08-29 11:28:27.290] [jointLog] [info] Loading Quasi index; [2018-08-29 11:28:27.304] [jointLog] [info] Loading 32-bit quasi index; [2018-08-29 11:29:47.334] [stderrLog] [info] Loading Transcript Info ; [2018-08-29 11:30:08.761] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-29 11:30:11.254] [stderrLog] [info] There were 135226 set bits in the bit array; [2018-08-29 11:30:11.311] [stderrLog] [info] Computing transcript lengths; [2018-08-29 11:30:11.311] [stderrLog] [info] Waiting to finish loading hash; [2018-08-29 11:30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-29 11:33:18.039] [jointLog] [info] Mapping rate = 43.5974%. [2018-08-29 11:33:18.039] [jointLog] [info] finished quantifyLibrary(); Analyzed 14 cells (0% of all).vinLog] [info] Starting optimizer; ......; ......; Analyzed 544 cells (16% of all). ERROR: cell doesn't have any read count; ------------------------------------------------------------; Sender: LSF Syst",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:3893,load,loading,3893,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,1,['load'],['loading']
Performance,"otal Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read library format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping rate = 53.3587%. [2018-11-29 22:40:56.510] [jointLog] [info] finished quantifyLibrary(); [2018-11-29 22:41:01.682] [alevinLog] [info] Starting optimizer. Analyzed 12346 cells (100% of all).; Skipped Barcodes are from High Confidence Region; Should not happen%. **Desktop (please complete the following information):**; - OS: macOS; - Version: 10.14.1. **Additional context**; This failure comes when analyzing data from the new 10X v3 chemistry. Initially, I thought that was the issue, but our analysis worked when using th",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/324:2723,load,loading,2723,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324,1,['load'],['loading']
Performance,"otal Unique barcodes found: 561683; [2019-06-23 18:11:52.507] [alevinLog] [info] Used Barcodes except Whitelist: 104; [2019-06-23 18:11:53.211] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-23 18:11:53.224] [alevinLog] [info] parsing read library format; [2019-06-23 18:11:53.484] [stderrLog] [info] Loading Suffix Array ; [2019-06-23 18:11:53.225] [jointLog] [info] There is 1 library.; [2019-06-23 18:11:53.482] [jointLog] [info] Loading Quasi index; [2019-06-23 18:11:53.483] [jointLog] [info] Loading 32-bit quasi index; [2019-06-23 18:11:56.286] [stderrLog] [info] Loading Transcript Info ; [2019-06-23 18:11:57.157] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-23 18:11:57.409] [stderrLog] [info] There were 184,367 set bits in the bit array; [2019-06-23 18:11:57.434] [stderrLog] [info] Computing transcript lengths; [2019-06-23 18:11:57.434] [stderrLog] [info] Waiting to finish loading hash; [2019-06-23 18:12:09.374] [stderrLog] [info] Done loading index; [2019-06-23 18:12:09.374] [jointLog] [info] done; [2019-06-23 18:12:09.374] [jointLog] [info] Index contained 184,367 targets. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; ...; processed 106 Million fragments; processed 106 Million fragments; processed 107 Million fragments; hits: 26644540, hits per frag: 0.249194. [2019-06-23 18:14:43.418] [jointLog] [info] Computed 90,673 rich equivalence classes for further processing; [2019-06-23 18:14:43.418] [jointLog] [info] Counted 5,043,781 total reads in the equivalence classes ; [2019-06-23 18:14:43.419] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2019-06-23 18:14:43.419] [jointLog] [warning] Found 494 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2019-06-23 18:14:43.419] [jointLog] [info] Mapping rate = 4.69856%. [2019-06-23 18:14:43.419] [jointLog] [info] finished qua",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:5678,load,loading,5678,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['load'],['loading']
Performance,"output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading refe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:6070,Load,Loading,6070,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['Load'],['Loading']
Performance,"ow.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. Desktop (please complete the following information):. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. Additional context; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/318:2087,Load,Loading,2087,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318,1,['Load'],['Loading']
Performance,"patibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 12:29:32.343] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-08-20 12:29:32.343] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 12:29:32.343] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-08-20 12:29:32.343] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 12:29:32.343] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-08-20 13:19:51.055] [jointLog] [info] There is 1 library.; [2021-08-20 13:19:51.124] [jointLog] [info] Loading pufferfish index; [2021-08-20 13:19:51.125] [jointLog] [info] Loading dense pufferfish index.; [2021-08-20 13:19:53.706] [jointLog] [info] done; [2021-08-20 13:19:53.706] [jointLog] [info] Index contained 231,288 targets; [2021-08-20 13:19:53.777] [jointLog] [info] Number of decoys : 0; [2021-08-20 16:03:00.061] [jointLog] [info] Computed 307,354 rich equivalence classes for further processing; [2021-08-20 16:03:00.061] [jointLog] [info] Counted 46,363,434 total reads in the equivalence classes ; [2021-08-20 16:03:00.062] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2021-08-20 16:03:00.062] [jointLog] [warning] Found 149640 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2021-08-20 16:03:00.062] [jointLog] [info] Mapping rate = 4.01974%. [2021-08-20 16:03:00.062] [jointLog] [info] finished quantifyLibrary(); ```. And here is my `lib_format_counts.json`, which has 0s for the diff",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699:4080,Load,Loading,4080,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699,1,['Load'],['Loading']
Performance,"pc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_INSTALL_PREFIX:PATH=/gpfs/software/salmon/xeonmax/gcc13.2.0/1.10.3. make clean; make -j 25; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? **1.10.3**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **compiled**. **Expected behavior**; A successful build. **Desktop (please complete the following information):**; - OS: **Rocky Linux 9.4**; - Version: **Linux xm013 5.14.0-427.26.1.el9_4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:2950,load,load,2950,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['load'],['load']
Performance,populating Z matrix; [2021-04-09 12:16:37.892] [alevinLog] [info] Total 0 CB got sequence corrected; [2021-04-09 12:16:37.892] [alevinLog] [info] Done indexing Barcodes; [2021-04-09 12:16:37.892] [alevinLog] [info] Total Unique barcodes found: 822; [2021-04-09 12:16:37.892] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2021-04-09 12:16:37.914] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2021-04-09 12:16:37.914] [alevinLog] [info] parsing read library format; [2021-04-09 12:16:37.914] [jointLog] [info] There is 1 library.; [2021-04-09 12:16:38.027] [jointLog] [info] Loading pufferfish index; [2021-04-09 12:16:38.027] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 1.984 s; -----------------------------------------; size = 1802892; -----------------------------------------; | Loading contig offsets | Time = 8.5565 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 195.36 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 114.13 ms; -----------------------------------------; size = 191273074; Number of ones: 1802891; Number of ones per inventory item: 512; Inventory entries filled: 3522; -----------------------------------------; | Loading contig boundaries | Time = 572.65 ms; -----------------------------------------; size = 191273074; -----------------------------------------; | Loading sequence | Time = 61.761 ms; -----------------------------------------; size = 137186344; -----------------------------------------; | Loading positions | Time = 644.4 ms; -----------------------------------------; size = 476926644; -----------------------------------------; | Loading reference sequence | Time = 240.84 ms; -----------------------------------------; -----------------------------------------; | Loading reference accu,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:4519,Load,Loading,4519,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['Load'],['Loading']
Performance,"pp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:13324,optimiz,optimized,13324,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['optimiz'],['optimized']
Performance,"ption_ptr::exception_ptr&)#1}>(unsigned long, unsigned long, cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_status cuckoohash_map<std::__cxx11::basic_stringing<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >(unsigned long)::{lambda(unsigned long, unsigned long, std::__exception_ptr::exception_ptr&)#1}) (this=this@entry=0x7fffffffc520, start=34816, start@entry=0, end=65536, func=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1756; #12 0x00000000007a69ac in cuckoo_fast_double<std::integral_constant<bool, false>, std::integral_constant<bool, true> >; (current_hp=<optimized out>, this=0x7fffffffc520) at /u/user/tmp/salmon/include/cuckoohash_map.hh:1583; #13 cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::cuckoo_insert_loop<std::integral_constant<bool, false>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > (this=this@entry=0x7fffffffc520, hv=..., b=..., key=...); at /u/user/tmp/salmon/include/cuckoohash_map.hh:1086; #14 0x00000000007a8540 in uprase_fn<std::__cxx11::basic_string<char>&, cuckoohash_map<Key, T, Hash, KeyEqual, Allocator, SLOT_PER_BUCKET>::upsert(K&&, F, Args&& ...) [with K = std::__cxx11::basic_string<char>&; F = densityCalculator(single_parser*, AlevinOp",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:16351,optimiz,optimized,16351,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['optimiz'],['optimized']
Performance,"put. ```; $ salmon quant \; > -i /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa \; > -l IU \; > -1 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.84",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/64:1248,Load,Loading,1248,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64,1,['Load'],['Loading']
Performance,"qBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/logs; [2020-05-29 20:14:24.283] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-05-29 20:14:24.283] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-29 20:14:24.283] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-05-29 20:14:24.283] [jointLog] [info] parsing read library format; [2020-05-29 20:14:24.283] [jointLog] [info] There is 1 library.; [2020-05-29 20:14:24.341] [jointLog] [info] Loading pufferfish index; [2020-05-29 20:14:24.342] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 41.693 ms; -----------------------------------------; size = 357712; -----------------------------------------; | Loading contig offsets | Time = 657 us; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 202.87 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 16.335 ms; -----------------------------------------; size = 64786639; Number of ones: 357711; Number of ones per inventory item: 512; Inventory entries filled: 699; -----------------------------------------; | Loading contig boundaries | Time = 154.69 ms; -----------------------------------------; size = 64786639; -----------------------------------------; | Loading sequence | Time = 6.3275 ms; -----------------------------------------; size = 54055309; ---------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:2799,Load,Loading,2799,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,1,['Load'],['Loading']
Performance,"r barcode and UMI tags in the alevin generated BAM/SAM (with the `--writeMappings` flag). We have been testing this out, and have been able to access all this information by parsing through the SAM file. However in the end our plan to use this with [Vireo](https://vireosnp.readthedocs.io/en/latest/index.html) and [cellSNP](https://github.com/single-cell-genetics/cellSNP) for genetic demultiplexing of samples didn't really work out, mainly because `alevin` generates a transcriptomic BAM, and `cellSNP` expects a genomic BAM and VCF. I tried a few different options for getting this to work, including (i) attempting to convert to a genomic BAM using [sam-xlate](https://github.com/mozack/ubu/wiki) (which didn't seem to work because `sam-xlate` is designed to convert in the other direction), and (ii) converting the VCF to transcriptomic coordinates, as suggested [here](https://github.com/single-cell-genetics/cellSNP/issues/14) by the `Vireo`/`cellSNP` authors (the VCF conversion seemed to work, but `cellSNP` still didn't match it to the BAM properly). For now, I think we are going to go back to using `Cell Ranger` in our pipeline, since this did work with `Vireo`/`cellSNP`, although was of course much slower than `alevin` and has issues with multi-mapping reads. If you have any other ideas please let me know too. However I also wanted to suggest that if there is any interest on your end in developing some sort of conversion tool (transcriptomic BAM -> genomic BAM) for `alevin` outputs, then I think this would be super useful for people, especially if these genetic demultiplexing tools become more widely used. (We have been getting very good demultiplexing performance with `Cell Ranger` + `Vireo`/`cellSNP`, and are planning to release some of our code as a small `Snakemake` pipeline for others to use, so if it were somehow possible to update this to use `alevin` in the future we would be very interested in this.). Thanks again for your help and previous responses on Slack.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/550:1847,perform,performance,1847,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/550,1,['perform'],['performance']
Performance,"r, this from the raw sequencing data and even the trimmed reads that I used, I've got similar mapping rates across all samples. Similar length, TPM, and NumReads across all genes for all genes. Though the value for each gene differs in the abovementioned parameters. The EffectiveLength though is 250 for all genes across all samples. I've used all four different versions of Salmon as listed below but I'm still getting the same similar mapping rate and the parameters at quant.sf though the values differ a bit from each Salmon version. **To Reproduce**; ### Steps and data to reproduce the behavior: for version 0.8. **First I took the genome fasta file and the gff3 file and made a transcriptome fasta file using Salmon:**; module load Cufflinks/2.2.1; gffread all.gff3 -g all.chrs.fasta -w MSU7_transcript.fasta. **I then indexed the transcript fasta file.**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. salmon index -t ~/data/genome/MSU7_transcript.fasta -i ~/data/genome/MSU7_transcript.index --type quasi -k 31. **I then run transcript abundance estimate pipeline for the raw-reads and the trimmed reads as follows:**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_old/${line} --seqBias --gcBias. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:1392,load,load,1392,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['load'],['load']
Performance,"raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::terminate () at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:57; #5 0x00000000006f891b in ~thread (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/thread:151; #6 _Destroy<std::thread> (__pointer=<optimized out>) at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:93; #7 __destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:103; #8 _Destroy<std::thread*> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:126; #9 _Destroy<std::thread*, std::thread> (__last=<optimized out>, __first=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_construct.h:151; #10 std::vector<std::thread, std::allocator<std::thread> >::~vector (this=<optimized out>, __in_chrg=<optimized out>); at /u/user/local/include/c++/5.4.0/bits/stl_vector.h:424; #11 0x00000000007a5fde in cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, 4ul>::parallel_exec<cuckoohash_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned int, BarcodeGroupStringHasher, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:4942,optimiz,optimized,4942,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,4,['optimiz'],['optimized']
Performance,"raps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog] [info] Loading Suffix Array ; [2017-03-15 12:19:05.982] [stderrLog] [info] Loading Transcript Info ; Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Index building log:. ```; Version Info: This is the most recent version of Salmon.; index ["" ./storage/tmm.idx""] did not previously exist . . . creating it; [2017-03-14 12:10:34.791] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2017-03-14 12:10:36.701] [jointLog] [warning] Entry with header [734bf21190b56e1ed4c8d7093c340df1fc6266bd80ed60ebc0ae0f4e9343c3a4], had length less than the k-mer length of 31 (perhaps after poly-A clipping); counted k-mers for 420000 transcripts[2017-03-14 12:10:56.697] [jointLog] [warning] Entry with header [0c9d699aa70741734115dadd8175a44a013ad4122a3af7952e3b38e9593da047], had length less than the k-mer length of 31 (perhaps after",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/129:2009,Load,Loading,2009,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129,1,['Load'],['Loading']
Performance,"rary.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 0 | max rel diff. = 0.548; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 100 | max rel diff. = -1.79769e+308; [2017-02-09 13:51:48.514] [jointLog] [error] Total alpha weight was too small! Make sure you ran salmon correclty.; [2017-02-09 13:51:48.514] [jointLog] [error] The optimization algorithm failed. This is likely the result of bad input (or a bug). If you cannot track down the cause, please report this issue on GitHub.`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119:2564,optimiz,optimizer,2564,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119,2,['optimiz'],"['optimization', 'optimizer']"
Performance,"re best-mapped to decoys : 0; [2020-06-03 23:47:07.131] [jointLog] [info] Number of fragments discarded because they have only dovetail (discordant) mappings to valid targets : 324,394; [2020-06-03 23:47:07.131] [jointLog] [info] Mapping rate = 63.6568%. [2020-06-03 23:47:07.131] [jointLog] [info] finished quantifyLibrary(); [2020-06-03 23:47:07.136] [jointLog] [info] Starting optimizer; [2020-06-03 23:47:07.076] [fileLog] [info] ; At end of round 0; ==================; Observed 34899252 total fragments (34899252 in most recent round). [2020-06-03 23:47:08.309] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2020-06-03 23:47:08.317] [jointLog] [info] iteration = 0 | max rel diff. = 41473.1; [2020-06-03 23:47:08.967] [jointLog] [info] iteration = 100 | max rel diff. = 9.06606; [2020-06-03 23:47:09.603] [jointLog] [info] iteration = 200 | max rel diff. = 1.25243; [2020-06-03 23:47:10.262] [jointLog] [info] iteration = 300 | max rel diff. = 19.2449; [2020-06-03 23:47:10.896] [jointLog] [info] iteration = 400 | max rel diff. = 0.263527; [2020-06-03 23:47:11.533] [jointLog] [info] iteration = 500 | max rel diff. = 0.630176; [2020-06-03 23:47:12.175] [jointLog] [info] iteration = 600 | max rel diff. = 0.250806; [2020-06-03 23:47:12.830] [jointLog] [info] iteration = 700 | max rel diff. = 0.228813; [2020-06-03 23:47:13.475] [jointLog] [info] iteration = 800 | max rel diff. = 0.606402; [2020-06-03 23:47:14.119] [jointLog] [info] iteration = 900 | max rel diff. = 0.0988411; [2020-06-03 23:47:14.743] [jointLog] [info] iteration = 1,000 | max rel diff. = 1.06809; [2020-06-03 23:47:15.421] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0465071; [2020-06-03 23:47:15.797] [jointLog] [info] iteration = 1,162 | max rel diff. = 0.00922127; [2020-06-03 23:47:15.802] [jointLog] [info] Finished optimizer; [2020-06-03 23:47:15.802] [jointLog] [info] writing output . [2020-06-03 23:47:15.955] [jointLog] [info] Computing gene-level abundance estimates; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/530:6873,optimiz,optimizer,6873,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530,1,['optimiz'],['optimizer']
Performance,reads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] parsing read library format; [2018-08-16 19:47:14.418] [jointLog] [info] There is 1 library.; [2018-08-16 19:47:14.460] [stderrLog] [info] Loading Suffix Array ; [2018-08-16 19:47:14.459] [jointLog] [info] Loading Quasi index; [2018-08-16 19:47:14.459] [jointLog] [info] Loading 32-bit quasi index; [2018-08-16 19:47:15.044] [stderrLog] [info] Loading Transcript Info ; [2018-08-16 19:47:15.207] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-08-16 19:47:15.263] [stderrLog] [info] There were 173531 set bits in the bit array; [2018-08-16 19:47:15.285] [stderrLog] [info] Computing transcript lengths; [2018-08-16 19:47:15.285] [stderrLog] [info] Waiting to finish loading hash; [2018-08-16 19:47:20.808] [jointLog] [info] done; [2018-08-16 19:47:20.808] [jointLog] [info] Index contained 173531 targets; [2018-08-16 19:47:20.808] [stderrLog] [info] Done loading index. [A. [32mprocessed[31m 500002 [32mfragments[0m; hits: 2213374; hits per frag: 5.08859[A. [32mprocessed[31m 1000002 [32mfragments[0m; hits: 4422312; hits per frag: 4.78092[A. [32mprocessed[31m 1500006 [32mfragments[0m; hits: 6635818; hits per frag: 4.69843[A. [32mprocessed[31m 2000001 [32mfragments[0m; hits: 8846970; hits per frag: 4.55737[A. [32mprocessed[31m 2500021 [32mfragments[0m; hits: 11062734; hits per frag: 4.49592[A. [32mprocessed[31m 3000000 [32mfragments[0m; hits: 13274990; hits per frag: 4.48667[A. [32,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:24323,Load,Loading,24323,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['Load'],['Loading']
Performance,"rent round[2023-01-29 16:02:13.116] [jointLog] [info] . The alignment group queue pool has been exhausted. 1842 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 13423395 reads in current round; killing thread 3 . . . done. Freeing memory used by read queue . . . 00000; Joined parsing thread . . . ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"" ; Closed all files . . . ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointLog] [info] iteration = 0 | max rel diff. = 237.557; [2023-01-29 16:02:59.282] [jointLog] [info] iteration = 100 | max rel diff. = 3.78077e-16; [2023-01-29 16:02:59.282] [jointLog] [info] finished optimizer; [2023-01-29 16:02:59.282] [jointLog] [info] writing output. ```. Output for failure case - 48 files:. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a $file_list -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { apex_infe_t1_rep1_S29_R1_001Aligned.out.bam apex_infe_t1_rep3_S53_R1_001Aligned.out.bam apex_infe_t2_rep1_S30_R1_001Aligned.out.ba",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:3692,optimiz,optimizer,3692,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['optimiz'],['optimizer']
Performance,"research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [info] finished quantifyLibrary(); [2016-06-21 10:05:13.894] [jointLog",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/64:1509,Load,Loading,1509,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64,1,['Load'],['Loading']
Performance,"ript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_old/${line} --seqBias --gcBias. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias. **Steps and data to reproduce the behavior: for version 0.12**; module load Cufflinks/2.2.1; gffread MSU7_all.gff3 -g all.chrs.fasta -w MSU7_newtranscript.fasta. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.12.0-IGB-gcc-8.2.0. salmon index -t ~/data/genome/MSU7_newtranscript.fasta -i ~/data/genome/MSU7new_transcript.index --type quasi -k 31. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:2949,load,load,2949,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['load'],['load']
Performance,"riptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:3012,Load,Loading,3012,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['Load'],['Loading']
Performance,"rocessing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinLog] [error] Barcode not found in frequency table; ```. Is there any way to avoid using barcodes, or to overcome this error. ; Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369:5734,Load,Loading,5734,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369,1,['Load'],['Loading']
Performance,"rs. I've posted to https://github.com/COMBINE-lab/pufferfish/issues/8 with a full description. When running salmon v1.0 using a rather large index, I receive an error raised from the cereal library ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/463:1270,Load,Loading,1270,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463,1,['Load'],['Loading']
Performance,"rs/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:2195,Load,Load,2195,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Load'],['Load']
Performance,"ry at 2858 ; [2018-12-05 16:31:50.571] [alevinLog] [info] Learned InvCov: 166.8 normfactor: 2759.5; [2018-12-05 16:31:50.571] [alevinLog] [info] Total 3856(has 998 low confidence) barcodes; [2018-12-05 16:31:50.638] [alevinLog] [info] Done True Barcode Sampling; [2018-12-05 16:31:50.935] [alevinLog] [info] Done populating Z matrix; [2018-12-05 16:31:51.000] [alevinLog] [info] Done indexing Barcodes; [2018-12-05 16:31:51.000] [alevinLog] [info] Total Unique barcodes found: 3825581; [2018-12-05 16:31:51.000] [alevinLog] [info] Used Barcodes except Whitelist: 138266; [2018-12-05 16:31:51.087] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-12-05 16:31:51.087] [alevinLog] [info] parsing read library format; [2018-12-05 16:31:51.087] [jointLog] [info] There are 2 libraries.; [2018-12-05 16:31:51.161] [jointLog] [info] Loading Quasi index; [2018-12-05 16:31:51.162] [jointLog] [info] Loading 32-bit quasi index; [2018-12-05 16:31:51.164] [stderrLog] [info] Loading Suffix Array ; [2018-12-05 16:31:51.808] [stderrLog] [info] Loading Transcript Info ; [2018-12-05 16:31:51.960] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-12-05 16:31:52.001] [stderrLog] [info] There were 167,268 set bits in the bit array; [2018-12-05 16:31:52.022] [stderrLog] [info] Computing transcript lengths; [2018-12-05 16:31:52.022] [stderrLog] [info] Waiting to finish loading hash; [2018-12-05 16:31:56.025] [stderrLog] [info] Done loading index; [2018-12-05 16:31:56.025] [jointLog] [info] done; [2018-12-05 16:31:56.025] [jointLog] [info] Index contained 167,268 targets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:12692,Load,Loading,12692,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['Load'],['Loading']
Performance,"s = {int}; Key = std::__cxx11::basic_string<char>; T = unsigned int; Hash = BarcodeGroupStringHasher; KeyEqual = std::equal_to<std::__cxx11::basic_string<char> >; Allocator = std::allocator<std::pair<const std::__cxx11::basic_string<char>, unsigned int> >; long unsigned int SLOT_PER_BUCKET = 4ul]::<lambda(cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>::mapped_type&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:529; #15 upsert<std::__cxx11::basic_string<char>&, densityCalculator(single_parser*, AlevinOpts<ProtocolT>&, std::mutex&, CFreqMapT&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&) [with ProtocolT = alevin::protocols::Chromium; single_parser = fastx_parser::FastxParser<fastx_parser::ReadSeq>; CFreqMapT = cuckoohash_map<std::__cxx11::basic_string<char>, unsigned int, BarcodeGroupStringHasher>]::<lambda(uint32_t&)>, int> (fn=..., key=..., this=<optimized out>); at /u/user/tmp/salmon/include/cuckoohash_map.hh:554; #16 densityCalculator<alevin::protocols::Chromium> (parser=<optimized out>, aopt=..., ioMutex=..., freqCounter=...,; usedNumBarcodes=..., totNumBarcodes=...) at /u/user/tmp/salmon/src/Alevin.cpp:137; #17 0x0000000000ba4970 in std::execute_native_thread_routine (__p=<optimized out>); at ../../../.././libstdc++-v3/src/c++11/thread.cc:84; #18 0x00007fff7fbc7064 in start_thread (arg=0x7ffcf97e7700) at pthread_create.c:309; #19 0x00007fff7e95b62d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:111; (gdb); #0 0x00007fff7e8a8067 in __GI_raise (sig=sig@entry=6) at ../nptl/sysdeps/unix/sysv/linux/raise.c:56; #1 0x00007fff7e8a9448 in __GI_abort () at abort.c:89; #2 0x0000000000bc962d in __gnu_cxx::__verbose_terminate_handler (); at ../../.././libstdc++-v3/libsupc++/vterminate.cc:95; #3 0x0000000000b3d856 in __cxxabiv1::__terminate (handler=<optimized out>); at ../../.././libstdc++-v3/libsupc++/eh_terminate.cc:47; #4 0x0000000000b3d8a1 in std::t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:12060,optimiz,optimized,12060,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['optimiz'],['optimized']
Performance,"s Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog] [info] Loading Suffix Array ; [2018-06-12 21:08:56.530] [stderrLog] [info] Loading Transcript Info ; [2018-06-12 21:08:56.675] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-12 21:08:56.724] [stderrLog] [info] There were 36191 set bits in the bit array; [2018-06-12 21:08:56.729] [stderrLog] [info] Computing transcript lengths; [2018-06-12 21:08:56.729] [stderrLog] [info] Waiting to finish loading hash; [2018-06-12 21:08:58.508] [jointLog] [info] done; [2018-06-12 21:08:58.508] [jointLog] [info] Index contained 36191 targets; [2018-06-12 21:08:58.508] [stderrLog] [info] Done loading index. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; hits: 169917, hits per frag: 0.0489674[2018-06-12 21:09:22.500] [jointLog] [error] umi indexing of jellyfish failing.; Please report on github; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/237:3539,Load,Loading,3539,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237,5,"['Load', 'load']","['Loading', 'loading']"
Performance,"s ] => { 6 }; ### [ validateMappings ] => { }; Logs will be written to out/logs; [2021-09-20 16:20:48.240] [jointLog] [info] setting maxHashResizeThreads to 6; [2021-09-20 16:20:48.240] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-09-20 16:20:48.240] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-09-20 16:20:48.240] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-09-20 16:20:48.240] [jointLog] [info] parsing read library format; [2021-09-20 16:20:48.240] [jointLog] [info] There is 1 library.; [2021-09-20 16:20:48.328] [jointLog] [info] Loading pufferfish index; [2021-09-20 16:20:48.331] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 22.244 s; -----------------------------------------; size = 24942314; -----------------------------------------; | Loading contig offsets | Time = 390.62 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.8142 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 6.3526 s; -----------------------------------------; size = 3023265381; Number of ones: 24942313; Number of ones per inventory item: 512; Inventory entries filled: 48716; -----------------------------------------; | Loading contig boundaries | Time = 6.5744 s; -----------------------------------------; size = 3023265381; -----------------------------------------; | Loading sequence | Time = 2.3167 s; -----------------------------------------; size = 2274995991; -----------------------------------------; | Loading positions | Time = 34.246 s; -----------------------------------------; size = 2944822425; -----------------------------------------; | Loading refere",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:4688,Load,Loading,4688,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Load'],['Loading']
Performance,"s and offset” or “bias corrected counts without an offset”. ; Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level differential expression.; ```. 2 - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Salmon. ```; files <- file.path(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene); head(txi.salmon$counts). ```; Why the confusion - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor - states ; - The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level differential expression; - The second method is to use the tximport argument countsFromAbundance=""lengthScaledTPM"" or ""scaledTPM"", and then to use the gene-level count matrix txi$counts directly as you would a regular count matrix with these software. Let’s call this method “bias corrected counts without an offset”. Now, if I were to use the 2nd bullet as guide, shouldn't txi be generated this way for use with DESeq -- see the addition of `countsFromAbundance = ""lengthScaledTPM""` to tximport line. ```; files <- file.path(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene, countsFromAbundance = ""lengthScaledTPM""); head(txi.salmon$counts); write.csv(as.data.frame(txi.salmon$counts), file = ""tx2gene_NumReads.csv""); ```. And then use the tx2gene_NumReads.csv with DESeqDataSetFromMatrix, where the countData comes after reading in tx2gene_NumReads.csv upstream in the code. **Note**: I am using DESeqDataSetFromMatrix here and not DESeqDataSetFromTxi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/581:1981,perform,perform,1981,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581,1,['perform'],['perform']
