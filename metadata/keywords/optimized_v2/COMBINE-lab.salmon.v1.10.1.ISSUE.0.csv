quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability,"	CorrectedReads	MappedReads	DeduplicatedReads	MappingRate	DedupRate	MeanByMax	NumGenesExpressed	NumGenesOverMean	mRnaFraction	rRnaFraction	ArborescenceCount; ```; Unfortunately it seems the expected value from the last (12th) `ArborescenceCount` is getting dumped at 10th position in that case the header should be (but not currently is):; ```; CB	CorrectedReads	MappedReads	DeduplicatedReads	MappingRate	DedupRate	MeanByMax	NumGenesExpressed	NumGenesOverMean	ArborescenceCount	mRnaFraction	rRnaFraction; ```. 2.) if `--dumpUmiGraph` is provided (I am assuming you are) then instead we were experimenting with another feature which follows the convention `<Number of Reads in an Arborescence>:<Frequency of these Arborescences>` i.e. if in a cell X we observe 3 Arborescence each with 2,3,4 number of reads respectively in them then the entry of `ArborescenceCount` should look like `2:1	3:1	4:1`. Since just like the problem with 1) above there seems to be switch of the column 12 to 10 and you are observing weird looking file. . In short: Everything is fine till column 9th but there is a bug which makes column 12 to 10, 10 to 11 and 11 to 12. If you provide `--dumpUmiGraph` then last two columns represents `mRnaFraction	rRnaFraction` while everything in between column 9th and before last two represents `ArborescenceCount` with special frequency dump as defined above. My apologies for the trouble I just pushed a fix into the develop branch. However, we have significant other changes in develop branch too so recompilation might make your current index incompatible to `0.14.1` so if you don't wan't to reindex the reference then I'd not recompile from develop and the bugfix will available from the next version. Solution: The easiest solution is to remove `--dumpUMIgraph` if you don't need the flag and rerun then the only thing to handle is just change the header names. If rerunning alevin is too much work then I can forward you a python parser which can temporary handle the parsing.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/413#issuecomment-518443482:1946,avail,available,1946,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/413#issuecomment-518443482,1,['avail'],['available']
Availability," $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:28571,avail,available,28571,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['avail'],['available']
Availability," (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:1127,recover,recoverOrphans,1127,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['recover'],['recoverOrphans']
Availability," * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:1523,avail,available,1523,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['avail'],['available']
Availability, --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstad,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:4767,error,error,4767,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['error'],['error']
Availability," -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias --validateMappings. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13 Salmon/0.11.3-IGB-gcc-4.9.4; Salmon/0.9.1-IGB-gcc-4.9.4 Salmon/0.12.0-IGB-gcc-8.2.0 (D). * How was salmon installed (compiled, downloaded executable, through bioconda)?; through the biocluster in the University. * Which reference (e.g. transcriptome) was used?; converted the genomic fasta file to transcriptomic fasta file (described above); ; * Which read files were used?; the raw sequencing reads and the trimmed reads from the paired-end data. * Which which program options were used?; described above. **Expected behavior**; A clear and concise description of what you expected to happen. I've used the quassi mapping of Salmon using different versions several times and I expect to get different mapping rate per sample. I also expect to get different values of the parameters in the quant.sf parameters across all genes and across samples.; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ### For version 0.8. This is similar across all samples:; Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250 28.8836 527.392; LOC_Os01g01010.2 2218 250 1.84062 33.6083; LOC_Os01g01019.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:4381,down,downloaded,4381,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['down'],['downloaded']
Availability," . WARNING: Detected suspicious pair --- ; The names are different:; read1 : SRR3212847.33911054; read2 : SRR3212847.30781941. Segmentation fault (core dumped); ```. ### 3. Sorting with `samtools sort -n`; ```; samtools sort \; -@ 40 \; -n \; -o SRR3212847.Aligned.SortedByName.bam \; SRR3212847.Aligned.SortedByCoord.bam. salmon quant \; -t mRNA.fasta \; -p 20 \; -l A \; -a SRR3212847.Aligned.SortedByName.bam \; -o SRR3212847.Aligned.SortedByName; ```. ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.4.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { mRNA.fasta }; # [ threads ] => { 20 }; # [ libType ] => { A }; # [ alignments ] => { SRR3212847.Aligned.SortedByName.bam }; # [ output ] => { SRR3212847.Aligned.SortedByName }; Logs will be written to SRR3212847.Aligned.SortedByName/logs; [2021-01-08 13:02:04.845] [jointLog] [info] setting maxHashResizeThreads to 20; [2021-01-08 13:02:04.845] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; [2021-01-08 13:02:04.878] [jointLog] [info] numQuantThreads = 14; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""SRR3212847.Aligned.SortedByName.bam"", fasta = ""mRNA.fasta"" . . .done. processed 0 reads in current roundSegmentation fault (core dumped); ```; (Which is the same as the 1st error. Actually, each time I re-run those two errors switched.). I tried running Salmon on the sorted-by-coordinates bam, and it didn't fail:; ```; nohup salmon quant \; -t mRNA.fasta \; -p 20 \; -l A \; -a SRR3212847.Aligned.SortedByCoord.bam \; -o SRR3212847.Aligned.SortedByCoord \; > SRR3212847.Aligned.SortedByCoord.out &; ```; Even so, `SRR3212847.Aligned.SortedByCoord.out` contained ~3.5GB worth of the warnings above. Any help would be much appreciated.; Thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/582#issuecomment-756727212:4192,fault,fault,4192,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/582#issuecomment-756727212,3,"['error', 'fault']","['error', 'errors', 'fault']"
Availability," 0.0984302; [2016-01-02 00:08:58.048] [jointLog] [info] iteration = 300 | max rel diff. = 0.0774471; [2016-01-02 00:08:58.265] [jointLog] [info] iteration = 400 | max rel diff. = 0.0866256; [2016-01-02 00:08:58.472] [jointLog] [info] iteration 500, recomputing effective lengths; [2016-01-02 00:09:00.486] [jointLog] [info] iteration = 500 | max rel diff. = 0.0216284; [2016-01-02 00:09:00.696] [jointLog] [info] iteration = 600 | max rel diff. = 0.0269734; [2016-01-02 00:09:00.905] [jointLog] [info] iteration = 700 | max rel diff. = 0.0166003; [2016-01-02 00:09:01.113] [jointLog] [info] iteration = 800 | max rel diff. = 0.0136659; [2016-01-02 00:09:01.334] [jointLog] [info] iteration = 900 | max rel diff. = 0.0114614; [2016-01-02 00:09:01.542] [jointLog] [info] iteration 1000, recomputing effective lengths; [2016-01-02 00:09:03.495] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0102234; [2016-01-02 00:09:03.716] [jointLog] [info] iteration = 1100 | max rel diff. = 0.0202324; [2016-01-02 00:09:03.929] [jointLog] [info] iteration = 1200 | max rel diff. = 0.010957; [2016-01-02 00:09:03.946] [jointLog] [info] iteration = 1209 | max rel diff. = 0.00996627; [2016-01-02 00:09:03.952] [jointLog] [info] Finished optimizer; [2016-01-02 00:09:03.952] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 00:09:04.141] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/ERP009633_cell20_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/ERP009633_cell20_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: /tmp/ERP009633_cell20_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/34:3367,fault,fault,3367,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34,1,['fault'],['fault']
Availability," 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_ver",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:2364,Error,Error,2364,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,2,['Error'],['Error']
Availability," 2147483647) = 0; write(2, ""terminate called without an acti""..., 45terminate called without an active exception; ) = 45; rt_sigprocmask(SIG_UNBLOCK, [ABRT], NULL, 8) = 0; write(3, ""[2017-04-05 16:24:38.504] [joint""..., 136) = 136; tgkill(10693, 10693, SIGABRT) = 0; --- SIGABRT (Aborted) @ 0 (0) ---; +++ killed by SIGABRT (core dumped) +++; ```. (371 lines for task 1, 368 for task 2). Basically, both fail at a point where `mmap()` cannot allocate memory. So it definitely looks like a memory issue and I don't know if these information gives you any hints. . ## Bumping memory. Bumping the memory request to 28/30GB. This is a scenario where task 2 seems to work ok but tasks 1 and 3 fail. ```bash; #!/bin/bash; #$ -cwd; #$ -pe local 2; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test12.gsk_phaseII; #$ -o ./logs/salmon_test12.$TASK_ID.txt; #$ -e ./logs/salmon_test12.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/s",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:78007,echo,echo,78007,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888,1,['echo'],['echo']
Availability," 400 | max rel diff. = 8.91734; [2021-09-20 16:24:56.130] [jointLog] [info] iteration = 500 | max rel diff. = 1.26201; [2021-09-20 16:24:57.628] [jointLog] [info] iteration = 600 | max rel diff. = 0.155034; [2021-09-20 16:24:59.130] [jointLog] [info] iteration = 700 | max rel diff. = 16.1436; [2021-09-20 16:25:00.660] [jointLog] [info] iteration = 800 | max rel diff. = 2.09965; [2021-09-20 16:25:02.202] [jointLog] [info] iteration = 900 | max rel diff. = 0.122996; [2021-09-20 16:25:03.751] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.156404; [2021-09-20 16:25:05.306] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.103478; [2021-09-20 16:25:06.868] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.03942; [2021-09-20 16:25:08.404] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0699512; [2021-09-20 16:25:09.961] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.109145; [2021-09-20 16:25:11.518] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.135139; [2021-09-20 16:25:13.091] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0545934; [2021-09-20 16:25:14.668] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.0287732; [2021-09-20 16:25:16.226] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.0201942; [2021-09-20 16:25:17.780] [jointLog] [info] iteration = 1,900 | max rel diff. = 1.83806; [2021-09-20 16:25:19.333] [jointLog] [info] iteration = 2,000 | max rel diff. = 0.0251548; [2021-09-20 16:25:19.842] [jointLog] [info] iteration = 2,034 | max rel diff. = 0.00913859; [2021-09-20 16:25:19.858] [jointLog] [info] Finished optimizer; [2021-09-20 16:25:19.858] [jointLog] [info] writing output ; ```. VM running Ubuntu ; Linux ubuntu 5.11.0-34-generic #36~20.04.1-Ubuntu SMP Fri Aug 27 08:06:32 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.3 LTS; Release:	20.04; Codename:	focal. Transcriptome index for mouse mm10 downloaded from RefGenie.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:9575,avail,available,9575,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,2,"['avail', 'down']","['available', 'downloaded']"
Availability," 8M reads in the single fastq file I am testing with. I can see a whole bunch of threads being created despite limiting the number of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 11:55:47.378] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [Ne",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:1392,avail,available,1392,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['avail'],['available']
Availability," ; # Feature counts on genome BAM, without umi_tools dedup: ; ENSMUSG00000029657.15 [...] 7266 415; # Feature counts on deduplicated genome BAM:; ENSMUSG00000029657.15 [...] 7266 289; ```. Here's a scatterplot of log1p(counts) of the salmon quant results for a single sample with and without umi_tools dedup; ![image](https://user-images.githubusercontent.com/7051479/125756098-5aff12af-a75f-4bd3-9c5d-30ce7890a2ba.png). **To Reproduce**; Run Salmon quant on the aligned transcriptome BAM file. I provide subsampled versions of both the deduplicated and non-deduplicated BAM files. If you need the full BAM files, LMK and we can arrange a transfer. . * [POOLAM1-40.Aligned.toTranscriptome.out.subsample.bam.gz](https://github.com/COMBINE-lab/salmon/files/6821654/POOLAM1-40.Aligned.toTranscriptome.out.subsample.bam.gz); * [POOLAM1-40.umi_dedup.transcriptome.sorted.subsample.bam.gz](https://github.com/COMBINE-lab/salmon/files/6821657/POOLAM1-40.umi_dedup.transcriptome.sorted.subsample.bam.gz); * [salmon_featurecounts_results.tar.gz](https://github.com/COMBINE-lab/salmon/files/6821561/salmon_featurecounts_results.tar.gz). Specifically, please provide at least the following information:. * Which version of salmon was used? **1.5.1**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **bioconda**; * Which reference (e.g. transcriptome) was used? **gencode.vM25.primary_assembly.annotation.gtf**; * Which read files were used? **Lexogen QuantSeq 3' UMI**; * Which which program options were used? **--noLengthCorrection**. **Expected behavior**; Correctly quantify results on deduplicated BAM. . **Desktop (please complete the following information):**; - OS: CentOS 7; - Version `3.10.0-1160.11.1.el7.x86_64 #1 SMP Fri Dec 18 16:34:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`. **Additional context**; There's already an issue with RSEM described in the UMI-tools repository (https://github.com/CGATOxford/UMI-tools/issues/465), maybe that's related. . CC @chripla",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/684:2270,down,downloaded,2270,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/684,1,['down'],['downloaded']
Availability," ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointLog] [info] iteration = 0 | max rel diff. = 237.557; [2023-01-29 16:02:59.282] [jointLog] [info] iteration = 100 | max rel diff. = 3.78077e-16; [2023-01-29 16:02:59.282] [jointLog] [info] finished optimizer; [2023-01-29 16:02:59.282] [jointLog] [info] writing output. ```. Output for failure case - 48 files:. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a $file_list -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { apex_infe_t1_rep1_S29_R1_001Aligned.out.bam apex_infe_t1_rep3_S53_R1_001Aligned.out.bam apex_infe_t2_rep1_S30_R1_001Aligned.out.bam apex_infe_t2_rep3_S54_R1_001Aligned.out.bam apex_infe_t3_rep1_S31_R1_001Aligned.out.bam apex_infe_t3_rep3_S55_R1_001Aligned.out.bam apex_infe_t4_rep1_S32_R1_001Aligned.out.bam apex_infe_t4_rep3_S56_R1_001Aligned.out.bam apex_infe_t5_rep1_S33_R1_001Aligned.out.bam apex_infe_t5_rep3_S57_R1_001Aligned.out.bam apex_infe_t6_rep1_S34_R1_001Aligned.out.bam apex_infe_t6_rep3_S58_R1_001Aligned.out.bam apex_mock_t1_rep1_S23_R1_001Align",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:4116,failure,failure,4116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['failure'],['failure']
Availability," ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/664:1025,error,error,1025,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664,2,['error'],['error']
Availability," BAM file is provided. ; If the BAM files are provided one at a time, no error or segfault happens and salmon wickedly fast quantificates the transcripts. The first used BAM files where shuffled (with samtools bamshuf) as recommended in the docs. To exclude an error on my side I did:; - try unshuffled BAM files --> Segfault; - try older Salmon Version (7.2) --> Segfault; - build Salmon from source --> Segfault; - use different transcriptdata (see below) --> Segfault. The segfault happens after all reads (in all files) are processed:; `processed 48000000 reads in current roundSegmentation fault`. ### Example workflow:. Get the read data from [here](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?run=ERR1433122) for example with SRA Toolkit:; `vdb-dump -f fastq --gzip --output-file test.fastq.gz ERR1433122`. Then use STAR:. First build a genome index for the reference transcriptset from [here](https://ics.hutton.ac.uk/atRTD/) and the [TAIR10 genome](https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files); You probably have to rename the chromosomes either in the .gtf or .fas file, to have consistent names. `STAR --runThreadN 4 --runMode genomeGenerate --genomeDir genome_index/ --genomeFastaFiles TAIR10_chr_all_edited.fas --sjdbGTFfile AtRTD2_19April2016.gtf --sjdbOverhang 100`. Then map:. `STAR --runThreadN 4 --genomeDir genome_index --readFilesCommand zcat --readFilesIn test.fastq.gz --sjdbOverhang 100 --sjdbGTFfile AtRTD2_19April2016.gtf --outFileNamePrefix mapping/ --quantMode TranscriptomeSAM`. and make a .fa file from the genome and the .gtf with:; `gffread -w gff_merged.fa -g TAIR10_chr_all_edited.fas AtRTD2_19April2016.gtf`. Now make a copy of the ""Aligned.toTranscriptome.out.bam"" (for the sake of simplicity) and try; `salmon quant -l A -a Aligned.toTranscriptome.out.bam Aligned.toTranscriptome.out_copy.bam -t gff_merged.fa -o ./out/`. Then the above mentioned segfault happens. The o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/145:1074,down,download,1074,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/145,1,['down'],['download']
Availability," Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:977:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1210:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, r1ptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/254:1444,error,error,1444,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254,1,['error'],['error']
Availability," I did perform a random subsampling, ie. taking a read with a p probability while reading the fastq files, p being the subsampling coefficient I did mention (pE[0;1]). An implementation of this approach as an option during the transcript quantification would be great. I can provide you with the simple python script I use for the subsampling, but I am not sure if it is the proper way to subsample during alevin quantification. >when you say cellranger subsampling, do you mean the cellranger aggregate pipeline?. Yes, sorry for not clearly stating it. I did use the cellranger aggregate function indeed, which by default subsample the expression matrices with high sequencing depth depending on amount of mapped reads, if I understand well. >Use Alevin w/o any modification to the fastq on both of your sample to generate the gene count matrices. I already did that, in downstream analyses I have a batch effect issue related to the sequencing depth. >that's why we recommend using the Seurat package downstream of the Alevin quantified matrices. I have some experience with downstream analyses with Seurat, Pagoda, Scater, scanpy and a few other tools, and I am aware of batch correction methods like CCA or MNN. But that is not what I am looking for here. I did both CCA and MNN but I loose some important information in the resulting eigenspaces or corrected matrix. I believe the proper way to correct my batch effect is to simply fix the difference between my two libraries, ie. the sequencing depth in this case. As I explained in my first message, cellranger aggregate (subsampling based on the amount of mapped reads) works very well in my case, correct the effect without any loss or modification of important genes in our scientific question. Not CCA or MNN. I would like to be able to do the same from the alevin quantifications. So I am looking for a proper way to apply a correction before/during/after the alevin quantification, in a way similar to what cellranger do with STAR. Alter",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913:1184,down,downstream,1184,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913,2,['down'],['downstream']
Availability," I tried loading all of the entry names into a computing language, and check that the number of unique names was identical to the total number (suggesting that this wasn't the case). **To Reproduce**; I required to re-run some RNA seq mapping from someone who left the lab, and gave me this script (I've asked them, they did not really know what got wrong). ```; conda create --name rnaseq -c bioconda salmon; conda activate rnaseq; conda install -c conda-forge -c bioconda salmon=1.4.0; mkdir -p reference . # reference genome; wget -O reference/genome.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_genomic.fna.gz. # reference Transcriptome; wget -O reference/transcripts.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_cds_from_genomic.fna.gz. # prepare file with ""decoy"" sequences; zcat reference/genome.fa.gz | grep ""^>"" | cut -d "" "" -f 1 | sed -e 's/>//g' > reference/decoys.txt. # concatenate the two; cat reference/transcripts.fa.gz reference/genome.fa.gz > reference/gentrome.fa.gz. # Try to create index, this gives problems; salmon index -t reference/gentrome.fa.gz -d reference/decoys.txt -p 12 -i salmon_index --gencode -k 31; ```. The last one gives an error:; ```; Version Info: This is the most recent version of salmon.; [2021-03-30 14:29:34.652] [jLog] [info] building index; out : salmon_index; [2021-03-30 14:29:34.653] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2021-03-30 14:29:34.670] [puff::index::jointLog] [error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character.; ```. **Desktop (please complete the following information):**; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/642:1839,error,error,1839,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642,3,"['avail', 'error']","['available', 'error']"
Availability," I’ve done some sleuthing and have (seemingly) figured out what’s going on. I compared tons of overlapping transcript scenarios and played with the salmon options and concluded the following:. 1. **Success scenarios:** Generally, with default options, Salmon does an excellent job at assigning reads to overlapping transcripts the same way that a human would. Whether or not the transcripts overlap slightly or one is entirely contained within another is irrelevant. 2. **Failure scenarios:** In some scenarios with overlapping transcripts, read assignment can be very strange and unintuitive, especially when one of the transcript isoforms is much more abundant than the other (the abundant transcript tends to “steal” reads from the less abundant one). 3. Both the success and failure scenarios are **due to the length bias model** used when estimating the abundance of transcripts. **Totally disabling this with the —noLengthCorrection flag** (NOT the —no**Effective**LengthCorrection flag) **actually *creates* the transcript within a transcript failure scenario that I mistakenly thought was the original issue.** That is, when length bias modeling is turned off, then longer transcripts will always get assigned *all* of the reads that multimap to shorter transcripts.; -Therefore... if you *did* want to tackle the transcript within a transcript scenario to build a coverage bias model, you probably want to disable the length bias modeling or at least consider how it would interact with coverage modeling. With that said, I'm sharing an example that illustrates each of the above points and a link to a toy dataset that you can use to recreate the examples or explore this further. If you'd like to dig deeper into this, free free to e-mail me at jason@calicolabs.com, I have tons more notes and data that I'm willing to share. Dataset is in google drive (you'll have to click the link and request access to view it) https://drive.google.com/drive/folders/1LcJNa4PHNoYqGsnkRx0YxvNXnNJCVyq9?u",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/514#issuecomment-653747847:1095,failure,failure,1095,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514#issuecomment-653747847,2,['failure'],['failure']
Availability," ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; [root@fsutil02 build]#; [root@fsutil02 build]# vim salmon^C; [root@fsutil02 build]# cd ..; [root@fsutil02 salmon]# vim salmon.build.error; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; In file included from /usr/include/c++/4.8.2/memory:81:0,; from /usr/include/c++/4.8.2/thread:40,; from /opt/build/salmon/src/SalmonQuantify.cpp:35:; /usr/include/c++/4.8.2/bits/unique_ptr.h: In instantiation of ‘void std::unique_ptr<_Tp, _Dp>::reset(std::unique_ptr<_Tp, _Dp>::pointer) [with _Tp = fastx_parser::FastxParser<fastx_parser::ReadSeq>; _Dp = processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; std",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:44635,error,error,44635,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability," ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryNode=25000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/990; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/990/tool_script.sh: line 50: 5713 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a ip 00007fe2fcdc2dca sp 00007fff27128b90 error 4 in libtbb.so.2[7fe2fcda0000+37000]; ```. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem=100000`**; - `scontrol show job 98`; ```; JobId=98 Name=g994_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901663 Account=(null) QOS=(null); JobState=RUNNING Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:08:19 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T20:06:23 EligibleTime=2018-08-27T20:06:23; StartTime=2018-08-27T20:06:23 EndTime=Unknown; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:2236; ReqNodeList=(null) ExcNodeList=(null); NodeList=w21; BatchHost=w21; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryCPU=100000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mn",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:2040,error,error,2040,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238,1,['error'],['error']
Availability," [ 12%] Built target libtbb; [ 19%] Built target libcereal; [ 26%] Built target libdivsufsort; [ 32%] Built target libstadenio; [ 38%] Built target libspdlog; [ 45%] Built target libgff; [ 47%] Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:977:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuanti",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/254:1268,error,error,1268,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254,1,['error'],['error']
Availability," [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. 5. The duplicates have same sequence or ID or both? The message should be clearer. I wonder what are these duplicates in a human cdna predicted, as available from `ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna`; :. ```; [2018-06-25 19:26:07.480] [jointLog] [warning] Removed 11768 transcripts that were sequence duplicates of indexed transcripts.; ```. 6. For the bwa-based index again, the logs are too verbose on one hand and on the second, they do not say what files were created. I doubt any file with *prefix* `Homo_sapiens.GRCh38.cdna.all/bwaidx` was created. ```; + salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type fmd; outputPrefix = ""Homo_sapiens.GRCh38.cdna.all/bwaidx""; [2018-06-25 19:29:02.497] [jLog] [info] building index; [bwa_index] Pack FASTA... 2.87 sec; [bwa_index] Construct BWT for the packed sequence...; [BWTIncCreate] textLength=609536484, availableWord=54888760; [BWTIncConstructFromPacked] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromPacked] 20 iterations done. 164630980 characters processed.; [BWTIncConstructFromPacked] 30 iterations done. 233119636 characters processed.; [BWTIncConstructFromPacked] 40 iterations done. 293988548 characters processed.; [BWTIncConstructFromPacked] 50 iterations done. 348084948 characters processed.; [BWTIncConstructFromPacked] 60 iterations done. 396161956 characters processed.; [BWTIncConstructFromPacked] 70 iterations done. 438888868 characters processed.; [BWTIncConstructFromPacked] 80 iterations done. 476860644 characters processed.; [BWTIncConstructFromPacked] 90 iterations done. 510606036 characters processed.; [BWTIncConstructFromPacked] 100 iterations done. 540594980 characters processed.; [BWTIncConstructFromPacked] 110 iterations done. 567245236 characters processed.; [BWTIncConstructFromPacked] 120 iterations done. 590928020 characters processed.; [bwa_index] 279.06",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:14045,avail,availableWord,14045,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['avail'],['availableWord']
Availability," [alevin-fry tutorial](https://combine-lab.github.io/alevin-fry-tutorials/2021/improving-txome-specificity/). . **Describe the bug**; A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86.fa""; output:; ""{out_data}/ref/idx/complete_ref_lens.bin"",; ""{out_data}/ref/idx/ctable.bin"",; ""{out_data}/ref/idx/ctg_offsets.bin"",; ""{out_data}/ref/idx/duplicate_clusters.tsv"",; ""{out",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:1221,error,error,1221,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['error'],['error']
Availability," [alevinLog] [info] Total 138 barcodes found; [2019-01-29 09:55:59.107] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 09:55:59.107] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2019-01-29 09:55:59.107] [alevinLog] [info] Starting to make feature Matrix; [2019-01-29 09:55:59.115] [alevinLog] [info] Done making regular featues; [2019-01-29 09:55:59.115] [alevinLog] [info] Done making feature Matrix; [2019-01-29 09:55:59.123] [alevinLog] [info] Finished white listing; [2019-01-29 09:55:59.126] [alevinLog] [info] Finished optimizer; ``` . Concat fastq:; ```; salmon alevin -l ISR -1 big.fastq.1.gz -2 big.fastq.2.gz --chromium -i geneset.dir/geneset_coding_exons.salmon.index/ -o salmon.dir/ --tgMap transcript2geneMap.tsv --dumpCsvCounts; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of Salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to salmon.dir/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { big.fastq.1.gz }; ### [ mates2 ] => { big.fastq.2.gz }; ### [ chromium ] => { }; ### [ index ] => { geneset.dir/geneset_coding_exons.salmon.index/ }; ### [ output ] => { salmon.dir/ }; ### [ tgMap ] => { transcript2geneMap.tsv }; ### [ dumpCsvCounts ] => { }. [2019-01-29 09:56:37.731] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-29 09:56:37.749] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 2 Million barcodes. [2019-01-29 09:56:43.029] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 09:56:43.029] [alevinLog] [info] # Ba",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/337#issuecomment-458481722:6186,avail,available,6186,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337#issuecomment-458481722,1,['avail'],['available']
Availability," [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173892_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173892 }; Logs will be written to salmonRes_SRR2173892/logs; [2021-07-16 11:47:01.807] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.807] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.807] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.807] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.807] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.807] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR1501367/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR1501367/quant.sf': No such file or directory",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:11425,Error,Error,11425,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,2,['Error'],['Error']
Availability," ] => { SRR1818187_2.fastq.gz }; ### [ mates2 ] => { SRR1818187_1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { Salmontranscripts_quant }; Logs will be written to Salmontranscripts_quant/logs; [2019-08-25 11:40:44.518] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-08-25 11:40:44.518] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-08-25 11:40:44.518] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-25 11:40:44.518] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-25 11:40:44.518] [jointLog] [info] parsing read library format; [2019-08-25 11:40:44.518] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file salmonIndexDecoyMouse/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; (salmon) wayne@Ubuntu19:~/rnaseq$ ls -R *.json; ls: cannot access '*.json': No such file or directory. Try 2.; Instead of referring to my directory decoys/ , I moved to the directory decoys/ ; and ran salmon index again, using your command exactly:; salmon index -t gentrome.fa -d decoys.txt -i combined_index. This time a few .json files were produced in the directory combined_index/ [your name this time]; [contents of decoys= combined_index gentrome.fa mus_musculus.tar.gz Salmontranscripts_quant; decoys.txt links.txt salmonQuantDecoy22.sh]. then [sh salmonQuantDecoy22.sh]; salmon quant -p 3 -i combined_index -l A -1 ../SRR1818187_2.fastq.gz -2 ../SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant. Now no Segmentation Fault crash. ; The program finishes with; [2019-08",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/419#issuecomment-524651435:1956,Error,Error,1956,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419#issuecomment-524651435,1,['Error'],['Error']
Availability," ```; ERROR: Transcript ENST00000630276 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000429962 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000415237 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000450652 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM in",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:430,ERROR,ERROR,430,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737,10,['ERROR'],['ERROR']
Availability, ```; minEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQClassWeight errorminEQCla,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582:558,error,errorminEQClassWeight,558,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266888582,44,['error'],['errorminEQClassWeight']
Availability," a 21 GiB swap partition which works fine (I've already seen it at 60%, so it is active and recognized and everything despite being on another physical hard drive ; (the 1. hard drive has a dual installation of win 10 and ubuntu 20.4 and the swap from the installation (2 GiB, because I thought that would be enough at the time and tried to save some space ^^) and the 2. hard drive has a swap partition of 20 GiB (with the highest priority of all swaps), which results in a total of 21.4 GiB in the System Monitor Resources Tab). . The system is still responding, and the System Monitor seems to be working fine (salmon is an active process using 12% CPU, 6.9 GiB memory, 13.5 GiB Disk read total, N/A Disk write total, Disk read 1.2 MiB/s (sometimes 1.1 or 1.3), Disk write N/A, Priority normal); and the Resources Tab shows that ; * out of 8 available CPUs, one is working at 100% (the others 5% at max) and ; * Memory 99.3% (which is only 7.7 GiB); * swap 9.5% (which is only 2 GiB of 21.4 GiB available). So here are (finally) my questions:. 1. How can I get Salmon to use the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ""visible"" happening during Round0?; 3. How can I see or check if it is still working (and it might be worthwhile to wait longer)? ; 4. Is what I'm doing correct to create an index file for running Salmon on human RNA-seq data that is supposed to ""end up"" in sleuth?; 5. Is there another way to create an index file that I can use as an index file to create input data for sleuth from RNA-seq data using Salmon (that might need less computational power)?. The last lines of the output are:. [2021-04-02 08:46:48.282] [puff::index::jointLog] [warning] Entry with header [ENST00000634174.1|ENSG00000282732.1|OTTHUMG00000191398.1|OTTHUMT00000487783.1|AC073539.7-201|AC073539.7|28|unprocessed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping). [2021-04-02",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/643:4263,avail,available,4263,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643,1,['avail'],['available']
Availability," and concise description of what the bug is. I had an older version of salmon that works (v0.8.2) that I believe was not compiled with Bioconda. I am now trying to get the latest version through Bioconda and with the same ""salmon quant"" command (See below) that works on the old version, I get a ""segmentation fault 11"" error and it never actually quantifies any reads. Do you know why this would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:1160,Down,Downloads,1160,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,1,['Down'],['Downloads']
Availability," annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.org/packages/salmon) because conda triggers another bug.; I suspect that this is the cause of the bug. I tried to clean up my dependencies/packages but could not fix the bug. . Thank you for this great program! Cheers!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/965:1226,error,error,1226,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965,1,['error'],['error']
Availability," attached the output from the indexing run). The memory allocation was as below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz. * Which read files were used?; Files used for salmon quant are attached (*fq.gz). * Which which program options were used?; None specifically was invoked to run salmon.; I am running salmon on a cluster (Linux 3.10.0-957.el7.x86_64 x86_64). **Expected behavior**; A clear and concise description of what you expected to happen. I expect the salmon quant to align and quantify the reads. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 1) Attaching the",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/561:1643,down,downloaded,1643,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561,1,['down'],['downloaded']
Availability," attempting to run Alevin on [https://support.10xgenomics.com/single-cell-gene-expression/datasets/1.1.0/cd14_monocytes](url), with the 10x v1 wrapper, the initialization seems to go smoothly then Alevin produces the following:. ```; [2018-09-13 11:41:47.586] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-13 11:41:47.586] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-13 11:41:47.593] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-13 11:41:47.593] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-13 11:41:47.593] [jointLog] [info] Mapping rate = 0%; ```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:; A downloaded binary Salmon v0.11.2 was executed using the v1 wrapper script compiled locally in a Salmon specific Conda environment. The GRCh38.p12 reference was used. Dataset is linked above in bug description. . Full command used:; `~/bin/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -1 read-I1_*.fastq.gz -2 read-RA_*.fastq.gz -r read-I1_*.fastq.gz --gemcode -i ../../../index_15_pc -p 10 -o ../../alevin_15_pc --tgMap ../../../txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; `; Full terminal output:. ```; (Salmonenv) @compute-1-16: ~/Documents/PBMCStem/cd14/fastqs/flowcell1 $ ~/bin/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -1 read-I1_*.fastq.gz -2 read-RA_*.fastq.gz -r read-I1_*.fastq.gz --gemcode -i ../../../index_15_pc -p 10 -o ../../alevin_15_pc --tgMap ../../../txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; TEMPDIR is /tmp/tmp.fyLlOm2tjU; Running command [salmon alevin -l ISR ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:1073,down,downloaded,1073,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['down'],['downloaded']
Availability," below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz. * Which read files were used?; Files used for salmon quant are attached (*fq.gz). * Which which program options were used?; None specifically was invoked to run salmon.; I am running salmon on a cluster (Linux 3.10.0-957.el7.x86_64 x86_64). **Expected behavior**; A clear and concise description of what you expected to happen. I expect the salmon quant to align and quantify the reads. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 1) Attaching the screenshot in the zipped folder.; 2) Attaching the screenshot of the con",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/561:1738,down,download,1738,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561,1,['down'],['download']
Availability," bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Can't find gene mapping for : PB.40054.21 w/ index 81766; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Txp to Gene Map not found for 52191 transcripts. Exiting; ```. What's wrong?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/540:1993,error,error,1993,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability," bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the fastq files are as follows:; `$ zcat SRR6327122_1.fastq.gz |head -n 4`; @SRR6327122.1 1 length=36; CTGATCCT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:1151,avail,available,1151,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['avail'],['available']
Availability," but 193 were matched by sequences in the reference file provided.; [2020-07-04 15:10:17.047] [puff::index::jointLog] [info] Replaced 151,122,983 non-ATCG nucleotides; [2020-07-04 15:10:17.047] [puff::index::jointLog] [info] Clipped poly-A tails from 1,825 transcripts; wrote 344371 cleaned references; seqHash 256 : a4437735d0f94862f3c5321f8541b52b3e063d99afd1c4adaacc6b23ad10cc00; seqHash 512 : 29ef1f67a252009538c30d22ab52f1aae09605f9cd6eb731cb5866275eeb4f50917c409fdac10c5da1a6396687c8d3da64ab33dc7cb426dba961639385ce7040; nameHash 256 : 120179531963e6930022681ba9f4226ad0871ca0f6ae01f6c16be496fee9e03f; nameHash 512 : 3ba5b8d011fe981bf67b581cb6d3d83ae1b8d7885c868b7ab634bbf86448889fcc246b9e65374b79270f6d11d5a71ac6335910fcda2b1b9e86bcafe1ae3ae89f; [2020-07-04 15:10:22.800] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-07-04 15:11:07.094] [puff::index::jointLog] [info] ntHll estimated 2630714644 distinct k-mers, setting filter size to 2^36; error: Can't open a temporary file; error: Can't read the input file; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory /scratch/jl2e19/salmon_index; size = 0; -----------------------------------------; | Loading contigs | Time = 84.402 us; -----------------------------------------; size = 0; -----------------------------------------; | Loading contig boundaries | Time = 30.909 us; -----------------------------------------; Number of ones: 0; Number of ones per inventory item: 512; Inventory entries filled: 1; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] contig count for validation: 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [inf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:16019,error,error,16019,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,2,['error'],['error']
Availability," concise description of what the bug is.; The new updates to the `cmd_info.json` file result in an extra `:` at the end of `""salmon_version:""` inside the quotes. This results in the json file being read in with the header of that entry being `salmon_version:` when it should be `salmon_version`. . Note that this was found when running `salmon alevin` in the `--rad` or `--justAlign` mode and we have not tested if this is also the case when running only `salmon alevin`. . **To Reproduce**; Steps and data to reproduce the behavior:; We ran alevin-fry v0.4.1 starting with `salmon alevin` using `--rad` on single-cell data in the salmon biocontainer and that led to the `cmd_info.json` file being output with the extra `:` on salmon_version. . The biocontainer that we used was: quay.io/biocontainers/salmon:1.5.2--h84f40af_0 . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; used the biocontainer ; * Which reference (e.g. transcriptome) was used?; used the splici index following the alevin-fry tutorial ; * Which read files were used?; * Which which program options were used?; ```; salmon alevin -l ISR --chromiumV3 --dumpFeatures --rad; ```. **Expected behavior**; A clear and concise description of what you expected to happen.; We would expect that the extra `:` would not be included to be consistent with previous versions of salmon. ; <img width=""325"" alt=""Screen Shot 2021-07-29 at 12 35 38 PM"" src=""https://user-images.githubusercontent.com/54039191/127538599-206d5e71-cb7a-4a82-8064-4e92e12ee892.png"">. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add an",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/691:1108,down,downloaded,1108,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/691,1,['down'],['downloaded']
Availability," configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:5902,error,error,5902,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,4,['error'],['error']
Availability," data to reproduce the behavior:; Following steps as specified in guide. Assigning prefix to point to different installation directory and have tried passing in boost location and telling cmake to fetch boost but both result with the same error. . Specifically, please provide at least the following information:; `[ 91%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:47: error: parameter declared ‘auto’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:1261,error,error,1261,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability," different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. In addition, I am only using trimmed paired-end reads of 100bp. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't receive any errors during these runs, just the results of Gene C and Gene D varying for a reason I cannot pinpoint.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/523:2041,error,errors,2041,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/523,1,['error'],['errors']
Availability," echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test12/${ID} 2> logs/strace_test12_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. Again, here is the `strace` output for task 1 (411 lines):. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENOENT (No such file or directory); stat(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipelin",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:79074,echo,echo,79074,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888,1,['echo'],['echo']
Availability," first column will be the per CB level mapping rate i.e. `#mapped reads/#raw reads`. If you wan't absolute values for per-CB reads and mapped reads, it should be in the file `filtered_cb_frequency.txt` and `mappedUMI.txt` respectively.; * `re: cellranger subsampling:` Correct me if I am wrong, when you say cellranger subsampling, do you mean the `cellranger aggregate` pipeline? It's possible you are talking about some other step which I am not aware of but if it's `aggregate` then I think it happens downstream of all the quantification. Indeed coverage bias correction is an important part of the aggregation step but in general it's not the only one and that's why we recommend using the `Seurat` package downstream of the Alevin quantified matrices. We will be more than happy to write a tutorial on, ""how to perform batch correction downstream of Alevin"" but in summary the following steps would be the gist of the process.; - Use Alevin w/o any modification to the `fastq` on both of your sample to generate the gene count matrices. (We have made a major upgrade to the Alevin. We'd recommend using [v0.12.0-alpha](https://github.com/COMBINE-lab/salmon/tree/v0.12.0-alpha) for now, we are planning to make an official release before the end of this week, currently you can use pre-release. Unfortunately, not available on conda yet).; - Import Alevin count matrices into R using [this](https://combine-lab.github.io/alevin-tutorial/2018/alevin-seurat/) tutorial .; - Use [this](https://satijalab.org/seurat/immune_alignment.html) to perform the batch correction. ; We do realize it's currently complicated to use things downstream of Alevin and are working constantly on improving the overall pipeline to make the analyses as smooth as possible. If you happen to write a tutorial of your own on doing the analyses, we'd be happy to include that in Alevin tutorial page. However, if you get stuck with any of the above steps do let us know, we'd be more than happy to help in that front too.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468:2449,avail,available,2449,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433169468,4,"['avail', 'down']","['available', 'downstream']"
Availability," have some answers just to let you know what happened.; All the best,; Grant. Grant R. Cramer; Professor; Department of Biochemistry and Molecular Biology, Howard Building Room 205, Mail Stop 330; University of Nevada, Reno; Reno, NV 89557; (775) 784-4204; cramer@unr.edu<mailto:cramer@unr.edu>; http://www.ag.unr.edu/cramer/. On Mar 22, 2018, at 6:21 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @grantcramer<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fgrantcramer&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=w1ED%2B5ZBUY6Z8fTiIs62IZJizv0HcvVzw8CtfEdK32E%3D&reserved=0>,. I was able to successfully index and map against the fasta file you link above (on linux). I was also able to index and map against the index on OSX, using the salmon from bioconda (v 0.9.1). So, I'm not yet able to reproduce this. It seems the file you uploaded for your pre-built index is no longer available, so I couldn't try that out. I'd be happy to give it a try if you can put it up on dropbox or some such. Otherwise, I wonder if there could be some sort of binary compatibility issue. Did you build the index on the same machine you're quantifying on? The OSX I tested on is 10.13.1. Best,; Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FCOMBINE-lab%2Fsalmon%2Fissues%2F209%23issuecomment-375509050&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=5XDT2ix1q1Uz%2B3kTchI%2B5K9Hzu7UuGkyQAz8KB9ko4o%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAj0RizznzcCphH-HJ9Q8uXvndQ4Lsg9Oks5thE43gaJpZM4Sw28q&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bf",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375513800:1303,avail,available,1303,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375513800,1,['avail'],['available']
Availability," help me with that, but if you have thoughts, I'd appreciate them! Anyway, I decided arbitrarily to use the long-read BAMs as input to Salmon. ### Bug description; Secondly, as discussed a little in #104 , I keep running into:; `Transcript NM_032515.5 appears in the reference but did not appear in the BAM`; and; `Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffread to generate a new transcriptome fasta as follows:; `gffread -w salmon_fix.fa -g chm13v2.0.fa chm13v2.0_RefSeq_Liftoff_v5.1.gff3`. I reran the above salmon command using this new fasta file, but got the same error and warnings: there are transcripts in the BAM not in the fasta and vice versa. Again, the ""transcripts"" not in the fasta were chromosome names. I also tried with the short read SAM files, and still got the same error. I'm not sure how to fix either the warnings or the errors and would really appreciate your help. ### Software information; I used salmon v1.10.0 (though I also tried v1.10.1). In the case of v1.10.0, I had downloaded the pre-compiled binary, and in the case of v1.10.1, the admins of the HPC cluster I used installed it- not sure how. Regardless, all the runs were on HPC clusters, which run on Linux CentOS (I use two different HPC clusters, depending on their availability). Cluster1:; ```; $ uname -a; Linux rescomp1.hpc.in.bmrc.ox.ac.uk 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; -bash: lsb_release: command not found; ```. Cluster2:; ```; $ uname -a; Linux htc-login02 4.18.0-348.7.1.el8_5.x86_64 #1 SMP",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/863:2210,error,error,2210,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863,1,['error'],['error']
Availability," here with alevin, so it would mis-detect cells like the shifted ones you pasted above. For SPLiT-seq, we do know exactly which barcodes go into the wells, however, so it is technically possible to restrict based on all possible known combinations of barcodes instead and be more positionally flexible. But deciding how many indel bases are allowable, and presumably doing multiple passes through the data to establish an include-list could be time-consuming. Further, the zUMIs developer rightly mentions [in this thread](https://github.com/sdparekh/zUMIs/issues/63) that there are likely going to be _many_ unused barcode combinations this way, so lots of time could be spent looking for ""cells"" that don't actually exist in the data. The authors of the paper from which our test dataset was derived describe in their methods using a Drop-seq computational framework, so I'm not sure which approach theirs is more similar to. . The simplest approach here is certainly the automatic detection, but it will come at the cost of losing meaningful reads to frameshift errors. . My guess is this falls well out of the scope of alevin, but if you're interested in improving on that, there may be a middle ground between the two approaches above, one that I'm not sure if your group or others have attempted for other methods: we could essentially do a 2-pass barcode detection. The first pass would restrict based on positions like we're already doing, and establish an include-list of possible barcodes seen in the data. Then we could pass through the barcode sequences a second time, looking only for those sequence combinations, but allowing 1-2bp flexibility in the positions they occur, potentially rescuing some of the ones missed during the first pass. This would get around the issue of searching for thousands (or more) barcodes that never exist. . However, for your above sequences in red, we would still need to somehow collapse the barcodes `GATAGACA`, `ATAGACAT`, and `ATAGACAG`, but perhaps t",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-985554883:1307,error,errors,1307,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-985554883,2,['error'],['errors']
Availability," less than equal to the k-mer length of 28 (perhaps after poly-A clipping); [2021-12-24 17:32:49.337] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000196221.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-12-24 17:32:57.126] [puff::index::jointLog] [critical] The decoy file contained the names of 52 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [2021-12-24 17:32:57.224] [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **Expected behavior**; I followed the instructions, I don't think I should be getting this error?; I don't understand why I have only 52 decoys (basically the whole genome), and why zero were matched in the reference file provided. . If I look in `gentrome.fa` I do find the decoys; ```; zgrep ""chr8"" /no_backup/indexes/salmon/mm10/gentrome.fa ; >chr8; ```; I do not want to retain duplicated transcripts so the `--keepDuplicates` flag is something I would want to avoid. **Desktop (please complete the following information):**. ```; uname -a; Linux ant-login6.linux.crg.es 3.10.0-514.16.1.el7.x86_64 #1 SMP Wed Apr 12 07:10:20 CDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-am",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731:3691,error,errors,3691,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731,2,"['down', 'error']","['downstream', 'errors']"
Availability," mm10, Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; * Which read files were used? 125-bases PE RNA-seq samples; * Which which program options were used? `-l A` and `-g`. **Expected behavior**; Transcript ID should be found, translated into GeneSymbol and used for gene-level abundance.; Instead the program fails to find transcript ID even though it exists exactly as expected. **Screenshots**; etc. For all genes.; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082416.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082417.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082418.1] in transcript <-> gene map; returning transcript as it's own gene`. **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; `Linux 3.10.0-1160.6.1.el7.x86_64 #1 SMP Tue Nov 17 13:59:11 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`; LSB Version: :core-4.1-amd64:core-4.1-noarch ; Distributor ID: CentOS ; Description: CentOS Linux release 7.9.2009 (Core) ; Release: 7.9.2009 ; Codename: Core. **Additional context**; This is a wonderful feature, and makes the need for downstream analysis with `tximoprt` redundant. PLEASE HELP :); Attaching `head` of `quant.sf`, `quant.gene.sf`, `transcript_to_id_mm10` files. Identical transcript ID can be easily seen in both files.; THANK YOU; [transcript_to_id_mm10.head.txt](https://github.com/COMBINE-lab/salmon/files/5739701/transcript_to_id_mm10.head.txt); [quant.genes.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739703/quant.genes.head.sf.txt); [quant.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739704/quant.head.sf.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/607:2509,down,downstream,2509,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/607,2,"['down', 'redundant']","['downstream', 'redundant']"
Availability," model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; ```; above warning repeated multiple times for different reads. ```; [2024-04-09 21:53:51.012] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 13013) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; /var/lib/slurm/slurmd/job14839922/slurm_script: line 27: 419663 Segmentation fault (core dumped) salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant. ```. **Additional context**; The bam files were generated from ONT direct RNA SQKRNA004 kit reads aligned with minimap2. I have previously trialled running the above command on a single bam file and it seemed to have worked.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:7421,error,error,7421,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,3,"['error', 'fault']","['error', 'fault']"
Availability," much appreciated. thank you. ; determining read length; Trimming reads; This is cutadapt 4.2 with Python 3.10.8; Command line parameters: -m 30 -u 18 -u -17 -o ./subset_SRR12820270_trimmed.fq subset_SRR12820270.fastq; Processing single-end reads on 1 core ...; Finished in 99.186 s (2.870 µs/read; 20.90 M reads/minute). === Summary ===. Total reads processed: 34,554,336. == Read fate breakdown ==; Reads that were too short: 778,286 (2.3%); Reads written (passing filters): 33,776,050 (97.7%). Total basepairs processed: 2,555,642,890 bp; Total written (filtered): 1,335,316,421 bp (52.2%); Salmon; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//default }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR12820270_trimmed.fq }; ### [ output ] => { salmonRes_SRR12820270 }; Logs will be written to salmonRes_SRR12820270/logs; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant --help; Exiting.; [2023-02-27 15:21:11.968] [jointLog] [info] setting maxHashResizeThreads to 5; [2023-02-27 15:21:11.968] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-27 15:21:11.969] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-27 15:21:11.970] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-27 15:21:11.970] [jointLog] [info] parsing read library format; [2023-02-27 15:21:11.971] [jointLog] [info] There is 1 library.; ./salmonRes_SRR12820270/quant.sf ; Error in geneIndexList[[i]] : subscript out of boun",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/833:1151,Error,Error,1151,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833,1,['Error'],['Error']
Availability," on building index process. **To Reproduce**; Steps and data to reproduce the behavior:. wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/cdna/Mus_musculus.GRCm39.cdna.all.fa.gz ; wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; grep ""^>"" <(gunzip -c Mus_musculus.GRCm39.dna.primary_assembly.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Mus_musculus.GRCm39.cdna.all.fa.gz Mus_musculus.GRCm39.dna.primary_assembly.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.8.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable. * Which reference (e.g. transcriptome) was used?; downloaded executable; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. salmon-1.8.0_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index; Version Info: This is the most recent version of salmon.; index [""Mus_musculus.GRCm39_v1.8.0_decoy.index""] did not previously exist . . . creating it; [2022-06-01 18:13:38.986] [jLog] [info] building index; out : Mus_musculus.GRCm39_v1.8.0_decoy.index; [2022-06-01 18:13:38.986] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178537.2], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178862.2], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2022-06-01 18:1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783:1233,down,downloaded,1233,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783,1,['down'],['downloaded']
Availability," only 12; > libraries for each in the directory, which is why I got confused when it; > said 13. I will try putting in all of the file names and let you know how; > it goes. Thank you for all of your help.; >; > Sara; >; > [2019-07-29 15:58:39.034] [jointLog] [info] Fragment incompatibility prior; > below threshold. Incompatible fragments will be ignored.; > [2019-07-29 15:58:39.034] [jointLog] [info] Usage of --validateMappings; > implies use of minScoreFraction. Since not explicitly specified, it is; > being set to 0.65; > [2019-07-29 15:58:39.034] [jointLog] [info] Usage of --validateMappings,; > without --hardFilter implies use of range factorization.; > rangeFactorizationBins is being set to 4; > [2019-07-29 15:58:39.034] [jointLog] [info] Usage of --validateMappings; > implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; > [2019-07-29 15:58:39.034] [jointLog] [info] parsing read library format; > [2019-07-29 15:58:39.034] [jointLog] [error] Failed to successfully parse; > any complete read libraries. Please make sure you provided arguments; > properly to -1, -2 (for paired-end libraries) or -r (for single-end; > libraries), and that the library format option (-l) *comes before* the read; > libraries.; >; > On Mon, Jul 29, 2019 at 4:06 PM Avi Srivastava <notifications@github.com>; > wrote:; >; >> Oh Sorry about that what I meant was the salmon.log file or the the; >> meta-info.json file created by salmon in the output directory. You can; >> check what files salmon is detecting it seems there are 12 files in the; >> mate1 and 13 files in the mate2. Can you confirm there are 13 pairs of file; >> in that directory and their regex is same as you are using ? Can you also; >> try putting the names of the file instead * as regex ?; >>; >> —; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub; >> <https://github.com/COMBINE-lab/salmon/issues/408?email_source=notifications&email_token=AEHDXAA5DH",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408#issuecomment-516521791:2976,error,error,2976,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408#issuecomment-516521791,1,['error'],['error']
Availability," positions. processed 263000000 positions. processed 264000000 positions. processed 265000000 positions. processed 266000000 positions. processed 267000000 positions. processed 268000000 positions. processed 269000000 positions. processed 270000000 positions. processed 271000000 positions. processed 272000000 positions. processed 273000000 positions. processed 274000000 positions. processed 275000000 positions. processed 276000000 positions. processed 277000000 positions. processed 278000000 positions. processed 279000000 positions. processed 280000000 positions. processed 281000000 positions. processed 282000000 positions. processed 283000000 positions. processed 284000000 positions. processed 285000000 positions. processed 286000000 positions. processed 287000000 positions. processed 288000000 positions. processed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 7.61947s; [2018-08-16 19:47:14.359] [jLog] [info] done building index; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:22868,avail,available,22868,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['avail'],['available']
Availability," protocols, it is usually the case that we get 1 read -> 1 transcript, even if we don't read the whole thing. We have tested the effect of this in ONT data with spike ins, and have verified that using `--noLengthCorrection` does generally lead to improved accuracy with respect to quantification estimates. We have informed ONT of this, and I would guess they may optimize the flags that are used soon (we have also developed an error model that works correctly for these long reads, and that should make it into the next release of salmon). Regarding the effect this has on the `NumReads` values reported by salmon, it's not as simple as with the `TPM` estimates. The length affects the assigned reads through the probabilistic model on which inference is done. With the length effect we have that P(f | t_i) ∝ P( position | f, t_i ) * P( alignment | f, t_i) --- forgetting the alignment term for the time being, we have that with length correction P( position | f, t_i ) ∝ 1 / l_i and without length correction the l_i term goes away. In other words, the probability of allocating reads has a term that depends on the effective length when the `--noLengthCorrection` flag is not passed, but that term goes away when it is passed. This is not quite as drastic as with TPM where the normalization includes the length directly in the normalization (note, however, that when the `--noLengthCorrection` flag is passed, this adjusts the TPM as well). Further, the `NumReads` is still better than TPM in this regard because it still encodes the effect size (i.e. `NumReads` will sum to the total number of aligned reads). Anyway TLDR: Passing the `--noLengthCorrection` flag *is* better for ONT data, though results without this flag are sub-optimal, they are not unusable. We have let ONT know about this, and I would suspect they will address it (perhaps they'll even accept a PR?). Finally, a long read error model has been created and will _hopefully_ make it to the next version of salmon. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/651#issuecomment-821995147:2240,error,error,2240,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/651#issuecomment-821995147,2,['error'],['error']
Availability," reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:1493,error,error,1493,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,1,['error'],['error']
Availability," result with the same error. . Specifically, please provide at least the following information:; `[ 91%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:47: error: parameter declared ‘auto’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:62: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:1496,error,error,1496,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability," run -it debian:testing; $ echo ""deb-src http://deb.debian.org/debian unstable main"" > /etc/apt/sources.list.d/10-debsrc.list; $ apt update; $ apt upgrade; $ apt build-dep salmon; $ wget https://github.com/COMBINE-lab/salmon/archive/refs/tags/v1.10.0.tar.gz; $ tar xaf v1.10.0.tar.gz; $ cd salmon-1.10.0; $ cmake -DCMAKE_BUILD_TYPE=Release -DUSE_SHARED_LIBS=TRUE -DBZIP2_LIBRARIES=-lbz2 -DBZIP2_INCLUDE_DIR=/usr/include -DLIBLZMA_INCLUDE_DIR=/usr/include/ -DLIBLZMA_LIBRARY=lzma -DCMAKE_MODULE_PATH=/usr/share/cmake/Modules -DTBB_WILL_RECONFIGURE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; # src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; index [""sample_salmon_quasi_index""] did not previously exist . . . creating it; [2023-03-10 11:56:01.434] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be rovided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-10 11:56:01.435] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-10 11:56:01.435] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers. [2023-03-10 11:56:01.441] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-10 11:56:01.441] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault (core dumped). Please note that `-DNO_IPO=TRUE` is not part of the above cmake call. I've added this to the packaging, but there is no difference. Please also note that I did *not* cloned the Git repository but have downloaded the release tarball since this is what we are packaging. Hope this helps tracking down the issue. Kind regards, Andreas.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1463708855:4789,fault,fault,4789,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1463708855,3,"['down', 'fault']","['down', 'downloaded', 'fault']"
Availability," salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:5112,Error,Error,5112,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability," subsampling the Fastq, did you sample randomly across the full Fastq or chose the top X reads. Yes, I did perform a random subsampling, ie. taking a read with a p probability while reading the fastq files, p being the subsampling coefficient I did mention (pE[0;1]). An implementation of this approach as an option during the transcript quantification would be great. I can provide you with the simple python script I use for the subsampling, but I am not sure if it is the proper way to subsample during alevin quantification. >when you say cellranger subsampling, do you mean the cellranger aggregate pipeline?. Yes, sorry for not clearly stating it. I did use the cellranger aggregate function indeed, which by default subsample the expression matrices with high sequencing depth depending on amount of mapped reads, if I understand well. >Use Alevin w/o any modification to the fastq on both of your sample to generate the gene count matrices. I already did that, in downstream analyses I have a batch effect issue related to the sequencing depth. >that's why we recommend using the Seurat package downstream of the Alevin quantified matrices. I have some experience with downstream analyses with Seurat, Pagoda, Scater, scanpy and a few other tools, and I am aware of batch correction methods like CCA or MNN. But that is not what I am looking for here. I did both CCA and MNN but I loose some important information in the resulting eigenspaces or corrected matrix. I believe the proper way to correct my batch effect is to simply fix the difference between my two libraries, ie. the sequencing depth in this case. As I explained in my first message, cellranger aggregate (subsampling based on the amount of mapped reads) works very well in my case, correct the effect without any loss or modification of important genes in our scientific question. Not CCA or MNN. I would like to be able to do the same from the alevin quantifications. So I am looking for a proper way to apply a correction be",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913:1053,down,downstream,1053,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433319913,2,['down'],['downstream']
Availability," the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; We have 60 samples made from very low RNA inputs (cell captures) so the libraries were made with Ovation Solo RNAseq kit from Tecan. 150 PE. One of the sample finished fine (but mapping rate 21%) but our nextflow pipeline crashed on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can send",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/668:1008,fault,fault,1008,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668,1,['fault'],['fault']
Availability," the right end of the transcript which is inconsistent with the coverage profile and, as hoped, salmon did not assign any reads to that variant. So, in these two scenarios the default options produce nice results in line with our human intuition. 2. **Failure scenario with default options:** ; ![PDI1_example](https://user-images.githubusercontent.com/10292386/86509895-3df36600-bda0-11ea-8f0b-df0de4fefa31.png); <img width=""383"" alt=""PDI1_table"" src=""https://user-images.githubusercontent.com/10292386/86509897-40ee5680-bda0-11ea-9566-9f2bdab464f0.png"">. In this example there are four genes (oriented in the same direction) with wildly different expression levels. I added a ""PDI1_SuperTranscript"" which stretches from the 5' end of PDI1 to the 3' end of POF1 (so, all reads from all 4 genes would multimap to the super transcript). This is a contrived example to illustrate the technical details, but you could imagine similar biological scenarios, especially regarding splicing isoforms. With the default options, you get the counterintuitive result that all of the reads from just MGR1 and POF1 (the two lowest abundance transcripts) are assigned to the super transcript. EMC1 loses ~50% of its reads to the super transcript, and PDI1 only loses ~10%. I'm not showing it, but if you remove the default PDI1 transcript from the index (so it's just the super transcript + the 3 genes MGR1/EMC1/POF1), all three of them lose all of their reads to the super transcript... meaning that whether or not EMC1 gets assigned any reads depends entirely on the presence of a non-overlapping gene, PDI1, in the salmon index. This is definitely at odds with our intuition from looking at the coverage plots, but makes sense when you break all the transcripts down to a simple reads per kb equation. As before, if you turn off length modeling then all of the reads get assigned to the super transcript. I hope this was insightful and cleared up the issue a bit. Feel free to e-mail or reply here. Best,; Jason",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/514#issuecomment-653747847:6637,down,down,6637,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514#issuecomment-653747847,2,['down'],['down']
Availability," to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Re",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:1550,down,downloaded,1550,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,1,['down'],['downloaded']
Availability," tools. . I have some split-seq data (from Parse Bio) that ran through the Parse Bio pipeline already (1 moving part at a time). I am trying to run it through Alevin and it keeps failing with printing to the screen:. > [2023-08-17 22:13:22.207] [alevinLog] [info] Done barcode density calculation.; > [2023-08-17 22:13:22.207] [alevinLog] [info] # Barcodes Used: 15722231 / 15722593.; > [2023-08-17 22:13:22.910] [alevinLog] [info] Total 545(has 201 low confidence) barcodes; > [2023-08-17 22:13:23.660] [alevinLog] [info] Done True Barcode Sampling; (some lines later); > [2023-08-17 22:14:04.046] [jointLog] [info] Computed 0 rich equivalence classes for further processing; > [2023-08-17 22:14:04.046] [jointLog] [info] Counted 0 total reads in the equivalence classes; > [2023-08-17 22:14:04.047] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2023-08-17 22:14:04.083] [jointLog] [info] Mapping rate = 0%. It ultimately dies with a floating point error, probably for dividing by 0 somewhere. . The command I'm running is (and note that I have r1 and r2 swapped, per some other guidance. It dies earlier during barcode processing otherwise):. > salmon alevin -i /ref/gencode.v43.transcripts/ -l ISR -1 r2.fastq.gz -2 r1.fastq.gz -p 30 --splitseqV2 --tgMap /ref/gencode.v43_full.txMap -o salmon_output --expectCells 400. I tried to make it simpler and simpler, so that's a salmon index I made myself with no decoys, just the gencode transcript fasta with the software version I'm trying to run (salmon 1.10.2, from the combinelab/salmon docker hub), gencode v43 (I know, it's a version behind, but it's what I'm using elsewhere...) and hg38. It's handling the barcodes fine and recovering approximately the right amount (it's a sub-library with a few hundred cells to check the quality of the library before sequencing the full experiment). But it's failing to quantitate any of the reads. Oddly, just quantitating the read1 file with; > salmon quant",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/867:1043,error,error,1043,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/867,1,['error'],['error']
Availability,"![image](https://user-images.githubusercontent.com/33716378/100950925-6bf3f680-3548-11eb-9c5b-bdc1a5d6ce7f.png); i get this information when i use the command : salmon index ; can anybody have the same problem,how should i do with these error; thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/599:237,error,error,237,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/599,1,['error'],['error']
Availability,![segmentation fault](https://user-images.githubusercontent.com/32517940/45555058-bd97f580-b805-11e8-8432-5d13c989bb3f.png),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421369284:15,fault,fault,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421369284,1,['fault'],['fault']
Availability,"""Bus error: 10"" or ""Segmentation fault: 11"" with version 0.10 and --validateMappings",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/228:5,error,error,5,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228,2,"['error', 'fault']","['error', 'fault']"
Availability,"""Wrong whitelist provided"" Error Message",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682:27,Error,Error,27,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682,1,['Error'],['Error']
Availability,"""[ERROR] Transcript IDs are not in sorted order"" encountered during processing of single-end library",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/265:2,ERROR,ERROR,2,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265,1,['ERROR'],['ERROR']
Availability,"""[error] Can't find right Boundary."" with --expectCells and drop-seq data",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362:2,error,error,2,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362,1,['error'],['error']
Availability,"""salmon index was invoked improperly. "" Error",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/767:40,Error,Error,40,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/767,1,['Error'],['Error']
Availability,"""you are using an empty matrix"" error, seemingly during bias correction (--biasCorrect)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/5:32,error,error,32,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5,1,['error'],['error']
Availability,"# tl;dr; - `salmon alevin` returns an error if the cell barcode length is > 31 base pairs; - This blocks me from using `salmon alevin` for a novel scRNA-seq chemistry that has a 34 base pair cell barcode.; - Previously the `salmon alevin` maximum cell barcode length was increased from 20 base pairs to 31 base pairs. https://github.com/COMBINE-lab/salmon/discussions/629; - Could you please increase the maximum cell barcode length again?; - Or provide guidance on how I should do this in my own fork of salmon?. # Summary. This bug primarily related to alevin (single-cell mode). **Describe the bug**. **To Reproduce**; ```; salmon alevin; -i /path/to/salmon_index ; -p 16 ; -l ISR; --read-geometry 2[1-100] ; --bc-geometry 1[1-34] ; --umi-geometry 1[35-44] ; --sketch ; -1 /path/to/r1.fastq ; -2 /path/to/r2.fastqs; -o /output/path ; --tgMap /path/to/t2g.tsv; ```. Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Salmon version`v1.10.1`; * How was salmon installed? -> Compiled; * Encountered this error when running a feature barcoding analysis following this tutorial https://combine-lab.github.io/alevin-fry-tutorials/2021/af-feature-bc/. **Expected behavior**; Salmon alevin does not error out when the cell barcode length is 34 base pairs. **Screenshots**; Error log; `[2024-06-17 22:00:25.466] [alevinLog] [error] Barcode length (34) was not in the required length range [1, 31].`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/943:38,error,error,38,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/943,5,"['Error', 'error']","['Error', 'error']"
Availability,"## Describe the bug; When I run the following command:; ```; salmon quant --threads 1 --libType=U -i index -r SRR493367.fastq.gz -o SRR493367; ```. I get the following error(s) even though the same version of kallisto was used for the indexing & quantifiation:; ```; Encountered exception [JSON Parsing failed - provided NVP (SeqHash512) not found] when loading index.; The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version.; ```. ## To Reproduce; - Install docker ; - Download transcriptome:; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.transcripts.fa.gz; ```; - Run docker container (warning 2GB):; ```; docker run -v $PWD -w $PWD:$PWD -it lifebitai/rnaseq-nf-dseq2 bash; ```; - Download reads (warning reads are 2.3GB:; ```; fastq-dump SRR493367; ```; - Index transcriptome:; ```; salmon index --threads 1 -t gencode.v27.transcripts.fa.gz -i index; ```; - Run quantification cmd above. <br />; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.12.0; * How was salmon installed? Download precompliied binary and made Dockerfile with the following:; ```Dockerfile; COPY ./salmon-0.12.0_linux_x86_64/bin /usr/local/bin; COPY ./salmon-0.12.0_linux_x86_64/lib /usr/local/lib. RUN chmod -R u+x /usr/local/bin. ENV PATH=""$PATH:/usr/local/bin""; ```; * Which reference (e.g. transcriptome) was used? gencode.v27.transcripts.fa.gz; * Which read files were used? SRR493367.fastq.gz; * Which which program options were used? See above. I encountered this error when running this [Nextflow pipeline](https://github.com/PhilPalmer/RNASeq-nf-dseq2). More details can be found [here](https://deploit.lifebit.ai/public/jobs/5c6eca93758e8300a8740a59) . Any ideas what the problem may be? I am not sure if it is a problem with my installation of Salmon, the [data](https://www.ncbi.nlm.nih.gov/sra/?term=SRR493367), the command or something",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/345:168,error,error,168,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345,3,"['Down', 'error']","['Download', 'error']"
Availability,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:63,error,error,63,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,4,['error'],['error']
Availability,"## [ mates2 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz }; ### [ output ] => { preprocs_fastq/ERAP1_EAE_2270_S4 }; ### [ validateMappings ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; Logs will be written to preprocs_fastq/ERAP1_EAE_2270_S4/logs; [2021-08-20 18:19:52.590] [jointLog] [info] setting maxHashResizeThreads to 40; [2021-08-20 18:19:52.590] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 18:19:52.590] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 18:19:52.590] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 18:19:52.590] [jointLog] [info] parsing read library format; [2021-08-20 18:19:52.590] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file mnt/home/oconn341/salmon/indexs/alt_long_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /mnt/home/oconn341/salmon/bin/salmon quant was invoked improperly.; For usage information, try /mnt/home/oconn341/salmon/bin/salmon quant --help; Exiting. However, the versionInfo.json file is in my index folder, it only takes up 126 bits. I have tried generating index's w/ various k-mer lengths, w/ and w/o full genome decoy's, and allocating anywhere from 8-40Gb of RAM to the process. . I am not sure if my indexes are failing to generate. I get no output messaging saying they failed. . Here is the output from my last index build attempt w/o decoy's. Run time in the order of 15min or so:. [2021-08-20 18:04:11.408] [puff::index::jointLog] [warning] Removed 739 transcripts that were sequence duplicates of indexed transcripts.; [2021-08-20 18:04:11.408] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` fla",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:1630,Error,Error,1630,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['Error'],['Error']
Availability,"$ sudo make install; [ 7%] Built target libcereal; [ 14%] Built target libdivsufsort; [ 21%] Built target libstadenio; [ 28%] Built target libbwa; [ 36%] Built target libgff; [ 42%] Built target libspdlog; [ 47%] Built target ksw2pp_basic; [ 49%] Built target ksw2pp_sse4; [ 52%] Built target ksw2pp_sse2; [ 53%] Built target ksw2pp; [ 55%] Built target alevin_core; [ 69%] Built target salmon_core; [ 74%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Up-to-date: /usr/local/lib; -- Up-to-date: /usr/local/lib/libtbbmalloc.so; -- Up-to-date: /usr/local/lib/pkgconfig; -- Up-to-date: /usr/local/lib/libtbb.so; -- Up-to-date: /usr/local/lib/libtbb.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so.2; -- Up-to-date: /usr/local/lib/libtbbmalloc_proxy.so; -- Up-to-date: /usr/local/lib/libtbbmalloc.so.2; -- Up-to-date: /usr/local/bin/salmon; -- Up-to-date: /usr/local/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /usr/local/bin to your PATH; Please add /usr/local/lib to your LD_LIBRARY_PATH. $ make test; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.67 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.32 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425:1606,Error,Errors,1606,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393691425,2,['Error'],"['Error', 'Errors']"
Availability,")':; SalmonUtils.cpp:(.text+0x3911): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/551:2101,error,error,2101,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551,2,"['Error', 'error']","['Error', 'error']"
Availability,"* Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:28192,echo,echo,28192,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['echo'],['echo']
Availability,"*** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:22448,echo,echo,22448,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['echo'],['echo']
Availability,"**Bug primarily related to salmon (bulk mode)**. Using files from the tutorial (https://combine-lab.github.io/salmon/getting_started/) did not trigger the bug so I had to make an example with my data. ; C. reinhardtii annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.or",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/965:242,avail,available,242,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965,3,"['avail', 'down']","['available', 'download']"
Availability,"**Describe the bug**; Build problem. . Centos 6.9's boost is too old for salmon. There are RPMs for 1.5.7 installed. The library files are in /usr/lib64 and the include files are in /usr/include/boost157. These all work and are employed by numerous other packages without issues. Using devtoolset-4 (for a recent enough compiler) and a freshly built cmake 3.1.3 this command:. `scl enable devtoolset-4 '~/bin/cmake -DBOOST_ROOT=/usr/lib64 ../CMakeLists.txt'; `; fails with . ```; -- Could NOT find Boost; BOOST_INCLUDEDIR = ; BOOST_LIBRARYDIR = ; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This:; `scl enable devtoolset-4 '~/bin/cmake -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt; `; fails with:. ```; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This::; `scl enable devtoolset-4 '~/bin/cmake -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt'; `; fails the exact same way. Examined the CMakeLists.txt file, found the list of acceptable versions starts with 1.59.0. Crud. ; Tried modifying one line to:; ` find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); `; but it still failed. I am out of tricks. Is it really the case that Salmon cannot use 1.57.0?. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/236:570,Error,Error,570,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236,2,['Error'],['Error']
Availability,"**Describe the bug**; I am trying to quantify long reads mapped using minimap2 and I am getting a large number of the following messages:. ```; [2018-09-10 12:42:32.972] [jointLog] [warning] CIGAR = 106c16M1D7M1D8M1D26M1D55M3D8M1D32M2I14M1I8M1I52M1D14M1I2M1I19M1I1M1I7M11D28M1D5M3I40M1D5M1I5M1I6M1I13M147c; [2018-09-10 12:42:32.972] [jointLog] [warning] (in update()) CIGAR string for read [e6b69e2f-1bf2-4fd5-bace-d4d213164026] seems inconsistent. It refers to non-existant positions in the read!. ```. **To Reproduce**; * Which version of salmon was used?; salmon version: salmon 0.11.3, minimap2 version: 2.9-r720; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; * Which reference (e.g. transcriptome) was used?; Ensembl [cDNA collection](http://ftp.ensembl.org/pub/release-93/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz).; * Which read files were used?; Nanopore reads.; * Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l SF -a {input.bam} -o {output.tsv_dir}. **Desktop (please complete the following information):**; Ubuntu 14.04.5 LTS. **Additional context**; I am wondering whether the issue is caused by the fact that minimap2 does not include sequences in the secondary alignments. The errors disappear if I filter for primary alignments only.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/289:656,down,downloaded,656,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289,2,"['down', 'error']","['downloaded', 'errors']"
Availability,"**Describe the bug**; I followed every step of this tutorial to generate the index.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; Instead of using the mouse genomic data, I used the human data (https://www.gencodegenes.org/human/release_33lift37.html).; I invoked the indexing with the following command: ; **salmon index -t gentrome.fa.gz -d decoys.txt -p 8 -i salmon_index --gencode**; In the beginning everything seems to run smoothly, but a couple minutes in different error messages appear:; **error: Cant write to a temporary file**; **error: Cant read the input file**; followed by **Segmentation fault** and then the algorithm exits. ; Nonetheless a directory with different files regarding the indexing is beeing created.; However when I run; **salmon quant -i salmon_index/ -l A -1 ../../patients/patient001/fastq/S0012_1.fastq.gz -2 ../../patients/patient001/fastq/S0012_2.fastq.gz --validateMappings -o transcripts_quant**. it tells me that **The index version file salmon_index/versionInfo.json doesn't seem to exist**. **To Reproduce**; I installed salmon via bioconda, version 1.1.0. **Desktop (please complete the following information):**; Its running on CentOS 7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/503:501,error,error,501,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/503,4,"['error', 'fault']","['error', 'fault']"
Availability,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/860:74,down,downloaded,74,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860,9,"['Error', 'down', 'error', 'fault']","['Error', 'downloaded', 'error', 'fault']"
Availability,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/496:83,down,downloaded,83,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496,6,['down'],"['download', 'downloaded']"
Availability,"**Hi all,; Just an update:; I also got same warning message (as @rbenel talk about it here) when creating index along with decoy sequences I took @kvittingseerup's advice and made a transcripts.fa file by gffread command. Here is my input files and commend:; All gtf and genome references were downloaded from GENCODE: GRCh38.primary_assembly.genome.fa.gz, gencode.v36.annotation.gtf (CHR) and gencode.v36.transcripts.fa.gz.; commends:; grep ""^>"" <(gunzip -c GRCh38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat salmon_transcripts.fa.gz GRCh38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon-decoy-sa-index --gencode; warnings:**. [Step 1 of 4] : counting k-mers; [2020-12-26 10:47:50.823] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:50.973] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:52.758] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602|OTTHUMT00000485301.1|TRBD1-201|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:54.950] [puff::index::jointLog] [warning] Entry with header [ENST00000543745.1|ENSG00000255972.1|OTTHUMG00000168883|OTTHUMT00000401485.1|AC026333.1-201|AC026333.1|28|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:55.202] [puff::index::jointLog] [warning] Entry",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354991:294,down,downloaded,294,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354991,1,['down'],['downloaded']
Availability,"**Hi all,; Just an update:; I also got same warning message (as @rbenel talk about it here) when creating index along with decoy sequences I took @kvittingseerup's suggestion and made a transcripts.fa file by gffread command. Here is my input files and commend:; All gtf and genome references were downloaded from GENCODE: GRCh38.primary_assembly.genome.fa.gz, gencode.v36.annotation.gtf (CHR), gencode.v36.transcripts.fa.gz.; commends:; grep ""^>"" <(gunzip -c GRCh38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat salmon_transcripts.fa.gz GRCh38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon-decoy-sa-index --gencode; warnings:**; [Step 1 of 4] : counting k-mers; [2020-12-26 10:47:50.823] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:50.973] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:52.758] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602|OTTHUMT00000485301.1|TRBD1-201|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:54.950] [puff::index::jointLog] [warning] Entry with header [ENST00000543745.1|ENSG00000255972.1|OTTHUMG00000168883|OTTHUMT00000401485.1|AC026333.1-201|AC026333.1|28|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-12-26 10:47:55.202] [puff::index::jointLog] [warning] Entr",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354493:298,down,downloaded,298,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751354493,1,['down'],['downloaded']
Availability,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/141:607,error,error,607,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141,12,"['Error', 'error']","['Error', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)? Salmon. **Describe the bug**; I downloaded salmon-0.11.3-linux_x86_64.tar.gz file and extracted it. There is no makefile or install.sh files, just the bin. lib, sample_data. Therefore no any installation steps. The bin and lib were put in environment paths PATH and LD_LIBRARY_PATH.; When I run trinity command i get following error:. Trinity version: Trinity-v2.6.6; -ERROR: couldn't run the network check to confirm latest Trinity software version. Tuesday, September 11, 2018: 14:29:38	CMD: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/290:115,down,downloaded,115,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290,7,"['ERROR', 'Error', 'down', 'error', 'failure']","['ERROR', 'Error', 'downloaded', 'error', 'failure']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/320:362,down,downloaded,362,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/320,3,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.4; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; ensembl releases 103 and 87; * Which read files were used?; fastq files; * Which which program options were used?; quant --validateMappings --numBootstraps 50 --gcBias --seqBias. **Expected behavior**; A clear and concise description of what you expected to happen.; We expected to get the similar TPMs for a recalculation of a cohort of RNAseq data with a newer ensembl fasta release, but they were far off. **Desktop (please complete the following information):**; - RHEL7. **Additional context**; We also attempted to create our own fasta files using stringtie and scallop, but ran into the same issue as stated above.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/653:374,down,downloaded,374,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/653,2,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I am getting this error : Two references with the same name but different sequences: XR_001465382.2_LOC4; 21118_-. We require that all input records have a unique name up to the first whitespace character. But when I try to create a histogram of that reference it only shows 1 sequence with that name: ; grep 'XR_001465383.2_LOC421108' galGal6.gene+cluster+repBase+tRNA.fa.nodup | sort | uniq -c | awk '{printf(""%s\t%s\n"", $1, $2)}'; 1 >XR_001465383.2_LOC421108_-. **To Reproduce**; This is the code I used ; salmon index -t galGal6.gene+cluster+repBase+tRNA.fa.nodup -i SalmonIndexNodup -k 31. Specifically, please provide at least the following information:. * Which version of salmon was used?; I used v1.5.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Yes; * Which reference (e.g. transcriptome) was used?; Mouse (mm10); * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/683:126,error,error,126,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/683,2,"['down', 'error']","['downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I am getting this error when I try to update my index using salmon v1.4.0 or 1.5.1; Version Server Response: Not Found; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; However the index is working with salmon version 0.8.2 . **To Reproduce**; This is how I ran it:; salmon index -t galGal6.gene+cluster+repBase+tRNA.fa -i SalmonIndex --type quasi -k 31; ; This is the dropbox link to the galGal6.gene+cluster+repBase+tRNA.fa https://www.dropbox.com/s/nb39rpydanlxr3p/galGal6.gene%2Bcluster%2BrepBase%2BtRNA.fa?dl=0 file",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/694:126,error,error,126,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/694,2,"['Error', 'error']","['Error', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I can't run ""Quantifying in mapping-based mode"" in Salmon 1.8.0 for reads single-end.; Im not sure if the ""--libType"" (-l) argument is right...; The menssage that appear is ""Segmentation fault"" and the run finish. (following Screenshots). **To Reproduce**; Im executing the following command: salmon quant -i index -l A -r ../fastq_zip/SRR16620521.fastq.gz -o ../salmon_quant/. The ""index"" is my directory with my transciptome data and ""SRR16620521.fastq.gz"" is my file single-end. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.8.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon=1.8.0; * Which reference (e.g. transcriptome) was used? Sviridis_500_v2.1.transcript_primaryTranscriptOnly.fa.gz (Setaria viridis transciptome from Phytozome); * Which read files were used? SRR16620521.fastq.gz; * Which which program options were used? . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/87829929/236075390-07846634-fa21-4146-8a21-673947510a84.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/847:295,fault,fault,295,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/847,2,"['down', 'fault']","['downloaded', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed latest version of salmon through git clone for trinityrnaseq. When i run trinity using a command ""perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G' I am getting a message to install salmon. kindly give me a solution for this. **To Reproduce**; Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G. ______ ____ ____ ____ ____ ______ __ __; | || \ | || \ | || || | |; | || D ) | | | _ | | | | || | |; |_| |_|| / | | | | | | | |_| |_|| ~ |; | | | \ | | | | | | | | | |___, |; | | | . \ | | | | | | | | | | |; |__| |__|\_||____||__|__||____| |__| |____/. Trinity-v2.8.5. Left read files: $VAR1 = [; 'reads_1.fq'; ];; Right read files: $VAR1 = [; 'reads_2.fq'; ];; Trinity version: Trinity-v2.8.5; ** NOTE: Latest version of Trinity is v2.8.6, and can be obtained at:; 	https://github.com/trinityrnaseq/trinityrnaseq/releases. Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870.; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ ^C. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version18.04. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/452:673,down,downloaded,673,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/452,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/453:576,Error,Error,576,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453,2,"['Error', 'error']","['Error', 'errors']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Alevin. **Describe the bug**. Maybe more of a support request than a bug. . I've got some of what I suspect is lower-quality drop-seq data. Running Alevin with default parameters yields very low mapping rates, presumably because elbow-finding is failing. Here's the barcode rank plot, you can see why it's having trouble, you might see an elbow if you squint a bit. . ![Drop-seq](https://user-images.githubusercontent.com/5775915/57308423-3d006f00-70de-11e9-8c59-47e55d060035.png). I know from the source publication that we expect 278 cells in this case. . Supplying --expectCells yields the boundary error above. For this to work I need to break out the big guns and use --forceCells, yes? What I would really like is to try --expectCells first to allow Alevin to be a little bit intelligent, and if that fails to use --forceCells. Is that a sensible approach?. If so, could we a) have an informative error code on the boundary error above such that I can easily detect that error and re-submit with --forceCells, or b) if this is generically useful have a flag in Alevin to do it directly?. **To Reproduce**; Steps and data to reproduce the behavior:. - cDNA reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R2.fastq.gz; - barcode reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R1.fastq.gz; - transcript/ gene mapping as: [transcript_to_gene.txt](https://github.com/COMBINE-lab/salmon/files/3153221/transcript_to_gene.txt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; #",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362:688,error,error,688,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. I am using a version that was compiled in Trinity; module load conda/trinity-2.8.4; source activate trinity-2.8.4; salmon --version salmon 0.11.3. **Describe the bug**. @RG lines are at odds with binary encoded reference data ; Segmentation fault. **To Reproduce**; Steps and data to reproduce the behavior:. salmon quant -t Cp_cds.fa -l ISR -a SB1.bam -o salmon_SB1. **Summary** ; I mapped the reads to a de novo transcriptome assembly using BWA-mem. I then use Salmon to get counts for RNAseq analysis using the alignment based mode. This has worked well for the nine previous samples, but the last 3 samples throw the error above (different species and reference transcriptome assembly). Maybe a problem with the bam file? If no not sure how the read groups etc, could be a problem unless there is a problem with the fastq files. But they came from the same run/machine/lane (Illumina NextSeq 500) as six other samples that have not caused problems.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/323:327,fault,fault,327,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323,2,"['error', 'fault']","['error', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon (bulk mode). **Describe the bug**. For one of our 41 samples, salmon fails (quits, without any substantial output) when using the orphan recovery option (where Salmon attempts to try harder to pair up read alignments when one of the reads in a read pair fails to map properly). Given that it's only related to the orphan recovery option, and only one sample out of 41, I don't expect it'll affect our results in any substantial way, but I'm reporting this bug just in case it exposes other software issues that are more concerning. **To Reproduce**; Steps and data to reproduce the behavior:. * Which version of salmon was used?; * v1.10.0 (the latest release that had a compiled executable); * How was salmon installed (compiled, downloaded executable, through bioconda)?; * downloaded executable; * Which reference (e.g. transcriptome) was used?; * Gencode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:230,recover,recovery,230,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,4,"['down', 'recover']","['downloaded', 'recovery']"
Availability,**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon. **Describe the bug**; Running on a machine with 256GB of RAM the index builds without error but quant fails. **To Reproduce**; The input transcript file is 425Mb and I'm using salmon 0.14.1. This command ran successfully to index:. `/usr/local/common/salmon-0.14.1/bin/salmon index -t Trinity.fasta -i transcripts_index -k 31 -p 12`. And this one failed:. `/usr/local/common/salmon-0.14.1/bin/salmon quant -i transcripts_index -l IU -1 IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq -2 IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq --validateMappings -p 12 --output salmon_out`. But here's the output:. ```; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { transcripts_index }; ### [ libType ] => { IU }; ### [ mates1 ] => { IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq }; ### [ mates2 ] => { IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompati,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/426:180,error,error,180,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. The bug is primarily related to salmon, but I am using salmon to build an index for use with alevin-fry per the [alevin-fry tutorial](https://combine-lab.github.io/alevin-fry-tutorials/2021/improving-txome-specificity/). . **Describe the bug**; A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:698,error,error,698,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,2,"['Error', 'error']","['Error', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. alevin. **Describe the bug**; salmon alevin fails to output quants_mat.mtx.gz file when invoked with flags `-dumpMtx --keepCBFraction 1 --maxNumBarcodes 4294967295`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.14.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; human_GENCODEv29.tar.gz with decoys from README. **Expected behavior**. Save a quants_mat.mtx.gz file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/15719520/59559081-16730500-8fb5-11e9-8bbd-faf2b99a02e7.png). **Desktop (please complete the following information):**; - OS: Ubuntu 16.04; - Version; ```; uname -a; Linux desktop 4.15.0-51-generic #55~16.04.1-Ubuntu SMP Thu May 16 09:24:37 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; Distributor ID: Ubuntu; Description: Ubuntu 16.04.6 LTS; Release: 16.04; Codename: xenial. ```; Related to #377",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/379:401,down,downloaded,401,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/379,2,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon (bulk mode) latest binary (1.8.0) from github. **Describe the bug**; A clear and concise description of what the bug is. core dumped crash on building index process. **To Reproduce**; Steps and data to reproduce the behavior:. wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/cdna/Mus_musculus.GRCm39.cdna.all.fa.gz ; wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; grep ""^>"" <(gunzip -c Mus_musculus.GRCm39.dna.primary_assembly.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Mus_musculus.GRCm39.cdna.all.fa.gz Mus_musculus.GRCm39.dna.primary_assembly.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.8.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable. * Which reference (e.g. transcriptome) was used?; downloaded executable; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. salmon-1.8.0_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index; Version Info: This is the most recent version of salmon.; index [""Mus_musculus.GRCm39_v1.8.0_decoy.index""] did not previously exist . . . creating it; [2022-06-01 18:13:38.986] [jLog] [info] building index; out : Mus_musculus.GRCm39_v1.8.0_decoy.index; [2022-06-01 18:13:38.986] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178537.2], had length less than equal to the k-mer length of 31 (perha",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783:584,down,download,584,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783,1,['down'],['download']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; A clear and concise description of what the bug is. Running `salmon index` on a HPC cluster (called from a trinity perl script). After a while salmon is only idling. In the stderr I see:. ```; Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!; ```. The problem seems to be the available memory. On HPC systems one usually needs to specify a max amount of memory which is enforced (e.g. with ulimit). . If I give more memory to the job salmon finishes. . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. Salmon 1.1 installed through conda. I guess any data will do to reproduce as long as the memory limitations ar small enough. **Expected behavior**; A clear and concise description of what you expected to happen. Would be good if salmon would exit with a better error message and a non-zero exit code in such a case. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. CentOS 7. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/484:524,avail,available,524,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/484,3,"['avail', 'down', 'error']","['available', 'downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. **To Reproduce**. * Which version of salmon was used?. salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. * How was salmon installed (compiled, downloaded executable, through bioconda)?. bioconda. * Which reference (e.g. transcriptome) was used?. To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. * Which read files were used?. See above. * Which which program options were used?. I used the bash script from ; https://combine-lab.github.io/salmon/getting_started/. **Expected behavior**. I expected an output indicating successful quantification. **Screenshots**. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/317:155,fault,fault,155,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317,2,"['down', 'fault']","['downloaded', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; - Alevin. **Describe the bug**; I got the error copied below, it said to report on GitHub so I'm doing that. **To Reproduce**; Steps and data to reproduce the behavior:; - The Jupyter notebook I was using is in the attached zip file; [alevin-default-eduardo.zip](https://github.com/COMBINE-lab/salmon/files/2096615/alevin-default-eduardo.zip). Specifically, please provide at least the following information:. * Which version of salmon was used? ; Salmon 0.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed with bioconda; * Which reference (e.g. transcriptome) was used? ; This transcriptome: https://drive.google.com/open?id=1XcsFUxJM6XaYEKh9BYdUoAyJSlWJLIiW. ; It's a mouse transcriptome with 3 additional transcripts at the end; * Which read files were used?; * Which which program options were used?; `salmon alevin -lISR -1 ./H2_S5_L003_R1_001.fastq.gz -2 H2_S5_L003_R2_001.fastq.gz --chromium -i salmon_index -p 8 -o alevin_output --tgMap txp2gene.tsv`. **Desktop (please complete the following information):**; - OS: CentOS; - Version:; Linux login1 3.10.0-514.2.2.el7.x86_64 #1 SMP Tue Dec 6 23:06:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.3.1611 (Core); Release: 7.3.1611; Codename: Core. **Additional context**; ```; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/237:128,error,error,128,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237,2,"['down', 'error']","['downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Affects salmon (bulk mode) for sure. I don't know alevin. **Describe the bug**; totalCount_ is not initialized in Transcript constructors. In the vast majority of the cases it doesn't matter because the memory is initialized to 0 anyway, but for a very small fraction of the transcripts the totalCount gest initialized to some random value, which can lead to missed invocations of projectToPolytope in normalizeAlphas and writeAbundances. **To Reproduce**. Systematic. Effect might be more difficult to detect as you'd need a truth set. Dumping a trace of the totalCount_ might be easier. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.11.3 ans 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. N/A. compiled from scratch. * Which reference (e.g. transcriptome) was used?. * Which read files were used?. BAM input, generated by STAR, from proprietary data produced with Illumina instruments. * Which which program options were used?. --no-version-check --threads 1 --dumpEq --useEM --noErrorModel --noRichEqClasses --gcBias -l isr. **Expected behavior**. Accurate values for totalCount for all transcripts. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu 18.10, CentOs 7.5.1804. **Additional context**; Add any other context about the problem here. Attached patch for 0.13.1:. [Transcript.hpp.patch-0.13.1.txt](https://github.com/COMBINE-lab/salmon/files/3044728/Transcript.hpp.patch-0.13.1.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/355:835,down,downloaded,835,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/355,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin single-cell mode. **Describe the bug**; Hi, I bumped into a problem following this tutorial [https://combine-lab.github.io/alevin-tutorial/2018/output-format/](url) . It's the ""Reading Alevin’s bfh (big freaking hash) file"" section, where there are just 2 lines I should run. The problem is on the second line, ""parser.read_bfh()"" function. It throws me a `pandas.errors.ParserError: Error tokenizing data. C error: Expected 1 fields in line 110446, saw 20` . I tried diagnosing the problem and looked into the input bfh.txt file. The problem wasn't just line 110447, but many other lines that had more than 1 field. So the real question breaks down into: should the bfh.txt file have only 1 field per row (line)? If this is the case, then the input bfh.txt file is problematic. If not, then the parser function is problematic, as it should account for more than 1 field. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * 1.4.0; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * conda create -n salmon -c conda-forge -c bioconda salmon; conda activate salmon. * Which reference (e.g. transcriptome) was used?; * generated index via ""Protein-coding transcript sequences"" here : https://www.gencodegenes.org/human/ ; * generated the txp2gene.tsv file via ""Comprehensive Gene Annotation, Region: PRI"" here: ; https://www.gencodegenes.org/human/release_37lift37.html. * Which read files were used?; * 5k_pbmc FASTQ file from 10x: https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_v3; ; * Which program options were used?; `salmon alevin -l ISR -1 5k_pbmc_v3_S1_L001_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz -2 5k_pbmc_v3_S1_L001_R2_001.fastq.gz 5k_pbmc_v3_S1_L002_R2_001.fastq.gz 5k_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/650:457,error,errors,457,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650,4,"['Error', 'down', 'error']","['Error', 'down', 'error', 'errors']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin. **Describe the bug**; `Wrong barcode-end parameters`; `[2019-01-17 15:50:10.269] [jointLog] [error] wrong barcode-end parameters.; Please report this bug on Github`. **To Reproduce**; Steps and data to reproduce the behavior:; `./Software/salmon-0.12.0_linux_x86_64/bin/salmon alevin -l ISR ; -1 Data/Fastq/PBMC6_PolyTTrimmed.R2.fq.gz; -2 Data/Fastq/PBMC6_PolyTTrimmed.R1.fq.gz; --chromiumV3; --barcodeLength 11; --umiLength 12; --end 3; --debug; --validateMapping; --minScoreFraction 0.8; -p 10; -i Reference/GENCODE_v29_Human_SalmonIndex_0_12_0/; --tgMap Reference/GENCODE_v29_Human.genemap.txt; -o Quantifications/pbmc6_alevin_onecell_UMI12_3Prime/`. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.12.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloadable executable; * Which reference (e.g. transcriptome) was used? GENCODE V29; * Which read files were used? in house from 1CellBio data ; * Which which program options were used? see above command, but I suspect it's the `--end 3` causing issues. **Expected behavior**; No error to be thrown. **Screenshots**; NA. **Desktop (please complete the following information):**; - OS: RHEL ; - Version 7.3. **Additional context**; NA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/334:187,error,error,187,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/334,4,"['down', 'error']","['downloadable', 'downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both likely.; **Describe the bug**; Trying to build the new pufferfish index format, I receive a memory allocation error near the end of the index build process. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.99.0 beta1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded from Github release; * Which reference (e.g. transcriptome) was used?; gencode v25 with some ""extra"" stuff added - mainly introns for each unprocessed transcript.; * Which read files were used?; None; * Which which program options were used?; -p 8 (though I've used the default as well). **Expected behavior**; I expected the indexing process to complete. **Screenshots**; [pisces_bug.log](https://github.com/COMBINE-lab/salmon/files/3692191/pisces_bug.log). **Desktop (please complete the following information):**; - OS: Linux; - Version RHEL7; **Additional context**. I'm attempting to build an index that's quite large, and am very excited to try the new pufferfish graph-based index. Please let me know how I can help out - if it would be useful I can try to build the index using your standalone library as well.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/432:201,error,error,201,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/432,3,"['Down', 'down', 'error']","['Downloaded', 'downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both.; salmon index. **Describe the bug**; I want to build a murine index fo use Alevin later with a Chromium dataset. I downloaded the relevant files from Gencode, and followed the instructions at https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; It runs fine until:. index_decoys/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:68719476736; Pass Filling Filtering; 1 208; Error: Found an invalid character 'I' in sequence chr9; Segmentation fault. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.2.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded the executable. * Which reference (e.g. transcriptome) was used?; gencode.vM25.transcripts.fa.gz; GRCm38.primary_assembly.genome.fa.gz. grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat gencode.vM25.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. Ubuntu 20.04 LTS. **Additional context**; I understand that the problem seems to come from the genome. However, salmon should perhaps have a way to handle that.; In any case, seg fault are not ideal. Thank you for your great piece of kit though. Life saver for me since I cannot use Cellranger.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/521:207,down,downloaded,207,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/521,6,"['Down', 'Error', 'down', 'fault']","['Downloaded', 'Error', 'downloaded', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk mode. **Describe the bug**; We uses salmon with ver 0.8 in the beginning, later on we found that it could updated to the latest version. Then after we updated it through conda, the quantify amount was reduced from 200+ to 39. **To Reproduce**; `salmon index -t test.transcripts.fa -i test_index --type puff -k 31 ; salmon quant -l A -i test_index -g annotation.gtf -r test.ccs.fq.gz -z -o test > test.sam`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.8.1 to 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; through bioconda ; * Which reference (e.g. transcriptome) was used?; transcriptome. **Expected behavior**; what is the different between these two versions? We expected that the result would not have such different like this. And we don't know which one is more accurate. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/47863838/85987901-de542e00-ba20-11ea-916a-fe90ca18586f.png). ![image](https://user-images.githubusercontent.com/47863838/85986442-d4c9c680-ba1e-11ea-9b98-140559ee0149.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu Linux.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/542:655,down,downloaded,655,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/542,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is in alevin, single-cell mode. **Describe the bug**; The log shows that there are at least 50% percent reads has been thrown away, and the mapping rate was between 18.7%-19.1%. **To Reproduce**; Steps and data to reproduce the behavior:; Reference was indexed using transcripts without decoy, and command line parameters are described below; The genome was not published so I can't share with you that, and I'm sorry with that. Specifically, please provide at least the following information:; * Which version of salmon was used? ; salmon 1.4.0. * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Bioconda. * Which reference (e.g. transcriptome) was used? ; The reference genome is sequenced by ourselves, and it's a plant. Reference was indexed using transcripts without decoy. * Which read files were used?; my reads layout is paired end 150bp; Will the 150bp reads affect the pipeline, and if it will, how can I make it to 28bp R1 and 91bp R2, which is identical to cellranger makefastq output.; > R1: ; @A00582:424:HJYLGDSXY:3:1101:1090:1000 1:N:0:ACCGGCTC; TAACCAGGTCGAGTGAGTATTTAAGGCGCGCGGCGCACCAACGCACTCCCAACAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; > +; FFFFFFFFFFFFFFFFFFFFFFFFFFFF,,:,,FF:,,,::FF,,:F,,,,,,F:,,,:,::FF::::::,FFF:F:FF:FFFFFFF::FF::FF,F:F:FF:F,FFFF,:FF,FFFFF:,FF:::FF:FFF:FF:FF:FFFFFFFFFF:; > R2:; @A00582:424:HJYLGDSXY:3:1101:1090:1000 2:N:0:ACCGGCTC; NCCTAGAAGCAGCCACCCTTGAAAGAGTGCGTAATAGCTCACTGATCGAGCGCTCTTGCGCCGAAGATGAACGGGGCTAAGCGATCTGCCGAAGCTGTGGGATGTAAAAATACATCGGTAGGGGAGCGTTCCGCCTTAGAGAGAAGCCTC; > +; #FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFF::FFFFFFFFFF:FFFFFFFFFFFFF:FFFFFF:FFFFFFF:. * Which which program options were used?; `salmon alevin -l ISR -1 ../clean/sample_S1_L001_R1_001.fastq -2 ../clean/sample_S1_L001_R2_001.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/620:674,down,downloaded,674,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is related to salmon when used after umi tools deduplication. **Describe the bug**; Once deduplicated the bams with umi_tools (and previously sorted by coordinates) salmon gives the following warning: WARNING: Detected suspicious pair ---; The names are different:; read1 : XXXXXXXXX-YYYY:YYYY; read2 : XXXXXXXXX-ZZZZ:ZZZZ. **To Reproduce**; The used code is the following:. ""salmon_version"": ""1.10.1"",; ""targets"": ""../index/hg38/salmon/gencode.v45.transcripts.fa"",; ""libType"": ""A"",; ""seqBias"": [],; ""gcBias"": [],; ""posBias"": [],; ""threads"": ""16"",; ""dumpEq"": [],; ""numBootstraps"": ""50"",; ""alignments"": ""/media/storage/work/iiglesia/rnaseq/RESULTS/BAM_STAR_dedup/17932763_S28_Aligned_dedup.sorted.bam"",; ""output"": ""./aligned_salmon/17932763_S28"",; ""geneMap"": ""../index/hg38/salmon/mart_export.txt"",; ""gencode"": [],. When I have treid to use the same sample without deduplication and sorting salmon works good. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.v45.transcripts.fa; * Which read files were used? BAM files; * Which which program options were used? it can be seen above. **What I expect**; I want to know how could I use salmon after umi_tools or to account for UMI deduplication. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version: 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/930:1147,down,downloaded,1147,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/930,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It occurs when I run Salmon. **Describe the bug**; When I try to index I get an error; ```; [2021-03-30 14:29:34.670] [puff::index::jointLog] [error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character.; ```; I asked for advice, and it was suggested that two entries in the fasta file had the same name. I tried loading all of the entry names into a computing language, and check that the number of unique names was identical to the total number (suggesting that this wasn't the case). **To Reproduce**; I required to re-run some RNA seq mapping from someone who left the lab, and gave me this script (I've asked them, they did not really know what got wrong). ```; conda create --name rnaseq -c bioconda salmon; conda activate rnaseq; conda install -c conda-forge -c bioconda salmon=1.4.0; mkdir -p reference . # reference genome; wget -O reference/genome.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_genomic.fna.gz. # reference Transcriptome; wget -O reference/transcripts.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_cds_from_genomic.fna.gz. # prepare file with ""decoy"" sequences; zcat reference/genome.fa.gz | grep ""^>"" | cut -d "" "" -f 1 | sed -e 's/>//g' > reference/decoys.txt. # concatenate the two; cat reference/transcripts.fa.gz reference/genome.fa.gz > reference/gentrome.fa.gz. # Try to create index, this gives problems; salmon index -t reference/gentrome.fa.gz -d reference/decoys.txt -p 12 -i salmon_index --gencode -k 31; ```. The last one gives an error:; ```; Version Info: This is the most recent version of salmon.; [2021-03-30 14:29:34.652] [jLog] [info] building index; out : salmon_index; [2021-03-30 14:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/642:166,error,error,166,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642,2,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Neither, it's related to compilation. **Describe the bug**. While trying to compile the project I get the following error:; ```; $ make; [ 6%] Built target libcereal; [ 12%] Built target libdivsufsort; [ 18%] Built target liblzma; [ 23%] Built target libbz2; [ 29%] Built target libgff; [ 29%] Performing build step for 'libstadenio'; Making all in io_lib; Making all in progs; libtool: link: /usr/bin/cc -o convert_trace convert_trace.o ../io_lib/.libs/libstaden-read.a -lm -lpthread -llzma -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xf03): warning: the use of `tempnam' is dangerous, better use `mkstemp'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_huff':; compression.c:(.text+0xc0): undefined reference to `deflateInit2_'; compression.c:(.text+0x13b): undefined reference to `deflate'; compression.c:(.text+0x181): undefined reference to `deflateEnd'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_dehuff':; compression.c:(.text+0x2f7): undefined reference to `inflateInit_'; compression.c:(.text+0x371): undefined reference to `inflate'; compression.c:(.text+0x3b4): undefined reference to `inflateEnd'; collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libst",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:202,error,error,202,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No. **Describe the bug**; I ran `salmon quant` and the `lib_format_counts.json` file that was produced contained a `NaN` value which is not valid JSON. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.9.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. From our dockerfile:; ```; # Install Salmon; ENV SALMON_VERSION 0.9.1; RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; RUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # Create soft link `/usr/local/bin/salmon` that points to the actual program; RUN ln -sf `pwd`/Salmon-latest_linux_x86_64/bin/salmon /usr/local/bin/; RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # End Salmon installation.; ```. * Which reference (e.g. transcriptome) was used?. One we prepared. We got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/279:447,down,downloaded,447,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279,2,['down'],"['download', 'downloaded']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Related to Salmon. **Describe the bug**; my transcript file has a total of 119032 records:. [gao@bio reference]$ grep -c "">"" GRCm38.vM11.transcripts.ercc.Tg.fa; 119032. However, my salmon output has 117509 records:; [gao@bio KM25_salmon_quant.originalData.k21]$ wc -l quant.sf; 117509 quant.sf. How should I explain this?; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? ; I used salmon 0.13.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed on HPC; * Which reference (e.g. transcriptome) was used?; Mouse transcriptome; * Which read files were used?; RNAseq files; * Which which program options were used?; command line:. salmon quant -p 8 -i /data/Re-analysis/SalmonRun/reference/GRCm38.vM11.transcripts.ercc.Tg.fa.k21.index -g /data/Re-analysis/Salmon-Run/reference/tx2gene.gencode.v27.tabbed.csv --seqBias --gcBias -l A -1 read1.fastq.gz -2 read2.fastq.gz -o /data/Re-analysis/Salmon-Run/quant-output-co; rrected/KM25_salmon_quant.originalData.k21. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; HPC computing cluster; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/378:634,down,downloaded,634,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/378,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Running make inside build after doing ""cmake"" against the source directory. . **Describe the bug**; A clear and concise description of what the bug is.; Unable to compile this file with gcc-4.9.2 and cmake 3.11.1; **To Reproduce**; Steps and data to reproduce the behavior:; Following steps as specified in guide. Assigning prefix to point to different installation directory and have tried passing in boost location and telling cmake to fetch boost but both result with the same error. . Specifically, please provide at least the following information:; `[ 91%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:47: error: parameter declared ‘auto’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalcul",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:566,error,error,566,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (build mode). **Describe the bug**; A clear and concise description of what the bug is. From salmon output: ""validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35"". When passing the --validateMappings flag without an explicit consensus slack, the program says that a 0.2 value is implied for the consensus salck, but then proceeds to set a different value. **To Reproduce**; Steps and data to reproduce the behavior:; Pass --validateMappigngs without explicit consensusSlack; Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.3.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? Mouse gencode M25; * Which read files were used? Internal experiment; * Which which program options were used?. salmon quant \; --index=$index \; --threads=12 \; --validateMappings \; --gcBias \; --posBias \; --seqBias \; --libType=A \ (ISR was detected, which is correct); -1 ""${R1[$i]}"" \; -2 ""${R2[$i]}"" \; --numBootstraps=30 \; --output=$outdir ;. **Expected behavior**; A clear and concise description of what you expected to happen. The default consensusSlack and the value that is set when it is not explicitly provided should be the same value. **Desktop (please complete the following information):**; ProductName:	Mac OS X; ProductVersion:	10.15.7; BuildVersion:	19H2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/587:754,down,downloaded,754,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/587,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk mode); **Describe the bug**; A clear and concise description of what the bug is.; Salmon fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:223,recover,recoverOrphans,223,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,3,"['error', 'recover']","['error', 'recoverOrphans']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk); **Describe the bug**; I have a Illumina TruSeq Stranded Ribozero library and when I use salmon with -l A, it detects the libraries as either ISF or IU (for different indexes). The mapping rate is about 50-75% per index. However, as I understand it, Illumina TruSeq stranded libraries are supposed to be ISR? When I use -l ISR, i get much lower mapping rates so I'm a bit confused. Am I wrong about the library type for TruSeq Stranded, or is there a mistake in the Salmon docs? . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Latest (0.14.1); * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda, using a Snakemake workflow (ARMOR, from Mark Robinson's lab); * Which reference (e.g. transcriptome) was used?; Arabidopsis thaliana, from ensembl; * Which read files were used?; * Which which program options were used?; salmon (mapping-based) v0.14.1; [ program ] => salmon; [ command ] => quant; [ index ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/reference/SalmonIndex/Arabidopsis_thaliana }; [ libType ] => { ISR }; [ mates1 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R1.fastq.gz }; [ mates2 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R2.fastq.gz }; [ output ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/output/salmon/12-0-rve-30-3 }; [ numBootstraps ] => { 100 }; [ seqBias ] => { }; [ gcBias ] => { }; [ validateMappings ] => { }; [ ] => { o--fldMean }; [ ] => { 250 }; [ fldSD ] => { 25 }; [ threads ] => { 7 }. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version ; **Additional context**; Add any o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/393:800,down,downloaded,800,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/393,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon index; **Describe the bug**; Hi,; I have tried a big reference file before and It was succesfully created. Now, I am getting the following error. My index file is relatively big, ~2G. I could not solve the problem. I also increased CPU to 36. Log:; ````; [2023-03-15 20:10:48.957] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-15 20:10:48.968] [jLog] [info] building index; out : illerney.index; [2023-03-15 20:10:48.990] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; ^M^Mcounted k-mers for 10000 transcripts^M^Mcounted k-mers for 20000 transcripts^M^Mcounted k-mers for 30000 transcripts^M^Mcounted k-mers for 40000 transcripts^M^Mcounted k-mers for 50000 transcripts^M^Mcounted k-mers for 60000 transcripts^M^Mcounted k-mers for 70000 transcripts^M^Mcounted k-mers for 80000 transcripts^M^Mcounted k-mers for 90000 transcripts^M^Mcounted k-mers for 100000 transc; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Clipped poly-A tails from 28 transcripts; wrote 4224924 cleaned references; [2023-03-15 20:12:12.984] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2023-03-15 20:12:29.921] [puff::index::jointLog] [info] ntHll estimated 1872745301 distinct k-mers, setting filter size to 2^35; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 34359738368; Capacity = 2; Files:; illerney.index/ref_k31_fixed.fa; --------------------------------------------------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/837:232,error,error,232,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Only `u` (unmapped) reads are labelled in the `aux_info/unmapped.txt` file, even when the log file indicates that many fragments were discarded because they are best-mapped to decoys. . **To Reproduce**. This GitHub repository details the motivation and full workflow of my pipeline: https://github.com/greenelab/2022-microberna/. To get the read files, I ran:; ```; rule rnaseq_sample_download:; output:; reads=""outputs/rnaseq_fastp/{sra}.fq.gz"",; json = ""outputs/rnaseq_fastp/{sra}.fastp.json"",; html = ""outputs/rnaseq_fastp/{sra}.fastp.html""; params: tmp_base = lambda wildcards: ""inputs/tmp_raw/"" + wildcards.sra; threads: 1; resources:; mem_mb=8000; run:; row = m.loc[m['experiment_accession'] == wildcards.sra]; fastqs = row['fastq_ftp'].values[0]; fastqs = fastqs.split("";""); if len(fastqs) == 1:; # single end data; download and stream directly to fastp for trimming.; fastq = fastqs[0]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + "".fastq.gz""):; shell(""wget -O {params.tmp_base}.fastq.gz ftp://{fastq}""). shell(""fastp -i {params.tmp_base}.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {output.reads}""). # check that the file exists, and if it does, remove raw fastq files; if os.path.exists(output.reads):; os.remove(params.tmp_base + "".fastq.gz""). else:; # paired end data; download both files, interleave, and then remove files; fastq_1 = fastqs[0]; fastq_2 = fastqs[1]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + ""_1.fastq.gz""):; shell(""wget -O {params.tmp_base}_1.fastq.gz ftp://{fastq_1}""). if not os.path.exists(params.tmp_base + ""_2.fastq.gz""):; shell(""wget -O {params.tmp_base}_2.fastq.gz ftp://{fastq_2}""). shell(""fastp -i {params.tmp_base}_1.fastq.gz -I {params.tmp_base}_2.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:940,down,download,940,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['down'],['download']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/845:126,failure,failure,126,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845,7,"['Error', 'down', 'error', 'failure']","['Error', 'downloaded', 'error', 'failure']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon; **Describe the bug**; `419663 Segmentation fault (core dumped) `; **To Reproduce**; Steps and data to reproduce the behavior:; Code ran:; `salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant`. Specifically, please provide at least the following information:; * Which version of salmon was used? 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? module installed on HPC; * Which reference (e.g. transcriptome) was used? gencode.v44.transcriptome (Human); * Which read files were used? bam; * Which program options were used? salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant output.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Server Response: Not Found; # salmon (alignment-based) v1.10.2; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ threads ] => { 24 }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { U }; # [ alignments ] => { 007_D14_transcript.bam 007_D1_transcript.bam 014_D14_transcript.bam 014_D1_transcript.bam 069_D14_transcript.bam 069_D1_transcript.bam 127_D14_transcript.bam 127_D1_transcript.bam 36S_D14_transcript.bam 36S_D1_transcript.bam SCTI_D14_transcript.bam SCTI_D1_transcript.bam SCTI_D1_2000ng_transcript.bam ioGLUT_D7_transcript.bam ioMGL_D10_transcript.bam }; # [ output ] => { /scratch/prj/ppn_microglia_m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:137,fault,fault,137,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,2,"['down', 'fault']","['downloaded', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; The bug is related to building the index by combining genome and transcriptome reference. **Describe the bug**; [salmon_index.err.log](https://github.com/COMBINE-lab/salmon/files/3801633/salmon_index.err.log). **To Reproduce**; Steps and data to reproduce the behavior: Reproducing the [Selective Alignment](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) tutorial. * Which version of salmon was used?; 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded Linux executable from GitHub; * Which reference (e.g. transcriptome) was used?; gencode.vM23.transcripts.fa.gz and GRCm38.primary_assembly.genome.fa.gz; * Which which program options were used?; `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index`. **Desktop (please complete the following information):**; - OS: Linux; - Version: Ubuntu 16.04. **Additional context**; When installed via bioconda the salmon index command finishes with no error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/441:559,down,downloaded,559,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/441,3,"['down', 'error']","['downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; The issue existed in both bulk and single-cell mode. **Describe the bug**; When using Salmon to quantify non-redundant (NR) genes in metagenomic datasets, the generated output is missing a summary for nucleotide IDs that correspond to multiple sequences. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Merging quantifications with Salmon:; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; 2. Searching for a specific gene ID in the quantification file:; grep ""k141_1346622_1"" temp/salmon/L1EHI0900465--Q_S1_N6.quant/quant.sf; # Multiple lines are found for this gene ID; 3. Searching for the same gene ID in the resulting TPM file:; grep ""k141_1346622_1"" result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; #No results are found, which is unexpected. <img width=""1166"" alt=""截屏2024-01-30 21 56 23"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/b77e5aa4-aadc-4a17-bdde-b998ce14d72c"">; <img width=""1056"" alt=""截屏2024-01-30 21 55 28"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/877cfa9b-0484-4937-87b2-e987679e09e3"">. Specifically, please provide at least the following information:. * Which version of salmon was used? salmon 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon -y; * Which reference (e.g. transcriptome) was used? metagenome data; * Which read files were used? L1EHI0900465--Q_S1_N6.quant/; * Which which program options were used?; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM. **Expected behavior**; A clear and concise description of what you expected to happen.; I hope to keep all the gene IDs and for those who contains more than one line, take average values for each gene ID. . **Screenshots**; If applicable, add screenshots or terminal output to he",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/910:195,redundant,redundant,195,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/910,1,['redundant'],['redundant']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This bug is generated from Salmon. **Describe the bug**; To use Salmon, I installed windows subsystem for Linux (WLS), then newest Ubuntu, Anaconda, bioconda, and finally Salmon (via Bioconda) on my PC. However, when I run any order (making index or do quant), I get this error message:. salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). I checked what this means and thought this is because this Ubuntu may not have GLIBC C++ library, so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded e",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/927:358,error,error,358,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This is related to salmon. **Describe the bug**; When building Salmon 1.10.3 from source, I'm seeing the following error.; ```; [ 63%] Building CXX object src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o; In file included from /usr/include/pthread.h:33,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr-default.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr.h:148,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ext/atomicity.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/ios_base.h:39,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:201,error,error,201,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This is relevant to salmon.; **Describe the bug**; I have been trying to run the salmon quant commando and have kept running into the following error:; Exception : [Error: The index version file salmon_index_gencode_vM25/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; bad ; After going through some of the previous complaints, I figured that there was a bad memory allocation while creating the index. I increased the memory allocation which seems to have solved the indexing problem (please see attached the output from the indexing run). The memory allocation was as below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/rel",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/561:230,error,error,230,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561,3,"['Error', 'error']","['Error', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; `salmon`. **Describe the bug**; Running `salmon quant` through my SLURM cluster consistently segfaults. I've attempted runs on `m4.2xlarge` & `m4.8xlarge` worker nodes. `Aug 16 19:38:23 ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a ip 00007fe2fcdc2dca sp 00007fff27128b90 error 4 in libtbb.so.2[7fe2fcda0000+37000]`. **To Reproduce**; * Which version of salmon was used?; * `salmon 0.9.1`; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Installed through conda; * `conda create -y --name salmon@0.9.1 bzip2=1.0.6 salmon=0.9.1 seqtk=1.2`; * Which reference (e.g. transcriptome) was used?; * `ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz`; * Which read files were used?; * `ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/009/SRR1039509/SRR1039509_1.fastq.gz`; * Which program options were used?; ```; {; ""salmon_version"": ""0.9.1"",; ""index"": ""./index"",; ""libType"": ""U"",; ""unmatedReads"": ""./single.fastq"",; ""output"": ""./output"",; ""allowOrphansFMD"": [],; ""threads"": ""8"",; ""incompatPrior"": ""1e-20"",; ""biasSpeedSamp"": ""1"",; ""fldMax"": ""1000"",; ""fldMean"": ""200"",; ""fldSD"": ""80"",; ""forgettingFactor"": ""0.65"",; ""maxOcc"": ""200"",; ""maxReadOcc"": ""100"",; ""numBiasSamples"": ""2000000"",; ""numAuxModelSamples"": ""5000000"",; ""numPreAuxModelSamples"": ""1000000"",; ""numGibbsSamples"": ""0"",; ""numBootstraps"": ""0"",; ""vbPrior"": ""0.001"",; ""auxDir"": ""aux_info""; }; ``` . **Expected behavior**; For `salmon quant` to run to completion. **Desktop (please complete the following information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:382,error,error,382,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,2,"['down', 'error']","['downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:363,error,error,363,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,4,"['down', 'error']","['download', 'downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; When using the `--whitelist` flag the option `--dumpCsvCounts` does not seem to work. **To Reproduce**; Salmon version 0.13.1 from Bioconda. `salmon alevin -l ISR -i ../salmon/index/ -1 R1_file -2 R2_file -o out_dir/ --tgMap ../salmon/txp2gene.tsv -p 20 --chromium --whitelist whitelist.txt --dumpFeatures --dumpCsvCounts`. I have a very problematic sample where the knee autodetection fails (way too high cell number). So I created a whitelist of the 5000 most frequent entries of the filtered_cb_frequency.txt. It seems to work as expected, but the quants_mat.csv is not created, which I need for further downstream analysis (Seurat). The quant_mat.gz is created though, is there a way to manually create a .csv from this file (it seems to be binary).; Thanks. P.S.: The alevin logs seem to contain some non-standard characters when the number of ""Barcodes used"" should be printed (maybe because of the colour highlighting?). **Expected behavior**; quants_mat.csv of the whitelisted cells should be created. **Logs**; ```; [2019-05-17 07:28:11.279] [alevinLog] [info] Processing barcodes files (if Present) . ; [2019-05-17 07:39:15.712] [alevinLog] [info] Done barcode density calculation.; [2019-05-17 07:39:15.712] [alevinLog] [info] # Barcodes Used: [32m346967519[0m / [31m347069857[0m.; [2019-05-17 07:39:15.731] [alevinLog] [info] Done importing white-list Barcodes; [2019-05-17 07:39:15.732] [alevinLog] [info] Total 4000 white-listed Barcodes; [2019-05-17 07:39:16.050] [alevinLog] [info] Done populating Z matrix; [2019-05-17 07:39:16.112] [alevinLog] [info] Done indexing Barcodes; [2019-05-17 07:39:16.112] [alevinLog] [info] Total Unique barcodes found: 3968995; [2019-05-17 07:39:16.112] [alevinLog] [info] Used Barcodes except Whitelist: 80709; [2019-05-17 07:39:16.858] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-05-17 07:39:16.868] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/363:723,down,downstream,723,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/363,1,['down'],['downstream']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; A clear and concise description of what the bug is.; I am running the following command on some sci-rna-seq3 samples and it seems to not work as expected. ; `salmon alevin -i af_splici/dm6_splici_idx/ -l ISR -1 data/SRR17122012_1.fastq -2 data/SRR17122012_2.fastq -o SRR17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/813:585,error,error,585,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813,2,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; I got reasonable cell barcode when I worked with 10X cellranger, I just got very few cell barcode when I use alevin. I don't have problem with 10X V3 data when I use alevin. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; ![image](https://github.com/user-attachments/assets/287e4955-ca55-4767-99a8-299c100b667f). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/949:492,down,downloaded,492,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/949,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; both. **Describe the bug**; I have Ubuntu 22.04.4 LTS. The conda version I have is 23.3.1. After I followed ""Get Started"", I installed salmon by the command ""conda create -n salmon salmon"". Everything looks fine so far. conda activate salmon. salmon -h; salmon: error while loading shared libraries: libboost_iostreams.so.1.60.0: cannot open shared object file: No such file or directory. Any help with this problem will be highly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/915:348,error,error,348,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/915,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be writte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:281,fault,fault,281,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,4,"['down', 'error', 'fault']","['downloaded', 'error', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; We have 60 samples made from very low RNA inputs (cell captures) so the libraries were made with Ovation Solo RNAseq kit from Tecan. 150 PE. One of the sample finished fine (but mapping rate 21%) but our nextflow pipeline crashed on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/668:749,recover,recoverOrphans,749,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668,1,['recover'],['recoverOrphans']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; in Salmon bulk mode, while using the following commands to create an index:; A. Ingredients preparation:; grep ""^>"" genome.fa | cut -d "" "" -f 1 > ./decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Gencode_transcripts.fa genome.fa > ./gentrome.fa; B. index building:; salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode; **Describe the bug**; I got the following bug/error message:; Version Info: This is the most recent version of salmon.; salmon.sh: line 23: 37339 Illegal instruction (core dumped) salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode. Specifically, I was using the following version and files/options:. * Salmon 1.0.0; * through bioconda?; conda update salmon; * gencode.v27.transcripts.fa; * default. Any help to fix this bug would be appreciated!. Kind regards,; Jamal.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/458:476,error,error,476,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/458,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (buik mode). **Describe the bug**; A clear and concise description of what the bug is.; I compiled the code (salmon v1.4.0) and produced the executable. Then when I try to ""salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode"" (transcriptome and genome from your tutorial: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/), a segmentation fault occurs. (gdb backtrack is provided below.). **To Reproduce**; Steps and data to reproduce the behavior:. 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /cmake version 3.13.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoy",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:479,fault,fault,479,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,1,['fault'],['fault']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode) . **Describe the bug**; salmon fails to map gene to transcript id despite given GTF or tx2id file as properly required.; I also used `grep` on both tx2id file and quant.sf file and both contain the transcript IDs tested. **To Reproduce**; 1. Create index decoys; Followed the steps in [tutorial](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment) ; 2. Create index; `salmon1.4.0/salmon-latest_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode -p 40`; 3. Run ; `salmon1.4.0/salmon-latest_linux_x86_64/bin/salmon quant -l A -1 <(zcat S1_1.fastq) -2 <(zcat S1_2.fastq) -o output -i salmon_index -g transcript_to_id_mm10`. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary; * Which reference (e.g. transcriptome) was used? mm10, Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; * Which read files were used? 125-bases PE RNA-seq samples; * Which which program options were used? `-l A` and `-g`. **Expected behavior**; Transcript ID should be found, translated into GeneSymbol and used for gene-level abundance.; Instead the program fails to find transcript ID even though it exists exactly as expected. **Screenshots**; etc. For all genes.; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082416.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082417.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082418.1] in transcript <-> gene map; returning transcript as it's own gene`. **Desktop (please complete t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/607:936,down,downloaded,936,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/607,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; Segmentation fault error when running salmon quant. **To Reproduce**; Steps and data to reproduce the behavior:; Inconsistent behaviour, sometimes quant.sf files are generated, sometimes not. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:194,fault,fault,194,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,3,"['down', 'error', 'fault']","['downloaded', 'error', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; after following tutorial step by step from the following website:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. with the following files ; GRCm39.primary_assembly.genome.fa.gz; gencode.vM28.transcripts.fa.gz. I get the following error . Exception : [Device or resource busy: 'salmon_index/twopaco_tmp']; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting. **To Reproduce**; Steps and data to reproduce the behavior:; create the files:; decoys.txt; gentrome.fa.gz. and put them in salmonDecoy directory ; and run:; salmon index -t salmonDecoy/gentrome.fa.gz -d salmonDecoy/decoys.txt -p 12 -i salmon_index --gencode. Specifically, please provide at least the following information:; * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?; I used a linux machine with conda salmon env ; salmon version: salmon 1.8.0. **Expected behavior**; create index for salmon . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/767:385,error,error,385,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/767,2,"['down', 'error']","['downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode); **Describe the bug**; I did a lot of independent RNAseq libs recently and all came out with the identical frag_length mean and sd (see below). This surprised me greatly as while the libraries looked consistent on a tapestation, I would not expect them to be this consistent down to >7 decimal places. Also it is unclear how I can access fld.gz to see the raw data. MultiQC only shows me one distribution (for ; ```Sample: Gam_0h_rep1A_RL5382_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_0h_rep2A_RL5383_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_0h_rep3A_RL5403_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_37C_rep1_RL5385_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_37C_rep2_RL5386_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_37C_rep3_RL5406_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_4C_rep1_RL5387_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_4C_rep2_RL5388_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_4C_rep3_RL5407_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep1_RL5384_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/948:380,down,down,380,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948,1,['down'],['down']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode); **Describe the bug**; The contents of the quant.genes.sf file and the quant.sf file are identical. The file quant.genes.sf should have been the results of genes quantification, but now it is all transcript quantification. I.e., the file quant.genes.sf is exactly the same as quant.sf (only the transcript names corresponding to the Name column are in a different order). **To Reproduce**; * Which version of salmon was used?; * 1.10.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * bioconda; * Which reference (e.g. transcriptome) was used?; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.109.gtf \; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.dna.primary_assembly.fa \; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.cdna.all.fa. * My options ：; * generate decoys.txt:; grep ""^>"" < /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.dna.primary_assembly.fa | cut -d "" "" -f 1 > \; /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt; sed -i.bak -e 's/>//g' /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt; cat /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.cdna.all.fa \; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.dna.primary_assembly.fa > \; /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa. * salmon index; /home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon index \; --transcripts /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa \; --kmerLen 31 \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --decoy /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt \; --keepDuplicates \; --threads 50. */home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon quant \; --libType A \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --unmatedReads /cold_data/zhaojiaxin/long_read/GRM/upstream-analysis/trim_polya/GRM/ONT_GRM_R01/ONT_GRM_R01.full_length.trim_polyA.filter.fasta \; --output /c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/962:580,down,downloaded,580,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/962,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon quant. **Describe the bug**; --gencode used with salmon quant does not result in correct handling of of multi-label headers in gencode reference files. Resulting in errors and failure to estimate counts when using gencode transcriptome for alignment. Now for every reference header error is output: ; ```; [2021-06-15 00:15:36.623] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment; ```. **To Reproduce**; Steps and data to reproduce the behavior:. align reads to transcriptome using minimap2 to generate BAM file. Use of salmon to estimate transcript counts using ONT specific flags. ```; salmon-1.5.1_linux_x86_64/bin/salmon quant --ont --gencode -p 4 -t Genome_files/gencode.vM24.transcripts.fa -l U -a Documents/Day2_03_DRS_pass.bam -o Documents/counts/Day2_03_DRS_pass; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary downloaded from github; * Which reference (e.g. transcriptome) was used? gencode.M24.transcriptome.fa; * Which read files were used? direct RNA sequences from MinION platform ; * Which which program options were used? see above. **Expected behavior**; Expect that salmon splits the header from gencode reference and takes first part of the header and uses in output files for transcript estimatation. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/671:258,error,errors,258,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/671,5,"['down', 'error', 'failure']","['downloaded', 'error', 'errors', 'failure']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon(bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; While setting -DCMAKE_BUILD_TYPE=Debug, ; ""make"" command failed at ; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:322,error,error,322,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,4,"['Error', 'error']","['Error', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; A clear and concise description of what the bug is. I had an older version of salmon that works (v0.8.2) that I believe was not compiled with Bioconda. I am now trying to get the latest version through Bioconda and with the same ""salmon quant"" command (See below) that works on the old version, I get a ""segmentation fault 11"" error and it never actually quantifies any reads. Do you know why this would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:433,fault,fault,433,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,3,"['down', 'error', 'fault']","['downloaded', 'error', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; Errors compiling salmon in spack with cmake. **To Reproduce**; `spack install salmon`. Specifically, please provide at least the following information:. * Which version of salmon was used?: 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?: through spack, that downloads source; * Which reference (e.g. transcriptome) was used?: none, the error is during compilation; * Which read files were used?: none; * Which which program options were used? `RELEASE`. **Expected behavior**; Program would compile correctly. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]: linux x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]:; ```; Linux pablo-ThinkPad-T14-Gen-3 5.19.0-50-generic #50-Ubuntu SMP PREEMPT_DYNAMIC Mon Jul 10 18:24:29 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.2 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; During the update of the spack package for salmon we found `hts` is needed, and cmake could not find the module. We are wondering if you want/plan to use this by default. https://github.com/spack/spack/pull/39202/commits/c3357a64a9697be4058feb555a2c4e4138793f17",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/866:116,Error,Errors,116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/866,5,"['Error', 'avail', 'down', 'error']","['Errors', 'available', 'downloaded', 'downloads', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; It appears that when I run the quant command it gets up to the ""loading dense pufferfish index"" but stop after loading positions. So I think that it isn't even getting to the quantification step because it doesn't finish loading the index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; *v.1.5.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * through bioconda; * Which reference (e.g. transcriptome) was used?; * ; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen.; I would expect it to continue to ""loading reference sequence"" etc., then display done and continue with the quantification; **Screenshots**; ![image](https://user-images.githubusercontent.com/85455566/120937098-82d2fb80-c6d9-11eb-9aea-a2935ccc1e50.png). **Desktop (please complete the following information):**; Ubuntu Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; I'm pretty new to linux and salmono it is likely that my problem is due to some simple misunderstanding of how the program works, but any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/667:621,down,downloaded,621,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; The cDNA fasta file contains 176241 ENSTs,but the result file only contains 166667 ENSTs.; **To Reproduce**; Steps and data to reproduce the behavior:; The steps and data are as follows. ; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.9.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used? ; Homo_sapiens.GRCh38.cdna.all.fa obtained from Ensembl release 83; * Which read files were used? ; GSE41009; * Which which program options were used? ; Building index: salmon index -t filepath/Homo_sapiens.GRCh38.cdna.all.fa -i V83-homo_index --type quasi -k 31; Quantification: salmon quant -p 50 -i filepath/V83-homo_index -l IU -1 ESC-SRR574820_1.fastq ESC-SRR574821_1.fastq -2 ESC-SRR574820_2.fastq ESC-SRR574821_2.fastq -o ESC-quantification. **Expected behavior**; A clear and concise description of what you expected to happen.; The result file should contain all the ENSTs existed in cDNA fasta file.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; uname -a; Linux mn1 2.6.32-431.29.2.2.ky3.1.x86_64 #1 SMP Thu Sep 25 10:15:09 CST 2014 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	NeoKylin; Description:	NeoKylin release 3.2 (Carambola); Release:	3.2; Codename:	Carambola; **Additional context**; Add any other context about the prob",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/255:506,down,downloaded,506,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255,2,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon 1.1.0 and 1.0.0 core-dump when attempting to build an index under Ubuntu 18.04 LTS; **To Reproduce**; Steps and data to reproduce the behavior:; ```; root@firefly:/usr/local/src/salmon# salmon-1.1.0_linux_x86_6/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: This is the most recent version of salmon.; [2020-04-07 21:11:41.237] [jLog] [info] building index; out : index; [2020-04-07 21:11:41.240] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; Illegal instruction (core dumped). root@firefly:/usr/local/src/salmon# salmon-0.14.1_linux_x86_64/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; [2020-04-07 21:12:14.575] [jLog] [info] building index; [2020-04-07 21:12:14.580] [jointLog] [info] [Step 1 of 4] : counting k-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit su",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/500:945,avail,available,945,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500,2,['avail'],['available']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon quant is leading to segmentation fault when `--skipQuant` flag is set. The behavior may be annotation dependent.; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:209,fault,fault,209,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,3,"['down', 'error', 'fault']","['downloaded', 'error', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I used the default parameters to run salmon on mouse sample. But I got the warning:. `Detected a *potential* strand bias > 1% in an unstranded protocol check the file:`. **To Reproduce**; `""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 10869138,; ""num_assigned_fragments"": 10869138,; ""num_frags_with_concordant_consistent_mappings"": 10212463,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1088473,; ""strand_mapping_bias"": 0.5258466052704426,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4842274,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 5370189,; ""SF"": 593930,; ""SR"": 494543,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0`. Specifically, please provide at least the following information:. * Which version of salmon was used? ; ""salmon_version"": ""0.14.1"". * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda. * Which reference (e.g. transcriptome) was used?; gencode mouse VM22. * Which read files were used?. Downloaded from sra（Just ordinary Illumina reads). * Which which program options were used?. ```; salmon quant -i $mm10_whole_index -l A \; -1 $fastq1 \; -2 $fastq2 \; -p 20 --validateMappings -o $output_whole; ```. **Expected behavior**; Why Strand bias is very high?. **Desktop (please complete the following information):**; Linux localhost.localdomain 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/422:923,down,downloaded,923,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/422,2,"['Down', 'down']","['Downloaded', 'downloaded']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I was trying to do salmon quant on multiple bam files together but got the error.; <img width=""1209"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/30546732/45cad092-de37-4e00-a873-6ea46254efbd"">. **To Reproduce**; Steps and data to reproduce the behavior:; `salmon quant -t /Reference/GRCm39_Gencode/GRCm39.fa --libType A --ont -a ./bamfiles/*.bam -o ./salmon_bulk`; Specifically, please provide at least the following information:. * Which version of salmon was used?; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/920:191,error,error,191,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/920,2,"['down', 'error']","['downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; When loading a pufferfish index using salmon v1.0 I encounter errors. I've posted to https://github.com/COMBINE-lab/pufferfish/issues/8 with a full description. When running salmon v1.0 using a rather large index, I receive an error raised from the cereal library ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>64",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/463:178,error,errors,178,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463,2,['error'],"['error', 'errors']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; salmon takes days to process through 16 samples. **To Reproduce**; Tried running on a different computer, same issue. . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda; * Which reference (e.g. transcriptome) was used?; mouse Mus_musculus.GRCm38.cdna.all.fa; * Which read files were used?; fastq; * Which which program options were used?; Various ; the --hitfilterpolicy BOTH was just added following reading another user query to see if that would help. (https://github.com/COMBINE-lab/salmon/issues/527). ```; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { mouse_index1 }; ### [ libType ] => { IU }; ### [ mates1 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_1.trimmed.fastq.gz }; ### [ mates2 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_2.trimmed.fastq.gz }; ### [ threads ] => { 4 }; ### [ hitFilterPolicy ] => { BOTH }; ### [ biasSpeedSamp ] => { 10 }; ### [ output ] => { quants/13_quant }; ```. **Expected behavior**; Not to be so slow.... I've used salmon previously with some SRR datasets and it was very fast, this seems very strange to me . **Screenshots**; ```; [2020-06-13 02:34:43.686] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-06-13 02:34:43.686] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-13 02:34:43.686] [jointLog] [info] parsing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/537:384,down,downloaded,384,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; yes; **Describe the bug**; A clear and concise description of what the bug is.; I was going though the tutorial https://combine-lab.github.io/alevin-tutorial/2020/alevin-velocity/; using Alevin and scVelo. The filtering with ; scv.pp.filter_genes(adata, min_shared_counts = 30). gives the error bellow. Any advice?; **Error**; R[write to console]: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. R[write to console]: In addition: ; R[write to console]: Warning message:. R[write to console]: call dbDisconnect() when finished working with a connection . ---------------------------------------------------------------------------; RRuntimeError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 168 if reductor:; --> 169 rv = reductor(4); 170 else:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/sexp.py in __getstate__(self); 123 self.__sexp__._cdata,; --> 124 globalenv.__sexp__._cdata); 125 ). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/_rinterface_capi.py in serialize(cdata, cdata_env); 412 if error_occured[0]:; --> 413 raise embedded.RRuntimeError(_geterrmessage()); 414 return res. RRuntimeError: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following ex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:375,error,error,375,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,3,"['Error', 'error']","['Error', 'error']"
Availability,"**Meta information:**; salmon version: 0.7.2; average length of reads: 50bp; reference sequences to bulid index: A fq file just contain **3′ UTR sequences**. **Selected kmer and result of mapping rate:**; ```; kmer 15：54.0812%; kmer 17：45.4212%; kmer 19：38.8951%; kmer 21：37.8544%; ```. Hi, I'm trying to select a number of kmer to build an index. In some answers, k < l/2 likes 21 is an appropriate value based on experience . In my downstream analysis, I got a good result in a sense based on k=15. However, other k-mer could't return the result I want. . **I wonder whether the significant increase in the mapping rate is due to the correct mapping read rather than the increased false positives.** . Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/462:434,down,downstream,434,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/462,1,['down'],['downstream']
Availability,**The bug is primarily related to salmon (bulk mode)**. **Describe the bug**; After building salmon it segfaults with the example file shipped with the source tarball. The problem is described in detail in the [Debian bug tracking system](https://bugs.debian.org/1028713). While the Debian bug is against version 1.9.0 I can perfectly reproduce the issue with a recent download of version 1.10.0. **To Reproduce**; Steps and data to reproduce the behavior:. Download [your release tarball](https://github.com/COMBINE-lab/salmon/archive/refs/tags/v1.10.0.tar.gz). $ tar xaf v1.10.0.tar.gz; $ cd salmon-1.10.0; # build on Debian testing system; $ cmake -DCMAKE_BUILD_TYPE=Release -DUSE_SHARED_LIBS=TRUE -DBZIP2_LIBRARIES=-lbz2 -DBZIP2_INCLUDE_DIR=/usr/include -DLIBLZMA_INCLUDE_DIR=/usr/include/ -DLIBLZMA_LIBRARY=lzma -DCMAKE_MODULE_PATH=/usr/share/cmake/Modules -DTBB_WILL_RECONFIGURE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not man,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835:369,down,download,369,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835,2,"['Down', 'down']","['Download', 'download']"
Availability,"**The bug is primarily related to salmon (bulk mode)**; **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v0.14.1; # [ program ] => salmon ; # [ command ] => quant ; # [ libType ] => { U }; # [ alignments ] => { Analysis/Quantification/OJ33.sam }; # [ targets ] => { Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas }; # [ output ] => { Analysis/Quantification/OJ33 }; # [ noErrorModel ] => { }; # [ writeUnmappedNames ] => { }; Logs will be written to Analysis/Quantification/OJ33/logs; [2019-08-13 11:13:43.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2019-08-13 11:13:43.563] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Analysis/Quantification/OJ33.sam"", fasta = ""Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas"" . . .done; [2019-08-13 11:13:46.239] [jointLog] [info] replaced 1 non-ACGT nucleotides with random nucleotides. processed 2000000 reads in current roundSegmentation fault (core dumped); ```; # To Reproduce; **Which version of salmon was used?**; salmon 0.14.1; **How was salmon installed (compiled, downloaded executable, through bioconda)?**; downloaded executable; **Which reference was used?**; custom, transcriptom derived from nanopore long-reads using Pinfish pipeline; **Which read files were used?**; SAM file returned by minimap2 (nanopore long reads); **Which which program options were used?**; `salmon quant -l U -a Analysis/Quantification/OJ33.sam -t Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas -o Analysis/Quantification/OJ33 --noErrorModel --writeUnmappedNames > Analysis/Quantification/OJ33.log`; **Desktop (please complete the following information):**; x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/414:1249,fault,fault,1249,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/414,3,"['down', 'fault']","['downloaded', 'fault']"
Availability,"**This question is primarily related to salmon (bulk mode)**. **Describe the problem**; How will Salmon handle if only a fraction of a read maps to a transcript but the rest do not? Ran in to this problematic FastQ file the other day where the first 52 nucleotides where N (see below). Could Salmon handle such fastq files or is trimming needed? What if the first 50 nucleotides ""just"" had very low quality (and thereby were full of errors whereby the did not map to the transcriptome?. **Screenshots**. ![image](https://user-images.githubusercontent.com/23721187/60346555-ac4a5f00-99bb-11e9-94a7-57e3d75654f6.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/390:433,error,errors,433,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/390,1,['error'],['errors']
Availability,"**salmon (bulk mode)**. **Describe the bug**; During salmon quant call, there is a segmentation fault . **To Reproduce**; Steps and data to reproduce the behavior:; * I am hardly able to recreate it myself, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:96,fault,fault,96,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,4,"['down', 'fault', 'recover']","['downloaded', 'fault', 'faulted', 'recoverOrphans']"
Availability,"**tl;dr**: 3-tag sequencing methods for bulk RNA samples contain known sample indices and UMIs and thus resembles sc-RNA-seq read formats. Do you have a recommendation on how to use Salmon and / or Alevin to quantify gene expression for this data type?. Congratulations on the recent [alevin preprint](https://www.biorxiv.org/content/early/2018/10/24/335000)! The new algorithm to deduplicate UMIs looks awesome. I am wondering if you had a recommendation on how to leverage it for 3' tag sequencing of bulk samples. There are a number of protocols that focus on the 3' ends of transcripts to allow for cheap quantification of gene expression, e.g. - [BRB-seq](https://www.biorxiv.org/content/early/2018/01/30/256594); - [Drug-seq](https://www.nature.com/articles/s41467-018-06500-x); - [Quant-seq](https://www.lexogen.com/quantseq-3mrna-sequencing/). These methods combine conventional (known) sample-indices to label samples (or wells) with unique molecular identifiers (UMIs). (I found [one question on this topic](https://github.com/COMBINE-lab/salmon/issues/108) in the salmon issue tracker from back in 2016). Here is the Drug-seq approach, for example:. ![Drug-seq](https://media.springernature.com/lw900/springer-static/image/art%3A10.1038%2Fs41467-018-06500-x/MediaObjects/41467_2018_6500_Fig1_HTML.png). The resulting read data resembles that of single-cell approaches and requires deduplication of UMIs and quantification based on reads with a strong 3' bias. It seems analysis of this data could benefit a lot from the algorithms implemented in Alevin. Can this data be analyzed with Salmon and / or Alevin? Are there any pitfalls that I should be aware off?. Many thanks for any feedback - and thanks again for making these great tools available to the community.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/306:1749,avail,available,1749,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/306,1,['avail'],['available']
Availability,"*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > > >(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&)':; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x73): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::al; locator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x24e): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger,; std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; collect2: error: ld returned 1 exit status; make[2]: *** [src/salmon] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. Do you have any leads?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/570:2454,error,error,2454,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/570,4,"['Error', 'error']","['Error', 'error']"
Availability,*shrug* conda isn't mentioned in the salmon docs so I'll just leave this here for people who are trying to use bioconda and run into this error. peace out!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/480#issuecomment-580259997:138,error,error,138,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/480#issuecomment-580259997,1,['error'],['error']
Availability,", hits per frag: 0.429399[A. [32mprocessed[31m 20,500,000 [32mfragments[0m; hits: 8,800,288, hits per frag: 0.429726[A. [32mprocessed[31m 21,000,001 [32mfragments[0m; hits: 9,016,478, hits per frag: 0.429653[A. [32mprocessed[31m 21,500,000 [32mfragments[0m; hits: 9,229,756, hits per frag: 0.429727[A. [32mprocessed[31m 22,000,000 [32mfragments[0m; hits: 9,449,005, hits per frag: 0.429716[A. [32mprocessed[31m 22,500,001 [32mfragments[0m; hits: 9,665,567, hits per frag: 0.429693[A. [32mprocessed[31m 23,000,000 [32mfragments[0m; hits: 9,886,728, hits per frag: 0.430177[A. [32mprocessed[31m 23,500,000 [32mfragments[0m; hits: 10,104,758, hits per frag: 0.43008[A. [32mprocessed[31m 24,000,000 [32mfragments[0m; hits: 10,317,472, hits per frag: 0.4299[A. [32mprocessed[31m 24,500,000 [32mfragments[0m; hits: 10,534,359, hits per frag: 0.430157[A. [32mprocessed[31m 25,000,000 [32mfragments[0m; hits: 10,748,602, hits per frag: 0.430214[A. [32mprocessed[31m 25,500,000 [32mfragments[0m; hits: 10,958,978, hits per frag: 0.429905[A. [32mprocessed[31m 26,000,000 [32mfragments[0m; hits: 11,179,020, hits per frag: 0.430235[A. [32mprocessed[31m 26,500,000 [32mfragments[0m; hits: 11,394,635, hits per frag: 0.430031[A. [32mprocessed[31m 27,000,001 [32mfragments[0m; hits: 11,609,653, hits per frag: 0.43023[A. [32mprocessed[31m 27,500,000 [32mfragments[0m; hits: 11,825,601, hits per frag: 0.430128; salmon.standard/sample.standard.sh: line 20: 13916 Segmentation fault (core dumped) ……/miniconda3/envs/salmon1/bin/salmon quant -i ……/share/references/gencode/salmon_index --libType A -1 $read1 -2 $read2 -p 16 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output $outdir. ``` . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] HPC; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:9593,fault,fault,9593,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,2,"['fault', 'recover']","['fault', 'recoverOrphans']"
Availability,"----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:4828,avail,available,4828,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['avail'],['available']
Availability,"------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.4236 s; -----------------------------------------; size = 1057188904; Number of ones: 16145664; Number of ones per inventory item: 512; Inventory entries filled: 31535; -----------------------------------------; | Loading contig boundaries | Time = 4.031 s; -----------------------------------------; size = 1057188904; -----------------------------------------; | Loading sequence | Time = 1.983 s; -----------------------------------------; size = 572818984; -----------------------------------------; | Loading positions | Time = 14.658 s; -----------------------------------------; size = 942318702; -----------------------------------------; | Loading reference sequence | Time = 1.4932 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 10.959 ms; -----------------------------------------; Error: invalid feature coordinates (end<start!) at line:; NC_029855.1	RefSeq	gene	406748	107842	.	+	.	gene_id ""A5N79_gp28""; db_xref ""GeneID:27215502""; exception ""trans-splicing""; gbkey ""Gene""; gene ""nad2""; gene_biotype ""protein_coding""; locus_tag ""A5N79_gp28""; ; --- . After I remove the erroneous entry, there is no more complaint:. ---; Version Info: This is the most recent version of salmon.; -----------------------------------------; | Loading contig table | Time = 14.648 s; -----------------------------------------; size = 16145665; -----------------------------------------; | Loading contig offsets | Time = 336.77 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 10.195 ms; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 2.3113 s; -----------------------------------------; size = 1057188904; Number of ones: 16145664; Number of ones per inventory it",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/569#issuecomment-709699746:1514,Error,Error,1514,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/569#issuecomment-709699746,1,['Error'],['Error']
Availability,"-----------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.63223/.../work2/c3/593743a22569a97e1d10b2a200b713/.command.sh: line 4: 38 Segmentation fault (core dumped) /usr/local/bin/salmon quant -i references/salmon/*ucsc.rmsk.salmon*/ --libType A -1 SRR14506785_output_forward_paired.fq.gz -2 SRR14506785_output_reverse_paired.fq.gz -p 8 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output SRR14506785.salmon.rmsk.out --writeUnmappedNames; ```. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version: 5.15.0-76-generic. **Additional context**; This is a very recent issue, it *seems* to be resolved by version 1.10 but I have no reads into where the issue may be occuring, or why it is so inconsistent.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:4925,fault,fault,4925,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,2,"['fault', 'recover']","['fault', 'recoverOrphans']"
Availability,"----------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:4558,fault,fault,4558,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['fault'],['fault']
Availability,"----------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:4653,fault,fault,4653,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,2,"['avail', 'fault']","['available', 'fault']"
Availability,--SeqBias quant error with single-end reads,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:16,error,error,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,1,['error'],['error']
Availability,"--biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [info] finished quantifyLibrary(); [2016-06-21 10:05:13.894] [jointLog] [info] Starting optimizer; Segmentation fault (core dumped); ```. It runs fine when disabling `--useFSPD`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/64:2561,fault,fault,2561,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64,1,['fault'],['fault']
Availability,"--unmatedReads ] arg List of files containing unmated reads ; of (e.g. single-end reads); -1 [ --mates1 ] arg File containing the #1 mates; -2 [ --mates2 ] arg File containing the #2 mates. alevin-specific Options:; --noDedup Stops the pipeline after CB sequence ; correction and quasi-mapping reads.; --dropseq Use DropSeq Single Cell protocol for ; the library; --chromium Use 10x chromium v2 Single Cell ; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --whitelist arg File containing white-list barcodes; --noQuant Don't run downstream barcode-salmon ; model.; --naive Run Gene level naive deduplication; --noSoftMap Don't use soft-assignment for quant ; instead do hard-assignment.; --mrna arg path to a file containing mito-RNA ; gene, one per line; --rrna arg path to a file containing ribosomal ; RNA, one per line; --useCorrelation Use pair-wise pearson correlation with ; True barcodes as a feature for ; white-list creation.; --dumpfq Dump barcode modified fastq file for ; downstream analysis by using coin toss ; for multi-mapping.; --debug Enabling this mode mode will try to ; ignore segfaults based on no whitelist ; mapping or no whitelist deduplicated ; count; --dumpBfh dump the big hash with all the barcodes; and the UMI sequence.; --dumpFeatures Dump features for whitelist and ; downstream analysis.; --dumpCsvCounts Dump cell v transcripts count matrix in; csv format.; --lowRegionMinNumBarcodes arg (=200) Minimum Number of CB to use for ; learning Low confidence region ; (Default: 200).; --maxNumBarcodes arg (=100000) Maximum allowable limit to process the ; cell barcodes. (Default: 100000); --tgMap arg transcript to gene map tsv file; ```; 2) `salmon alevin -lISR -1 cells_CTTGTA_L001_R1_001.fastq.gz -2 cells_CTTGTA_L001_R2_001.fastq.gz --celseq2 -i AlevinIndex_develop/ -p 8 -o alevin_output --tgMap gencode.primary_assembly.tsv`. **The tsv I created myself (with tximport), but I don't think that is the issue here...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536:1385,down,downstream,1385,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536,4,['down'],['downstream']
Availability,"-0.7.12.3/bwamem.c; bwa-0.7.12.3/bwamem.h; bwa-0.7.12.3/bwamem_extra.c; bwa-0.7.12.3/bwamem_pair.c; bwa-0.7.12.3/bwape.c; bwa-0.7.12.3/bwase.c; bwa-0.7.12.3/bwase.h; bwa-0.7.12.3/bwaseqio.c; bwa-0.7.12.3/bwashm.c; bwa-0.7.12.3/bwt.c; bwa-0.7.12.3/bwt.h; bwa-0.7.12.3/bwt_gen.c; bwa-0.7.12.3/bwt_lite.c; bwa-0.7.12.3/bwt_lite.h; bwa-0.7.12.3/bwtaln.c; bwa-0.7.12.3/bwtaln.h; bwa-0.7.12.3/bwtgap.c; bwa-0.7.12.3/bwtgap.h; bwa-0.7.12.3/bwtindex.c; bwa-0.7.12.3/bwtsw2.h; bwa-0.7.12.3/bwtsw2_aux.c; bwa-0.7.12.3/bwtsw2_chain.c; bwa-0.7.12.3/bwtsw2_core.c; bwa-0.7.12.3/bwtsw2_main.c; bwa-0.7.12.3/bwtsw2_pair.c; bwa-0.7.12.3/example.c; bwa-0.7.12.3/fastmap.c; bwa-0.7.12.3/is.c; bwa-0.7.12.3/kbtree.h; bwa-0.7.12.3/khash.h; bwa-0.7.12.3/kopen.c; bwa-0.7.12.3/kseq.h; bwa-0.7.12.3/ksort.h; bwa-0.7.12.3/kstring.c; bwa-0.7.12.3/kstring.h; bwa-0.7.12.3/ksw.c; bwa-0.7.12.3/ksw.h; bwa-0.7.12.3/kthread.c; bwa-0.7.12.3/kvec.h; bwa-0.7.12.3/main.c; bwa-0.7.12.3/malloc_wrap.c; bwa-0.7.12.3/malloc_wrap.h; bwa-0.7.12.3/maxk.c; bwa-0.7.12.3/pemerge.c; bwa-0.7.12.3/qualfa2fq.pl; bwa-0.7.12.3/utils.c; bwa-0.7.12.3/utils.h; bwa-0.7.12.3/xa2multi.pl; [ 50%] No patch step for 'libbwa'; [ 50%] No update step for 'libbwa'; [ 51%] No configure step for 'libbwa'; [ 51%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. So as you said I'd say its having issued finding the zlibs library. Similar to how I used 'DZLIB_LIBRARY=/users/work/jake/bin/zlib-1.2.11/zlib.h' to specify the zlib library for 'cmake', is there a way to do it for the 'make' command? I've tried using the following but haven't had success:; make -I /users/work/jake/bin/zlib-1.2.11/zlib.h; make --include-dir=/users/work/jake/bin/zlib-1.2.11/zlib.h. Sorry for the very basic questions.... I'm kind of learning as I go.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873:3481,error,error,3481,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141#issuecomment-314451873,6,"['Error', 'error']","['Error', 'error']"
Availability,"-alignment/ https://salmon.readthedocs.io/en/latest/salmon.html#what-s-this-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa | cut -d "" "" -f 1 > GRCh38.decoys.txt; sed -i 's/>//g' GRCh38.decoys.txt; cat gencode.v36.transcripts.fa GRCh38.primary_assembly.genome.fa | gzip > GRCh38.gentrome.fa.gz; salmon index -t GRCh38.gentrome.fa.gz -d GRCh38.decoys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/""; for fn in /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR{2557119..2557121}; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i $IDX -l A -1 ${fn}_1.fastq.gz -2 ${fn}_2.fastq.gz -p 8 \; --validateMappings \; -o quants/${samp}_quant \; --gcBias; done; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; 1.3.0 salmon was installed by miniconda, then updated to 1.4.0 via miniconda ; * Which reference (e.g. transcriptome) was used?; Gencode_human/release_36/gencode.v36.transcripts.fa.gz; * Which read files were used?; fastq.gz file with 150 paired reads ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; On a cluster with Ubuntu Linux. **Additional context**; I was running the default method of building index with only the gencode.v36.transcripts.fa.gz, and the mapping rate for my fastq files were 42-55%, which i think is quite low (based on what i read, it is expected to be around 70%). Then, I thought i might give a go with building decoy-aware transcriptome index, and this did not go well as i presented above. . I ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/603:3425,down,downloaded,3425,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603,1,['down'],['downloaded']
Availability,"-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:1870,recover,recoverOrphans,1870,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['recover'],['recoverOrphans']
Availability,"-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed time: 0.0107059s; ```; Specifically, please provide at least the following information:. * Which version of salmon was used? 1.1.0, 1.0.0 and 0.14.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? GitHub binary; * Which reference (e.g. transcriptome) was used? sample data from GitHub release; * Which read files were used? none; * Which which program options were used? -k 31 -i index -t sample_data/transcripts.fasta. **Expected behavior**; A clear and concise description of what you expected to happen.; I expected salmon 1.1.0 to run without a core-dump and produce similar results to 0.14.1. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Ubuntu 18.04.4 LTS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux firefly 5.3.0-40-generic #32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Using ""bcbio-nextgen"", with ""salmon 1.1.0"" installed by Anaconda: Removed this version because of core-dumps",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/500:2392,down,downloaded,2392,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500,1,['down'],['downloaded']
Availability,"-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Error 2; 1087.8 make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; 1087.8 make[1]: *** [CMakeFiles/Makefile2:281: CMakeFiles/libtbb.dir/all] Error 2; 1087.8 make: *** [Makefile:166: all] Error 2; ```. Any thoughts on whether this is possible at all?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/872:1494,error,error,1494,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872,8,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 13:37:41.409] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffd795e7700 (LWP 14279)]; [New Thread 0x7ffcf95e6700 (LWP 14280)]; [New T",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2892,avail,available,2892,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214,1,['avail'],['available']
Availability,"./salmon index -t Mus_musculus.GRCm38.cdna.all.norm.fasta -i GRCm38.cdna.all_index --type quasi -l 31. Dear Salmon list,. I am using the Salmon 0.8.1 binary for Mac OS X, Sierra, 10.12.8. I am trying to set up an mm10; mouse index. I downlaod the mouse cDNAs from Ensembl, and normlized the ends with galaxy.; I am running evelything in lib in case there are path issues.; Here is my directory:. c2b2afmd2:lib friedman$ ls; Mus_musculus.GRCm38.cdna.all.fa	libtbbmalloc_proxy.dylib; libtbb.dylib			salmon; libtbbmalloc.dylib. Here is my attemot to build an index:. c2b2afmd2:lib friedman$ ./salmon index -t Mus_musculus.GRCm38.cdna.all.norm.fasta -i GRCm38.cdna.all_index --type quasi -l 31; dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Applications/Salmon-0.8.2_macOX_10.12/lib/./salmon; Reason: image not found; Abort trap: 6. I would greatly appreciate any help that you might be able ot give. Thanks and best wishes,; Rich; Richard A. Friedman, PhD; Associate Research Scientist,; Biomedical Informatics Shared Resource; Herbert Irving Comprehensive Cancer Center (HICCC); Lecturer,; Department of Biomedical Informatics (DBMI); Room 825; Irving Cancer Research Center ; Columbia University Herbert and Florence Irving Medical Center; 1130 St. Nicholas Ave; New York, NY 10032; (212)851-4765 (voice); raf4@cumc.columbia.edu. http://www.columbia.edu/~raf4/index.html. “Will there still be ""Classics Illustrated” by the time I have children? I cannot; imagine raising kids without ""Classics Illustrated” .” -Rose Friedman, age 20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/215:234,down,downlaod,234,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215,1,['down'],['downlaod']
Availability,".1 boost/1.70.0-gcc libiconv/1.16; export CC=`which gcc`; export CXX=`which c++`. cd $MODULE_HOME; mkdir -p source/$PACKAGE_NAME/$VERSION; INSTALL_DIR=$MODULE_HOME/modules/$PACKAGE_NAME/$VERSION; mkdir -p $INSTALL_DIR; mkdir -p modfiles/$PACKAGE_NAME. cd source/$PACKAGE_NAME/$VERSION; wget $LATEST_RELEASE -O - | tar -xz --strip-components 1; cmake -DBOOST_ROOT=/global/software/sl-7.x86_64/modules/gcc/7.4.0/boost/1.70.0-gcc -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR; make; ```; And the tail of the output from make:. ```; creating: /clusterfs/vector/home/groups/software/sl-7.x86_64/source/salmon/1.5.1/scripts/../external/pufferfish-salmon-v1.5.1/tests/compile_tests/; inflating: /clusterfs/vector/home/groups/software/sl-7.x86_64/source/salmon/1.5.1/scripts/../external/pufferfish-salmon-v1.5.1/tests/compile_tests/int128_numeric_limits.cpp ; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.11"") ; -- Performing Test Iconv_IS_BUILT_IN; -- Performing Test Iconv_IS_BUILT_IN - Failed; CMake Error at /global/home/groups/consultsw/sl-7.x86_64/modules/cmake/3.15.1/share/cmake-3.15/Modules/FindPackageHandleStandardArgs.cmake:137 (message):; Could NOT find Iconv (missing: Iconv_LIBRARY); Call Stack (most recent call first):; /global/home/groups/consultsw/sl-7.x86_64/modules/cmake/3.15.1/share/cmake-3.15/Modules/FindPackageHandleStandardArgs.cmake:378 (_FPHSA_FAILURE_MESSAGE); /global/home/groups/consultsw/sl-7.x86_64/modules/cmake/3.15.1/share/cmake-3.15/Modules/FindIconv.cmake:120 (find_package_handle_standard_args); CMakeLists.txt:362 (find_package). -- Configuring incomplete, errors occurred!; See also ""/clusterfs/vector/home/groups/software/sl-7.x86_64/source/salmon/1.5.1/CMakeFiles/CMakeOutput.log"".; See also ""/clusterfs/vector/home/groups/software/sl-7.x86_64/source/salmon/1.5.1/CMakeFiles/CMakeError.log"".; ```; I'm also attaching the full CMake logs. This is right at the edge of my knowledge, so I'm not 100% sure I got libiconv installed corre",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/453#issuecomment-862737315:1856,Error,Error,1856,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453#issuecomment-862737315,1,['Error'],['Error']
Availability,".1',; 'ENST00000493496.5',; 'ENST00000460361.1',; 'ENST00000441953.6',; 'ENST00000431735.6',; 'ENST00000462670.1',; 'ENST00000491795.5',; 'ENST00000468378.1',; 'ENST00000383214.8',; 'ENST00000383213.8',; 'ENST00000486373.5',; 'ENST00000491702.1',; 'ENST00000478834.1',; 'ENST00000444757.5',; 'ENST00000429042.5',; 'ENST00000454420.5',; 'ENST00000425069.5',; 'ENST00000414757.5',; 'ENST00000414916.5']; ```; and, the other transcript is connected to ; ```; ['ENST00000376621.7',; 'ENST00000487166.1',; 'ENST00000383450.3',; 'ENST00000497332.1',; 'ENST00000441604.5',; 'ENST00000481420.1',; 'ENST00000487687.1',; 'ENST00000454829.5',; 'ENST00000490227.1',; 'ENST00000437917.5',; 'ENST00000481380.1',; 'ENST00000383596.6',; 'ENST00000488456.1',; 'ENST00000417834.5',; 'ENST00000486264.1',; 'ENST00000462708.1',; 'ENST00000478748.1',; 'ENST00000465483.1',; 'ENST00000478986.1',; 'ENST00000480572.1',; 'ENST00000497917.1',; 'ENST00000469494.1',; 'ENST00000489631.1',; 'ENST00000433809.1',; 'ENST00000456550.1',; 'ENST00000450423.1',; 'ENST00000435788.1',; 'ENST00000416639.1',; 'ENST00000443235.1',; 'ENST00000458592.1',; 'ENST00000430236.1',; 'ENST00000464231.1',; 'ENST00000496960.1',; 'ENST00000492408.1',; 'ENST00000479883.1',; 'ENST00000467241.1',; 'ENST00000483987.1',; 'ENST00000495838.1',; 'ENST00000467550.1']; ```; Clearly, in the alignment-based is connected to a lot of other transcripts connected, so their different behaviors is expected. ; I think this makes the solution so unstable that EM assigns all the reads to one rather than distributing them to other members. We need to look at the actual bootstrap/gibbs to have more insight. . I would also like to add, as @rob-p suggested previously, this is a classic example where EM algorithm is not that reliable, b/c of uncertainty and `terminus` might be the best answer. . Here is the [script](https://gist.github.com/hiraksarkar/30d8ce2d52035181e00be1479be50a57) for constructing the graph from the equivalence class file. . Best; Hirak",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/600#issuecomment-757504634:2773,reliab,reliable,2773,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/600#issuecomment-757504634,1,['reliab'],['reliable']
Availability,".6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking whi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:2589,Down,Downloads,2589,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Down'],['Downloads']
Availability,".fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-11-14 21:21:46.821] [alevinLog] [info] Found 116507 transcripts(+66 decoys, +39 short and +0 duplicate names in the index); [2021-11-14 21:21:46.932] [alevinLog] [info] Filled with 116545 txp to gene entries ; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Can't find gene mapping for : ENSMUST00000196221.1 w/ index 0; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Txp to Gene Map not found for 18446744073709551551 transcripts. Exiting; ```. I had also tried building the index myself using the Gencode mm10 transcripts downloaded [here](https://www.gencodegenes.org/mouse/), but it seems unclear how one could make the `tgMap` from that exact same genome version/patch. Is there a recommended way to extract `tgMap` from, for example, the GTF file provided on that same webpage?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/722:2267,error,error,2267,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722,5,"['ERROR', 'down', 'error']","['ERROR', 'downloaded', 'error']"
Availability,".manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:22795,avail,available,22795,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['avail'],['available']
Availability,"/All-H.m-reads/Trimmed/Sample_8-15/8-15_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_42-50_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-46-53_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-4-10_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_23-31/23-31_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P1_H.m_16-24_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_22-30/22-30_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_27-35/27-35_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_25-33/25-33_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-45-54_221020_L002_R1.fastq.gz""]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. script. #!/bin/bash; #SBATCH -p shared; #SBATCH -c 100; #SBATCH --mem=200G; #SBATCH --gres=tmp:300G; #SBATCH -t 36:00:00. module purge; module load bioinformatics; module load salmon/1.10.1. cd /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/. # Set the path to the Salmon index; salmon_index=""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/salmon_index"". # Set the path to the directory containing all the FASTQ files; fastq_dir=""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed"". # Use the find command to locate all R1 and R2 FASTQ files; r1_files=$(find ""$fastq_dir"" -name ""*1.fastq.gz""); r2_files=$(find ""$fastq_dir"" -name ""*2.fastq.gz""). # Loop through the found files; for i in ""${!r1_files[@]}""; do; r1_file=""${r1_files[i]}""; r2_file=""${r2_files[i]}"". # Extract the sample name; samp=$(basename ""$r1_file"" ""_1.fastq.gz""). # echo ""Processing sample ${samp}""; salmon quant -i salmon_index -l A -1 ""$r1_file"" -2 ""$r2_file"" -p 100 --validateMappings -o ""salmon_out/${samp}_quant""; done. thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:16965,echo,echo,16965,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['echo'],['echo']
Availability,"/Homo_sapiens.GRCh38.dna.primary_assembly.fa > \; /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa. * salmon index; /home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon index \; --transcripts /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa \; --kmerLen 31 \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --decoy /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt \; --keepDuplicates \; --threads 50. */home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon quant \; --libType A \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --unmatedReads /cold_data/zhaojiaxin/long_read/GRM/upstream-analysis/trim_polya/GRM/ONT_GRM_R01/ONT_GRM_R01.full_length.trim_polyA.filter.fasta \; --output /cold_data/zhaojiaxin/ensembl/salmon/transcripts_quant \; --seqBias \; --gcBias \; --posBias \; --geneMap /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.109.gtf \; --auxDir aux_info \; --incompatPrior 0 \; --threads 50. **Expected behavior**; I want the genes quantization results to appear normally in the file quant.genes.sf. **Desktop (please complete the following information):**; - OS : Ubuntu Linux; - Version ; uname -a：; Linux 1302ubuntu 6.8.0-40-generic #40~22.04.3-Ubuntu SMP PREEMPT_DYNAMIC Tue Jul 30 17:30:19 UTC 2 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a：; No LSB modules are available.; Distributor ID: Ubuntu; Description: Ubuntu 22.04.4 LTS; Release: 22.04; Codename: jammy. **Additional context**; I've already found a similar question, but it didn't solve my problem very well, the link to this question is as follows: https://github.com/COMBINE-lab/salmon/issues/569. As I understand it, one of the two questioners solved the problem by updating the salmon version, the other by tximport solved the problem. But first of all my salmon version is the latest 1.10.3, and secondly, I understand that tximport is an R package that handles salmon output files, which may not solve my problem. Looking forward to your professional reply and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/962:2602,avail,available,2602,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/962,1,['avail'],['available']
Availability,/Modules -DTBB_WILL_RECONFIGURE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as w,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835:1910,fault,fault,1910,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835,1,['fault'],['fault']
Availability,"/anndata.py in __getitem__(self, index); 1048 """"""Returns a sliced view of the object.""""""; 1049 oidx, vidx = self._normalize_indices(index); -> 1050 return AnnData(self, oidx=oidx, vidx=vidx, asview=True); 1051 ; 1052 def _remove_unused_categories(self, df_full, df_sub, uns):. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in __init__(self, X, obs, var, uns, obsm, varm, layers, raw, dtype, shape, filename, filemode, asview, obsp, varp, oidx, vidx); 280 if not isinstance(X, AnnData):; 281 raise ValueError(""`X` has to be an AnnData object.""); --> 282 self._init_as_view(X, oidx, vidx); 283 else:; 284 self._init_as_actual(. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in _init_as_view(self, adata_ref, oidx, vidx); 328 self._varp = adata_ref.varp._view(self, vidx); 329 # hackish solution here, no copy should be necessary; --> 330 uns_new = deepcopy(self._adata_ref._uns); 331 # need to do the slicing before setting the updated self._n_obs, self._n_vars; 332 self._n_obs = self._adata_ref.n_obs # use the original n_obs here. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 148 copier = _deepcopy_dispatch.get(cls); 149 if copier:; --> 150 y = copier(x, memo); 151 else:; 152 try:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in _deepcopy_dict(x, memo, deepcopy); 239 memo[id(x)] = y; 240 for key, value in x.items():; --> 241 y[deepcopy(key, memo)] = deepcopy(value, memo); 242 return y; 243 d[dict] = _deepcopy_dict. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 159 copier = getattr(x, ""__deepcopy__"", None); 160 if copier:; --> 161 y = copier(memo); 162 else:; 163 reductor = dispatch_table.get(cls). SystemError: <built-in method __deepcopy__ of numpy.ndarray object at 0x2aab0b27cc60> returned a result with an error set",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:7785,error,error,7785,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,1,['error'],['error']
Availability,"/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/290:2116,down,downloaded,2116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290,2,['down'],['downloaded']
Availability,"/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:1621,error,error,1621,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['error'],['error']
Availability,"/output_genome/salmon-1.9.0_linux_x86_64/bin/salmon alevin -l ISR -i /users/nklimper/data/nklimper/permexp/output_genome/salmon_partial_sa_index \; -1 /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L001_R1_001.fastq.gz \; /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R1_001.fastq.gz \; -2 /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L001_R2_001.fastq.gz \; /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R2_001.fastq.gz \; -o alevin_out_new -p 16 --tgMap /users/nklimper/data/nklimper/permexp/output_genome/txp2gene.tsv \; --chromiumV3; ```. There were no errors when running salmon alevin, however the lib_format_counts.json file shows that there were 0 fragments with concordant consistent mappings:. ```json; {; ""read_files"": ""[ [ /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L001_R1_001.fastq.gz, /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L001_R2_001.fastq.gz], [ /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R1_001.fastq.gz, /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R2_001.fastq.gz] ]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 250325422,; ""num_assigned_fragments"": 250325422,; ""num_frags_with_con",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/827:1544,error,errors,1544,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/827,1,['error'],['errors']
Availability,"/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:62: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2011:38: error: overloaded function with no contextual type information; rapmap::utils::writeSAMHeader(*index, salmonOpts.qmLog);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2014:25: error: ‘parserPtr’ was not declared in this scope; processReadsQuasi(parserPtr.get(), readExp, rl, structureVec[i],; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In instantiation of ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]’:; /nfs/sw/src/rescomp-6993/salmon/src",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:2636,error,error,2636,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"/salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23 20:11:20.618] [jointLog] [info] Index contained 199,612 targets. Segmentation fault: 11; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OSX; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ProductName:	Mac OS X; ProductVersion:	10.11.3; BuildVersion:	15D21. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:2822,fault,fault,2822,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,1,['fault'],['fault']
Availability,"/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [joint",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:28529,avail,available,28529,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['avail'],['available']
Availability,"0 0 22663523 427757 1037534 0 0 0 0; ```; The num_frags_with_concordant_consistent_mappings was high. The library format does indeed seem to be ISR. I was worried that including the premature RNA was causing a problem (e.g. if the reads emitted by these regions are caused by genomic DNA contamination). To rule out this possibility and experiment with an alternate tool to infer library format, I aligned the FASTQ files using HIAST2 and used RSeQC's infer_experiment.py python module using intronic and exonic features per gene in .bed format as input (http://rseqc.sourceforge.net/). In both cases, RSeQC was able to guess the correct library format (ISR):. ```; > rseqc.guess; SRR LibFormat Fraction of reads failed to determine Fraction of reads explained by 1++,1--,2+-,2-+ Fraction of reads explained by 1+-,1-+,2++,2-- features; 1: SRR9071838 This is PairEnd Data 0.0070 0.0096 0.9834 exonOnly; 2: SRR9071838 This is PairEnd Data 0.0012 0.0111 0.9877 intronOnly; 3: SRR9071839 This is PairEnd Data 0.0070 0.0095 0.9835 exonOnly; 4: SRR9071839 This is PairEnd Data 0.0012 0.0111 0.9877 intronOnly; 5: SRR9071840 This is PairEnd Data 0.0068 0.0128 0.9804 exonOnly; 6: SRR9071840 This is PairEnd Data 0.0009 0.0162 0.9829 intronOnly; 7: SRR9071841 This is PairEnd Data 0.0068 0.0133 0.9799 exonOnly; 8: SRR9071841 This is PairEnd Data 0.0011 0.0167 0.9823 intronOnly; 9: SRR9071842 This is PairEnd Data 0.0076 0.0115 0.9809 exonOnly; 10: SRR9071842 This is PairEnd Data 0.0011 0.0140 0.9849 intronOnly; 11: SRR9071843 This is PairEnd Data 0.0075 0.0097 0.9828 exonOnly; 12: SRR9071843 This is PairEnd Data 0.0012 0.0117 0.9871 intronOnly; 13: SRR9071844 This is PairEnd Data 0.0069 0.0127 0.9805 exonOnly; 14: SRR9071844 This is PairEnd Data 0.0011 0.0163 0.9827 intronOnly; 15: SRR9071845 This is PairEnd Data 0.0065 0.0125 0.9809 exonOnly; 16: SRR9071845 This is PairEnd Data 0.0010 0.0158 0.9832 intronOnly; ```. Any idea what could be happening here? Am I at fault? Your help is appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/655:6680,fault,fault,6680,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/655,1,['fault'],['fault']
Availability,"0-12-13 19:07:51.508] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-12-13 19:07:51.508] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-12-13 19:07:51.508] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2020-12-13 19:07:51.508] [jointLog] [info] parsing read library format; [2020-12-13 19:07:51.508] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/gencode_v36_decoy_salmon-1.4.0/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; ```. **To Reproduce**; Steps and data to reproduce the behavior:; Building the index:; 1. Download the transcript and the genome sequence of human, latest version; ```; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_36/GRCh38.primary_assembly.genome.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_36/gencode.v36.transcripts.fa.gz; ```; 2. unzip:; ```; gunzip gencode.v36.transcripts.fa.gz; gunzip GRCh38.primary_assembly.genome.fa.gz; ```; 3. following the instruction for building a SAF salmon index (https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ https://salmon.readthedocs.io/en/latest/salmon.html#what-s-this-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa | cut -d "" "" -f 1 > GRCh38.decoys.txt; sed -i 's/>//g' GRCh38.decoys.txt; cat gencode.v36.transcripts.fa GRCh38.primary_assembly.genome.fa | gzip > GRCh38.gentrome.fa.gz; salmon index -t GRCh38.gentrome.fa.gz -d GRCh38.decoys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/603:1902,Down,Download,1902,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603,1,['Down'],['Download']
Availability,"0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem=25000`**; - `scontrol show job 94`; ```; JobId=94 Name=g990_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901667 Account=(null) QOS=(null); JobState=COMPLETED Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:07:32 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T15:36:41 EligibleTime=2018-08-27T15:36:41; StartTime=2018-08-27T15:36:41 EndTime=2018-08-27T15:44:13; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:21595; ReqNodeList=(null) ExcNodeList=(null); NodeList=w19; BatchHost=w19; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryNode=25000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/990; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/990/tool_script.sh: line 50: 5713 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a ip 00007fe2fcdc2dca sp 00007fff27128b90 error 4 in libtbb.so.2[7fe2fcda0000+37000]; ```. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem=100000`**; - `scontrol show job 98`; ```; JobId=98 Name=g994_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) Group",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:1288,error,error,1288,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238,1,['error'],['error']
Availability,"0000384843 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000602568 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000384229 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000420508 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000608317 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000424410 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000417463 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000623071 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000447720 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000436681 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000416615 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000431488 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000411581 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000624642 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000564901 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000617743 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516211 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000612964 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000448260 appeared in the BAM index, but was not in the provided FASTA file; ERROR: Transcript ENST00000516334 appeared in the BAM index, but was not in the provided FASTA file; ```.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737:1945,ERROR,ERROR,1945,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267505737,9,['ERROR'],['ERROR']
Availability,"024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; ```; above warning repeated multiple times for different reads. ```; [2024-04-09 21:53:51.012] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 13013) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; /var/lib/slurm/slurmd/job14839922/slurm_script: line 27: 419663 Segmentation fault (core dumped) salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant. ```. **Additional context**; The bam files were generated from ONT direct RNA SQKRNA0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:7268,error,error,7268,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,1,['error'],['error']
Availability,"06 08:42:39.323] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2021-12-06 08:42:40.120] [puff::index::jointLog] [warning] Entry with header [ATMG00665.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping) ; ; [2021-12-06 08:43:01.886] [puff::index::jointLog] [warning] Removed 580 transcripts that were sequence duplicates of indexed transcripts. ; [2021-12-06 08:43:01.886] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag ; [2021-12-06 08:43:01.886] [puff::index::jointLog] [info] Replaced 698 non-ATCG nucleotides; [2021-12-06 08:43:01.886] [puff::index::jointLog] [info] Clipped poly-A tails from 24 transcripts; wrote 40811 cleaned references; Segmentation fault (core dumped); ```; ```; (lldb) bt; * thread #1, name = 'salmon', stop reason = signal SIGSEGV; * frame #0: 0x0000000000995120 salmon`rapidjson::PrettyWriter<rapidjson::BasicOStreamWrapper<std::__1::basic_ostream<char, std::__1::char_traits<char> > >, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::CrtAllocator, 2u>::PrettyPrefix(rapidjson::Type) [inlined] rapidjson::BasicOStreamWrapper<std::__1::basic_ostream<char, std::__1::char_traits<char> > >::Put(this=<unavailable>, c=',') at ostreamwrapper.h:51:9; frame #1: 0x0000000000995120 salmon`rapidjson::PrettyWriter<rapidjson::BasicOStreamWrapper<std::__1::basic_ostream<char, std::__1::char_traits<char> > >, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::CrtAllocator, 2u>::PrettyPrefix(this=<unavailable>, type=<unavailable>) at prettywriter.h:215; frame #2: 0x00000000004e10dc salmon`rapidjson::PrettyWriter<rapidjson::BasicOStreamWrapper<std::__1::basic_ostream<char, std::__1::char_traits<char> > >, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::CrtAllocator, 2u>::Bool(this=0x00007fffffff4a70, b=false) at prettywriter.h:96:35; frame #3: 0x00000000004e108f salmon`cereal::JSONOutputArchive::saveValue",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/725:1552,fault,fault,1552,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/725,1,['fault'],['fault']
Availability,"0m; hits: 66225532; hits per frag: 4.42625[A. [32mprocessed[31m 15500006 [32mfragments[0m; hits: 68431333; hits per frag: 4.42688[A. [32mprocessed[31m 16000002 [32mfragments[0m; hits: 70643320; hits per frag: 4.44249[A. [32mprocessed[31m 16500002 [32mfragments[0m; hits: 72850859; hits per frag: 4.42435[A. [32mprocessed[31m 17500001 [32mfragments[0m; hits: 77275281; hits per frag: 4.43251[A. [32mprocessed[31m 18000005 [32mfragments[0m; hits: 79494713; hits per frag: 4.433[A. [32mprocessed[31m 18500000 [32mfragments[0m; hits: 81710387; hits per frag: 4.43219[A. [32mprocessed[31m 19000001 [32mfragments[0m; hits: 83924289; hits per frag: 4.42804[A. [32mprocessed[31m 19500000 [32mfragments[0m; hits: 86134985; hits per frag: 4.43392[A. [32mprocessed[31m 20000000 [32mfragments[0m; hits: 88347210; hits per frag: 4.42895[A. [32mprocessed[31m 20500003 [32mfragments[0m; hits: 90559781; hits per frag: 4.43081[A. [32mprocessed[31m 21000000 [32mfragments[0m; hits: 92771131; hits per frag: 4.42429. [2018-08-16 19:47:49.632] [jointLog] [info] Computed 260771 rich equivalence classes for further processing; [2018-08-16 19:47:49.632] [jointLog] [info] Counted 19352476 total reads in the equivalence classes ; [2018-08-16 19:47:49.646] [jointLog] [info] Mapping rate = 91.4764%. [2018-08-16 19:47:49.646] [jointLog] [info] finished quantifyLibrary(); [2018-08-16 19:47:49.649] [jointLog] [info] Starting optimizer; /mnt/galaxy/tmp/job_working_directory/000/900/tool_script.sh: line 50: 5733 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxOcc 200 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --vbPrior 0.001; ```<details>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:29038,fault,fault,29038,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['fault'],['fault']
Availability,"1 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -pthread -ftree-vectorize -funroll-loops -fPIC -fomit-frame-pointer -O3 -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-unknown-pragmas -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -Wno-unused-function -Wno-unused-local-typedef -static-libstdc++ -Wno-unused-local-typedefs -rdynamic CMakeFiles/unitTests.dir/__/tests/UnitTests.cpp.o CMakeFiles/unitTests.dir/FragmentLengthDistribution.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o -o unitTests -L/home/mathog/src/salmon/lib -L/home/mathog/src/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" libsalmon_core.a libalevin_core.a -lgff -lpthread ../external/install/lib/libstaden-read.a -lz ../external/install/lib/libdivsufsort.a ../external/install/lib/libdivsufsort64.a ../external/install/lib/libbwa.a -lm -llzma -lbz2 -ltbb -lgomp -lrt ../external/install/lib/libjemalloc.a -lrt -ldl ../external/install/lib/libjemalloc.a -ldl`. Oh, I also had to update automake and autoconf because the 2 year old versions on this system were not new enough. Is there a static binary version of salmon available for download, Linux 64 bit? It looks like the default links are that way anyway, and that would save me what looks like at least another day of fighting with Cmake to force it to actually build a working make file. . You are developing on something like a recent Fedora or Ubuntu? In my experience packages which use boost and cmake inevitably cause a great great deal of pain when they are built on platforms like Centos or RHEL where long term support is one of the goals. They work fine on platforms which are cutting edge, but backwards compatibility extends back maybe 6 months or a year, tops.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:3572,avail,available,3572,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719,2,"['avail', 'down']","['available', 'download']"
Availability,"1 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-rec",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/268:1564,error,error,1564,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268,1,['error'],['error']
Availability,"1) So `--celseq2` isn't there, I had initially checked here, to make sure that there wasn't something wrong with my command.. ; ```; alevin; ==========; salmon-based processing of single-cell RNA-seq data. alevin options:. mapping input options:; -l [ --libType ] arg Format string describing the library ; type; -i [ --index ] arg salmon index; -r [ --unmatedReads ] arg List of files containing unmated reads ; of (e.g. single-end reads); -1 [ --mates1 ] arg File containing the #1 mates; -2 [ --mates2 ] arg File containing the #2 mates. alevin-specific Options:; --noDedup Stops the pipeline after CB sequence ; correction and quasi-mapping reads.; --dropseq Use DropSeq Single Cell protocol for ; the library; --chromium Use 10x chromium v2 Single Cell ; protocol for the library.; --gemcode Use 10x gemcode v1 Single Cell protocol; for the library.; --whitelist arg File containing white-list barcodes; --noQuant Don't run downstream barcode-salmon ; model.; --naive Run Gene level naive deduplication; --noSoftMap Don't use soft-assignment for quant ; instead do hard-assignment.; --mrna arg path to a file containing mito-RNA ; gene, one per line; --rrna arg path to a file containing ribosomal ; RNA, one per line; --useCorrelation Use pair-wise pearson correlation with ; True barcodes as a feature for ; white-list creation.; --dumpfq Dump barcode modified fastq file for ; downstream analysis by using coin toss ; for multi-mapping.; --debug Enabling this mode mode will try to ; ignore segfaults based on no whitelist ; mapping or no whitelist deduplicated ; count; --dumpBfh dump the big hash with all the barcodes; and the UMI sequence.; --dumpFeatures Dump features for whitelist and ; downstream analysis.; --dumpCsvCounts Dump cell v transcripts count matrix in; csv format.; --lowRegionMinNumBarcodes arg (=200) Minimum Number of CB to use for ; learning Low confidence region ; (Default: 200).; --maxNumBarcodes arg (=100000) Maximum allowable limit to process the ; cell barcodes.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536:929,down,downstream,929,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325#issuecomment-443517536,2,['down'],['downstream']
Availability,1.0 build error: openssl.c: undefined reference to `EVP_sha256',MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/443:10,error,error,10,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/443,1,['error'],['error']
Availability,"10,; ""num_processed"": 28233938,; ""num_mapped"": 13878036,; ""num_decoy_fragments"": 1377519,; ""num_dovetail_fragments"": 563891,; ""num_fragments_filtered_vm"": 1456279,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 2129372,; ""percent_mapped"": 49.153738313089728,; ""call"": ""quant"",; ""start_time"": ""Fri May 03 11:31:29 2024"",; ""end_time"": ""Fri May 03 11:33:32 2024""; }; ```. **Screenshots**. Program output from a failed process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:4967,recover,recoverOrphans,4967,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['recover'],['recoverOrphans']
Availability,"10; ```; It takes a bit to finish and once done I can do:. List the fasta headers of the decoy sequences; ```; head decoys.txt ; GL456210.1; chrX; chrY; GL456221.1; JH584304.1; ```. While this shows the the new hybrid (genome + transcriptome) fasta file which contains the decoy sequences from the genome, concatenated with the transcriptome (`gentrome.fa`) for a total of 119414 sequences.; ```; zcat gentrome.fa | grep ""^>"" | wc -l; gzip: gentrome.fa: decompression OK, trailing garbage ignored; 119414; ```. To create a salmon index do the following:; ```; salmon index \; -t /no_backup/indexes/salmon/mm10/gentrome.fa \; -i /no_backup/indexes/salmon/mm10 \; -d /no_backup/indexes/salmon/mm10/decoys.txt \; -k 28 --threads 6; ```; The author of `salmon` find that a *k* of 31 seems to work well for reads of 75bp or longer, but recommend considering a smaller *k* if you plan to deal with shorter reads. So I picked `28` cause I have 50bp SE. After the job starts I get this error message:; ```; Version Info: This is the most recent version of salmon.; [2021-12-24 17:32:49.324] [jLog] [info] building index; out : /no_backup/indexes/salmon/mm10; [2021-12-24 17:32:49.326] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2021-12-24 17:32:49.337] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000177564.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping); [2021-12-24 17:32:49.337] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000196221.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731:2340,error,error,2340,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731,1,['error'],['error']
Availability,"10x Genomics Chromium genomic DNA sequencing selects roughly one million barcodes at random with replacement from a possible pool of four million barcodes. Most errors likely result from DNA oligo synthesis rather than sequencing errors (intuition but unconfirmed). There's on other open source tool that does this task `ema preproc`: https://github.com/arshajii/ema#usage. The authors of `ema` have reported that correcting off-by-one errors is sufficient. Their tool corrects off-by-one errors by default, and can optionally correct off-by-two errors. Long Ranger Basic corrects off-by-two errors. The uncorrected barcode may be stored in the `RX:Z` tag. The corrected barcode is stored in the `BX:Z` tag. Thanks for considering this feature request!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395182521:161,error,errors,161,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395182521,12,['error'],['errors']
Availability,"14:04.047] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2023-08-17 22:14:04.083] [jointLog] [info] Mapping rate = 0%. It ultimately dies with a floating point error, probably for dividing by 0 somewhere. . The command I'm running is (and note that I have r1 and r2 swapped, per some other guidance. It dies earlier during barcode processing otherwise):. > salmon alevin -i /ref/gencode.v43.transcripts/ -l ISR -1 r2.fastq.gz -2 r1.fastq.gz -p 30 --splitseqV2 --tgMap /ref/gencode.v43_full.txMap -o salmon_output --expectCells 400. I tried to make it simpler and simpler, so that's a salmon index I made myself with no decoys, just the gencode transcript fasta with the software version I'm trying to run (salmon 1.10.2, from the combinelab/salmon docker hub), gencode v43 (I know, it's a version behind, but it's what I'm using elsewhere...) and hg38. It's handling the barcodes fine and recovering approximately the right amount (it's a sub-library with a few hundred cells to check the quality of the library before sequencing the full experiment). But it's failing to quantitate any of the reads. Oddly, just quantitating the read1 file with; > salmon quant -i /ref/gencode.v43.transcripts/ -l ISR -r r1.fastq.gz -p 30 -o work/salmon_output. behaves as expected and prints this and proceeds. > [2023-08-17 22:21:17.619] [jointLog] [info] Computed 618403 rich equivalence classes for further processing; > [2023-08-17 22:21:17.619] [jointLog] [info] Counted 6085013 total reads in the equivalence classes; > [2023-08-17 22:21:17.632] [jointLog] [info] Number of mappings discarded because of alignment score : 166235099. I found a discussion about the initial implementation of splitseq here with [this](https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-985198050) comment from @rob-p. I copied the geometry parameters he mentioned for this command:. > salmon alevin -i /ref/gencode.v43.transcripts/ -l A -1 r2.fastq.gz -2 r1.fastq.gz -p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/867:1772,recover,recovering,1772,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/867,1,['recover'],['recovering']
Availability,"14:31:01; Start : 2019-07-29T14:31:02; End : 2019-07-29T14:31:13; Reserved walltime : 6-06:00:00; Used walltime : 00:00:11; Used CPU time : 00:00:09; % User (Computation): 54.66%; % System (I/O) : 45.33%; Mem reserved : 2000M/core; Max Mem used : 0.00 (c11-71); Max Disk Write : 0.00 (c11-71); Max Disk Read : 0.00 (c11-71)```. I have gone back and checked the directory containing the PE reads, and; they are all accounted for, so I am a little stumped at the moment. I; appreciate any advice you may have. Happy Monday,. Sara. On Wed, Jul 24, 2019 at 3:04 PM Rob Patro <notifications@github.com> wrote:. > Hi @seboles <https://github.com/seboles> ,; >; > My guess is that the issue is related to this (non-salmon) error appearing; > before each salmon output:; >; > basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; >; > Try 'basename --help' for more information.; >; >; > it looks like there is an error in the way the paths to the files are; > being provided for the jobs, which is resulting in an incorrect command; > line being provided to salmon (and the index not being properly located).; > It's also of note that this is on the command line:; >; > -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz; >; >; > which is trying to expand a wildcard before read 1 but not read 2; is that; > intended?; >; > Any idea what the output is if you run:; >; > #!/bin/bash -l; >; > #SBATCH -J male_salmon_map; >; > #SBATCH -t 700:00:00; >; > #SBATCH -p high; >; > #SBATCH --cpus-per-task=24; >; > source ~/.bashrc; >; > source activate salmon; >; > cd /home/seboles/abaloneraw/salmon_quantification/salmon_male/abalone_orfs/; >; > ls -la salmon_index; >; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/408?email_source=notifications&email_token=AEHDXACFB45AVOUW4O3P5ODQBDGVZA5CNFSM4IGU4ZTKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD2XXV6I#issuecomment-514816761>,;",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408#issuecomment-516173395:1961,error,error,1961,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408#issuecomment-516173395,1,['error'],['error']
Availability,2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; -----------------------------------,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:4986,Error,Error,4986,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,3,['Error'],['Error']
Availability,"20-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249': File exists; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v1.1.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/jl2e19/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_1.fq }; ### [ mates2 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_2.fq }; ### [ validateMappings ] => { }; ### [ output ] => { /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/ }; Logs will be written to /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/logs; [2020-07-04 15:51:46.138] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-07-04 15:51:46.138] [jointLog] [info] parsing read library format; [2020-07-04 15:51:46.138] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/jl2e19/salmon_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /home/jl2e19/.conda/envs/SALMON/bin/salmon quant was invoked improperly.; For usage information, try /home/jl2e19/.conda/envs/SALMON/bin/salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:19013,Error,Error,19013,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,1,['Error'],['Error']
Availability,"2_index_gencode.v25.transcripts -p 16 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test4/${ID}; **** Job ends ****; Wed Mar 29 14:58:05 EDT 2017. ```. ### SGE email example info. ```; Job-array task 110316.1 (step6-salmon_test4.gsk_phaseII) Complete; User = lcollado; Queue = shared.q@compute-067.cm.cluster; Host = compute-067.cm.cluster; Start Time = 03/29/2017 14:53:42; End Time = 03/29/2017 14:58:05; User Time = 00:00:00; System Time = 00:05:39; Wallclock Time = 00:04:23; CPU = 00:05:39; Max vmem = 24.202G; Exit Status = 0; ```. Note that in this case, it didn't read the maximum memory requested (16 * 3 = 48 GB). ## Large memory, p 1. ### Bash. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-salmon_test5.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test5.$TASK_ID.txt; #$ -e ./logs/salmon_test5.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test5/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_te",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:7616,echo,echo,7616,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965,1,['echo'],['echo']
Availability,"2g.tsv"",; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz, Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 351484244,; ""num_assigned_fragments"": 351484244,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1727876200,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. For the selective alignment - Salmon quant. ```console; cat cmd_info.json ; {; ""salmon_version"": ""1.4.0"",; ""index"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/transcriptome_selective_alignment_index_salmon"",; ""libType"": ""ISR"",; ""threads"": ""32"",; ""unmatedReads"": ""Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz"",; ""output"": ""salmon_quant"",; ""validateMappings"": [],; ""writeMappings"": [],; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz ]"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 387129150,; ""num_assigned_fragments"": 387129150,; ""num_frags_with_concordant_consistent_mappings"": 399519815,; ""num_frags_with_inconsistent_or_orphan_mappings"": 0,; ""strand_mapping_bias"": 0.9389489029474045,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 375128692,; ""SR"": 24391123,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Download executable; * Which reference (e.g. transcriptome) was used?; GENCODE hg38; * Which read files were used?; 10x scRNA-seq files. Any insight about why are these differences in the mapped fragments happening would be much appreciated. . Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/702:5156,down,downloaded,5156,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/702,2,"['Down', 'down']","['Download', 'downloaded']"
Availability,"3 ip-172-31-16-139 kernel: [ 2134.447133] traps: salmon[7495] general protection ip:7ff9ce320dca sp:7ffd6e497020 error:0 in libtbb.so.2[7ff9ce2fe000+37000]; ```. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem-per-cpu=100000`**; - `scontrol show job 99`; ```; JobId=99 Name=g995_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901662 Account=(null) QOS=(null); JobState=COMPLETED Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:07:36 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T20:20:26 EligibleTime=2018-08-27T20:20:26; StartTime=2018-08-27T20:20:26 EndTime=2018-08-27T20:28:02; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:7975; ReqNodeList=(null) ExcNodeList=(null); NodeList=w21; BatchHost=w21; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryNode=100000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/995; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/995/tool_script.sh: line 50: 9700 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; Aug 27 20:27:57 ip-172-31-16-139 kernel: [ 2949.318784] traps: salmon[9700] general protection ip:7fb66057cdca sp:7ffe1bf3a900 error:0 in libtbb.so.2[7fb66055a000+37000]; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:4928,error,error,4928,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238,3,"['error', 'fault']","['error', 'fault']"
Availability,"3.32 reads per unique molecule. So it seems like the duplication rate might be closer to the SevenBridges estimate than the Alevin estimate. The Alevin documentation seems to suggest that cell/transcript/UMI triplets are being used for UMI collapsing (""identify potential PCR/sequencing errors in the UMIs, and performs hybrid de-duplication while accounting for UMI collisions""), so I'm at a loss as to why the difference is this large. I'm not too worried about numbers being different, but the UMI proportion is a concern to me, because sequencing is expensive, and it'd be good to have an idea of whether we need to further improve our library prep (which would certainly be the case for 9X duplication, but less important with 3-5X duplication). Is anyone able to explain how the UMI deduplication is applied in Salmon Alevin, or why it might be different from other analysis platforms?. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? Binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v42; * Which read files were used? NovaSeq 6000 S2; * Which program options were used?. ```; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; --mrna ${indexDir}/mt_genes.txt --rrna ${indexDir}/rRNA_genes.txt \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} --whitelist goodSampleTagCells.txt \; -p 10 -o salmon_1.9_cbc_whitelist_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**. I would expect the Salmon Alevin PCR duplication estimate to be similar to that of SevenBridges, or my semi-manual attempt (e.g. 3-5X). **Desktop OS/Version:**. `Linux musculus 5.18.0-4-amd64 #1 SMP PREEMPT_DYNAMIC Debian 5.18.16-1 (2022-08-10) x86_64 GNU/Linu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/808:2724,down,downloaded,2724,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808,2,['down'],"['download', 'downloaded']"
Availability,"3.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz; * Which read files were used? not quantifying yet, I'm at the indexing step.; * Which which program options were used? salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Expected behavior**; A clear and concise description of what you expected to happen.; Producing directory that contains indexed files to be applied to ""salm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:2075,fault,fault,2075,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,1,['fault'],['fault']
Availability,"30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-29 11:33:18.039] [jointLog] [info] Mapping rate = 43.5974%. [2018-08-29 11:33:18.039] [jointLog] [info] finished quantifyLibrary(); Analyzed 14 cells (0% of all).vinLog] [info] Starting optimizer; ......; ......; Analyzed 544 cells (16% of all). ERROR: cell doesn't have any read count; ------------------------------------------------------------; Sender: LSF System <lsf@ebi5-164>; Subject: Job 9248384: <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> in cluster <EBI> Exited. Job <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> was submitted from host <ebi-login-001> by user <mahogny> in cluster <EBI>.; Job was executed on host(s) <10*ebi5-164>, in queue <research-rh7>, as user <mahogny> in cluster <EBI>.; </homes/mahogny> was used as the home directory.; </homes/mahogny/common/data/henrikson_celsee_20180825> was used as the working directory.; Started at Wed Aug 29 11:26:42 2018; Results reported at Wed Aug 29 11:33:2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:4778,ERROR,ERROR,4778,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,1,['ERROR'],['ERROR']
Availability,"31:27.814] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2023-06-19 16:31:27.814] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-06-19 16:31:27.816] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2023-06-19 16:31:27.888] [alevinLog] [info] Found 39363 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); ### alevin (dscRNA-seq quantification) v1.10.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R1.fastq.gz }; ### [ mates2 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R2.fastq.gz }; ### [ chromiumV3 ] => { }; ### [ index ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/txfasta.idx }; ### [ threads ] => { 12 }; ### [ output ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2 }; ### [ tgMap ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/tgMap.tsv }; ### [ fldMean ] => { 250 }; ### [ fldSD ] => { 20 }; ### [ validateMappings ] => { }. [2023-06-19 16:31:27.949] [alevinLog] [info] Filled with 39363 txp to gene entries ; [2023-06-19 16:31:27.956] [alevinLog] [info] Found all transcripts to gene mappings; [2023-06-19 16:31:27.971] [alevinLog] [info] Processing barcodes files (if Present) . . [2023-06-19 16:31:28.595] [alevinLog] [info] Done barcode density calculation.; [2023-06-19 16:31:28.595] [alevinLog] [info] # Barcodes Used: 442596 / 442596.; [2023-06-19 16:31:28.601] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/853:2578,error,error,2578,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853,1,['error'],['error']
Availability,"4:29:38	CMD: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/290:1542,error,error,1542,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290,1,['error'],['error']
Availability,"4cfb0b230f58119448d1c82706f1c515f210cccaf4fdf7d"",; ""index_seq_hash512"": ""d683c5132cae8695500566a25eb95c0349427afe1664ac571160337850aa269b634ad444936bd6d35205597c4962636c8fadbcf6406ca409a159b65e5f53c59e"",; ""index_name_hash512"": ""e552bd7a70d98c20ff4cf07a83a5f25d2dafe4a78e3dff92348f3d566c9037ccde0de6d4040625ca065a7484dcb8d668c583822bf5138e1540f61685bc991290"",; ""index_decoy_seq_hash"": ""39d3837ea001def952e79d70003dbba0199cc859b32f26350abfa271a6741167"",; ""index_decoy_name_hash"": ""bd5cd185b9e3272a64108e64e2bc47bc0552046dba3ff53683edeafab750c9ab"",; ""num_bootstraps"": 10,; ""num_processed"": 28233938,; ""num_mapped"": 13878036,; ""num_decoy_fragments"": 1377519,; ""num_dovetail_fragments"": 563891,; ""num_fragments_filtered_vm"": 1456279,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 2129372,; ""percent_mapped"": 49.153738313089728,; ""call"": ""quant"",; ""start_time"": ""Fri May 03 11:31:29 2024"",; ""end_time"": ""Fri May 03 11:33:32 2024""; }; ```. **Screenshots**. Program output from a failed process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings im",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:4412,recover,recoverOrphans,4412,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['recover'],['recoverOrphans']
Availability,"4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; ```; above warning repeated multiple times for different reads. ```; [2024-04-09 21:53:51.012] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 13013) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; /var/lib/slurm/slurmd/job14839922/slurm_script: line 27: 419663 Segmentation fault (core dumped) salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:6778,error,error,6778,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,1,['error'],['error']
Availability,"5"" alt=""KCC4_table"" src=""https://user-images.githubusercontent.com/10292386/86509801-6d55a300-bd9f-11ea-9c69-8e269fc3ab1c.png"">. In this example, there are two regions in KCC4 with obviously different coverage. Ideally we would be able to have a default KCC4 transcript and a truncated isoform in the salmon index, and it would assign the reads appropriately, even though all of the reads that map to the truncated form would also multimap to the long form. Again, you can see in the table that salmon assigns reads parsimoniously to both transcripts with the default options, but with the length bias modeling turned off ALL of the reads are assigned to the long transcript. I also added a third transcript to the right end of the transcript which is inconsistent with the coverage profile and, as hoped, salmon did not assign any reads to that variant. So, in these two scenarios the default options produce nice results in line with our human intuition. 2. **Failure scenario with default options:** ; ![PDI1_example](https://user-images.githubusercontent.com/10292386/86509895-3df36600-bda0-11ea-8f0b-df0de4fefa31.png); <img width=""383"" alt=""PDI1_table"" src=""https://user-images.githubusercontent.com/10292386/86509897-40ee5680-bda0-11ea-9566-9f2bdab464f0.png"">. In this example there are four genes (oriented in the same direction) with wildly different expression levels. I added a ""PDI1_SuperTranscript"" which stretches from the 5' end of PDI1 to the 3' end of POF1 (so, all reads from all 4 genes would multimap to the super transcript). This is a contrived example to illustrate the technical details, but you could imagine similar biological scenarios, especially regarding splicing isoforms. With the default options, you get the counterintuitive result that all of the reads from just MGR1 and POF1 (the two lowest abundance transcripts) are assigned to the super transcript. EMC1 loses ~50% of its reads to the super transcript, and PDI1 only loses ~10%. I'm not showing it, but if you r",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/514#issuecomment-653747847:5138,Failure,Failure,5138,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514#issuecomment-653747847,1,['Failure'],['Failure']
Availability,"500] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-05-07 14:40:36.500] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-05-07 14:40:36.511] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 8 Million barcodes; processed 17 Million barcodes; processed 25 Million barcodes; processed 34 Million barcodes; processed 42 Million barcodes; processed 51 Million barcodes; processed 59 Million barcodes; processed 67 Million barcodes; processed 76 Million barcodes; processed 84 Million barcodes; processed 93 Million barcodes; processed 101 Million barcodesdes; processed 109 Million barcodes; processed 118 Million barcodes; processed 126 Million barcodes; processed 134 Million barcodes; processed 143 Million barcodesodes; processed 148 Million barcodes. [2019-05-07 14:42:18.567] [alevinLog] [info] Done barcode density calculation.; [2019-05-07 14:42:18.567] [alevinLog] [info] # Barcodes Used: 147999216 / 148515763.; [2019-05-07 14:42:19.496] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version . Linux ebi6-054.ebi.ac.uk 3.10.0-514.16.1.el7.x86_64 #1 SMP Fri Mar 10 13:12:32 EST 2017 x86_64 x86_64 x86_64 GNU/Linux; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 7.3 (Maipo); Release:	7.3; Codename:	Maipo. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362:3711,error,error,3711,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362,1,['error'],['error']
Availability,5df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626 - align length 3527) has no trained error model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; ```; above warning repeated multiple times for different reads. ```; [2024-04-09 21:53:51.012] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 13013) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:6360,error,error,6360,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,1,['error'],['error']
Availability,"6125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. **Desktop (please complete the following information):**. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. **Additional context**; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/317:2613,fault,fault,2613,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317,1,['fault'],['fault']
Availability,"7-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.269] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:17926,Error,Error,17926,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"7:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:21494,echo,echo,21494,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,6,['echo'],['echo']
Availability,"8 Name=g994_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901663 Account=(null) QOS=(null); JobState=RUNNING Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:08:19 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T20:06:23 EligibleTime=2018-08-27T20:06:23; StartTime=2018-08-27T20:06:23 EndTime=Unknown; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:2236; ReqNodeList=(null) ExcNodeList=(null); NodeList=w21; BatchHost=w21; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryCPU=100000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/994; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/994/tool_script.sh: line 50: 7495 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; Aug 27 20:14:23 ip-172-31-16-139 kernel: [ 2134.447133] traps: salmon[7495] general protection ip:7ff9ce320dca sp:7ffd6e497020 error:0 in libtbb.so.2[7ff9ce2fe000+37000]; ```. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem-per-cpu=100000`**; - `scontrol show job 99`; ```; JobId=99 Name=g995_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901662 Account=(null) QOS=(null); JobState=COMPLETED Reason=None Dependenc",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:3207,fault,fault,3207,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238,1,['fault'],['fault']
Availability,"8dd90e917d; seqHash 512 : 87b7752997ca977ff56d02f69857a32f13b3c39a0a084c72feaa2c97e698b9b04d80a88c6755b97aede5604b89fdf66789a14f7976a89597a7832760a47e8919; nameHash 256 : 54e47ff5eb21b38ef24c8ffa3fc2a192ee5d9c0541bc6ee2da9414ecbd0f8c59; nameHash 512 : 163b337219cfd19b0c4c99cece12c2c2b760b3bf7e4686dbe633259c78552a56f2f015f18740a33c18e0f14c5f362997395c3168590f3ad80704071cabfab13a; [2019-11-20 19:50:26.273] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2019-11-20 19:50:27.059] [puff::index::jointLog] [info] ntHll estimated 34379504 distinct k-mers, setting filter size to 2^30; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1073741824; Capacity = 2; Files: ; utr_library/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1073741824; Pass	Filling	Filtering; 1	17	42	; 2	2	0; True junctions count = 102593; False junctions count = 122933; Hash table size = 225526; Candidate marks count = 1387640; --------------------------------------------------------------------------------; Reallocating bifurcations time: 0; True marks count: 1100523; Edges construction time: 13; --------------------------------------------------------------------------------; Distinct junctions = 102593. approximateContigTotalLength: 29519449; counters:; 13519 5 4 5; ERROR!! DOESN'T SUPPORT STRING LENGTH LONGER THAN 255. String length: 317; ```. And the `output_sequences.fa` is from `qapa fasta -f genome/hg38/hg38.fa /qapa/qapa_3utrs.gencode_V31.hg38.bed output_sequences.fa`. The bed file is the pre-compiled annotation file from QAPA. **To Reproduce**; Steps and data to reproduce the behavior:. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Ubuntu 18.04.2 LTS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/451:2397,ERROR,ERROR,2397,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/451,1,['ERROR'],['ERROR']
Availability,"95% identity. Then, I took the complement of these sequences (all the left over intergenic stuff) and designated these as decoys. . I indexed the transcriptome with:; ```; rule index_transcriptome:; input:; seqs=ancient(""outputs/gtdb_genomes_salmon_ref/{gtdb_species}.fa""),; decoys=ancient(""outputs/gtdb_genomes_intergenic_comb/{gtdb_species}_clustered_intergenic_seq_names.txt""); output: ""outputs/gtdb_genomes_salmon_index/{gtdb_species}/info.json""; threads: 1; params: index_dir = lambda wildcards: ""outputs/gtdb_genomes_salmon_index/"" + wildcards.gtdb_species; resources:; mem_mb=16000,; tmpdir=TMPDIR; conda: ""envs/salmon.yml""; benchmark:""benchmarks/salmon_index_{gtdb_species}.txt""; shell:'''; salmon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys :",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:3592,down,downloaded,3592,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['down'],['downloaded']
Availability,": 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 UniDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [warning] Skipped 113 barcodes due to No mapped read; [2021-04-09 12:16:43.584] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting white listing of 81 cells; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting to make feature Matrix; [2021-04-09 12:16:43.589] [alevinLog] [info] Done making feature Matrix; Exception : [vector]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **To Reproduce**. I have uploaded the files used and a script to run a reproducible example:. https://www.dropbox.com/sh/ksn45n73bazp0rc/AABlsbkG-SLyKJN4DBO7zQ-va?dl=0. * Which version of salmon was used? 1.4.0; * How was salmon installed? bioconda. **Expected behavior**. Alevin should run to completion, with no errors. **Desktop :**; - OS: OSX; - Version: ProductName=Mac OS X, ProductVersion=10.15.7, BuildVersion=19H524. **Additional context**. The files are from a small test dataset - the reads have been subsampled and the genome reference sequence and annotation was filtered for the X chromosome. The index file was generated using the method describe here: https://combine-lab.github.io/alevin-tutorial/2020/alevin-velocity/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:7792,error,errors,7792,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['error'],['errors']
Availability,": Loadable section "".note.gnu.property"" outside of ELF segments; warning: Loadable section "".note.gnu.property"" outside of ELF segments; warning: Loadable section "".note.gnu.property"" outside of ELF segments; warning: Loadable section "".note.gnu.property"" outside of ELF segments; warning: Loadable section "".note.gnu.property"" outside of ELF segments; warning: Loadable section "".note.gnu.property"" outside of ELF segments; warning: Loadable section "".note.gnu.property"" outside of ELF segments; warning: Loadable section "".note.gnu.property"" outside of ELF segments; warning: Loadable section "".note.gnu.property"" outside of ELF segments; warning: Loadable section "".note.gnu.property"" outside of ELF segments; warning: Loadable section "".note.gnu.property"" outside of ELF segments; warning: Loadable section "".note.gnu.property"" outside of ELF segments; warning: Loadable section "".note.gnu.property"" outside of ELF segments; [New Thread 0x7ffff0987700 (LWP 17537)]. Thread 2 ""salmon"" received signal SIGSEGV, Segmentation fault.; [Switching to Thread 0x7ffff0987700 (LWP 17537)]; 0x00007ffff68202ab in je_tcache_bin_flush_small () from /lib64/libjemalloc.so.2; Missing separate debuginfos, use: yum debuginfo-install boost169-filesystem-1.69.0-4.el8.x86_64 boost169-iostreams-1.69.0-4.el8.x86_64 boost169-program-options-1.69.0-4.el8.x86_64 boost169-system-1.69.0-4.el8.x86_64 brotli-1.0.6-1.el8.x86_64 bzip2-libs-1.0.6-26.el8.x86_64 cyrus-sasl-lib-2.1.27-1.el8.x86_64 jemalloc-5.2.1-2.el8.x86_64 keyutils-libs-1.5.10-6.el8.x86_64 krb5-libs-1.17-9.el8.x86_64 libcom_err-1.44.6-3.el8.x86_64 libcurl-7.61.1-11.el8.x86_64 libgcc-8.3.1-4.5.el8.x86_64 libgomp-8.3.1-4.5.el8.x86_64 libidn2-2.2.0-1.el8.x86_64 libnghttp2-1.33.0-1.el8_0.1.x86_64 libpsl-0.20.2-5.el8.x86_64 libselinux-2.9-2.1.el8.x86_64 libssh-0.9.0-4.el8.x86_64 libstdc++-8.3.1-4.5.el8.x86_64 libunistring-0.9.9-3.el8.x86_64 libxcrypt-4.1.1-4.el8.x86_64 openldap-2.4.46-11.el8_1.x86_64 pcre2-10.32-1.el8.x86_64 tbb-devel-2018.2-9.el8.x86_",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/460#issuecomment-641594410:4950,fault,fault,4950,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460#issuecomment-641594410,1,['fault'],['fault']
Availability,":. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:1481,avail,available,1481,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['avail'],['available']
Availability,"; lightreceptor-1_S114_L005_R1_001.qc.fq.gz; mgonad-2_S121_L004_R1_001.qc.fq.gz mgonad-1_S120_L004_R1_001.qc.fq.gz; lightreceptor-2_S115_L004_R1_001.qc.fq.gz; lightreceptor-1_S114_L004_R1_001.qc.fq.gz -2; mgonad-2_S121_L006_R2_001.qc.fq.gz; lightreceptor-1_S114_L006_R2_001.qc.fq.gz; mgonad-1_S120_L006_R2_001.qc.fq.gz; lightreceptor-2_S115_L006_R2_001.qc.fq.gz; mgonad-2_S121_L005_R2_001.qc.fq.gz mgonad-1_S120_L005_R2_001.qc.fq.gz; lightreceptor-2_S115_L005_R2_001.qc.fq.gz; lightreceptor-1_S114_L005_R2_001.qc.fq.gz; mgonad-2_S121_L004_R2_001.qc.fq.gz mgonad-1_S120_L004_R2_001.qc.fq.gz; lightreceptor-2_S115_L004_R2_001.qc.fq.gz; lightreceptor-1_S114_L004_R2_001.qc.fq.gz ${i} -o ${i}_quant --seqBias; --gcBias --validateMappings; done```. And here is my output from salmon.log. [2019-07-30 10:40:14.624] [jointLog] [info] Fragment incompatibility prior; below threshold. Incompatible fragments will be ignored.; [2019-07-30 10:40:14.624] [jointLog] [error] You passed paired-end files to; salmon, but you passed 12 files to --mates1 and 13 files to --mates2. You; must pass the same number of files to both flags. Thank you in advance for any tips you may have for me. Sara. On Tue, Jul 30, 2019 at 10:30 AM Sara Boles <seboles@ucdavis.edu> wrote:. > Hi Avi,; >; > Here is the salmon log from one of my PE libraries. There are only 12; > libraries for each in the directory, which is why I got confused when it; > said 13. I will try putting in all of the file names and let you know how; > it goes. Thank you for all of your help.; >; > Sara; >; > [2019-07-29 15:58:39.034] [jointLog] [info] Fragment incompatibility prior; > below threshold. Incompatible fragments will be ignored.; > [2019-07-29 15:58:39.034] [jointLog] [info] Usage of --validateMappings; > implies use of minScoreFraction. Since not explicitly specified, it is; > being set to 0.65; > [2019-07-29 15:58:39.034] [jointLog] [info] Usage of --validateMappings,; > without --hardFilter implies use of range factorization.; > ran",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408#issuecomment-516521791:1625,error,error,1625,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408#issuecomment-516521791,1,['error'],['error']
Availability,"; observed = }; Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:observed = Library format { type: }; paired endLibrary format { type:paired end, relative orientation:, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:observed = inward, strandedness:(antisense, sense) }; (antisense, sense) }paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense)expected = Library format { type:Library format { type:; }paired endpaired endexpected = Library format { type:paired end, relative orientation:; , relative orientation:inwardinward, strandedness:(sense, antisense)observed = , strandedness:(antisense, sense) }; }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }expected = Library format { type:, relative orientation:Library format { type:paired end; ```. and so on... It seems that the [`LibraryFormat` class](https://github.com/COMBINE-lab/salmon/blob/a6a4fe0dcf71674a59eb901d5ec6933df40de7f2/src/LibraryFormat.cpp#L52) is performing this check, and that the string format method is producing all of this output on stderr. . I believe that the Salmon index I'm using contains some transcript sequences from the ""wrong"" strand, and it would be helpful if the program gave information about the observed mapping (maybe just the transcript sequence ID) so that I could track down the error during index generation. . It also seems that all of the above error output contains no line terminators, although maybe this has been fixed in a more recent version. ```; -bash-4.1$ salmon --version; version : 0.4.0; ```. cc @jmerkin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/16:2427,down,down,2427,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/16,3,"['down', 'error']","['down', 'error']"
Availability,"=''; SED=''; SET_MAKE=''; SHELL='/bin/sh'; STRIP=''; USE_NLS=''; VERSION='5.2.2'; XGETTEXT=''; XGETTEXT_015=''; XGETTEXT_EXTRA_OPTIONS=''; ac_ct_AR=''; ac_ct_CC='/Library/Developer/CommandLineTools/usr/bin/cc'; ac_ct_DUMPBIN=''; am__EXEEXT_FALSE=''; am__EXEEXT_TRUE=''; am__fastdepCCAS_FALSE=''; am__fastdepCCAS_TRUE=''; am__fastdepCC_FALSE=''; am__fastdepCC_TRUE=''; am__include='include'; am__isrc=''; am__leading_dot='.'; am__nodep='_no'; am__quote=''; am__tar='$${TAR-tar} chof - ""$$tardir""'; am__untar='$${TAR-tar} xf -'; ax_pthread_config=''; bindir='${exec_prefix}/bin'; build='arm-apple-darwin22.6.0'; build_alias=''; build_cpu='arm'; build_os='darwin22.6.0'; build_vendor='apple'; datadir='${datarootdir}'; datarootdir='${prefix}/share'; docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'; dvidir='${docdir}'; exec_prefix='NONE'; host='arm-apple-darwin22.6.0'; host_alias=''; host_cpu='arm'; host_os='darwin22.6.0'; host_vendor='apple'; htmldir='${docdir}'; includedir='${prefix}/include'; infodir='${datarootdir}/info'; install_sh='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/install-sh'; libdir='${exec_prefix}/lib'; libexecdir='${exec_prefix}/libexec'; localedir='${datarootdir}/locale'; localstatedir='${prefix}/var'; mandir='${datarootdir}/man'; mkdir_p='$(MKDIR_P)'; oldincludedir='/usr/include'; pdfdir='${docdir}'; prefix='/Users/jeremybono/Downloads/salmon-1.10.1/external/install'; program_transform_name='s,x,x,'; psdir='${docdir}'; sbindir='${exec_prefix}/sbin'; sharedstatedir='${prefix}/com'; sysconfdir='${prefix}/etc'; target_alias=''; xz=''. ## ----------- ##; ## confdefs.h. ##; ## ----------- ##. /* confdefs.h */; #define PACKAGE_NAME ""XZ Utils""; #define PACKAGE_TARNAME ""xz""; #define PACKAGE_VERSION ""5.2.2""; #define PACKAGE_STRING ""XZ Utils 5.2.2""; #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; #define PACKAGE_URL ""http://tukaani.org/xz/""; #define NDEBUG 1; #define HAVE_ENCODER_LZMA1 1; #define HAVE_ENCODER_LZMA2 1; #define HAVE",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:15073,Down,Downloads,15073,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Down'],['Downloads']
Availability,"=> { /scratch/prj/ppn_microglia_mod/directrna/salmon/transcripts_quant }; Logs will be written to /scratch/prj/ppn_microglia_mod/directrna/salmon/transcripts_quant/logs; [2024-04-09 18:22:04.559] [jointLog] [info] setting maxHashResizeThreads to 24; [2024-04-09 18:22:04.559] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2024-04-09 18:22:04.563] [jointLog] [info] numQuantThreads = 18; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""007_D14_transcript.bam"", fasta = ""/scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa"" . . .done. processed 0 reads in current round[2024-04-09 18:22:15.424] [jointLog] [info] replaced 4 non-ACGT nucleotides with random nucleotides; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has n",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:3010,error,error,3010,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,1,['error'],['error']
Availability,"=ON \; -DBOOST_LIBRARYDIR=/usr/lib64/boost169 \; -DBOOST_INCLUDEDIR=/usr/include/boost169 \; -DBoost_NO_SYSTEM_PATHS=ON \; .. 2>&1 | tee cmake_2020_06_08.log; ```; Inkscape was built using cmake a couple of weeks ago on the same system and the -D flags for Boost in the cmake invocation were sufficient, there was no need to modify its CMakeLists.txt. Perhaps you might to compare that CMakeLIsts.txt with salmon's to see why theirs works and salmon's does not. I reiterate my plea for salmon's cmake file to accept some form of ROOT_LIBGFF, ROOT_LIBSTADEN, and ROOT_LIBTBB. Those modules ; were all defined but cmake could only figure out TBB this time, and for all I know it won't next time around (since it failed to do so for no apparent reason on CentOS 7). Salmon is a useful program but it has so far failed to build using existing libraries on this OS (unless extraordinary measures were applied) for CO 6, 7, and now 8! This is the information it had to work with:. ```; echo $PATH; /usr/common/modules/el8/x86_64/software/libgff/1.2-CentOS-vanilla/bin:/usr/common/modules/el8/x86_64/software/io_lib/1.14.9-CentOS-vanilla/bin:/usr/common/modules/el8/x86_64/software/cmake/3.17.1-CentOS-vanilla/bin:/usr/lib64/ccache:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/usr/common/bin:/usr/common/modules/.local/bin:/usr/common/modules/bin; echo $LD_LIBRARY_PATH; /usr/common/modules/el8/x86_64/software/libtbb/2020.5-CentOS-vanilla/lib64:/usr/common/modules/el8/x86_64/software/libtbb/2020.5-CentOS-vanilla/lib:/usr/common/modules/el8/x86_64/software/libgff/1.2-CentOS-vanilla/lib64:/usr/common/modules/el8/x86_64/software/libgff/1.2-CentOS-vanilla/lib:/usr/common/modules/el8/x86_64/software/io_lib/1.14.9-CentOS-vanilla/lib; ls /usr/common/modules/el8/x86_64/software/io_lib/1.14.9-CentOS-vanilla/lib; libstaden-read.a libstaden-read.la libstaden-read.so libstaden-read.so.11 libstaden-read.so.11.1.0; ls /usr/common/modules/el8/x86_64/software/libgff/1.2-CentOS-vanilla/lib64; libgff.a. ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/460#issuecomment-640962684:1871,echo,echo,1871,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460#issuecomment-640962684,2,['echo'],['echo']
Availability,"> > Hmm strange! But `conda install salmon` still gives the same error for me.; > ; > Hi @charlotte-west,; > ; > Can you please try the following?; > ; > ```; > CONDA_SUBDIR=osx-64 conda create -n rosetta # create a new environment; > conda activate rosetta; > conda env config vars set CONDA_SUBDIR=osx-64 # subsequent commands use intel packages; > conda install salmon; > ```; > ; > These instructions came from (here)[https://github.com/Haydnspass/miniforge#rosetta-on-mac-with-apple-silicon-hardware] and have worked for me on my M1 laptop. My understanding is that conda / bioconda are still working on having worker nodes that can pre-compile native M1 executables. So, until that work is complete, it may be necessary to run certain native packages in a Rosetta environment. Let me know if this works for you.; > ; > Best, Rob. it worked for me but i had to remove the comments starting with the `#`",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-1384299365:65,error,error,65,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-1384299365,1,['error'],['error']
Availability,"> And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). Dists downloading their own dependencies is also forbidden in package managers such as FreeBSD ports and pkgsrc (which is cross-platform and I personally use on Mac, NetBSD, and RHEL). Trusting upstream scripts to pull stuff off the Internet is a security risk, so the package managers perform and validate (via checksum) all downloads in a separate stage. It would be nice not to have to hack out the download code from a build system in order to create and maintain a package.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040:31,down,download,31,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-989326040,5,"['down', 'error']","['download', 'downloading', 'downloads', 'error']"
Availability,"> Can you try doing:; > ; > ```; > export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0 2/lib; > ```; > ; > before running salmon? The problem is that the executable is looking for `libtbb` and `libtbb_proxy`, but they are not in the library path. Hi, Rob, thank you for replying, do you mean type those code in ""Terminal""? ; I tried it, and I got this message:. -bash: export: `2/lib': not a valid identifier",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/517#issuecomment-623073440:96,Down,Downloads,96,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517#issuecomment-623073440,1,['Down'],['Downloads']
Availability,"> Could you share the quant directory for one of the samples that has NANs in the bootstraps?. Hi Rob,. Thanks for your quick reply. Sleuth didn't show which sample caused the issue therefore I have to upload all samples used in this analysis. Here is a link to download it. https://send.firefox.com/download/ddf555a8eec9b6c7/#AUxMdiugHH6PSXJ7sayUlA. Thanks.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/529#issuecomment-637975180:262,down,download,262,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/529#issuecomment-637975180,2,['down'],['download']
Availability,"> Hey, I'm having the same kind of problem.; > ; > I aligned my PE reads against the transcriptome using BWA-mem and then sorted them by coordinates (as a regular procedure). I know Salmon assumes the alignments are not sorted, so I shuffled these bam files, and then run `salmon quant`. Here are the errors I got in a number of trials:; > ; > ### Fresh installation of Salmon; > ```; > conda create --name salmon -c bioconda salmon; > conda activate salmon; > ```; > ; > ### 1. Shuffling a bam file with `samtools collate`; > ```; > samtools collate \; > -@ 40 \; > -o SRR3212847.Aligned.Shuffled.bam \; > SRR3212847.Aligned.SortedByCoord.bam; > ; > salmon quant \; > -t mRNA.fasta \; > -p 20 \; > -l A \; > -a SRR3212847.Aligned.Shuffled.bam \; > -o SRR3212847.Aligned.Shuffled ; > ```; > ; > ```; > Version Info: This is the most recent version of salmon.; > # salmon (alignment-based) v1.4.0; > # [ program ] => salmon ; > # [ command ] => quant ; > # [ targets ] => { mRNA.fasta }; > # [ threads ] => { 20 }; > # [ libType ] => { A }; > # [ alignments ] => { SRR3212847.Aligned.Shuffled.bam }; > # [ output ] => { SRR3212847.Aligned.Shuffled }; > Logs will be written to SRR3212847.Aligned.Shuffled/logs; > [2021-01-08 12:43:44.680] [jointLog] [info] setting maxHashResizeThreads to 20; > [2021-01-08 12:43:44.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; > Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; > [2021-01-08 12:43:44.711] [jointLog] [info] numQuantThreads = 14; > parseThreads = 6; > Checking that provided alignment files have consistent headers . . . done; > Populating targets from aln = ""SRR3212847.Aligned.Shuffled.bam"", fasta = ""mRNA.fasta"" . . .done; > ; > processed 0 reads in current roundSegmentation fault (core dumped); > ```; > ; > ### 2. Shuffling a headless bam file with `samtools collate`; > (I think I saw something about the bam's header in another thread d",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/582#issuecomment-1343749456:301,error,errors,301,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/582#issuecomment-1343749456,1,['error'],['errors']
Availability,"> Hi @austin-abbvie,; > ; > Thanks for the report. Would you be able to share the offending BAM file and reference? I'm also tagging @gmarcais for input / ideas.; > ; > Thanks,; > Rob. I'll have to check with my manager to see if this is something I'm allowed to do. I also just attempted to use the --noErrorModel instead of --ont, but now I'm getting a `segmentation fault (core dumped)` after about 2M reads. These BAMs have been through a lot so I'm going to check to make sure they haven't been corrupted in some way. Here's an output from Picard's ValidateSamFile; ```; WARNING 2021-07-01 08:12:30 ValidateSamFile NM validation cannot be performed without the reference. All other validations will still occur.; INFO 2021-07-01 08:12:48 SamFileValidator Seen many non-increasing record positions. Printing Read-names as well. ## HISTOGRAM java.lang.String; Error Type Count; ERROR:MISSING_READ_GROUP 1; WARNING:RECORD_MISSING_READ_GROUP 1085776; ```. After adding a dummy read group to one of my bam files using Picard's AddOrReplaceReadGroups, I was able to successfully quantify my file using the --ont error model. I'll repeat this for the lot to see if this solves the problem!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305:369,fault,fault,369,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872314305,4,"['ERROR', 'Error', 'error', 'fault']","['ERROR', 'Error', 'error', 'fault']"
Availability,"> Hi @jashapiro,; > ; > I've just pushed a commit that should address this, adding both a ""full"" `cmd_info.json` and a reasonable `meta_info.json`. If this is something you need on short notice we can try an push out a 1.5.2 soon, otherwise, this will be in the next release.; > ; > Best,; > Rob. Hi Rob- . I was happy to wait, but since [you were so quick to push out `alevin-fry` 0.4.1](https://github.com/COMBINE-lab/alevin-fry/issues/22#issuecomment-885195051) , it might be nice to have the version bump here too, so we can use all of the available info in our pipeline!. Thanks for your quick responses!; -Josh",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/688#issuecomment-885209656:544,avail,available,544,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/688#issuecomment-885209656,1,['avail'],['available']
Availability,"> Hi Brian,; > ; > In general, I would argue that one should be cautious with removing PCR duplicates in RNA-seq data (unless you are dealing with reads with UMI tags). This is because reads that align to the same reference position can easily have come from alternative transcripts sharing the same underlying sequence. Hence, the normal tests used to infer PCR duplicates with e.g. DNA-seq reads can yield false-positives in RNA-seq. This is particularly true for highly abundant transcripts (or transcripts from highly-abundant genes).; > ; > We are currently working on the code that will do duplicate removal when UMI tags are present. That methodology can be extended to remove duplicates even without UMI tags --- though I'd generally caution against that for the reasons mentioned above. However, for the time being, if you have a strong need or desire to filter PCR duplicates, you could use alignment-based Salmon with a BAM file that has duplicates removed.; > ; > Finally, regarding the error you are getting during SAM validation; this sounds like a different issue. Would you mind providing a piece of that SAM file for me to take a look at? Specifically, I don't believe the quasi-mapping output file should even contain unmapped reads (unless you consider unmapped mates of orphaned reads).; > ; > --Rob. It is in the latest Salmon release?. Thanks",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-446191570:999,error,error,999,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-446191570,1,['error'],['error']
Availability,"> Hmm strange! But `conda install salmon` still gives the same error for me. Hi @charlotte-west,. Can you please try the following?. ```; CONDA_SUBDIR=osx-64 conda create -n rosetta # create a new environment; conda activate rosetta; conda env config vars set CONDA_SUBDIR=osx-64 # subsequent commands use intel packages; conda install salmon; ```. These instructions came from (here)[https://github.com/Haydnspass/miniforge#rosetta-on-mac-with-apple-silicon-hardware] and have worked for me on my M1 laptop. My understanding is that conda / bioconda are still working on having worker nodes that can pre-compile native M1 executables. So, until that work is complete, it may be necessary to run certain native packages in a Rosetta environment. Let me know if this works for you. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-1137183671:63,error,error,63,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-1137183671,1,['error'],['error']
Availability,> I have the exact same issue. Any solutions?. I think I ended up going down to version 1.4.0 and it worked.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/667#issuecomment-1016917355:72,down,down,72,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667#issuecomment-1016917355,1,['down'],['down']
Availability,> I have the same issue. None of the conda version works on my Linux Centos.; > Is there any library to add in the conda recipe to fix the issue ?. Similar issue here too with salmon 1.4.0 installed via conda in a clean environment; `salmon: error while loading shared libraries: libtbb.so.2: cannot open shared object file: No such file or directory`. Edit: apparently solved by downgrading `tbb` as suggested in https://www.biostars.org/p/494922/,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/565#issuecomment-802737580:242,error,error,242,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565#issuecomment-802737580,2,"['down', 'error']","['downgrading', 'error']"
Availability,"> Is this read set & reference txome available to try and reproduce this?. Unfortunately no, it's a generated fasta file (it used to work with 0.9.1 without ""validateMappings"" though). [info] Building 32-bit suffix array (length of generalized text is 462349554); processed 462000000 positions; khash had 208056876 keys. > Also, would it be possible to check if this occurs using the bioconda-packaged release?. Still a seg fault but I now have the following message:; WARNING: Could not associate known library type with read!; WARNING: PE compatibility function called with SE read!; expected: Library format { type:paired end, relative orientation:inward, strandedness:unstranded }, observed: Library format { type:, relative orientation:, strandedness: }; Segmentation fault: 11",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393236903:37,avail,available,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393236903,3,"['avail', 'fault']","['available', 'fault']"
Availability,"> It looks like it's having trouble parsing this folder name ""salmon-1.2.1-h2072146_0 2/"", what if you put it in quotes?; > ; > ```; > export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:""/Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0 2/lib""; > ```. Hi, Rob, I tried that, nothing happened",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/517#issuecomment-623133092:197,Down,Downloads,197,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517#issuecomment-623133092,1,['Down'],['Downloads']
Availability,"> Ok, when I attempt the build the way you say above, I get the following error during CMake:; > ; > ```; > -- fetch PUFFERFISH exit code 127; > CMake Error at CMakeLists.txt:317 (message):; > Could not fetch pufferfish source [fetchPufferfish.sh returned exit code; > 127]. Did you do the. ```; apt build-dep salmon; ```. step? I can't imagine that you get this problem if you follow my log step by step. Debian is usually using dynamic linking. By having all Build-Dependencies (which is ensured in the step above) the existence of the libraries is granted and the options for cmake I specified are ensuring that the libs are found. Kind regards, Andreas.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1464176548:74,error,error,74,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1464176548,2,"['Error', 'error']","['Error', 'error']"
Availability,"> On Dec 23, 2016, at 3:35 PM, Valentine Svensson <notifications@github.com> wrote:; > ; > I don't think sequencing errors of the UMI's is a big issue. I was thinking more of the reads.; > ; > I've been thinking in terms of (read, UMI) pairs and (transcript, UMI) pairs, and what the relation between them is.; > ; > Now, during mapping, an equivalence class get a count every time a read is mapped to it right? How feasible would it be to keep track of all UMI's which have been assigned to an equivalence task?; > ; It would be almost trivial.; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub, or mute the thread.; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269054923:116,error,errors,116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269054923,1,['error'],['errors']
Availability,"> Yes that's one aspect. But also, Salmon uses CIGAR to evaluate alignment probability in alignment quantification mode no?. Indeed. > And with just RapMap output you would lose other information that Salmon uses to determine likely fragment assignment?. You would lose information (in the format of a CIGAR string) that Salmon uses in alignment mode, but not any information, I think, that Salmon uses in quasi-mapping-based mode (though one would incur a non-trivial performance hit for filtering the quasi-mappings through file / disk rather than dealing with them directly in memory as Salmon normally does). > With UMI's you can deduplicate fragments before inferring where they were likely to come from. Ideally you would deduplicate the reads directly based on UMI, then you wouldn't have to think about PCR duplication in the quantification. But of course keeping a hash of all reads in a FASTQ and accounting for dequencing errors wouldn't be really tractable.. I guess this is the real question I have. Specifically, what is the true computational burden to detect and eliminate duplicates using UMIs? In theory, the reads must (1) map to the same location and (2) have the same UMI tag. How often would one expect the UMI tag to be modified / corrupted / etc.? Would you have to search all 1 or 2 hamming distance neighbors to detect duplicates reliably? Is an equivalence class a sufficient proxy for ""mapping to the same location"", or do we also care that e.g. the position of the fragment within each transcript is a duplicate as well? These are the main questions that are preventing me from implementing the ""obvious solution"".",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269001682:933,error,errors,933,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269001682,2,"['error', 'reliab']","['errors', 'reliably']"
Availability,"> You mean like cloud services to perform the DE analysis? It’s always possible to round the non-integer counts to the nearest integer. However, reliable abundance estimation tools (e.g. RSEM) have been around long enough now that it’s worth pushing any cloud service you might be using to properly deal with these types of inputs. We do differential analysis quite commonly with DESeq2, and salmon -> tximport -> DESeq2 is a quite low-friction solution. I noticed that now salmon can export the quant.gene.sf file if I add the parameters""-g xx.gtf"". What's difference between this file and the result of tximport? Can I use the result to replace tximport?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/437#issuecomment-1535046180:145,reliab,reliable,145,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/437#issuecomment-1535046180,1,['reliab'],['reliable']
Availability,"> hi @callumparr, I'm running into something similar, just wondering if you have a better idea now on your last comment (as in what qualifies as many errors)? thanks. Hi sorry, I did not get this resolved. In the end, I kind of just ignored the warnings. But in any case for those particular datasets, we also tried quantification through IsoQuant and Bambu. You may try those to compare to Salmon. . I am also intending to try oarfish, https://combine-lab.github.io/oarfish/ which was designed for long-read RNA seq datasets. From the looks of it you follow a similar strategy, first align to the transcriptome and then feed the BAM to oarfish to sort out multimapping reads.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/701#issuecomment-1981452288:150,error,errors,150,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701#issuecomment-1981452288,1,['error'],['errors']
Availability,"> thank you so much for your help today!. Sure, after all it is quite selfish ;-). I have been trying to generate smaller transcript db and fastq files but to no avail (can't make it fail again). However it looks like your test `if (denom <= ::minEQClassWeight)` could be not stringent enough:; invDenom:inf count:1 denom:2.77171e-321 minEQClassWeight:4.94066e-324; invDenom:inf count:1 denom:4.69042e-316 minEQClassWeight:4.94066e-324. These two lines result from:; groupSize: 2; i:0 tid:83966 aux:0.756044 expTheta[tid]:0; i:1 tid:83967 aux:0.243956 expTheta[tid]:7.23806e-321. groupSize: 2; i:0 tid:190925 aux:0.542131 expTheta[tid]:0; i:1 tid:272773 aux:0.457869 expTheta[tid]:6.2423e-316",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393842202:162,avail,avail,162,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393842202,1,['avail'],['avail']
Availability,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:1955,Error,Error,1955,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:3566,Error,Error,3566,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:6787,Error,Error,6787,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:8398,Error,Error,8398,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:10009,Error,Error,10009,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:11620,Error,Error,11620,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Plea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:13231,Error,Error,13231,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:16453,Error,Error,16453,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"> { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salmon ERROR code 137; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:4971,recover,recoverOrphans,4971,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,5,"['ERROR', 'echo', 'recover']","['ERROR', 'echo', 'recoverOrphans']"
Availability,"><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon_test/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon_test/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_test_quant"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""threads"": ""30"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. I have also run kallisto on same dataset to compare the results:. <details><summary>Mapping results from kallisto</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189235-0d711700-40f2-11ea-8952-1ca309554efd.png). </p>; </details>. As you can see there is quite a bit difference between two methods. Results from quasi mapping method look much similar to kallisto results. On the other hand, SAF method gave different results with lower mapping rates. My question is should one always trust the results from SAF method for downstream analysis since it supposed to give much accurate results? Is it usually normal to see this much differences between two methods (according to your [preprint](http://dx.doi.org/10.1101/657874) their correlation rate seems to be very high)? Might this lower mapping rate seen with SAF method be due to the discarded fragments that are mapped to decoys? Can it be said that SAF method doing better job dealing with rRNA contamination and therefore yields more accurate results but with lower mapping rates in my case?. I would be happy to provide more information if necessary. Thank you very much for your time. Best,; Kivanc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/479:5560,down,downstream,5560,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479,1,['down'],['downstream']
Availability,"@ECuris --- For single-end reads the prior *is* the posterior. It is only possible to reliably estimate fragment lengths when one has paired-end reads, since with single-end reads one only has a single mapping fragment end, and hence cannot estimate the implied fragment size. So, with paired-end reads, the prior values are largely unimportant (the data overwhelm them quickly), but with single-end reads, having a reasonable estimate of the fragment length mean and standard deviation is important, because the effective lengths of the transcripts will be derived from these values.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-285693301:86,reliab,reliably,86,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-285693301,1,['reliab'],['reliably']
Availability,"@Gaura that definitely seems promising! A few questions:. -Is quantification via alevin-fry (rather than alevin itself) mandatory here? I ask since your run seems successful whereas my full alevin run had a very poor BC detection and mapping rate. -I see you specified `-l A` - can you comment on what the detected/correct library type was here?. -I assume all of this will also work in conjunction with `--expectCells` or `--keepCBFraction` if those parameters were needed? Your ~7k cells detected is very close to the published number _post-filtering_, but no similar filtering has been done here yet. My guess is that the proportion of cells that pass these filters will be higher for alevin, but we may still be under-estimating the number of real cells by a little bit here. . -Is there any prospect of dealing with frameshift errors in the barcode detection step? Or is that out of scope?. Thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-987910445:832,error,errors,832,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-987910445,1,['error'],['errors']
Availability,"@Miserlou : it's also worth noting that the error message preceding the segfault in #323 is coming from the library (libstaden) that we use to parse SAM/BAM files. So, it's something where I think we will need a BAM that exhibits whatever triggers that behavior.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/320#issuecomment-444994980:44,error,error,44,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/320#issuecomment-444994980,1,['error'],['error']
Availability,@RG lines are at odds with binary encoded reference data Segmentation fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/323:70,fault,fault,70,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323,1,['fault'],['fault']
Availability,"@brejnev . ```; 280 if not isinstance(X, AnnData):; 281 raise ValueError(""X has to be an AnnData object.""); --> 282 self._init_as_view(X, oidx, vidx); 283 else:; 284 self._init_as_actual(; ```. This could be an informative error, is your adata objec an `AnnData` object ?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526#issuecomment-635472672:223,error,error,223,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526#issuecomment-635472672,1,['error'],['error']
Availability,"@cliftonlewis: could you tell us version of alevin-fry are you using? ; @rob-p: The cellbarcode length should be 21. It is variable b/w 19 or 20 so AC or A is added to make it 21. It could be the odd-even error we saw on previous version of alevin-fry. Wrt the run without `--justAlign`, I would need to take a closer look.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/813#issuecomment-1332726376:205,error,error,205,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813#issuecomment-1332726376,1,['error'],['error']
Availability,"@ctb — One thing that would be required for this (apart from some engineering of the command-line parsing / validation code) is a trustworthy, efficient, _multithreaded_ `FAST(A/Q)` parser for interleaved format reads. Right now, Salmon (& Sailfish, &RapMap, & most of the other HTS-centric methods we're developing) use the Jellyfish 2 read parser. I've made this choice since it's fairly simple to use, yet provides nice parallel performance and, most importantly, is fairly well-tested and trust-worthy. Can you suggest a reliable, well-tested, concurrency-enabled library for parsing reads in interleaved format?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801:525,reliab,reliable,525,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827801,2,['reliab'],['reliable']
Availability,@curtisd0886 -- I think this may be my fault. I think the pre-compiled binary I uploaded may be cut from the wrong tag. Let me fix it and report back here.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/670#issuecomment-860935816:39,fault,fault,39,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/670#issuecomment-860935816,1,['fault'],['fault']
Availability,"@deevdevil88,. As an update to this, you can now use the alevin -> [alevin-fry](https://alevin-fry.readthedocs.io/en/latest/) pipeline to quantify with different strategies for filtering. If you're using a technology with an external permit list (like 10x chromium), you can recover and quantify unfiltered cells as well as of version 0.2.0 using the `--unfiltered-pl` flag. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/538#issuecomment-825059035:275,recover,recover,275,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/538#issuecomment-825059035,1,['recover'],['recover']
Availability,"@demis001 Salmon's `--geneMap | -g` option does take a GTF file (although you're correct that it can also take a two-column text file, and I think accepting both types of files in the same option is a bit confusing). See some context in this [old issue](https://github.com/COMBINE-lab/salmon/issues/114). I believe the issue you're seeing is that Ensembl will update transcript (and gene I think) versions like so:. ```; !! this is not real data, just a toy example. ensembl v24; -------------; ENST0000001.1; ENST0000002.1. ensembl v25; -------------; ENST0000001.2; ENST0000002.2; ```; and the GTF file you used to build the salmon index is ""ensembl v24"", but now you only have ""ensembl v25"" available during the `salmon quant` run. . **The most correct thing** to do at this point would be to either rebuild the salmon index using ""ensembl v25"" and rerun `salmon quant -g ensembl_v25.gtf`, or get the ""ensembl v24"" GTF file (re-download from Ensembl website) and pass this to `salmon quant -g ensembl_v24.gtf`. . **The thing would probably be okay** is to allow passing GTF files that do not exactly match the transcript accessions, where ""ENST0000001"" is the ""accession"" and "".1"" is the ""version"" - hence ""accession.version"". This way you can just ignore the version part of the transcript/gene names in the GTF file for the purposes of constructing a tx<>gene map.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282342092:694,avail,available,694,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282342092,2,"['avail', 'down']","['available', 'download']"
Availability,"@demis001, @mdshw5 -- this seems reasonable and easy enough to do. I just don't want to go too deep into the rabbit hole since tximport is my goto recommendation for this problem in the general case. Also, Mike and I have recently added some nice features there (the ability to import gibbs / bootstrap results) that will make it an even more useful way to interact with and process salmon data downstream. My question for implementing this feature is what version ""split string"" should I consider. Is it always '.'? Do some schemes use '_'? Does this string itself have to be a parameter?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282063258:395,down,downstream,395,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-282063258,1,['down'],['downstream']
Availability,"@diegoalzatec86 I think you are referring to this page - https://combine-lab.github.io/salmon/getting_started/. I myself have used that I did not encounter any errors or anything related to sailfish when I used the very same shell script you are alluding to.. I don't know which tutorial has the sailfish code that you state - https://github.com/COMBINE-lab/salmon/issues/508#issuecomment-614279802. @rob-p Check this https://raw.githubusercontent.com/COMBINE-lab/salmon/gh-pages/assets/quant_tut_samples.sh . Probably you landed on a wrong or outdated tutorial page . As previously mentioned many times in this GH issue, most of sailfish code is within salmon . Either way, I think you should use bioconda to upgrade to 1.2.0 and start using salmon as the quantification tool",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/508#issuecomment-614298125:160,error,errors,160,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/508#issuecomment-614298125,1,['error'],['errors']
Availability,@diegoalzatec86 Probably you can try with salmon 1.2.0 and post back here . Try downloading via the bioconda channel - https://bioconda.github.io/recipes/salmon/README.html,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/508#issuecomment-614225512:80,down,downloading,80,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/508#issuecomment-614225512,1,['down'],['downloading']
Availability,"@diegoalzatec86,. Sailfish is *not* required to run salmon. Salmon is a completely different tool, and it has subsumed and largely obviated sailfish. I would recommend using salmon rather than sailfish to do any RNA-seq quantification. Can you show what command you were running when you got the error:. ```; bash: sailfish: command not found_; ```. ?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/508#issuecomment-614227322:296,error,error,296,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/508#issuecomment-614227322,1,['error'],['error']
Availability,"@hiraksarkar: it says 'CMake Error: The source directory ""<>/salmon-0.12.0_linux_x86_64"" does not appear to contain CMakeLists.txt. Specify --help for usage, or press the help button on the CMake GUI.'",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449688983:29,Error,Error,29,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449688983,1,['Error'],['Error']
Availability,"@k3yavi - is it possible to skip the thresholding entirely, so as to use downstream tools to remove empty barcodes instead?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490795334:73,down,downstream,73,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490795334,1,['down'],['downstream']
Availability,"@k3yavi @rob-p ; Thank you for the prompt responses! I executed the following but seems to get no ""quant.sf"" as output (in fact no other output except for the log file). I don't find ""AlignmentLibrary"" object even though the log states that it did. Do you know what went wrong? Thank you!. Command:; ```bash; salmon quant -e ./aux_info/eq_classes.txt.gz --libType IU -o ./; ```. Output log:; [2020-09-18 20:01:55.879] [jointLog] [info] setting maxHashResizeThreads to 8; [2020-09-18 20:01:55.879] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-09-18 20:01:55.879] [jointLog] [info] numQuantThreads = 4; [2020-09-18 20:02:50.408] [jointLog] [warning] Missing effective lens for 47121 transcripts; setting to 100.0.; [2020-09-18 20:02:50.408] [jointLog] [warning] NOTE: Since effective lengths are not provided, please do not rely on the TPM field ; in the ouput quantifications. Only the NumReads field will be reliable.; [2020-09-18 20:02:50.410] [jointLog] [info] Found total 187671 eqclasses and 47121 transcripts; [2020-09-18 20:02:50.682] [jointLog] [info] Created AlignmentLibrary object. My Salmon version is v1.3.0.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/567#issuecomment-695157454:976,reliab,reliable,976,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/567#issuecomment-695157454,1,['reliab'],['reliable']
Availability,"@k3yavi @rob-p Thanks for work pertaining to new Salmon indexing methods as mentioned in this preprint: https://www.biorxiv.org/content/10.1101/657874v2. Some questions on salmon index building with salmon/v1.0 (as I am confused following the documentation at https://salmon.readthedocs.io/en/latest/salmon.html) - let me know if my understanding is correct. 1. Is this how to create SAF indices - https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ - with these steps, I assume I do not have to separately download mashmap and bedtools software. 2. If one has to use SA method, does one still use the generateDecoyTranscriptome.sh method as listed here - https://github.com/COMBINE-lab/SalmonTools/blob/master/scripts/generateDecoyTranscriptome.sh (and this requires the gff file, mashmap and bedtools software). 3. SA and SAF both require genome. Can I still use `salmon index` on the transcriptome file without using genome files? Based on the release notes quoted (copy/pasted) below, I am worried about the phrase `""mapping without selective alignment is disabled""`). . Salmon v1.0 release notes state: . > changes since v.014.1; > In this release of salmon, selective-alignment is enabled by default (and, in fact, mapping without selective-alignemnt is disabled). We may explore, in the future, ways to allow disabling selecive-alignment under the new mapping approach, but at this point, it is always enabled.; > ; ; 4. Page 18 of your preprint pdf states that you used ""salmon v0.15.0 for quasi-mapping"" - so I am assuming I have to keep 2 versions of salmon in my system if I have to do both quasi-mapping and SA/SAF?. 5. Page 19 of your preprint pdf states you used `--mimicBT2 and --useEM for SA and SAF` quantification methods. Is this the recommendation while using SA and SAF methods? ; From salmon v01.4.1 with SA method, I have all along used the default `VBEM `and `--validateMappings` based on info in [SalmonReadTheDocs](https://salmon.readthedocs.io/en/latest/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/442:527,down,download,527,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/442,1,['down'],['download']
Availability,"@k3yavi beat me to it! It is, unfortunately, a recurring problem. The SRA file itself only contains one of the reads and is therefore essentially useless in analyzing the single-cell data. This is an ongoing problem that I've mentioned several times, but I don't know if the SRA has a plan in place to address it. The proper solution at this point is exactly as Avi suggests; download the bam file (what the SRA calls the original TenX format data), and run it through 10x's bamtofastq to get back the original fastq files (this time paired-end) that you can process. Let us know if you have success with this. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/769#issuecomment-1107843588:376,down,download,376,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/769#issuecomment-1107843588,1,['down'],['download']
Availability,"@k3yavi let me share my status. > salmon-latest_linux_x86_64.tar.gz; > Mac-Osx v 10.13.2. I downloaded the binary file. And it works! :) Thanks. In other words, I downloaded below binary file on release page.; https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz. But it did not work like this. ```; $ wget https://github.com/COMBINE-lab/salmon/releases/download/v0.11.2/salmon-0.11.2-linux_x86_64.tar.gz; $ tar xzvf salmon-0.11.2-linux_x86_64.tar.gz; $ cd salmon-0.11.2-linux_x86_64/; $ ./salmon --help; -bash: ./salmon: cannot execute binary file; ```. I have not tried to install by bioconda yet.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401:92,down,downloaded,92,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412661401,4,['down'],"['download', 'downloaded']"
Availability,"@kalanir,. Can you please direct me to the files you used to build the index? Is the docker image above the one from docker hub? I would be hopeful, if this happens in docker, we could track down what's going on. When you say it works with an older version, can you tell me whst version works for you with this index?. Thanks, ; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/559#issuecomment-674827706:191,down,down,191,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/559#issuecomment-674827706,1,['down'],['down']
Availability,@lizhaozhi Do you have R 4.0.3 in your conda enviornment? 0.14 is the version of Salmon that conda tries to downgrade me to when I try to update from R 4.0.2 to R 4.0.3 see: https://github.com/COMBINE-lab/salmon/issues/594,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/592#issuecomment-736855646:108,down,downgrade,108,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/592#issuecomment-736855646,1,['down'],['downgrade']
Availability,"@mdshw5 --- Salmon has definitely become less ""complain-y"" in the newer versions. That is, it will no longer spew out error messages for all of the fragments that show up in an unexpected orientation. However, the summary statistics are currently very ""summary"". There is a file in the quantification directory called `libFormatCounts.txt` that summarizes the number of alignments seen in the different orientations etc. However, I _really_ like your idea of recording the ""violating"" transcripts. That is, we could maintain some ""threshold"" beyond which if there are these many ""incorrectly"" mapping fragments for a transcript, the transcript is recorded and reported to the user as potentially being in the wrong orientation in the index.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/16#issuecomment-144479133:118,error,error,118,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/16#issuecomment-144479133,1,['error'],['error']
Availability,"@mdshw5 I checked the md5sum of the file that I was using before and it had a different value, so I downloaded again, this time the md5sum matched.; ```; $ md5sum Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz; 3979cd3a2d5fe408b6261ae5b1d0c4de Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz; ```; I rerun the indexing and quantification, but still get exactly the same error. . Next I am running it locally (not the cluster) to check wether this solves the issue.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377157736:100,down,downloaded,100,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377157736,2,"['down', 'error']","['downloaded', 'error']"
Availability,"@moschmi,. @roryk's parsing of the error is exactly what is intended. Specifically, alevin is looking to map the transcript `PB.40054.21` to a gene, but it is not finding that transcript in the file `PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv`. The question is a bit trickier when you have your own long-read derived transcriptome, since I don't know the process by which you are grouping transcripts into genes. It is always possible to have a transcript be its own gene (by having it appear in both the first and second columns in the same line of this file) — however, then you will lose information about how this transcript and other transcripts belonging to the same gene are related, which plays into how alevin quantifies gene-level abundance.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/540#issuecomment-648204069:35,error,error,35,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540#issuecomment-648204069,1,['error'],['error']
Availability,"@rob-p . I did notice that the header was missing so I am looking into getting the original. I downloaded/unzipped the files you sent and seem to still have the same issue, though. ; ```; $ conda activate salmon; $ cd ~/opt/anaconda2/envs/salmon; $ ./bin/salmon quant -l IU -t transcripts.fa -a sample_alignments.sam -o quant_directory; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.2.0; # [ program ] => salmon ; # [ command ] => quant ; # [ libType ] => { IU }; # [ targets ] => { transcripts.fa }; # [ alignments ] => { sample_alignments.sam }; # [ output ] => { quant_directory }; Logs will be written to quant_directory/logs; [2020-04-21 11:46:41.365] [jointLog] [critical] Note: Alignment-free mapping (i.e. mapping without subsequent selective-alignment) has not yet been throughly tested under the pufferfish-based index and using the pufferfish-based mapping strategies. Thus, disabling of selective-alignment is not currently allowed. We may, potentially explore re-enabling this option in future versions of salmon. ```. To set up Salmon, I entered the following per the Getting Started Guide:; `$ conda config --add channels conda-forge`; `$ conda config --add channels bioconda`; `$ conda create -n salmon salmon`. Then, set the wd to `~opt/anaconda2/envs/salmon`. To run, I dropped the `transcripts.fa` and `seq.bam`/`seq.sam` file into the ~opt/anaconda2/envs/salmon and ran it. I noticed that if I moved the files to an entirely separate directory or deleted them all together and ran `./bin/salmon quant -l IU -t transcripts.fa -a sample_alignments.sam -o quant_directory`, the same error came up. Is it possible that there is an issue with Salmon reading the files?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/511#issuecomment-617263834:95,down,downloaded,95,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/511#issuecomment-617263834,2,"['down', 'error']","['downloaded', 'error']"
Availability,"@rob-p . That's odd! Well, what you sent above works perfect the sample files you provided earlier. I am still not able to process my own - perhaps because of the header issue?. ```; $ ./bin/salmon --no-version-check quant -l OSR -t sequence.fasta -a myseq.sam -o quant; # salmon (alignment-based) v1.2.0; # [ program ] => salmon ; # [ command ] => quant ; # [ libType ] => { OSR }; # [ targets ] => { sequence.fasta }; # [ alignments ] => { myseq.sam }; # [ output ] => { quant }. Logs will be written to auts2_quant/logs; [2020-04-21 18:36:46.762] [jointLog] [info] setting maxHashResizeThreads to 8; [2020-04-21 18:36:46.762] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:outward, strandedness:(antisense, sense) }; [2020-04-21 18:36:46.764] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""myseq.sam"", fasta = ""sequence.fasta"" . . .done; Reference seq chr7 unknown; processed 0 reads in current roundSegmentation fault: 11; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/511#issuecomment-617454680:1147,fault,fault,1147,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/511#issuecomment-617454680,1,['fault'],['fault']
Availability,@rob-p . Yes - you are correct. Would you be making available pre-computed SAF gentrome indices as tarball on github or dropbox.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/444#issuecomment-550389858:52,avail,available,52,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/444#issuecomment-550389858,1,['avail'],['available']
Availability,@rob-p Ping on enhancing the `CMakeLists.txt` as proposed to allow building Salmon with Intel compilers?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/9#issuecomment-490874687:7,Ping,Ping,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/9#issuecomment-490874687,1,['Ping'],['Ping']
Availability,"@rob-p That's a good point. I have been relying on Picard for validating the files and this was flagged as an error. Incorrectly so as you point out. Is there any validation for the CIGAR strings that are generated? In some cases with some of the shorter transcripts, the operator falls of the end of the reference. ENST00000424567 is 135 bp long. . ```; NB501336:15:H3KVTBGXY:1:13202:16266:9834 99 ENST00000424567 1 1 1S150M = 1 -135 GTAGTCGAAACTGAAGAAGACAGAGACGCAAGAGAAATTCGATAAGTCGAAACTGAAGAAGACAGAGACGCAAGAGAAAAATCCACTGCCCGAGATCGGAAGAGCACACGTCAGAACTCCAGTCACCGTAGAAGCTCGTATGCCGTCTTCG * NH:i:7; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/94#issuecomment-250561171:110,error,error,110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/94#issuecomment-250561171,1,['error'],['error']
Availability,"@rob-p This is not running twice on same sample. I can see that this run generates a exit code of 1 for that run - however all files are there as needed. Other samples have a exit code 0. I looked up sample runs before and after - they seem to have correct exit codes and ran fine. Even this runs fine, but what triggers that error message - I am not sure. ```; failed to read 8 bytes; salmon quant invoked improperly; ```. I also reran my whole pipeline (qc_trimming etc and finally salmon) - this time with 5 samples only (and included the above sample) - the pipeline runs successfully. Not sure where to investigate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/512#issuecomment-618044865:326,error,error,326,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512#issuecomment-618044865,1,['error'],['error']
Availability,@rob-p We have our own Jenkins install at Gent University that we use to make sure [EasyBuild](http://easybuild.readthedocs.org/en/latest/) scripts build a wide range of scientific software. I don't think we're to open it up for free use. I see there is AppVeyor but they only support Visual Studio. I'll take a look at what's available.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/9#issuecomment-126522041:327,avail,available,327,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/9#issuecomment-126522041,1,['avail'],['available']
Availability,"@rob-p thanks for tagging me. I missed the primary discussion and went over it. ; @reganhayward , thanks for posting this interesting phenomenon. Checking for ambiguity is data driven, there are many sources of ambiguity, ; 1. Exon sharing (when both the transcripts share a splicing even and thereby share an exon.) ; 2. They originate from genes that ae paralogs of each other. ; 3. They share sequence of read length without an obvious clue (might stem some evolutionary event in the past.). Looking into the ensemble database `ENST00000374675.7` originates from [ENSG00000112473](https://grch37.ensembl.org/Homo_sapiens/Gene/Summary?g=ENSG00000112473;r=6:33168222-33172216) and `ENST00000428189.5` belongs to [ENSG00000229470.5](https://grch37.ensembl.org/Homo_sapiens/Location/View?db=core;g=ENSG00000229470;r=HSCHR6_MHC_DBB:30499388-30515186). The second one comes from an alternate assembly according to ensemble from the same chromosome 6. There is a possibility that there is exon sharing. But I can not be sure before doing a blast etc. . There is a way from salmon to track this down. If you use `-d` option for dumping equivalence classes then, we can check for equivalence classes where these transcripts occur. If they co-occure in an equivalence class then we could be sure that it is due to read sharing. If you can provide me the equivalence class file (should be a smaller one), I can look into it. The gibbs/bootstraps would come handy once we know the equivalence classes, since it will reveal how the uncertain the estimates are for these two transcripts when compared to their equivalence class members. . Best; Hirak",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/600#issuecomment-757473486:1090,down,down,1090,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/600#issuecomment-757473486,1,['down'],['down']
Availability,"@sudeep71 Hi there, I run into the same error when I use salmon. Would please tell me what you did to set a correct PATH ? Thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303068916:40,error,error,40,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303068916,1,['error'],['error']
Availability,"@tamuanand,. Right now, I added the code to dump the _salmon_ version into versionInfo.json. Which is a standard json file that goes in the index directory. Actually, that file already contains an index version key, which is simply a number that is incremented every time there is a change made that alters the binary representation of the index on disk. That is particularly useful because not every salmon version requires re-building the index. Regarding the feature I've added. It's fairly standard practice for us to put information that is meant to be read by both humans and machines (scripts, R packages downstream, etc.) into a JSON file. This makes it easy to access it simply from many languages, and to have _some_ (but not too much) structure to this data. There are even slick command line tools for pulling info out of JSON files (like [jq](https://stedolan.github.io/jq/)). If there is a strong reason that you need the _salmon_ version in its own text file, I'm willing to oblige and duplicate the information there. Just let me know.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/498#issuecomment-605694474:612,down,downstream,612,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/498#issuecomment-605694474,2,['down'],['downstream']
Availability,"@xflicsu Did you include ""unspliced"" transcript sequences in your reference? I could imagine your mapping rate goes down if you are not putting the intronic regions in the reference (so that intronic reads don't map)... You can get those unspliced transcript sequences e.g. from Ensembl BioMart.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/32#issuecomment-208324913:116,down,down,116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/32#issuecomment-208324913,1,['down'],['down']
Availability,"A bit delayed, but this relates to the questions I've been asking on the salmon gitter. . First, it's worth pointing out that the new 10x (v2) sequencing is a lot more like other bead methods, where (i) index reads (i7/i5) are for labelling biological samples (ii) read1 contains the combined cell and molecular/UMI barcodes (ii) read2 is the transcript 3' read. So it seems there is now some data format convergence. Either way, I'd guess that ongoing iterations of the high throughput platforms will keep one read for the transcript 3', reserving the other 2 or 3 reads for some combination of the sample, cell and molecular barcodes. . Before thinking about how to best collapse UMIs, there's also the issue of how best to QC the barcodes and beads. Jim Namesh has [some functions](http://mccarrolllab.com/wp-content/uploads/2016/03/Drop-seqAlignmentCookbookv1.2Jan2016.pdf); as does [Vasilis Ntranos](https://github.com/pachterlab/scRNA-Seq-TCC-prep/blob/master/README.md). Arguably this has nothing to do with salmon/kallisto though I think the kallisto guys were smart to include it. It's a good filter even if only for speeding things up. Then it's really what might be the most appropriate demultiplexing of fastqs to allow compatibility between tecnhiques, I guess. I quite like how the kallisto workflow ends up with a fastq per cell together with a matching UMI file. Then at the very least one can ignore the UMIs (perhaps going with what @vals suggests). Not sure if that's helpful. But thought to chime in as somebody we would love to see salmon working on the high throughput single-cell platforms that have sample, cell and molecular barcodes. Even if only to test how worthwhile UMIs genuinely are for most applications. This may be a controversial comment, but I suspect for me UMIs will largely end up the same way as spike-ins: useful for quantifying endogenous RNA recovered per cell but perhaps not all that useful beyond that for low read depth single-cell signature profiling.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-265619589:1912,recover,recovered,1912,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-265619589,1,['recover'],['recovered']
Availability,"A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86.fa""; output:; ""{out_data}/ref/idx/complete_ref_lens.bin"",; ""{out_data}/ref/idx/ctable.bin"",; ""{out_data}/ref/idx/ctg_offsets.bin"",; ""{out_data}/ref/idx/duplicate_clusters.tsv"",; ""{out_data}/ref/idx/info.json"",; ""{out_data}/ref/idx/mphf.bin"",; ""{out_data}/ref/idx/pos.bin"",; ""{out_data}/ref/idx/pre_indexing.log"",; ""{ou",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:1408,error,error,1408,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['error'],['error']
Availability,"A series of commit till 409e7508194176f596e394e18a4dd59c88d46def, adds a new mode activated with `--debug` command line flag. Will be available for use with the next planned release of Salmon v0.11.3 later this month.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/266#issuecomment-412352265:134,avail,available,134,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/266#issuecomment-412352265,1,['avail'],['available']
Availability,"AGCACCCCCCGACCCCACATCCCCTGCTTCACGGCCCCCCTCGCGGCCTACCCG; +SRR6327122.1 1 length=88; --7-<7----7---77----77A-7--7-A7-7---7-A-A7<F-777-77-A---A<A----77--77------------7------. * Which which program options were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { cell_barcode_seq.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 18:24:03.053] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-19 18:24:03.059] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 18:26:13.307] [alevinLog] [info] Done barcode density calculation",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:3314,avail,available,3314,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['avail'],['available']
Availability,AGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=yes; gl_cv_posix_shell=/bin/sh. ## ----------------- ##; ## Output variables. ##; ## ----------------- ##. ACLOCAL='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing aclocal-1.15'; AMDEPBACKSLASH='\'; AMDEP_FALSE='#'; AMDEP_TRUE=''; AMTAR='$${TAR-tar}'; AM_BACKSLASH='\'; AM_CFLAGS=''; AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'; AM_DEFAULT_VERBOSITY='1'; AM_V='$(V)'; AR=''; AS=''; AUTOCONF='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoconf'; AUTOHEADER='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoheader'; AUTOMAKE='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing automake-1.15'; AWK='awk'; CC='/Library/Developer/CommandLineTools/usr/bin/cc'; CCAS=''; CCASDEPMODE=''; CCASFLAGS=''; CCDEPMODE=''; CFLAGS=''; CFLAG_VISIBILITY=''; COND_ASM_X86_64_FALSE=''; COND_ASM_X86_64_TRUE='#'; COND_ASM_X86_FALSE=''; COND_ASM_X86_TRUE='#'; COND_CHECK_CRC32_FALSE='#'; COND_CHECK_CRC32_TRUE=''; COND_CHECK_CRC64_FALSE='#'; COND_CHECK_CRC64_TRUE=''; COND_CHECK_SHA256_FALSE='#'; COND_CHECK_SHA256_TRUE=''; COND_DECODER_ARMTHUMB_FALSE='#'; COND_DECODER_ARMTHUMB_TRUE=''; COND_DECODER_ARM_FALSE='#'; COND_DECODER_ARM_TRUE=''; COND_DECODER_DELTA_FALSE='#'; COND_DECODER_DELTA_TRUE=''; COND_DE,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:9440,Down,Downloads,9440,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Down'],['Downloads']
Availability,"Above list format @Yago-91 showed is also available for `salmon quant` to input multiple sequence files.; e.g. `salmon quant -l A -i reference -o result -1 {sample1_1.fastq.gz,sample2_1.fastq.gz} -2 {sample1_2.fastq.gz,sample2_2.fastq.gz}`",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/179#issuecomment-724756145:42,avail,available,42,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/179#issuecomment-724756145,1,['avail'],['available']
Availability,"Absolutely! And thank you for your quick responses! Just trying to make an index from Homo_sapiens.GRCh38.cdna.all.fa.gz (ftp://ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz) to use for a ENCODE fastq file (test file is https://www.encodeproject.org/files/ENCFF163DLM/@@download/ENCFF163DLM.fastq.gz). I'm working from a cluster computer in a salmon environment with biopython as the only other thing installed ; <img width=""750"" alt=""screen shot 2019-02-25 at 2 50 38 pm"" src=""https://user-images.githubusercontent.com/18176863/53374317-d1936780-390c-11e9-8370-51504ffb0996.png"">. Index is here: https://drive.google.com/file/d/1iKD-qfJKIViePE7Uu_1Wsp8z71oGipjN/view?usp=sharing",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467217789:314,down,download,314,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467217789,1,['down'],['download']
Availability,"Actually, I was only checking the package for building it on Debian, I don't use it personally. ; From that point of view of packaging the software for Debian it would be desirable to be able to build the software without any downloads during the build process. The reason for this is that building packages on the Debian build servers does not allow downloads for the very simple reason that this would bypass the QA checks for proper licensing of all files required to build some software (The same is true for Ubuntu and Linux distributions based on Debian). . Best, ; Gert",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-357167540:226,down,downloads,226,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-357167540,4,['down'],['downloads']
Availability,"Actually, homo sap long is causing this error, homo sap short is causing the related JSON error (`rapidjson internal assertion failure: IsObject()`)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442612022:40,error,error,40,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442612022,3,"['error', 'failure']","['error', 'failure']"
Availability,Add an error model specific to Oxford Nanopore long sequencing reads. Added a switch `--ont` that triggers the use of this error model (this implies `--noLengthCorrection`). The error model assumes IID error rate along the reads and a geometric length distribution of clipping at both ends of the reads. (valid after trimming the reads with Oxford's own trimmer).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/617:7,error,error,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/617,4,['error'],['error']
Availability,Add debug mode to avoid segmentation faults.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/266:37,fault,faults,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/266,1,['fault'],['faults']
Availability,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/99:100,error,errors,100,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99,9,"['Error', 'echo', 'error']","['Error', 'echo', 'error', 'errors']"
Availability,"After discovering the alternative geometry format, I see that unmodified Rhapsody reads should have the following settings:. --umi-geometry '1[53-60]' --bc-geometry '1[1-9,22-30,44-52]' --read-geometry '2[1-end]'. There's a bit of a challenge regarding error correction for the cell barcodes, in that they should be corrected in batches of 9 nucleotides (into 96 clusters of the most commonly-seen sequences).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/628#issuecomment-777893046:253,error,error,253,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628#issuecomment-777893046,1,['error'],['error']
Availability,"After generating issue #48, I took the recommendation of switching to the standard EM algorithm, but I'm having further problems. However, I don't think the problem was with the Variational EM algorithm, but an issue with how the dataset is behaving. . This is with the same dataset as before (single end, rRNA-depleted, second-strand protocol, extreme depth of 170M+ reads). I have the options --useFSPD and --biasCorrect turned on with library type ""SF""; the full call is . ```; salmon quant -i $SALMON_DIR -l SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT \; --numBootstraps 100 --useFSPD --geneMap $GENES \; --biasCorrect -p 59; ```. I had attempted to use wasabi and run sleuth, but I got an error where the number of transcripts passing the initial filter was ""NA"". I then discovered that for four samples, many of the transcripts had ""-nan"" generated for the ""NumReads"" column, and this led to all of them having ""-nan"" for the TPM column. One sample had ~100 that failed, but the other three had a variable 106K-109K out of 176K total transcripts fail. No warning or error was thrown during the quantifying or EM optimization steps, so I don't know what happened. Interesting, I should note that the NaNs are only generated when both biasCorrect and useFSPD are turned on. NaNs are not generated when I use only one or neither option. (this was only tested with one sample though). If you have immediate suggestions, that would be great. Otherwise, I can work on generating a test dataset.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/50:690,error,error,690,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50,2,['error'],['error']
Availability,"After starting a blank Ubuntu machine, and then executing:. ```; sudo apt-get update && \; sudo apt-get -y install screen git curl gcc make g++ python-dev unzip \; default-jre pkg-config libncurses5-dev r-base-core r-cran-gplots \; python-matplotlib python-pip python-virtualenv sysstat fastqc \; trimmomatic bowtie samtools blast2; sudo apt-get -y install cmake libboost-all-dev liblzma-dev. curl -O -L https://github.com/COMBINE-lab/salmon/archive/v0.5.0.tar.gz. tar xzf v0.5.0.tar.gz; cd salmon-0.5.0; cmake .; make; ```. gives. ```; In file included from /home/ubuntu/salmon-0.5.0/include/BAMQueue.hpp:146:0,; from /home/ubuntu/salmon-0.5.0/include/AlignmentLibrary.hpp:14,; from /home/ubuntu/salmon-0.5.0/src/SalmonUtils.cpp:13:; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp: In function 'bool checkProperPairedNames_(const char*, const char*, uint32_t)':; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp:247:33: error: 'BOOST_LIKELY' was not declared in this scope; if (BOOST_LIKELY(nameLen > 1)) {; ^; ```. I'm not sure if this is a Boost version requirement, or what -- looks like I have boost 1.54 installed. Suggestions welcome!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/24:919,error,error,919,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/24,1,['error'],['error']
Availability,Ah so what's happening is alevin is keeping around 500 low confidence CB for performing downstream whitelisting.; `[2021-12-10 15:28:09.434] [alevinLog] [info] Total 1501(has 500 low confidence) barcodes`,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/739#issuecomment-1022395566:88,down,downstream,88,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/739#issuecomment-1022395566,1,['down'],['downstream']
Availability,"Ah that makes sense, thank you for the explanation! Having a specific code/category to the set of unmapped codes used in the unmapped.txt file would be absolutely wonderful, and would give me all of the information I need to pursue my downstream use cases.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748#issuecomment-1098429513:235,down,downstream,235,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748#issuecomment-1098429513,1,['down'],['downstream']
Availability,"Ah yes, you are right - I did not have the `--gencode` flag for salmon indexing. Thank you @k3yavi! It is working perfectly now. . Perhaps some sort of quick grep of the index file name for `'gencode'` or within the file for multiple `'|'`s should be done to check if it's gencode followed by a warning/error if the `--gencode` flag is missing? When running `salmon alevin`, it also might be nice to fail sooner if possible (instead of after processing barcodes/fragments - can take a long time). If you agree/think this is easy enough I can open separate issues. The ensembl files do seem to be inconsistent about subversion. Here is the cdna file for the index and the GTF:; ```bash; zcat Homo_sapiens.GRCh38.cdna.all.fa.gz | awk 'NR % 2 {print $1 ""\t"" $4}' | head -n 5; >ENST00000632684.1 gene:ENSG00000282431.1; >ENST00000434970.2 gene:ENSG00000237235.2; >ENST00000448914.1 gene:ENSG00000228985.1; >ENST00000415118.1 gene:ENSG00000223997.1; >ENST00000631435.1 gene:ENSG00000282253.1. # for Homo_sapiens.GRCh38.94.gtf.gz; bioawk -c gff '$feature==""transcript"" {print $attribute}' <(gunzip -c Homo_sapiens.GRCh38.94.gtf.gz) | awk -F ' ' '{print substr($6,2,length($6)-3) ""\t"" substr($2,2,length($2)-3)}' | head -n 5; ENST00000456328 ENSG00000223972; ENST00000450305 ENSG00000223972; ENST00000488147 ENSG00000227232; ENST00000619216 ENSG00000278267; ENST00000473358 ENSG00000243485. # for Homo_sapiens.GRCh38.94.chr_patch_hapl_scaff.gtf.gz; bioawk -c gff '$feature==""transcript"" {print $attribute}' <(gunzip -c Homo_sapiens.GRCh38.94.chr_patch_hapl_scaff.gtf.gz) | awk -F ' ' '{print substr($6,2,length($6)-3) ""\t"" substr($2,2,length($2)-3)}' | head -n 5; ENST00000456328 ENSG00000223972; ENST00000450305 ENSG00000223972; ENST00000488147 ENSG00000227232; ENST00000619216 ENSG00000278267; ENST00000473358 ENSG00000243485; ```. For the gencode index and GTF. ```bash; bioawk -c gff '$feature==""transcript"" {print $attribute}' <(gunzip -c gencode.v29.annotation.gtf.gz) | awk -F ' ' '{print substr($4,2,",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/336#issuecomment-496266217:303,error,error,303,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/336#issuecomment-496266217,1,['error'],['error']
Availability,Alevin Segmentation fault after reading Cellular Barcodes.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/264:20,fault,fault,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264,1,['fault'],['fault']
Availability,Alevin segmentation fault (core dumped),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/337:20,fault,fault,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337,1,['fault'],['fault']
Availability,Aligned.SortedByCoord.NoHeader.bam \; > SRR3212847.Aligned.SortedByCoord.bam; > ; > samtools collate \; > -@ 40 \; > -o SRR3212847.Aligned.Shuffled.NoHeader.bam \; > SRR3212847.Aligned.SortedByCoord.NoHeader.bam; > ; > salmon quant \; > -t mRNA.fasta \; > -p 20 \; > -l A \; > -a SRR3212847.Aligned.Shuffled.NoHeader.bam \; > -o SRR3212847.Aligned.Shuffled.NoHeader; > ```; > ; > ```; > ; > ....; > ; > ; > [2021-01-08 12:42:10.700] [jointLog] [warning] ; > ; > WARNING: Detected suspicious pair --- ; > The names are different:; > read1 : SRR3212847.24133171; > read2 : SRR3212847.33911054; > The proper-pair statuses are inconsistent:; > read1 [SRR3212847.24133171] : no proper-pair; not mapped; matenot mapped; > ; > read2 : [SRR3212847.24133171] : proper-pair; mapped; matemapped; > ; > [2021-01-08 12:42:10.700] [jointLog] [warning] ; > ; > WARNING: Detected suspicious pair --- ; > The names are different:; > read1 : SRR3212847.33911054; > read2 : SRR3212847.30781941; > ; > Segmentation fault (core dumped); > ```; > ; > ### 3. Sorting with `samtools sort -n`; > ```; > samtools sort \; > -@ 40 \; > -n \; > -o SRR3212847.Aligned.SortedByName.bam \; > SRR3212847.Aligned.SortedByCoord.bam; > ; > salmon quant \; > -t mRNA.fasta \; > -p 20 \; > -l A \; > -a SRR3212847.Aligned.SortedByName.bam \; > -o SRR3212847.Aligned.SortedByName; > ```; > ; > ```; > Version Info: This is the most recent version of salmon.; > # salmon (alignment-based) v1.4.0; > # [ program ] => salmon ; > # [ command ] => quant ; > # [ targets ] => { mRNA.fasta }; > # [ threads ] => { 20 }; > # [ libType ] => { A }; > # [ alignments ] => { SRR3212847.Aligned.SortedByName.bam }; > # [ output ] => { SRR3212847.Aligned.SortedByName }; > Logs will be written to SRR3212847.Aligned.SortedByName/logs; > [2021-01-08 13:02:04.845] [jointLog] [info] setting maxHashResizeThreads to 20; > [2021-01-08 13:02:04.845] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; > ,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/582#issuecomment-1343749456:3086,fault,fault,3086,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/582#issuecomment-1343749456,1,['fault'],['fault']
Availability,Allocation error building pufferfish index using v0.99.0 beta1,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/432:11,error,error,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/432,1,['error'],['error']
Availability,"Also getting segmentation fault. Any progress on this? This is salmon v1.3.0, installed with conda or using the binary, running in slurm. I do not get a segmentation fault if I pass only a single file, but I do if I pass two files. ```; $ ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libType U -t GRCh38_latest_rna.fa -a data/processed/bwa-mem/SRR10571655.sam data/processed/bwa-mem/SRR10571656.sam -o _tmp/ ; Version Info Exception: server did not respond before timeout; # salmon (alignment-based) v1.3.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 32 }; # [ libType ] => { U }; # [ targets ] => { GRCh38_latest_rna.fa }; # [ alignments ] => { data/processed/bwa-mem/SRR10571655.sam data/processed/bwa-mem/SRR10571656.sam }; # [ output ] => { _tmp/ }; Logs will be written to _tmp/logs; [2020-10-12 16:13:21.969] [jointLog] [info] setting maxHashResizeThreads to 32; [2020-10-12 16:13:21.969] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2020-10-12 16:13:21.969] [jointLog] [info] numQuantThreads = 26; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""data/processed/bwa-mem/SRR10571655.sam"", fasta = ""GRCh38_latest_rna.fa"" . . .done; [2020-10-12 16:13:26.979] [jointLog] [info] replaced 5 non-ACGT nucleotides with random nucleotides. processed 103000000 reads in current round[1] 1994 segmentation fault (core dumped) ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libTyp; ```. Always at 103000000 reads.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707334655:26,fault,fault,26,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707334655,3,['fault'],['fault']
Availability,"Also, I assumed (according to the documentation) that these underflow and overflow errors inherit from `std::runtime_error`, but I've updated the try/catch with a more generic exception class just in case they are not.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393631624:83,error,errors,83,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393631624,1,['error'],['errors']
Availability,"Also, it is worth noting that, with the `-z` option, salmon will not write down a CIGAR string for the alignments, but it _will_ write down the computed alignment score. As it is _highly recommended_ (and the default behavior) to use the error model when quantifying in alignment based mode, we should ensure that, if the input alignments are coming from salmon itself, the `AS` tag is used as a proxy for the missing CIGAR string to assign conditional fragment probabilities.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/465#issuecomment-567974966:75,down,down,75,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/465#issuecomment-567974966,3,"['down', 'error']","['down', 'error']"
Availability,"And for us, who have blocked download on a computational cluster `cmake` silently continues even when `scripts/fetchRapMap.sh` failed (see error code `403` below). That is bad. Please propagate the error back to `cmake` so it dies immediately. Actually, remove the download altogether. Improve Requirements documentation and put a link to it there instead. ```; $blah/salmon-0.10.2 $ cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DFETCH_BOOST=TRUE CMakeLists.txt; -- The C compiler identification is GNU 7.3.0; -- The CXX compiler identification is GNU 7.3.0; -- Check for working C compiler: /apps/gentoo/usr/bin/cc; -- Check for working C compiler: /apps/gentoo/usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Detecting C compile features; -- Detecting C compile features - done; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++; -- Check for working CXX compiler: /apps/gentoo/usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Detecting CXX compile features; -- Detecting CXX compile features - done; Making Release build; running $blah/salmon-0.10.2/scripts/fetchRapMap.sh 2>&1; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 0 0 0 0 0 0 0 0 --:--:-- --:--:-- --:--:-- 0; curl: (56) Received HTTP code 403 from proxy after CONNECT; -- Found ZLIB: /apps/gentoo/usr/lib/libz.a (found version ""1.2.11""); -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_auto_decoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_easy_encoder in /apps/gentoo/usr/lib/liblzma.a - found; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a; -- Looking for lzma_lzma_preset in /apps/gentoo/usr/lib/liblzma.a - found; -- Found LibLZMA: /apps/gentoo/usr/include (found version ""5.2.3""); Fo",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387:29,down,download,29,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-399775387,4,"['down', 'error']","['download', 'error']"
Availability,Another error:; There is a whitespace after the last slash. ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_28/ gencode.v28.pc_transcripts.fa.gz. ```. Corrected; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_28/gencode.v28.pc_transcripts.fa.gz. ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/244#issuecomment-401345280:8,error,error,8,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/244#issuecomment-401345280,1,['error'],['error']
Availability,Any update on this? I am having the same error,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/582#issuecomment-1979988398:41,error,error,41,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/582#issuecomment-1979988398,1,['error'],['error']
Availability,"Any updates? I am having a related issue with 0 reads being found by Salmon:; TBX21 transcripts ENST00000177694 and ENST00000581328 both report 0 read counts, but I am confident there are plenty of reads from these transcripts. (1) download sra and fastq-dump, (2) trim_galore (3) fastQC (4) STAR to generate aligned bams (for other analyses) and Salmon in mapping-based mode to get transcript counts. I am using the same transcript annotation for STAR and Salmon. . When I samtools view the aligned bam over the TBX21 region, I get back >4000 paired reads. The majority of the TBX21 reads have flags 99 or 147:; (# of reads) | (flag); 4431 | 147; 12 | 355; 14 | 403; 2 | 419; 4432 | 99. I also confirmed that many of these reads are indeed from the TBX21 spliced transcripts (cross splice junctions). I am running Salmon in mapping-based mode on the unaligned fastqs, and it is picking up exactly 0 reads in these transcripts. salmon index -t hg38_salmon_transcriptome.fa -i salmon_hg38_index --type quasi -k 31; salmon quant -i salmon_hg38_index -l ISR -p 8 -1 SRR1615172_1_val_1.fq.gz -2 SRR1615172_2_val_2.fq.gz -o salmon_quant_SRR1615172. The genome-wide distribution of insert size ranges for this sample are unusual (bi-modal), and this is partly why STAR only mapped 65% of the reads. The other issue with the sample is STAR reports 19% multi-mapped reads, but even so, there are still at least 4000 reads uniquely mapping to TBX21. Attached are:; ### Output from Salmon; [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/3199053/salmon_quant.log); [lib_format_counts.json.zip](https://github.com/COMBINE-lab/salmon/files/3199074/lib_format_counts.json.zip); ### Output from STAR; [SRR1615173.Log.final.out.STAR.txt](https://github.com/COMBINE-lab/salmon/files/3199078/SRR1615173.Log.final.out.STAR.txt); ### Output from samtools view over the TBX21 gene start and end (hg38 17:47733244-47746119); [TBX21_reads.txt](https://github.com/COMBINE-lab/salmon/files/3199054/TBX21_reads.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494079306:232,down,download,232,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494079306,1,['down'],['download']
Availability,"Apologies for the previous empty post. I think I know how to do this now!. Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?. salmon. Describe the bug; I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. To Reproduce. Which version of salmon was used?; salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda. Which reference (e.g. transcriptome) was used?; To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. Which read files were used?; See above. Which which program options were used?; I used the bash script from; https://combine-lab.github.io/salmon/getting_started/. Expected behavior. I expected an output indicating successful quantification. Screenshots. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.87",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/318:222,fault,fault,222,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318,2,"['down', 'fault']","['downloaded', 'fault']"
Availability,"Are the names consistent between the BAM file and the reference you are providing? What do you get from `samtools view -H ../Data/DRR029379_after_bowtie.bam` versus looking at the reference transcript FASTA file? Also, this error:. ```; Exception : [ERROR: Failed to open file ../Data/DRR029379_after_bowtie.bam, exiting!]; ```. suggests that the BAM file itself could not be opened. Are you certain the relative path to the file is correct from the current working directory?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270008037:224,error,error,224,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270008037,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"As suggested by Nick Schurch, we should be writing non-error output (including simple logging and informative messages) to stdout rather than stderr.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/55:55,error,error,55,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55,1,['error'],['error']
Availability,"BAM format file describes the option '-t transcripts.fa' for this purpose:. > ./bin/salmon quant -t transcripts.fa -l <LIBTYPE> -a aln.bam -o salmon_quant. Also the command-line help 'salmon quant --help-alignment' names the same options:. alignment input options:. -l [ --libType ] arg Format string describing the library ; type; -a [ --alignments ] arg input alignment (BAM) file(s).; -t [ --targets ] arg FASTA format file containing target ; transcripts. The 'salmon quant' command doesn't recognize either the short or long form of this option and stops execution immediately. There is no difference if the full set of options for a quantification run are provided or only this option. . **To Reproduce**; salmon quant -t Homo_sapiens.GRCh37.87.cdna.all.fa; salmon quant --targets Homo_sapiens.GRCh37.87.cdna.all.fa. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.12.0 and 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable (salmon-0.12.0_linux_x86_64.tar.gz, salmon-0.11.3-linux_x86_64.tar.gz); * Which reference (e.g. transcriptome) was used?; any, independant of transcriptome; * Which read files were used?; not applicable; * Which which program options were used?; other options than '-t/--targets' were irrelevant for provoking the error . **Expected behavior**; Salmon should run and process the alignment file in BAM format. **Screenshots**; --- Error messages ------------------; Exception : [unrecognised option '-t']. Exiting.; Exception : [unrecognised option '--targets']. Exiting.; --------------------------------------. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version:; Linux nnn 4.15.0-36-generic #39~16.04.1-Ubuntu SMP Tue Sep 25 08:59:23 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial. **Additional con",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/343:1293,down,downloaded,1293,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/343,2,['down'],['downloaded']
Availability,"BTW I don't know if it could be related but `make test` gives me:; Running tests...; Test project salmon/build; Start 1: unit_tests; 1/3 Test #1: unit_tests .......................***Failed 0.02 sec; Start 2: salmon_read_test_fmd; 2/3 Test #2: salmon_read_test_fmd ............. Passed 1.74 sec; Start 3: salmon_read_test_quasi; 3/3 Test #3: salmon_read_test_quasi ........... Passed 1.62 sec. 67% tests passed, 1 tests failed out of 3. Total Test time (real) = 3.37 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412:528,Error,Errors,528,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393672412,2,['Error'],"['Error', 'Errors']"
Availability,"Both the originally-reported issue (form @kurtwheeler) and the request by @Miserlou are now implemented in develop, and so will be available in the next release, so I'm going to close this issue for now.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/279#issuecomment-416381103:131,avail,available,131,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279#issuecomment-416381103,1,['avail'],['available']
Availability,Broken linked files cause salmon indexing to pause (indefinitely) without throwing an error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/134:86,error,error,86,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/134,2,['error'],['error']
Availability,"Btw the same thing happens when using gencode transcriptome. ```bash; wget https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; # better name; mv gencode.vM25.transcripts.fa.gz Mus_musculus_GENCODE_v25_GRCm38.fa.gz ; ````. ```; ./generateDecoyTranscriptome.sh \; -a /no_backup/genome_annots/Mus_musculus_ENSEMBL_v_102_GRCm38.gtf \; -g /no_backup/genome_seqs/Mmu10_gDNA.fasta \; -t /no_backup/transcriptome_seqs/Mus_musculus_GENCODE_v25_GRCm38.fa.gz \; -o /no_backup/indexes/salmon/gencode_mm10; ```. Which generates 2 files:; ```; ls -1 /no_backup/indexes/salmon/gencode_mm10; decoys.txt; gentrome.fa; ```. And then if I try to build an index with:. ```; salmon index \; -t /no_backup/indexes/salmon/gencode_mm10/gentrome.fa \; -i /no_backup/indexes/salmon/gencode_mm10 \; -d /no_backup/indexes/salmon/gencode_mm10/decoys.txt \; -k 28 --threads 8; ```. the job starts running but dies immediately for the same error:. ```; tail -n 4 /no_backup/indexes/salmon/gencode_mm10/ref_indexing.log . [warning] Removed 1612 transcripts that were sequence duplicates of indexed transcripts.; [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [puff::index::jointLog] [critical] The decoy file contained the names of 55 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ````. I do believe that the names in `decoys.txt` match some fasta headers in `gentrome.fa` as show here:. ```; head -n 1 decoys.txt; GL456210.1. zgrep ""GL456210.1"" gentrome.fa ; >GL456210.1; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731#issuecomment-1001151467:959,error,error,959,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731#issuecomment-1001151467,4,"['down', 'error']","['downstream', 'error', 'errors']"
Availability,Build failure (libtbb),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/51:6,failure,failure,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51,1,['failure'],['failure']
Availability,Building my own TBB hasn't helped. I installed it and set its path on the command line using -DTBB_INSTALL_DIR=/usr/local/packages/intel-tbb.4.4.3.181 and still CMAKE returns this in its output:. ```; ERROR: Intel TBB NOT found!; -- Looked for Threading Building Blocks in /usr/local/packages/intel-tbb.4.4.3.181/compilers_and_libraries_2016; Build system will fetch and build Intel Threading Building Blocks; ```. I've tried numerous subdirectories as well but can't seem to find what it's looking for to determine the TPP directory. Setting TBB_INSTALL_DIR also changed nothing. Currently stuck on my salmon build.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201157274:201,ERROR,ERROR,201,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201157274,1,['ERROR'],['ERROR']
Availability,COND_ENCODER_ARMTHUMB_FALSE='#'; COND_ENCODER_ARMTHUMB_TRUE=''; COND_ENCODER_ARM_FALSE='#'; COND_ENCODER_ARM_TRUE=''; COND_ENCODER_DELTA_FALSE='#'; COND_ENCODER_DELTA_TRUE=''; COND_ENCODER_IA64_FALSE='#'; COND_ENCODER_IA64_TRUE=''; COND_ENCODER_LZMA1_FALSE='#'; COND_ENCODER_LZMA1_TRUE=''; COND_ENCODER_LZMA2_FALSE='#'; COND_ENCODER_LZMA2_TRUE=''; COND_ENCODER_LZ_FALSE='#'; COND_ENCODER_LZ_TRUE=''; COND_ENCODER_POWERPC_FALSE='#'; COND_ENCODER_POWERPC_TRUE=''; COND_ENCODER_SIMPLE_FALSE='#'; COND_ENCODER_SIMPLE_TRUE=''; COND_ENCODER_SPARC_FALSE='#'; COND_ENCODER_SPARC_TRUE=''; COND_ENCODER_X86_FALSE='#'; COND_ENCODER_X86_TRUE=''; COND_FILTER_ARMTHUMB_FALSE='#'; COND_FILTER_ARMTHUMB_TRUE=''; COND_FILTER_ARM_FALSE='#'; COND_FILTER_ARM_TRUE=''; COND_FILTER_DELTA_FALSE='#'; COND_FILTER_DELTA_TRUE=''; COND_FILTER_IA64_FALSE='#'; COND_FILTER_IA64_TRUE=''; COND_FILTER_LZMA1_FALSE='#'; COND_FILTER_LZMA1_TRUE=''; COND_FILTER_LZMA2_FALSE='#'; COND_FILTER_LZMA2_TRUE=''; COND_FILTER_LZ_FALSE='#'; COND_FILTER_LZ_TRUE=''; COND_FILTER_POWERPC_FALSE='#'; COND_FILTER_POWERPC_TRUE=''; COND_FILTER_SIMPLE_FALSE='#'; COND_FILTER_SIMPLE_TRUE=''; COND_FILTER_SPARC_FALSE='#'; COND_FILTER_SPARC_TRUE=''; COND_FILTER_X86_FALSE='#'; COND_FILTER_X86_TRUE=''; COND_GNULIB_FALSE=''; COND_GNULIB_TRUE=''; COND_INTERNAL_SHA256_FALSE=''; COND_INTERNAL_SHA256_TRUE=''; COND_LZMADEC_FALSE='#'; COND_LZMADEC_TRUE=''; COND_LZMAINFO_FALSE='#'; COND_LZMAINFO_TRUE=''; COND_LZMALINKS_FALSE='#'; COND_LZMALINKS_TRUE=''; COND_MAIN_DECODER_FALSE='#'; COND_MAIN_DECODER_TRUE=''; COND_MAIN_ENCODER_FALSE='#'; COND_MAIN_ENCODER_TRUE=''; COND_SCRIPTS_FALSE='#'; COND_SCRIPTS_TRUE=''; COND_SHARED_FALSE=''; COND_SHARED_TRUE=''; COND_SMALL_FALSE=''; COND_SMALL_TRUE='#'; COND_SYMVERS_FALSE=''; COND_SYMVERS_TRUE='#'; COND_THREADS_FALSE=''; COND_THREADS_TRUE=''; COND_W32_FALSE=''; COND_W32_TRUE='#'; COND_XZDEC_FALSE='#'; COND_XZDEC_TRUE=''; COND_XZ_FALSE='#'; COND_XZ_TRUE=''; CPP=''; CPPFLAGS=''; CYGPATH_W='echo'; DEFS=''; DEPDIR='.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:12795,echo,echo,12795,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['echo'],['echo']
Availability,"CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000415118.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000632684.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping);",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:3094,error,error,3094,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,2,"['avail', 'error']","['available', 'error']"
Availability,Can salmon be made available for ARM based arch,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/556:19,avail,available,19,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/556,1,['avail'],['available']
Availability,"Can you try doing:. ```; export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0 2/lib; ```. before running salmon? The problem is that the executable is looking for `libtbb` and `libtbb_proxy`, but they are not in the library path.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/517#issuecomment-623050187:86,Down,Downloads,86,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517#issuecomment-623050187,1,['Down'],['Downloads']
Availability,Compilation error (179191a): Linked RapMap missing isDecoy function,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/418:12,error,error,12,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418,1,['error'],['error']
Availability,"Compilation fails with ""lto1: internal compiler error: Segmentation fault""",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/860:48,error,error,48,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860,2,"['error', 'fault']","['error', 'fault']"
Availability,Compilation of newest release crashes with many undefined reference errors:; ```; [ 72%] Linking CXX executable unitTests; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o): In function `Curl_disconnect':; (.text+0xb3c): undefined reference to `idn2_free'; (.text+0xb58): undefined reference to `idn2_free'; (.text+0xb74): undefined reference to `idn2_free'; (.text+0xb90): undefined reference to `idn2_free'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o): In function `Curl_connect':; (.text+0x4e9e): undefined reference to `idn2_free'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o):(.text+0x4eba): more undefined references to `idn2_free' follow; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o): In function `fix_hostname.isra.7':; (.text.unlikely+0x2e4): undefined reference to `idn2_check_version'; (.text.unlikely+0x301): undefined reference to `idn2_lookup_ul'; (.text.unlikely+0x34b): undefined reference to `idn2_strerror'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-cookie.o): In function `Curl_cookie_add':; (.text+0xbb1): undefined reference to `psl_builtin'; (.text+0xbca): undefined reference to `psl_is_cookie_domain_acceptable'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-version.o): In function `curl_version':; (.text+0xd6): undefined reference to `idn2_check_version'; (.text+0xe2): undefined reference to `idn2_check_version'; (.text+0x106): undefined reference to `psl_get_version'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-version.o): In function `curl_version_info':; (.text+0x1e9): undefined reference to `idn2_check_version'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-socks_gssapi.o): In function `check_gss_err.part.0':; (.text+0x57): undefined reference to `gss_release_buffer'; (.text+0x77): undefined reference to `gss_display_status'; (.text+0x9b): undefined reference to `gss_release_buffer'; (.text+0xcf): undefined reference to `gss_release_buffer'; (.text+0xef): undefined reference to `gss_display_status'; (.text+0x10e): ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/425:68,error,errors,68,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/425,1,['error'],['errors']
Availability,Compile files due to failed download of tbb-VERSION tar distro,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/496:28,down,download,28,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496,1,['down'],['download']
Availability,"Compiled from source (https://github.com/COMBINE-lab/salmon/archive/v0.10.0.tar.gz) on OS X 10.13.4 (Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64). The error generally occurs in the first 2000000 fragments (tried with paired-end samples, either IU or ISR). \#\#\# salmon (mapping-based) v0.10.0; \#\#\# [ program ] => salmon; \#\#\# [ command ] => quant; \#\#\# [ index ] => { salmon010.index }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { L001_R1.fastq.gz }; \#\#\# [ mates2 ] => { L001_R2.fastq.gz }; \#\#\# [ validateMappings ] => { }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/228:210,error,error,210,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228,1,['error'],['error']
Availability,Configure error installing salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:10,error,error,10,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['error'],['error']
Availability,"Contrary to earlier versions, e.g. ```sh; $ curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v1.7.0/salmon-1.7.0_linux_x86_64.tar.gz; $ tar zxf salmon-1.7.0_linux_x86_64.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 669 100 669 0 0 2676 0 --:--:-- --:--:-- --:--:-- 2676; 100 52.5M 100 52.5M 0 0 26.0M 0 0:00:02 0:00:02 --:--:-- 33.2M; 20220314-W11-1 (d073) 12:51:34 hb-x1:~/tmp/salmon; ○ $ ls -la salmon-1.7.0_linux_x86_64/; total 1184; drwxr-xr-x 4 hb hb 4096 Feb 16 10:01 .; drwxrwxr-x 4 hb hb 4096 Mar 14 12:51 ..; drwxr-xr-x 2 hb hb 4096 Feb 15 21:05 bin # <===; drwxr-xr-x 2 hb hb 4096 Feb 15 21:05 lib # <===; -rw-r--r-- 1 hb hb 1193382 Feb 15 21:05 sample_data.tgz; ```. the binaries for the recent salmon 1.8.0 release does not share any of the files or subfolders with ""group"" and ""other"";. ```sh; $ curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; tar zxf salmon-1.8.0_linux_x86_64.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 669 100 669 0 0 7689 0 --:--:-- --:--:-- --:--:-- 7689; 100 91.9M 100 91.9M 0 0 33.4M 0 0:00:02 0:00:02 --:--:-- 35.9M; 20220314-W11-1 (d073) 12:51:14 hb-x1:~/tmp/salmon; ○ $ ls -la salmon-1.8.0_linux_x86_64/; total 1184; drwx------ 4 hb hb 4096 Mar 10 09:57 .; drwxrwxr-x 3 hb hb 4096 Mar 14 12:51 ..; drwx------ 2 hb hb 4096 Mar 14 12:51 bin # <===; drwx------ 2 hb hb 4096 Mar 8 06:57 lib # <===; -rw------- 1 hb hb 1193382 Mar 8 06:57 sample_data.tgz # <===. $ ls -la salmon-1.8.0_linux_x86_64/bin; total 442304; drwx------ 2 hb hb 4096 Mar 14 12:51 .; drwx------ 4 hb hb 4096 Mar 10 09:57 ..; -rw------- 1 hb hb 452905776 Mar 8 06:57 salmon # <===; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/761:102,down,download,102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/761,2,['down'],['download']
Availability,"Cool, glad to hear that the above binary works for you. The binary on the release page was for linux that's why you were getting that error. As we progress, I'll keep updating the version for Macosx here, until the conda build is fixed for Osx. Also I've update the name of the file above just to avoid the confusion, thanks for the tip .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412663036:134,error,error,134,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-412663036,1,['error'],['error']
Availability,Corrected: segmentation fault 11 on salmon tutorial,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/318:24,fault,fault,24,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318,1,['fault'],['fault']
Availability,"Could someone help me with errors I'm getting while trying to run Salmon index?. The full error output is given below. Here a few lines from that output:. Pass Filling Filtering; 1 1186 error: Can't write to a temporary file; error: Can't read the input file. Segmentation fault. I'm working on a Linux system and Salmon v1.2.0. While Salmon is running it does create the temp index files which are deleted after completing the script. However, it does not seem to create all the files e.g. versionInfo.json is missing. These files are created:. ![image](https://user-images.githubusercontent.com/61871236/86531929-79d01d80-bebd-11ea-882b-2a7cab39fdd4.png). **Full error output:**. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2020-07-04 15:08:27.992] [jLog] [info] building index; out : /scratch/jl2e19/salmon_index; [2020-07-04 15:08:27.992] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2020-07-04 15:08:47.186] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482.1|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:47.348] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300.1|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:49.395] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602.2|OTTHUMT00000485301.2|TRBD1-202|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:51.746] [puff::index::jointLog] [warning] Entry with header [ENST00000626826.1|ENSG00000281",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:27,error,errors,27,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,6,"['error', 'fault']","['error', 'errors', 'fault']"
Availability,"Could the amount of RAM available cause this problem? (Although they should have quite a lot available, much more than the size of this index file.)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442570917:24,avail,available,24,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442570917,2,['avail'],['available']
Availability,Could you let me know if a minor release is on the cards (or not) @k3yavi ? Would be nice if at least one Bioconda-available release had the fix.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/431#issuecomment-538345350:115,avail,available,115,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/431#issuecomment-538345350,1,['avail'],['available']
Availability,"Could you please increase the maximum barcode length, as per this issue [i.e. [here](https://github.com/COMBINE-lab/salmon/blob/0813a0a287c2bd80071511830befe5d786a59ad1/src/AlevinUtils.cpp#L926)]? Salmon is still complaining when I use a converted file with the linker sequences spliced out, having a concatenated cell barcode length of 27, and there doesn't seem to be any user-definable option to modify or ignore the limit:. ```; gringer@elegans:/mnt/ufds/jmayer$ salmon alevin -l ISR -1 normalised_H2GYLDRXY_1_210203_FD09251586_Other_CGAGGCTG_R_210203_DAVGAL_INDEXLIBNOVASEQ_M001_R1.fastq.gz normalised_H2GYLDRXY_2_210203_FD09251586_Other_CGAGGCTG_R_210203_DAVGAL_INDEXLIBNOVASEQ_M001_R1.fastq.gz -2 H2GYLDRXY_1_210203_FD09251586_Other_CGAGGCTG_R_210203_DAVGAL_INDEXLIBNOVASEQ_M001_R2.fastq.gz -2 H2GYLDRXY_2_210203_FD09251586_Other_CGAGGCTG_R_210203_DAVGAL_INDEXLIBNOVASEQ_M001_R2.fastq.gz -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o salmon_1.4_5_27_8_JM_2021-02-12 --tgMap txp2gene.txt --end 5 --barcodeLength 27 --umiLength 8; [2021-02-12 11:01:37.654] [alevinLog] [warning] Note: the use of --end, --barcodeLength and --umiLength to describe the barcode and umi geometry is deprecated. Please start using the `--barcode-geometry` and `--umi-geometry` options instead.; [2021-02-12 11:01:37.655] [alevinLog] [error] Barcode length (27) was not in the required length range [1, 20].; Exiting now.; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/445#issuecomment-777836526:1336,error,error,1336,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/445#issuecomment-777836526,1,['error'],['error']
Availability,"Could you please share one of the output directories? It's not immediately obvious what the problem might be, since the log ends with . ```; [2020-06-03 23:47:15.955] [jointLog] [info] Computing gene-level abundance estimates; ```. which suggests the function to aggregate abundances to the gene level should be activated. On a related note, though we are definitely interesting in figuring out what might being going awry here, the recommended way to aggregate transcript-level abundances from salmon to the gene level is to use [tximport](https://bioconductor.org/packages/release/bioc/html/tximport.html), as it accounts for across-sample variability in expressed gene length, and makes it trivial to get your corresponding gene counts into a downstream DE tool like DESeq2, EdgeR, etc.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/530#issuecomment-638453196:746,down,downstream,746,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/530#issuecomment-638453196,1,['down'],['downstream']
Availability,"Counting (transcript, UMIs) is what ""kallisto pseudo"" with the --umi option; does, right?. Yes, there are a few errors in the UMIs. The Kallisto wrapper tries to; correct them. But this is really very rare. Not sure if it's worth the; time. Like ~100 out of 200.000 reads? I would have to check again.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269043952:112,error,errors,112,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269043952,1,['error'],['errors']
Availability,Critical error in Salmon in alignment mode,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/131:9,error,error,9,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131,1,['error'],['error']
Availability,"Currently alevin requires a transcript to gene mapping file to be provided with the --tgMap flag. A similar file is required when computing gene level quantification downstream of Salmon. This file needs to exactly match the transcript IDs used when building the initial salmon index, furthermore, when building the initial index, a gtf file containing the transcript to gene mappings is typically provided. In order to ensure ideal mappings of transcripts to genes, it would be ideal if, when constructing the salmon index when a GTF file is provided, an additional tgMap file was automatically produced from the GTF and written to the index output directory that could then be automatically detected by alevin, and/or then manually passed to other downstream tools. Automatically generating this file, and thus allowing the --tgmap flag to become optional would ensure that the subsequent transcript to gene mappings were perfectly matched to the original quantification. This could additionally allow a future option for salmon to automatically produce gene level quantifications.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/595:166,down,downstream,166,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/595,2,['down'],['downstream']
Availability,"Currently on develop branch, there is a build error. https://travis-ci.org/COMBINE-lab/salmon/builds/418288039; https://api.travis-ci.org/v3/job/415232259/log.txt. ```; cd /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0 && CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc toolset=gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/COMBINE-lab/salmon/external/install/include -L/home/travis/build/COMBINE-lab/salmon/external/install/lib"" link=static install. g++: error: unrecognized command line option ‘-std=c++14’; ```. I suspect the `g++` (Not `g++-N`) is wrongly used for to build boost.; As a result, the old version `g++` version 4.8 does not support `-std=c++14`. Maybe. https://www.boost.org/doc/libs/1_66_0/more/getting_started/unix-variants.html; https://stackoverflow.com/questions/5346454/building-boost-with-different-gcc-version. Maybe below kind of process is necessary if CC=gcc-N. ```; $ echo ""using gcc : 7 : /usr/bin/g++-7 ; "" >> tools/build/src/user-config.jam; $ ./bootstrap.sh ...; $ ./b2 --toolset=gcc-7 ...; ```. Here is my work to fix the issue.; Still working in progress.; But you can imagine how I am trying to fix it. I am not familiar with the `cmake`.; https://github.com/junaruga/salmon/commit/6cb73098155f0e776d4eb68bc639f3d761dd8963. If possible, I want you to fix this issue :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/275:46,error,error,46,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/275,3,"['echo', 'error']","['echo', 'error']"
Availability,"Currently, `salmon` fails hard (termination with return code `1`) when no reads are mapable; that limits its applicability when screening for pathogens such as viruses that are not expected to express their factors in every sample. From my point of view that leads to [unexpected behavior in bcbio](https://github.com/chapmanb/bcbio-nextgen/issues/1883), which is also reflected in an issue [raised here](https://github.com/COMBINE-lab/salmon/issues/119). . I would like to (re-)raise these issues here and encourage a change to `salmon` that leads to a more graceful behavior in such outlier cases, i.e. quantitation values of `0` for all quantified features instead of the hard error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/130:680,error,error,680,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/130,1,['error'],['error']
Availability,"Damn; I get the same behavior on ~~16.10~~ (actually, my box is 16.04, but I'm skeptical that this specific version issue is the cause of the behavior) as I get on 14.10 (using the executable you provided). It runs to completion and modulo our less-than-ideal handling of the `--libType` flag coming after the `--unmatedReads` flag, it completes without the Gibbs warning. When I run with `--seqBias` and `--gcBias`, I get the same behavior (it runs and finishes w/o hanging or outputting the error messages). I'm going to take a look at the relevant code path to see if anything stands out to me.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266938104:493,error,error,493,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266938104,1,['error'],['error']
Availability,"Dear @callumparr,. Thank you for bringing this up. So you are correct that the `--noLengthCorrection` flag should be passed to salmon when quantifying data that does not have a ""fragmentation effect"", that is, where the number of fragments we expect to draw from a transcript is not dependent upon the length of that transcript. In the ONT protocols, it is usually the case that we get 1 read -> 1 transcript, even if we don't read the whole thing. We have tested the effect of this in ONT data with spike ins, and have verified that using `--noLengthCorrection` does generally lead to improved accuracy with respect to quantification estimates. We have informed ONT of this, and I would guess they may optimize the flags that are used soon (we have also developed an error model that works correctly for these long reads, and that should make it into the next release of salmon). Regarding the effect this has on the `NumReads` values reported by salmon, it's not as simple as with the `TPM` estimates. The length affects the assigned reads through the probabilistic model on which inference is done. With the length effect we have that P(f | t_i) ∝ P( position | f, t_i ) * P( alignment | f, t_i) --- forgetting the alignment term for the time being, we have that with length correction P( position | f, t_i ) ∝ 1 / l_i and without length correction the l_i term goes away. In other words, the probability of allocating reads has a term that depends on the effective length when the `--noLengthCorrection` flag is not passed, but that term goes away when it is passed. This is not quite as drastic as with TPM where the normalization includes the length directly in the normalization (note, however, that when the `--noLengthCorrection` flag is passed, this adjusts the TPM as well). Further, the `NumReads` is still better than TPM in this regard because it still encodes the effect size (i.e. `NumReads` will sum to the total number of aligned reads). Anyway TLDR: Passing the `--noLengthCorrectio",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/651#issuecomment-821995147:768,error,error,768,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/651#issuecomment-821995147,2,['error'],['error']
Availability,"Dear Dr. Patro,. First of all, my apologies as I want to make it clear that I have just posted this same question on Bioconductor community as well in a hope to get a quick reply. . I have put great amount of effort to find out answer to this question on internet. Couldn't find it anywhere (bioconductor, biostars, seqanswers, github etc.). I have 3 replicates for each sample and one of the replicates from each sample is single-end and other two are paired-end as SE and PE were processed at different facilities (I know I have to do batch correction in downstream analysis). Now I want to use transcript level abundance from quant.sf file which I derived for each replicates using Salmon's quasi-mapping pipeline (used appropriate flags for SE and PE reads). All these (SE & PE) reads are strand specific. . My question is, can I use quant.sf directly from these replicates for downstream DE analysis using tximport or do SE or PE requires separate kind of processing before I can use them together as replicates for downstream analysis. I am planning to use limma-voom for my DE analysis. Thank you so much for your time and apologies if the question was answered already.; Sandip Darji",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/156:557,down,downstream,557,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/156,3,['down'],['downstream']
Availability,"Dear Rob, thank you for the fast replay. a) I tried to compile but it is not working for me either; ....; _[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf74): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0xd12487 internal_error(char const*, ...); 	???:0; 0xe4f0b6 varpool_node::get_constructor(); 	???:0; 0xea01ff ipa_icf::sem_item_optimizer::subdivide_classes_by_equality(bool); 	???:0; 0x12ab4cb ipa_icf::sem_item_optimizer::execute(); 	???:0; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:486: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:665: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2_. 2) bioconda on a server is a mess. it will be my last resort. 3) I am trying the Docker version and it seems to work!!!; ; PS It seems to me a be a little strange though that the binary version is not working. I tried on three different systems (all with ubuntu 22.04) with Xeon gold and intel i7 . thank you again",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783#issuecomment-1144000013:415,error,error,415,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783#issuecomment-1144000013,8,"['Error', 'error', 'fault']","['Error', 'error', 'fault']"
Availability,"Dear Rob,; a brief update:; 1) with the flag -DNO_IPO=TRUE the compilation worked perfectly. thank you . 2)following a guide found at stackoverlow ([Find which assembly instruction caused an Illegal Instruction error without debugging], I discover that the illegal instruction is **vfmsubsd**. ; I am not an expert at all in the field, but googling it seems to be a standard SSE instruction.; I am surprised indeed.; cpus tested: ; Intel Xeon Gold 5220 (72) ; Intel Xeon Gold 5317 (48); Intel i7-10750H (12). Best and thanks again; Silvano. Program terminated with signal SIGILL, Illegal instruction.; #0 0x00007fa222c47396 in __ieee754_pow_fma4 () from /dataraw/mouse/salmon-1.8.0_linux_x86_64/bin/../lib/libm.so.6. 0x7fa222c47396 <__ieee754_pow_fma4+182> vfmsubsd %xmm3,%xmm6,%xmm3,%xmm7",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783#issuecomment-1145687835:211,error,error,211,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783#issuecomment-1145687835,2,['error'],['error']
Availability,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/562:702,down,downsampled,702,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562,5,"['down', 'error']","['downsampled', 'error']"
Availability,"Dear `salmon` developers,. We are using salmon at ONT for quantifying transcripts from alignments of cDNA reads to transcriptomes on a regular basis and in [some](https://github.com/nanoporetech/pipeline-transcriptome-de) of our pipelines.; Transcriptomic aligments of long reads generate less multimapping reads than short reads (depeneding on the structure of the transcriptome), however we would prefer not to ignore them during quantification in order to make maximal use of the data.; However, since the error model was built for short reads, until now we have used the tool with the error model turned off (`--noErrorModel`), which is not optimal. Would it be possible to add a simple error model suitable for long read alignments? We propose something like the following for calculating the likelihood of an alignment:. - The likelihood of the aligment would be calculated based on the empirical distributions (or a normal fit) of edit distances conditioned on the length of the alignment. We could provide you with this information if needed.; - The likelihood of left and right soft or hard clipped sequences would be calculated as a function of their length (such as (1/x)^z, where the parameter z can be tuned based on real datasets). A more complicated model could be build taking into account the error profile of the long reads. It might be overkill though. I had a look at the source code and it seems to me that it might not be hard to implement it, however I am lacking the intimate knowledge of the codebase to do it easily.; Let me know if you would be interested in adding this feature. If yes, we could evaluate the change in the quality of estimates on real datasets. Best regards,; Botond Sipos",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/519:509,error,error,509,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/519,4,['error'],['error']
Availability,"Dear all,. I am trying to analyze direct nanopore RNA sequencing data with salmon.; Now I seem to have problems with getting the command line properly:. I use:; salmon quant -i salmon_index -l r dmso_sham_4.fastq --validateMappings -o transcripts_quant. and get the following; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.10.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { salmon_index }; ### [ libType ] => { r }; ### [ ] => { dmso_sham_4.fastq }; ### [ validateMappings ] => { }; ### [ output ] => { transcripts_quant }; Logs will be written to transcripts_quant/logs; [2024-05-29 11:13:30.128] [jointLog] [info] setting maxHashResizeThreads to 24; Exception : [unknown library format string : R]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2024-05-29 11:13:30.128] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-29 11:13:30.128] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-29 11:13:30.128] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-29 11:13:30.128] [jointLog] [info] parsing read library format. So, as far I can see, being a bloody beginner, the error: Exception : [unknown library format string : R] somehow suggests that the small letter r in my command line is interpreted as a capital letter???; Or is there anything else wrong with my command?. Help would be appreciated. Thanks and best,; Matthias",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/933:1383,error,error,1383,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/933,1,['error'],['error']
Availability,"Dear all,. I started to follow the Salmon ""Real data example"" on https://combine-lab.github.io/salmon-tutorials/2021/ont-long-read-quantification/. Everything goes fine up to:; minimap2 –t 8 –a -x map-ont –p 1.0 –N 100 minimap2_spike_index SRR6058582.fastq. when I get the following error:; [ERROR] failed to open file '–t': No such file or directory. ???. Help would be appreciated. Thanks and best,; Matthias",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/931:283,error,error,283,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/931,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Dear all. Thank you for your prompt reply. ; @mikelove yes, the CPM is only cross-sample normalisation, but not cross genes. TPM is both cross-sample and cross-gene normalisation. Thus, in my mind, TPM is more suitable for downstream RNA-seq analysis, including clustering analysis, differential expression testing using Wilcoxon rank-sum test. Also, for accurately detecting differentially expressed genes, is it reasonable to overlap the results from different methods, such as edgeR+Wilcoxon rank-sum test?. Best regards,; Zheng zhuqing",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/812#issuecomment-1324468833:223,down,downstream,223,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/812#issuecomment-1324468833,1,['down'],['downstream']
Availability,"Dear community,. I have 4 lane files for each sample. I want to run Alevin on these samples. Alevin runs without any error, but the mapping rate is too low (about 5%). I tried different k-mers, different versions of transcriptome datasets, and all protocols (--dropseq / --chromium / --chromiumV3), but my mapping rate is still too low. Let me explain my workflow. These are my samples:. ```; Sample1_S1_L001_I1_001.fastq.gz Sample1_S1_L002_R1_001.fastq.gz Sample1_S1_L003_R2_001.fastq.gz; Sample1_S1_L001_R1_001.fastq.gz Sample1_S1_L002_R2_001.fastq.gz Sample1_S1_L004_I1_001.fastq.gz; Sample1_S1_L001_R2_001.fastq.gz Sample1_S1_L003_I1_001.fastq.gz Sample1_S1_L004_R1_001.fastq.gz; Sample1_S1_L002_I1_001.fastq.gz Sample1_S1_L003_R1_001.fastq.gz Sample1_S1_L004_R2_001.fastq.gz; ```. I generated single I1, R1 and R2 files by concatenating fastq.gz files across lanes; for instance, Sample1_S1_L001_R1_001.fastq.gz + Sample1_S1_L002_R1_001.fastq.gz + Sample1_S1_L003_R1_001.fastq.gz + Sample1_S1_L004_R1_001.fastq.gz -> Single_S1_L001_R1_001.fastq.gz . I indexed my transcriptome by salmon, and I used Alevin using the indexed transcriptome. I used the following command:. ```; salmon alevin -l ISR \; -1 ""Single_S1_L001_R1_001.fastq.gz"" \; -2 ""Single_S1_L001_R2_001.fastq.gz"" \; --chromiumV3 \; -i $my_index \; -p 48 \; -o outputfolder \; --tgMap $my_tgmap \; --expectCells 10000 \; --forceCells 10000; ```. However, my mapping rate is only ~5%. I used cell ranger on the same data and the same transcriptome; the mapping rate is ~95%.; Is there any bug on Alevin? How can I improve the mapping rate?. Thank you!. ```; Alevin log:; [2022-12-03 15:43:12.004] [alevinLog] [info] Found 117342 transcripts(+0 decoys, +35 short and +0 duplicate names in the index); [2022-12-03 15:43:12.072] [alevinLog] [info] Filled with 117377 txp to gene entries; [2022-12-03 15:43:12.083] [alevinLog] [info] Found all transcripts to gene mappings; [2022-12-03 15:43:12.097] [alevinLog] [info] Processing barcodes fi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/814:117,error,error,117,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814,1,['error'],['error']
Availability,Dear developer; Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2).; code salmon quant -i $IndexDir -p 15 -l A -1 ${CleanDataDir}/${treat}${CleanReads1Suffix} -2 ${CleanDataDir}/${treat}${CleanReads2Suffix} -o ${outDir}/${treat}. How should I go about solving this error or investigating its cause?; ; Best wishes!,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/941:16,Error,Error,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/941,2,"['Error', 'error']","['Error', 'error']"
Availability,"Dear developers,. I noticed that salmon introduced the ""--ont"" option in version 1.5+ but this option is not valid anymore for the latest v1.6.0. So I was wondering the reason behind this. Also, say if I want to use v1.6.0 to analyze my ONT direct-RNA sequencing data, which options would you recommend regarding the following options: `--noErrorModel`,` --noLengthCorrection`, and `--libType`? Thanks!. ```; $ ./salmon-1.6.0_linux_x86_64/bin/salmon quant --ont ; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '--ont'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. $ ./salmon-1.5.2_linux_x86_64/bin/salmon quant --ont ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###exception : [the option '--libType' is required but missing]. Exiting. ```; Best,; Jia-Xing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/735:931,avail,available,931,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/735,2,['avail'],['available']
Availability,"Dear salmon authors,. While I was using **salmon (v0.11.0, downloaded executable, on a Ubuntu Linux** server) to process a **single-end RNA-seq library**, it reported the following error message:. ""**[ERROR] Transcript IDs are not in sorted order; please report this bug on GitHub!**"" . Actually I found it reports this error message for over tens of millions of times through greping the log file. And the command line I applied to invoke salmon was like this:. ""**salmon quant -i mySalmonIndexFile(FMD based/transcriptome) -l A -r myLibrary.fastq -p 8**"". It looks like this is something about single-end reads processing, since I arbitrarily picked up another pair-end library, which works prefectly fine with command line ""-1 PE_library_1.fastq -2 PE_library_2.fastq"", however, when I deliberately provide only one end of the library with ""-r PE_library_1/2.fastq"", exactly the same error was recurred immediately. Curiously, salmon could still accomplish the whole procedure and generate the results file with the aformentioned error reported. But I' m worried about its reliability in this situation. I' m wondering if you have any clues about this issue. With many thanks ahead!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/265:59,down,downloaded,59,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265,7,"['ERROR', 'down', 'error', 'reliab']","['ERROR', 'downloaded', 'error', 'reliability']"
Availability,"Dear salmon support team,. I firstly assembled MAGs from my metagenome data, then predicted the ORF gene operons using the prodigal software to generate the corresponding prodigal predicted MAG *faa files. Now, I am using each MAG *fna fasta file to map on their corresponding prodigal predicted *faa protein sequences. **But, the TPM values in my quantification files - quant.sf are all as 0.**. So, could you give me some suggestions on this condition?. **Salmon command lines**; #index each MAG faa file; for f in ${quant_sf_dir}*faa; do ; fname=${f##*/}; fbase=${f##*.} ; index_dir=${f%.faa}; #mkdir -p ${index_dir}; #echo ${index_dir}; /services/tools/salmon/1.5.2/bin/salmon index -t ${f} -i ${index_dir}; done. #quantify each MAG fna using each corresponding MAG indexed faa file; for i in ${MAG_PATH}*.fasta; do; iname=${i##*/}; i_dir=${iname%.fasta}; index_dir=${quant_sf_dir}${i_dir}; /services/tools/salmon/1.5.2/bin/salmon quant -i ${index_dir} -l A \; -r ${i} \; **--minAssignedFrags 1 \**; -p 20 -o ${index_dir}_salmon_count > ${index_dir}.salmon.log 2>&1;; done. Best,. Bing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/792:622,echo,echo,622,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/792,1,['echo'],['echo']
Availability,"Dear salmon team and @k3yavi,. I am an happy user of alevin on scRNAseq data (10x). In some circumstances, I have to compare samples from very uneven sequencing depth (less than 100k reads per cell vs 1M reads per cell,), which naturally produces a huge ""batch effect"", some transcripts being impossible to detect at a lower sequencing depth. For 10x datasets, cellranger offers to compensate this kind of difference across datasets by subsampling, and I should tell it works very well. I tried this strategy before running alevin, by the use of python scripts subsampling the fastq files prior any alevin quasi-mapping. However, all my attempts failed, as all downstream analyses shown that this strategy didn't correct the batch effect at all with alevin (visualization on dimension reduction/UMAP show a huge difference between batches, while the cellranger subsampling method clearly corrects it). An important point is by default, the cellranger method corrects according to the amount of mapped reads between samples. So ideally, I should have to evaluate the difference in term of mapped reads to compute a subsampling coefficient (fraction of reads to keep). What correct alevin metrics should I use to estimate such a coefficient?. Considering the probalistic approach of alevin's transcript quantification, I am wondering if it could be any better way to normalize the samples to account for this kind of issue? Also, any option to subsample the reads (take a read into account under a certain probability) during alevin quantification would be of great help in my case. Thank you for your work and your time,; Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/305:661,down,downstream,661,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305,1,['down'],['downstream']
Availability,"Dear salmon team. I'm using salmon v1.3.0 and I've tried to ran the quantification using the command as is in the web page. ` salmon quant -i mus_musculus_index -l A -1 ../../output_paired_PVI18_1.fastq.gz -2 ../../output_paired_PVI18_2.fastq.gz -p 4 --validateMappings -o quants/`. but it give me the error . Exception : [unrecognised option '--validateMappings']. Exiting. at first look my line doesn't seems to be bad-formatted, so can you help me with the error please. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/563:302,error,error,302,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/563,2,['error'],['error']
Availability,"Did this ever get tracked down? we are having a situation where salmon seems to segfault whenever using slurm (this time it's `salmon index` that segfaults, though). wondering if you figured out a solution.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-562764577:26,down,down,26,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-562764577,1,['down'],['down']
Availability,Does `PB.40054.21` appear in your `PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv` file? The error is saying it is missing-- is it?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/540#issuecomment-647894779:111,error,error,111,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540#issuecomment-647894779,1,['error'],['error']
Availability,"Does anyone have an answer to this, are those error models 'safe' to ignore?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/701#issuecomment-1419784692:46,error,error,46,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701#issuecomment-1419784692,1,['error'],['error']
Availability,"Does it always error out on the _same_ samples? Is there anything different about the how the commands are run (e.g. are they running on different machines etc.)?. The error suggests that the process is not able to properly read the index. When salmon cannot read the index, it propagates an exception, which is what you are seeing here. The question is why this would happen for some samples and not others, so I'd look to find differences between the invocations, or the machines where samples are running / not running properly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/512#issuecomment-618021381:15,error,error,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512#issuecomment-618021381,2,['error'],['error']
Availability,Done the required work. Sorry for bothering everyone. Downloaded the refGene.gtf file from UCSC for mm9 having transcript information and then used `gffread` to build the transcript.fa for the mm9. Finally ran salmon indexes and to my surprise it finished in matter of few minutes < 3'. Thanks for all the suggestions. This is something which I always like getting to learn something new every day. Closing the issue.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197975002:54,Down,Downloaded,54,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197975002,1,['Down'],['Downloaded']
Availability,"Done!, I had few problems removing old versions and salmon command was still associated with the old version. I remove any salmon piece using `whereis` command to find them. After that the path in $PATH was right;; salmon -v; salmon 1.2.1. Now, I am using the as index I downloaded from refgenie and it says this;; [2020-05-05 09:21:31.276] [jointLog] [warning] The index did not record if the `--keepDuplicates` flag was used. Please consider re-indexing with a newer version of salmon that will propagate this information. I guess the index was made with some previous version which doesn't include this option (or they didn't use it). . Let's see how it works :) and how long it takes (the normal index spend like 3h to finish 15 quantifications of paired fastq files i7 (6threads) and 16GB ram :))). Thank you!!!!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/518#issuecomment-623897373:271,down,downloaded,271,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518#issuecomment-623897373,1,['down'],['downloaded']
Availability,"Due to a current default in the boost library (https://github.com/boostorg/math/issues/1211) in boost::math::digamma, there is a performance hit on aarch64. This happens on v1.10.3 of Salmon, with GNU compiler 13 on Linux aarch64. A 4-thread quantization of one of the Salmon tutorials DRR0* series files spends ~15% of time in this routine (called within CollapsedEMOptimizer). On a larger example, we see 7% performance hit over a run that takes 1300 seconds on 4 cores. On x86 this time is small enough to be lost in the noise. `salmon quant -i athal_index -l A ; -1 DRR016125/DRR016125_1.fastq.gz; -2 DRR016125/DRR016125_2.fastq.gz ; -p $threads --validateMappings -o quants/DRR016125_quant`. There is a simple fix which is to ensure the CMake/Makefiles ensure salmon compiles with: ; `-DBOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS`; or to add that to any file that brings in boost::math via adding `#define BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS` at the start. With that change, a 1300 second runtime drops to 1212 for the larger test case, and for the tutorial case is 48 seconds down to 40 on a 4-core r8g.xlarge (Graviton4). Whilst Boost may fix the issue soon - it's likely that older versions of the library will be found installed for some time. It would be helpful to add this define to cmake settings, or the sources.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/966:1085,down,down,1085,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966,1,['down'],['down']
Availability,Duplicates error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/683:11,error,error,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/683,1,['error'],['error']
Availability,"EEXT_TRUE=''; am__fastdepCCAS_FALSE=''; am__fastdepCCAS_TRUE=''; am__fastdepCC_FALSE=''; am__fastdepCC_TRUE=''; am__include='include'; am__isrc=''; am__leading_dot='.'; am__nodep='_no'; am__quote=''; am__tar='$${TAR-tar} chof - ""$$tardir""'; am__untar='$${TAR-tar} xf -'; ax_pthread_config=''; bindir='${exec_prefix}/bin'; build='arm-apple-darwin22.6.0'; build_alias=''; build_cpu='arm'; build_os='darwin22.6.0'; build_vendor='apple'; datadir='${datarootdir}'; datarootdir='${prefix}/share'; docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'; dvidir='${docdir}'; exec_prefix='NONE'; host='arm-apple-darwin22.6.0'; host_alias=''; host_cpu='arm'; host_os='darwin22.6.0'; host_vendor='apple'; htmldir='${docdir}'; includedir='${prefix}/include'; infodir='${datarootdir}/info'; install_sh='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/install-sh'; libdir='${exec_prefix}/lib'; libexecdir='${exec_prefix}/libexec'; localedir='${datarootdir}/locale'; localstatedir='${prefix}/var'; mandir='${datarootdir}/man'; mkdir_p='$(MKDIR_P)'; oldincludedir='/usr/include'; pdfdir='${docdir}'; prefix='/Users/jeremybono/Downloads/salmon-1.10.1/external/install'; program_transform_name='s,x,x,'; psdir='${docdir}'; sbindir='${exec_prefix}/sbin'; sharedstatedir='${prefix}/com'; sysconfdir='${prefix}/etc'; target_alias=''; xz=''. ## ----------- ##; ## confdefs.h. ##; ## ----------- ##. /* confdefs.h */; #define PACKAGE_NAME ""XZ Utils""; #define PACKAGE_TARNAME ""xz""; #define PACKAGE_VERSION ""5.2.2""; #define PACKAGE_STRING ""XZ Utils 5.2.2""; #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; #define PACKAGE_URL ""http://tukaani.org/xz/""; #define NDEBUG 1; #define HAVE_ENCODER_LZMA1 1; #define HAVE_ENCODER_LZMA2 1; #define HAVE_ENCODER_DELTA 1; #define HAVE_ENCODER_X86 1; #define HAVE_ENCODER_POWERPC 1; #define HAVE_ENCODER_IA64 1; #define HAVE_ENCODER_ARM 1; #define HAVE_ENCODER_ARMTHUMB 1; #define HAVE_ENCODER_SPARC 1; #define HAVE_DECODER_LZMA1 1; #define HAVE_DECODER_LZMA2 1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:15397,Down,Downloads,15397,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Down'],['Downloads']
Availability,"EQVecT means we are in the function with `template <typename EQVecT>`; i is the index of the loop that generates alphaSum; If I printf ""Round"" line 257, I get:; [2018-05-31 22:27:34.996] [jointLog] [info] Starting optimizer; Round; [2018-05-31 22:27:35.226] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; Round; [2018-05-31 22:27:35.257] [jointLog] [info] iteration = 0 | max rel diff. = 127.379; Exception : [Error in function boost::math::digamma<double>(double): numeric overflow]",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393669382:434,Error,Error,434,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393669382,1,['Error'],['Error']
Availability,ERROR: Txp to Gene Map not found for transcripts.. no quant file in output dir,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/326:0,ERROR,ERROR,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326,1,['ERROR'],['ERROR']
Availability,ERROR: Version Server Response: Not Found; missing symbol called,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/957:0,ERROR,ERROR,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/957,1,['ERROR'],['ERROR']
Availability,ERROR: cell doesn't have any read count,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:0,ERROR,ERROR,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,1,['ERROR'],['ERROR']
Availability,ERROR: file [DRR016125_2.fastq.gz] does not appear to exist!,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/963:0,ERROR,ERROR,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/963,1,['ERROR'],['ERROR']
Availability,Encountered the same error,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/425#issuecomment-612356265:21,error,error,21,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/425#issuecomment-612356265,1,['error'],['error']
Availability,Error (bug): version `GLIBC_PRIVATE' not found,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/927:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927,1,['Error'],['Error']
Availability,Error about Transcript * appears in the reference but did not appear in the BAM,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/945:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/945,2,['Error'],['Error']
Availability,Error bar on TPM estimation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/246:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/246,1,['Error'],['Error']
Availability,Error building develop version: lzma.h not found,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/99:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99,1,['Error'],['Error']
Availability,Error building salmon (possible issue with Boost's iostreams),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/21:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/21,1,['Error'],['Error']
Availability,Error compiling salmon on Ubuntu 14.04,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/24:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/24,1,['Error'],['Error']
Availability,"Error confirmed. OS RHEL7, GCC 6.4.0, CMake 3.13.x",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/455#issuecomment-558565387:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455#issuecomment-558565387,1,['Error'],['Error']
Availability,Error during Salmon installation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/235:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235,1,['Error'],['Error']
Availability,Error generating index.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/224:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/224,1,['Error'],['Error']
Availability,"Error in DGEList(counts = cnt, group = group) : non-numeric values found in counts",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/842:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/842,1,['Error'],['Error']
Availability,Error in geneIndexList[[i]] : subscript out of bounds,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/833:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833,1,['Error'],['Error']
Availability,Error in library(edgeR) - there is no package called 'edgeR',MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/855:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855,1,['Error'],['Error']
Availability,Error in the tutorial,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/244:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/244,1,['Error'],['Error']
Availability,Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/941:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/941,1,['Error'],['Error']
Availability,Error running salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/914:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914,1,['Error'],['Error']
Availability,Error when indexing,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,1,['Error'],['Error']
Availability,Error while loading shared libraries: libtbbmalloc_proxy.so.2: cannot open shared object file: No such file or directory,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/219:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/219,1,['Error'],['Error']
Availability,Error with Salmon build: It removes identical transcript sequences,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/214:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214,1,['Error'],['Error']
Availability,Error with bam files that has paired end reads + singletons,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/140:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140,1,['Error'],['Error']
Availability,Error with index build while mapping reads,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['Error'],['Error']
Availability,Error with installing Salmon v0.7.2,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/112:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112,1,['Error'],['Error']
Availability,Error: The index version file /labs/Resources/MMUL_10/index.salmon/versionInfo.json doesn’t seem to exist. Please try re-building the salmon index.],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/559:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/559,1,['Error'],['Error']
Availability,Error: no valid ID found for GFF record,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/937:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/937,1,['Error'],['Error']
Availability,Error:alpha weight was too small (only some samples),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119,1,['Error'],['Error']
Availability,Errors in Salmon Indexing with --features Option,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/865:0,Error,Errors,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/865,1,['Error'],['Errors']
Availability,Errors when installing from source,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/139:0,Error,Errors,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139,1,['Error'],['Errors']
Availability,"Especially since the files in both cases actually are in the same location... I could imagine it being an issue with something going write with the communication over the NFS. But in the working case it's just links to the same NFS location. Here is the tail of the gdb output:. ```; Computing gene-level abundance estimates; [2016-01-02 21:56:43.793] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done. Program received signal SIGSEGV, Segmentation fault.; 0x000000320dc093a0 in pthread_mutex_lock () from /lib64/libpthread.so.0; Missing separate debuginfos, use: debuginfo-install glibc-2.12-1.149.el6_6.5.x86_64; (gdb) bt; #0 0x000000320dc093a0 in pthread_mutex_lock () from /lib64/libpthread.so.0; #1 0x0000000000806370 in je_tcache_bin_flush_small () at include/jemalloc/internal/mutex.h:85; #2 0x0000000000806c60 in je_tcache_event_hard () at src/tcache.c:44; #3 0x00000000005915fc in std::vector<Transcript, std::allocator<Transcript> >::~vector() (); #4 0x00000000005941c6 in ReadExperiment::~ReadExperiment() (); #5 0x00000000005872ce in salmonQuantify(int, char**) (); #6 0x0000000000514472 in main (); (gdb); ```. It does indeed seem to be inside JeMalloc.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168431900:997,fault,fault,997,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168431900,1,['fault'],['fault']
Availability,"Excellent, I was hoping streaming input would 'just work'. Thanks, Rob!. On Wed., 7 Sep. 2016, 4:45 pm Rob Patro, notifications@github.com wrote:. > Hi Pete,; > ; > Yup, this would be my recommended way to handle it. Since salmon accepts; > streaming input, you could do something like:; > ; > salmon quant -i index -l A -1 <(gzcat rep1_muliplex1_1.fq.gz rep1_mutliplex2_1.fq.gz) -2 <(gzcat rep1_multiplex1_2.fq.gz rep1_multiplex2_2.fq.gz) [other options etc.]; > ; > to avoid creating the intermediate concatenated files on disk. This will; > treat all the multiplexed samples from the same replicate as one giant; > input read stream (conceptually representing a single replicate). As far as; > merging / combining Salmon output, if you're doing the downstream analysis; > in R, the tximport package is nice. Otherwise, @vals; > https://github.com/vals has a python tool readquant; > https://github.com/Teichlab/readquant that can also do some merging.; > ; > Best,; > Rob; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/88#issuecomment-245412770,; > or mute the thread; > https://github.com/notifications/unsubscribe-auth/ABAEjUsIBA5yK5R7MPW38jiuH0xx_IRCks5qnyJJgaJpZM4J3L2E; > .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/88#issuecomment-245413908:752,down,downstream,752,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/88#issuecomment-245413908,1,['down'],['downstream']
Availability,"Exception : [ERROR: Failed to open file filename.bam, exiting!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/222:13,ERROR,ERROR,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222,1,['ERROR'],['ERROR']
Availability,Exception : [Error: RapMap-based indexing is not supported in this version of salmon.],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/832:13,Error,Error,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832,1,['Error'],['Error']
Availability,Exception : [rapidjson internal assertion failure: IsObject()],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/518:42,failure,failure,42,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518,1,['failure'],['failure']
Availability,"ExperimentT&, bool, SalmonOpts&, double, uint32_t) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; uint32_t = unsigned int]’; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2553:83: required from here; /usr/include/c++/4.8.2/bits/unique_ptr.h:184:16: error: no match for call to ‘(std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadSeq>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>::deleter_type {aka processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__ptr);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atom",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:32211,error,error,32211,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"ExperimentT&, bool, SalmonOpts&, double, uint32_t) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; uint32_t = unsigned int]’; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2553:83: required from here; /usr/include/c++/4.8.2/bits/unique_ptr.h:262:16: error: no match for call to ‘(std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadPair>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>::deleter_type {aka processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadPair>*&)’; get_deleter()(__p);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atom",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:37155,error,error,37155,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"FYI, I'm taking another crack at an official FreeBSD port, but still hitting some gnarly issues with 1.5.2, so it might be a while. https://github.com/outpaddling/freebsd-ports-wip/tree/master/salmon; https://github.com/outpaddling/freebsd-ports-wip/tree/master/pufferfish; https://github.com/COMBINE-lab/salmon/issues/502. 1. The cmake system still forces downloading pufferfish during configure, which is forbidden in the ports system (like many other package managers). All downloads must occur during fetch phase and be verified using locally stored checksums. This would be easy to work around using GH_TUPLE, which downloads additional distfiles during fetch phase, except that fetchPufferfish.sh doesn't just extract the pufferfish dist, but has a long list of ""cp"" commands to copy pieces of it to ${INSTALL_DIR}. That's not something I'm inclined to tamper with since it will likely change with new versions and hence be a headache to maintain over time. It would be ideal if salmon could work with a separately installed pufferfish as it does with many other dependencies. This would make the port much cleaner.; 2. The code is not compatible with onetbb 2021.3, which is the current FreeBSD ports version.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-917642392:357,down,downloading,357,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-917642392,3,['down'],"['downloading', 'downloads']"
Availability,FYI: Compile error for 1.4.0 and current git master,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/664:13,error,error,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664,1,['error'],['error']
Availability,"Failure to compile using -lpthreads flag (should use -lpthread, without ""s"" instead ?)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/207:0,Failure,Failure,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207,1,['Failure'],['Failure']
Availability,"Fantastic, I'll give it a try! Moreover, I have another question regarding salmon quantification and ffpe degradation. I was wandering if salmon is reliable in quantifying highly degraded RNASeq samples. I was not able to find any information about it. Should I open another issue, or we can discuss in this one ? Thanks again",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/799#issuecomment-1246245810:148,reliab,reliable,148,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/799#issuecomment-1246245810,2,"['degraded', 'reliab']","['degraded', 'reliable']"
Availability,Feature request: long read error model,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/519:27,error,error,27,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/519,1,['error'],['error']
Availability,"Feel free to PM me. If it's a publicly available dataset (and standard transcript set), then I can also try and reproduce the issue from there.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-197981581:39,avail,available,39,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-197981581,1,['avail'],['available']
Availability,"Feel free to close out this thread. I was able to set my user up with the salmon binary running 0.11 instead! . I wasn't able to address where GCC was being set exactly between the CMakelist and Makefile. I did manage to install it from source using ""source /opt/rh/devtools-3"" to invoke gcc-4.9.2, but that installation binary did not run and raised additional GCC library mismatch errors due to the system running 4.8.5, even though 4.9.2 was used to compile it. Sorry for the lengthy posts in any case!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-423646567:383,error,errors,383,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296#issuecomment-423646567,1,['error'],['errors']
Availability,"Finalky i found that my transcript file was crashed during uploading to my; server; I repeated the process. It works now; Thank you so much. في الاثنين، ٢٢ أغسطس ٢٠٢٢ ٣:٢١ م Rob Patro ***@***.***> كتب:. > Hi @esraagithub <https://github.com/esraagithub>,; >; > Thanks for the bug report. Can you tell me how the specific version of; > salmon you are using was installed (e.g. via source, downloaded from the; > ""releases page"", or installed via bioconda)? Would it be possible to share; > the contigs that cause this error?; >; > Thanks,; > Rob; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/795#issuecomment-1222353941>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AMY4XZX6ZGAO5DOU5YOWTG3V2N5DZANCNFSM57HUQWJQ>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/795#issuecomment-1223885767:388,down,downloaded,388,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/795#issuecomment-1223885767,2,"['down', 'error']","['downloaded', 'error']"
Availability,"First off, thanks for the great tool!. I've been looking for a way to quantify the length of all recovered transcripts for single-cell RNA-Seq data. The salmon quant approach that generates a quant.sf is the equivalent of what I need. Since I can't specify UMI information with salmon quant, I was curious whether this output is available for alevin. Just can't seem to find anything online after scouring the web for several hours. . Thank you for any insight you can provide,; Aaron",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/693:97,recover,recovered,97,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/693,2,"['avail', 'recover']","['available', 'recovered']"
Availability,"First time trying to use SALMON 1.5.2 (not bioconda) index with decoy.txt on Arabidopsis thaliana. I'm using AtRTD3 Transcriptome ""atRTD3_07082020.fasta"" (https://ics.hutton.ac.uk/atRTD/RTD3/ - username atrtd; password atrtd3-06092021) and the genome ""GWHBDNP00000000.1"" from https://ngdc.cncb.ac.cn/gwh/Assembly/21820/show. I followed the steps from (https://gist.github.com/k3yavi/a486647c35158a8296cec543ed9b526f) using this two files as follow:; ```; grep ""^>"" <(zcat GWHBDNP00000000.1.genome.fasta.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i -e 's/>//g' decoys.txt; cat atRTD3_07082020.fasta GWHBDNP00000000.1.genome.fasta.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode; ```. The index generation failed, creating a folder with only two files ""pre_indexing.log"" and ""ref_indexing.log""([pre_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515704/pre_indexing.log) and [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515701/ref_indexing.log)) . I recieved this error from the terminal:; ![Screenshot from 2021-11-10 17-24-24](https://user-images.githubusercontent.com/71443183/141187955-4601923f-001f-424a-969a-8ad346f2cf36.png). - OS: Ubuntu Linux; - Version 21.10. Thanks for this great software!!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/720:1041,error,error,1041,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/720,1,['error'],['error']
Availability,"Fixes #966 ; This fix resolves performance issue where Boost::math unnecessarily promotes doubles to long double, which is not fully supported by hardware leading to slow-downs. The change is to set a define during cmake process which prevents promotion ( -DBOOST_MATH_PROMOTE_DOUBLE_POLICY=false )",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/968:171,down,downs,171,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/968,1,['down'],['downs']
Availability,"For clarification: From memory, using the same cluster, I had the same error at the same stage but only with particular data sets and confirmed this was not an issue of available memory. @k3yavi may remember some more of the details but we never got to the bottom of it. . @Acribbs Testing on another cluster would be a good idea in case this is a very specific cluster configuration issue",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/337#issuecomment-458160685:71,error,error,71,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337#issuecomment-458160685,2,"['avail', 'error']","['available', 'error']"
Availability,Found an invalid character / Seg fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/521:33,fault,fault,33,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/521,1,['fault'],['fault']
Availability,"Fraction. Since not explicitly specified, it is being set to 0.65; [2019-08-25 11:40:44.518] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-08-25 11:40:44.518] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-08-25 11:40:44.518] [jointLog] [info] parsing read library format; [2019-08-25 11:40:44.518] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file salmonIndexDecoyMouse/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; (salmon) wayne@Ubuntu19:~/rnaseq$ ls -R *.json; ls: cannot access '*.json': No such file or directory. Try 2.; Instead of referring to my directory decoys/ , I moved to the directory decoys/ ; and ran salmon index again, using your command exactly:; salmon index -t gentrome.fa -d decoys.txt -i combined_index. This time a few .json files were produced in the directory combined_index/ [your name this time]; [contents of decoys= combined_index gentrome.fa mus_musculus.tar.gz Salmontranscripts_quant; decoys.txt links.txt salmonQuantDecoy22.sh]. then [sh salmonQuantDecoy22.sh]; salmon quant -p 3 -i combined_index -l A -1 ../SRR1818187_2.fastq.gz -2 ../SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant. Now no Segmentation Fault crash. ; The program finishes with; [2019-08-25 12:37:39.056] [jointLog] [info] Finished optimizer; [2019-08-25 12:37:39.056] [jointLog] [info] writing output . Now I am going to look for the mRNA counts. I think a major secret is to have mus_musculus.tar.gz in the same directory.; If my description is accurate [I did not repeat everything] you should have -mRNA [path to transcriptome.gz] on your command line, or instruct users to have the transcriptome.gz in the same directory.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/419#issuecomment-524651435:2931,Fault,Fault,2931,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419#issuecomment-524651435,1,['Fault'],['Fault']
Availability,"FreeBSD port of 1.6.0 is building now:; [https://github.com/outpaddling/freebsd-ports-wip/tree/master/salmon](https://github.com/outpaddling/freebsd-ports-wip/tree/master/salmon); I'm getting a seg fault trying to run it, though. ; https://github.com/COMBINE-lab/salmon/issues/725",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/419#issuecomment-989319618:198,fault,fault,198,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419#issuecomment-989319618,1,['fault'],['fault']
Availability,"From my somewhat superficial understanding, I have feeling that it is the only the soft clipping (deletion at either end) that causes the problem (and not INDELs in general). I think it might be better if the CIGAR string contained the soft clipping operations (the POS would still need to be shifted) of course. Right now when one visualizes the BAM file various distracting artifacts manifest themselves with both salmon and kallisto even when the POS field is correct. See the image below:. ![Alignments](https://www.ialbert.me/static/down/pseudo_alignments/pseudo_aln.png). (Top Kallisto, second Salmon, bottom Hisat. ). The soft clipped sequences are not marked as such, therefore lead to ugly misalignment at the ends, that in turn dominate the visualization. . Ideally, the pseudo-bam should look a little more like Hisat, I don't know how feasible that is though, perhaps knowing that only the ends need to be fixed makes for a simpler solution.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/475#issuecomment-574738566:538,down,down,538,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/475#issuecomment-574738566,2,['down'],['down']
Availability,"GENCODE provide 1 FASTA File called ""Transcript sequences"" which ""only"" contains the ""CHR"" (chromosomal) regions. GENCODE provide many GTF files (specifically 9). The GTF file corresponding to the FASTA file mentioned above is the ""Comprehensive gene annotation"" from the ""CHR"" regions (aka chromosomal regions) (which is the first on their list). You have downloaded the ""Pri"" (third entry) which is the normal chromosomes (Chr) as well as as well as scaffolds. which explain the 68 extra transcripts. Specifically the scaffolds included in ""Pri"" but not in ""Chr"" are:. ```; ""GL000009.2"" ""GL000194.1"" ""GL000195.1"" ""GL000205.2"" ""GL000213.1""; ""GL000216.2"" ""GL000218.1"" ""GL000219.1"" ""GL000220.1"" ""GL000225.1""; ""KI270442.1"" ""KI270711.1"" ""KI270713.1"" ""KI270721.1"" ""KI270726.1""; ""KI270727.1"" ""KI270728.1"" ""KI270731.1"" ""KI270733.1"" ""KI270734.1""; ""KI270744.1"" ""KI270750.1""; ```. So the solution is as @rob-p suggested:; 1) Use gffread to make your own fasta file; 2) Remove those extra transcripts (or the ""Chr"" GTF file). Cheers; Kristoffer",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410992441:357,down,downloaded,357,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410992441,1,['down'],['downloaded']
Availability,"Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz; * Which read files were used? not quantifying yet, I'm at the indexing step.; * Which which program options were used? salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Expected behavior**; A clear and concise description of what you expected to happen.; Producing directory that contains indexed files to be applied to ""salmon quant"" command. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 2 pictures: a segmentation fault screenshot and a gdb backtrack screenshot in ""**To Reproduce**"" section. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] : CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:2550,down,downloaded,2550,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,1,['down'],['downloaded']
Availability,"Glad to hear that. Yes, I agree we can put some sort of filter while indexing to make the pipeline less painful in case of a failure. Regarding the transcript to gene map file parsing before the CB correction, we plan to make that into the next release which we plan to merge soon. I'll update you once we have the new version ready.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/336#issuecomment-496280290:125,failure,failure,125,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/336#issuecomment-496280290,1,['failure'],['failure']
Availability,"Good Afternoon,. I hope this message finds you well. . I am having a hard time running salmon version 0.14.1 downloaded via bioconda. I am trying to count my reads using alignment-based mode. Whenever I run the program, I get similar error messages to [issue 104](https://github.com/COMBINE-lab/salmon/issues/104). Here is the command I am running:. salmon quant -t trimmed_fasta/SRR1810204_1.trim.fastq -l A -a results/bam_files/SRR1810204_1.trim.fastq.bam -o salmon_test. trimmed_fasta/SRR1810204_1.trim.fastq is a fastq sample that I've obtained following trimmomatic and contains the forward strands of the data. . results/bam_files/SRR1810204_1.trim.fastq.bam is the bam file following bwa alignment of the fastq file here and its reverse strand to a reference database. . Could the issue be that I am not using both forward and reverse strands in the target argument for salmon since they were both used to generate the alignment file? I tried to look at the docs for guidance on the best course of action, and I had a hard time finding info. All help would be very much appreciated. All the best,; Craig",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/520:109,down,downloaded,109,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/520,2,"['down', 'error']","['downloaded', 'error']"
Availability,"Good evening,; I have been trying to do some alignments using salmon but I get this error after a few; hours. error: commlib error: got read error (closing ""compute-0-19.local/shepherd_ijs/1""). Your ""qlogin"" request could not be scheduled, try again later. Here is one example of the codes I used that didn't work, some others worked fine. for this I built a decoy-aware transcriptome file. salmon quant --libType A -1 L395_gfp_plus_Track_3446_3455_R1.fastq -2; L395_gfp_plus_Track-3446-3455_R2.fastq -i desalttama_salmon_index31 -p 12; --writeUnmappedNames --writeMappings -o desalttama_salmon_index31_quant_L395. I used This qlogin; qlogin -q all.q -l h_rt=48:00:00 -l mem_free=10G -R yes -now n -pe smp 1. How can I solve this issue?; Thank you; Beatriz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/580:84,error,error,84,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/580,4,['error'],['error']
Availability,"Got it working. The ""short"" form for how to do so in Centos 6.9 is:. ```; 1. install current versions of autoconf, automake, and cmake; 2. install the boost 1.57 set of RPMS if they are not already present; 3. install devtoolset-4 (or higher); 4. download and unpack salmon; 5. modify CMakeLists.txt; #around line 220, remove condition testing, set it to just; set (Boost_USE_STATIC_LIBS OFF); #around line 310; set(Boost_ADDITIONAL_VERSIONS ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); 6. in top level of salmon do; mkdir build; cd build; nice scl enable devtoolset-4 '~/bin/cmake -DBoost_DEBUG=ON -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64/boost157 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake2.log 2>&1 &; 7. in top level of salmon do; nice scl enable devtoolset-4 'make' >build_2018_06_13a.log 2>&1 &; There will be lots of warnings but it should run to completion; 8. make install; cp bin/salmon $WHEREVER/bin/salmon; rmdir lib/pkgconfig; cp lib/* $WHEREVER/lib; rm -rf bin; rm -rf lib; export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$WHEREVER/lib; make test; ```. Is it OK to delete the (large) salmon directory at this point, or is the binary hardwired to find things in it?; I know that this does not work:. ```; cd ..; mv salmon not_salmon; cd not_salmon; make test; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436:247,down,download,247,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397050436,1,['down'],['download']
Availability,"Got it! The docker image is gold; thanks for that. Here is the source of the problem:. ```; /tmp/salmon-20180222-6167-19otg9q/salmon-0.9.1/scripts/fetchRapMap.sh: line 51: unzip: command not found; ```. we grab a zip of the (version-tagged) rapmap that we need. However, it seems that unzip is not available.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367800400:298,avail,available,298,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367800400,1,['avail'],['available']
Availability,"Got it, thanks for the heads up. I'd probably reach out to the refgenie people about the hg38 specific versions. It makes sense to have the feature of having the gtf at the time of indexing. The only concern I have is that mandating to have the gtf might restrict the overall workflow by a bit. Specifically because a user might not always have the full GTF available for every use case, although we can always make having GTF as an optional requirement for indexing. Adding the support should not be too difficult but it will certainly add a new logic path which would need thorough testing. . We'll certainly keep you updated with the feature as we progress although it can take some time to get back. In terms of your pipeline one option would be to actually save the GTF explicitly in the salmon index folder post indexing. Although it's definitely not a very computer science friendly solution but it will help maintain the consistency while we work on the feature.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/595#issuecomment-738200842:358,avail,available,358,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/595#issuecomment-738200842,1,['avail'],['available']
Availability,"Great! Assuming that the hang resulting from feeding nan to `gamma_distribution` was the cause of all of the hanging you were seeing, I'm going to close this issue now. Thanks so much for all of your help in tracking this down and isolating the cause.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-268064091:222,down,down,222,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-268064091,1,['down'],['down']
Availability,"Great- thanks @roryk , I'll give your code a try, and yes, we are applying some filtering downstream. Unfortunately we don't always have control of the metadata associated with the experiments we're handling. . @k3yavi - thank you, next release will be fine :-)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490163389:90,down,downstream,90,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490163389,1,['down'],['downstream']
Availability,"Great; hopefully I'll be able to repro the issue with the other sample. No rush, as I'll be finishing putting together the final for my class tomorrow morning (and so will be testing the sample between writing exam questions ;P). I just hope this doesn't turn out to be an environment / machine-specific behavior (those are *the worst* bugs to track down and fix).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266948036:350,down,down,350,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266948036,1,['down'],['down']
Availability,"Great; thanks for reporting this and helping us track it down. Please let us know if you run into anything else, or if you have other general feedback / suggestions regarding alevin!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396325784:57,down,down,57,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396325784,2,['down'],['down']
Availability,"Greetings,. I would like to thank you for providing this as an open-source tool. Currently, I am performing Salmon Indexing using human Gencode V35. I am following the instruction from: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. But when I try running the command of ""**salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode**"", I hit the error of ""exception : [unrecognised option '-d']. Exiting."". In the --help section the argument of ""-d"" is not present. Please do advise me on how I should proceed with indexing?. Regards,; Ben. ![image](https://user-images.githubusercontent.com/69944967/137584568-a0378455-a751-4d1f-885b-a66addf07160.png). ![image](https://user-images.githubusercontent.com/69944967/137584591-c61a3777-aff5-416f-beee-a33ad81ea5dd.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/714:391,error,error,391,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/714,1,['error'],['error']
Availability,"Greetings,. When trying to debug test failure, I ended up with an incomplete error messages which turned out to stem from a typo in the variable name, so I took the liberty to make the whole message a bit more verbose to help with the present and future debugging. I thought you might be interested.; Have a nice day, :); Étienne.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/810:38,failure,failure,38,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810,2,"['error', 'failure']","['error', 'failure']"
Availability,"Greetings,; I recently ran across this problem. In my invocation, I noticed that the boost build process was running with a b2 command which looked like:. cd /cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/boost_1_66_0 && CC=/opt/local/stow/gcc-8.1.0/bin/gcc CXX=/opt/local/stow/gcc-8.1.0/bin/g++ /cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=/opt/local/stow/gcc-8.1.0/bin/gcc toolset=/opt/local/stow/gcc-8.1.0/bin/gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/install/include -L/cbcb/sw/RedHat-7-x86_64/common/local/salmon/0.12.0/src/salmon-0.12.0/external/install/lib"" link=static install. and was generated in the file:; CMakeFiles/libboost.dir/build.make. which I then edited to ensure that all the toolset entries were set to 'toolset=gcc'.; Rerunning the make then passed without error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-466558449:1188,error,error,1188,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-466558449,1,['error'],['error']
Availability,"HI @dbrg77 ,. Thanks for the tips on sci-seq and sci-car seq. We have put both in our todo list and would let you know once we have a stable version. re error: I am not sure why would there be an extra count under `awk`, although based on the editor/environment I think they sometimes use `\r\n` as the newline operator but don't trust me on this one it's just a hunch. I am closing this issue for now, feel free to open it if you have any other question.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420812116:153,error,error,153,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420812116,1,['error'],['error']
Availability,"HI @gianfilippo ,; I think #245 might help understanding the problem better.; Specifically to answer your questions, I am guessing `737K-august-2016.txt` is all the set of Cellular Barcodes(CB) being whitelisted by 10xGenomics protocol while in Alevin when you are giving external whitelist it assumes that the user is pretty confident about the presence of *all* the given CBs in their experiment. for example if you want to compare Alevin and cellranger apple to apple then you might have to give the `barcodes.tsv`(usually is present along with the `mtx` file) generated by the cellranger. (after removing `-1` from the CB names). ; `[alevinLog] [error] Barcode not found in frequency table`: This error means some of the CB given externally through the whitelist command seems to have no reads at all which violates the above assumption, you can potentially skip this error by using `--debug` flag with alevin (only if have version v0.11.3) but this mode has is yet to be extensively tested.; In case where you don't externally give whitelist CB, Alevin uses knee and KDE based method to identify the cutoff on the knee (and later correct for it) of the CB distribution. Based on your specific dataset it is possible that the method might be overshooting and aggressively identifying less number of clusters. If you can share the log and some part of your data then we can take a look what's going on. Hope this helps.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417964393:650,error,error,650,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-417964393,3,['error'],['error']
Availability,"HI,; I using Salmon version1.2.1_l.; I have mate pairs for transcriptome mapping. ; `./bin/salmon quant -i /media/amit/Amit/Usr/new_salmon_index/ -l IU -1 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L3_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq -2 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L4_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L4_HK500HUMpybEAAKRAAPEI-530_2.fq -p 8 --validateMappings -o /media/amit/Amit/Usr/DNA12/fastq/DNA12.quant`. But salmon gives an error:; ```; The following errors were detected with the read files; ======================================================; ERROR: file [V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq] does not appear to exist!. ```; Kindly help. I have followed all the instructions noted here:; https://github.com/COMBINE-lab/salmon/issues/69. Regards.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/737:498,error,error,498,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/737,3,"['ERROR', 'error']","['ERROR', 'error', 'errors']"
Availability,"Happy to compare notes! For benchmarking accuracy I'm mostly using data from SEQC. There are four reference samples, each sequenced quite deeply at several different labs. I took 20 lanes from BGI, which is about 100 million reads, which I compare it to TaqMan (~800 genes), PrimePCR on (~18000 genes), and ERCC spike-ins. . On top of that, to get more directly at isoform-level accuracy, I'm simulating data using rlsim, which I've found to be the least awful RNA-Seq simulator. Unlike most simulators, it models some technical effects/bias. I think it underestimates these, but still a lot better than most that assume perfect uniform random sampling, etc. I also have a set of benchmarks designed to get at the question of consistency or stability of estimates, which is one of the main thrusts of the paper I'm working on. The other aspect I've been fretting about a lot the last month has been just what metric to use. You should check out this paper if you haven't seen it, which is pretty eye-opening as to the problems with using correlation on compositional gene expression data. > Lovell, D., Pawlowsky-Glahn, V., Egozcue, J. J., Marguerat, S., & Bähler, J. (2015). Proportionality: a valid alternative to correlation for relative data. PLoS Computational Biology, 11(3), e1004075. http://doi.org/10.1371/journal.pcbi.1004075. Those problems aren't unique to correlation. E.g. the ""median relative difference"" approach taken by the Kallisto paper is very much affected by this, I think even more so than correlation. The method I've adopted is to use the ""proportionality correlation"" they propose on page 9, and add 0.1 TPM to expression values to account for zeros and tiny values. It's not terribly sensitive to the additive constant and gives pretty reliable results in my experience. I have a somewhat horrifying labyrinth of makefiles and julia code that runs all this which I'll probably make public on github in the next few weeks, which may or may not be helpful.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112291922:1764,reliab,reliable,1764,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-112291922,1,['reliab'],['reliable']
Availability,Has Sierra issue been fixed? Binary release Salmon-0.8.2_macOS_10.12.tar.gz; still gives malloc error under OSX 10.12.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294840673:96,error,error,96,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294840673,1,['error'],['error']
Availability,Hello ; We are currently trying to use Salmon quant mode with BAM files that were generated from another lab's work. We have continued to get the error below and are unsure what the problem is. Our original command used the libtype A parameter which gave us a similar warning to the one below. We then sorted the BAM files by name using samtools sort -n and tried to run the command again and got the same error. We have used a myriad of different libtypes and continue to get the same error. We have a reference transcriptome generated from a de novo transcriptome assembly that the previous lab produced. WARNING: Detected suspicious pair --- ; The names are different:; read1 : D61655M1:276:D10YJACXX:3:1114:17825:17511; read2 : D61655M1:276:D10YJACXX:3:1114:17825:18115; The proper-pair statuses are inconsistent:; read1 [D61655M1:276:D10YJACXX:3:1114:17825:17511] : proper-pair; mapped; matemapped. read2 : [D61655M1:276:D10YJACXX:3:1114:17825:17511] : no proper-pair; mapped; matenot mapped. We have seen that others have had similar issue but haven't found a thread that mentions what the user did to remedy the problem. Any suggestions would be appreciated! We are using salmon V0.14.1.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/582:146,error,error,146,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/582,3,['error'],['error']
Availability,"Hello @rob-p ,; 1. For pre-compiled binary, ""salmon index"" complete successfully, but ""salmon quant"" failed to find the read file. (""ls"" command confirms the existence of the read file SRR6269049_2.fastq); ![image](https://user-images.githubusercontent.com/24876498/103170603-66a47600-4880-11eb-9da1-336f96880e4f.png). 2. ; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DNO_IPO=TRUE -DCMAKE_INSTALL_PREFIX=../stage ..; I add the additional ""-DNO_IPO"" flag, but ""salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode""(same as **To Reproduce** point 5) still crashed at fixFasta(), fixFastaMain() with segmentation fault. 3.; I had another issue posted yesterday reporting that the Debug mode is unabled to be compiled successfully, and I'm wondering if there's a resolution for the problem. Thank you:)); title: [salmon v1.4.0 -DCMAKE_BUILD_TYPE=Debug produce compile error: -pg and -fomit-frame-pointer are incompatible #608]",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609#issuecomment-751460320:676,fault,fault,676,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609#issuecomment-751460320,2,"['error', 'fault']","['error', 'fault']"
Availability,"Hello @rob-p . I tried running your script for converting binary bootstrap samples into a text format. I gave back following error:. Traceback (most recent call last):; File ""./ConvertBootstrapsToTSV.py"", line 98, in <module>; main(args); File ""./ConvertBootstrapsToTSV.py"", line 45, in main; txpNames = nf.read().strip().split('\t'); TypeError: a bytes-like object is required, not 'str'. I processed the samples with salmon version 0.8.2. Do you have any suggestion how I can fix this error? . Thank you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336746989:125,error,error,125,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336746989,2,['error'],['error']
Availability,Hello @rob-p . I want to ping your question above.; I'm sitting on a heap of new QuantSeq data and wanted to know about the commands recommended for such data - was this ever resolved?. Cheers!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/365#issuecomment-545639470:25,ping,ping,25,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/365#issuecomment-545639470,1,['ping'],['ping']
Availability,"Hello @rob-p . I was using python 3. . Your new script works without producing an error. When I run it, I get a text where the first row are the transcripts and the otherline are bootstrapvalues. Thank you very much for the help!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336993026:82,error,error,82,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336993026,1,['error'],['error']
Availability,"Hello Again,. I just ran the command and got the same error message as before. Here is my; command:. ```#!/bin/bash -l; #SBATCH -J male_salmon_map; #SBATCH -t 150:00:00; #SBATCH -p high; #SBATCH --cpus-per-task=24; source ~/.bashrc; source activate salmon; cd /home/seboles/abaloneraw/salmon_quantification/SALMON_MALE/; for i in *.qc.fq.gz; do; salmon quant -i maleredabalone_index --libType IU -1; mgonad-2_S121_L006_R1_001.qc.fq.gz; lightreceptor-1_S114_L006_R1_001.qc.fq.gz; mgonad-1_S120_L006_R1_001.qc.fq.gz; lightreceptor-2_S115_L006_R1_001.qc.fq.gz; mgonad-2_S121_L005_R1_001.qc.fq.gz mgonad-1_S120_L005_R1_001.qc.fq.gz; lightreceptor-2_S115_L005_R1_001.qc.fq.gz; lightreceptor-1_S114_L005_R1_001.qc.fq.gz; mgonad-2_S121_L004_R1_001.qc.fq.gz mgonad-1_S120_L004_R1_001.qc.fq.gz; lightreceptor-2_S115_L004_R1_001.qc.fq.gz; lightreceptor-1_S114_L004_R1_001.qc.fq.gz -2; mgonad-2_S121_L006_R2_001.qc.fq.gz; lightreceptor-1_S114_L006_R2_001.qc.fq.gz; mgonad-1_S120_L006_R2_001.qc.fq.gz; lightreceptor-2_S115_L006_R2_001.qc.fq.gz; mgonad-2_S121_L005_R2_001.qc.fq.gz mgonad-1_S120_L005_R2_001.qc.fq.gz; lightreceptor-2_S115_L005_R2_001.qc.fq.gz; lightreceptor-1_S114_L005_R2_001.qc.fq.gz; mgonad-2_S121_L004_R2_001.qc.fq.gz mgonad-1_S120_L004_R2_001.qc.fq.gz; lightreceptor-2_S115_L004_R2_001.qc.fq.gz; lightreceptor-1_S114_L004_R2_001.qc.fq.gz ${i} -o ${i}_quant --seqBias; --gcBias --validateMappings; done```. And here is my output from salmon.log. [2019-07-30 10:40:14.624] [jointLog] [info] Fragment incompatibility prior; below threshold. Incompatible fragments will be ignored.; [2019-07-30 10:40:14.624] [jointLog] [error] You passed paired-end files to; salmon, but you passed 12 files to --mates1 and 13 files to --mates2. You; must pass the same number of files to both flags. Thank you in advance for any tips you may have for me. Sara. On Tue, Jul 30, 2019 at 10:30 AM Sara Boles <seboles@ucdavis.edu> wrote:. > Hi Avi,; >; > Here is the salmon log from one of my PE libraries. There are",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408#issuecomment-516521791:54,error,error,54,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408#issuecomment-516521791,1,['error'],['error']
Availability,"Hello Avi,. Here is my out put log. Thank you in advance for an help you can provide. [2019-07-29 15:58:39.034] [jointLog] [info] Fragment incompatibility prior; below threshold. Incompatible fragments will be ignored.; [2019-07-29 15:58:39.034] [jointLog] [info] Usage of --validateMappings; implies use of minScoreFraction. Since not explicitly specified, it is; being set to 0.65; [2019-07-29 15:58:39.034] [jointLog] [info] Usage of --validateMappings,; without --hardFilter implies use of range factorization.; rangeFactorizationBins is being set to 4; [2019-07-29 15:58:39.034] [jointLog] [info] Usage of --validateMappings; implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-07-29 15:58:39.034] [jointLog] [info] parsing read library format; [2019-07-29 15:58:39.034] [jointLog] [error] Failed to successfully parse; any complete read libraries. Please make sure you provided arguments; properly to -1, -2 (for paired-end libraries) or -r (for single-end; libraries), and that the library format option (-l) *comes before* the read; libraries. Best,. Sara. On Mon, Jul 29, 2019 at 3:25 PM Avi Srivastava <notifications@github.com>; wrote:. > You passed paired-end files; > to salmon, but you passed 12 files to --mates1 and 13 files to --mates2.; > You must pass the same number of files to both flags; >; > Is this true ? Can you share the log ?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/408?email_source=notifications&email_token=AEHDXAH7HQIR4ZVWMTE2KXLQB5U5LA5CNFSM4IGU4ZTKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD3CF3JY#issuecomment-516185511>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AEHDXAG7WI3B7QBMJOSXTATQB5U5LANCNFSM4IGU4ZTA>; > .; >. -- ; Sara E. Boles, MS; PhD Candidate | Whitehead Lab; Pharmacology and Toxicology Graduate Group; Department of Environmental Toxicology; Univer",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408#issuecomment-516194201:816,error,error,816,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408#issuecomment-516194201,1,['error'],['error']
Availability,"Hello Bob, ; I am trying to implement Salmon 1.5.3 and I have problems running the quant mode. I succeed to prepare the index using decoy protocol and I am trying reads quantification mode.; I; used this command line:; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant -i salmon_index -l ISF -1 rawDataPE/ERR3537668_1.fastq.gz -2 rawDataPE/ERR3537668_2.fastq.gz --validateMappings -o transcripts_quant_test. and I got this message error:; Exception : [std::bad_alloc]; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant was invoked improperly.; For usage information, try ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant --help; Exiting. Would you have any idea why I got this message error? Could you please help me to solve this problem?; Best ; Luciana",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/717:430,error,error,430,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/717,2,['error'],['error']
Availability,"Hello I'm a new in bioinformatics. when I upload my quant.sf files to R for using DESeq2, my file's indexes are weird. I thought my index should be formed like ENST00000456328.2 or ENSG00000223972.5; but my index name is; ""ENST00000456328.2|ENSG00000223972.5|OTTHUMG00000000961.2|OTTHUMT00000362751.1|DDX11L1-202|DDX11L1|1657|processed_transcript|"". So I think that's why I wasn't able to upload my quantificated files to R using tximport(). I used the index that I downloaded from gencode ""gencode.v37.annotation.gtf.gz""; and I used the gene reference ""gencode.v37.transcripts.fa"". ![image](https://user-images.githubusercontent.com/80821527/111452633-112c8680-8756-11eb-84c6-d654219f56bb.png); ![image](https://user-images.githubusercontent.com/80821527/111452674-1ab5ee80-8756-11eb-8648-fdffad002745.png). thank you for helping me",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/640:466,down,downloaded,466,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/640,1,['down'],['downloaded']
Availability,"Hello Salmon team,. I've recently been exploring the alignment mode of salmon quant and noticed that the --eqclasses option is mentioned in the help manual. Based on my understanding of the documentation, I initially thought that the --eqclasses option is used when input files are in alignment (BAM/SAM format). However, when I tried to use it, I encountered the following error: ""Conflicting options 'alignments' and 'eqclasses'."". Is the --eqclasses option applicable in alignment mode?; If not, when should it be used?; Does using the --eqclasses option in the context of alignment mode imply starting the quantification with a pre-computed equivalence class file and a reference transcriptome, thus bypassing the need for an alignment file (BAM)?. Thank you for your continuous efforts in developing and maintaining Salmon. I'm looking forward to any clarifications you can provide on this matter.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/877:374,error,error,374,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/877,1,['error'],['error']
Availability,"Hello again @rob-p . I was calling using the wrong code for quantification and calling sailfish .; The code that I just sent you is included in the tutorial and is saved as shell script . `quant_tut_samples.sh`. However this doesn't match with the code described immediately below in the tutorial. ; >#!/bin/bash; >for fn in data/DRR0161{25..40};; > do; > samp=`basename ${fn}`; > echo ""Processing sample ${samp}""; > salmon quant -i athal_index -l A \; > -1 ${fn}/${samp}_1.fastq.gz \; > -2 ${fn}/${samp}_2.fastq.gz \; > -p 8 --validateMappings -o quants/${samp}_quant; >done. This is something that should be corrected in the tutorial. Thank you so much. I apologize.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/508#issuecomment-614289282:381,echo,echo,381,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/508#issuecomment-614289282,1,['echo'],['echo']
Availability,"Hello all, . I really wish Salmon was easier to install. . When running: . _cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX='/home/.../salmon-master/'_. I get the following message: . _Making Release build; running /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh 2>&1; /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh: line 33: curl: command not found; -- fetch RAPMAP exit code 127. CMake Error at CMakeLists.txt:265 (message):; Could not fetch RapMap source [fetchRapMap.sh returned exit code 127]. -- Configuring incomplete, errors occurred!; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeOutput.log"".; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeError.log""._. This seems to be an issue that keeps coming up. What is the proper way to solve it? ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/331:409,Error,Error,409,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331,2,"['Error', 'error']","['Error', 'errors']"
Availability,"Hello all, we are trying to use salmon quant on environmental samples using a big index but the quant step keeps crashing. While trying to quant different samples all crashed at the same step with the error message: `Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]`. The system is part of a cluster and we have requested 500gb of RAM and disk available for the job and I kept track of the memory and disk usage which never exceeded 254gb. lsb_release -a; ```; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 6.4 (Carbon); Release:	6.4; Codename:	Carbon; ```. Do you have any idea what can be the causing the error?. Thanks. We are using the precompiled salmon bin and running it with:. `salmon quant -i $index -1 $f1 -2 $f2 -o $output_folder --meta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/129:201,error,error,201,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129,3,"['avail', 'error']","['available', 'error']"
Availability,"Hello everybody, . I've checked the google group, but it seems pretty deserted. I'm new to Salmon, but I do need to process a lot of experiments on my cluster, and it keeps overwhelming the I/O (and if I don't, the process would take much longer than I can wait - order of years). . So, I've had two questions: ; - can Salmon use SRA files directly? I.e. in hisat2 they implemented NGS sdk from NCBI and if you have your SRA file downloaded, you can read it same as you'd read fastq or fastq.gz. ; - can Salmon batch-process RNA-seq experiments? The goal is to not read the index every time - e.g. you've loaded the human transcriptome index into memory once, and then processed 100 files or so. . Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/319:430,down,downloaded,430,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/319,1,['down'],['downloaded']
Availability,"Hello! I am having some difficulty quantifying RNAseq data with salmon in mapping-based mode. I have been struggling with this for a few days and would be very grateful for any advice on how to move forward. Thank you in advance. Here is my command:; ```; #!/bin/bash -l ; #SBATCH -J male_salmon_map; #SBATCH -t 700:00:00; #SBATCH -p high; #SBATCH --cpus-per-task=24; source ~/.bashrc; source activate salmon; cd /home/seboles/abaloneraw/salmon_quantification/salmon_male/abalone_orfs/; ./bin/salmon -i salmon_index -p 8 -l --libType A -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz --validateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/ve",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:638,error,error,638,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['error'],['error']
Availability,"Hello! I did some work with the oxford nanopore error model last summer. There's a blog post about the ONT long read quantification here: https://combine-lab.github.io/salmon-tutorials/2021/ont-long-read-quantification/ . In terms of length correction, the --ont flag basically turns off length correction (since it doesn't really apply to long reads). The error model that the current version of salmon uses for the --ont flag (found in src/ONTAlignmentModel.cpp) basically bins reads by length (into 4 bins by default, I believe). Then for each bin it learns a binomial/geometric distribution for the number of errors (mismatches or indels) in the alignment of the reads in the bin, as well as distributions for the number of bases softclipped at the beginning and end of the read. It then uses these models to penalize reads that have an amount of errors/softclips that is very different from the center of the learned distribution, only if the number of errors/softclips is larger than what we expect for that bin (since a smaller than expected number of errors in the alignment is generally a good, not a bad sign for how likely the read is to map to this transcript). I'm not the original author/creator of this model, so I don't have all the details on specifics of how it works/the design decisions that went into it, but let me know if you have any other questions I can answer!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/924#issuecomment-2148242254:48,error,error,48,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/924#issuecomment-2148242254,12,['error'],"['error', 'errors']"
Availability,"Hello!. I'm packaging salmon and many of its dependencies for Debian in support of https://github.com/Blahah/transrate/issues/160. I have a messy patch to enable the use of external libraries instead of bundled or downloaded copies at http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/dependency-fix. As I'm not a CMake expert I was only able to make it work for Debian instead of a generic solution that would fall back to the shipped copies or downloading as it is now. Perhaps you all are better with CMake than I am? A generic solution would be best so I don't have to adjust the patch with every change to the CMakeLists.txt. Specifically it would be great to support; - [ ] external copy of spdlog headers and the cereal serialization headers; - linking to external dynamic libraries for; - [ ] boost; - Headers: https://packages.debian.org/sid/amd64/libboost1.58-dev/filelist; - Sample library layout: https://packages.debian.org/sid/amd64/libboost-filesystem1.58-dev/filelist; - [ ] bwa; - Headers & library: https://ftp-master.debian.org/new/bwa_0.7.12-5.html; - [ ] jellyfish; - Headers & library: https://packages.debian.org/sid/amd64/libjellyfish-2.0-dev/filelist; - [ ] tbb; - Headers & library: https://packages.debian.org/sid/amd64/libtbb-dev/filelist; - [ ] libgff; - Headers & library: https://ftp-master.debian.org/new/libgff_1.0-1.html; - [ ] staden IOLib; - Headers & library: https://packages.debian.org/sid/amd64/libstaden-read-dev/filelist. I also have a patch to support the latest release of jellyfish that I can turn into a pull request, should you want it: http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/19:214,down,downloaded,214,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19,2,['down'],"['downloaded', 'downloading']"
Availability,"Hello!; This might be an unusual request, but I have been attempting to use Salmon Alevin for mapping of **scATAC-seq data** (10X Genomics platform) and have a few questions on how to best do this (/whether it is possible at all!). _**A bit of background**_:; I have two sequenced libraries of the same cross-species hybrid: scRNA-seq 10X v3 and scATAC-seq 10X (alas, not from the same cells). My aim is to use Salmon Alevin on both, using a home-made diploid reference so that down the line I can do allele-specific analysis on both datasets and then compare allelic imbalance. _**What I have done**_:; I generated a diploid reference ""feature set"" for the scATAC-seq, to mimic in a way how the reference transcriptome is interpreted. I did this by using bulk ATAC data from both species, calling peaks with MACS2, and then using this peak set (BED format) to extract strain- and species-corrected sequences (fasta) to use as a reference. _**My questions/issues**_:; Considering the basic Alevin invocation:; `salmon alevin -l ISR -1 cb.fastq.gz -2 reads.fastq.gz --chromiumV3 -i salmon_index_directory [--whitelist barcodes.tsv] -p 10 -o alevin_output`; ; `-1 cb.fastq.gz` —> these should be CB+UMI reads, but in 10X ATAC there are no UMIs, so this would only be a 16bp CB. I'm afraid this would be a major issue considering how Alevin relies on UMI whitelisting. Would it help if I already provide a list of filtered whitelisted CB, as provided by Cell Ranger? I have this from a quality control alignment to only one parental species. `--chromiumV3 `—> If I understand correctly, this tells the program to search for the first X bases of cb.fastq.gz as CB, and the first Y bases of it as UMI (as per [this ](https://github.com/COMBINE-lab/salmon/issues/369) thread). So technically one could swap --chromiumV3 for --end 5 --barcodeLength X --umiLength Y and set this manually? But again, what if I only have CBs?. `-2 reads.fastq.gz` —> I understand this is meant for 10X scRNA-seq - which only ha",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/611:478,down,down,478,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/611,1,['down'],['down']
Availability,"Hello, . While running the quantifications of my samples while quasi-mapping, the resulting created quant folders remain empty following the shell script is done running. An example of this would be from the ""Getting Started"" tab: . #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 -o quants/${samp}_quant; done . Once this is done, the created folders are empty, whereas I would expect them to continue to quant files. Of note, I do sometimes get complete quantification of one or two samples (again, referring to the A.thaliana example used in the ""Getting Started"" tab. My, albeit limited, experience might suggest that my case might be a matter of number of threads used/made available. I would appreciate any feed back/confirmation on this. As a reference, I was initially running this on a quad core (3.1 GHz Intel Core i7) MacBook Pro. Thank you for taking the time to consider this, most likely, simple issue",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/302:306,echo,echo,306,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/302,2,"['avail', 'echo']","['available', 'echo']"
Availability,"Hello, ; Could someone tell me what this error message means and if there is a way to fix the issue? I'm trying to use salmon for my Master's project data (I break down salmon into two parts to make it easier for myself) but keep getting the error message below during the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/855:41,error,error,41,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855,4,"['down', 'error']","['down', 'downloaded', 'error']"
Availability,"Hello, I am relatively new to bioinformatics/salmon. I am using the newest version of salmon (v1.10.0, downloaded executable). I created two decoy-aware transcriptomes using 1. a Trinity assembly created with 24 RNA-seq samples plus a published genome of the same species (an insect) and 2. a transcriptome compiled using Evigene into which I fed the same Trinity assembly, a MEGAHIT assembly (created with the same read files), and a previously published transcriptome from the same species, along with the same published genome of the same species as above. Running salmon with the two different indexes yields very different results using the same set of paired-end RNA-seq files. With the Trinity assembly-only-index, I get ""expected_format"": ""IU""; whereas with the Evigene index, I get ""expected_format"": ""ISR"". Why would this differ when the read files are exactly the same? Isn't the read file what is being looked at to automatically detect the library type? . For the Trinity index, here is an example from one sample:; ""strand_mapping_bias"": 0.5196075475175259; ; The same sample run with the Evigene index gave:; ""strand_mapping_bias"": 0.00013477965729161834. . For every sample run with the Trinity index, a warning ""Detected a *potential* strand bias > 1% in an unstranded protocol"" appeared, whereas this was very rare for samples run with the Evigene index, even though when using the latter, the strand-mapping_bias was FAR farther from the 0.50 ideal (it was always < 0.01). Why is this the case? I expected similar results using both indexes, because the read files used to create the two transcriptomes were largely the same, and both used Trinity as part (or all) of the transcriptome assembly process. . Thank you in advance for your insight. Holly Williams",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/840:103,down,downloaded,103,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/840,1,['down'],['downloaded']
Availability,"Hello, I am trying to install this Salmon 0.11.3 from source but I am running into the following error when running make:. [ 80%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd2c): warning: the use of `tempnam' is dangerous, better use `mkstemp'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::conflicting_options(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x5318): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x53b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xd13f): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::processQuantOptions(SalmonOpts&, boost::program_options::variables_map&, int)':; SalmonUtils.cpp:(.text+0xeb97): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0xec0a): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xf846): more undefined references to `boost::program_options",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/309:97,error,error,97,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309,1,['error'],['error']
Availability,"Hello, I'm debugging a salmon install problem with conda. I don't have time to double check, but it looks something like:. * if you install salmon 1.1.0, you get a version of tbb, 2021.1.1, from conda-forge ; * if you then try to upgrade to salmon 1.4.0, you actually want to get a different version of tbb from defaults, but the version pinning doesn't require it so it sticks with conda-forge; * if you force `tbb==2020.3` for salmon 1.4.0, things work; * if you don't, you get `salmon: error while loading shared libraries: libtbb.so.2: cannot open shared object file: No such file or directory`. The error shows up with:; `tbb 2021.1.1 h4bd325d_0 conda-forge`. and the functioning version of tbb seems to be:; `tbb 2020.3 hfd86e86_0 defaults`. I don't have time to chase this down further at the moment, but hopefully this will be sufficiently clear for me to figure it out later :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/637:489,error,error,489,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/637,3,"['down', 'error']","['down', 'error']"
Availability,"Hello, I'm interested in trying out Salmon for the first time. In this analysis, I would like to disentangle a host eukaryote organism's reads for quantification from read data containing it and eight of its microbial symbionts. The host (C. elegans worms) of course has a great genome and transcriptome available.` transcript.fa` is no problem.; The microbes all have genomes and gtfs, but not transcript files (on NCBI). Luckily, I'm not interested in quantifying them - I checked a couple samples with STAR and BBsplit (within the BBmap toolkit) and microbial read abundance is too low for any one bacterium to use in analysis. However, I still need to get those bacteria reads out of the picture when quantifying the host worm reads/transcripts. **What is the best approach to go from a mixed-organism read pool to quantified host transcripts?**. - Perhaps, target-transcriptome = worm_transcripts.fa, with a concatenated decoy composed of worm transcripts, worm genome, and the genomes of the 8 microbes? This seems like the fastest and least error prone method, based on my developing understanding of Salmon. - Or, truly align reads and bin them to new fastq files using genomes+gtfs with STAR/samtools (or just genomes with BBsplit). Then take the putative worm-only reads, and then run Salmon in a single-organisms routine manner? Perhaps this is more accurate in a way?. Thank you for any advice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/901:304,avail,available,304,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/901,2,"['avail', 'error']","['available', 'error']"
Availability,"Hello, I'm trying to generate an index from a transcriptome, that was generated by StringTie, with salmon, but I'm getting the following error. What could be the problem?. # salmon index -t /home/...out.gtf -i /home/...salmon-index. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-05-23 10:37:53.715] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; Elapsed time: 0.0602932s. Replaced 0 non-ATCG nucleotides; Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 3.7924e-05s; Writing sequence data to file . . . done; Elapsed time: 1.7461e-05s; [info] Building 32-bit suffix array (length of generalized text is 0); Building suffix array . . . FAILURE: return code from libdivsufsort() was -1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/224:137,error,error,137,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/224,2,"['FAILURE', 'error']","['FAILURE', 'error']"
Availability,"Hello, I'm trying to install Salmon on my CentOS 7 system, as suggested here:; https://salmon.readthedocs.io/en/latest/building.html#installation. I decided to get the cmake `-DFETCH_BOOST=TRUE` option, in spite of having installed Boost. ; I get this error (here is the full log):. `cmake -DFETCH_BOOST=TRUE`. > Salmon requires g++ 5.2 or greater. https://pastebin.com/UmVJw0Ae. This is particularly odd.; I have installed a recent GCC version and even rebuilt Boost after it... As you can see, if I type . > gcc --version; > g++ --version. By root and user, I always get... > gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and . > g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. On another tutorial, I found that I should open a bash instead while installing gcc/g++, with the instruction:. `scl enable devtoolset-7 bash`. When I run . > gcc --version; > g++ --version. By root and user, this time the proper version is recognised!. > gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and. > g++ (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. As you can see, this time the latest version is recognised. I'm quite sure the bash was open even when I rebuilt Boost... But even though I re-open the bash before cma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/388:252,error,error,252,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/388,1,['error'],['error']
Availability,"Hello, salmon developer!; I am working on an arm HPC machine. And when I tried to build with salmon on it. I found a little problem in the CMakeLists.txt. ```; not setting -DHAVE_NUMERIC_LIMITS128; CMake Error at /home/hzwi/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Iconv (missing: Iconv_LIBRARY); Call Stack (most recent call first):; /home/houzhuangwei/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /home/hzw/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindIconv.cmake:165 (find_package_handle_standard_args); CMakeLists.txt:362 (find_package); ```; It seems the cmake can not found the right path of libiconv.; So I change the CMakeLists.txt the 362-365 line.; ```; find_package(Iconv REQUIRED); if(NOT Iconv_IS_BUILT_IN); set(ICONV_LIB Iconv::Iconv); endif(); ```; ```; find_package(iconv); if(NOT Iconv_IS_BUILT_IN); set(ICONV_LIB Iconv::Iconv); endif(); ```; or ; I use the -D in the cmake like; ```; cmake -DFETCH_BOOST=TRUE -DBOOST_ROOT=/path/boost -DCMAKE_INSTALL_PREFIX=/path/salmon-1.8.0/salmon_install -DIconv_LIBRARY=/path/libiconv-1.16/iconv_install/lib ; ```; Then the configure was success",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/776:204,Error,Error,204,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/776,1,['Error'],['Error']
Availability,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/263:644,Error,Error,644,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263,15,"['Error', 'down', 'error']","['Error', 'downloads', 'error', 'errors']"
Availability,"Hello,. Hoping you can help troubleshoot a salmon quant failure. We're running V0.9.1. BAM files are transcriptome aligned using OSA aligner. The program is calling out a malformed key:pair? The salmon_quant.log is blank. > ./bin/salmon quant -t transcripts.fa -l A -a A549_S1_001.bam -o A549_S1_quant &; [1] 10291; us1salxngst01> Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ; ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/222:56,failure,failure,56,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222,2,"['ERROR', 'failure']","['ERROR', 'failure']"
Availability,"Hello,. I am currently using Salmon v1.2.0 which was build from source and is run on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't receive any errors during these runs",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/524:948,recover,recoverOrphans,948,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/524,1,['recover'],['recoverOrphans']
Availability,"Hello,. I am having a problem with an inconsistent segmentation fault: 11. Please see below. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I've only worked in salmon mode. **Describe the bug**; Following the tutorial procedure exactly, I'm experiencing seemingly random segmentation fault: 11 warnings on some alignments but not others. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. Salmon was installed yesterday through the getting started tutorial using the conda install method. The sample data downloaded fine using the provided scripts, and the index creation seemed normal. When I went to run the program (with the options given in the tutorial), 10 of the 16 alignments failed with a segmentation fault: 11 warning. Attached is a screen shot of the warning on one of the failed alignments. the quant.sf files of the successful alignments seem normal, and the files do not exist in the faulted samples. . To test repeatability, I deleted all of the quant files, and ran the program again. Again, most samples failed, and the samples that did not we different from the first run. **Expected behavior**; I expected all of the tutorial samples to produce quant.sf files successfully. **Desktop (please complete the following information):**; - OSX 10.13.3. Thank you,; Matt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/295:64,fault,fault,64,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295,5,"['down', 'fault']","['downloaded', 'fault', 'faulted']"
Availability,"Hello,. I am using the recent downloaded executable for v1.1.0 and am using salmon (bulk-mode). Noticed one potential bug and have some general questions regarding bootstraps. 1. The potential bug I noticed was when I use `--numGibbsSamples` the logs/salmon_quant.log file is always blank. When I remove this flag and re-run the program the log file is correctly printed out. 2. Regarding Bootstraps:. I've been working with parameters to min/max my predicted estimates to quantified cDNA results that we have. Through this process I was not performing bootstraps and was just using the TPM results that were located within the `quants.sf` file and have been getting some good results, with R-squared values of ~0.98 for actual v. predicted plots. As a note, even after running hundreds of runs with the same parameters, the TPM values in the `quants.sf` file never really fluctuated that much between runs and were generally nearly identical. . However, I thought it would be best to bootstrap `--numBootstraps` each Salmon run and average the bootstraps to get more accurate results. After doing 1,000 bootstraps per sample I noticed that the TPM values I calculated from numbers of mapped reads in the `bootstraps.gz` fluctuated a lot more and overall brought my R-squared values down to ~0.87. (I used your ConvertBootstrapsToTSV.py script to get the read counts from the bootstrap file and then calculated the TPMs using the effective lengths from the `quants.sf` file. As looking through previous issues (#246) I was under the assumption that the bootstrap file only contained new mapped read estimates and the effective lengths should be the same for all bootstrap runs.) . My question is why do the TPM values in the `quants.sf` file not fluctuate as much (even after 100+ runs using the same parameters), while calculated TPM values from bootstraps of the same run are showing greater variance?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/466:30,down,downloaded,30,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/466,2,['down'],"['down', 'downloaded']"
Availability,"Hello,. I came across this error after executing the make index command in salmon. Eg:salmon index -t gencode.v46.transcripts.fa.gz -i human_index. . Please help me out. . Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/957:27,error,error,27,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/957,1,['error'],['error']
Availability,"Hello,. I noticed a small typo in the documentation for one of the command line options. I haven't used .rst files before, but I believe I was able to track down the source of the typo. Thanks for your work on salmon. Matt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/314:157,down,down,157,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/314,1,['down'],['down']
Availability,"Hello,. I recently updated to 1.3.1 and I have been trying to set minScoreFraction to 0.7. However when i try to set this value I get an error stating it is an unknown option. Anyone else have this issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/549:137,error,error,137,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/549,1,['error'],['error']
Availability,"Hello,. I tried creating a salmon index for bos taurus but was not successful. I created the decoy file using:. grep ""^>"" <(gunzip -c Bos_taurus.ARS-UCD1.2.dna.toplevel.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. When i try to index using ; salmon index -t bos_taurus_gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode ; OR; salmon index -t Bos_taurus.ARS-UCD1.2.cdna.all.fa.gz -i bos_taurus_107_index --decoys decoys.txt -k 31. I get an error. The last two lines of the log file are. [puff::index::jointLog] [critical] The decoy file contained the names of 2211 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1. What is happening and how can i solve this issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/788:478,error,error,478,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/788,4,"['down', 'error']","['downstream', 'error', 'errors']"
Availability,"Hello,. I've actually been thinking of a different method that would require very stringent mapping. By providing transcripts of only exon 1 & 2, exon 2 & 3, and exon 1 & 3 I could get a better idea of the number of reads that skip exon 2 all together. Also, by averaging the read counts that map to the junctions of exon 1 & 2 and exon 2 & 3, I can help eliminate polyA tail bias that is heavily positioned towards exon 1 and would also allow me to get a more accurate prediction of the two gene versions since 1 read mapped to exon 1 & 2 and 1 read mapped to exon 2 & 3 would essentially tell me twice that the gene is there while a read mapped to exon 1 & 3 would only tell me once that the gene is there. However, doing so would force me to bring ```AuxSampleNumber``` down to very low numbers such as 10 - 100 as using stringent coverage parameters drastically reduces my reads mapped. . I do wonder though how these low AUX numbers might affect your model development and algorithm. Any input into the aspect of low AUX numbers?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/401#issuecomment-512905804:773,down,down,773,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401#issuecomment-512905804,1,['down'],['down']
Availability,"Hello,. My lab is in the process of testing out Salmon and potentially switching to it from traditional aligners. With a traditional aligner, we use picard's MarkDuplicates to remove PCR duplicates. Is there a way to remove PCR duplicates with Salmon? I tried using --writeMappings to generate a BAM and feed that into picard, but I just get a SAM validation error: ""Not primary alignment flag should not be set for unmapped read."". Best,; Brian",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/136:359,error,error,359,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136,1,['error'],['error']
Availability,"Hello,; I found there may be an error in the example code that posted by @uros-sipetic. I believe from my calculation, the correct equation for converting between FPKM and TPM should be: ; `FPKMi = 10^3 * TPMi / (sum_to_i(TPMi * effective_lengthi))`. Thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/566#issuecomment-865076744:32,error,error,32,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/566#issuecomment-865076744,1,['error'],['error']
Availability,"Hello,; I'm running in to problems trying to run salmon quant. I've installed the latest version 0.11.2 via bioconda, and successfully constructed an index of the C. elegans Wormbase WS265 transcriptome with the following settings:. `salmon index -k 21 -p 24 -t ${txome_reference} -i ${index_path}`. but upon running quant with the following command:. `salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; `. I get a segmentation fault error midway through running:. ```hits: 122146249, hits per frag: 2.10747; processed 58500001 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/268:467,fault,fault,467,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268,3,"['error', 'fault']","['error', 'fault']"
Availability,"Hello,; I'm trying to compile salmon into arm64 linux system, but I'm getting the error bellow:; ```; ...; Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /usr/lib/aarch64-linux-gnu/libtbbmalloc_proxy.so;/usr/lib/aarch64-linux-gnu/libtbbmalloc.so;/usr/lib/aarch64-linux-gnu/libtbb.so;/usr/lib/aarch64-linux-gnu/libtbb.so; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon-0.14.2/build; [ 34%] Completed 'libtbb'; [ 39%] Built target libtbb; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. ```. How to fix this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/433:82,error,error,82,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/433,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hello,; I'm trying to run the docker image on a cluster to quantify fastq files using the mapping mode. ; I'm using it with singularity ( already used it on another cluster and it worked perfectly). Here the command:; singularity exec docker://combinelab/salmon:latest salmon quant --validateMappings -l A -p ${threads} -o ./salmon_map -i ${salmon_index} -1 ${file_1} -2 ${file_2}. And the error:; salmon: error while loading shared libraries: libtbbmalloc.so.2: cannot open shared object file: No such file or directory. I suspect that it's missing inside the image and that in the other cluster it was running because it was taking the one outside the image ( the cluster where it worked had lots of libraries and softwares available, in this other you need to load the modules). Cheers; Claudio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/447:390,error,error,390,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/447,3,"['avail', 'error']","['available', 'error']"
Availability,"Hello,; Thank you for your guidance on this question. However, I encountered the same error despite using the latest versions of Trinityrnaseq and salmon. I ran Trinity version 2.15.1 to generate Fasta files. I attempted to use Salmon version 1.10.1 for indexing, but I encountered this exception. Upon checking the Docker link provided in the comment, I found that the salmon version listed is 1.5.0. So, I tried using Salmon 1.5.0 and encountered the same error. Could you please advise me on how to resolve this issue? Thank you. ```; $./trinityrnaseq-v2.15.1/Trinity --seqType fq --max_memory 6 --samples_file sample.txt --min_kmer_cov 2 --no_parallel_norm_stats --output trinity_test_0210_1019 --CPU 6. ... $ ~/tools/salmon-latest_linux_x86_64/bin/salmon index --index quasi --type quasi --transcripts ~/first_try_Gall/trinity_test_0210_1019.Trinity.fasta ; Version Info: This is the most recent version of salmon.; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; /home/ubuntu/tools/salmon-latest_linux_x86_64/bin/salmon index was invoked improperly.; For usage information, try /home/ubuntu/tools/salmon-latest_linux_x86_64/bin/salmon index --help; Exiting.; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/832#issuecomment-1990328443:86,error,error,86,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832#issuecomment-1990328443,5,"['Error', 'error']","['Error', 'error']"
Availability,"Hello,; salmon 0.11.1, on CentOS 7.; Tested with install from precompiled binaires, and from bioconda/conda 4.5.9. (1) salmon -h is fine, but salmon [command] -h takes lots of time, and ends up with; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. It could be related to any bad local proxy settings. Is there any way to skip the upgrade information lookup as a command-line option ?. (2) segmentation error with alevin; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /path/to/sample_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { /path/to/sample_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 14:31:41.793] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 14:31:41.810] [alevinLog] [info] Processing barcodes files (if Present) ; processed 109 Million barcodes; segmentation error (core dumped). No any other logs available, programs stopped. Best,; juugii.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/264:497,error,error,497,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264,3,"['avail', 'error']","['available', 'error']"
Availability,"Hello. I'm trying to quantify the samples included with the Salmon tutorial, but is giving me a malloc error. I'm using ANACONDA with salmon 1.1.0 on MacOS Catalina. First, I had to separately download sailfish because wasn't included with the salmon package. So the first error was:. _Processing sample DRR016125. -bash: sailfish: command not found_. I solved this by downloading sailfish from biobuilds, but then I'm getting this error:. Processing sample DRR016125. sailfish(23259,0x105f71dc0) malloc: *** malloc_zone_unregister() failed for 0x7fff90f4f000. How can I solve this issue. I'm totally new on RNA-seq analysis and don't know how to continue. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/508:103,error,error,103,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/508,5,"['down', 'error']","['download', 'downloading', 'error']"
Availability,"Here is the part of the log I've left out previously; <img width=""978"" alt=""Screen Shot 2019-11-03 at 8 41 57 PM"" src=""https://user-images.githubusercontent.com/17168657/68090974-860d6200-fe7a-11e9-972f-d529453bbea8.png"">. I've downloaded Linux executables on 11/02/ from the following link: https://github.com/COMBINE-lab/salmon/releases/download/v1.0.0/salmon-1.0.0_linux_x86_64.tar.gz. Decoys and gentrome files seem to be ok since they are working properly with bioconda version of salmon. I am sharing a Dockerfile in case you would like to reproduce the entire environment I was using. [Dockerfile](https://github.com/COMBINE-lab/salmon/files/3802055/Dockerfile)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/441#issuecomment-549171596:228,down,downloaded,228,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/441#issuecomment-549171596,2,['down'],"['download', 'downloaded']"
Availability,"Here's what I got; For a single sample, analyzed both with RSEM (with STAR aligner) and with Salmon in SA mode with collapsed duplicates, on GRCh38 FASTA and ensembl91 GTF, here are the TPM values for some ~30 transcripts that Salmon collapsed: ; <img width=""642"" alt=""Screen Shot 2020-05-14 at 11 01 51 PM"" src=""https://user-images.githubusercontent.com/16819349/81985764-f4578c00-9636-11ea-9ba9-72360d78418d.png"">. Note: RSEM reported the same TPM values for all duplicate transcripts that Salmon collapsed. ; So in the table above, there's Salmons TPM and RSEM TPMs for that single transcript, and the total TPM when adding all collapsed transcripts. Now, I know that different approaches are used here (alignment with STAR + EM in RSEM, versus Selective Alignment in Salmon), and that some TPM values will be different.; But from based on some of the 'similar' values from this table, I could gather that the situation is just as you described @rob-p, i.e. where the Salmon_TPM and the RSEM_TPM_total columns are in similar values, I assume that these are the transcripts for which both RSEM and Salmon reported similar expressions. EDIT: Added the error column to the attached image",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/255#issuecomment-628881630:1153,error,error,1153,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255#issuecomment-628881630,1,['error'],['error']
Availability,"Hey @BisonKok , just as a sanity can you check if you get any error/warning when you `samtools view ` the bam file ?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/387#issuecomment-505965479:62,error,error,62,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387#issuecomment-505965479,1,['error'],['error']
Availability,"Hey @Gaura and @rob-p - just as a point of comparison, I ran zUMIs on the same exact files. With nominal filtering I get 12,942 cells recovered, of which 10,386 (80%) were also contained in the published matrix (exact sequence matches). . Happy to provide any of those files if that's useful. But it does seem to argue something is funky when it comes to alevin's detection of these barcodes, right?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-987136859:134,recover,recovered,134,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-987136859,1,['recover'],['recovered']
Availability,"Hey @Ni-Ar ,; I can confirm that I can replicate the issue on my end. While we are working on this there are a couple of workarounds.; (1) if RAM is not a limitation you can basically index the full genome as decoy i.e. with running the script.; (2) if you are using standard model organism, the decoy salmon index can also be downloaded from refgenie website.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731#issuecomment-1003091513:327,down,downloaded,327,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731#issuecomment-1003091513,1,['down'],['downloaded']
Availability,"Hey @antonkulaga ,; Sorry for the late reply. Somehow, this one got lost somewhere in the mids of all the other issues.; Thanks for the heads-up and a very nice suggestion. ; I think they have included Alevin in the form of salmon [here](https://www.scrna-tools.org/tools.html#salmon). But we do see your point it could be confusing because of the names, we'll see what can be done in terms of including Alevin too. I am closing this issue for now and would update here if any changes happen down the line.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/283#issuecomment-433157082:492,down,down,492,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/283#issuecomment-433157082,1,['down'],['down']
Availability,"Hey @jeremymsimon! I checked the protocol and the [pipeline code](https://github.com/yjzhang/split-seq-pipeline/blob/master/split_seq/tools.py). The protocol you described is v1 and the Parsebio is v2. I have implemented v2 in salmon and would be testing it this week. v1 can be similarly implemented. I read the paper and other available resources but I am not clear about the random hexamer usage and it's effects on the barcode. Can you please explain what you meant by BC1s being paired and what's the use of random hexamer, please? Thanks.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-936331597:329,avail,available,329,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-936331597,2,['avail'],['available']
Availability,"Hey @k3yavi . The data is from a public dataset hosted on the 10x genomics website:. [200 Sorted Cells from Human Glioblastoma Multiforme, 3’ LT v3.1](https://support.10xgenomics.com/single-cell-gene-expression/datasets/6.0.0/Brain_Tumor_3p_LT). I downloaded the data and subsampled the FASTQ files to 1,000 reads. It was an arbitary choice, I just needed a small dataset to test a pipeline I was building.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647#issuecomment-821522673:248,down,downloaded,248,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647#issuecomment-821522673,1,['down'],['downloaded']
Availability,"Hey @k3yavi,. Most of the samples ran fine with --expectCells 3000, one did not, it gave an error:; [2021-02-10 18:43:12.296] [alevinLog] [info] Done barcode density calculation.; [2021-02-10 18:43:12.296] [alevinLog] [info] # Barcodes Used: [32m135909784[0m / [31m135909784[0m.; [2021-02-10 18:43:13.337] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github. Rerunning it with --forceCells 3000 ""worked"" (output was generated). I'm attaching the alevinQC report (renamed to .txt); [MB15_alevinReport.html.txt](https://github.com/COMBINE-lab/salmon/files/5961312/MB15_alevinReport.html.txt); To see if you have any thoughts on what may be going on with this sample.; ; EDIT: Nevermind! Turns out that sample had way more cells than the others in the original study, weird.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/625#issuecomment-777002541:92,error,error,92,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/625#issuecomment-777002541,2,['error'],['error']
Availability,"Hey @rob-p and @Gaura - thanks for this! My understanding is that your `splitp` will replace my slow perl script, which is great, and then alevin-fry should work pretty much like any other run, yes? If so, can you comment on the low alignment rate and other oddities I encountered running regular alevin following editing of my R2 FASTQ in this way (documented above), and whether there's something inherently different about alevin-fry that should address those issues? Because I currently detect only a tiny fraction of the cells expected. . I'm more than happy/eager to give splitp+alevin-fry a try, but I suspect there's some secondary issue at hand that we'll need to address downstream",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-978168267:681,down,downstream,681,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-978168267,1,['down'],['downstream']
Availability,"Hey @rob-p and @k3yavi! Avi and I have chatted a bit about this offline, and [I've commented about this in the past](https://github.com/COMBINE-lab/salmon/discussions/629#discussioncomment-777414), but I'm currently attempting to extend alevin's use to the newer combinatorial indexing experiments like [SPLiT-seq](https://science.sciencemag.org/content/360/6385/176) or the commercial solution, [ParseBio](https://www.parsebiosciences.com/) (the biotech formerly known as SplitBio). Now that you support different barcode geometries and allow the user to specify where these barcodes should be expected, this _should_ be doable. . I've downloaded the [raw data from the original SPLiT-seq paper](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3017261), and we have some ParseBio data of our own; my goal is to help you all write a vignette on this once we get the details worked out. . In short, the R1 file contains cDNA sequence, and R2 contains a 10bp UMI followed by 3 different barcodes in the following arrangements (note: ParseBio seems to shift BC1 up a few bp, to 79-86):; - UMI: 1-10; - BC3: 11-18; - BC2: 49-56; - BC1: 87-94. The intervening bases are a combination of common and variable sequences. The other wrinkle with these approaches is that the cDNA can be amplified using either oligo-dT or random hexamer barcodes. The net effect of this is that BC1 can be one of two options, and some barcode combinations need to be pooled to represent the same cell. For example:. AACGTGAT-CTGTAGCC-ACACAGAA; GATAGACA-CTGTAGCC-ACACAGAA. may be the same cell, amplified by two different means. . We know how the BC1s are paired, so Avi suggested pre-processing the R2 FASTQ file such that we locate random hexamer BC1 sequences and modify them to the matched oligo-dT sequence. In the above example, we'd correct some R2 reads that contain ""GATAGACA"" in the 87-94 position to ""AACGTGAT"". I [wrote a script](https://github.com/jeremymsimon/SPLITseq) (in perl because I'm old-school) that d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699:637,down,downloaded,637,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699,1,['down'],['downloaded']
Availability,"Hey @rob-p,. OK, I think the changes should pass CI now in theory. Basically I patched the `CMakeLists.txt` file to only download and build those libraries which are not found on the system. If they aren't found, then you have the same behaviour as before. Also, you can now activate the use of shared libraries by setting `USE_SHARED_LIBS=1` on cmake. This should work quite nicely for a Homebrew formula.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/348#issuecomment-472593229:121,down,download,121,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/348#issuecomment-472593229,1,['down'],['download']
Availability,"Hey Avi,. I have ran alevin with addition of `--expectCells 8000` flag, the new output of cells detected: ; `3655, 5604, 4374` w/ `13%, 30%, 15.7%` reads thrown away. It is better than the first trial `1192, 4947, 3414` but nevertheless fewer than the cell ranger output `5150, 7618, 6404`. . Wonder ; 1. if I should set higher `--expectCells`, but which would result in more unconfident calls?; 2. From 1, if I just try to get more cells subjectively, will the expression matrix (and further analysis) be inaccurate/affected? (given downstream filtering of cells of low quality based on # of feature detected etc. would be performed anyway. ) ; 3. what could be the reason that these two algorithms output such different total cell numbers (precision in calling?) . Thanks!; Chelsea",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/396#issuecomment-510603746:534,down,downstream,534,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/396#issuecomment-510603746,1,['down'],['downstream']
Availability,"Hey Matt,. First, thanks for the detailed analysis! Second, phewww --- I looked for a while in the indexer and didn't see anything that could have caused lost transcripts, so I'm glad that's not the case. It sounds like you had to go down a bit of a rabbit hole to figure this out. Anyway, I'll take a look at where Salmon might be producing an EOF marker on stderr anyway (I'd like to avoid that behavior if I'm indeed doing that). Thanks again for reporting back on this! I'll close the issue for now since it seems resolved.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303739707:234,down,down,234,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303739707,1,['down'],['down']
Availability,"Hey Rob,. I did manage to test v1.3 this evening. Ran much faster. The same sample that took about 6 hours ran in 45mins. Still not great, but I think it might be intrinsic to some of these samples, also I was running it off my laptop and was running Linux off a; flash drive so not an ideal setup. Either way much more reasonable. Do you want me to attach any logs or anything?. Best,. Ryan . Sent from my iPhone. On Jun 16, 2020, at 10:20 AM, Rob Patro <notifications@github.com> wrote:. ﻿. Hi ; @shalercr,; I agree that if each sample runs as quickly as you see here, it's not a big deal to just re-run them all. Note that, while my avoids ~116 times more (eventually-discarded) alignments than did yours, the difference in the number of discarded; fragments (i.e. fragments that had no mapping) is very small — ~7,000, or 0.023% of the fragments. Thus, despite the huge speed-up, I wouldn't expect many differences in the quantifications. However, I couldn't argue against re-quantifying everything; with the new version just for good measure :). When you have a chance, please do let me know if you see this same performance difference using the pre-compiled (linux) binary. here. Of course, once we finalize this release (soon), we will push to bioconda so we will also have OSX binaries available. However, I just want to make sure this fixes things on your end as well before the release.; —; You are receiving this because you were mentioned.; Reply to this email directly, ; view it on GitHub, or ; unsubscribe.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/537#issuecomment-645119801:1294,avail,available,1294,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537#issuecomment-645119801,1,['avail'],['available']
Availability,"Hey Rob, . Sorry for the delay, here is a link to the quants folder if you guys are still interested. Everything worked well, especially with the additional flag. Any idea on the timeline for the bioconda release?. Best, . Ryan . https://www.dropbox.com/sh/rmy4f6brxx5iczo/AACxbyZFxN0XGcP3YRGjGO-pa?dl=0 . On Jun 18, 2020, at 12:21 AM, Ryan, Shaler <shalercr@mcmaster.ca> wrote:. Thanks for the heads up. I gave it a test this evening and wow, it is wicked fast. I’ll send you those quant files tomorrow when I get a chance, but adding that flag and the new version fixed the problem. . Thank you for all your help. . Best,. Ryan . Sent from my iPhone. On Jun 16, 2020, at 11:36 PM, Rob Patro <notifications@github.com> wrote:. ﻿. P.S. ; @shalercr,; I also note that layering --hitFilterPolicy BOTH on top of the new version cuts down the time by another factor of 2 for me; 2163.65user 12.72system 4:21.57elapsed 832%CPU (0avgtext+0avgdata 1221856maxresident)k. and the number of mappings discarded alignments due to score comes down by another factor of ~6X. It might be worth seeing what you get with that option as well.; —; You are receiving this because you were mentioned.; Reply to this email directly, ; view it on GitHub, or ; unsubscribe.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/537#issuecomment-647273636:830,down,down,830,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537#issuecomment-647273636,2,['down'],['down']
Availability,"Hey Rob. It looks like this was an error in the way I was calling `salmon index`. I've wrapped salmon in a python based pipeline where I manage creation of index files using configuration files. To call `salmon index` I was previously iterating on standard error, capturing your err and logging it after reformatting a bit. It looks like what was happening is:. 1. I opened a subprocess and executed salmon; 2. Salmon worked properly; 3. Salmon stopped producing output on stderr (and sent an EOF marker?) and so my script exited; - killing salmon prematurely; - truncating the salmon index (In a way that salmon found perfectly acceptable during `salmon quant`; - frustrating me quite a bit. I fixed this by doing the right thing and blocking for the process to return an exit code:. ```diff; p = Popen(cmd, stderr=PIPE); - for line in p.stderr:; - line = line.decode(); - if line.endswith('\n'):; - logging.info(line.rstrip()); - else:; - logging.info(line); + _, err = p.communicate(); + logging.info(err); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589:35,error,error,35,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303738589,2,['error'],['error']
Availability,"Hey all,. I'm currently attempting to install Salmon from source on a machine running Ubuntu 16.04. I'm following along with the installation instructions (http://salmon.readthedocs.io/en/latest/building.html#installation); however, I am running into errors when running cmake:. michael@thinkpad:/opt/salmon/salmon-0.8.2/build$ cmake -DFETCH_BOOST=TRUE; CMake Error: The source directory ""/opt/salmon/salmon-0.8.2/build"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI. I tried to fix the issue by moving CMakeLists.rxt from the parent directory into the build directory, but I was met with even more errors, I've attached the created CMakeError.log and CMakeOutput.log file. [CMakeOutput.txt](https://github.com/COMBINE-lab/salmon/files/1109023/CMakeOutput.txt); [CMakeError.txt](https://github.com/COMBINE-lab/salmon/files/1109022/CMakeError.txt). I'm thinking that this may be a simple issue that I've overlooked as I'm new to Linux, and installation using CMake is new to me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/139:251,error,errors,251,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139,3,"['Error', 'error']","['Error', 'errors']"
Availability,"Hey there!; I got the following error when running the command `~/tools/Trinityrnaseq-v2.6.6/util/align_and_estimate_abundance.pl --seqType fq --samples_file gpul_adpul_samples.txt --transcripts Gpul_Adpul_trinity.Trinity.fasta --est_method salmon --trinity_mode --prep_reference`:. _[2020-06-11 01:53:08.809] [jointLog] [warning] NOTE: Read Lib [[ /dev/fd/63, /dev/fd/62]]_. _Detected a potential strand bias > 1% in an unstranded protocol check the file: ADPUL3/lib_format_counts.json for details_. _CMD: /home/curupi/tools/Trinityrnaseq-v2.6.6/util/support_scripts/salmon_trans_to_gene_results.pl ADPUL3/quant.sf /home/curupi/data/pulchella/fastq/trim/Gpul_Adpul_trinity.Trinity.fasta.gene_trans_map > ADPUL3/quant.sf.genes_. strand_mapping_bias: 0.9945332800206606. May anyone help me, please?; Thank you in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/536:32,error,error,32,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/536,1,['error'],['error']
Availability,"Hey, . First, thanks a lot for implementing Alevin for the analysis of scRNA-seq, it is super useful. I would like to open the file ```alevin/quants_tier_mat.gz``` but I am not being able to do it. . When I try to follow the parser instructions [here](https://github.com/k3yavi/vpolo/blob/242b519ea47eae1cce14bb3bafb736a1f3ad7d40/vpolo/alevin/parser.py) I am facing this error when importing sce:; ```; ImportError: cannot import name 'sce' from partially initialized module 'sce' (most likely due to a circular import) (/home/egonie/.local/lib/python3.8/site-packages/sce/__init__.py); ```. I have already imported```vpolo``` which I have installed with: ; ```; pip3 install vpolo; ```. Also I have tested the R library ```fishpond```with the function; ```; fishpond::readEDS(numOfGenes = num.genes, numOfOriginalCells = num.cells, countMatFilename = tier.file, tierImport = T); ```; Which outputs this message:; ```; Error in validObject(x) : ; invalid class ""dgCMatrix"" object: all row indices must be between 0 and nrow-1; ```. Any insight that helps in reading Alevin tiers file would be much appreciated. Thanks in advance and sorry for the inconveniences. Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/596:371,error,error,371,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/596,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hey, I'm having the same kind of problem. I aligned my PE reads against the transcriptome using BWA-mem and then sorted them by coordinates (as a regular procedure). I know Salmon assumes the alignments are not sorted, so I shuffled these bam files, and then run `salmon quant`.; Here are the errors I got in a number of trials:. ### Fresh installation of Salmon; ```; conda create --name salmon -c bioconda salmon; conda activate salmon; ```. ### 1. Shuffling a bam file with `samtools collate`; ```; samtools collate \; -@ 40 \; -o SRR3212847.Aligned.Shuffled.bam \; SRR3212847.Aligned.SortedByCoord.bam. salmon quant \; -t mRNA.fasta \; -p 20 \; -l A \; -a SRR3212847.Aligned.Shuffled.bam \; -o SRR3212847.Aligned.Shuffled ; ```. ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.4.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { mRNA.fasta }; # [ threads ] => { 20 }; # [ libType ] => { A }; # [ alignments ] => { SRR3212847.Aligned.Shuffled.bam }; # [ output ] => { SRR3212847.Aligned.Shuffled }; Logs will be written to SRR3212847.Aligned.Shuffled/logs; [2021-01-08 12:43:44.680] [jointLog] [info] setting maxHashResizeThreads to 20; [2021-01-08 12:43:44.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; [2021-01-08 12:43:44.711] [jointLog] [info] numQuantThreads = 14; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""SRR3212847.Aligned.Shuffled.bam"", fasta = ""mRNA.fasta"" . . .done. processed 0 reads in current roundSegmentation fault (core dumped); ```. ### 2. Shuffling a headless bam file with `samtools collate`; (I think I saw something about the bam's header in another thread dealing with this issue); ```; samtools view \; -b \; -@ 40 \; -o SRR3212847.Aligned.SortedByCoord.NoHeader.bam \",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/582#issuecomment-756727212:293,error,errors,293,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/582#issuecomment-756727212,1,['error'],['errors']
Availability,"Hey,. I'm pretty new to RNA-seq so hope this question is formatted okay! . I've carried out my RNA-seq analysis using STAR into feature counts but wanted to redo the analysis using Salmon as everything I'm reading says its the way forward! I've tried to create a genome index using the following files. ``; wget http://ftp.ensembl.org/pub/release-103/fasta/cricetulus_griseus_picr/cdna/Cricetulus_griseus_picr.CriGri-PICR.cdna.all.fa.gz; wget http://ftp.ensembl.org/pub/release-103/fasta/cricetulus_griseus_picr/dna/Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz; ``; Then I created the decoy file and the combined file them using the following. ; `; grep ""^>"" <(zcat Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz) | cut -d "" "" -f 1 > decoys.txt; cat Cricetulus_griseus_picr.CriGri-PICR.cdna.all.fa.gz Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz > gentrome.fa.gz; `; And finally ran the index using ; `./salmon index -t /data/fcr18ab/Refrence/New_Refrence_Files/gentrome.fa.gz -d /data/fcr18ab/Refrence/New_Refrence_Files/decoys.txt -p 1 -i /fastdata/fcr18ab/Adrian_salmon_index/salmon_index `. The error I get is shown below in the file. It says it can't find any of the decoy sequences in the combined file, but I have searched through them and they are there?. [Super_Low.txt](https://github.com/COMBINE-lab/salmon/files/6254711/Super_Low.txt). Sorry if this is a super simple issue. The cell line is a cancer cell which has not got defined chromosomes. I'm sure its me messing up somewhere but I can't figure out where!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/644:1145,error,error,1145,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/644,1,['error'],['error']
Availability,"Hey,. So I solved the issue over the weekend. My error was caused by my decoy file having my chromosome names with > in front of them meaning it couldn't find them when creating the index.; `; Instead of for example . > grep ""^>"" <(zcat GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt. > sed -i -e 's/>//g' decoys.txt'. `; I used the following instead. ; `. > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt. > sed -i.bak -e 's/>//g' decoys.txt. `; I'm guessing this isn't your issue but just in case it helps! I would check your ""gentrome"" file and look if the decoy and names within your gentrome file match up properly. That's how I realized the > was disrupting my analysis!. Hope this helps. . Best Regards,; Adrian",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/644#issuecomment-815273216:49,error,error,49,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/644#issuecomment-815273216,1,['error'],['error']
Availability,"Heya, there are precompiled binaries available which might be easier to install. https://github.com/COMBINE-lab/salmon/releases/download/v0.9.1/Salmon-0.9.1_linux_x86_64.tar.gz is a link to them. Another option would be to use bioconda:. https://bioconda.github.io/. which is awesome if you are just starting out doing RNA-seq, since you won't have to spend time trying to get all of the tools to compile.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/216#issuecomment-383913243:37,avail,available,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216#issuecomment-383913243,2,"['avail', 'down']","['available', 'download']"
Availability,"Hi , . I am having issues with calculating the differential splicing using SUPPA. I have tried several times but kept getting the same error message, even though all files required are uploaded. . The error message is below:; ```; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; [1] ""Parsing samples...""; [1] ""Loading ./results/iso_tpm_formatted.txt...""; Error: first_condition %in% colnames(input_file) are not all TRUE; Execution halted; [1] ""Parsing samples...""; [1] ""Loading ./results/events.psi...""; Error in file(file, ""rt"") : cannot open the connection; Calls: read.table -> file; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './results/events.psi': No such file or directory; Execution halted; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; CalculateDifferentialSplicingEvents.sh: line 24: -e: command not found; ```. Could you please help me with this ; **Thank you in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/859:135,error,error,135,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/859,4,"['Error', 'error']","['Error', 'error']"
Availability,"Hi ,. I am getting following error while installing salmon:. [ 86%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd30): warning: the use of `tempnam' is dangerous, better use `mkstemp'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::conflicting_options(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x355e): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x35fc): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::option_dependency(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x3911): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/551:29,error,error,29,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551,1,['error'],['error']
Availability,"Hi :). I was already successfully using Salmon before, but unfortunately a storage node of the computing cluster I am using crashed and now I am running into trouble re-installing it. . I downloaded ""salmon-master.zip"", unzipped it and changed into the salmon-master folder. Further, I ran the following command:. > cmake -DCMAKE_INSTALL_PREFIX=/scratch/hpc-prf-ptma2/ptma2001/salmon-master -DFETCH_BOOST=TRUE. The configuration starts, but finally runs into the following error:. > -- Configuring done; > CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; > Please set them or make sure they are set and tested correctly in the CMake files:; > CURL_LIBRARY; > linked by target ""salmon"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > linked by target ""unitTests"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > ; > -- Generating done; > CMake Generate step failed. Build files cannot be regenerated correctly. Would you have an idea how I could circumnavigate that issue?. Thanks a lot in advance for your time and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/729:188,down,downloaded,188,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/729,3,"['Error', 'down', 'error']","['Error', 'downloaded', 'error']"
Availability,"Hi :). `wget` war already installed (to download the sources in the first place, so this one works). ; After `wget`ing the source files again re-`cmake`-ing them again `make install` did work, not sure what happened there in the first place. Also the tests are passing now. I will try to figure out what is different between the clean docker version and my system setup and will report back as soon as I know more.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404536671:40,down,download,40,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404536671,1,['down'],['download']
Availability,"Hi @Alecrim24,. It looks like the list of r1 files are being interpreted as a single, long, filename. Same with the list of r2 files. Any idea why that's the case? They should be a space-separated list (of course, there *are* a ton of them here, but the error clearly suggests they are being interpreted as a single, long, filename). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870#issuecomment-1694754832:254,error,error,254,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870#issuecomment-1694754832,2,['error'],['error']
Availability,"Hi @BW15061999 , ; Yes, this is a known problem for single-cell data uploaded on NCBI. The idea is to download the BAM files of the data (yours should be [here](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR8453531) under data access section) and then use tools like [these](https://github.com/10XGenomics/bamtofastq) to generate paired-end FASTQ files from the BAM file before running alevin. The one downloaded directly from NCBI/EBI doesn't has the CB/UMI components of the paired-reads. Hope it helps !",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/769#issuecomment-1107843131:102,down,download,102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/769#issuecomment-1107843131,2,['down'],"['download', 'downloaded']"
Availability,"Hi @Beatzekatze,. Thanks for reporting this, and I'm glad you figured this out. I can take care of closing the issue, and I will add this tbb-related issue to the list of things I've seen people encounter for future reference. Thanks for your persistence in helping track this down!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404547107:277,down,down,277,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404547107,1,['down'],['down']
Availability,"Hi @Beatzekatze,. The issue with test 1 seems to be from CMake being unable to find the unit test to execute under certain configurations. I'll consider this a bug in the CMake file, and look into fixing it. The failure of tests 2 and 3 is more interesting, as one would definitely not expect this given that the program compiled without error. Does indexing fail only with `--type fmd`, or also with `--type quasi` (or no `--type` as that is the default)? Would it be possible to run the command under gdb and report the stack trace? That would be something like:. ```; $ gdb --args salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; ```. and then, when you encounter the segfault issuing the back-trace `bt` command. This would give insight into where, exactly this is showing up. One issue I've seen before is when the resident installation of Boost is _not_ compiled with `--std=c++11` (or 14 or 17), since this leads to an incompatible ABI between salmon and the Boost library. If that's what's going on, it should be evident from the backtrace. Finally, while I'd want to figure out what's going on with this build from source, it would also be useful to know if you encounter the same behavior when installing via bioconda. Thanks for the detailed report!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014:212,failure,failure,212,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404223014,2,"['error', 'failure']","['error', 'failure']"
Availability,"Hi @BenSamy2020,. Judging from the options available to the indexing command, it seems you're running quite an old version of salmon (before the `-d` flag was even introduced). Specifically, it seems to be a version prior to 1.0 (when the new index was introduced). I'd recommend updating to the latest version of salmon, then you should be able to properly provide the decoys file. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/714#issuecomment-948175672:43,avail,available,43,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/714#issuecomment-948175672,1,['avail'],['available']
Availability,"Hi @Cold7,. Thanks for the report. So, could you provide the full output that you get on the terminal when you run this? Your command line looks fine to me. Since version 1.0.0, `--validateMappings` has become the default behavior and so this flag technically has no effect (it is marked as ""deprecated""). However, the argument parser should _absolutely_ accept it, and it's not clear to me why it might be giving you this error. The full output from the terminal may help to diagnose this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/563#issuecomment-680250718:423,error,error,423,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/563#issuecomment-680250718,2,['error'],['error']
Availability,"Hi @DarwinAwardWinner,. Great error report! Thanks for the details. The `minEQClassWeight` error is actually very interesting (i.e. the fact that it's hitting that code path during the Gibbs sampling). Would you be able to share the data set (or a part of the data set) that reproduces the issue? I'd be happy to take a look and see if I can figure out what's going on.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266893086:30,error,error,30,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266893086,2,['error'],['error']
Availability,"Hi @Davidwei7,. Thank you for the very detailed bug report! So, I have two initial responses / thoughts about your issue. First, you asked if the issue may be related to a memory allocation error wherein the index didn't build successfully. This is quite possible (and the error you see during quantification is consistent with that). The *full* decoy index is substantially larger than the index on just the transcriptome (after all, it is indexing the entire human genome in addition to the transcriptome). One thing you might try to test this hypothesis, other than requesting to build on a node with more RAM, is to compute a hash (e.g. md5 or sha256 sum) on all of the files in the index, and also record their sizes. Then we can build the index on the same version of the files on our end and compare. Second — and perhaps more importantly for your end goal — the main purpose of the decoy-aware index is to improve specificity rather than sensitivity. That is, the decoys are designed to help avoid _spurious_ mapping of reads to an annotated transcript when a better explanation for the read exists elsewhere in the genome. However, the reads that are mapped to decoys are not otherwise used for quantification. Thus, using the decoy aware transcriptome index is unlikely to improve your mapping rate. I agree that your mapping rate does seem rather low. There are a few potential culprits here, and some diagnostics we can look at to see what might be going wrong. First, you can take a look at the file `aux_info/meta_info.json` in the salmon quantification directories to get a few more details about why reads were not mapped. If you share one of those files here I can describe the relevant fields. Also, I have two more rather common things to consider that might affect the mapping rate. One is to add the sequence for the ribosomal RNAs to your transcriptome before indexing and then quantifying. If your mapping rate increases considerably, this is evidence of rather inefficient depl",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/603#issuecomment-744162850:190,error,error,190,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603#issuecomment-744162850,2,['error'],['error']
Availability,"Hi @DobbyLikesPenguins,. You can download a pre-compiled executable for 1.4.0 [here](https://github.com/COMBINE-lab/salmon/releases/download/v1.4.0/salmon-1.4.0_linux_x86_64.tar.gz). You should be able to just decompress it and run the binary in that folder. Let me know if that works.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/483#issuecomment-774550817:33,down,download,33,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/483#issuecomment-774550817,2,['down'],['download']
Availability,"Hi @EPunzi ,. There are a couple of options. First, I see you're using an older release of Salmon. I strongly suggest grabbing [the latest release](https://github.com/COMBINE-lab/salmon/releases/tag/v0.10.2). What you posted here is actually a warning, not an error. What is preventing compilation looks to be a linking error (i.e. your compiler cannot find -lstdc++). If the newest salmon doesn't compile cleanly for the easiest thing to do is to install [through bioconda](https://anaconda.org/bioconda/salmon). Please let me know if either of these are successful, or, if not, what issues you run into. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-396624060:260,error,error,260,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-396624060,2,['error'],['error']
Availability,"Hi @EPunzi,. The trinity-based installation error looks quite cryptic. It suggests what to do to fix it, but it seems like something that shouldn't be happening in the first place. I would be happy to see if I could figure out what's going on with the ""manual"" installation. Could you provide more of the compiler output? What you have included above shows a warning, but I can't see what's causing the actual compiler *error* (what compiler & OS version are you using?). Finally, could you let me know if [this](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) pre-compiled linux-x86-64 binary works for you?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398104378:44,error,error,44,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398104378,2,['error'],['error']
Availability,"Hi @FlorianRNA ! As stated in the [usage docs](https://nf-co.re/rnaseq/3.8.1/usage#quantification-options) for the nf-core/rnaseq pipeline:. ""Since v3.0 of the pipeline, featureCounts is no longer used to perform gene/transcript quantification, however it is still used to generate QC metrics based on [biotype](http://www.ensembl.org/info/genome/genebuild/biotypes.html) information available within GFF/GTF genome annotation files. This decision was made primarily because of the limitations of featureCounts to appropriately quantify gene expression data. Please see [Zhao et al., 2015](https://journals.plos.org/plosone/article?id=10.1371/journal.pone.0141910#pone-0141910-t001) and [Soneson et al., 2015](https://f1000research.com/articles/4-1521/v1)."". This is a common cause of confusion and I have tried to be as explicit about this in the docs. featureCounts is used to quantify features in the annotation by `gene_biotype` and not the actual gene / transcript features themselves. This may explain why you are seeing these discrepancies. However, I am still a little puzzled how you are able to directly compare the counts generated by featureCounts and Salmon (in either mode) because the core features that are being quantified should be different. Where did you get the plant reference genome from? If it's not from Ensembl then it probably isn't worth running the biotype quantification with featureCounts anyway because the GTF annotation files may not contain that information. There are some docs for this [here](https://nf-co.re/rnaseq/3.8.1/usage#prokaryotic-genome-annotations). Hope that helps and if you think we can improve the pipeline in any way please feel free to create an issue on the nf-core/rnaseq repo.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/798#issuecomment-1237865190:384,avail,available,384,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798#issuecomment-1237865190,1,['avail'],['available']
Availability,"Hi @GWW , thanks for showing interest in alevin.; Is it possible to share one of the `fastq` file where you are observing this behavior, just to replicate and debug the source of error ?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395813028:179,error,error,179,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395813028,1,['error'],['error']
Availability,"Hi @GWW ,. Ok, we figured out where the threads are coming from. Deep inside the concurrent hash map we are using, there is a [function that grows the hash map](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1558). This function uses a function called [`parallel_exec`](https://github.com/COMBINE-lab/salmon/blob/master/include/cuckoohash_map.hh#L1751) to move the items from the old table to the new one. Here, they greedily use as many threads as available for that process. We can't see this behavior on our end by monitoring top/htop, because the hash table doubling happens so fast it's below the monitoring resolution. There are a couple ways to address this, one of which is hacking inside the hashmap library to modify this behavior. However, it would be nice if there was a way to do this without modifying the code (e.g. by limiting the number of threads the process was allowed to spawn concurrently from outside of the process itself). We are looking to see if this is doable using e.g. cgroups or some such.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018:479,avail,available,479,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395890018,1,['avail'],['available']
Availability,"Hi @Hoohm , ; Thanks for the quick reply and the explanation . I personally am not very well versed in the working of `SCRBseq`. But, as you explained, knowing a set of whitelist CB beforehand is always a plus for the downstream working of the pipeline. Currently, Alevin merge all the observed CB which are 1-edit distance from a known whitelist CB towards the whitelist. The underlying assumption being that the sequencing error (although with low probability) can change CB sequence and we can correct for that. I wonder, is this right to do for your experiment ?. re: >Is there an option for max distance allowed between BC or UMI?; Sorry, but I don't completely understand this question. When you say distance allowed between CB and UMI, do you mean there is a sequence between CB and UMI ( like in in-drop seq)? If that's the case then we might have to tweak a bit in alevin command line flags again. But I suspect what you meant by above statement is -- max distance allowed between CB among themselves. If that's the question then unfortunately we currently allow correcting for only 1-edit distance for both CB and UMI. But if you think more correction is needed by your protocol then we can put this on the feature request list and discuss about working on this on the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402543751:218,down,downstream,218,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/247#issuecomment-402543751,2,"['down', 'error']","['downstream', 'error']"
Availability,"Hi @Jensen416,. Thank you for reporting this. Certain versions of the GCC compiler are not capable of performing full program link time optimization (`lto`) for this codebase. This is a known issue — and there are other programs that exhibit this same behavior. This is something that GCC must fix upstream — an internal compiler error is something that really shouldn't happen. Luckily, the solution is simple; just don't use whole program inter procedural optimization. Try using this `cmake` invocation (after clearing out your build directory):. ```; cmake -DNO_IPO=TRUE -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/; ```. The `-DNO_IPO` tells `cmake` to invoke the compiler without inter procedural optimization (i.e. `lto`). Let me know if this works for you. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/778#issuecomment-1134776478:330,error,error,330,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778#issuecomment-1134776478,2,['error'],['error']
Availability,"Hi @Kisekya,. So BWA-MEM and BWA-MEM2 are somewhat of a problem to begin with because they perform local alignment, which isn't really ideal for aligning RNA-seq reads to the transcriptome. If you really wish to use an aligner, we've had good experiences with Bowtie2 (when used in the appropriate end-to-end alignment mode) and with STAR (using the alignments projected to the transcriptome with `--quantMode TranscriptomeSAM` flag to output the alignments in transcriptomic coordinates as required by salmon). Apart from the local alignment issue, sorting the BAM file is _absolutely_ a problem for salmon, and is likely why you get the strange library type. When run in alignment mode, just like RSEM, salmon requires the alignments for the the mates of a read pair to appear subsequently in the file, and for all alignments for a given read to appear contiguously in the file. This allows parsing the reads without having to require potentially unbounded memory (holding the record for one end of a fragment in memory while waiting for the record for the other end). In fact, given that you've sorted the alignments here, I'm surprised you're not getting the ""suspicious pair"" warnings in your logs. The ISR library with 40% mapping is likely a more reliable number. The obvious question here is why might the mapping rate be this low? There are a few reasons you might see something like this. One, for example, is poor ribosomal depletion, paired with not having all of the rRNA sequences in your index. In this case, you have many fewer reads coming from the rest of the transcriptome and you get depleted mapping rates like this. . Could you say a bit more about the experimental setup? Is this in a well-annotated organism like human / mouse etc.? Is this a polyA selection or ribosomal depletion prep? Anything else that might be relevant to sample quality?. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/676#issuecomment-873519594:1254,reliab,reliable,1254,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/676#issuecomment-873519594,1,['reliab'],['reliable']
Availability,"Hi @Klud112,. The command itself looks OK. However, given the formatting, I wonder if the line breaks are intentional. The error you get is what I might imagine if the command is actually spread over multiple lines and therefore not properly parsed. When there is a new line in your command above, is that just for formatting, or actually present in the command you issue on the command line? If the latter, you need to escape it with `\` i.e. ```. salmon quant -t References/Ensembl/Homo_sapiens.GRCh37.cdna.all.fa \; -l A \; -a bam_files/RNA_007_7669.Aligned.out.sort.com.bam \; -o salmon_quant_trial; ```. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/764#issuecomment-1073155343:123,error,error,123,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/764#issuecomment-1073155343,1,['error'],['error']
Availability,"Hi @Liripo,. Thanks for reporting this issue. I'm also pinging @Gaura and @jeremymsimon here as our resident split-seq experts. One other note though, is that we'd generally recommend using `alevin-fry`. Here, it seems you're utilizing a _splici_ index but then using `alevin` rather than `alevin-fry` for quantification (given there is no `--sketch` or `--rad` flag in your command line invocation). Dealing with the structure of the _splici_ index is an alevin-fry specific capability. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/774#issuecomment-1126077334:55,ping,pinging,55,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/774#issuecomment-1126077334,1,['ping'],['pinging']
Availability,"Hi @Munfred ,. Apologies for the delayed response.; Thanks for your very important question. We are aware of the problem and are extensively working on improving the downstream processing of the alevin output. Unfortunately, in current form there is no other direct way of loading alevin output matrix. We are thinking of alternative options like using `loompy` but it's a work in progress. We will definitely inform here once we have a simpler working version.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/354#issuecomment-490091075:166,down,downstream,166,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/354#issuecomment-490091075,2,['down'],['downstream']
Availability,"Hi @Munfred ,; Is it 10x single-cell data ? Also in 10x is it using v2 Chemistry?; The way you are running alevin is specifically for 10x v2 data. If it's v1 you can find how to use alevin in v1 mode [here](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/). ; If it's V2 and you still get this error, then it means either the `Fastq` were not made properly or the reads / CB+UMI pair has to be filtered out. Currently `Alevin` fails if it observe a `Fastq` sequence of length less than 26 (16 CB + 10 UMI), if you think your dataset is from a real sample and follows the 10x `mkfastq` procedure, then we can work on handling these cases internally in Alevin, or another workaround would be to just filter out these set of reads from the Fastq using some external script.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-397824948:312,error,error,312,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237#issuecomment-397824948,1,['error'],['error']
Availability,"Hi @Ni-Ar ,. Thanks for reporting this. I checked the salmon index from the files [here](http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/salmon_partial_sa_index?tag=default) build on gencode reference but with k 28 salmon complaints with the following error:. > [2021-12-29 17:04:14.809] [puff::index::jointLog] [info] ntHll estimated 144189454 distinct k-mers, setting filter size to 2^32; > PARSE ERROR: Argument: -k (--kvalue); > Value '28' does not meet constraint: value of K must be odd. Is it possible to double check the salmon version and the files which you are using are with the right path ? Because salmon should definitely not be able to go through the process of indexing with k 28. If the error persists can you please share the files so that we can double check them on our end ?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731#issuecomment-1002804831:301,error,error,301,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731#issuecomment-1002804831,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Hi @Ni-Ar,. We're happy to look into this. I'm pinging @k3yavi here to take a look as well. In the meantime, I'm actually surprised indexing worked when you passed `-k 28`. In general, the code should stop and refuse if k is not odd, since we need a k-mer to be odd to be able to distinguish between a k-mer and its reverse complement.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731#issuecomment-1002286946:47,ping,pinging,47,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731#issuecomment-1002286946,1,['ping'],['pinging']
Availability,"Hi @OnlyHigh,. Indeed, the _default_ behavior of salmon is to de-duplicate transcripts (to avoid that behavior and allow salmon to index duplicate transcripts, you need to pass the `--keepDuplicates` flag to the indexer). When it does this, it will log the duplicate transcripts in the index. If you look in the directory containing the salmon index, you will find a file called `duplicate_clusters.tsv`. This is a 2 column TSV file with a row for each transcript that was collapsed during indexing. The first column says which retained transcript was identical to the collapsed transcript. We do not write down the specific sequence of these transcripts, but with the original fasta file on which the index was built, you can easily extract this. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/299#issuecomment-428612513:607,down,down,607,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/299#issuecomment-428612513,1,['down'],['down']
Availability,"Hi @PeteHaitch ,; Thanks for your interest in *Alevin*.; Although in current Alevin we have concentrated mainly on learning more about Droplet based 3'-tagged single cell protocols, especially 10x; we are very much interested in extending it towards other protocols like CEL-seq.; However, there are couple of challenges/difference which should be considered before incorporating it into the Alevin pipeline. Currently Alevin relies on the fact that the droplet based protocols use PCR amplification of the library and the UMI deduplication phase of Alevin assumes an exponential model, I am not sure how true is this with CEL-seq? Another issue is that CEL-seq is a Fluidigm based system while the current application for Alevin is for microfluidics based. In general we have observed that the 10x cell isolation step is pretty robust in reporting the Cellular Barcodes(CB) and although we have a probabilisitic model to handle the CB based uncertainty but the ambiguous case like that are very less frequent, (although not true for Drop-Seq). Having said that, we might have to do some analysis to actually figure out the right model for Barcode correction in Fluidigm based system. Also, please do let us know of your experience in using the solution proposed in #247 . Looking forward to hearing back from you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-414162302:829,robust,robust,829,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/269#issuecomment-414162302,2,['robust'],['robust']
Availability,"Hi @RK489,. It seems it cannot find the library it wants. The easiest solution is to install salmon on OS X [using bioconda](https://anaconda.org/bioconda/salmon). Otherwise, you can also try to explicitly make sure that path is being searched via e.g.:. `DYLD_FALLBACK_LIBRARY_PATH=/Users/rishika/Downloads/Salmon-0.8.2_macOX_10.12/lib ~/Downloads/Salmon-0.8.2_macOX_10.12/bin/salmon -h`. Please let me know if either of these solutions works for you. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/172#issuecomment-343558684:298,Down,Downloads,298,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172#issuecomment-343558684,2,['Down'],['Downloads']
Availability,"Hi @Rhinogradentia,. This error occurs when there is a binary mismatch between the library used to compile salmon versus that used to run it. Specifically, this occurs when the boost library is _not_ compiled with a modern ABI (Application Binary Interface) — when boost was not compiled in a way compatible with C++11/14/17/20. Are you using the version installed via bioconda, or the pre-compiled binary from github, or have you compiled this yourself? You can [use the `LD_LIBRARY_PATH`](https://stackoverflow.com/questions/13428910/how-to-set-the-environmental-variable-ld-library-path-in-linux) to set things so that the appropriate version of the library is discovered first. You want the version of boost that is found first (the one appearing earliest in the `LD_LIBRARY_PATH`) to be matched to the one with which salmon was compiled.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/565#issuecomment-696812977:26,error,error,26,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565#issuecomment-696812977,1,['error'],['error']
Availability,"Hi @RoebideBruijn , ; if the build directory is empty and inside the salmon folder, can you check if the run ; `cmake -DFETCH_BOOST=TRUE ..` gives you error or not. . NB: make sure `..` is at the end",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449067149:151,error,error,151,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449067149,1,['error'],['error']
Availability,"Hi @RoebideBruijn,. It looks as though you downloaded the file that contains the pre-compiled release (https://github.com/COMBINE-lab/salmon/releases/download/v0.12.0/salmon-0.12.0_linux_x86_64.tar.gz), rather than the source code (https://github.com/COMBINE-lab/salmon/archive/v0.12.0.tar.gz). In that case, you need not (and can't) compile the already compiled binary. There is an executable named `salmon` in the `bin` subdirectory that you should be able to run directly (assuming you are in Linux).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718276:43,down,downloaded,43,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449718276,4,['down'],"['download', 'downloaded']"
Availability,"Hi @SSaleem94,. As the message suggests, your command is missing the required `--output` argument. Of course, it seems your command includes `-o`. The rest of the errors suggest that the command line is not being properly parsed. It looks like the part after the first line break is not being interpreted as a continuation of the same line. I think this is because the line extension character in the shell is not `/`, but is `\`. Maybe try the following:; ; ```; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 \; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done; ```. **Also**, as is suggested by the `salmon` message itself, you may want to consider upgrading to the latest version of `salmon`. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/854#issuecomment-1599169394:163,error,errors,163,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854#issuecomment-1599169394,3,"['echo', 'error']","['echo', 'errors']"
Availability,"Hi @SeBaBInf,. Thanks for reporting this. I'm pinging @k3yavi for his thoughts here. Two quick thoughts though -- the first is that the abstract for this paper mentions 5' tagged end sequencing, thus it might be necessary to swap the reads so that the biological and technical reads are in the expected order. Second, it's likely also worth seeing if and how the data look different if you process with alevin-fry rather than alevin. I'll let @k3yavi provide more detailed guidance here. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/763#issuecomment-1073004001:46,ping,pinging,46,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/763#issuecomment-1073004001,2,['ping'],['pinging']
Availability,"Hi @ShenTTT,. First, thank you for the detailed analysis (and for doing the work of looking up this issue in past posts). If the (trimmed) reads are of high quality and there aren't signs of contamination, my initial hunch would be that there are a considerable number of reads coming from outside of the annotated transcriptome (that is, I would suspect `2` to be the most likely culprit here). I don't think this is because of DNA `contamination` necessarily, but rather because of novel transcripts that don't appear in your annotation. Obviously, salmon can only quantify what it knows about in terms of annotated transcripts. If you are concerned about these mapping rates, one thing you might try is to do transcript assembly in these samples (using e.g. scallop or StringTie2) and then re-quantify using salmon under the expanded annotation. Also, while you are losing ~5M reads to low mapping scores (suggesting they are not a good match for the underlying annotated transcripts), this doesn't seem to be what is driving your overall mapping rate (i.e. this is only ~15% of fragments, so the rest of the difference between 85% and 56% comes from reads that don't fall into this category). Finally, while you may be able to ""recover"" more reads by lowering the mapping threshold `--minScoreFraction` from its default value of 0.65, that default is actually pretty liberal (especially for trimmed reads). So this would be letting in quite low-quality alignments. Note that, if you have unannotated isoforms that share sequence (exons) with annotated isoforms, this could partly describe what you are seeing with some of these reads, where part of the read aligns but part does not (because it comes from an unannotated splice form).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/533#issuecomment-638929976:1232,recover,recover,1232,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/533#issuecomment-638929976,1,['recover'],['recover']
Availability,"Hi @Tima-Ze,. This should not cause any trouble with downstream analysis. The indexing procedure is simply informing you that these transcripts (about which you are being warned) are shorter than the seed length used for alignment. This means that it simply won't be possible for fragments to align to these transcripts, and so they will always have a 0 abundance in the resulting `quant.sf` files. This isn't a problem, as these transcripts are too short to be measured via RNA-seq anyway. The indexing messages just let you know this in advance. You can safely ignore these warnings for your downstream analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751366278:53,down,downstream,53,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-751366278,4,['down'],['downstream']
Availability,"Hi @Tima-Ze,. Yes, salmon can be used to quantify these reads, but the results will depend (somewhat) on the `--fldMean` and `--fldSD` flags that are used. It's important to note that this is not a unique characteristic of salmon, and any transcript-level quantification tool using a probabilistic model (e.g. RSEM, eXpress, BitSeq, etc.) have the same requirement. That is, the fragment length distribution should be known so that _effective_ transcript lengths can be estimated, which have an effect on fragment assignment probabilities. If the wrong fragment length distribution is specified, then the _effective_ transcript lengths will be off and this can affect the assignment of some fragments. This is only a requirement with single-end reads, since with paired-end reads the fragment length distribution is learned from the data. Further, the inference procedure is somewhat robust to these choices (small changes in fld mean and sd don't generally lead to drastically different results). If you have access to the BioAnalyzer results for the sequencing run, those can give information about the fragment length distribution (even in a single end experiment). If not, you can proceed with the default values. Even if they don't exactly match the true distribution in the single-end sample, at least the same values will be applied in all samples and so, ideally, most results of misspecification will wash out in subsequent differential analysis. . Finally, it's worth noting that the same restriction holds in both alignment-based and mapping-based modes. This is because in neither mode do single-end fragments provide sufficient information to estimate the fragment length distribution from the data. We only know where one end of a fragment mapped and cannot infer where the other end would be. This is not an alignment versus mapping (versus selective-alignment) issue, but rather is fundamental to having only observed one side of the entire fragment generated during fragmentation and ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750920243:884,robust,robust,884,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750920243,2,['robust'],['robust']
Availability,"Hi @alexg9010,. This is absolutely a cryptic error message. I'm *guessing* it may have something to do with the de-serialization of the index. Would you be able to provide the file on which you build the index? I can see if I can reproduce this error locally. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376005422:45,error,error,45,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376005422,2,['error'],['error']
Availability,"Hi @alexg9010,. This is great; thanks for providing all of the output details. I just did quantification on your specific reads (and I tried it using the latest Salmon from bioconda on my Mac, so it was different from the environment I used before). Again, I was able to quantify successfully. However, I see that your files contain a core dump which should let me at least find out where the error is popping up in your run. Could you provide system details so I know how I should be analyzing the core file (specifically, is this run on OSX or Linux? Was this a pre-compiled binary or did you compile it? Was it compiled with gcc or clang (and which version)?). Thanks again for your help in trying to reproduce this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377266261:393,error,error,393,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377266261,1,['error'],['error']
Availability,"Hi @alexmascension ,. Thanks for raising this.; Quick question thought, the issue header say : ; > Out of Range error for txp to gene Map. But I don't see that error in the log, did you skip copying that ?; Also, I should have raised this in the previous issue too but it should not matter at least in this error case, however, you should use `-lISR` instead of `-lU` with alevin as the reads are expected to come from the reverse strand. It seems a lot of reads `91.1983%` are supposedly getting thrown away, weren't you using the whitelisted CB instead of ""knee"" thresholding ?; If possible, can you share a small set of reads, like these `even some of them fail just when starting the analysis of the cells`, on which I can replicate the issue? it'd help resolve the issue much faster.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386#issuecomment-504952404:112,error,error,112,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386#issuecomment-504952404,3,['error'],['error']
Availability,"Hi @alexvpickering ,. With the latest release we have moved the pipeline failure with `txp2gene` file before parsing the CB .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/336#issuecomment-498040517:73,failure,failure,73,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/336#issuecomment-498040517,1,['failure'],['failure']
Availability,"Hi @amaer,. The warning suggests that the gff parser cannot even find a transcript with the given name (in the example you provided `ENST00000619185.1`). Does such a transcript exist? Can you grep for it. The string must match exactly (version number and all). The gff-based parser to do the transcript to gene mapping is quite picky, as gff & gtf files are often quite ill-formed. My top suggestion would be to do transcript -> gene abundance aggregation using [tximport](https://bioconductor.org/packages/release/bioc/html/tximport.html). The other option is to provide Salmon with a TSV mapping the transcripts to genes, as this eliminates all of the parsing problems (at the cost of pawning them off on the user, who must parse the questionable gtf file). However, tximport is the recommended strategy, since it can perform average gene length normalization across multiple samples (rather than just per-sample), which is useful for downstream DE.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/198#issuecomment-365950366:937,down,downstream,937,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/198#issuecomment-365950366,1,['down'],['downstream']
Availability,"Hi @annajbott ,. Thanks for your question.; It's an expected behavior. The idea is to dump some low confidence CB as well for certain kind of downstream processing. You'd see a file `whitelist.txt` as well in the output alevin folder which should contain whitelisted CB names (4340 in your case). You might have to filter those matrix out after loading the full matrix to get cells only passes the whitelisting filter. Please checkout [tximport](https://github.com/mikelove/tximport) to import the matrix in R, it's very efficient to load. In case you need some stats regarding the resource usage check [EDS](https://github.com/COMBINE-lab/EDS).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/428#issuecomment-530430735:142,down,downstream,142,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/428#issuecomment-530430735,1,['down'],['downstream']
Availability,"Hi @antonkulaga,. This is not a particularly useful error message (_sorry for that_), but this is a result of passing both un-paired (`-r`) and paired-end (`-1,-2`) reads to salmon together. This is actually not supported, as the single-end and paired-end models are actually a bit different. I will fix the error checking so that a useful message is printed out if these options are passed in together. Can you let me know if the program runs correctly if you use just the paired-end reads?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-346899958:52,error,error,52,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-346899958,2,['error'],['error']
Availability,"Hi @astrdhr,. Ok, so the difference between the version you get on the command line, versus the version you get when you actually attempt to run your script to process your data, is certainly a point of concern. In general, the behavior you are seeing during runtime seems like it may be an artifact of not having a compatible index. Is it possible for you to do a ""test run"" outside of the Nextflow script? Since you are getting v1.10.2 locally, and this version should work without segmentation fault, that would at least let us narrow the issue down to different versions of salmon being invoked at different stages of the pipeline. At that point, it may be a Nextflow / nf-core issue, but those folks are *great* and will be able to help in a jiffy!. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881#issuecomment-1766508995:497,fault,fault,497,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881#issuecomment-1766508995,2,"['down', 'fault']","['down', 'fault']"
Availability,"Hi @astrdhr,. Thank you for the bug report. I was wondering if you can run . ```; salmon --version; ```. under the invocation that is failing. I bring this up because your output starts with:. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ```. and this should not happen if you are using the most recent version (there was a segfault related bugfix directly related to what you are seeing in v1.10). It's possible that if you are running salmon using some sort of script or job submission system, that the version of salmon that is available in your `PATH` isn't the same as the most recent one you have installed. P.S. I'll also note that v0.14 and v1.10 don't have compatible indices, which can also cause a segfault. You should make sure that the index was generated with the version of salmon with which you are attempting to quantify. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881#issuecomment-1758110567:536,avail,available,536,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881#issuecomment-1758110567,1,['avail'],['available']
Availability,"Hi @bioinfo17 ,; If I understand it right you did the following, correct me I am wrong:; (1) Made one reference file. concat(`Genome.fa`,`txptome.fa`); (2) You map reads set say `R` to the above reference and extracted a subset of reads `R1`(both-pair mapped) and `R2` (single-end mapped).; (3)You mapped again `R1`,`R2` to txptome.fa using HISAT and generated bam to filter-out mapping of the reads only mapped to transcriptome? (I am not sure about this part). Either way the error seems to be arising from non-matching flags of the read-pair entries in the `bam` file. Can you try **not** including your `singleton` set in the last-step of filtering, just to confirm if the set `R2` is really the problem?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/140#issuecomment-313545771:478,error,error,478,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140#issuecomment-313545771,1,['error'],['error']
Availability,"Hi @bioinfo17, can you please elaborate? I am seeing the same error using STAR-aligned BAMs (to transcriptome) sorted with samtools 1.9 (default arguments, which the docs say means they are sorted as follows: 'Sort alignments by leftmost coordinates'). I am going to try sorting the bams by name (samtools argument -n) and re-trying salmon",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/140#issuecomment-452081412:62,error,error,62,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140#issuecomment-452081412,1,['error'],['error']
Availability,"Hi @bounlu,. Thank you for the detailed report. The mapping rate certainly does seem very low. To answer your specific questions first:; 1) I'm not sure --- let's try tor find out; 2) I don't think so (if they are part of your index, they should be aligned against); 3) If there are many transcripts / targets you expect to be sequenced but which aren't present in this set, that can affect the mapping rate, but not likely to take it down to 6%. Here are the things I'd investigate --- roughly in order: . 1) In addition to the fraction of reads STAR mapped (which you report above), what fraction of the reads are assigned to features by featureCounts? In some cases, when there is a failure of rRNA depletion of polyA selection, you can end up with an experiment where most of the sequenced RNA comes from rRNA not present in the reference transcriptome. In this case, STAR will be able to align the reads to the genome, but you won't see these reads mapping to annotated features (and you also won't see them showing up in your transcript level quantifications). So, it may be worth to take a look at the count of reads assigned to the feature set of genes by featureCounts. 2) Above, it looks like a considerable number of fragments were discarded due to no alignment reaching the required alignment score (`11,448,458` fragments discarded because of this). Have you tried to adapter / quality trim the data? Does this have any effect on the mapping rate?. 3) If the above don't reveal any clues, I'd be happy to try to take a look at the data if you can share it. I'd be quite surprised if STAR is aligning a lot of reads *to transcriptome features* that are being missed by salmon. Nonetheless, if you pass the proper flags to STAR (including `--quantMode TranscriptomeSAM`), then you can use the SAM/BAM file generated by STAR to perform quantification with salmon (i.e. use STAR's alignments to do _transcript-level_ quantification). I'd be happy to help dig further on any of these, so pleas",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/661#issuecomment-846251054:435,down,down,435,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/661#issuecomment-846251054,2,"['down', 'failure']","['down', 'failure']"
Availability,"Hi @bsipos,. This is caused primarily by salmon's desire to apply an error model (by default) to the CIGAR strings. For secondary alignments, as you note, minmap2 doesn't write the read string, and so when salmon is trying to score the alignments under the error model, it can't find the relevant characters in the read. In general, it's not clear to me if one would actually want to apply the error model (designed primarily for short reads) when quantifying long reads (this is something we are currently testing in the lab). For the time being, I'd probably recommend disabling the error model when quantifying alignments from long reads (`--noErrorModel`). In that case, the errors should hopefully go away. Please let me know, and we'll be sure to keep you updated on best practices for long reads as we figure things out.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665:69,error,error,69,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420295665,10,['error'],"['error', 'errors']"
Availability,"Hi @callumparr,. Thank you for the detailed report. I think this is primarily an error in documentation. The `gencode` flag is intended to be used only with ""mapping-based"" mode and when creating the index. It ensures that the index (and hence the resulting quantifications) contain the shortened names for gencode transcripts. In alignment-based mode, the behavior of the flag would have to be slightly different. It would have to re-normalize not only the names of the reference sequences in the fasta file, but it would also have to re-normalize the names in the BAM header so that they match. Specifically, the requirement is that the names of the sequences in the input fasta file are a 1-1 match with the names in the BAM header so that transcripts can be matched up properly with their sequences for training and applying the error model. However, if your BAM file already contains the stripped transcript names (i.e. if the BAM file header has the names without everything past the initial `|`), then I believe you can use the following command to have salmon do the same to the fasta file on the fly, so that the names match. ```{bash}; salmon-1.5.1_linux_x86_64/bin/salmon quant --ont -p 4 -t <(awk '{ if ($0 ~ ""^>"") { split($0,a,""|""); print a[1] } else { print $0 } }' Genome_files/gencode.vM24.transcripts.fa) -l U -a Documents/Day2_03_DRS_pass.bam -o Documents/counts/Day2_03_DRS_pass; ```. If the BAM file contains the ""full"" transcript name however, I think the current options are either to let salmon use the full transcript name from the fasta file, or to modify the GTF when running with minimap2, so that the BAM file itself contains the shortened names. Finally, I'd like to mention that the way you _intended_ to use the `--gencode` flag in alignment mode actually makes _a lot_ of sense, and I think it would be a very nice feature. Basically, the idea would be to apply stripping everything after the first `|` from *both* the fasta header and the BAM header, and using the red",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/671#issuecomment-860792782:81,error,error,81,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/671#issuecomment-860792782,2,['error'],['error']
Availability,"Hi @cihanerkut,. First, thanks for reporting this, and going through the trouble to give the `strace` information. Second, salmon won't auto-update anyway. That would be quite slick, but there's not a good and reliable way to do that with natively-compiled programs that I know of. However, the most surprising thing is that you are finding the call to the version check ip to be hanging for any significant amount of time. The timeout should be pretty quick. How long does it hang when you do `salmon index --help`? I'll look into it on our end as well.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/486#issuecomment-592203836:210,reliab,reliable,210,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/486#issuecomment-592203836,1,['reliab'],['reliable']
Availability,"Hi @cwarden45 ,. So `--whitelist` flag is not intended to consume the 737k list of CB you are providing, that's why the error. Thanks for the issue in the doc, I updated it. Idea behind the flag is to externally provide a list of high confidence barcodes potentially identified by different tools like Cellranger, and quantify *only* those barcodes. One use case would be to take the output file `barcodes.tsv` of the cellranger and provide it to flag and quantify only those barcodes. Briefly, alevin doesn't use the 737k list of barcodes at all, it identifies barcodes empirically. If you'd like to quantify using the 737k list of barcodes, checkout the next generation of alevin tool, called [alevin-fry](https://github.com/COMBINE-lab/alevin-fry).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-877325227:120,error,error,120,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-877325227,1,['error'],['error']
Availability,"Hi @danphillips28,. Oh ok! Now I see what's going on. We really should be more stringent about catching the issue here. . The problem is that using k > 32 is not permitted in the current implementation. This is because we use a 64-bit machine word to encode k-mers, and you can only fit up to 32 nucleotides in a word. In reality, anything > 31 is not allowed, since the k-mer should be odd so that the orientation can be inferred from the canonical (lexicographically smaller) version. There is nothing fundamentally problematic about using a larger k, it's just that it would require some modifications throughout the codebase we've not yet made. Further, we've not really found cases where having such large k really help. Specifically, the larger k, the fewer errors you need to render a read unmappable (if there is an error in every k-mer, you can't map the read). On the other hand, selective alignment will do a good job of filtering out poor matches where there is insufficient similarity between the read and reference. Thus, we set a default value of k=31. You can go lower (with any odd value), but it's not currently possible to go higher. I hope this clears things up, and thanks for bringing this to our attention. I think the indexer should bail with an error in this case, until (and unless) this feature is supported. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/632#issuecomment-779418628:764,error,errors,764,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/632#issuecomment-779418628,6,['error'],"['error', 'errors']"
Availability,"Hi @davidaknowles,. Assuming that the total size of all cell barcodes doesn't exceed 32 nucleotides, then it should be possible to simply specify them using a custom geometry string. Of course for that to work, we need to know where the 4th barcode is located, so that we can generate the correct custom geometry string to extract it. I'll ping @DongzeHE and @k3yavi here to see if either of them are familiar with this chemistry already. As always, I'd also suggest running this through `alevin-fry` (or using the `simpleaf` wrapper). While we continue to support `alevin`, `alevin-fry` (largely interfaced by `simpleaf`) is where most of our development effort is currently going, and hopefully we can make the user experience there as smooth and easy as possible!. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/874#issuecomment-1732428996:340,ping,ping,340,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/874#issuecomment-1732428996,2,['ping'],['ping']
Availability,"Hi @dbrg77 ,; Thanks for raising the issue and the very interesting future direction.; A quick question regarding the error, can you please check if the length of _all_ the externally given whitelisted CB are of length 16 ?. Extracting the CB/UMI from bcl or generalizing the input format for PE is indeed in our todo list. Specially with the introduction of combinatorial barcoding of single cells, as you said, the information might be in multiple files and has to be extracted right. It's definitely in our priority list and one would hope to support this in future. However, if your use case is different from above then we should definitely chat about that in little more details.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420619144:118,error,error,118,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420619144,1,['error'],['error']
Availability,Hi @dougbarrows --- just wanted to inform you that v0.12.0 has been released and is now also available via bioconda for both linux and osx. The osx segfault issue has been resolved.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-444971786:93,avail,available,93,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-444971786,1,['avail'],['available']
Availability,"Hi @dritoshi ,. As per your request I've added the support for Quartz-seq2 data in the alevin framework with https://github.com/COMBINE-lab/salmon/commit/f6905b1d1dc6cf6bc4597927ad3be637ba615c9a and should be available with next salmon release. Currently the develop branch has to be compile from source to use the following command line argument.; ![image](https://user-images.githubusercontent.com/8772521/63282768-8df73600-c27d-11e9-832d-f4a1232f17f6.png). Currently I just have on flag i.e. quartzseq2 which assumes 15 length CB and 8 length UMI. Unfortunately adding multiple versioned is gonna be little complicated as I might have to discuss with the alevin team and that might take some time. As you can check through the new code through the commit (linked above) adding just the Rule of new protocol is not enough and we might have to add some helper code with each new protocol which increases the redundancy in the code. Currently we are in the process of figuring out a better way to handle new protocols.; Having said that it should not stop users from using alevin with previous version of quartzseq2, you can use the following command line triplet as `--end 5 --barcodeLength 14 --umiLength 8` along with you other alevin flag and it's gonna behave just like `QuartzSeq2v31` you specified above. If possible, It'd be great if you can share some of the results you get while comparing Quartz-seq2 pipeline with alevin. Hope this helps !",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/416#issuecomment-522658541:209,avail,available,209,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/416#issuecomment-522658541,1,['avail'],['available']
Availability,"Hi @ebecht ,; Can you please try running Alevin again with the latest release? We just released [v0.12.0](https://github.com/COMBINE-lab/salmon/releases/tag/v0.12.0).; It should be available on bioconda too.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-444755421:181,avail,available,181,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-444755421,1,['avail'],['available']
Availability,Hi @egreen2 --- just wanted to inform you that v0.12.0 has been released and is now also available via bioconda for both linux and osx. The osx segfault issue has been resolved.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-444970458:89,avail,available,89,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-444970458,1,['avail'],['available']
Availability,"Hi @esraagithub,. Thanks for the bug report. Can you tell me how the specific version of salmon you are using was installed (e.g. via source, downloaded from the ""releases page"", or installed via bioconda)? Would it be possible to share the contigs that cause this error?. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/795#issuecomment-1222353941:142,down,downloaded,142,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/795#issuecomment-1222353941,2,"['down', 'error']","['downloaded', 'error']"
Availability,"Hi @evofish,. Unless you have a particular reason to build from source, it is much easier to install salmon via bioconda, or to simply download our pre-compiled executable from the releases page. Nonetheless, your error stems from not having the `curl` program installed, which is used by the build system to automatically fetch all dependencies.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/331#issuecomment-447689917:135,down,download,135,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331#issuecomment-447689917,4,"['down', 'error']","['download', 'error']"
Availability,"Hi @francicco ,. I've dug further, and in addition to these problems with the input file, there was also a specific bug in salmon's processing of the alignments for the error model. Specifically, it was triggered when an alignment ended with a soft-clip of the reference. I have now fixed this issue in the develop branch, and, after some more testing, will push it to a new release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394859031:169,error,error,169,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394859031,1,['error'],['error']
Availability,"Hi @francicco ,. Thanks for sharing the data. I'm able to re-create the problem and am trying to debug it now. The reason you see this behavior in 0.10.1 but not in 0.8.1 is because in 0.10.1 the error model is enabled by default, while it is not in 0.8.1. If you run the newest salmon with `--noErrorModel` (the default in 0.8.1), your sample runs to completion. However, using the error model helps (which is why I made it the default), so I'm trying to debug what's happening there. I'll keep you posted. One more point worth mentioning. I noticed you are passing a coordinate sorted BAM file. For quantification with salmon, you really should not be passing a coordinate sorted BAM. This is because Salmon expects the alignments to appear in a random order, which is important for how the streaming stochastic variational algorithm learns the auxiliary parameters. Sorting by coordinates biases the models towards the isoforms that appear earliest in the BAM file.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394764686:196,error,error,196,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394764686,4,['error'],['error']
Availability,"Hi @gambardella,. Thank you for the detailed bug report. I agree that, though the issue seems to be arising from the input, a seg fault should not happen in any case. Judging from the place in the log from which this is arising, it seems to be happening during the TwoPaCo construction of the compacted de Bruijn graph. We'll dig into this and see if we can figure out how to handle this in a better way.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/521#issuecomment-627508722:130,fault,fault,130,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/521#issuecomment-627508722,1,['fault'],['fault']
Availability,"Hi @gambardella,. Thank you for the detailed issue report. The warnings are noisy, but not themselves problematic (there's a reasonable discussion to be had if we should make the process less noisy by default, and have the user ask for verbosity to get all of the warnings etc.). However, the last line is an error, and this is the cause of the problem. It seems to suggest that `chr20`, which appeared in the `gentrome.fa.gz` file did not have its name appear in `decoys.txt`, and that it occurred after some records that _were_ marked as decoys. I'm assuming that `chr20` _should_ appear as a decoy here. Can you `grep` for `chr20` in the `decoys.txt` file and see if it shows up? If not, the question would be why it's not placed there by your first command. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/572#issuecomment-708550538:309,error,error,309,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/572#issuecomment-708550538,1,['error'],['error']
Availability,"Hi @gambardella,. Thanks for the effort in tracking this down further. So, I tried running locally with more threads than we have physically, but the bug wasn't immediately triggered, so I'm guessing there is some stochasticity there. One thing that would be really helpful (given our lack of success in reproducing locally yet) is to find out if the issue is being caused by the compacted De Bruijn graph construction library, or prior to that. One way to do that is to ask the indexer to keep around the ""fixed fasta"", and then to see if that differs from we're producing locally on our machine. If you run the following command:. ```; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode --keepFixedFasta; ```. then there should be a file `salmon_index/ref_k31_fixed.fa` that is generated in the index directory. This is a fixed fasta file (removing ambiguous nucleotides, trimming polyA tails, removing sequences that are too short (<= k), etc.). In my runs, I get the same md5sum for this file, regardless of the number of threads:. ```; $ md5sum salmon_index/ref_k31_fixed.fa; ceaf3a96bfc2a65e70b6f3094d02491c salmon_index/ref_k31_fixed.fa; ```. could you see if you get something different (on a passing run, on a failing run, or on both)? If so, I might be able to replicate the bug by starting from your fixed fasta file, rather than from the original fasta files. Regarding your other question :. > Would you now advise to drop the ""-k 31""?. This should make no difference to the indexing procedure. While `-k` is an important parameter, 31 is the default value. Therefore, if you run the command without providing `-k` explicitly, it will use k=31. However, some folks like to keep it in the command line anyway, as a form of self documentation (though it is also recorded in the index), and that seems fine to me.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/521#issuecomment-628067346:57,down,down,57,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/521#issuecomment-628067346,1,['down'],['down']
Availability,"Hi @gianfilippo ,; Thanks for forwarding the logs.; It does look like Alevin knee selection is over-shooting and allowing only ~250 cells as a whitelist.; Although not very frequent but we do have observed this behavior with Alevin knee selection in couple of other experiments and are working on more robust thresholding. I am closing this issue regarding the barcode frequency but will open a new one regarding the aggressive thresholding and would tag you in too, in case you wan't to track.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-418813606:302,robust,robust,302,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284#issuecomment-418813606,1,['robust'],['robust']
Availability,"Hi @gnaisha,. Thank you for the detailed error report. Would it be possible to provide the BAM file that generated this behavior, or the commands used to generate this BAM file? That way we can try to reproduce and diagnose the issue.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/605#issuecomment-749596440:41,error,error,41,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/605#issuecomment-749596440,1,['error'],['error']
Availability,"Hi @grantcramer,. I was able to successfully index and map against the fasta file you link above (on linux). I was also able to index and map against the index on OSX, using the salmon from bioconda (v 0.9.1). So, I'm not _yet_ able to reproduce this. It seems the file you uploaded for your pre-built index is no longer available, so I couldn't try that out. I'd be happy to give it a try if you can put it up on dropbox or some such. Otherwise, I wonder if there could be some sort of binary compatibility issue. Did you build the index on the same machine you're quantifying on? The OSX I tested on is 10.13.1. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375509050:321,avail,available,321,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375509050,1,['avail'],['available']
Availability,"Hi @grantcramer,. Is this the same index you used before? Were there any issues with indexing? Could you provide a link to the transcriptome you are mapping against? We could see if we can reproduce the error on our end. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-374368312:203,error,error,203,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-374368312,1,['error'],['error']
Availability,"Hi @gresteban,. Thanks for reporting this. Did this happen when running with the automatic library type detection or with `-l SF`? It is _not_ intended, but knowing what code path was executed will help me narrow down the source of the bug.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/82#issuecomment-243602381:213,down,down,213,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/82#issuecomment-243602381,1,['down'],['down']
Availability,"Hi @gringer,. Yes, we can add a section for this in the docs. It will replace the old way for specifying geometry soon, as its just easier and more flexible. We talk about it in the 1.4.0 release notes. I copy the relevant info below (@k3yavi pulled for the 1-based indexing and won out ... this time):. generic barcode / umi / read geometry syntax : Alevin learned to support a generic syntax to specify the read sequence that should be used for barcodes, UMIs and the read sequence. The syntax allows one to specify how the pattern corresponding to the barcode, UMI, and read sequence should be pieced together, and the syntax is meant to be intuitive and general. For example, one can specify the 10Xv2 geometry in the following manner using the generic syntax:. --read-geometry 2[1-end] --bc-geometry 1[1-16] --umi-geometry 1[17-26]. This specifies that the ""sequence"" read (the biological sequence to be aligned) comes from read 2, and it spans from the first index 1 (this syntax used 1-based indexing) until the end of the read. Likewise, the barcode derives from read 1 and occupies positions 1-16, and the UMI comes from read 1 and occupies positions 17-26. The syntax can specify multiple ranges, and they will simply be concatenated together to produce the string. For example, one could specify --bc-geometry 1[1-8,16-23] to designate that the barcode should be taken from the substring in positions 1-8 of read 1 followed by the substring in positions 16-23 of read 1. It is even possible to have the string pieced together across both reads, but that functionality is only available if you are running with --rad or --sketch and preparing a RAD file for alevin-fry. If you are running classic alevin, the barcode must reside on a single read. The robust parsing of the flexible geometry syntax is made possible by the cpp-peglib project.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/445#issuecomment-777884823:1587,avail,available,1587,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/445#issuecomment-777884823,4,"['avail', 'robust']","['available', 'robust']"
Availability,"Hi @guidohooiveld, . Regarding your questions:. (1) The motivation behind asking users to use Bioconda to install the binary is to limit the number of variables we may encounter when someone is reporting a bug --- i.e. if there are fewer distribution channels there is less maintenance overhead. Nonetheless, as you can see, I've had to make the binary available anyway, because it was the only way some people could easily get the program. Therefore, I think I'll start attaching binaries to releases again. (2) Yes, though this functionality is not part of Salmon itself. I *highly* recommend the [MultiQC](http://multiqc.info/) tool. MultiQC has a salmon module, which will parse all of the salmon log files in an experiment directory and produce a report. This report will contain the mapping percentages for all of the samples extracted from the salmon logs (and will color them nicely). It will also produce other QC information from the salmon runs. We are currently working on an improved multi-QC module, which will also provide summaries for things like GC / seq bias by analyzing the models that salmon learns, but this module isn't yet complete. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271:274,mainten,maintenance,274,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405442271,4,"['avail', 'mainten']","['available', 'maintenance']"
Availability,"Hi @habilzare ,; Thanks a lot for using alevin and sharing a subset of the dataset which can reproduce the error effortlessly, it really saves us a lot of time !. If I may ask a quick question, how did we get the file `cell_barcode_seq.txt` for whitelist ?; It looks like the file contains ~50k whitelisted CB, and only a very tiny fraction of them were actually found in the read/seq `Fastq` file. I agree that we can work on putting a more informative error so that user can resolve it by themselves.; The current assumption for alevin for whitelist CB is -- if provided with external whitelist then user is sure of the presence of the CB w/ _good enough_ frequency.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406460153:107,error,error,107,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406460153,2,['error'],['error']
Availability,"Hi @habilzare ,; re: importing binary format: [this](https://combine-lab.github.io/alevin-tutorial/2018/output-format/) tutorial might help more of how to read the binary output. Specifically, if you are familiar with python then [this](https://github.com/k3yavi/vpolo/blob/master/vpolo/alevin/parser.py#L8) function can be used for importing the binary. However, I reckon that alevin hasn't successfully completed. It looks like one of the whitelisted CB ended up having no read at all after deduplicating. We usually assume it should not happen since a whitelisted CB should have at least some count after deduplicating UMIs, which in your case can happen since the mapping rate looks like is surprisingly low `0.469385%` (is this expected ?). . `Skipped Barcodes are from High Confidence Region` is actually an error, again we need more informative and elegant exit from the pipeline once Alevin fails.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406648841:814,error,error,814,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406648841,1,['error'],['error']
Availability,"Hi @hsi88,. It looks like there was an allocation error while reading the input. This exception terminated the program (which resulted in the FastxParser destructor error happening simultaneously in a different thread of execution). Can you see if you can run this command successfully without including the decoy sequence and, if so, attempt index construction on a machine with more RAM?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/689#issuecomment-883541895:50,error,error,50,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/689#issuecomment-883541895,2,['error'],['error']
Availability,"Hi @izaakm,. This segfault is unlikely related to the issue here, since that happened in ""mapping mode"" (salmon performing mapping itself), and yours is happening in alignment-based mode (you're feeding SAM files to salmon). Does it fail to occur when you provide _either_ of the SAM files to salmon? That is, does it run to completion with both `data/processed/bwa-mem/SRR10571655.sam` and `data/processed/bwa-mem/SRR10571656.sam` individually? Also, what if you combine them via a pipe (i.e. something like):. ```; ./src/salmon-latest_linux_x86_64/bin/salmon quant --threads $(nproc) --libType U -t GRCh38_latest_rna.fa -a <(cat data/processed/bwa-mem/SRR10571655.sam <(samtools view data/processed/bwa-mem/SRR10571656.sam)) -o _tmp/ ; ```. the double redirect is just to make sure the header isn't included in the second sam file. Also, is the reference that you are passing to the `-t` option identical to the one with which bwa-mem was run? If the problem persists, we might need the sam/bam files to track it down further, since I imagine it may be data-dependent. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707338358:1015,down,down,1015,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-707338358,1,['down'],['down']
Availability,"Hi @jamesrhowe ,; We are still working on the release, but there seems to be a bioconda wide PR outage and not sure how much time it's gonna take for them to resolve it.; In the meantime you can use [this](https://drive.google.com/file/d/143RwsFpVYghr_DFv_4vuvbGmSlt3zlcW/view?usp=sharing) binary which should resolve your problem. We'd let you know once salmon is ready to be installed from bioconda.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443554193:96,outage,outage,96,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443554193,1,['outage'],['outage']
Availability,"Hi @jashapiro,. So there are definitely a few things going on here. The first is that you correctly diagnosed the missing cmd_info.json information when `alevin` is run in RAD mode. That was simply an oversight, and there is no reason that file shouldn't have been written. Second, there is also useful information that belongs in `meta_info.json` in the `aux_info` directory (like the SHA hash of the reference sequences); that was also missing but has now been added.; ; In addition to salmon's `alevin` command, each step of `alevin-fry` also writes some useful metadata when it executes. For example, there is a json file written by the `generate-permit-list` step, one written by the `collate` step, and one written by the `quant` step. We've never run into the problem of the output of `alevin-fry` overwriting the output of `alevin` because we use a directory structure where the output quantifications reside in a separate directory from the input RAD file. However, I can now see that if you're writing the quants in the same place as the input, then there will be a conflict in the file names, and the existing files will be overwritten with the new ones. I agree that both tools output useful information. I'm a *bit* ambivalent about assuming the salmon-generated files exist, and merging them into one output file, as I think there might be cases where those files aren't present and `alevin-fry` should still run properly since it doesn't require them to perform it's processing. One option would be to rename the `alevin-fry` output files to prefix/postfix them so they don't collide with the salmon files even if they live in the same directory. Then, one could (now or later) write a small command to merge the relevant json files into a unified output if that would be more convenient downstream. Let me know your thoughts. Thanks!; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/688#issuecomment-883497669:1803,down,downstream,1803,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/688#issuecomment-883497669,2,['down'],['downstream']
Availability,"Hi @jashapiro,. Thanks for the report! I am curious if this is one issue or two. Specifically, are you saying that with 1.5.1 you get *no* `cmd_info.json`, while with 1.4.0 you got the stripped-down one, or that you get the stripped down version in both but you expect a full `json` file. I agree that, in any case, having some more info in the `cmd_info.json` output in RAD mode would be useful. It follows a separate code path, so this is likely a matter of making sure the function to write the json file is invoked at the right point. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/688#issuecomment-882817058:194,down,down,194,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/688#issuecomment-882817058,2,['down'],['down']
Availability,"Hi @jasonvrogers,. First of all thank you so much for sharing this thorough analysis with us, it was very clear and helpful for understanding the details of the problem you are referring to. Secondly, I apologize for the long time it took me to get back at you. I would like you to know that we have been and are still working on possible solutions for addressing this problem, and here I would like to share some updates with you. . About the success cases, it was nice to know that the current model of Salmon with length correction works pretty well in recovering the right estimates for those ""easier"" cases where one transcript is fully contained in another one. Turning off the length correction, tells the Salmon model not to consider the effective length of each transcript for computing the conditional probabilities of originating a fragment from a transcript. So, for the RNA-seq data there is no reason to turn off this term of the model, and we highly recommend not to use that flag for the bulk RNA-seq abundance estimation with Salmon. Looking more carefully at the 2nd case you have posted as the failure case, it is interesting to see that there is a very nice visual evidence on the super transcript that the long transcript might not be expressed at all. I am referring to the zero coverage regions on the Super Transcript between the regions corresponding to the smaller transcripts, e. g., between POF1 and EMC1. So, we tried a solution that inspects the coverage profile of all transcripts and calculates the probability of observing a zero coverage region on each transcript. If this probability is too low, this would be counted as an evidence for a transcript not being expressed at all. This approach seems to be working fine on this example that you have shared here. however, one problem was that there were considerable number of reads in the sample that were uniquely mapping only to the Super Transcript and turning of the expression of that transcript would result in t",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/514#issuecomment-666512703:556,recover,recovering,556,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514#issuecomment-666512703,2,['recover'],['recovering']
Availability,"Hi @jblachly,. Thanks for pointing this out. The underlying parser we use should also support gff (&gff3), so I should probably just expand the extension set. I'll ping back here once the relevant changes have been made on the develop branch. I'll also note that, generally, we now recommend [tximport](https://bioconductor.org/packages/release/bioc/html/tximport.html) as the way to aggregate transcript-level abundance estimates to the gene level, since it provides some nice multi-sample functionality and also allows the user to choose from a few different ways in which the aggregation can be performed. If you're doing any of your downstream analysis in R, it's worth a look. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/114#issuecomment-272709627:164,ping,ping,164,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/114#issuecomment-272709627,2,"['down', 'ping']","['downstream', 'ping']"
Availability,"Hi @jeremymsimon — @Gaura is going to take a look at unfiltered permit listing and will share those results here later. Regarding frameshift errors, I think that's certainly out of scope for the alevin -> fry phase, but that type of thing *could* be in scope for `splitp`. Basically, my logic / reasoning is this: I'd like to avoid further complicating the already immense salmon/alevin codebase with special implementations handling problems outside of their core function (e.g. mapping reads to the reference efficiently and quantifying UMIs/barcode). Since most protocols (and the most common) have quite simple barcode geometry, it makes sense for this code to live there. I'm fully supportive of enabling support for more complex barcode geometries and preprocessing requirements if there are folks whom it would help, but it feels like that essential complexity belongs upstream of alevin / fry, so that by the time the reads get to alevin, it can assume a straightforward geometry. So TLDR : I think we'd be willing to investigate what is required to address potential frameshift errors, and how much of a difference that makes, but I think that analysis and eventual implementation (if we decide it's worth it), belongs in `splitp`.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-988030837:141,error,errors,141,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-988030837,4,['error'],['errors']
Availability,"Hi @jeremymsimon, . Somehow, the notification for this in my e-mail got classified as SPAM. Anyway, thank you for the detailed description! I'm going to ping @Gaura here. @Gaura — this is the alternative protocol I was discussing with you yesterday. As you can see, the main issue here is the ""noisy"" barcodes. Let me know what you think would be necessary to add support for this, and I'm happy to schedule a technical discussion if you want to discuss some options.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-921879305:153,ping,ping,153,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-921879305,1,['ping'],['ping']
Availability,"Hi @jeremymsimon,. A few quick thoughts on this.; ; > -Is quantification via alevin-fry (rather than alevin itself) mandatory here? I ask since your run seems successful whereas my full alevin run had a very poor BC detection and mapping rate.; ; I don't think we've been able to successfully obtain the same concordance with alevin yet (as opposed to alevin-fry). There is more sophisticated _internal_ barcode logic going on there, and we may need to pull @k3yavi in to see what is happening outside of the RAD -> fry pipeline.; ; > -I see you specified -l A - can you comment on what the detected/correct library type was here?; ; Unlike `alevin`, when you run with in `--rad` or `--sketch` mode, the library type isn't really relevant. All mappings are passed through to the rad file. Subsequently, in `alevin-fry` there is a `-d` (direction) flag that is used to filter mappings that don't concord with the expected orientation. I'm not sure what @Gaura used in the run above — the default is to keep reads from either orientation.; ; > -I assume all of this will also work in conjunction with --expectCells or --keepCBFraction if those parameters were needed? Your ~7k cells detected is very close to the published number post-filtering, but no similar filtering has been done here yet. My guess is that the proportion of cells that pass these filters will be higher for alevin, but we may still be under-estimating the number of real cells by a little bit here.; ; According to the commands listed, @Gaura used `alevin-fry`'s built-in knee-like filtering. This tries to use a knee on the cumulative read count histogram to determine a good cutoff for ""reliable"" cells versus poor quality cells. Alternatively, one can provide an external permit list with `-u` (unfiltered permit list) to quantify all cells that match any known barcode. This will generally result in *many* more quantified cells, which you will then want to filter post-quantification.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-988011633:1659,reliab,reliable,1659,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-988011633,1,['reliab'],['reliable']
Availability,"Hi @jeremymsimon,. I've discussed the support for SPLiT-seq/ParseBio with @Gaura in some depth. Honestly, I think the cleanest solution right now is just to have a more streamlined (and streaming) way to match / replace the random hexamers upstream of alevin-fry. By my understanding, if we can simply replace barcode 1 appropriately (as your Perl script currently does), everything should work downstream in alevin/alevin-fry.; ; To that end, I've thrown together a small rust program based on your Perl script. Currently that lives [here](https://github.com/COMBINE-lab/splitp). It reads the same basic parameters as the Perl script, and writes its output to stdout so that it can be used with named pipes. For example, something like:; ; ```; <normal salmon command> -1 read_file_1.fq -2 <(splitp --read-file read_file_2.fq --bc-map bcSharing_example.txt --start 79 --end 86 --one-hamming); ```. which will transform the second fastq file and stream the transformed reads out which can then be read by alevin-fry. One important thing to note is that while *alevin* requires the input reads to be a real file (i.e. you can't stream reads in because it does 2 passes), if you are mapping these reads for processing with *alevin-fry* you can use the process substitution trick above. As you hinted, this program works considerably faster than the Perl script. For example, for the first 10,000,000 reads in `SRR6750042`, the Perl script took 2m 48s to transform the reads and `splitp` took ~6s (if the output wasn't being written to a file on disk it took <4s). This should generally be fast enough to not be a speed bottleneck. So, perhaps the next step is to try to help you walk through this approach with a test dataset (and ideally using alevin-fry) to see if things are turning out as expected?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-961598108:395,down,downstream,395,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-961598108,2,['down'],['downstream']
Availability,"Hi @jeremymsimon,. So I'm trying to think about what issues _could_ be reasonably dealt with here. . 1) If the length of the sequence in the BAM header and the sequence provided in the FASTA file are different, this seems like a very difficult error to recover from since records can then contain alignments to bases about which we don't know. 2) If the same transcript appears multiple times in the input BAM header, but with different lengths, this also seems a difficult situation to allow. Exact duplicates are one thing, but I'm not sure if sequences ever appear with the same name but different lengths. If so, I'm thinking this would be a hard error. So, I think at least one situation we could reasonably deal with is that the input FASTA file contains multiple entries with the same name (and same length / sequence). In this case, we could retain only one of them, and document / log the fact that multiple identical entries were present in the input. Of course, there would still be an issue if we had a mismatch as with your example STAR input, where STAR concatenated all 3 occurences of an identical transcript. Are there other cases you can think of where it would make sense to somehow deal with the issue in salmon and continue with processing (perhaps with some extra warnings / log info)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/282#issuecomment-418412904:244,error,error,244,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/282#issuecomment-418412904,3,"['error', 'recover']","['error', 'recover']"
Availability,"Hi @jjv5,. This error should be fixed. The binary works for me without error (or that strange jemalloc warning) on OS X 10.12.4. The relevant library should be statically linked in, so I doubt it's a path problem. You could also try the [conda build](https://anaconda.org/bioconda/salmon) to see if that works for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294845429:16,error,error,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294845429,2,['error'],['error']
Availability,"Hi @jmaggiore,. The problem is that an outdated index is being mapped against. Specifically, that is the nature of this exception:. ```; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; ```. To fix this, you should re-index your reference using a recent version of salmon (ideally, v1.5.1 which you are using to quantify). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685#issuecomment-881557370:150,Error,Error,150,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685#issuecomment-881557370,1,['Error'],['Error']
Availability,"Hi @jorvis,. @sjackman ran into a [similar (but different) issue](https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193963209), and the root cause seems to be GCC5.3. My best guess is that there is some symbol munging that is incompatible between things compiled with GCC 4.x and GCC 5.x. The newest version of GCC seems to break quite a bit of software. I haven't installed it and tried to build with it yet, but I'll add it to my list of things to investigate. For the time being, would it be possible to build with GCC 4.X (where X > = 8.2), or to use the [pre-compiled binary](https://github.com/COMBINE-lab/salmon/releases/download/v0.6.0/SalmonBeta-0.6.0_DebianSqueeze.tar.gz)?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201302732:639,down,download,639,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201302732,1,['down'],['download']
Availability,"Hi @joshstolz,. Is there a reason you want to restrict the possible mapping to this set of 1800 transcripts? In general, mapping to a small subset of the reference is not ideal, because alignment works based on asking if the ""best hit"" for a read is good enough, so its easy to come up with scenarios where the is a read that matches some transcript very well, and another transcript ""alright"" --- if the transcript it matches very well is in the reference, then it will map there, otherwise it will likely map to the transcript where the match is just ""alright"". TLDR; the set of references included can affect the mappings. That being said, if there is a good technical reason you have for only including a subset of transcripts, that's easy to do. You just build your index on only those transcripts. Salmon treats the reference sequences you feed to it as the ""transcriptome"" and will map to that. Also, you could map to the full transcriptome and just extract the rows for these targets from the `quant.sf` files at the end. Of course, depending on what you want to do downstream, you'll have to be aware of how these 1800 transcripts fit into the bigger picture and how the reads that mapped to the other transcripts affect your belief about things like the effective library size etc.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/681#issuecomment-873025258:1074,down,downstream,1074,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/681#issuecomment-873025258,1,['down'],['downstream']
Availability,"Hi @junaruga , Although the above attached binary has been mistakenly named as for linux it should work with MacOsx Sierra. The current recommended way of installing salmon is through bioconda or docker, but unfortunately currently bioconda system is down for MacOsx releases. You can try using docker if the above binary doesn't works for you. Let us know how it goes.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-410478640:251,down,down,251,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260#issuecomment-410478640,1,['down'],['down']
Availability,"Hi @juugii , it looks like you are using 10x data and you might need `--chromium` flag to tell alevin the type of datasets. Although it should have given error message much before starting reading the CB. I'll look into this but can you please confirm if you have given the flag to alevin or not?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410321746:154,error,error,154,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410321746,1,['error'],['error']
Availability,"Hi @k3yavi , ; You are absolutely correct, that the tsv file only had one column, I fixed it above. . But the txdf was my backup... I tried your bioawk script, but I keep getting this error; `bioawk: illegal field $(), name ""group""` . [alevin.log](https://github.com/COMBINE-lab/salmon/files/2639709/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2639710/salmon_quant.log)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443718326:184,error,error,184,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326#issuecomment-443718326,1,['error'],['error']
Availability,"Hi @k3yavi , thank you for the reply. Yes, you are right, it seems the problem is indeed in the whitelist `known_cb.txt`. However, I cannot seem to find out what exactly is going on with the file. When I wrote a python script to check the length of each cell barcode in `known_cb.txt`, _all_ of them are 16 bp long. This is the python script:. ```; $ cat print_length.py; with open('known_cb.txt') as fh:; for i in fh:; print(len(i)); ```. since each line has 16 bp barcode and a `\n` character, it outputs 17, which is expected. However, when I used `awk` to check the length, I expected `awk` to output 16, but it actually output 17:. ```; $ awk '{print length($0);}' known_cb.txt | head -2; 17; 17; ```. There might be some hidden characters that I missed. Any idea what's going?. Now, I have cleaned the `known_cb.txt`, and `alevin` runs without problem. For combinatorial indexing, good to known that it will be supported in future. I guess depending on assays, it needs to be a bit more flexible than the current options. The current options have only `--chromium` and `--dropseq` available. However, there are a few different combinatorial indexing assays. For `sci-RNA-seq`, the cell barcodes are within `I1.fastq`, `I2.fastq` and `R1.fastq`. Only `R2.fastq` is useful for gene quantification. For `sci-ATAC-seq`, the cell barcodes (this is just my educational guess) are within `I1.fastq` and `I2.fastq`, and both `R1.fastq` and `R2.fastq` contain useful information from the genome. For other plate-based method, there will be well barcodes and plate barcodes, which could be located in any of those 4 fastq files depends on the design. The cell barcodes will be a combination of well barcodes and plate barcodes. Thank you very much for the help. Regards,; Xi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420807198:1087,avail,available,1087,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/291#issuecomment-420807198,1,['avail'],['available']
Availability,"Hi @k3yavi ,. I've corrected the CB+UMI FASTQ and the error persists. . ```; [2019-06-06 19:23:29.734] [alevinLog] [info] Found all transcripts to gene mappings; [2019-06-06 19:23:29.749] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-06 19:24:55.681] [alevinLog] [info] Done barcode density calculation.; [2019-06-06 19:24:55.681] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-06 19:24:55.688] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-06 19:24:55.688] [alevinLog] [info] Done True Barcode Sampling; [2019-06-06 19:24:55.690] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-06 19:24:55.692] [alevinLog] [info] Done populating Z matrix; [2019-06-06 19:24:55.692] [alevinLog] [info] Done indexing Barcodes; [2019-06-06 19:24:55.692] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-06 19:24:55.692] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-06 19:24:55.716] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-06 19:24:55.716] [alevinLog] [info] parsing read library format; [2019-06-06 19:24:55.716] [jointLog] [info] There is 1 library.; [2019-06-06 19:24:55.889] [jointLog] [info] Loading Quasi index; [2019-06-06 19:24:55.889] [jointLog] [info] Loading 32-bit quasi index; [2019-06-06 19:24:55.890] [stderrLog] [info] Loading Suffix Array ; [2019-06-06 19:24:56.791] [stderrLog] [info] Loading Transcript Info ; [2019-06-06 19:24:57.025] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-06 19:24:57.061] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-06 19:24:57.084] [stderrLog] [info] Computing transcript lengths; [2019-06-06 19:24:57.084] [stderrLog] [info] Waiting to finish loading hash; [2019-06-06 19:25:06.552] [jointLog] [info] done; [2019-06-06 19:25:06.552] [jointLog] [info] Index contained 136,011 targets; [2019-06-06 19:25:06.55",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369#issuecomment-499592790:54,error,error,54,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369#issuecomment-499592790,1,['error'],['error']
Availability,"Hi @k3yavi ,; At first glance, the idea seems good. What does the `--end` parameter do?. I tried your idea but it gives me another error. `salmon alevin -l U -1 c1a.fastq c2a.fastq ... -2 c1b.fastq c2b.fastq ... -i salmon_index -p 10 -o levin_results --end 5 --barcodeLength 16 --umiLength 6 --chromium --tgMap dict_transcript_gene.tsv --expectCells 50`. ```; Exception : [Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid.]; salmon alevin was invoked improperly.; For usage information, try salmon alevin --help; Exiting.; [2019-06-05 08:20:37.952] [alevinLog] [info] Processing barcodes files (if Present) ; ```. The FASTQ file of the reads is not paired-end, maybe there's the error? Here is a sample of the CB+UMI FASTQ, and of the reads FASTQ. CB+UMI FASTQ; ```; @ERS2271611.246_AGCCTC 246 length=51; GGTGAACGAGGCGAAGAGCCTC; +ERS2271611.246_AGCCTC 246 length=51; AAAAAAAAAAAAAAAAAAAAAAAAAA; @ERS2271611.247_GTGCTA 247 length=51; GGTGAACGAGGCGAAGGTGCTA; +ERS2271611.247_GTGCTA 247 length=51; AAAAAAAAAAAAAAAAAAAAAAAAAA; @ERS2271611.248_AATAAA 248 length=51; GGTGAACGAGGCGAAGAATAAA; ```. Reads FASTQ; ```; @ERS2271611.246_AGCCTC 246 length=51; CAAATTCACATTATATGGACAGAATATAGAAAAGTCCTTTCC; +; FFFFIIIIIIIIIIIFIFFIIIIIIIIIIIFIBFFFBFFIII; @ERS2271611.247_GTGCTA 247 length=51; TTTGAATGCCTGGAAGGTTACTTACCCTCTTTAGTTACTCCT; +; FFFFIIIIIIIIIFFIIFFIIIIIIIIIIIIIIIIIIIIIII; @ERS2271611.248_AATAAA 248 length=51; GTTGAATCATACCTTTCGATTACATCTTTTAAGCAAACCCTT; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369#issuecomment-498955579:131,error,error,131,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369#issuecomment-498955579,3,"['Error', 'error']","['Error', 'error']"
Availability,"Hi @k3yavi ,; Using the 5238 barcodes that are specific to this experiment, and also removing the quotes from the transcript to gene map file [bcNotFound-2018-07-19b.tar.gz](https://github.com/COMBINE-lab/salmon/files/2214018/bcNotFound-2018-07-19b.tar.gz), this time Alevin finished with no error. However, I did not get a count matrix in csv format. Also, the quants_mat_cols.txt file is missing, and I do not know how to read the binary quants.mat file. `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist barcode_seq_5K.txt --dumpCsvCounts`; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; [2018-07-19 22:53:27.709] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { barcode_seq_5K.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 22:53:27.714] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 22:55:37.299] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 22:55:37.299] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07-19 22:55:37.303] [alevinLog] [info] Done importing white-list Barcodes; [2018-07-19 22:55:37.303] [alevinLog] [info] Total 5238 white-listed Barcodes; [2018-07-1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243:292,error,error,292,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-406597243,3,"['avail', 'error']","['available', 'error']"
Availability,"Hi @k3yavi - apologies, just coming back to this with an eye to updating our pipelines, just wanted to clarify. . Just to recap, right now I'm running the previous Alevin version with `--dumpFeatures --noQuant`, filtering raw_cb_frequency.txt by barcode frequency (e.g. 10), and then using the whitelist in a further Alevin run, like `--whitelist whitelist.txt --forceCells (whitelist size)`. I then get a relaxed matrix I can filter in downstream analysis. Am I right in thinking that with the new version I can now just have a single run and say `--keepFraction 1 --freqThreshold 10`? Is the freqThreshold applied before the keepFraction?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-516399536:437,down,downstream,437,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-516399536,1,['down'],['downstream']
Availability,"Hi @k3yavi . Can you elaborate on 3 and 4 with command line usage examples? I feel you misunderstood my Question 3. My question 3 was ""how to do `salmon index` if I do not have a genome"" with salmon/v1.0. If my understanding is right (based on your response 4 - about dropping quasi mapping support with salmon/v1.0), I believe **_you cannot use salmon/v1.0 to do something like this below_** for my Question 3 (salmon index in absence of genome) ;; `salmon index -t txome_fasta -i txome_index`. Other questions:. 1. I don't believe bioconda has salmon/v1.0 - I checked on 01-Nov-2019 (around 7am Eastern); 2. Is salmon v0.15.0 available via bioconda - when I tried (same time as above) updating salmon via bioconda channel on my conda env it still pointed me to 0.14.1 . Thanks in advance to both @k3yavi and @rob-p",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/442#issuecomment-549189494:628,avail,available,628,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/442#issuecomment-549189494,1,['avail'],['available']
Availability,"Hi @k3yavi . Thank you for linking me to your script to parse the bfh file from alevin. I think I could figure out the structure of the bfh file. I will write it down underneath with the help of an example. Could you confirm it is correct? . Everything up and until the listing of the barcodes is clear. I will start with a line from after the barcodes. ; ""7	90480	90486	107507	107990	108641	109149	112915	1	1	105	1	TGGGATTT	1"". I think that each such line corresponds to an equivalence class (EC). The first entry on each row is the number of transcripts in the EC. This is followed by the transcripts (more correctly, indices you can use to obtain the transcripts). Then you have the number of reads with in the EC, followed by the number of barcodes (~cells). For each barcode, you have an index that can be used to retrieve the identity of the barcode, followed by the number of UMIs within that barcode, the sequence of the UMI and lastly the number of reads associated with that UMI. . My goal is create a expression matrix where the ECs are the rows and the columns are the cells. If I want the UMI counts, do I need to count the number of reads associated with each UMI or just the number of UMIs per cell? . Thanks in advance.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/728#issuecomment-1028272923:162,down,down,162,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/728#issuecomment-1028272923,2,['down'],['down']
Availability,"Hi @k3yavi @rob-p . Will there be precomputed SAF gentromes made available as tarballs for select genomes (human, mouse, rat, arabidopsis, soybean, maize) etc . A few months ago, they were available (for SA gentromes) here: https://github.com/COMBINE-lab/salmon. Thanks,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/444:65,avail,available,65,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/444,2,['avail'],['available']
Availability,"Hi @k3yavi Is there any way that an option can be added to ignore missing transcripts? I had to modify the gencode v30 transcriptome fasta and GTF to include fusion transcripts... but this seems to have created an issue:; ```; ERROR: Txp to Gene Map not found for 9 transcripts. Exiting; ```; I don't think ignoring 9 transcripts should be a big deal. Is there any way to accomplish that? Or any other workaround? . Thank you,; Henry. Edit: Figured out a work around!; -- For anyone who is having a similar issue--. I figured out that the issue was a set of transcripts in my fasta file that were not in the trp2gene file. . To find the conflicts in my annotations, I had to grep the headers from my fasta file and direct the output into a new .txt file. I read the new file into R as a ""|"" delimited table and used gsub() to remove the "">"" from the first column. Then I used vim to search and delete all the lines of the fasta file which were missing from the trp2gene file using `?searchText` --> `ma` (marks the start of the delete) --> `d'a` (deletes from `ma` to the current cursor location).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/336#issuecomment-576069305:227,ERROR,ERROR,227,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/336#issuecomment-576069305,1,['ERROR'],['ERROR']
Availability,"Hi @k3yavi and @rob-p,. Thanks for the detailed info and pointing me to the links on your github page. One suggestion regarding semantics ([from the README page](https://github.com/COMBINE-lab/SalmonTools/blob/master/README.md)) - you might want to rethink if stating 80% homology is the correct way. I know it is prevalent in literature, etc but from a bioinformatics/computational biology expertise standpoint ""80% homology etc"" is wrong. I think you are meaning similarity/identity here when you refer to homology as written here on the README page:.; ```; to align transcriptome to an exon masked genome, with 80% homology and extracts the mapped genomic interval.; ```; Check these out: ; https://www.ncbi.nlm.nih.gov/books/NBK20255/#A23; https://twitter.com/MatthewMoscou/status/866227138575429633; http://bytesizebio.net/2009/07/15/distant-homology-and-being-a-little-pregnant/. Thanks once again,",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/365#issuecomment-499373498:594,mask,masked,594,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/365#issuecomment-499373498,1,['mask'],['masked']
Availability,"Hi @k3yavi, ; So there is no issue when I manually add 2 pairs. Is there a max amount of input files? ; Below is the simple bash script to organize the data and find the correct files; ```; #!/bin/bash; #this script calls alevin for multiple library pairs of files . #where salmon located; salmon=""/usr/local/bin/salmon"". index=""path/to/gencode_annot/AlevinIndex/""; echo ${index}. #output folder path; output_folder=""path/to/alevin_outputTest""; echo ${output_folder}. #where the raw files are; samples_folder=""path/to/Raw_data/Sample_cells/"". cd ${samples_folder}. sample1=$(ls *R1*.fastq.gz -p | grep -v / | tr '\n' ' ') #this gives us a space seperated list of all the R1 files; #this is from the alevin tutorial ""Often, a single library may be split into multiple FASTA/Q files. Also, sometimes one may wish to quantify multiple; #replicates or samples together, treating them as if they are one library""; echo ""Value of sample1:""; echo ${sample1}. echo ""Value of sample2:""; sample2=${sample1//R1/R2} #switch the R1 with R2 to find the second pair for ALL (//) occurances; echo ${sample2}. tgMap=""path/to/gencode.primary_assembly.v29.tsv""; #this is a transcript --> gene map tsv file. Can create this using tximport. whitelist=""path/to/my_barcode.tsv""; #a list of true barcodes; salmonCommand=""${salmon} alevin -i $index -lISR -1 ${sample1} -2 ${sample2} -p 8 --celseq2 --dumpCsvCounts -o ${output_folder}/quantSC --tgMap ${tgMap} --whitelist ${whitelist}""; #--numCellBootstraps 100; #numCellBootstraps args -- generate a mean and varience for cell x; #dumpCSVcounts - dumps cell v. transcripts count matrix in csv format; echo ${salmonCommand}; if ${salmonCommand}; then; touch ${output_folder}/qauntSC_complete.txt; else; touch ${output_folder}/quantSC_failed_to_complete.txt; fi; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446199327:366,echo,echo,366,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446199327,14,['echo'],['echo']
Availability,"Hi @k3yavi,; There is no more message error. Once the message occurs, it abruptly ends and that's it. > weren't you using the whitelisted CB instead of ""knee"" thresholding?. Yeap, but in the previous dataset. In this one the CB is provided in the dataset, and I don't have to create a whitelist. . The error does not always happen. I have created other random datasets, and they do not always fail. I will try to create a small dataset which fails, for you to replicate. Is there anyway I can privately send it to you?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386#issuecomment-505504105:38,error,error,38,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386#issuecomment-505504105,2,['error'],['error']
Availability,"Hi @kai2june,. I'm glad to hear the pre-compiled one works. To try and compile in debug mode, I suggest the following. Let `salmon` be the top level directory where you checked out the repository. And assume you're not in a fresh checkout (i.e. you already tried to build and got this error). Look at the file:. ```; salmon/external/pufferfish/CMakeLists.txt; ```. on line `131` you should see the following:. ```; set(DEBUG_FLAGS ""-D__STDC_FORMAT_MACROS;-DSTX_NO_STD_STRING_VIEW;-pg;-g;-gstabs""); ```. try removing the `-pg` from this so it reads . ```; set(DEBUG_FLAGS ""-D__STDC_FORMAT_MACROS;-DSTX_NO_STD_STRING_VIEW;-g;-gstabs""); ```. then try to compile again and see if that is able to complete successfully.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609#issuecomment-751922623:285,error,error,285,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609#issuecomment-751922623,1,['error'],['error']
Availability,"Hi @kai2june,. Thank you for the _detailed_ report! It's interesting because (a) those functions aren't doing anything too exotic and (b) CentOS is the OS we use on our continuous integration. We'll try and get a better handle of what is going on here. In the mean time, could you tell us if you see the same behavior with the [pre-compiled binary](https://github.com/COMBINE-lab/salmon/releases/download/v1.4.0/salmon-1.4.0_linux_x86_64.tar.gz) available from the downloads page?. P.S. One other thing worth trying. We've noticed that compiler support for interprocedural optimization isn't terrific. You can try building salmon without this option by passing `-DNO_IPO=TRUE` as an additional cmake flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609#issuecomment-751366046:396,down,download,396,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609#issuecomment-751366046,3,"['avail', 'down']","['available', 'download', 'downloads']"
Availability,"Hi @kate-simonova,. How low is your mapping rate? Can you explicitly pass the flag `-l IU` for library type? This strand bias means that the data look stranded however. Also, can you mention how the mapping rate changes if you add `--softclip` and/or if you lower `--minScoreFraction`? If the mapping rate is very low, this could signify a failure of the sample to match the reference well. Could you post the contents of `meta_info.json`?. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/679#issuecomment-1036315058:340,failure,failure,340,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/679#issuecomment-1036315058,1,['failure'],['failure']
Availability,"Hi @kayDaramola ,. The download you will get from the releases page is the source. You will either need to build / compile it from source or, alternatively, install the binary using bioconda (recommended). Finally, you can try [this](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) pre-compiled binary for Linux, though we are trying to move to bioconda for all binary distribution as it makes support easier by removing a major variable.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/238#issuecomment-398558525:23,down,download,23,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/238#issuecomment-398558525,1,['down'],['download']
Availability,"Hi @keithgmitchell,. Alevin is designed for droplet-based, tagged-end protocols, and in the vast majority of these protocols, transcript-level quantification isn't really reliable enough to be useful. Since most tagged-end protocols sequence information from only the 3' end of the transcripts, there is a highly-biased coverage signal, and discerning UMI assignment at the transcript level is usually not possible. Therefore, I wouldn't generally recommend trying to obtain transcript-level counts from alevin and we haven't tested it in this context. If you have a particular reason you want to look at transcript counts and believe it may be reasonable in your specific use-case, you can alway pass in a gene-to-transcript map that just maps each transcript to itself, which will result in a transcript-level output matrix. However, I anticipate that the resolution problem will become more difficult in this case, and there will be much more uncertainty in the assignments. @k3yavi, please feel free to add anything you think I may have missed. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/588#issuecomment-729974232:171,reliab,reliable,171,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/588#issuecomment-729974232,1,['reliab'],['reliable']
Availability,"Hi @kieranrcampbell,. Indeed, such reads will be un-mappable. The only tricky question here is at which point we should (1) do nothing (2) issue a warning (3) issue an error. Since the reads may not all be of the same size (perhaps the user has quality-trimmed the reads first and not opted to discard the short ones), it's possible we may see some reads too short to consider, but others would not be. We could choose arbitrary cutoffs (warning if greater than 1,000 such reads and an error if greater than 1,000,000), but this will, of course, depend on how large the input data set is. Anyway, I agree that we should notify the user of this and will be happy to add it; do you have any suggestions on the default behavior?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181394180:168,error,error,168,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181394180,2,['error'],['error']
Availability,"Hi @klaas-men,. Thanks for the question and for the detailed report! This is an interesting observation. The most likely reason you are seeing this behavior is that the fast mapping algorithms are, in a sense, quite greedy in how they attempt to map reads. This can lead them to suffer with compared to more traditional alignment algorithms like Bowtie2 and BWA-MEM with respect to both sensitivity and specificity. Here, you are likely seeing a manifestation of the former. Specifically, greedy behavior can lead to spurious matches. Many of these spurious matches are filtered out when applying a consensus mechanism to the series of matches produced by a read; however, this can result in the read going unmapped. We have noticed this behavior where spurious matches can ""mask"" better overall mappings, and we have developed an algorithm to overcome these limitations (called selective-alignment). This is currently implemented in [this branch](https://github.com/COMBINE-lab/salmon/tree/rescue-orphan) of the Salmon repo (if you want to test it out and have trouble building, we can build you a linux executable). This algorithm explores more potential mappings and then applies a fast algorithm for filtering potentially poor ones. In our benchmarks, it exhibits sensitivity and specificity very close to Bowtie2 (which is among the best of the alignment-based methods we considered). Also, I will note that, though the speed and statistical optimization procedures used in fast transcript abundance estimation tools make them a potentially desirable choice for microbiomic / metagenomic abundance estimation, their indices are typically optimized for speed and not size. For small numbers of bacterial species this can be okay, but if one wishes to index large collections of species, the memory usage can become a problem. To this end, we have developed a new indexing scheme (software [here](https://github.com/COMBINE-lab/pufferfish), slightly out-of-date pre-print [here](https://www.biorxiv",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-365337297:775,mask,mask,775,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/196#issuecomment-365337297,1,['mask'],['mask']
Availability,"Hi @knokknok ,. Thanks for reporting this (and for testing out 0.10.0 so quickly)! Is this read set & reference txome available to try and reproduce this? Also, would it be possible to check if this occurs using the bioconda-packaged release?. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393218241:118,avail,available,118,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393218241,1,['avail'],['available']
Availability,"Hi @knokknok ,. The latest commit on develop branch https://github.com/COMBINE-lab/salmon/commit/94eab5dae04da4ca02b8da8b630e0750bc15e010 , should fix it. However, there are other major changes in develop branch which can change things from last stable release. I'd recommend, if you can, then please wait for some time before we make the official release of `1.0`. If it's urgent, then try grep(ping) for the changes related to `umiLength` from the above commit and making them into your local salmon code. Hope this helps !",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/430#issuecomment-536052532:396,ping,ping,396,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/430#issuecomment-536052532,1,['ping'],['ping']
Availability,"Hi @knokknok,. That's a good point. I don't know if there's a way to get at this easily. I'll ping @k3yavi here for his input. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/757#issuecomment-1068649915:94,ping,ping,94,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/757#issuecomment-1068649915,1,['ping'],['ping']
Availability,"Hi @kvittingseerup,. No need to apologize, I think it was I who was not clear. What I am saying is that this is *already* the way that Salmon handles such a case. That is, if you have a paired-end read, and one of the reads maps but the other doesn't (due to e.g., adapter contamination or just very low quality), then Salmon will consider the remaining (mapping) end of the read as representative of an entire fragment, and will resolve the fragment origin accordingly during optimization. Generally, not having both ends of a paired-end read leads to increased ambiguity, but this isn't a particularly big problem if it only happens to a generally small fraction of the reads. Further, since you cannot reliably infer the implied fragment length on a transcript from only a single-end read, such mappings will not contribute to the bias model. Again, however, as long as this doesn't happen to the vast majority of fragments, it should have only a negligible effect on quantification and bias correction. Please let me know if this description makes sense. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355881997:705,reliab,reliably,705,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355881997,2,['reliab'],['reliably']
Availability,"Hi @kvittingseerup,. Sorry for letting this sit for so long without responding. Currently, Salmon does not support mixed paired-end and single-end library types, so this is presumably what is causing the error (granted, the error message here could be considerably better). Practically, I'd be curious what the difference is between allowing this and simply running Salmon with the _non-quality-trimmed_ paired-end reads. Specifically, if Salmon is not able to map a pair concordantly, but it can map one of the ends of the read, then it will already do so. . However, in the case that there's a really compelling reason to want to quality trim the reads prior to quantification (and to include the reads such that the mate has been completely quality-trimmed away), we would be able to support this. It will require a bit of modification to allow different library types to be processed back to back and to contribute to the same quantification estimates. In this case, I imagine what we would want to do for the orphans is essentially what Salmon would do internally if it can't map the mate. That is, we would learn essentially all of the parameters and biases from the pairs that do map concordantly, and then just include the orphaned reads as indicating an entire fragment but of unknown length. Let me know if you have any thoughts about the above, and sorry again for the delay!. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353196630:204,error,error,204,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-353196630,4,['error'],['error']
Availability,"Hi @lijing28101,. Thanks for your interest in salmon. The answer to your first question:. > I want to know how did you estimate the final counts to combine the unique and ambiguous counts?. is actually a huge part of the method behind salmon. Salmon uses a statistical estimation procedure to determine what abundances for the transcripts are most likely given the observed data (read alignments). You can read about the method in detail [here](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5600148/pdf/nihms849351.pdf) and about some subsequent improvements [here](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5870700/) and [here](https://www.biorxiv.org/content/10.1101/657874v2). > For the unstranded library, did you use the same algorithm to estimate the final counts as the stranded library? . The difference between stranded and unstranded is that in the stranded library, we set the conditional probability of alignments that don't agree with the specified strandedness to be a very-low, user-adjustable value (`--incompatPrior` : 0 by default). The underlying inference methodology is identical. Strand specificity, if the library was sequenced that way, provides extra signal to the quantification algorithm. However, that is an external source of information, and is only available if the library itself was strand-specific.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/492#issuecomment-620232036:1282,avail,available,1282,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/492#issuecomment-620232036,1,['avail'],['available']
Availability,"Hi @litongda007,. If you can share the sample table and code you are using to process up to this point, I can see if I get the same error. I'm guessing the result is something happening _after_ the conversion to h5. Some subsequent processing is likely leading to the error, but the bootstraps themselves contain no NA/NAN values.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/529#issuecomment-638568102:132,error,error,132,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/529#issuecomment-638568102,2,['error'],['error']
Availability,"Hi @litongda007,. Thanks for the updated. I grabbed these and ... basically saw the same thing:. ```; 23R1F : has null = False; 23R2F : has null = False; 23R3F : has null = False; 23R4F : has null = False; R1ST1 : has null = False; R2ST1 : has null = False; R3ST1 : has null = False; R4ST1 : has null = False; ```. I am thinking that perhaps the error is popping up somewhere _downstream_ of salmon. I presume you are using the `salmon` -> `wasabi` -> `sleuth` pipeline, is that correct? If so, I can try and see if I get the same thing importing in R. The tests above were using the python importer from [here](https://github.com/COMBINE-lab/pluribus). **Update**: Ok, that, too, has failed. I converted all of the quantifications to hdf5 files using wasabi, and then checked for nans in the converted files:. ```python; import h5py; import numpy as np; def get_num_nan(x):; nbs = int(x['aux']['num_bootstrap'].value[0]); s = 0; for i in range(nbs):; s += np.isnan(x['bootstrap']['bs{}'.format(i)].value).sum(); return s. samps = ['23R1F', '23R2F', '23R3F', '23R4F', 'R1ST1', 'R2ST1', 'R3ST1', 'R4ST1']; for s in samps:; d = h5py.File('quant/{}/abundance.h5'.format(s)) # abundance.h5 created by wasabi; null_count = get_num_nan(d); print(""{} : null count = {}"".format(s, null_count)); d.close(); ```. The output, as above, is : . ```; 23R1F : null count = 0; 23R2F : null count = 0; 23R3F : null count = 0; 23R4F : null count = 0; R1ST1 : null count = 0; R2ST1 : null count = 0; R3ST1 : null count = 0; R4ST1 : null count = 0; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/529#issuecomment-638553711:346,error,error,346,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/529#issuecomment-638553711,1,['error'],['error']
Availability,"Hi @lubios,. I'm glad that you were able to address the first issue. The thing that's strange about the second is that somehow the output path you are providing in the command doesn't match the directory name in the error message. Specifically, your command has the output directory as `transcripts_DecoyQuant`, but the error reports not being able to create the directory `transcripts_quant`. Are the command and error here properly paired?. The only situations under which one might expect this issue to occur is if either (1) your user doesn't have sufficient permission to create the location where the output is to be written or (2) the disk on which the output is to be written has insufficient space. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/717#issuecomment-964546340:216,error,error,216,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/717#issuecomment-964546340,3,['error'],['error']
Availability,"Hi @martynakgajos ,. It's very hard to say without looking at the data. If you can share a minimal data on which we can replicate the error, that'd be great.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/414#issuecomment-521744430:134,error,error,134,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/414#issuecomment-521744430,1,['error'],['error']
Availability,"Hi @matthew-valentine,. In general, extra non-primary alignments are OK. This can, of course, slow down quantification somewhat because many more alignments are being evaluated. However, salmon (with the `--ont` flag) is designed to consider the provided alignments and allocate the corresponding read proportionally according to all of the relevant probabilities (including alignment quality). If, under this aligner setting, there are many *highly* sub-optimal alignments being reported, you may consider filtering them out, but that shouldn't be strictly necessary. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/796#issuecomment-1235769651:99,down,down,99,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/796#issuecomment-1235769651,1,['down'],['down']
Availability,"Hi @mdshw5,. Thanks for the detailed report (and trying out the new version). Could you provide some details about the system you're running on? For example, how much memory is available? Also, how easy would it be to provide the actual fasta you are trying to index (for us to attempt to reproduce this locally)?. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/432#issuecomment-538548418:177,avail,available,177,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/432#issuecomment-538548418,1,['avail'],['available']
Availability,"Hi @microsat2018,. If you provide some details about what OS you are running on I may be able to try and create a compatible executable. Are you able to run docker images in your environment? If so, a quicker option may be to use Docker or uDocker (completely in user space) to pull down the Docker image for the latest Salmon from [Docker Hub](https://hub.docker.com/r/combinelab/salmon/tags/). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/256#issuecomment-407874226:283,down,down,283,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/256#issuecomment-407874226,1,['down'],['down']
Availability,"Hi @mishaprochazka and @jdidion,. Thanks @jdidion for pinging me on this. Somehow, Gmail has decided that all GitHub notifications (except those that explicitly tag me, but somehow I missed this one) should go to SPAM. So, I've been missing some of the newer issues here. The short answer is that the documentation needs to be updated. When salmon was originally published, we made use of [RapMap](https://github.com/COMBINE-lab/RapMap) as the underlying mapper, which performed quasi-mapping against an index that consisted of a suffix array and a hash over k-mers pointing to prefixes in the suffix array (similar to the strategy used by STAR, but using much longer k-mers to improve lookup speed). We referred to this index as the quasi-index. As the software evolved and we continued to improve the mapping methodology, we eventually transitioned over to an index based on [our pufferfish data structure](https://github.com/COMBINE-lab/pufferfish). In addition to the new data structure, this coincided with our move over to selective-alignment as the mapping algorithm, and all of this happened at the 1.0.0 release (this is why, for example, indices built before 1.0.0 are not compatible with salmon > 1.0.0; a topic on which there have been a few GitHub issues). However, given the fact that the documentation and software are linked only through manual human intervention (we haven't leveled up to e.g. having salmon be a [literate program](https://en.wikipedia.org/wiki/Literate_programming) yet), these two sometimes get out of sync. This is an instance of that. We have maintained the functionality of the `--writeMappings` feature, and in fact, even augmented it. However, we have not replaced the antiquated `quasi-index` terminology in the documentation. The TLDR is that you can use `--writeMappings` with the index you built with the `salmon index` command, and it should work fine. If you are mapping against an index without decoy sequences, then the output format will be basically ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/727#issuecomment-996192524:54,ping,pinging,54,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/727#issuecomment-996192524,1,['ping'],['pinging']
Availability,"Hi @mohsenzakeri ,. Sorry for the slow reply! I’ve done some sleuthing and have (seemingly) figured out what’s going on. I compared tons of overlapping transcript scenarios and played with the salmon options and concluded the following:. 1. **Success scenarios:** Generally, with default options, Salmon does an excellent job at assigning reads to overlapping transcripts the same way that a human would. Whether or not the transcripts overlap slightly or one is entirely contained within another is irrelevant. 2. **Failure scenarios:** In some scenarios with overlapping transcripts, read assignment can be very strange and unintuitive, especially when one of the transcript isoforms is much more abundant than the other (the abundant transcript tends to “steal” reads from the less abundant one). 3. Both the success and failure scenarios are **due to the length bias model** used when estimating the abundance of transcripts. **Totally disabling this with the —noLengthCorrection flag** (NOT the —no**Effective**LengthCorrection flag) **actually *creates* the transcript within a transcript failure scenario that I mistakenly thought was the original issue.** That is, when length bias modeling is turned off, then longer transcripts will always get assigned *all* of the reads that multimap to shorter transcripts.; -Therefore... if you *did* want to tackle the transcript within a transcript scenario to build a coverage bias model, you probably want to disable the length bias modeling or at least consider how it would interact with coverage modeling. With that said, I'm sharing an example that illustrates each of the above points and a link to a toy dataset that you can use to recreate the examples or explore this further. If you'd like to dig deeper into this, free free to e-mail me at jason@calicolabs.com, I have tons more notes and data that I'm willing to share. Dataset is in google drive (you'll have to click the link and request access to view it) https://drive.google.com/drive",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/514#issuecomment-653747847:517,Failure,Failure,517,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514#issuecomment-653747847,3,"['Failure', 'failure']","['Failure', 'failure']"
Availability,"Hi @moschmi ,. Thanks for sharing the file.; You are right the transcript id `PB.40054.21` is indeed present & has the gene mapping in the file you forwarded. Unfortunately, the specific error message was not useful here but the issue is the following: ; ![image](https://user-images.githubusercontent.com/8772521/85436584-45706f00-b557-11ea-9ba2-95ebf4e43bc4.png). If you check the file you forwarded from line number 12,133 - 12,137, it seems a bunch of transcript ids are blank and has no assigned gene-ids. In this case the file parser was not intelligent enough to ignore such empty mappings and end up using the next line (before) tab as the wrong mapped gene-mappings. Later, when alevin sanity checks for the mappings of all transcripts, alevin complaints about not being able to find it for a random transcript much lower in the order. In short, I know you used the bioawk script for making the transcript to gene mapping file, but the script was written with the gencode generated GTF in mind, it seems the one you have has some small difference which is creating the issue. Currently, the easiest fix is to parse the GFF file again and generate the mappings for all the transcript in the proper format. In the future, we will add a sanity check for these type of corner cases, thanks for reporting this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/540#issuecomment-648319730:187,error,error,187,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540#issuecomment-648319730,1,['error'],['error']
Availability,"Hi @mr-c,. First of all, **thank you** for your monumental effort in supporting salmon as a Debian package. I think this is fantastic. I'm also not a CMake expert, but I've failed with it enough times to start to get a handle. I have actually moved to the latest version of Jellyfish (v2.2.3) in the [quasimapping branch](https://github.com/COMBINE-lab/salmon/tree/quasimapping), which will be merged back into master as soon as we've finished porting the bootstrapping feature from [sailfish-master](https://github.com/kingsfordgroup/sailfish). Regarding supporting external versions of the libraries — this absolutely makes sense. What is the standard location where they are assumed to be installed? In this case I can search with a `FindPackage` before I attempt to download them. From the list above, I see two potential problem libraries:; - bwa — We actually use a modified version of bwa that accepts and uses an extra parameter that specifies the suffix array sampling frequency. Specifically, we, by default, use a denser sampling of the suffix array to trade off extra space usage for more speed in lookup. The standard bwa, therefore, probably wouldn't work.; - jellyfish — I actually tried to use jellyfish without obtaining the source and building it early on in development. I ran into an issue where the config.h file generated during compile wasn't installed by Jellyfish, and this caused runtime failures when Salmon was running. It seems to me that either (1) config.h should be installed with jellyfish by default or (2) it shouldn't be necessary to use jellyfish as a library. However, as far as I know, this issue persists in the latest version of jellyfish (if you want to use it as a library as we do, and not just as a k-mer counter). For the remaining libraries, we just use the standard versions, so this should be _OK_.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144721158:770,down,download,770,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19#issuecomment-144721158,2,"['down', 'failure']","['download', 'failures']"
Availability,"Hi @najibveto,. I do not have access to a windows machine, unfortunately, so I can not test this directly. It would seem that somehow the appropriate version of `libstdc++` is not available or is not being found? I would recommend to raise this issue over on the [`bioconda` repository](https://github.com/bioconda/bioconda-recipes/issues) or in their [gitter channel](https://app.gitter.im/#/room/#bioconda_Lobby:gitter.im). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/864#issuecomment-1660467862:180,avail,available,180,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/864#issuecomment-1660467862,1,['avail'],['available']
Availability,"Hi @paulitikka,. This isn't something that I have control over (in terms of the official package repositories), and we don't have the resources to independently package salmon for the huge variety of different linux distributions. However, there are already ways to install the salmon binary directly across linux and OSX. Specifically, there is a pre-compiled binary [here](https://github.com/COMBINE-lab/salmon/releases/download/v1.5.2/salmon-1.5.2_linux_x86_64.tar.gz) --- tagged on the release page. Additionally, you can install salmon directly on linux or osx using bioconda — as outlined [here](https://anaconda.org/bioconda/salmon). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/716#issuecomment-962084234:422,down,download,422,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/716#issuecomment-962084234,1,['down'],['download']
Availability,"Hi @phickner,. The error message seems to be coming from the library we use to parse the BAM file (https://github.com/jkbonfield/io_lib/blob/master/io_lib/bam.c#L329). Is it possible that somehow the BAM itself is ill-formed? Maybe as determined by [picard ValidateSamFile](https://broadinstitute.github.io/picard/command-line-overview.html#ValidateSamFile) or some such?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-442697747:19,error,error,19,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323#issuecomment-442697747,1,['error'],['error']
Availability,"Hi @pinin4fjords ,. I am gonna make the hot-fix release for the `0.14.2` now.; We plan to release `v1.0.0` mid October, so with the `v0.14.2` I can make just the bioconda and github release from the master branch to fix the `mtx` issue. Just wanted to give you heads up, I am making 14.2 from master, so the only difference from 14.1 would be the hotfix i.e. there would be no Genome+txome capability as that's planned with 1.0. I'll keep you updated once it's available through bioconda.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/431#issuecomment-538507954:461,avail,available,461,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/431#issuecomment-538507954,1,['avail'],['available']
Availability,"Hi @pinin4fjords ,. That's a really nice suggestion. We had a similar idea, basically the plan was to ask the user to run the algorithm with `--dumpFeatures` which dumps the `filter_read_counts.txt` file, basically this file has the per CB level read counts after sequence correction, and visualize the distribution through small script to chose a user-defined threshold by `--forceCell` command line flag. I do see a value in giving a ballpark for some boundary in the error code, but the problem is a little circular i.e. if we had some idea about the boundary we use it anyhow and correct it later through the intelligent whitelisting. ; We are open to ideas you may have ?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490143396:470,error,error,470,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490143396,1,['error'],['error']
Availability,"Hi @pinin4fjords ,. We have release a new version `v0.14.0`. In the latest version we have added different error codes based on what stage the pipeline fails. The error codes are as follows:. ```; 1: Error while mapping reads and/or generic errors.; 64: Error in knee estimation / Cellular Barcode sequence correction.; 74: Error while deduplicating UMI and/or EM optimization.; 84: Error while intelligent whitelisting.; ```. As we have discussed earlier, you can control the expected behavior by tweaking the following two flags.; ```; --keepCBfraction: A value in (0, 1] i..e what fraction of CB to keep for quantification.; --freqThreshold: default 10, Minimum frequency required to quantify the CB.; ```. Just a heads up, alevin with the current release will by default dump the `dumpFeatures.txt` which contains the per CB level features. Please check the release notes for more details. Closing this issue for now, but feel free to reopen if you face any issue or have question.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-498040072:107,error,error,107,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-498040072,7,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"Hi @pinin4fjords ,; The error is very subtle, It happens when the total number of genes are exactly a multiple of 8, which in your case it is. It'd be great that before moving forward, if you can quickly verify if 0.99 actually fixes the issue or is it something else. Unfortunately, there is a chance that the `mtx` format output is corrupted for the last 8 genes (in the order they present in the quants_mat_cols.txt), however, the baseline output of alevin `quants_mat.gz` would still be correct and already be in the output folder of your pipeline. The EDS repo I forwarded you just convert the binary output into mtx format correctly. Due to these subtle issues making into production environment, we changed the release cycle to be like a beta to stable type. Currently 0.99 is a beta release, which has been out for some time. If I have to guess, we plan to release 1.0 (the stable release) in approximately 2 weeks.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/431#issuecomment-537077512:24,error,error,24,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/431#issuecomment-537077512,1,['error'],['error']
Availability,"Hi @pophipi ,; Thanks for the interesting question, but unfortunately in the current version of Alevin you can't tweak the mismatch rate option although based on the type of error/noise in the reads you can try reducing the size of the k from default 31 to something smaller and see if it helps. We are working on tweaking the mapping algorithm for Alevin allowing mismatches but it's still in testing phase and has not been integrated yet. We'll let you know as soon as we have version supporting that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/280#issuecomment-416969420:174,error,error,174,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/280#issuecomment-416969420,1,['error'],['error']
Availability,"Hi @pophipi ,; We are in process of documenting the details of these files generated by using flag `--dumpFeatures`.; However, for your use case of getting alignment rate, there are two ways to get it in Alevin system. First you have to run Aleivn with the flag `--dumpFeatures` but since you have the file `filtered_cb_frequency.txt` I think you already have specified this flag in your run of the dataset. The relevant files you need for generating alignment rate would be following:. 1. *filtered_cb_frequency.txt*: A *tsv* file with the first column as the Cellular Barcode(CB) id and the second column has the frequency of the CB after sequence correction.; 2. *MappedUmi.txt*: A *tsv* file with the first column as the Cellular Barcode(CB) id and the second column has the number of reads confidently mapped to the provided reference transcriptome. Both the file should have same number of rows (i.e. CB), although the order can be different. To get the Alignment rate you might have to divide the value of each CB in the second file by the value in the first file i.e. the Number of mapped reads over total number of available reads for that CB. The second and more easier way is (although version bounded i.e. if you have latest version of Salmon (v11.2)), then if you run alevin with `--dumpFeatures` flag it will also generate a file called `featureDump.txt`. This file has multiple feature entries although the relevant one (the alignment rate) in case of yours would be the first one. Hope that helps. Let us know if you need more help.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/274#issuecomment-414416572:1124,avail,available,1124,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/274#issuecomment-414416572,1,['avail'],['available']
Availability,"Hi @ppflrs,. Thanks for the detailed bug report. It seems that the index was constructed properly, but is not being appropriately read in during the quant phase. I've seen a big-index issue with 0.8.1 from another user as well --- but I haven't had a chance to dig down into this yet. Would it be possible for you to see if the issue also exists if you try the precompiled executable for v0.7.2? If that index builds and runs for you, we can at least narrow down the error to this particular release. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287131172:265,down,down,265,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287131172,3,"['down', 'error']","['down', 'error']"
Availability,"Hi @qifei9,. Thanks for the question and for pointing out the need for update in the docs. Regarding your first question, both approaches (3) and (2) seem reasonable to me. I would *not* try approach (1) as this will eliminate the benefit of the stranded library for the targets where you do know the orientation. For approach (2) , I'd either use `--validateMappings` or at least set `--rangeFactorizationBins 4` (the former implies the latter). As for what value to set for `--incompatPrior`, the effect should be reasonably robust across a range of values, the question is how unlikely _a priori_ would you expect a mapping not in `ISR` orientation to be if you also observed a mapping in `ISR` ... probably very unlikely (you could try e.g. 1e-10 or some such). Approach 3 is also also reasonable, though what you might consider doing is looking at the abundances for these opposite strands of the same sequence post quantification --- you should generally see that one of the two has a non-zero expression, or at least one orientation should have a much higher expression than the other (for expressed transcripts, at least, this might give you evidence as to the true strand of origin). Regarding your second point, the changelog is correct. In recent versions of salmon, `--incompatPrior` is 0 by default. We'll update the documentation accordingly.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/332#issuecomment-450929631:527,robust,robust,527,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/332#issuecomment-450929631,1,['robust'],['robust']
Availability,"Hi @rached-97,. First of all, thank you for the _incredibly-detailed_ report. All of the information you provided made it easy to pull down the data and to test what might be going on. I pulled down the first sample, consisting of `SRR9071838_1.fastq` and `SRR9071838_2.fastq`, which was recognized as `IU` for you. . However, since I didn't have access to the annotation you used or the specific scripts you used to extract the transcriptome reference, I instead quantified directly against [gencode v37](ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_37/gencode.v37.transcripts.fa.gz). When I did this, salmon calls the library format type as `ISR`, which is what we would expect. The `lib_format_count.json` is as such:. ```; {; ""read_files"": ""[ SRR9071838_1.fastq.gz, SRR9071838_2.fastq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 31944161,; ""num_assigned_fragments"": 31944161,; ""num_frags_with_concordant_consistent_mappings"": 29445487,; ""num_frags_with_inconsistent_or_orphan_mappings"": 2576421,; ""strand_mapping_bias"": 0.000022006283676957945,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 648,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 29445487,; ""SF"": 1098610,; ""SR"": 1477163,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. As you can see, the strand mapping bias reported is `0.000022006283676957945` (to an insanely higher level of precision than we actually need). This is, of course, drastically different from the value of `0.36810071818291797` that showed up in your table for this sample. While it is true that salmon is quite conservative about calling a library as stranded (i.e. it would rather make the mistake of calling stranded library as unstranded than vice-versa, as the latter would discard reads while the former would not), in this case it looks like the culprit is likely the transcriptome reference being used. When quantified under the standard gencode transcriptome, this sample is inferred as `ISR` with very high confidence ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/655#issuecomment-825393464:135,down,down,135,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/655#issuecomment-825393464,2,['down'],['down']
Availability,"Hi @radlinsky,. I've downloaded the read data and am looking into this. In the meantime, I did notice some relevant output from your log. First, when I run with the automatic library type, I get that the most likely library type is `ISF` rather than `ISR`. Second, I note that ~4M fragments are discarded because they produce dovetailing reads. We discard dovetailing reads by default (this was a recent change in default behavior, though it is the same default choice made by e.g. Bowtie2). You can allow these reads to be mapped and quantified by passing salmon the `--allowDovetail` flag during quantification. Does this make any different in the alignments you see for this gene?. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494208884:21,down,downloaded,21,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-494208884,1,['down'],['downloaded']
Availability,"Hi @rbenel,. This is quite interesting. So I downloaded both the Gencode transcriptome (all transcript sequences) and the annotation you point out (PRI --- comprehensive gene annotation). There are a few transcripts present in the latter but not the former:. ``````. Specifically, these are _not_ dropped by salmon. They are not in the [input reference transcriptome file](ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_28/gencode.v28.transcripts.fa.gz). So it looks like Gencode includes these in the GTF, but _not_ in the transcriptome fasta. I looked at the first few, and nothing immediately jumps out as to why Gencode would have dropped",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410725104:45,down,downloaded,45,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-410725104,1,['down'],['downloaded']
Availability,"Hi @rbenel,. This message is just salmon letting you know a newer version is available. The installed version should function perfectly fine. If you really want to avoid the message, you can pass `--no-version-check` *before* the salmon command; e.g.:. ` salmon --no-version-check index ...`. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/262#issuecomment-409903345:77,avail,available,77,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262#issuecomment-409903345,1,['avail'],['available']
Availability,"Hi @rfarouni ,. Please use [this](https://drive.google.com/file/d/11lav7dOQkn5VuSNZwC2CZUgx_eeXpBmx/view?usp=sharing) link to download a linux compatible binary, the fix will be available by default with the next release . > Also, does Alevin use 10x cell barcode whitelist internally to correct barcodes?. In our experiments, we find that, in expectation, the 10x generated experiments are clean enough that we don't need the 10x whitelisted barcode to be explicitly specified or used. > And do you recommend using the `--naiveEqclass` only 64 guide sequences as features ?. That's a very good question. Basically the answer lies in how complicated the UMI graph network is. Experiment with the antibody derived barcodes (ADT) with 20 protein panel, generally, doesn't need the `--naiveEqclass` mode UMI deduplication, unless the experiment is super deeply sequenced. However, for super low diversity like 4-8 barcodes e.g. for HTO like sample barcodes, the graphical network becomes exponentially hard to solve and significantly increases the running time for alevin. . In general, I'd recommend if you expect very low diversity in the number of barcodes in your experiment, use `--naiveEqclass` otherwise prefer avoiding it. Generally, the experiment with low diversity barcodes results in such a highly dense count matrix that a few error in UMI deduplication won't matter and you can tradeoff extra long running time with reasonable under/over UMI deduplicated counts. . _In short_, 64 guide sequences are relatively high diversity and I'd advise skipping `--naiveEqclass` in your command line argument. Hope it helps !",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/531#issuecomment-638576983:126,down,download,126,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531#issuecomment-638576983,6,"['avail', 'down', 'error']","['available', 'download', 'error']"
Availability,"Hi @rob-p ! I try to install Salmon on macOS M1 Max with hombrew (brewsci) ; but I guess the formula is the UNIX one on it. I got :. ```; Benjamin@macbook-pro ~ % brew install salmon ; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v1.3.0.tar.gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/787:189,Down,Downloading,189,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787,3,"['Down', 'down']","['Downloading', 'downloaded', 'downloads']"
Availability,"Hi @rob-p , @mdshw5 , . I did a local run, it crashed again, but now at least with some more information and a core dump. ; So the process failed with this error:; ```; /bin/bash: line 1: 31345 Aborted (core dumped) /home/agosdsc/pigx/pigx_rnaseq/.guix-profile/bin/salmon quant -i /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index -l A -p 8 -1 /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/N2_1_R1.fastq.gz -2 /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/N2_1_R2.fastq.gz -o /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/N2_1 --seqBias --gcBias -g /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf >> /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/logs/salmon_quant_N2_1.log 2>&1; ```; I uploaded the files and the dump, such that you can try to debug this: ; https://1drv.ms/f/s!AqRdeUKlw8lFjDV7eDqqQbN7cQPa",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377190490:156,error,error,156,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-377190490,1,['error'],['error']
Availability,"Hi @rob-p , thank you for so quick response. I spent some time organizing my demo data. Here is link for demo: ftp://bioinfo.noble.org/pub/for-github/. Two genes, with transcript name MSAD_157177.t1 and MSAD_200218.t1, get significantly different expression value in two runs, although they are almost identical. . Below are NumReads from Salmon:; ```; runA runB; MSAD_200218.t1 636.8 12201.2; MSAD_157177.t1 9307.1 0.8; ```. I agree with the necessity of allocating mulit-mapping reads. However, our problem is MSAD_157177.t1 received most of mapping reads in runA (9307 vs 636) but lost all of mapping reads in runB (0.8 vs 12201). And MSAD_200218.t1 has totally opposite result. Such different behavior for two genes make downstream Deseq2 reported both genes as significantly DE genes across samples but we know it is false result. Look at histogram.jpg , you will find it is pretty common phenomena over samples in terms of normalized RPKM. . I did a quick test for runB using eXpress, here is eff_counts:; ```; MSAD_200218.t1 5406; MSAD_157177.t1 3990; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263783167:725,down,downstream,725,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/107#issuecomment-263783167,1,['down'],['downstream']
Availability,"Hi @rob-p ,. I tried both ways. Classic installation (not through bioconda) gave me this error:. ```; In file included from /usr/local/salmon-0.10.2/include/eigen3/Eigen/Core:420:0,; from /usr/local/salmon-0.10.2/include/eigen3/Eigen/Dense:1,; from /usr/local/salmon-0.10.2/include/SalmonUtils.hpp:21,; from /usr/local/salmon-0.10.2/include/ReadPair.hpp:7,; from /usr/local/salmon-0.10.2/include/AlignmentGroup.hpp:15,; from /usr/local/salmon-0.10.2/include/AlignmentLibrary.hpp:12,; from /usr/local/salmon-0.10.2/src/SalmonQuantifyAlignments.cpp:39:; /usr/local/salmon-0.10.2/include/eigen3/Eigen/src/Core/AssignEvaluator.h:90:50: warning: enum constant in boolean context [-Wint-in-bool-context]; MaySliceVectorize = bool(MightVectorize) && bool(DstHasDirectAccess); ^~~~~~~~~~~~~~~~~~~~~~~~; At global scope:; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; cc1plus: warning: unrecognized command line option ‘-Wno-unused-local-typedef’; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. I also tried installing it through bioconda. Apparently, it installs it correctly, but when I try to use Trinity (I'm installing Salmon as a Trinity requirement) this is what happens: . ```; salmon: /opt/conda/conda-bld/salmon_1528409373758/work/salmon-0.10.2/include/eigen3/Eigen/src/Core/util/Memory.h:161: void* Eigen::internal::aligned_malloc(std::size_t): Assertion `(size<16 || (std::size_t(result)%16)==0) && ""System's malloc returned an unaligned pointer. Compile with EIGEN_MALLOC_ALREADY_ALIGNED=0 to fallback to handmade alignd memory allocator.""' failed.; Error, cmd:; salmon --no-version-check quant -i /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx -l U -r /home/federicoplazzi/test_Trinity_Assembly/trinity_out_dir/read_partitions/Fb_0/CBin_0/c30.trinity",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403:89,error,error,89,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398081403,1,['error'],['error']
Availability,"Hi @rob-p ,. It does solve that issue. (I had figured out that AVX features were probably on the oldish side of software on that system, but I had the most recent `gas` available without having to recompile it from source myself). Thanks a lot (for this answer and for Salmon)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/20#issuecomment-145677185:169,avail,available,169,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20#issuecomment-145677185,1,['avail'],['available']
Availability,"Hi @rob-p ,. Thanks for your reply. I just confirmed with my colleague, and realised the data I uploaded previously was related to another issue instead of the ""NA"" issue. I just re-uploaded the data. Please use the link below to download it. I am sorry for any inconvenience caused by this. https://send.firefox.com/download/8344911f0baae7d0/#xIWOt34AlY4XENr23IkBJA. Thanks.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/529#issuecomment-638496616:230,down,download,230,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/529#issuecomment-638496616,2,['down'],['download']
Availability,"Hi @rob-p ,. The data downloaded from sra database and use `fastq-dump` to split it only generate one fastq file, and EBI database only show one fastq file per sample. I am not sure if I process the file correctly. And here is a part of the description of the file on the sra database, and the link of one of the file <br class=""Apple-interchange-newline"">[SRR8453531](https://www.ncbi.nlm.nih.gov/sra/SRX5260234[accn]). ```; Instrument: Illumina HiSeq 3000; Strategy: RNA-Seq; Source: TRANSCRIPTOMIC; Selection: cDNA; Layout: SINGLE; Construction protocol: The scRNA-seq libraries were generated using Chromium Single Cell 3' Library & Gel Bead Kit v2 (10X Genomic) according to manufacturer's protocol. Briefly, 10,000-15,000 live cells were FACS-sorted and used to generate single-cell gel-bead in emulsion (GEM). After reverse transcription, GEMs were disrupted. Barcoded cDNA was isolated and amplified by PCR (12 cycles). Following fragmentation, end repair, and A-tailing, sample indexes were added during index PCR (8 cycles). Indexed libraries were multiplexed and sequenced on Illumina HiSeq 3000 instruments according to the manufacturer's instructions (26 cycles of Read 1, 8 cycles of i7 Index, and 98 cycles of Read2).; ```. Best",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/769#issuecomment-1107684572:22,down,downloaded,22,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/769#issuecomment-1107684572,2,"['down', 'repair']","['downloaded', 'repair']"
Availability,"Hi @rob-p ,. Yes that's one aspect. But also, Salmon uses CIGAR to evaluate alignment probability in alignment quantification mode no?. And with just RapMap output you would lose other information that Salmon uses to determine likely fragment assignment?. With UMI's you can deduplicate fragments _before_ inferring where they were likely to come from. Ideally you would deduplicate the reads directly based on UMI, then you wouldn't have to think about PCR duplication in the quantification. But of course keeping a hash of all reads in a FASTQ and accounting for dequencing errors wouldn't be really tractable..",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-268994712:576,error,errors,576,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-268994712,1,['error'],['errors']
Availability,"Hi @rob-p ,. we managed to successfully install Salmon and run Trinity. We compiled Salmon ourselves and we managed to find where the error is located, that is in a Boost file. ; I'm not sure if this information is useful for you, but in order to correctly install Boost, we had to modify the file boost_1_67_0/boost/lockfree/spsc_queue.hpp by adding the line `#include <boost/next_prior.hpp>` among the other inclusions of that file. After editing it and compiling Salmon again, it works properly. Thank you for your support!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398450528:134,error,error,134,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235#issuecomment-398450528,1,['error'],['error']
Availability,"Hi @rob-p ,; After removing ""-pg"" flag in ""salmon/external/pufferfish/CMakeLists.txt"", it's able to be compiled successfully now using Debug mode. To reproduce (in salmon/build directory):; ISSUE 1: The second test failed, I'm wondering whether this should happen or not.; > /root/cmake-3.13.4-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DNO_IPO=TRUE -DCMAKE_INSTALL_PREFIX=../stage ..; > make // to get /root/salmon/external/pufferfish/CMakeLists.txt file; > vim /root/salmon/external/pufferfish/CMakeLists.txt // remove the ""-pg"" flag on line 131 ; > make // successfully compiled after removing ""-pg"" flag; > make install ; > make test; ![second_test_failed](https://user-images.githubusercontent.com/24876498/103263448-e4809280-49e2-11eb-9be9-7bbedfa2f1a5.png). (in /mammoth/salmon_data directory):; ISSUE 2: segmentation fault occurs after ""wrote [count] cleaned references"" (the same place as Release mode); > /root/salmon/stage/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode (data from your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/); ![image](https://user-images.githubusercontent.com/24876498/103263653-75576e00-49e3-11eb-9661-abd69de73a5e.png). gdb /root/salmon/stage/bin/salmon core.23591; (it seems to crash at cereal::OutputArchive, fixFasta, fixFastaMain, etc.); ![image](https://user-images.githubusercontent.com/24876498/103263925-2100be00-49e4-11eb-8918-01f9adf52d98.png)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609#issuecomment-751968056:881,fault,fault,881,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609#issuecomment-751968056,1,['fault'],['fault']
Availability,"Hi @rob-p ,; I used the latest version of salmon, and you were right, the difference between two database decreased a little bit, but still affect my downstream analysis. So I'm wondering should I change or add some options when run salmon quantification step to count for the different reads between two databases? Now I'm using the same script for both NCBI and ENSEMBL quantification except using related index file as below:. ./salmon-latest_linux_x86_64/bin/salmon quant -i index -l A -r SRR.fastq -p 8 --numBootstraps 100 --validateMappings --writeMappings=../mapinfo.sam -o pat1 . As you mentioned the NCBI find the best locus to assign reads and ENSEMBL match the reads better, so should I use different parameters when quantify reads for these two databases? Thank you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/525#issuecomment-639000029:150,down,downstream,150,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/525#issuecomment-639000029,1,['down'],['downstream']
Availability,"Hi @rob-p . A json file would be fine - I was just suggesting a text file. I myself use jq. So, adding it to 'versionInfo.json"" file is fine. Would you know when this update will be available?. On a different note - is salmon 1.2.0 available? See attached screenshot from the ""readthedocs"" page - that seems to suggest that salmon 1.2.0 is already available. I checked out the releases page and could only see 1.1.0. Even bioconda has salmon 1.1.0 - am I missing anything?. ![image](https://user-images.githubusercontent.com/8467214/77860517-d399bb00-71dd-11ea-9f07-d8173789cd6f.png)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/498#issuecomment-605700208:182,avail,available,182,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/498#issuecomment-605700208,3,['avail'],['available']
Availability,"Hi @rob-p . A question: Can salmon be made available for ARM based arch?. Context: [AWS has recently launched instances with ARM based processors](https://aws.amazon.com/ec2/instance-types/r6/#:~:text=Amazon%20EC2%20R6g%20instances%20are,real%20time%20big%20data%20analytics.) which claim to have better performance. I would like to test/use salmon workflows with ARM based instances. Thanks in advance,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/556:43,avail,available,43,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/556,1,['avail'],['available']
Availability,"Hi @rob-p . I have a dataset with about 30 samples or so, in some cases salmon quant (1.2.0) runs fine, with some samples I get the error below. I am using the same command (changing it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes fr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/512:132,error,error,132,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512,2,['error'],['error']
Availability,"Hi @rob-p . I have a question on the ""right"" way of tximport/DESeq2 after salmon quant. . Why I ask ""right way"" - is because I am a bit confused with the tximport vignette. 1 - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor. ```; Do not manually pass the original gene-level counts to downstream methods without an offset. ; The only case where this would make sense is if there is no length bias to the counts, as happens in 3’ tagged RNA-seq data (see section below). ; The original gene-level counts are in txi$counts when tximport was run with countsFromAbundance=""no"". ; This is simply passing the summed estimated transcript counts, and does not correct for potential differential isoform usage (the offset), which is the point of the tximport methods (Soneson, Love, and Robinson 2015) for gene-level analysis. ; Passing uncorrected gene-level counts without an offset is not recommended by the tximport package authors. ; The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. ; Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level differential expression.; ```. 2 - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Salmon. ```; files <- file.path(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene); head(txi.salmon$counts). ```; Why the confusion - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor - states ; - The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/581:356,down,downstream,356,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581,1,['down'],['downstream']
Availability,"Hi @rob-p . Thanks for getting back. I know there are lots of such instances in the literature which have wordings like ```50% homology``` etc - that's why I shared the book chapter from Eugene Koonin's book and the other references/quotes from Walter Fitch. We both cannot change what has already been published, however, when we write something ourselves, we can change the paradigm and represent things correctly. Also, the preprint paper has similar wordings that you might want to reconsider changing:. ```To obtain homologous sequences within a reference, we map the spliced transcript sequences against a version of the genome where all exon segments are hard-masked (i.e. replaced with N). We perform this mapping using MashMap 20, with segment size 500 and homology 80%. ```. Probably, change the first instance of ```homologous``` to '_identical_' and ```homology 80%``` to' _identity 80%_'. And I do not want to digress from the main issue or **take the sheen away from the great work from your group on the paper**.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/365#issuecomment-499542660:667,mask,masked,667,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/365#issuecomment-499542660,1,['mask'],['masked']
Availability,Hi @rob-p . Thanks for the elaborate answer - makes a lot of sense. The problem is that adapter contamination typically occures because the fragments were smaller than the sequence length we sequence into the adapters - and it can occur for a larger fraction of the reads (I've seen up to 50% of reads affected in the 3'end) making it non-negligible. That is why I suggested the extension in the first place. I think it makes a lot of sense to trim adapters away - both because they reduce the number of compatible reads - mostly because the failure to do so will result in an overestimation of the fragment length. . Now that I think about it I don't think we should trim reads based on quality as that will lead to an underestimation of the read length - or what do you think?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325:542,failure,failure,542,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-355909325,1,['failure'],['failure']
Availability,"Hi @rob-p . Thanks for the thanksgiving release of salmon. We saw salmon 1.3.0 for July 4th, salmon 1.4.0 for Thanksgiving, hopefully we would see 1.5.0 for Christmas and 1.6.0 for New Year :) . Keep up the great work. I see that you have salmon now available for ARM machines - https://github.com/COMBINE-lab/salmon/releases/tag/v1.4.0. As myself and @patrick-douglas has requested here - https://github.com/COMBINE-lab/salmon/issues/424 - the ability to compile salmon on ARM is great. A question: Will this work if I do a bioconda install or do I need to compile using the tar.gz file. I am using the ARM based conda from https://github.com/Archiconda/build-tools/releases/download/0.2.3/Archiconda3-0.2.3-Linux-aarch64.sh and with that I could do ; ``` ; conda config --add channels c4aarch64 && conda config --add channels defaults && conda config --add channels anaconda && conda config --add channels bioconda && conda config --add channels conda-forge ; ; conda install -c bioconda -c conda-forge -y nextflow bbmap numpy fastqc. ```. I don't see arch64 for salmon in bioconda here - https://anaconda.org/bioconda/salmon",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/556#issuecomment-734442247:250,avail,available,250,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/556#issuecomment-734442247,2,"['avail', 'down']","['available', 'download']"
Availability,"Hi @rob-p . Totally understood (even more severe current limitations here) - survey completed. I think there'll ""always"" be Illumina-level coding (we use it to multiplex samples or cells), but I suspect most (all?) wild-west method will be some form of using the one read for barcoding. So as long as I can stipulate which bases in the read are which kind of barcode (cell/molecular) that'd be a good start. Of course having more mature methods than the current [drop-seq protocol](http://mccarrolllab.com/wp-content/uploads/2016/03/Drop-seqAlignmentCookbookv1.2Jan2016.pdf) to error correct, remove poly-A, remove adaptor sequences etc. always very welcome. (I suspect @vals is onto something... I still struggle to be entirely convinced that UMIs, as currently used, have the long-term legs that some people think.)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-282741659:578,error,error,578,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93#issuecomment-282741659,1,['error'],['error']
Availability,"Hi @rob-p ; Yes, for now I'm just trying to run the getting started tutorial, I dowloaded and indexed the A. thaliana transcriptome, then I dowloaded the sequnecing data and run the quantification code:. `#!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; sailfish quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${samp}_2.fastq.gz \; 		 -p 8 -o quants/${samp}_quant; done `. `_Processing sample DRR016125. -bash: sailfish: command not found_`",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/508#issuecomment-614279802:278,echo,echo,278,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/508#issuecomment-614279802,1,['echo'],['echo']
Availability,"Hi @rob-p and all,. Thank you for the wonderful tool.; I've been using Salmon for some time now, and have encountered a question.; How is Salmon affected by different read lengths and adapters?. I have a dataset with 5%-15% adapters at 3' of read. How will salmon output be affected if:; 1) I don't remove them; 2) I trim all reads down; 3) use an adapter trimming program - resulting in reads with different length. . Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/634:332,down,down,332,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/634,1,['down'],['down']
Availability,"Hi @rob-p, ; I have successfully run the Salmon analysis, but I should add that the admin of the cluster utilized the executable you sent, but I used conda to install salmon 10.1, the executable you sent me for some reason didn't index the transcriptome correctly, I received the same error I initially started this post for...; Thank you so much for all of your help, I'll post here how it goes. :)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395416625:285,error,error,285,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395416625,1,['error'],['error']
Availability,"Hi @rob-p, ; So I can't update you on if it worked, because the cluster is using the 10.0 version (because we can't install from source), and I ran into this bug, ( Error in function boost::math::digamma<double>(double): numeric overflow] #229) for all of my samples, which you mention in the thread that this was fixed in the 10.1 version. Any idea when the binary for 10.1 will be out?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395108485:165,Error,Error,165,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-395108485,1,['Error'],['Error']
Availability,"Hi @rob-p, ; Thank you for getting back to me so quickly and thank you for the explanation. ; I found this info about the `--eqclasses ` parameter in the Salmon quant help manual for alignment-based mode:; <img width=""626"" alt=""Screenshot 2023-10-03 at 11 40 56"" src=""https://github.com/COMBINE-lab/salmon/assets/76558077/dc98c406-759f-4543-8cdd-5299d24775eb"">; Everything else I tried was a guess.; I wasn’t sure how to get the right file, so I thought it might be the **eq_classes.txt.gz** file, made using the `--dumpEq` option. I read about [—dumpEq option ](https://salmon.readthedocs.io/en/latest/salmon.html#dumpeq) and I found some explanation of [equivalence class file](https://salmon.readthedocs.io/en/latest/file_formats.html#equivalence-class-file). So, I made this file using the `--dumpEq` option and then used it with `--eqclasses` option, but I made mistake by also providing a BAM file with `-a` option. When I got the error, i thought maybe this file was supposed to be used instead of the alignment BAM file, not together with, and now i understand.; I'm still not clear: is this file only used when I want to analyze the same sample multiple times, with different options?; Also, I noticed the `--eqclasses` parameter isn’t in the help manual for salmon quant in mapping-based mode because it’s not there when I run `salmon quant --help-reads`.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/877#issuecomment-1744787632:937,error,error,937,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/877#issuecomment-1744787632,2,['error'],['error']
Availability,"Hi @rob-p, The version we see the fault on is Red Hat Enterprise Release 6.10 (Scientific linux). I have a version of ubuntu that I can test on but not sure when I can get around to it at the moment.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/337#issuecomment-458145886:34,fault,fault,34,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337#issuecomment-458145886,1,['fault'],['fault']
Availability,"Hi @rob-p,. As for our main goal, we are looking at the precision of Salmon versus biological PCR expectations of abundances. However, it is on a small number of genes as there have been some initial challenges with using ""accurate"" transcripts versus ""computational predicted transcripts"". Anyway, we hope to have this paper ready this year, but again I think we need to look at it from a different angle. While this project is a bit of a side project, my hope it that it will accomplish our initial goal and to provide the community with the general behavior of Salmon with different spliced types (i.e. Exon skipping, IR, AA, AD, etc). Again, it'll be on a small set of genes, but still should be interesting and hopeful can improve the future use of Salmon. I'll make sure to let you know when it is available.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/523#issuecomment-633099524:804,avail,available,804,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/523#issuecomment-633099524,1,['avail'],['available']
Availability,"Hi @rob-p,. I was finally able to grab some time to try running the beta version you linked (see attached logs). This certainly helped, although I'm still nowhere near a time-frame of ~30min. Here are my results:. The 31-mer running took a bit over an hour and consumed ~17GB of memory. This is about half the running time as the previous version, but approx. the same amount of memory requirement (more on that below). The 17-mer running, took 4.5hrs to complete and consumed ~64GB of memory. This particular running is again, about twice as fast, although the time really depends on the memory limitations I gave it. Since it appears that this version no longer crashes when given less than about 250GB of memory, I also tested with 32G and 16GB of memory, just to see what impact this would have on the times. Those jobs are still running (it's only been about 4hrs as of this writing, I'll update my post if/when they complete). Current logs are showing that they quickly consume all the available memory, but have not yet crashed. I've also got versions with 128-512GB of memory requested (by powers of 2) for comparison. Some random notes: both the 31-mer index experienced about twice as many soft page reclaims with the new/faster version and experienced a few hard page faults (the previous version saw none of the latter). The 17-mer version experienced fewer page reclaims than any of the 31-mer indices and far fewer than with the prior version. Again, a few page faults crept in, but relatively few by percentage and likely not contributing any significant amount of time overall. [index-qacct-17mer.log](https://github.com/COMBINE-lab/salmon/files/4246516/index-qacct-17mer.log); [index-qacct-31mer.log](https://github.com/COMBINE-lab/salmon/files/4246517/index-qacct-31mer.log). **UPDATE**; The 16GB version finished running. It actually only took a little over 4 hours to run, as well. The troubling thing about this job seems to be that, despite having successfully completed, accordi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/476#issuecomment-590516702:992,avail,available,992,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/476#issuecomment-590516702,1,['avail'],['available']
Availability,"Hi @rob-p,. Sure. Here are the metadata file and the R script file. Thanks again for your help. . https://send.firefox.com/download/2fbeef50b5ce0919/#Q8UXl4L0kXyjfGz03vyjsQ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/529#issuecomment-638672708:123,down,download,123,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/529#issuecomment-638672708,1,['down'],['download']
Availability,"Hi @rob-p,. Thanks for the speedy reply! There are definitely some strange things going on here. I can confirm that the second run (and the others that timed out) didn't produce any information about mapping. The outdir only contained empty subdirs + an empty log file:. ![image](https://user-images.githubusercontent.com/11418858/220816388-0a6272d4-a0c8-4e26-bf9f-15afda61cc44.png). 1. Thanks for the suggestion, I've now been investigating the potential of an index-related issue. Firstly, I downloaded the pre-built salmon index from refgenie using `refgenie pull hg38/salmon_sa_index`. I then ran `salmon quant` using this index and the singularity image of salmon v1.9.0. What, would you know: it worked in about 11 minutes. ```; <truncated>; [2023-02-23 14:46:31.892] [jointLog] [info] Aggregating expressions to gene level; [2023-02-23 14:46:32.452] [jointLog] [info] done; ```. This pre-built index does appear to be decoy-aware:. ```; [2023-02-23 14:38:21.709] [jointLog] [info] Number of decoys : 195; [2023-02-23 14:38:21.709] [jointLog] [info] First decoy index : 177412 ; ```. Secondly, I created a new transcriptome-only salmon index (`singularity run -B /data $SALMON_SIMG salmon index -t genome.transcripts.fa -i salmon_index -k 31`), then ran `salmon quant` again (as above) but using the new transcriptome-only index. Note: 'genome.transcripts.fa' is the transcripts file created during the `nf-core/rnaseq` pipeline. Again, this analysis completed properly in a reasonable time. Seems like there is something very wrong with the 'gentrome.fa' file that's being created by `nf-core/rnaseq`! It's just so odd that _some_ samples would work and others wouldn't. 2. It's definitely worth noting that I originally opted against using `star_salmon` with the following command:. ```; nextflow run nf-core/rnaseq --max_memory 55.GB --fasta /data/reference_genomes/GRCh38/Homo_sapiens.GRCh38.dna_sm.primary_assembly.fa.gz --gtf /data/reference_genomes/GRCh38/Homo_sapiens.GRCh38.106.gtf.gz -",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830#issuecomment-1441194948:494,down,downloaded,494,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830#issuecomment-1441194948,1,['down'],['downloaded']
Availability,"Hi @rob-p,. Thanks for the tip, using `--noErrorModel` indeed got rid of the error messages. Also, any advice regarding the best practices using salmon on nanopore data are welcome. Best,; Botond",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420553174:77,error,error,77,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-420553174,1,['error'],['error']
Availability,"Hi @rob-p,. Thanks for your reply. Yes I am using the salmon -> wasabi -> sleuth pipeline. The NaN error showed up at this step. `so <- sleuth_prep(s2c, extra_bootstrap_summary = TRUE, read_bootstrap_tpm = TRUE, num_cores = 1, filter_fun = my_filter)`. Sleuth complained that there are NAs in bootstrap values and then stopped. Therefore, I removed the two options that are related to processing bootstrap and it worked. `so<- sleuth_prep(s2c, num_cores = 1, filter_fun = my_filter)` . However, the following sleuth_fit step showed the same error. `so <- sleuth_fit(so, ~condition, 'full', which_var = 'obs_counts') `",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/529#issuecomment-638566265:99,error,error,99,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/529#issuecomment-638566265,2,['error'],['error']
Availability,"Hi @rob-p,. We ran the tests you requested and the main problem remains. The memory load is lower than before, but for some reason `Salmon` (0.8.2) only works in the SGE cluster we have access to when we increase the memory limits (just like 0.7.2). (Edit: we used 0.8.2 to build a new index). I'll ask the cluster admins as they might have a clue on how to proceed. ## Low memory test. ### bash script. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test3.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test3.$TASK_ID.txt; #$ -e ./logs/salmon_test3.$TASK_ID.txt; #$ -t 1-3; #$ -hold_jid pipeline_setup,step4-featCounts-alzheimer.gsk_phaseII; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test3/${ID}. echo ""**** Job ends ****""; date; ```. ### Example log file. ```; **** Job starts ****; Wed Mar 29 14:51:10 EDT 2017; **** JHPCE info ****; User: lcollado; Job id: 110315; Job name: step6-salmon_test3.gsk_phaseII; Hostname: compute-061; Task id: ; Version Info: This is the most recen",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965:701,echo,echo,701,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-290516965,7,['echo'],['echo']
Availability,"Hi @rob-p,. thank you for your quick answer. As mentioned already, I started with the full set of options (at least I thought so) and then reduced them to the minimal case to reproduce the error for reporting the problem.; I was mislead by the term 'unrecognized option' and didn't expect the program to ""forget"" options from other modes. But now that you stated that this is the case, I realized that the '-a' in front of the BAM file name was missing, which I overlooked before. After adding it the program at least started to run. (Although it ran into another crirical error, appearantly misinterpreting chromosome and supercontig names from the BAM file header generated by STAR as transcript names.). Maybe it would be a good idea to distinguish in the error messages between 'unrecognised' and 'inappropriate' options to provide a better clue to the user what went wrong.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/343#issuecomment-462761900:189,error,error,189,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/343#issuecomment-462761900,3,['error'],['error']
Availability,"Hi @rob-p,; thanks a lot for your investigation. Could you please be more verbose on those incorrect Build-Depends? What dependencies can be removed (if not used they should not really harm, thought but you are correct that it makes sense to remove these) and more importantly which can not be used. For instance if we can't use libstaden as packaged we have a problem. All preconditions for a Debian package have to be packaged first. Fetching something from network is not permitted at package build time.; Thus I simply tried changing the cmake options to. ```; $ cmake -DCMAKE_BUILD_TYPE=Release -DUSE_SHARED_LIBS=TRUE -DBZIP2_LIBRARIES=-lbz2 -DBZIP2_INCLUDE_DIR=/usr/include -DLIBLZMA_INCLUDE_DIR=/usr/include/ -DLIBLZMA_LIBRARY=lzma -DCMAKE_MODULE_PATH=/usr/share/cmake/Modules -DTBB_WILL_RECONFIGURE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE ..; ```. which does not change the SEGFAULT problem. If the issue belongs to something we need to download from somewhere please let me know what looks suspicious to you. This would be helpful since we could either add it to the Debian package source in debian/missing-sources ... or rather fix the predependency that would break salmon.; Kind regards, Andreas.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1464471988:942,down,download,942,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1464471988,2,['down'],['download']
Availability,"Hi @rudondamba,. Thanks for the report. At salmon v1.0.0, there was a breaking change in the index used in salmon. We moved from using the RapMap index to using a [pufferfish based index](https://github.com/COMBINE-lab/pufferfish). This means that, you'll want to rebuild your index using a recent version of salmon. Further, the move to the pufferfish index drops support for the FMD-like index, so you can remove the `--type` argument. With a new version of salmon you should be able to do:. ```{bash}; salmon index -t galGal6.gene+cluster+repBase+tRNA.fa -i SalmonIndex -k 31 -p 8; ```. the `-p` is optional and tells salmon to use 8 threads during indexing. Also, the default `k` is 31, so you don't need to pass that explicitly if don't want. Best,; Rob. P.S. It's worth noting that, even after this, there is still one small problem with your FASTA input file. You have an empty sequence name on line `30445`. More specifically, you have a record named `> NM_001318772.1_Unfound_-`. Note the space between the `>` and the record name. This is not allowed, and leads to an error in parsing the file. If you fix this header line, I can verify that the index builds successfully with the above command using the latest version of salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/694#issuecomment-892079287:1078,error,error,1078,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/694#issuecomment-892079287,1,['error'],['error']
Availability,"Hi @rudondamba,. The problem is that the sequence on line `30403` is parsed as ""empty"", since there is a space after the initial `>` and before the sequence name. This messes up the state of the underlying parser leading to the (in this case, uninformative) error message you are observing. If you fix the name online `30403`, then you should be able to index the transcriptome as expected. Let me know if this works for you. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/683#issuecomment-880059577:258,error,error,258,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/683#issuecomment-880059577,1,['error'],['error']
Availability,"Hi @s1corley . As @rob-p mentions, your paper could help assess different methodologies for quantification and also help optimize salmon further for QuantSeq. I would still like you to check if you have used salmon quant command line correctly for QuantSeq data analysis. Your paper briefly alludes to QuantSeq Forward in the Introduction section of the paper; >The QuantSeq Forward kit has an oligo (dT) primer which contains the Illumina-specific Read 2 linker ... but the Methods section of your paper does not specify if you have used QuantSeq FWD or REV. Page 14 of the PDF from the [Lexogen Website data analysis pipeline for QuantSeq FWD](https://www.bluebee.com/wp-content/uploads/2018/11/015UG108V0201-QuantSeq-Data-Analysis-Pipeline_2018-10-18.pdf) recommends using the below htseq command line. ```; htseq-count -m intersection-nonempty -s yes -f bam -r pos $bam; $resource_dir/annotation.gtf > $bam_dir/read_counts.txt; ```; > QuantSeq is a stranded protocol. For the QuantSeq FWD pipeline the argument -s yes indicates; > stranded in the sense orientation. For the QuantSeq REV pipeline -s reverse is used. Similar to the above htseq command line arguments, I think if you are using QuantSeq FWD, the` libType argument from salmon quant should have been SF` . One way I checked these with my datasets was to run the salmon quant command 3 times - once with `libType A`, once with` libType SF` and once with `libType SR` -- with QuantSeq FWD the estimated counts will be almost same with libType A and libType SF. I echo what @rob-p says - Congratulations once again on the paper.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/449#issuecomment-565653150:1528,echo,echo,1528,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/449#issuecomment-565653150,1,['echo'],['echo']
Availability,"Hi @sagnikbanerjee15,. It looks like you are providing the `-t` flag with the *reads* rather than the target transcriptome (i.e. set of reference transcripts). The error is saying that the target file does not contain the reference sequences listed in the bam file. The argument to the `-t` flag should be a FASA file that contains the sequence of the reference transcripts, and the names and lengths of those reference transcripts should match the names and lengths encoded in the BAM file. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270007151:164,error,error,164,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270007151,1,['error'],['error']
Availability,"Hi @schelhorn,. I've implemented these changes in the latest commit. Now, the behavior if fewer than 10 reads are assigned sample-wide will be to output a `quant.sf` file with all 0s and to record in the `meta_info.json` file the quant error that led to this output. Does this seem reasonable? Also, do you suggest that, even in this case, the return code be 0? In some sense, something very unexpected happened (i.e. you had no --- or by default, fewer than 10 --- mapping reads), so signifying that at the process level might be useful. However, if you require that every ""valid"" run of salmon return with code 0, I can see an argument against returning a non-standard status in this case.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/130#issuecomment-303472255:236,error,error,236,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/130#issuecomment-303472255,1,['error'],['error']
Availability,"Hi @seanken,. Thank you for reporting this. I agree this error message should always show up. My guess is that this is related to the fact that the error is reported through the asynchronous logger, which is notoriously picky about how it must be torn down to avoid dropping messages on atypical (non-zero) program exit. I'll see if I can make this one show up reliably. By the way, do you have a small pair of FASTQ files that will trigger this error?. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736#issuecomment-1018119606:57,error,error,57,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736#issuecomment-1018119606,5,"['down', 'error', 'reliab']","['down', 'error', 'reliably']"
Availability,"Hi @seboles ,. My guess is that the issue is related to this (non-salmon) error appearing before each salmon output:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; ```. it looks like there is an error in the way the paths to the files are being provided for the jobs, which is resulting in an incorrect command line being provided to salmon (and the index not being properly located). It's also of note that this is on the command line:. ```; -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz; ```. which is trying to expand a wildcard before read 1 but not read 2; is that intended?. Any idea what the output is if you run:. ```; #!/bin/bash -l ; #SBATCH -J male_salmon_map; #SBATCH -t 700:00:00; #SBATCH -p high; #SBATCH --cpus-per-task=24; source ~/.bashrc; source activate salmon; cd /home/seboles/abaloneraw/salmon_quantification/salmon_male/abalone_orfs/; ls -la salmon_index; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408#issuecomment-514816761:74,error,error,74,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408#issuecomment-514816761,2,['error'],['error']
Availability,"Hi @shalercr,. I agree that if each sample runs as quickly as you see here, it's not a big deal to just re-run them all. Note that, while my avoids ~116 times more (eventually-discarded) alignments than did yours, the difference in the number of discarded _fragments_ (i.e. fragments that had no mapping) is very small — ~7,000, or 0.023% of the fragments. Thus, despite the huge speed-up, I wouldn't expect many differences in the quantifications. However, I couldn't argue against re-quantifying everything with the new version just for good measure :). When you have a chance, please do let me know if you see this same performance difference using the pre-compiled (linux) binary [here](https://drive.google.com/file/d/1tPyOPW3Y8l86RS0-zBRLh0wCt3VTpkNw/view?usp=sharing). Of course, once we finalize this release (soon), we will push to bioconda so we will also have OSX binaries available. However, I just want to make sure this fixes things on your end as well before the release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/537#issuecomment-644796608:884,avail,available,884,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537#issuecomment-644796608,1,['avail'],['available']
Availability,"Hi @shanmugavadivelps,. This is because, to properly find and link libiconv, the build requires a version of CMake that ships with FindIConv.cmake. So, to build salmon from source, you should have at least CMake version 3.12. Internally and on our continuous integration servers, we use version 3.15. . Also, I'll mention that it may not be essential to build from source. Salmon is available via Bioconda, and a docker image is available via DockerHub. Also, we have a pre-compiled binary that should work on many linux distributions available under our [releases](https://github.com/COMBINE-lab/salmon/releases).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/453#issuecomment-557149581:383,avail,available,383,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453#issuecomment-557149581,3,['avail'],['available']
Availability,"Hi @shnmunk,. Yes, the `--noLengthCorrection` flag is recommended for nanopore based quantification. We expect (and generally observe) that there is not a fragmentation effect in ONT data. Therefore, it is recommended that you use the `--noLengthCorrection` flag with ONT data. You are correct that this make the setting of `--fldMean` and `--fldSD` irrelevant, since there is no length effect applied during the EM algorithm. The other point of note is that selective-alignment is not really designed for long reads, so folks typically use salmon with external alignment for quantifying long-read data (minimap2 is a popular choice). Currently, it's necessary to turn off the read error model `--noErrorModel` when processing long-read alignments, as the long read error profiles are very different form those of short reads. However, this is a temporary issue, as a long-read error model has been developed and is in the pipeline. For the time being though, `--noErrorModel --noLengthCorrection` is the relevant set of flags to get the best results with long-read RNA-seq (either cDNA or direct RNA). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/602#issuecomment-748729130:682,error,error,682,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/602#issuecomment-748729130,3,['error'],['error']
Availability,"Hi @silvanopiazza,. It would seem that this pre-compiled binary is making use of an instruction that is not available on the CPU on which you are executing `salmon`. In this case, there are a few alternatives:. * Try and run the command through a Docker image — the latest salmon is always available on [Dockerhub](https://hub.docker.com/layers/8712688/combinelab/salmon/latest/images/sha256-1c0b7e5b8a0996b6080cfc76fcd4e565f8c92689fe3cf1debc8b7493ae964c14?context=repo).; * Try and [install salmon via bioconda](https://anaconda.org/bioconda/salmon). The bioconda build may be making fewer assumptions about the target architecture than the pre-compiled github binary.; * Compile salmon from source locally. This will, of course, guarantee to only use instructions available on your hardware, though it's the most involved of these options.; ; Let me know if any of these work for you. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783#issuecomment-1143871440:108,avail,available,108,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783#issuecomment-1143871440,3,['avail'],['available']
Availability,"Hi @silvernano,. Though alignment stringency parameters can have an effect here, the problem of comparing the abundance of a specific transcript within the context of different annotations is more fundamental. That is, apart from the transcript of interest, the ""background"" of related transcripts may be different. Consider the following case:. You have an annotation with 2 transcripts annotated for your gene:. ```; [A, B, C]; [A,C]; ```. Where `A`, `B`, and `C` are exons and the `[A,B,C]` notation means the transcript is exon `A`, followed by `B`, followed by `C`. Now, imagine that in annotation 2, you just have:. ```; [A,C]; ```. That is, the other isoform `[A, B, C]` is missing from annotation 2. Now, imagine that, in reality, `[A,B,C]` is highly expressed in your sample and `[A,C]` is lowly expressed. Under annotation 1, you get (correct) high expression for `[A,B,C]` and low expression for `[A,C]`. However, in annotation 2, since you still have to describe the `A` reads and the `C` reads, you get high expression for `[A,C]` since the reads contained within `A` and within `C` still map well there — the reads that map to `B` and to the `A-B` and `B-C` junction will likely just go un-mapped (which explains a difference in mapping rate). Now if you compare `[A,C]` across databases ... you will see big differences. This is not really related to the alignments that are observed, but rather how the data (reads) must be explained conditioned on the transcriptome (annotation) you have available. In other words, in loci with substantial unannotated transcription, the annotation used can definitely have a considerable effect on the quantification results. How to best assess, detect, and mitigate these effects is an active area of research, but I can point you at papers like [this](https://www.life-science-alliance.org/content/2/1/e201800175) and [this](https://www.cell.com/cell-systems/pdfExtended/S2405-4712(19)30381-3).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/525#issuecomment-639057440:1505,avail,available,1505,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/525#issuecomment-639057440,1,['avail'],['available']
Availability,"Hi @sjackman , Thanks for you question. It is indeed a good observation to use salmon for combining separate CB and read-sequence fastq files.; Having said that, we have designed alevin to work with, and tested it on 10x-chromium `cellranger` pipeline which itself has a feature similar to mentioned above by you (enabled by flag `--dumpfq`). This feature takes in two separate files: one with CB+UMI and another with read-sequence, and performs initial whitelisting (knee based , more intelligent whitelisting happens downstream and needs deduplicated UMI counts or one can just optionally provide external whitelist), error corrects the CB, attaches it to the header (although not with tag `BX:Z`) of the read-sequence in the second file, and dumps it to the standard out. I might have to read a bit about `longranger` and its `FASTQ` format, but if you are familiar with the `longranger` pipeline and are sure that it uses 16+10 (CB+UMI) in one file and read-sequence in the second file, then I think you are good to try alevin with `--dumpfq` flag. Let us know how it goes and if you face any problem. . Note: Just put an extra flag `--noQuant` so that alevin knows to stop after dumping the fastq otherwise it will start performing downstream tasks.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284:519,down,downstream,519,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395174284,3,"['down', 'error']","['downstream', 'error']"
Availability,"Hi @sjroth , I think it's a warning (not error) with unstranded library, can you share the file `salmon-out/lib_format_counts.json` ?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/753#issuecomment-1045154961:41,error,error,41,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/753#issuecomment-1045154961,1,['error'],['error']
Availability,"Hi @sjroth,. This is strange. I'll ping @k3yavi here to see if he has any thoughts about what might be going on.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/753#issuecomment-1045150809:35,ping,ping,35,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/753#issuecomment-1045150809,1,['ping'],['ping']
Availability,"Hi @sschmeier,. I just pushed a small improvement and bugfix that constitutes 0.8.2. I will make a PR to Bioconda for this. I had to add some stuff to the build file to comply with upstream requests for homebrew-science, so now 0.8.2 should make its way into both Bioconda and homebrew-science. I'll ping back here and close this issue when it's available. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/128#issuecomment-287486743:300,ping,ping,300,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/128#issuecomment-287486743,2,"['avail', 'ping']","['available', 'ping']"
Availability,"Hi @tamuanand & @k3yavi,. Actually, I think the `makefasta` bedtools command we use accepts a gff file directly (https://bedtools.readthedocs.io/en/latest/content/tools/maskfasta.html). So, it might make sense to have a flag (or automatically detect, but that can be error prone), and only run the line Avi links above if we have a GTF. If we have a BED or GFF file, we can just pass it directly to bedtools.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/384#issuecomment-503627124:169,mask,maskfasta,169,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/384#issuecomment-503627124,2,"['error', 'mask']","['error', 'maskfasta']"
Availability,"Hi @tamuanand ,. I don't understand the question. I think there is some mis understanding, genome is the decoys you have to just cat it with the transcriptome to create the gentrome, no extra processing is required. Unless, your suggestion is to maintain the concatenated transcriptome + genome in a tar ball ? If it is then I don't really see the use case as both the genome and transcriptome can be easily downloadable from either ensembl or gencode.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/444#issuecomment-550387405:408,down,downloadable,408,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/444#issuecomment-550387405,1,['down'],['downloadable']
Availability,"Hi @tamuanand,. Ok, it seems something simple with the preparation of the decoys.txt file. I'm looking into it. If you watch the log, you see the following output before the (intentional exit with status code 1):. ```; [2020-04-14 09:44:12.991] [puff::index::jointLog] [critical] The decoy file contained the names of 955 decoy sequences, but 953 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [2020-04-14 09:44:13.304] [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; Command exited with non-zero status 1; 56.66user 9.14system 1:04.69elapsed 101%CPU (0avgtext+0avgdata 6902936maxresident)k; 3792inputs+16outputs (30major+3629051minor)pagefaults 0swaps; ```. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/505#issuecomment-613451792:430,error,errors,430,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/505#issuecomment-613451792,6,"['down', 'error']","['downstream', 'error', 'errors']"
Availability,"Hi @tamuanand,. Thanks @k3yavi for pointing out the major idea. Just to fill in some more details. The implementation of SA is, as Avi mentions, part of the mainline salmon code now (in the develop and master branch). We link, in the README, to some pre-constructed decoy-aware transcriptomes, but you can build your own for any organism where you have the transcriptome, the genome, and an annotation, using the script Avi linked to. There are a few ways to enable selective alignment, and the details are listed with the relevant flags in the release notes (we will be updating the documentation shortly with more detailed examples as well). Specifically, you can pass salmon the `—validateMappings` flag, which turns on selective alignment with some reasonable default parameters. You can, instead, pass the flag `—mimicBT2`, which is a meta-flag that enables selective alignment, and turns on a few other things that make the alignments more similar to the Bowtie2 parameters we discuss in the paper (e.g. it disallows orphan alignments). Finally, there is the `—mimicStrictBT2` flag, which mimics Bowtie2 parameters that disallow indels; however, we generally don’t recommend this flag unless you have a particular reason for using it. For any of these, once you’ve built a decoy-aware index, you need not do anything else special during quantification. We’ll ping back here with more details once we have more examples in place etc.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/365#issuecomment-499303095:1365,ping,ping,1365,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/365#issuecomment-499303095,1,['ping'],['ping']
Availability,"Hi @tharvesh — The error suggests that memory allocation failed when trying to build the suffix array. I'm guessing from what I can tell from the log (e.g. the fact that the 64-bit index is being invoked, suggesting the input contains > 2^31 nucleotides), that you actually tried to build an index on the GENCODE **genome** plus a set of extra transcripts. Salmon (unlike Cufflinks, but like RSEM, TIGAR, eXpress, etc.) should be used with the **transcriptome**, not the **genome** of the target organism. That is, if you want to use GENCODE (say, in human), you should be indexing either (ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_24/gencode.v24.transcripts.fa.gz) or (ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_24/gencode.v24.pc_transcripts.fa.gz), not e.g. (ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_24/GRCh38.primary_assembly.genome.fa.gz).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/39#issuecomment-176783177:19,error,error,19,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/39#issuecomment-176783177,1,['error'],['error']
Availability,"Hi @tillea and @nileshpatra, thanks for the report (and ping). Can you point me to a Docker / Singularity container of the relevant Debian build so I can try and reproduce locally? This will make debugging much easier. For example, I am unable to reproduce this issue building the latest release from the `master` branch using the latest [official Debian image](https://hub.docker.com/_/debian). In particular, release 1.10 addresses a rare (but stubborn) segfault that certainly was present in 1.9. However, the fix for this is in the corresponding tagged release of pufferfish, which is pulled in by the build script when salmon is built.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1462538853:56,ping,ping,56,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1462538853,1,['ping'],['ping']
Availability,"Hi @tillea and @nileshpatra,. Ok, I dug deeper and found out what's going on. The culprit is, in fact, `libcereal`. The problem is that `libcereal` bumped patch versions only since the version corresponding to the headers included in `pufferfish`, but their changes are not, in fact, backwards compatible! This lead to a version mismatch between the headers used in `pufferfish` and the headers found from the installed package, ultimately resulting in an assertion failure in `rapidjson` (which cereal is using) and a segfault. On the plus side, this was relatively easy to fix by bumping the included cereal headers in pufferfish. I also updated the `Findcereal.cmake` module and added a version constraint so that we now require the new version (1.3.2). This is now tagged and released as `salmon 1.10.1`. Please give that a go when you have a chance. I'll note that, before this is added upstream in debian, I'd still advocate for fixing the `libstaden` package to update to the new version. I'd also recommend moving to dependencies like the ones I've included above to remove some really antiquated dependencies that salmon no longer requires but are still being pulled in. Thanks!; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1465096711:466,failure,failure,466,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1465096711,1,['failure'],['failure']
Availability,"Hi @tillea,. It seems this is exactly the problem. The build deps here are not quite correct. There are dependencies that salmon no longer has, and some of the dependencies it does have are out of date and can't be used from upstream (e.g. libstaden in the latest version, among others). On the bright side, it's not the dynamic linking alone that is problematic. The following works fine on my end:. ```{bash}; $ docker pull debian:testing; $ docker run -it debian:testing; $ echo ""deb-src http://deb.debian.org/debian unstable main"" > /etc/apt/sources.list.d/10-debsrc.list; $ apt-get update; $ apt-get upgrade; $ apt-get install build-essential git libboost-all-dev liblzma-dev libbz2-dev cmake zlib1g-dev curl unzip wget libcurl4-openssl-dev libtbb-dev libtbb12 liblzma-dev libjemalloc2 pkg-config libgff-dev; $ wget https://github.com/COMBINE-lab/salmon/archive/refs/tags/v1.10.0.tar.gz; $ tar xaf v1.10.0.tar.gz; $ cd salmon-1.10.0; $ mkdir build && cd build; $ cmake -DCMAKE_BUILD_TYPE=Release -DUSE_SHARED_LIBS=TRUE -DBZIP2_LIBRARIES=-lbz2 -DBZIP2_INCLUDE_DIR=/usr/include -DLIBLZMA_INCLUDE_DIR=/usr/include/ -DLIBLZMA_LIBRARY=lzma -DCMAKE_MODULE_PATH=/usr/share/cmake/Modules -DTBB_WILL_RECONFIGURE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE ..; $ make -j8; $ make install; $ make test; ```. This is preferring dynamic linking, and the resulting installed executable runs fine without a segfault. Can you try this on your end? Then the thing to do may be to find what is discordant between the packages I install above and what gets pulled in by `apt build-dep salmon`. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1464182279:477,echo,echo,477,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1464182279,1,['echo'],['echo']
Availability,"Hi @tillea,. So I went through the list of deps pulled in by `apt build-dep salmon` and the minimal set I gave above. I tried to make the smallest number of changes I could to the `apt build-dep salmon` list while also removing things that are clearly outdated (we no longer use jellyfish, rapmap, etc. and we use the header-only version of spdlog). As a result I came up with this list of dependencies. The offending dependency seems to be `libcereal-dev`. Specifically, I was able to install just this list of dependencies (minus `libcereal-dev`) atop a clean `debian:testing` and get a working version where the only thing downloaded from the internet was the appropriate version of the pufferfish files grabbed by `fetchPufferfish.sh` in the `1.10.0` release. Once I installed `libcereal-dev` with `apt-get install`, and rebuilt, then I got the segfault mentioned at the top of this issue. So, it seems that we either have to let `salmon` build it's own libcereal, or figure out what the problem is with the library upstream. Please let me know if this you observe this same behavior as well (also @nileshpatra may want to try this out). If so, perhaps we can get `libstaden` updated upstream, and then use this as the new dep list for `salmon`. I installed these deps with a simple `xargs apt-get install -y < deps_sorted_updated.txt` (without `libcereal-dev` for the working version, and with it included, as below, for the segfault). Best,; Rob. [deps_sorted_updated.txt](https://github.com/COMBINE-lab/salmon/files/10949233/deps_sorted_updated.txt)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1464986376:626,down,downloaded,626,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1464986376,2,['down'],['downloaded']
Availability,"Hi @tmmse,. I have a feeling this is a python 2 vs. python 3 issue. I just ran your data through the script without problem on my end, but my default python install is still 2.7. When using a Python 3 install, I get the same error you're seeing. I updated the script so that it should now be python3 compatible. You can find that version [here](https://github.com/COMBINE-lab/salmon/blob/develop/scripts/ConvertBootstrapsToTSV.py). Please let me know if it works for you. These changes should be in the next release as well (which should land soon).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336901461:225,error,error,225,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/47#issuecomment-336901461,1,['error'],['error']
Availability,"Hi @tomsing1,. Thanks for following up on this --- I was scratching my head about why multiple libraries might be causing an issue. Both `--seqBias` and `--gcBias` are relatively new features, and have definitely undergone more testing under the ""quasi-mapping"" codepath than the alignment-based codepath (though it's passed our internal regression tests on both). That being said, bias correction is equally valid regardless of whether you're using quasi-mapping or quantifying from a bam file directly. I'd be happy to take a look if you can provide a small example (a subset of the reads in the bam file?) that triggers the behavior. One thought might be that, for some reason, positions in the bam file could disagree with what's provided in the corresponding fasta. However, that's just a guess and I'd have to try and debug the segfault once I can reproduce it. Thanks again for the detailed error report and the update!. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738431:898,error,error,898,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738431,1,['error'],['error']
Availability,"Hi @vals,. This is very interesting, as we've been doing quite a bit of testing and (to the contrary) have found v0.4.0 to perform substantially _better_ than v0.3.x. Out of curiosity, could you check how v0.4.0 performs _without_ `--useVBOpt`? Obviously, if you continue to see this regression, I'll be happy to try and dig down deeper, but I might need you to provide some testing data. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111538228:325,down,down,325,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111538228,1,['down'],['down']
Availability,"Hi @vals,; I'm still trying to track down this bug and figure out why it occurred in the first place. I've been working on a different way to deal with reclaiming the resources that caused the problem before and was wondering if you'd be willing to test the attached binary to see if it still segfaults on your data. ; Thanks! [SalmonBeta-0.6.1_DebianSqueeze.tar.gz](https://github.com/COMBINE-lab/salmon/files/87914/SalmonBeta-0.6.1_DebianSqueeze.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-171038135:37,down,down,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-171038135,1,['down'],['down']
Availability,"Hi @vasisht,. Actually, the settings of these flags aren't incorrect according to the [SAM spec](https://samtools.github.io/hts-specs/SAMv1.pdf):. > Bit 0x4 is the only reliable place to tell whether the read is unmapped. If 0x4 is set, no assumptions can be made about RNAME, POS, CIGAR, MAPQ, and bits 0x2, 0x100, and 0x800. That is, if the unmapped flag is set, then there is not a specific ""correct"" setting for these other fields, since they should most likely be ignored anyway. That being said, concordant with some small changes in the [most-recent RapMap](https://github.com/COMBINE-lab/RapMap/releases/tag/v0.4.0), the CIGAR string will be set to `*` for unmapped reads in future versions of Salmon. We may consider setting other fields to `*` for unmapped reads to simplify the output, but, as the SAM spec suggests, these fields offer quite a bit of freedom in terms of ""legal"" values if the unmapped flag is set anyway.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/94#issuecomment-250350189:169,reliab,reliable,169,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/94#issuecomment-250350189,2,['reliab'],['reliable']
Availability,Hi @vbontempi96 — I don't know how bioconda is actually handling building for the new Mac archs. I'll ping @dpryan79 who would know what's currently being done and what the plan is.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-984930979:102,ping,ping,102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-984930979,1,['ping'],['ping']
Availability,"Hi @vertesy ,. Thanks for asking the very interesting question.; I'd say the answer might depend on what's your downstream use case. Traditionally, no quantification pipeline, in my knowledge, has used the pre-mRNA counts alone to bump up the gene counts, however, recent method of estimating RNA-velocity does utilizes the intronic counts for extracting the ratio of spliced/unspliced counts. If you are interested in disjoint signals (gene count matrix) for spliced and unspliced molecules you can use the recent scheme of decoy indexing from our latest [preprint](https://www.biorxiv.org/content/10.1101/657874v2). We (mostly @csoneson) have been testing alevin with following scheme for generating spliced and unspliced counts. 1.) Spliced Counts: Index transcriptome w/ pre-mRNA sequence as the decoys.; 2) Unspliced Counts: Index pre-mRNA sequence w/ transcriptome as the decoys. The third case is a little tricky because if you index both pre-mRNA and transcriptome, due to relatively longer length of pre-mRNA sequence compared to transcripts it might end-up biasing the UMI deduplication algorithm towards unspliced counts. To summarize, the best way to have an additive spliced and unspliced counts is still an open area of research.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/450#issuecomment-555136444:112,down,downstream,112,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/450#issuecomment-555136444,1,['down'],['downstream']
Availability,"Hi @vivekabarath,. The final v0.12.0 has been released and is available via both the release page on github and via bioonda, so I recommend you use the official version. Regarding your specific question, the failure of the unit tests should not be a problem and doesn't affect salmon. However there was previously an issue that could cause the `make test` to fail if `make install` was not run first. This should be resolved in the latest release as well. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569:62,avail,available,62,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315#issuecomment-444971569,2,"['avail', 'failure']","['available', 'failure']"
Availability,"Hi @warrenmcg — Thanks for your interest in Salmon. There are actually a number of improvements since the pre-print as well! I'm very surprised as well that `curl` is not available by default on Ubuntu 14.04 (or some variants of the installation). It's actually a very common tool. One thing worth noting is that we also provide [pre-compiled binaries](https://github.com/COMBINE-lab/salmon/releases/tag/v0.6.0) for Linux and OSX, if users aren't looking for the ""bleeding-edge"" version of Salmon, or if their environment causes difficulty in compiling.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/42#issuecomment-186706128:171,avail,available,171,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42#issuecomment-186706128,1,['avail'],['available']
Availability,"Hi @warrenmcg,. Thanks for this bug report. This error is caused by the `--useVBOpt` argument. The telltale sign that this is the cause is that the exception contains the text `Exception : [Error in function boost::math::digamma<long double>(long double): Evaluation of function at pole -nan]; salmon quant was invoked improperly.` The digamma function is used only in the `useVBOpt` codepath. . I can say that this behavior is never expected (i.e. it's not the case that due to the stochastic nature of the algorithm we sometimes expect to evaluate the digamma function on an argument of `-nan`). Actually, even if one could set a randomization seed, he could not make salmon purely deterministic unless it was restricted to a single thread. This is because the order in which reads are observed during the online phase of the algorithm can change, as a result of the multithreaded read parser (which is _ok_ since the absolute order of the reads in the file is, itself, random). What I suspect is that there is some corner case here where the argument to the `digamma` function should be checked for validity before the `digamma` function is called. The key, of course, is to find a small example that will reproduce this behavior so that the bug can be tracked down and fixed. In the meantime, my recommendation would be to remove the `--useVBOpt` option to Salmon. In this case, it will use the standard (rather than variational Bayesian) EM algorithm, which should yield similarly accurate results.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/48#issuecomment-196848149:49,error,error,49,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/48#issuecomment-196848149,3,"['Error', 'down', 'error']","['Error', 'down', 'error']"
Availability,"Hi @yeodynasty,. There are two different ways to tackle this question. The first relies on the fact that the correction employed by salmon for GC bias is done via the adjustment of transcript effective lengths. Here, you could compare the effective length in the quant.sf file to the effective length you would get ignoring GC-fragment (or other bias). Granted, the latter is not written down in the file here, but it is straightforward to calculate since salmon also writes out the fragment length distribution. ; The effective length discarding bias estimates is simply the transcript length, minus the mean of the conditional fragment length distribution (the fragment length distribution from 0 up to the transcript length, re-normalized to be an appropriate probability distribution). If you look at the differences between these values, you can infer how much bias correction was applied. Specifically, when the bias-corrected length is longer than the non bias-corrected length, then these transcripts are over-represented in sequencing and the bias correction aims to reduce their estimated abundance. On the other hand, when the bias-corrected length is shorter than the non bias-corrected length, then these transcripts are under-represented in sequencing and the bias correction aims to increase their estimated abundance.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/578#issuecomment-717267531:388,down,down,388,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/578#issuecomment-717267531,2,['down'],['down']
Availability,"Hi @yeodynasty,. This is because of the unfortunate conventions regarding the parsing of command line options in the presence of a flag that has an _implicit_ option. Specifically, the `--writeMappings` flag has an implicit option. Therefore, to provide an explicit option to the long-form argument flag, you must use the syntax `--writeMappings=<outputdir>`. So, your command would look something like:. ```; /gpfsdata/apps/salmon-latest_linux_x86_64/bin/salmon quant; -i /gpfshome/hockchuan/SALMON/GCF_900626175.2_cs10_index; -l ISR; -1 /gpfsdata/JangiLab/hockchuan/170302/2.Trimmomatic_output/clean_HEADBANDSTEM_1.fastq.gz; -2 /gpfsdata/JangiLab/hockchuan/170302/2.Trimmomatic_output/clean_HEADBANDSTEM_2.fastq.gz; --seqBias; --gcBias; --posBias; --incompatPrior 0.0; --geneMap /gpfsdata/JangiLab/hockchuan/cs10_reference_genome/GCF_900626175.2_cs10_genomic.gtf; --recoverOrphans; --allowDovetail; --threads $NSLOTS; --dumpEq; --minScoreFraction 0.65; --writeMappings=/gpfshome/hockchuan/SALMON/MAP/HEADBANDSTEM; --fldMean 250; --fldSD 25; --writeOrphanLinks; --writeUnmappedNames; --quiet; -o /gpfshome/hockchuan/SALMON/HEADBANDSTEM_quant; ```. let me know if this resolves your issue. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/573#issuecomment-709323564:868,recover,recoverOrphans,868,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/573#issuecomment-709323564,1,['recover'],['recoverOrphans']
Availability,"Hi All,. I downloaded the Salmon index as well as `tgMap` from refgenie for the mm10 genome using the following. ```; ## get index and tgmap from refgenie; wget -O mm10SalmonIndex.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/salmon_sa_index; gunzip mm10SalmonIndex.gz. wget -O mm10tgMap.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/tgMap; gunzip mm10tgMap.gz; ```. The index is surprisingly large, though, as compared to using `salmon index` on just the mm10 transcripts. In addition, when I try using it with `alevin`, it is returning the following error. ```; (base) Koens-MacBook-Pro:data koenvandenberge$ /Applications/salmon/bin/salmon alevin -l ISR \; > -1 SRR1853178_1.fq.gz \; > -2 SRR1853178_2.fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/722:11,down,downloaded,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722,2,"['down', 'error']","['downloaded', 'error']"
Availability,"Hi Andrea,. The bias correction time depends on the number of expressed transcripts. There is a flag to speed it up `--biasSpeedSamp`. It takes a value by which to downsample the fragment length pmf for bias modeling. The larger this number, the faster bias correction will become. The default is 1, and is super conservative (we are probably going to make the default 5 in the next release because it is much faster with no real difference in modeling quality). In fact, values up to at least 10 seem to work quite well with respect to the baseline. So, I'd recommend testing this parameter on a sample until you are happy with the speed, and then using that on all samples. Let me know how it goes, and if my description makes sense. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/201#issuecomment-369766969:164,down,downsample,164,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/201#issuecomment-369766969,1,['down'],['downsample']
Availability,"Hi Andreas,. So I don't know if there is a easy way to get the specific list of reverse dependencies, but then we can cross-check it with my explicit list above:. ```; build-essential; git ; libboost-all-dev ; liblzma-dev ; libbz2-dev ; cmake ; zlib1g-dev ; curl ; unzip ; wget ; libcurl4-openssl-dev ; libtbb-dev ; libtbb12 ; liblzma-dev ; libjemalloc2 ; pkg-config ; libgff-dev; ```. One thing I noticed during build is that, while I included `libjemalloc2` here, the salmon build procedure still downloaded and built `jemalloc`. However, I don't _think_ jemalloc is the thing causing the segfault. Regarding dependencies that can't be used — the current `libstaden` is behind the upstream release. The upstream release contains an important bug fix for a bug (and suggested fix that we proposed to the developer) upon which we rely. More importantly, afaik there is no relevant `libpufferfish-dev` package (we certainly have not made one), and so there is not even e.g. a check in the `CMakeLists.txt` file. Salmon's build always tries to run `fetchPufferfish.sh` to download the relevant `pufferfish` source files needed to build `salmon`. Critically, the relevant `pufferfish` dependencies and `salmon` releases move in lockstep. Each new `salmon` release it accompanied by a new tag in the `pufferfish` repo (so that the specific source used to build a given `salmon` release is fixed and easily trackable). So, I think the easiest way to move forward is to:. * do a diff of my list of packages above with what is pulled in by `apt build-dep salmon`. * figure out why, even when `libjemalloc2` is installed, the build system tries to build `jemalloc` itself (maybe we need the dev package?). * determine what folks want to do upstream about the lockstep pufferfish dependency. Right now, the `fetchPufferfish.sh` script pulls a tagged tarball from github and checks that the sha matches, and moves the relevant source files into place. This is true both when we build our own releases as well as",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1464538233:499,down,downloaded,499,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1464538233,1,['down'],['downloaded']
Availability,"Hi Avi, thanks for your detailed explanation!. From my understanding: a pre-selection of high-quality cells based on 1) CB frequency - finding the knee point (in the initial whitelisting) and 2) other features (in finalized/intelligent) whitelisting is performed in alevin, while [cell ranger count](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/algorithms/overview#cell_calling) does step 1) related to the `--expectCells` number and used an alternative method w/o knee point estimation. . Based on above, the newly included cells w/ increased number of `--expectCells` are also more likely to be filtered out in later steps using criteria such as `min of number of features/reads` detected per sample. But such filtering may not be expected if interests are also on cells with small transcriptomes such as TILs. I will try some downstream filtering to see how many good cells I can get. . Yeah it helps - thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/396#issuecomment-510639440:870,down,downstream,870,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/396#issuecomment-510639440,1,['down'],['downstream']
Availability,"Hi Avi,. Thanks for the detailed reply. I was able to run it (see logs below), but I had to use `ISR`, not `ISF` to get it to work. I also had to add these two settings as well; `--freqThreshold 1 --lowRegionMinNumBarcodes 100`. . I am not sure why the `ISF` option didn't work, but probably it has something to do with the guide sequences I was provided. At any rate, I have a few other questions I hope you can help me answer. 1. Why does increasing --maxNumBarcodes to 200000 results in no barcodes getting corrected? (See log for Run 2 below). What is the rationale for the current default of 100000? ; 2. For the downstream analysis of such data, I usually work with both the read and UMI counts, but `quants_mat.gz` only contains the UMI counts. Can Alevin a produce a matrix of read counts as well. It would be a great feature to add. For now, what is easiest way to get the cell x feature matrix of read counts if I use the ` --dumpEq` or `--dumpBfh` flags? Can *tximport* be used for this or do I need to use the Python [parser]([https://github.com/k3yavi/vpolo/blob/master/vpolo/alevin/parser.pyl]) first?. I will be sending you some reads from the experiments for unit testing shortly. Thanks!. Run 1: `salmon alevin -l ISR --citeseq --barcodeLength 16 --umiLength 10 --end 5 --featureStart 19 --featureLength 21 --maxNumBarcodes 100000 --freqThreshold 1 --lowRegionMinNumBarcodes 100`. > 20-06-04 12:24:47.610] [alevinLog] [info] set CITE-seq minScoreFraction parameter to : 0.797619; > [2020-06-04 12:24:47.610] [alevinLog] [info] Found 64 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); > [2020-06-04 12:24:47.610] [alevinLog] [info] Filled with 64 txp to gene entries ; > [2020-06-04 12:24:47.610] [alevinLog] [info] Found all transcripts to gene mappings; > [2020-06-04 12:24:47.616] [alevinLog] [info] Processing barcodes files (if Present) ; > ; > [2020-06-04 12:26:04.322] [alevinLog] [info] Done barcode density calculation.; > [2020-06-04 12:26:04.322] [alev",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/531#issuecomment-638991199:618,down,downstream,618,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531#issuecomment-638991199,2,['down'],['downstream']
Availability,"Hi Bill,. You probably shouldn't be including the transcript version number (the; trailing . 2) when using grep, to be safe. It's possible that you could; have a different transcript version so there isn't any profit in being so; exact. Jim. On Fri, Oct 12, 2018, 9:03 PM wedelma <notifications@github.com> wrote:. > Hi Rob,; >; > Thanks to both you and Jim for helping with this, since I'm the one who; > actually need some help. I've tried indexed using v0.11.0 then the latest; > version. Both, with the same transcriptome you tried doesn't result in; > duplicates when I grep ""ENST00000617214.2"". Telling me I'm getting a; > different result from your grep. I don't know why. I will be downloading; > the latest version of the human transcriptome and using latest salmon to; > index, and I should see these duplicate transcripts in the duplicate; > clusters file, like you did, likely resolving my issue. We had older data; > which is why I used an older version of the human transcriptome, which I; > will not be doing anymore. I'll keep you posted and thanks for the help!; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429498684>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AFqmvIVbfG6l9DaQQiKnkYPO1UGGQQ90ks5ukTvAgaJpZM4XaDfK>; > .; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429499670:690,down,downloading,690,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429499670,1,['down'],['downloading']
Availability,"Hi Brian,. In general, I would argue that one should be cautious with removing PCR duplicates in RNA-seq data (unless you are dealing with reads with UMI tags). This is because reads that align to the same reference position can easily have come from alternative transcripts sharing the same underlying sequence. Hence, the normal tests used to infer PCR duplicates with e.g. DNA-seq reads can yield false-positives in RNA-seq. This is particularly true for highly abundant transcripts (or transcripts from highly-abundant genes). We are currently working on the code that will do duplicate removal when UMI tags are present. That methodology can be extended to remove duplicates even without UMI tags --- though I'd generally caution against that for the reasons mentioned above. However, for the time being, if you have a strong need or desire to filter PCR duplicates, you could use alignment-based Salmon with a BAM file that has duplicates removed. Finally, regarding the error you are getting during SAM validation; this sounds like a different issue. Would you mind providing a piece of that SAM file for me to take a look at? Specifically, I don't believe the quasi-mapping output file should even contain unmapped reads (unless you consider unmapped mates of orphaned reads). --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-305317281:977,error,error,977,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-305317281,1,['error'],['error']
Availability,"Hi Gert,. Indeed, the CMake build uses `curl` for downloading relevant dependencies. Presumably, it would be possible to have a fallback to `wget` if `curl` is not available. I will look into the best way to do this. In the meantime, you should be able to use the pre-compiled binary for linux (x86-64) or install Salmon via [bioconda](https://anaconda.org/bioconda/salmon). Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-354673470:50,down,downloading,50,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-354673470,2,"['avail', 'down']","['available', 'downloading']"
Availability,"Hi James,. Indeed! No problem. Looking at the older annotation, it seems that the transcripts have slightly different lengths:. ```; >ENST00000617214 ensembl:known chromosome:GRCh38:CHR_HSCHR8_8_CTG1:1973878:2006943:1 gene:ENSG00000273645 gene_biotype:protein_coding transcript_biotype:protein_coding. >ENST00000320248 ensembl_havana_transcript:known chromosome:GRCh38:8:1973878:2006936:1 gene:ENSG00000176595 gene_biotype:protein_coding transcript_biotype:protein_coding; ```. I don't know if that's the _only_ difference between them or if they are spliced differently in the middle etc. Both salmon and seqkit only check for *exact* sequence duplication. If you wanted to try to dig more into what might be causing the differences you might consider `<salmon_quant_folder>/aux_info/ambig_info.tsv` which lists the transcripts in the same order as `quant.sf` but gives for each the number of uniquely mapping reads and the total number of potential reads. You could see if the unique evidence for the txps changes between conditions. However, given that Ensembl has changed their mind about these guys, maybe that's not a rabbit hole worth going down. Anyway, glad I could help!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429506265:1148,down,down,1148,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429506265,1,['down'],['down']
Availability,"Hi Jason,. Thanks for the super-detailed feedback! A couple of thoughts / questions:. > FYI, I am getting a segfault when I run only --posBias in the current salmon version, but if I run all the models together like --gcBias --seqBias --posBias, it completes fine. ~~Do you have a small example (ref / read pair) that reproduces this? It would be great to figure out why and fix it. We could split that into a new issue if you'd rather.~~. P.S. Nevermind; thanks to you mentioning this, I was able to track it down and fix it in develop!. > As I understand the selective alignment, the alignment scores are passed to the quantification step, but the position of the reads is not used downstream. . Well, yes and no. We make extensive use of the position when estimate the implied fragment length (distance between paired end reads) and then model the conditional probability of this fragment based on the global fragment length distribution. This is just as much as is done by e.g. RSEM. However, you are right that there is no notion of using the coverage profile in estimation (more on this below)!. > Also, my intuition for these transcripts is not really a coverage ""bias"" . My intuition agrees with yours here completely. First, this isn't really a coverage bias as we use the normal definition of the term. Second, the positional bias modeling in salmon is not on a per-transcript level (since that would be an astronomical number of different parameters to learn, and any procedure would almost certainly overfit). Instead, it groups transcripts into length bins, and learns a distinct coverage bias model per-bin. > It would be neat if Salmon could detect these kinds of dramatic dropoffs and add a warning or something... even if not incorporating the information into the quants... it could even be a good QC step to identify large deletions/insertions over a gene body. As far as I know, there are NO rnaseq quant programs that would handle this, because even something like a STAR -> RSEM ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/514#issuecomment-623047035:510,down,down,510,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514#issuecomment-623047035,4,['down'],"['down', 'downstream']"
Availability,"Hi Kimon,. I was able to access the file with no problem. Unfortunately, I don't seem able to reproduce the issue! I grabbed the 0.7.1 release, in case there were any differences between that and the latest develop version that I usually use, and I tried to index your fasta. ```; ./salmon index -t ~/salmon/build/Homo_sapiens.GRCh37.transcripts.fa -i idx; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; index [""idx""] did not previously exist . . . creating it; [2016-11-04 12:41:37.805] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 30000 transcripts[2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000415118], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000434970], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.312] [jointLog] [warning] Entry with header [ENST00000448914], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000439842], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000390567], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000452198], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [ENST00000390569], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2016-11-04 12:41:39.380] [jointLog] [warning] Entry with header [EN",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912:404,avail,available,404,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100#issuecomment-258484912,2,['avail'],['available']
Availability,"Hi Kivanc,. Thanks for the kind words, and thank you for the _extremely detailed_ report. Reports like this are a model of what every developer wishes a user did before filing an issue :). First, let me clear up what seems like might be a small source of confusion. Since both of the salmon runs are from v1.1.0, _neither_ of these are making use of quasi-mapping. Specifically, newer versions of salmon _only_ perform selective alignment (and this makes the `--validateMappings` command line argument redundant in newer versions, though we keep it so as to maximize backward compatibility with command line parameters people may be using). So, the main difference between your two salmon runs is inclusion of the decoy set. This almost certainly means that the reads that map in your second set of salmon runs but not your first are being assigned to decoys in the first case. To try and get a better handle on this, could you upload a `meta_info.json` file from both runs? This file lives in the `aux_info` directory, and it will provide information about e.g. how many reads were best mapped to decoys and were discarded for this reason. The guarantee you get from the selective alignment is that, if the fragment is discarded by decoy mapping, it maps _strictly better_ to the decoy than to the non-decoy sequence. There are many reasons this could happen. One is rRNA contamination, another could be that reads are coming from processed pseudogenes that are not properly in your annotation, yet a third is that your sample has a considerable fraction of reads spanning exon-intron junctions (in this case, the read will map better to the corresponding location on the genome, and worse to the annotate transcript where the intronic sequence is not present). Now, figuring out exactly which of these cases you are in is a bit more difficult, but one approach would be to pick one of the samples with the biggest differences and map to the reads to the genome with e.g. STAR or HISAT2 to see what y",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/479#issuecomment-578848875:502,redundant,redundant,502,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479#issuecomment-578848875,2,['redundant'],['redundant']
Availability,"Hi Kristoffer,. The duplicate transcript issue is a frustrating one. It came to our attention when we noticed that ensembl often annotated transcripts on patch / haplotype contigs that were identical and unlikely to be different from more ""canonical"" transcripts in any way. Further, these transcripts are indistinguishable from the quantification perspective. That being said, the removal of sequence duplicate transcripts is optional in Salmon. If you pass `--keepDuplicates` to the indexer, it wont remove them. Also, Salmon does record, in the index directory, the ""collapsing map"". Specifically, there is a tsv file that record, for every collapsed transcript, the transcript that was sequence identical and retained in the index. You can use this map to recover the abundances for the collapsed transcripts, since they are all sequence identical, they should all have an abundance of x / num duplicates (where x is the abundance of the retained transcript). I hope this info helps. Let me know if there is anything else i can clarify or help with. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-381580235:760,recover,recover,760,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-381580235,1,['recover'],['recover']
Availability,"Hi Laurent,. I typically like to keep master compilable, which is why I pushed the boost 1.59 change after 1.57 became available on the previous host. If you're going to be compiling from source, v0.5.0 should be fine if you're using a system boost (and so don't have to fetch and compile one through CMake). Otherwise, it should be OK to compile from master, which currently doesn't have any substantial changes from v0.5.0. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-153182461:119,avail,available,119,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-153182461,1,['avail'],['available']
Availability,"Hi Mike,. Glad to hear this fixes it. I pushed a commit that does the check, prints out a useful error message (that suggests how you can make a compatible transcriptome fasta) and then bails. Regarding the `libParams` directory --- that is actually a somewhat anachronistic directory anyway. Currently, I've been moving all of the parameters into their own (gzipped) files in the `aux_info` directory. I've kept `libParams` there for backward compatibility sake, but I think it's confusing if the fld appears in multiple places, but the other parameters appear somewhere else, so perhaps it's time to remove it (and note such in the next version's release notes).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267610178:97,error,error,97,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267610178,1,['error'],['error']
Availability,"Hi Mohsen,. Thanks for looking into this!. I'm attaching a small dataset to reproduce the issue. I extracted the reads aligned to the region in the screenshot above (the snR40 transcript) for that sample. I've included two fasta files, one with the standard snR40 transcript, and one that has a second transcript called snR40_genomic which includes upstream/downstream sequences. Based on the image above, you would expect >90% of the reads to apportion to the smaller transcript, but instead I see the reads going ~50/50 when I run salmon on the fasta file with both indexes. . I've included an ""index"" folder with a script to build each index and a salmon.sh script to reproduce my results. My salmon binary version is 1.2.1. Please let me know if this works for you, or if you need anything else from me. Happy to share the full fastq files if that's helpful too. Thanks,; Jason. [snr40_example_github.gz](https://github.com/COMBINE-lab/salmon/files/4761633/snr40_example_github.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/514#issuecomment-642307073:358,down,downstream,358,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514#issuecomment-642307073,1,['down'],['downstream']
Availability,"Hi Nate,. Can you tell me / do you know how boost was compiled? The error you're getting looks like what happens when the version of boost against which salmon is attempting to link was not built with >= C++11. Basically, the newest version of salmon requires C++14 (which GCC 8 obviously supports). However, there are binary incompatibilities between pre-C++11 and post-C++11 code libraries. So, whatever version of boost you link against must have been compiled with at least `--std=c++11`. One option is to let salmon fetch and build boost for you by putting `-DFETCH_BOOST=TRUE` in the cmake configuration flags when calling `cmake`. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436830925:68,error,error,68,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436830925,1,['error'],['error']
Availability,"Hi Pete,. Yup, this would be my recommended way to handle it. Since salmon accepts streaming input, you could do something like:. ```; salmon quant -i index -l A -1 <(gzcat rep1_muliplex1_1.fq.gz rep1_mutliplex2_1.fq.gz) -2 <(gzcat rep1_multiplex1_2.fq.gz rep1_multiplex2_2.fq.gz) [other options etc.]; ```. to avoid creating the intermediate concatenated files on disk. This will treat all the multiplexed samples from the same replicate as one giant input read stream (conceptually representing a single replicate). As far as merging / combining Salmon output, if you're doing the downstream analysis in R, the tximport package is nice. Otherwise, @vals has a python tool [readquant](https://github.com/Teichlab/readquant) that can also do some merging. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/88#issuecomment-245412770:583,down,downstream,583,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/88#issuecomment-245412770,1,['down'],['downstream']
Availability,"Hi Rachel,. So it looks like `output/hs.grch39.index/versionInfo.json` doesn't exist here? Are there any other messages that show up during indexing? Also, v0.8.1 is very outdated at this point. It might be worth checking if this issue is still popping up if you grab the latest version (available both as a linux binary from the releases page, as well as via bioconda).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467194457:288,avail,available,288,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197#issuecomment-467194457,1,['avail'],['available']
Availability,"Hi Rob and team. I am obtaining the following errors in some of my samples but not all and I cannot figure out what is happening. I am using salmon to see if specific genes are present (apart from a general quantification). I. In order to do that I run the following code:; Code (example):; `salmon quant -l A -i /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/spikein/Flox5YFP0_B07_R/index -p 6 -o /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/bcbiotx/tmpTest2/quant -1 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R1_Flox5YFP0_B07_R.trimmed.fastq.gz) -2 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119:46,error,errors,46,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119,2,['error'],"['error', 'errors']"
Availability,"Hi Rob!; I think I got it, I might have posted too soon, I was too eager to run the latest Salmon :). Basically, for the first part of my question, if anyone else happens to run into here:; To successfully run Salmon Index 1.0.0+, three inputs are required:; 1. Transriptome FASTA; 2. Concatenated Transcriptome+Genome FASTA; 3. List of decoys (most likely the list of all contigs from the Genome FASTA); So on from version 1.0.0, any supplementary scripts aren't needed (as you properly specified in your latest instructions). . Regarding the second part of my question, the ERCC contigs and the error that Salmon Index gave:; The reason for this was that my ERCC entries look like this:; `ERCC-00002 ERCC exon 1 1061 0.000000 + . gene_id ""ERCC-00002""; transcript_id ""ERCC-00002"";`; i.e. the contig name and the transcript name is identical. ; This means that there will exist an entry in the Transcriptome FASTA file labeled as ERCC-00002, and an entry in the Genome FASTA file labeled as ERCC-00002.; Then, in the concatenated Transcriptome+Genome FASTA, there will first be transcript sequence ERCC-00002, and then a genome sequence ERCC-00002, which is labeled as decoy. ; Hence the error: non-decoy, then some decoys, then again the ERCC-00002 as non-decoy. So my solution here was just to omit the ERCC entries both from the decoy list and from the genome FASTA that gets concatenated to the transcriptome. They're still kept in the transcriptome FASTA, as this allows to look for expression results of these transcripts for downstream absolute normalization. Thanks for the answer Rob!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/481#issuecomment-583888968:597,error,error,597,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/481#issuecomment-583888968,3,"['down', 'error']","['downstream', 'error']"
Availability,"Hi Rob, . Thank you for the fast reply. I did some tests and ran the suggestions you told me. Everything comes down to the reference i used. The mapping rates are still low (44 - 54 %) but they have increased when I mapped the reads with Salmon allowing for more genes in the reference. Thank you for the useful suggestions though, I will incorporate them in my future evaluations.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/212#issuecomment-379253109:111,down,down,111,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/212#issuecomment-379253109,1,['down'],['down']
Availability,"Hi Rob, ; After successfully finishing my DE analysis on gene expression, I want to use the package IsoformSwitchAnalyzeR which as mentioned here [https://github.com/COMBINE-lab/salmon/issues/214](url) must utilize the `--keepDupicates ` argument when indexing the transcriptome with gencode annotations. As I read this only after, I need to re-run my analysis, but would *really* like to use the initial version 10.1 which I have installed as well as which is on the cluster. When I enter the conda environment, I receive an update that the newest version is available and I should update.. is there any way to force salmon to index the transcriptome with the current (10.1) version? . ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; salmon v0.10.1; ```; Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/262:560,avail,available,560,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262,3,['avail'],['available']
Availability,"Hi Rob, thanks for the quick reply.; I tried what you suggested and I tried with adding the bioconda channel but still got the same error, however adding the conda-forge and bioconda channels to the conda config solved it. Maybe it needed access to conda-forge to find the boost and libcxx packages?. ```; $ conda config --add channels conda-forge; $ conda config --add channels bioconda; $ conda create -n salmon salmon=0.9.1; Solving environment: done. ## Package Plan ##. environment location: /Users/Jb_Macbook/miniconda3/envs/salmon. added / updated specs: ; - salmon=0.9.1. The following packages will be downloaded:. package | build; ---------------------------|-----------------; tk-8.6.7 | 0 3.0 MB conda-forge; mkl_random-1.0.1 | py36_0 371 KB conda-forge; boost-1.64.0 | py36_4 304 KB conda-forge; libiconv-1.15 | 0 1.3 MB conda-forge; clangdev-4.0.0 | default_0 62.8 MB conda-forge; bzip2-1.0.6 | 1 145 KB conda-forge; xz-5.2.3 | 0 304 KB conda-forge; certifi-2018.1.18 | py36_0 143 KB conda-forge; pip-9.0.3 | py36_0 1.7 MB conda-forge; tbb-2018_20171205 | 0 404 KB conda-forge; boost-cpp-1.64.0 | 1 16.2 MB conda-forge; ncurses-5.9 | 10 1.1 MB conda-forge; jemalloc-4.5.0 | 0 4.1 MB bioconda; salmon-0.9.1 | 1 2.6 MB bioconda; numpy-1.14.2 | py36ha9ae307_1 4.0 MB; sqlite-3.20.1 | 2 1.4 MB conda-forge; setuptools-39.0.1 | py36_0 552 KB conda-forge; llvmdev-4.0.0 | default_0 100.9 MB conda-forge; icu-58.2 | 0 22.7 MB conda-forge; readline-7.0 | 0 383 KB conda-forge; libcxx-4.0.0 | 1 1.1 MB conda-forge; zlib-1.2.11 | 0 95 KB conda-forge; libxml2-2.9.8 | 0 1.9 MB conda-forge; wheel-0.31.0 | py36_0 62 KB conda-forge; python-3.6.5 | 1 13.9 MB conda-forge; mkl_fft-1.0.1 | py36_1 146 KB conda-forge; ------------------------------------------------------------; Total: 241.7 MB; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379821279:132,error,error,132,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379821279,2,"['down', 'error']","['downloaded', 'error']"
Availability,"Hi Rob,. Finished compiling and it no longer throws that error. Thanks for the help!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110488164:57,error,error,57,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110488164,1,['error'],['error']
Availability,"Hi Rob,. I checked the cdna.fa files I downloaded from Ensembl and indeed there is a difference. In Ensembl v.75 the version number was not included in the fasta header, in v.91 it is.; e.g. . grep ENST00000518611 *cdna.ncrna.fa; Homo_sapiens.GRCh37.75.cdna.ncrna.fa:>ENST00000518611 cdna:novel chromosome:GRCh37:8:26247878:26268564:1 gene:ENSG00000104765 gene_biotype:protein_coding transcript_biotype:protein_coding; Homo_sapiens.GRCh38.91.cdna.ncrna.fa:>**ENST00000518611.5** cdna chromosome:GRCh38:8:26390362:26411048:1 gene:ENSG00000104765.15 gene_biotype:protein_coding transcript_biotype:protein_coding gene_symbol:BNIP3L description:BCL2 interacting protein 3 like [Source:HGNC Symbol;Acc:HGNC:1085]. while in the gtf file the transcript_id is still ENST00000518611 and version transcript is indicated separately. The gtf file does not have transcript_id ENST00000518611.5. just ENST00000518611. I don't mind parsing the gtf file to a tsv mapping. If I want to use a tsv file, what should be its format - just 2 columns - first one with transcript ID (just as it appears in the fasta file - in this case ENST00000518611.5) , second one with the gene ID?. Thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/198#issuecomment-365984195:39,down,downloaded,39,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/198#issuecomment-365984195,1,['down'],['downloaded']
Availability,"Hi Rob,. I did some follow up using your suggestions, and I had indexed my; transcriptome incorrectly, but now it appears that I am having a separate; issue and was hoping that you might be able to point me in the right; direction? Here is my command:. ```#!/bin/bash -l; #SBATCH -J male_salmon_map; #SBATCH -t 150:00:00; #SBATCH -p high; #SBATCH --cpus-per-task=24; source ~/.bashrc; source activate salmon; cd /home/seboles/abaloneraw/salmon_quantification/SALMON_MALE/; for i in *.qc.fq.gz; do; salmon quant -i maleredabalone_index --libType IU -1 *R1_001.qc.fq.gz -2; *R2_001.qc.fq.gz ${i} -o ${i}_quant --seqBias --gcBias --validateMappings; done```. And here is the error message that I receive:. ```[2019-07-29 14:31:12.352] [jointLog] [error] You passed paired-end files; to salmon, but you passed 12 files to --mates1 and 13 files to --mates2.; You must pass the same number of files to both flags; Name : male_salmon_map; User : seboles; Partition : high; Nodes : c11-71; Cores : 24; GPUs : 0; State : FAILED; Submit : 2019-07-29T14:31:01; Start : 2019-07-29T14:31:02; End : 2019-07-29T14:31:13; Reserved walltime : 6-06:00:00; Used walltime : 00:00:11; Used CPU time : 00:00:09; % User (Computation): 54.66%; % System (I/O) : 45.33%; Mem reserved : 2000M/core; Max Mem used : 0.00 (c11-71); Max Disk Write : 0.00 (c11-71); Max Disk Read : 0.00 (c11-71)```. I have gone back and checked the directory containing the PE reads, and; they are all accounted for, so I am a little stumped at the moment. I; appreciate any advice you may have. Happy Monday,. Sara. On Wed, Jul 24, 2019 at 3:04 PM Rob Patro <notifications@github.com> wrote:. > Hi @seboles <https://github.com/seboles> ,; >; > My guess is that the issue is related to this (non-salmon) error appearing; > before each salmon output:; >; > basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; >; > Try 'basename --help' for more information.; >; >; > it looks like there is an error in the way the paths to the files ",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408#issuecomment-516173395:672,error,error,672,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408#issuecomment-516173395,2,['error'],['error']
Availability,"Hi Rob,. I don't have git (don't have root access on the red hat server im on). I downloaded the salmon-master.zip, and then tried running the following:. ```; [bernsteinnj@lngnode1 salmon-master]$ cmake . . -- The C compiler identification is GNU 4.4.7; -- The CXX compiler identification is GNU 4.4.7; -- Check for working C compiler: /usr/bin/cc; -- Check for working C compiler: /usr/bin/cc -- works; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++; -- Check for working CXX compiler: /usr/bin/c++ -- works; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; CMake Error at CMakeLists.txt:69 (message):; Salmon requires g++ 4.7 or greater.; ```. I'm trying now with -k 27 with the original build I had. Keep you updated. Best",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082:82,down,downloaded,82,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-203018082,2,"['Error', 'down']","['Error', 'downloaded']"
Availability,"Hi Rob,. I have downloaded the cdna and ncrna from ENSEMBL ftp site and merged, got the gtf file from the same site:. `http://useast.ensembl.org/info/data/ftp/index.html` . **Replaced the version issue as follows:** forward slash before dot, git removed it; >sed -i 's/\.[123456789]//g' Homo_sapiens.GRCh38.87.cdna.ncrna.fa`. **Indexed it:** ; >`salmon index -t Homo_sapiens.GRCh38.87.cdna.ncrna.fa -i Homo_sapiens.GRCh38.cdna.ncrna.quasi.index`. `Did alignment:`. >`salmon quant -i /data1/genome/hg38_r87/Homo_sapiens.GRCh38.cdna.ncrna.quasi.index -l ISR -1 1013_S7_R1_001.fastq.gz -2 1013_S7_R2_001.fastq.gz -p 8 -o 1013_quant -g /data1/genome/hg38_r87/Homo_sapiens.GRCh38.87.chr.gtf`. **Tried this too:**; >`salmon quant -i /data1/genome/hg38_r87/Homo_sapiens.GRCh38.cdna.ncrna.quasi.index -l ISR -1 1013_S7_R1_001.fastq.gz -2 1013_S7_R2_001.fastq.gz -p 8 -o 1013_quant -g /data1/genome/hg38_r87/Homo_sapiens.GRCh38.87.gtf`. Got this error:; >`[2017-03-01 14:52:23.285] [jointLog] [warning] couldn't find transcript named [ENST00000615101] in transcript <-> gene map; returning transcript as it's own gene; `; Did this: ; >`(rseqpipe) [ddjima@jima:1013_quant]$ grep ""ENST"" quant.genes.sf | wc -l; >21370; (rseqpipe) [ddjima@jima:1013_quant]$ grep ""ENSG"" quant.genes.sf | wc -l; >56934; `. Seems don't find gene name for 21370 transcript ... Any idea?. Thank you very much!!!!!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283453800:16,down,downloaded,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283453800,2,"['down', 'error']","['downloaded', 'error']"
Availability,"Hi Rob,. I made such a stupid mistake, it is embarrassing to write it down, and I am ashamed of having wasted your time. Last time I used Salmon was to process a murine Chromium dataset... Copy/paste fossil ... :-( ; Time to call it a day.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/572#issuecomment-708555196:70,down,down,70,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/572#issuecomment-708555196,1,['down'],['down']
Availability,"Hi Rob,. I'm compiling it now. I ran into a different issue with this commit that took a little bit to track down. It looks like you switch from jellyfish 2.1.3 to 2.2.0. I was running into an issue with some undefined values, eraise and a few associated classes from jellyfish include/jellyfish/err.hpp that were present in 2.1.3 and seemingly removed in 2.2.0. Making it use 2.1.3 instead of 2.2.0 let it get past that point in the compilation (still ongoing). I'll get back to you about the impact of that commit.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110484917:109,down,down,109,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110484917,1,['down'],['down']
Availability,"Hi Rob,. I'm running from the empty directory 'build'. The cmake file and folder you mention are not there. . I downloaded here https://github.com/COMBINE-lab/salmon/releases: salmon-0.12.0_linux_x86_64.tar.gz. Unpacked it. Went into directory 'salmon-0.12.0_linux_x86_6'. Created new dir build/ (same level as bin and lib). Installed cmake with sudo apt-get. Attempted to run cmake from build/. . If I just type 'cmake':; Usage. cmake [options] <path-to-source>; cmake [options] <path-to-existing-build>. Specify a source directory to (re-)generate a build system for it in the; current working directory. Specify an existing build directory to; re-generate its build system. Run 'cmake --help' for more information. So it looks installed I would think.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449066012:112,down,downloaded,112,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449066012,1,['down'],['downloaded']
Availability,"Hi Rob,. I've been running another group's samples (single-end, second-strand protocol), and I have a script that iterates through each sample and runs salmon. I'm running the latest version (0.6.0) with the following arguments: salmon quant -i salmon_index --libType SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT --numBootstraps 100 --useVBOpt --useFSPD --geneMap $GENES --biasCorrect -p 59. During the EM iteration step (soon after the 500th round, when salmon recalculates effective lengths), I get this error: . ```; [jointLog] [info] iteration 500, recomputing effective lengths; [jointLog] [info] iteration = 500 | max rel diff. = 64.1299; Exception : [Error in function boost::math::digamma<long double>(long double): Evaluation of function at pole -nan]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. I can't tell if this is just a regular possible occurrence with the non-deterministic algorithm or if this is never supposed to happen. These particular samples are extremely high depth (about ~170-190M reads per sample), so that might be the cause, but I don't understand enough of how the algorithm works to know how to troubleshoot or to put together a toy dataset that reproduces the error. Rerunning the sample that causes the error often works. If I can throw in a feature request here, it would be great to be able to set the seed to make the runs deterministic. Is that possible?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/48:501,error,error,501,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/48,4,"['Error', 'error']","['Error', 'error']"
Availability,"Hi Rob,. I've been trying to update the bioconda package, but I can't get it to build. The bioconda package pulls in gperftools so Salmon gets built with tcmalloc, to fix some problems over NFS on CentOS < 6: https://github.com/chapmanb/bcbio-nextgen/issues/1376 I can get that to work by pulling in libunwind, but I end up with a bunch of linking errors I don't know how to fix. I could use a hand debugging it. Alternatively, and maybe easier, we could use the Linux binary if it was built with tcmalloc. Is there any chance the Linux binary could get built with tcmalloc?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/89:348,error,errors,348,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/89,1,['error'],['errors']
Availability,"Hi Rob,. Thanks for your reply. When I run salmon --version I get this:. ```; <jemalloc>: MADV_DONTNEED does not work (memset will be used instead); <jemalloc>: (This is the expected behaviour if you are running under QEMU); salmon 1.10.2; ```. I'm running the script using Nextflow in a Docker container. However whether I run the script locally, within Nextflow or on a HPC cluster, it weirdly runs using salmon v0.14.1 (despite me specifying in my environment.yml file to use 1.10.2) and gives the same error. I also installed Salmon through a bioconda channel, not sure if that has any impact. On your last point - I haven't noticed different versions being used but I'll look out for this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881#issuecomment-1766370214:506,error,error,506,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881#issuecomment-1766370214,1,['error'],['error']
Availability,"Hi Rob,. Thanks to both you and Jim for helping with this, since I'm the one who actually need some help. I've tried indexed using v0.11.0 then the latest version. Both, with the same transcriptome you tried doesn't result in duplicates when I grep ""ENST00000617214.2"". Telling me I'm getting a different result from your grep. I don't know why. I will be downloading the latest version of the human transcriptome and using latest salmon to index, and I should see these duplicate transcripts in the duplicate clusters file, like you did, likely resolving my issue. We had older data which is why I used an older version of the human transcriptome, which I will not be doing anymore. I'll keep you posted and thanks for the help!. Regards,. Bill Edelman",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429498684:356,down,downloading,356,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429498684,1,['down'],['downloading']
Availability,"Hi Rob,; That seemed to be the problem. I rebuilt the index on my laptop and salmon worked perfectly on my laptop!; Thanks,; Grant. On Mar 22, 2018, at 6:21 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi @grantcramer<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fgrantcramer&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=w1ED%2B5ZBUY6Z8fTiIs62IZJizv0HcvVzw8CtfEdK32E%3D&reserved=0>,. I was able to successfully index and map against the fasta file you link above (on linux). I was also able to index and map against the index on OSX, using the salmon from bioconda (v 0.9.1). So, I'm not yet able to reproduce this. It seems the file you uploaded for your pre-built index is no longer available, so I couldn't try that out. I'd be happy to give it a try if you can put it up on dropbox or some such. Otherwise, I wonder if there could be some sort of binary compatibility issue. Did you build the index on the same machine you're quantifying on? The OSX I tested on is 10.13.1. Best,; Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FCOMBINE-lab%2Fsalmon%2Fissues%2F209%23issuecomment-375509050&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=5XDT2ix1q1Uz%2B3kTchI%2B5K9Hzu7UuGkyQAz8KB9ko4o%3D&reserved=0>, or mute the thread<https://na01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAj0RizznzcCphH-HJ9Q8uXvndQ4Lsg9Oks5thE43gaJpZM4Sw28q&data=01%7C01%7Ccramer%40unr.edu%7C54d34feceb114e30a61b08d5905c7a7b%7C523b4bfc0ebd4c03b2b96f6a17fd31d8%7C1&sdata=7DLxrFx74WqeN71%2Bs5cfSxEA1NRxj%2F7uqvp9SrGgjck%3D&reserved=0>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375683475:821,avail,available,821,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209#issuecomment-375683475,1,['avail'],['available']
Availability,"Hi Rob,; since dog [as well as cow and pig] is not well-annotated compared to human and mouse, I cannot post a link to the transcriptome fasta because, to the best of my knowledge, there is none officially provided/curated by a consortium for the current dog assembly. I downloaded the Ensembl annotation from UCSC (assembly: canFam3; track: Ensembl Genes; table: ensGene) and selected as output ""sequence - all upper case - repeat masking: lowercase"". That results in a transcriptome fasta of approx. ~350MB; Good luck with your deadline!. +Peter",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/66#issuecomment-233659056:271,down,downloaded,271,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66#issuecomment-233659056,2,"['down', 'mask']","['downloaded', 'masking']"
Availability,"Hi Rob. I thought about this a little bit more. I am confused. We build the index from decoys. My understanding is that only reads that map to the decoy will be quantified. I am surprised to see that the name for mapped reads would show up in the unmapped_names.txt file. It seems like I need to use something like. Grep -v “$d”. to find the reads that did not map. Is this correct? I have been given the task of exploring our unmapped reads. Running grep is not a big deal. I just want to make sure I do not mess up my downstream analysis. By the way our lab is a huge fan of Salmon. ctrl.1.unmapped]$ cut -d "" "" -f 2 aux_info/unmapped_names.txt | sort | uniq -c; 519916 d; 39097 m1; 34534 m2; 747447 u. Kind regards. Andy. From: Rob Patro ***@***.***>; Reply-To: COMBINE-lab/salmon ***@***.***>; Date: Thursday, May 6, 2021 at 1:53 PM; To: COMBINE-lab/salmon ***@***.***>; Cc: ""andrew e. davidson"" ***@***.***>, Mention ***@***.***>; Subject: Re: [COMBINE-lab/salmon] salmon --writeUnmappedNames produced undocumented result (#657). Hi @aedavids<https://github.com/aedavids>,. Thanks for catching that this is undocumented! This means that the mapping type was determined as mapping to a decoy sequence. When we added this output into the code, the documentation wasn't updated accordingly. We'll update the documentation. Best,; Rob. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/657#issuecomment-833857753>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AN3VWAQ35L6PU3DKXYIM4ODTML6TPANCNFSM44HLOFXQ>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/657#issuecomment-833928924:520,down,downstream,520,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/657#issuecomment-833928924,2,['down'],['downstream']
Availability,"Hi Roy,. I looks like things are going awry during seq-specific bias correction. Can you remove that option and see if it rubs to completion? If so, it would be great if you can share a sample that reproduces this error so we can fix the underlying issue. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144#issuecomment-319665072:214,error,error,214,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144#issuecomment-319665072,1,['error'],['error']
Availability,"Hi Ryan,. Thanks for your kind words regarding salmon! First, I'll point out that *if it is desired*, you can also use STAR+Salmon in much the same way you've used STAR+RSEM (though STAR+salmon will be faster). To your question, if you want to use salmon's built-in selective-alignment, while choosing a k-mer length for this data, then the general rule of thumb is that the k-mer length should not be much longer than about half of the read length. In general, the alignment procedure and ultimate quantification are pretty robust to the specific choice of k, but you may want to try out a few values for one or two samples. Given these read lengths, I'd probably choose a value in {21, 23, 25}. If you have any follow-up questions after looking at those results, I'd be happy to discuss further!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/807#issuecomment-1293620131:525,robust,robust,525,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/807#issuecomment-1293620131,1,['robust'],['robust']
Availability,"Hi Ryan,. The difficulty is, indeed, exactly as you specify. Given a single-end read, one does not know the length of the _fragment_ from which it originates. In this case the ""right"" thing to do (the best thing we can do) is to consider the read as starting / ending a fragment of every possible length allowed by the user-provided fragment length distribution (with the contribution of each possible fragment weighted by the probability of observing a fragment of that length). In order to make this computationally feasible, one would have to do some clever pre-computation and thing a bit more about how to efficiently update the observed GC model (right now, each mapping contributes a single weight to the model, but under the naive implementation in the single-end case, each mapping would contribute different weights to each bin of the observed GC-bias curve, which would slow things down considerably). Also, as you point out, the quality of the correction would depend somewhat on the user providing appropriate parameters for the fragment length distribution mean and standard deviation — but this seems reasonable in the single-end case. That being said, I'm sure there's a way to handle this efficiently, I'd just have to think about it a bit. Regarding your second question; Salmon learns the fragment length distribution in paired-end data, but not with single-end data. Single-end data can provide a little bit of information (e.g. there is in upper bound on fragment lengths that one can infer based on single-end reads based on how far they map from the end of the transcript), but not enough information to reliably infer a fragment length distribution. cc @mikelove in case he has any thoughts on this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243833424:893,down,down,893,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-243833424,4,"['down', 'reliab']","['down', 'reliably']"
Availability,"Hi Salmon developers,. I wonder if Salmon can handle both paired-end reads, and single-end orphan reads from the same library as inputs. These inputs reads are from trimmomatic outputs, which would generate 4 files: Paired-end reads both pass QC, and 2 of the orphan forward or reverse reads that also passed QC. . In my project, I found that for all of my 49 samples (~25M PE reads/sample), I had about ~70% of reads from each sample are Paired-end both pass QC, and another ~25% are orphan reads (expectedly majority are forwarded reads). 25% seems to be too big for me, so I was thinking to utilize those orphan reads. . Since I wasn't sure if Salmon can handle these inputs in the same run, I initiated 2 runs of salmon, one for PE, one for SE, as follows:; ```; # Mapped PE pass QC; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_PE/ --joblog logs/salmon_map_PE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l IU \; -1 data/qc/{}_O1_paired.fastq.gz \; -2 data/qc/{}_O2_paired.fastq.gz \; -p 8 \; --validateMappings \; --recoverOrphans \; --allowDovetail \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/{}_quant &. # Mapped SE pass QC; # --fldMean and --fldSD is set based on the PE run results; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_SE/ --joblog logs/salmon_map_SE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l U \; -r data/qc/{}_O1_unpaired.fastq.gz data/qc/{}_O2_unpaired.fastq.gz \; -p 8 \; --validateMappings \; --fldMean 265 \; --fldSD 105 \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/SE/{}_quant &; ```; But I wasn't sure if the outputs can be directly combined by addition. From TPM definition, I don't think it can be added together for the same transcript of in the same sample. But can I use the NumReads column from the 2 runs, and add them together and then re-generate the combined TPM?. Thank you very much!. Jincheng",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/675:1055,recover,recoverOrphans,1055,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/675,1,['recover'],['recoverOrphans']
Availability,"Hi Salmon team!. I am encountering multiple issues while attempting to run Salmon Index (v1.10.1) with the --features option using a Transcript FASTA file in TSV format. Despite my efforts to address the problems, I am still facing errors at different stages of the process. 1. CRITICAL ERROR: The length of all the feature sequences should be the same.; - I made sure that all feature sequences in the TSV file have the same length. However, the error persists. 2. CRITICAL ERROR: The feature sequences should be unique.; - I carefully checked for and removed any duplicate feature sequences in the TSV file. Despite this, the error still occurs. 3. 8 Segmentation fault (core dumped) Error in piping. Pipe statuses: 139. I suspect this issue is memory-related, but even on systems with sufficient memory, the error persists.; I followed the official documentation for Salmon and ensured the correct version of the tool was used. The input data is also in the proper format. However, I am still unable to complete the Salmon Indexing process with the --features option. Any assistance in resolving these issues or suggestions on how to proceed would be greatly appreciated. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/865:232,error,errors,232,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/865,8,"['ERROR', 'Error', 'error', 'fault']","['ERROR', 'Error', 'error', 'errors', 'fault']"
Availability,"Hi Salmon team. Are there plans afoot to support quantification of scRNA-seq data with unique molecular identifiers (UMIs)? UMIs are very commonly used in scRNA-seq data now, and correct quantification requires ""de-duplication"" of the reads so that each UMI is only counted once for expression quantification. Doing this is not entirely trivial, as a quick survey of tools available shows (e.g. [UMI-tools](https://github.com/CGATOxford/UMI-tools), [umitools](https://github.com/brwnj/umitools), [umis](https://github.com/vals/umis), [umi](https://github.com/aryeelab/umi/wiki)). . Nevertheless, it would be _very_ convenient for those Salmon fans amongst us dealing with scRNA-seq data to be able to process scRNA-seq data with UMIs directly with Salmon. Selfishly, this would be awesome for the Salmon integration with the scater package (now fully implemented). . Not to make a thing of it, but kallisto is now providing some support for UMI quantification (https://pachterlab.github.io/kallisto/singlecell.html) ;P. Best; Davis",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/93:373,avail,available,373,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93,1,['avail'],['available']
Availability,"Hi Shaun!. This is strange! One thing that's strange about it is that this seems to be trying to pull down v0.8.2 rather than v0.9.1 --- is that correct? The stranger thing though is that it seem the ""fetchRapMap.sh"" script isn't being run, which means the following from the CMakeLists.txt is not being executed:. ```; if(NOT FETCHED_RAPMAP); exec_program(${CMAKE_CURRENT_SOURCE_DIR}/scripts/fetchRapMap.sh); set(FETCHED_RAPMAP TRUE CACHE BOOL ""Has RapMap been fetched?"" FORCE); endif(); ```. Any idea why this might be happening? Does the CI environment prohibit this for some reason?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367729441:102,down,down,102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367729441,1,['down'],['down']
Availability,"Hi Tanya,. The only cases in which I've seen this before have had to do with corrupted input (most often with corrupted `.gz` files --- for which we have a fix to report and quit on the develop branch). Can you confirm that all of the files you are providing to salmon as input properly decompress without error? If so, would you be able to share the specific files causing the problem?. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/163#issuecomment-337916447:306,error,error,306,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/163#issuecomment-337916447,1,['error'],['error']
Availability,"Hi Valentine,. That's not good! I suppose that testing the gibbs sampling should be added to our standard set of regression tests. Can you provide me with a data set that reproduces this issue? I'll track it down and figure out why Gibbs is behaving badly. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/58#issuecomment-218878561:208,down,down,208,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/58#issuecomment-218878561,1,['down'],['down']
Availability,"Hi Victor,. Is it the case that `/n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/spikein/Flox5YFP0_B07_R/index` is an index of only your genes of interest? If so, that would explain what you're seeing. Salmon assumes that some non-zero fraction of reads map in your sample. In this case, I'd presume that if you have some samples where no reads map to any transcript of your gene of interest, then salmon will complain in exactly the manner mentioned above. Now that I think about it, there are actually two different scenarios that can cause the above. The first is if something goes wrong in the optimization (there should be no way for this to happen, and so it would be the result of a bug if it did). The second is actually if there are no mappable reads. That's not the result of a bug, or even an ""error"" per-se, but just very unexpected input (since, in a typical scenario, this would imply the reads are unmatched with the reference). It might make sense to handle this case separately. However, this is certainly what is causing the output in your case, and you can safely assume that here, were it not for this specific check, Salmon would return an estimated count of 0 for all transcripts in the index.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119#issuecomment-278743839:803,error,error,803,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119#issuecomment-278743839,1,['error'],['error']
Availability,"Hi `COMBINE-lab/salmon`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential secu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:363,error,errors,363,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['error'],['errors']
Availability,"Hi again @GWW,. We have a hotfix for this that we are currently testing, but feel free to try it out if you have a chance. If you download the source from [here](https://github.com/COMBINE-lab/salmon/archive/hash-resize-hotfix.zip), or checkout the branch `hash-resize-hotfix`, you can pass alevin an extra hidden option `--maxHashResizeThreads` that allows you to limit the maximum number of threads used during the hash table resize. If you use `--maxHashResizeThreads 1`, at most one extra thread should be created during hash table resizing. Hopefully, this should fix the issue occurring in your execution environment. If so, please let us know so we can merge the fix back into develop (and then master).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924:130,down,download,130,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395907924,1,['down'],['download']
Availability,"Hi all - this looks like an old version of Trinity. I'd suggest upgrading. For any version of Trinity, you can look at the Dockerfile to see what the; corresponding compatibilities are for versions that get co-installed for a; fully functional package. For example, in the current release, you'll find:. https://github.com/trinityrnaseq/trinityrnaseq/blob/5ce78d2b6d63aaae9fe491408311ebaf158deaa6/Docker/Dockerfile#L235. best,. ~brian. On Fri, Feb 24, 2023 at 1:19 PM Rob Patro ***@***.***> wrote:. > I am not sure how the index here was created, but the actual error; > signifies that you are attempting to quantify the assembled transcripts; > using a recent version of salmon (1.9.0 in this case) against an index; > that was created by a *very old* version of salmon (pre 1.0). This is not; > supported, as the index format completely changed between pre v1.0 and post; > v1.0, and newer versions rely on a completely different data structure.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/832#issuecomment-1444189059>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABZRKX5M6TN6DEQJQCP2AALWZD3TRANCNFSM6AAAAAAVHFUQRA>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >. -- ; --; Brian J. Haas; The Broad Institute; http://broadinstitute.org/~bhaas <http://broad.mit.edu/~bhaas>",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/832#issuecomment-1444289845:562,error,error,562,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832#issuecomment-1444289845,1,['error'],['error']
Availability,"Hi all, ; I have a dataset with 40 samples, which I aligned to a reference transcriptome using HISAT2. I then quantified these using salmon using the alignment mode, with a command like this:. `salmon quant -t referencetranscriptome.fa -l U -a alignment.bam -o path/to/out/dir/`. Here referencetranscriptome.fa is constant for all 40 samples, and the same reference I indexed for use with HISAT. Upon rereading the documentation, I understand that this is wrong?. > Say that you’ve prepared your alignments using your favorite aligner and the results are in the file aln.bam, and assume that the sequence of the transcriptome you want to quantify is in the file transcripts.fa. This makes it seem like for each run of salmon in alignment mode, I should use a different transcriptome. For instance, something like this:. `salmon quant -t transcriptome1A.fa -l U -a 1A.bam -o /path/to/out/dir`. So question 1: Is this the right approach?. When I noticed this, I tried to run the above command, which gave me an error like this:. > Please provide a reference FASTA file that includes all targets present in the BAM header If you have access to the genome FASTA and GTF used for alignment consider generating a transcriptome fasta using a command like: gffread -w output.fa -g genome.fa genome.gtf. A post on Biostars with the same error had the issue that the references were difference (genome and transcriptome), which is not the case for me. Additionally, I tried running gffread as suggested by the salmon error, which doesn't work at all because it wants to pull gene names (?) from my gff file, but my first column has chromosome numbers, while my gene names are in the 9th column. The command was:. `gffread -w transcript1A.fa -g referencetranscriptome.fa referenceannotation.gff`. So question 2 : Is gffread the right step here? If so, what should I be using to have it run properly?. Thanks in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/740:1009,error,error,1009,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/740,3,['error'],['error']
Availability,"Hi all,. Is there any suggestion/best practices on whether one should or should not use orphan recovery? My feeling is that it should be used in cases where the library quality maybe isn't the greatest, but i'm not sure about this. Thanks all!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/959:95,recover,recovery,95,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/959,1,['recover'],['recovery']
Availability,"Hi all,. So I'm having a similar problem to whats found in issue https://github.com/COMBINE-lab/salmon/issues/49. I'm want to see how much intron RNA is quantified in my experiment, but it seems like the number of ""transcripts"" (i.e. introns) from the fasta is too many. Any ideas as to how to approach this?. Best. ```; /labseq/tools/SalmonBeta-0.5.0_DebianSqueeze/bin/salmon index -t /labseq/Genomes/introns/hg19.introns.fasta -i /labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/ --type quasi ; ```. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains **important bug fixes**; please upgrade at your; earliest convenience.; ###; index [""/labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/""] did not previously exist . . . creating it; [2016-03-28 13:52:29.407] [jointLog] [info] computeBiasFeatures( {[/labseq/Genomes/introns/hg19.introns.fasta] , /labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/bias_feats.txt, 1, 24). readFile: /labseq/Genomes/introns/hg19.introns.fasta, ; file /labseq/Genomes/introns/hg19.introns.fasta: ; processed 659300 transcripts (4515) transcripts/snscripts/sipts/s transcripts/sts/s; [2016-03-28 13:54:55.658] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 650000 transcriptsElapsed time: 128.964s. Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 5.40482s; Writing sequence data to file . . . done; Elapsed time: 40.1748s; [info] Building 64-bit suffix array (length of generalized text is 4128215243 ); Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 358.792s; done; Elapsed time: 3065.92s; processed 3810000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/53:572,avail,available,572,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53,2,['avail'],['available']
Availability,"Hi all,. bit of a manual workaround, but for each missing package I searched anaconda https://anaconda.org/, downloaded the package manually from downloads then installed the latest build of salmon using . conda install -c bioconda/label/main salmon. Hope this helps",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/308#issuecomment-507332196:109,down,downloaded,109,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/308#issuecomment-507332196,2,['down'],"['downloaded', 'downloads']"
Availability,"Hi and thank you for helping,. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Running alevin on 10x v1 data results in the following error:; > [alevinLog] [info] Starting Import of the gene count matrix.; > Exception : [std::bad_alloc]; > alevin was invoked improperly. **To Reproduce**. * Salmon version: Release v0.11.3; * Installed from: Compiled. I also followed the instructions from the [alevin tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) to compile the `scripts/v1_10x/wrapper.cpp` file; * Reference transcriptome: [Homo_sapiens.GRCh37.cdna.all.fa](ftp://ftp.ensembl.org/pub/grch37/release-83/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh37.cdna.all.fa.gz); * Which read files were used? Either the [CD14+ Monocytes from the 10x v1 paper](http://s3-us-west-2.amazonaws.com/10x.files/samples/cell-exp/1.1.0/cd14_monocytes/cd14_monocytes_fastqs.tar) or the [PBMC 3k from the same paper](http://cf.10xgenomics.com/samples/cell-exp/1.0.0/pbmc3k/pbmc3k_fastqs.tar); * Which program options were used?; I ran the following command for the CD14 Monocytes dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:202,error,error,202,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['error'],['error']
Availability,"Hi everyone,. Is there a way to feed pre-transformed files into Alevin? We've been using Valentine's nice umis repository https://github.com/vals/umis as our preprocessing step to put sample, cell and UMI barcodes into the read name. They end up with formats like this:. ```; @ST-K00126:314:HFYL2BBXX:7:1101:1631:1226:CELL_GGGCACTAGCTGATAA:UMI_GGGCCCAACG:SAMPLE_GTAATTGC; GNTGTGGCAGAGCAGCGACCCGCGGCGGGGCGGCATCCCCAGCTGGTTCGGGCCGGGACGGGGCGGCCAGCAGGGACGCGCCCCAGGGGGGCAGCTGT; +; A#-<<F7<AJF-FJ<JAAJJFJJ<AF-7AJF77<FJJJFFFJJ<JA-7-777<-F7<<F--7AA7AAAFF-AF<A-AFFA7J7F--7)-)7--7A<J-; ```; the nice thing about the way umis is doing it is you can specify how to do transformations via a JSON file that has regexes regarding where in the original FASTQ files the UMI/cell/sample barcodes are. For example, for 10x v2:; ```json; {; ""read1"": ""(?P<name>@.*) .*\\n(?P<CB>.{16})(?P<MB>.{10})(.*)\\n\\+(.*)\\n(.*)\\n"",; ""read2"": ""(@.*) .*\\n(?P<seq>.*)\\n\\+(.*)\\n(?P<qual>.*)\\n"",; ""read3"": ""(@.*)\\n(?P<SB>.*)\\n\\+(.*)\\n(.*)\\n""; }; ```; This makes it so end users can write their own transformations to handle arbitrary protocols. . I'd love to plug into Alevin after this step and use Alevin for everything else. Is there a description of what the reads need to look like to work with the downstream steps in Alevin?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/360:1279,down,downstream,1279,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/360,1,['down'],['downstream']
Availability,"Hi everyone,; Lately I was trying to use Salmon (v0.8.0) along with tximport to study a downloaded single-cell data on gene-level. And I came across something werid that I found almost 20k genes on average per cell, which is way higher than expected. Realistically, the scRNA-seq protocol I followed will only have a gene number detection of roughly 10k. I re-do the analysis with STAR + featurecounts and I observed a per-cell gene number of 6k on average. Just wonder which part of my code goes wrong. Attached please find my code for Salmon and subsequent R script for tximport. Any advice or suggestion will be much appreciated! I do love Salmon for its speed and convenience. Salmon index; #!/bin/bash. salmon index -t /home1/garyhe/workingdir/ref/gencode/gencode.v25.transcripts.ercc.fa -i /home1/garyhe/workingdir/ref/index/salmonindex/v25/19mer --gencode --type quasi -k 19. Salmon quant; #!/bin/bash. cd /home1/garyhe/workingdir/data/bjorklund2016ni/00_raw. for i in $(ls *.gz | cut -c 1-10 | uniq). do. salmon quant -i /home1/garyhe/workingdir/ref/index/salmonindex/v25/19mer \; -l U \; -r ${i}_1.fastq.gz \; --writeMappings=/home1/garyhe/workingdir/data/bjorklund2016ni/01_aligned/${i}.sam \; -o /home1/garyhe/workingdir/data/bjorklund2016ni/02_quant/${i}. Done. R script for tximport; #condense the ensemble transcript ID counts to gene ID counts; library(GenomicFeatures); txdb <- makeTxDbFromGFF(""./Sequencing_run/gencode.vM12.primary_assembly.annotation.ercc.gtf""); k <- keys(txdb, keytype = ""GENEID""); df <- select(txdb, keys = k, keytype = ""GENEID"", columns = ""TXNAME""); tx2gene <- df[, 2:1]; head(tx2gene). library(tximport); library(readr); dir <- ""./Sequencing_run/salmon_output/sc/""; list.files(dir); samples <- read.table(""./Sequencing_run/salmon_output/scsampleinfo.txt"", header=TRUE); samples; files <- file.path(dir, samples$Sample_ID, ""quant.sf""); names(files) <- paste0(samples$Sample_ID); names(files) <- gsub(""[:_:].*$"", """", names(files)). #gene-level; txi.salmon.g <- txi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/120:88,down,downloaded,88,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120,1,['down'],['downloaded']
Availability,"Hi folks,. I'm trying to run DebianSqueeze Salmon v0.4.2 with some issue in the 'quant' step. Here is the skinny:; - ERCC + latest human ensembl transcriptome; - Index builds fine -- no apparent issues; - Quant step fails with the following output:. ``` bash; LD_LIBRARY_PATH=~/software/SalmonBeta-0.4.2_DebianSqueeze/lib; ~/software/SalmonBeta-0.4.2_DebianSqueeze/bin/salmon quant -i index/hs_ens_ercc.sidx --libType IU --output output/salmon -1 reads_1.fastq -2 reads_2.fastq; Version Info: This is the most recent version of Salmon.; # salmon (smem-based) v0.4.2; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { index/hs_ens_ercc.sidx }; # [ libType ] => { IU }; # [ output ] => { output/salmon }; # [ mates1 ] => { reads_1.fastq }; # [ mates2 ] => { reads_2.fastq }; Logs will be written to output/salmon/logs; there is 1 lib; [2015-08-23 21:58:57.438] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading index/hs_ens_ercc.sidx/bwaidx.amb; ```. I've provided a reproducible and self-contained Snakefile that only depends on the binaries being dumped in `~/software` and the reads_*fastq below. Let me know if there is anything I can do to help. Thanks a bunch!. Harold. ---. ``` python; ercc_fa = 'index/ERCC.fa'; ens_fa = 'index/Homo_sapiens.GRCh38.cdna.all.fa'; ens_ercc_fa = 'index/hs_ens_ercc.fa'; ens_ercc_sidx = 'index/hs_ens_ercc.sidx'. SALMON_PRE = '~/software/SalmonBeta-0.4.2_DebianSqueeze'; SALMON = 'LD_LIBRARY_PATH={0}/lib; {0}/bin/salmon'.format(SALMON_PRE). rule all:; input:; ens_ercc_fa,; ens_ercc_sidx,; 'output/salmon/quant.sf'. rule download_ens:; output:; ens_fa; params:; dl = 'ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule download_ercc:; output:; ercc_fa; params:; dl = 'http://bio.math.berkeley.edu/kallisto/transcriptomes/ERCC.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule merge_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/12:947,error,error,947,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/12,1,['error'],['error']
Availability,"Hi k3yavi, yes you are correct regarding 1,2 & 3. Howver, at step 2, I generated mapped files as two separate files, *.R1.paired.fastq, *.R2.paired.fastq and individual *.singletons.fastq file. Used Hisat2 using -1, -2 and -U parameters with the respective files and generated bam files - used these files in Salmon then and encountered the error.; I can run Hisat2 again without the -U option and see if Salmon works!!. In a separate run, I used transcriptome.fasta file in the 1st step and generated bam file using Hisat2. Then used bam file in Salmon using transcriptome.fasta in the -t flag. Error below:. WARNING: Detected suspicious pair --- ; 	The names are different:; 	read1 : HWI-7001326F:36:C7J2GANXX:4:1302:8789:95937; 	read2 : HWI-7001326F:36:C7J2GANXX:4:2204:6152:63667; 	The proper-pair statuses are inconsistent:; read1 [HWI-7001326F:36:C7J2GANXX:4:1302:8789:95937] : proper-pair; mapped; matemapped. read2 : [HWI-7001326F:36:C7J2GANXX:4:1302:8789:95937] : no proper-pair; mapped; matenot mapped. [2017-07-07 10:53:31.160] [jointLog] [warning] . Does the bam files need to be sorted before using Salmon? Thanks",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/140#issuecomment-313546915:341,error,error,341,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140#issuecomment-313546915,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi rob... Yep, I found it with a binary search of the fasta reference file. On Friday, October 9, 2015, Rob Patro notifications@github.com wrote:. > Thanks for reporting this. Certainly, failure should be more apparent. Out; > of curiosity, is the failure in building the index? It looks like loading; > the index didn't work, so was the space character that caused the problem; > in your reference file?; > ; > --Rob; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-146996488.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-147008848:187,failure,failure,187,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-147008848,2,['failure'],['failure']
Availability,"Hi salmon team,. Thank you for developing this useful tool! I used salmon (v1.9.0) to quantify transcript abundance using full-length cDNA reads (ONT) after mapping with minimap2 to a transcriptome (Ensembl, GRCh38.p13). The commands as follows:. ```; minimap2 -t 4 -ax map-ont -N 100 -p 0.99 Homo_sapiens.GRCh38.cdna.all.mmi sample_full_length.fa | samtools view -bS > sample_cdna.bam; salmon quant -p 4 --ont -l U -t Homo_sapiens.GRCh38.cdna.all.fa -a sample_cdna.bam -o salmon_quant -g TranscriptID_GeneID_from_cDNA_fasta.tsv; ```. I found that salmon with the ""--ont"" option has a tendency to assign reads to isoforms containing longer exons (especially at the 5' end), even if regions specific to the longer exons have no read coverage. In the following example, the expression abundance of TPI1-202 is obviously higher than TPI1-201 based on genome mapping coverage in IGV tools. <img width=""415"" alt=""image"" src=""https://user-images.githubusercontent.com/33354198/191897914-cb68c719-3971-4489-b970-5f2322d878aa.png"">. However, in salmon (with “--ont”) results, the average detected transcript abundance for TPI1-202, TPI1-201 and TPI1-210 were 84.339, 186.753 and 132.503 respectively, i.e., the abundance of TPI1-202 was much lower than TPI1-201. Salmon seems to overestimate the abundance of TPI1-201 and TPI1-210 which contain longer exons at the 5' end. Similar problems were also observed in many other genes. Meanwhile, using the “--noErrorModel” option instead of “--ont” does not show this behavior (but “--noErrorModel” has problematic quantifications in other cases). Could you help with this problem? Is there any specific considerations in the “--ont” mode that could explain this behavior, and how can I fix it?. Thanks in advance!. Ping",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/802:1753,Ping,Ping,1753,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/802,1,['Ping'],['Ping']
Availability,"Hi scott,. Thank you for the detailed report. Im trying to reproduce the issue. So far, i have been unable to reproduce the issue on an ubuntu 16.04 or OSX box with either 0.11.1 or 0.9.1. My next test is to try on an ubuntu 14.04 docker container. I'm afraid there may be a system library issue involved. Could you try upgrading via bioconda as well to see if that helps? The latest linux release is available on bioconda.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-413855775:401,avail,available,401,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-413855775,1,['avail'],['available']
Availability,"Hi there, I was merging the quantified bulk rnaseq samples into a single file using **quantmerge**, however, I keep getting the ""either doesn't exist or doesn't contain a quant.sf file error"", although the file located in the given path. By the way, I do use salmon-1.10.0 version. I would apprecoate if you can help me to fix it. . Thanks,; Hasan",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/849:185,error,error,185,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/849,1,['error'],['error']
Availability,"Hi there, new to experimental RNAseq analysis. Have used ""clean"" example datasets and felt like salmon would be suitable for my analysis. However, using paired-end libraries from Illumina (I have tried trimmed and non-trimmed reads) I am getting the following error when running: salmon quant -i salmon_index/ --libType A -1 151_R1.fastq.gz -2 151_R2.fastq.gz --validateMappings -o 151_quant: . ""Found no concordant and consistent mappings. If this is a paired-end library, are you sure the reads are properly paired? check the file: 151_quant/lib_format_counts.json for details"". When I go to this file, I see: ""num_frags_with_consistent_mappings"": 0,. Given that the reads from illumina come in lanes, I did merge those files (R1 with R1 files and R2 with R2) but running salmon quant on the non-merged files produces the same error. These reads have been mapped to a reference genome for which my lab has used for many analyses, I am not sure what the issue could be. Any ideas would be greatly appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/869:260,error,error,260,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/869,2,['error'],['error']
Availability,"Hi there,. I'm a newcomer here.; Salmon source was downloaded and extracted, new folder ""build"" has created, 'cmake ..' has also be done to confirm the feasibility of installation.; However, When I run the code ""sudo make"", it returns a error regarding downloading the package tbb-2019_U8, here is the report. ```; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; tbb-2019_U8.tgz did not match expected SHA256! Exiting.; CMakeFiles/libtbb.dir/build.make:107: recipe for target 'libtbb-prefix/src/libtbb-stamp/libtbb-download' failed; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; CMakeFiles/Makefile2:253: recipe for target 'CMakeFiles/libtbb.dir/all' failed; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; Makefile:179: recipe for target 'all' failed; make: *** [all] Error 2; ```; it seems the requirement isn't met and the threshold should be modified?; appreciate any help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/497:51,down,downloaded,51,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497,8,"['Error', 'down', 'error']","['Error', 'download', 'downloaded', 'downloading', 'error']"
Availability,"Hi there,. here is my error and i ll provide my script. Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_33-41/33-41_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_32-40/32-40_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_38-45_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_30-38/30-38_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_20-28/20-28_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_13-21/13-21_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-6-12_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_17-25/17-25_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-11-18_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_7-14/7-14_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P1_H.m_15-23_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_2-4/2-4_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_35-43/35-43_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P1_H.m_18-26_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_41-49_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_48-56/48-56_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-10-17_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_43-52_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:22,error,error,22,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['error'],['error']
Availability,"Hi! I'm really sorry for taking so long to get back to you; things have been quite hectic this semester. The reason it's not being show is because it's been placed in a parameter group that is not made visible by default; the `--posBias` option itself is still available. It's definitely still experimental in that it has not been tested nearly as thoroughly as the other bias models. However, it is useable. Once we have performed more testing, it will migrate into the normal options and be better documented. If you gather any useful data while using this flag, we'd love some feedback!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/191#issuecomment-367448963:261,avail,available,261,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/191#issuecomment-367448963,2,['avail'],['available']
Availability,"Hi!. I'm trying to tidy up some of the strandedness analysis in nf-core/rnaseq, and have gone down the rabbit hole a little bit, hoping you can shortcut things for me. . nf-core/rnaseq's test profile runs Salmon on subsampled FASTQ files and uses Salmon to infer the strandedness, by extracting the `library_types` from a meta_info.json. . In an example run (~50k reads) this is unstranded (`IU`), but I'm having trouble reconciling with what I see in the corresponding `lib_format_counts.json`:. ```; {; ""read_files"": ""[ WT_REP2.subsampled_R1.fastq.gz, WT_REP2.subsampled_R2.fastq.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 39909,; ""num_assigned_fragments"": 39909,; ""num_frags_with_concordant_consistent_mappings"": 41509,; ""num_frags_with_inconsistent_or_orphan_mappings"": 3363,; ""strand_mapping_bias"": 0.11922715555662628,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4949,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 36560,; ""SF"": 1754,; ""SR"": 1609,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. Is it possible for me to do my own inference of `IU` from those numbers, or does it happen elsewhere? Is there a minimum number of reads/ mappings required to make this assessment, such that 'IU' is just a default? . I'm hoping to derive my own logic, so that we can harmonise it with the calculations we make from RSeQC's output, for example. I've been poking through [LibraryTypeDetector](https://github.com/COMBINE-lab/salmon/blob/master/include/LibraryTypeDetector.hpp) without much joy, if I replicate that logic in Python I get 'ISR', not 'IU'.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/938:94,down,down,94,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/938,1,['down'],['down']
Availability,"Hi!. Sorry for not answering. I'm trying to get a small sample to replicate the error and misteriously I can't. I will try to update Alevin and run it in the big samples, then if it fails, try to send you the a sample to work with.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386#issuecomment-506225248:80,error,error,80,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386#issuecomment-506225248,1,['error'],['error']
Availability,"Hi!; I just used salmon(v1.4.0) to quant the paired-end fastq files from GSE66630(just some failed, not all), which were trimmed by [rabbitQC](https://github.com/ZekunYin/RabbitQC). I remembered I have analyzed it successfully by former version salmon, but now I couldn't make it work for this version. ```; salmon quant \; 		-i $indexdir \; 		-l A \; 		-1 $workdir/fastq/$line"".read1.fq"" \; 		-2 $workdir/fastq/$line"".read2.fq"" \; 		-p 44 \; 		-o $workdir/salmon_out/quant_out/$line \; 		-g $gtfpath \; 		--numGibbsSamples 50 \; 		--auxDir aux_info \; 		--seqBias --gcBias -d --posBias --hardFilter --discardOrphansQuasi --writeUnmappedNames && echo salmon $line Done!. [2021-05-19 18:46:25.303] [jointLog] [info] setting maxHashResizeThreads to 44; [2021-05-19 18:46:25.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-19 18:46:25.303] [jointLog] [info] You specified --dumpEqWeights, which implies --dumpEq; that option has been enabled.; [2021-05-19 18:46:25.303] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-05-19 18:46:25.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:646,echo,echo,646,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['echo'],['echo']
Availability,"Hi, . I'm new to RNA seq and trying to use Salmon to analyse my dataset. However, it gives an error when I try to run it after downloading the package: . ` ~/Downloads/Salmon-0.8.2_macOX_10.12/bin/salmon`. It gves the following error: . `dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Users/rishika/Downloads/Salmon-0.8.2_macOX_10.12/bin/./salmon; Reason: image not found; Abort trap: 6`. I would be grateful for your help. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/172:94,error,error,94,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172,5,"['Down', 'down', 'error']","['Downloads', 'downloading', 'error']"
Availability,"Hi, . Running much of anything in command line is new to me. I ran the line below without success. . > ./bin/salmon quant -t transcripts.fa -l OSR -a myseq.bam -o salmon_quant. I keep getting the error below and am not sure why. . > [jointLog] [critical] Note: Alignment-free mapping (i.e. mapping without subsequent selective-alignment) has not yet been throughly tested under the pufferfish-based index and using the pufferfish-based mapping strategies. Thus, disabling of selective-alignment is not currently allowed. We may, potentially explore re-enabling this option in future versions of salmon. I am betting this is something really simple. I'd appreciate any help... Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/511:196,error,error,196,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/511,1,['error'],['error']
Availability,"Hi, . Sorry for not mentioning it previously, can you please also attach/add the error log you are getting.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/549#issuecomment-660248736:81,error,error,81,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/549#issuecomment-660248736,1,['error'],['error']
Availability,"Hi, . Thank you for helping me with my issue. I'm not sure if the mapping rate so low is reasonable in this case: the fastq files (R1 and R2) were generated reservely from the bam files. I tried both Hg38 and Hg19 for this dataset (only bam files available to me, which were aligned by Hg19 genome), and I got similarly low mapping rate. . The salmon log is like this:; ```; [2024-01-27 01:09:31.030] [jointLog] [info] setting maxHashResizeThreads to 20; [2024-01-27 01:09:31.030] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-01-27 01:09:31.030] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-01-27 01:09:31.030] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-01-27 01:09:31.030] [jointLog] [info] parsing read library format; [2024-01-27 01:09:31.030] [jointLog] [info] There is 1 library.; [2024-01-27 01:09:31.032] [jointLog] [info] Loading pufferfish index; [2024-01-27 01:09:31.033] [jointLog] [info] Loading dense pufferfish index.; [2024-01-27 01:09:33.435] [jointLog] [info] done; [2024-01-27 01:09:33.508] [jointLog] [info] Index contained 252,048 targets; [2024-01-27 01:09:36.263] [jointLog] [info] Number of decoys : 0; [2024-01-27 01:09:41.237] [jointLog] [info] Automatically detected most likely library type as IU. [2024-01-27 01:10:28.189] [fileLog] [info] ; At end of round 0; ==================; Observed 3600210 total fragments (3600210 in most recent round). [2024-01-27 01:10:28.188] [jointLog] [info] Computed 179,584 rich equivalence classes for further processing; [2024-01-27 01:10:28.188] [jointLog] [info] Counted 446,871 total reads in the equivalence classes ; [2024-01-27 01:10:28.202] [jointLog] [warning] 0.197488% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/908:247,avail,available,247,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908,1,['avail'],['available']
Availability,"Hi, . [bulk mode] salmon 1.10.3; the error was reported in partial jobs when I used salmon to quantify the LR-RNA-seq data (It works normally on some samples). ; ; `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/salmon:1.10.3--h6dccd9a_2 salmon quant --ont -p 10 -t /public/home/b20223040336/Workspace/long_read_rna/01data/references/GCF_002263795.3_ARS-UCD2.0_rna.fna -l U -a mammary.cistern_4_tran.all.bam -o /public/home/b20223040336/Workspace/long_read_rna/03Results/mammary.cistern/LR/mammary.cistern_4/02_expression/UCD_based`. ![image](https://github.com/user-attachments/assets/b5f2348d-1bbf-4a6b-8902-e72bf065e0ae). I don't know how to solve this problem. I tried to install salmon using different methods, But it still doesn't work.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/950:37,error,error,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/950,1,['error'],['error']
Availability,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/854:267,echo,echo,267,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854,5,"['avail', 'echo', 'error']","['available', 'echo', 'error']"
Availability,"Hi, ; I am new to bioinformatics and scRNAseq.; I am working on a scRNAseq dataset i downloaded from GEO. Downloading the SRA file with fastq-dump --split-files resulted in 3 reads, i.e R1, R2, and R3. I understand the R3 reads are the sample index reads. Do I need to use this R3 as input for alevin quantification, since alevin only accepts two read at a time, i.e R1, R2. Additionally, I used R1 and R2 for the alevin quantification using the code;; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 F379_R1.fastq -2 F379_R2.fastq -o alevin_combinedRun -p 16 --tgMap txp2gene_BM.tsv --chromiumV3 --dumpFeatures . This resulted in 233 cells indicated in the figure below with Mapping rate less than 6%.; <img width=""473"" alt=""Alevin"" src=""https://user-images.githubusercontent.com/38905650/151156881-da620d2e-3e9a-41fc-acce-ef2722788424.PNG"">; log file; 2022-01-26 11:52:30.149] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 11:52:30.149] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 11:52:30.149] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 11:52:30.149] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 11:52:30.149] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 11:52:30.149] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 11:52:30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/742:85,down,downloaded,85,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742,2,"['Down', 'down']","['Downloading', 'downloaded']"
Availability,"Hi, ; I am trying to calculate the alignment rate of each cellular barcode in the final expression matrix for downstream filtering. What is the best way to accomplish this with Alevin data? . I am currently using the _filtered_cb_frequency.txt_ file from _--dumpBfh_ and dividing the sum of each cell barcode's row in the gene expression matrix by the corresponding value in _filtered_cb_frequency.txt._ I assumed that that file lists the number of filtered reads that alignment was attempted on for each cellular barcode. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/274:110,down,downstream,110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/274,1,['down'],['downstream']
Availability,"Hi, ; I have same issue using Salmon 1.4.0. * `grep ""^>"" <GRCh38.d1.vd1.fa | cut -d "" "" -f 1 > decoys.txt`; * `sed -i.bak -e 's/>//g' decoys.txt`; * `cat GDC.GRCh38_gencode.v22.fasta.gz GRCh38.d1.vd1.fa.gz > GRCh38.d1.vd1_gencode.v22_gentrome.fa.gz`; * `salmon index -t GRCh38.d1.vd1_gencode.v22_gentrome.fa.gz -d decoys.txt -i salmon_1.4.0/ -p 12 -k 31 --gencode`. [2021-04-07 12:31:14.685] [puff::index::jointLog] [warning] Removed 789 transcripts that were sequence duplicates of indexed transcripts.; [2021-04-07 12:31:14.685] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-04-07 12:31:14.685] [puff::index::jointLog] [critical] The decoy file contained the names of 2779 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [2021-04-07 12:31:15.194] [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/644#issuecomment-815252574:860,error,errors,860,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/644#issuecomment-815252574,3,"['down', 'error']","['downstream', 'error', 'errors']"
Availability,"Hi, ; I just downloaded the salmon.10.0 version and indexed my transcriptome using the https://www.gencodegenes.org/releases/current.html --> FASTA files --> trasnscript sequences. When I try to run Salmon I receive the above error message. The last time I ran Salmon I used 9.1 and this trasncriptome from ensembl ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/...; What is going on here? . The header.json file looks like this: ; {; ""value0"": {; ""IndexType"": 1,; ""IndexVersion"": ""q3"",; ""UsesKmers"": true,; ""KmerLen"": 31,; ""BigSA"": false,; ""PerfectHash"": false; }; }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/232:13,down,downloaded,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232,2,"['down', 'error']","['downloaded', 'error']"
Availability,"Hi, ; I've been trying to run alevin for single cell data. I've been using test data and the salmon alevin command seems to work right until the end, and then the core is dumped just as counts are in the csv format. I've also tried running it without --dumpCsvCounts and this also results in a segmentation fault. . What I was running:; salmon alevin -l ISR -1 ./hgmm_100_S1_L002_001.fastq.1.gz -2 ./hgmm_100_S1_L002_001.fastq.2.gz --chromium -i geneset.dir/geneset_coding_exons.salmon.index -p 10 -o salmon.dir/hgmm_100_S1_L002_001 --tgMap transcript2geneMap.tsv --dumpCsvCounts. Final part of output:; Analyzed 287 cells (100% of all).; [2019-01-25 11:14:44.509] [alevinLog] [info] Total 46729.00 UMI after deduplicating.; [2019-01-25 11:14:44.509] [alevinLog] [warning] Skipped 63 barcodes due to No mapped read; [2019-01-25 11:14:44.529] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-25 11:14:44.561] [alevinLog] [info] Starting Import of the gene count matrix of size 224x19879.; [2019-01-25 11:14:44.576] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-25 11:14:45.067] [alevinLog] [info] Done Importing gene count matrix for dimension 224x19879; [2019-01-25 11:14:45.770] [alevinLog] [info] Starting dumping cell v gene counts in csv format; Segmentation fault (core dumped) . I am running version 0.12.0 of salmon, installed via bioconda. I have also allocated 30GB of memory for the job, so this isn't a memory issue.; I have seen other users having similar issues using salmon quant having installed salmon through conda and the suggestions have been to install from binaries. This is not an option as salmon needs to be run easily using a conda environment. ; Has any headway been made into fixing the bioconda build?. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/337:307,fault,fault,307,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337,2,['fault'],['fault']
Availability,"Hi, ; This is my first time posting here. I have been trying to get Salmon to work for the past few days but kept running into the same issue (shown below). Any help or tips would be greatly appreciated!. **This bug/issue is primarily related to salmon in bulk mode.**. **Bug/issue Description**; I'm trying to use Salmon with precomputed indecies that I downloaded from the refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)), but when I pass in the index and my `.fastq.gz` files into Salmon I am encountering an error (shown below). . **To Reproduce**. - Used Salmon version 1.2.1; - Downloaded the index (aka the reference transcriptome from refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)).; - Attempted to pass in trimmed .fastq.gz files (the files were trimmed using the FASTQC quality control pipeline) using the following command. > `salmon quant -i default -l A -1 <(gunzip -c <path to .fastq.gz file>) -2 <(gunzip -c <path to .fastq.gz file>) --validateMappings -o salmon_output`. - Received error shown below. ![image](https://user-images.githubusercontent.com/67990244/126880016-0c556d6f-a4f6-4a4b-9906-29d9fc06e00d.png). **Expected behavior**; I expected this program to run normally and generate the quantification output files. . **Desktop (please complete the following information):**; - OS: RedHat Linux Enterprise; - More information in screenshot below; ![image](https://user-images.githubusercontent.com/67990244/126880058-d03a8247-7eea-4108-b2c2-0566ff2c975f.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/690:355,down,downloaded,355,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/690,4,"['Down', 'down', 'error']","['Downloaded', 'downloaded', 'error']"
Availability,"Hi, ; just a quick check if it is normal for SALMON 1.3 to send > 100 Gb of output to the stdout, despite using the -quiet flag. The quant mode appears to be running smoothly.; A sample of the output at the end of file:; <img width=""960"" alt=""Screenshot 2020-10-15 14 23 42"" src=""https://user-images.githubusercontent.com/1333150/96084759-380a3680-0ef2-11eb-82ab-b5ea839c9113.png"">. My command is as follow:; /gpfsdata/apps/salmon-latest_linux_x86_64/bin/salmon quant \; -i /gpfshome/hockchuan/SALMON/GCF_900626175.2_cs10_index \; -l ISR \; -1 /gpfsdata/JangiLab/hockchuan/170302/2.Trimmomatic_output/clean_HEADBANDSTEM_1.fastq.gz \; -2 /gpfsdata/JangiLab/hockchuan/170302/2.Trimmomatic_output/clean_HEADBANDSTEM_2.fastq.gz \; --seqBias \; --gcBias \; --posBias \; --incompatPrior 0.0 \; --geneMap /gpfsdata/JangiLab/hockchuan/cs10_reference_genome/GCF_900626175.2_cs10_genomic.gtf \; --recoverOrphans \; --allowDovetail \; --threads $NSLOTS \; --dumpEq \; --minScoreFraction 0.65 \; --writeMappings /gpfshome/hockchuan/SALMON/MAP/HEADBANDSTEM \; --fldMean 250 \; --fldSD 25 \; --writeOrphanLinks \; --writeUnmappedNames \; --quiet \; -o /gpfshome/hockchuan/SALMON/HEADBANDSTEM_quant",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/573:887,recover,recoverOrphans,887,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/573,1,['recover'],['recoverOrphans']
Availability,"Hi, I am having issues with calculating the differential splicing and I kept getting this error message, even though all files required are uploaded. Could you please help me with this issue. The error message is below :",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/858:90,error,error,90,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/858,2,['error'],['error']
Availability,"Hi, I am running salmon-1.9.0, but in quant bulk mode for rat from *.bam files it stops with this error `Segmentation fault (core dumped)`. --threads 10 and 10 cpu (each core is 5.3 GB) are allocated for this job. Thanks for your solution(s) in advance!. Hi again, I found this issue is related to multiple bam input files which I've done by -a parameter with a (space-separated) list of these files. It is fixed now if just run salmon per file individually.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-1239714634:98,error,error,98,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-1239714634,2,"['error', 'fault']","['error', 'fault']"
Availability,"Hi, I had previousl tried using the `--whitelist` option using the 10x barcode whitelist (they're available at `cellranger-2.0.0/cellranger-cs/2.0.0/tenkit/lib/python/tenkit/barcodes/737K-august-2016.txt` and `4M-with-alts-february-2016.txt`). This had the same output as not using them. I just reran alevin with the `--dumpFeatures` flag, attached are the barcodes. I forgot to mention that with cellranger we saw that the knee was very soft, there was no sharp drop, and that might be what's confusing salmon. I had looked at the documentation but did not see a way to manually specify the cutoff. It is also desirable to manually the first few barcodes, because those have abnormally more counts than would be expected. Here's a log-log histogram of the alevin frequency output; ![image](https://user-images.githubusercontent.com/12504176/42296042-b9a944c6-7fa5-11e8-9f33-02a178d249ce.png). [frequency.txt](https://github.com/COMBINE-lab/salmon/files/2164480/frequency.txt)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402569828:98,avail,available,98,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245#issuecomment-402569828,1,['avail'],['available']
Availability,"Hi, I have been trying to follow [this tutorial](https://combine-lab.github.io/alevin-tutorial/2020/alevin-spatial/) but have run into a problem where Seurat appears to think I am trying to add new cells when I believe I am trying to add an assay. Here is the relevant code section and the error I receive:; ```; DefaultAssay(object = image.data) <- ""Spatial""; brain[['slice']] <- image.data; Error in `[[<-`:; ! Cannot add new cells with [[<-; Run `rlang::last_trace()` to see where the error occurred.; > rlang::last_trace(); <error/rlang_error>; Error in `[[<-`:; ! Cannot add new cells with [[<-; ---; Backtrace:; ▆; 1. ├─methods (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); 2. └─SeuratObject (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); Run rlang::last_trace(drop = FALSE) to see 1 hidden frame.; ```. I checked that Seurat has not changed the `sobj[[""ASSAYNAME""]] <- MYASSAYOBJECT` syntax in the same R session by following [this tutorial](https://satijalab.org/seurat/articles/multimodal_vignette) up to the line where the `adt` assay is added and confirmed that the resulting object had two assays present. I think this may be a versioning issue related to what types of objects can be added into layers (aka slots) in a Seurat object. For reference, here are some details of the objects involved:; ```; > class(brain); [1] ""Seurat""; attr(,""package""); [1] ""SeuratObject""; > class(image.data); [1] ""VisiumV2""; attr(,""package""); [1] ""Seurat""; ```. It is worth noting that I installed Salmon using the docker image found [here](https://hub.docker.com/r/combinelab/salmon) approximately three months ago. The version number I see is `1.10.3`. Below is my sessionInfo output as well. My best guess is that I have to adjust the object type for `image.data` here to something that can be coerced into a slot in the `brain` Seurat object, but I am not sure what object that should be. Let me know if I am making a simple mistake here too, I am quite rusty with the nu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/942:290,error,error,290,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/942,5,"['Error', 'error']","['Error', 'error']"
Availability,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/518:30,error,error,30,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518,5,"['down', 'error', 'failure']","['download', 'downloaded', 'error', 'failure']"
Availability,"Hi, I have some kind the same error. I download the prebuild index from refgenie and I got exactly the same error message. . refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards, ; Fer",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770:30,error,error,30,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-623664770,5,"['down', 'error', 'failure']","['download', 'downloaded', 'error', 'failure']"
Availability,"Hi, I have the exact same issue, in that it is quite likely that some barcodes will be empty and I don't obtain any results now.; It seems that you (@k3yavi) closed the feature request when you closed this issue. was that your intention? I'll try to get the work around working, but it would be nice if there is a flag we could set in the future to ignore this error when running salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-409553247:361,error,error,361,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-409553247,1,['error'],['error']
Availability,"Hi, I hope you're well. Here is my question:. [Bulk mode] Error: Transcript * appears in the reference but did not appear in the BAM; I want to obtain the ONT data expression by alignment-based mode, The command:; `singularity exec ${code_path}/singularity_images/salmon:1.10.3--h6dccd9a_2 salmon quant \ --ont -p 16 -t ${ref_trans_fa} -l U -a ${LR_bam} -o ${output_tmp1}`. I changed a lot of transcripts.fa file, but it still reports ""Transcript * appears in the reference but did not appear in the BAM"". 1. Firstly, I used the transcripts.fa provided by the NCBI - GCF_002263795.3_ARS-UCD2.0_genomic.fna. 2. Secondly, I used gffread to obtain the transcripts.fa, But ""Error: no valid ID found for GFF record"". So I converted the gtf file (version2.2) by shell command as you recommended. the command:. `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/gffread:0.12.7--hdcf5f25_4 gffread -w GCF_002263795.3_ARS-UCD2.0_transcripts.fa -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_genomic.gtf`; `grep -P '\btranscript_id\s+""[^""]+""' GCF_002263795.3_ARS-UCD2.0_genomic.gtf > GCF_002263795.3_ARS-UCD2.0_genomic_fixed.gtf`; `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/gffread:0.12.7--hdcf5f25_4 gffread GCF_002263795.3_ARS-UCD2.0_genomic_fixed.gtf -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_transcripts_gtf.fa`. 3.Finally, I used the gff3 files provided by NCBI to obtain the transcripts.fa, the command:; `GCF_002263795.3_ARS-UCD2.0_genomic.gff -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_transcripts_gff.fa`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/946:58,Error,Error,58,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/946,2,['Error'],['Error']
Availability,"Hi, I hope you're well. Here is my question:; [Bulk mode] Error: Transcript * appears in the reference but did not appear in the BAM. I want to obtain the ONT data expression by alignment-based mode, The command:; `singularity exec ${code_path}/singularity_images/salmon:1.10.3--h6dccd9a_2 salmon quant \; --ont -p 16 -t ${ref_trans_fa} -l U -a ${LR_bam} -o ${output_tmp1}`. I changed a lot of transcripts.fa file, but it's still report ""Transcript * appears in the reference but did not appear in the BAM"". 1. Firstly, I used the transcripts.fa provided by the NCBI - GCF_002263795.3_ARS-UCD2.0_genomic.fna. 2. Secondly, I used gffread to obtain the transcripts.fa, But ""Error: no valid ID found for GFF record"". So I converted the gtf file (version2.2) by shell command as you recommended. the command:; `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/gffread:0.12.7--hdcf5f25_4 gffread \; -w GCF_002263795.3_ARS-UCD2.0_transcripts.fa -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_genomic.gtf. grep -P '\btranscript_id\s+""[^""]+""' GCF_002263795.3_ARS-UCD2.0_genomic.gtf > GCF_002263795.3_ARS-UCD2.0_genomic_fixed.gtf. singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/gffread:0.12.7--hdcf5f25_4 gffread \; GCF_002263795.3_ARS-UCD2.0_genomic_fixed.gtf -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_transcripts_gtf.fa. `. 3.Finally, I used the gff3 files provided by NCBI to obtain the transcripts.fa, the command:; `GCF_002263795.3_ARS-UCD2.0_genomic.gff -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_transcripts_gff.fa; `",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/945:58,Error,Error,58,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/945,2,['Error'],['Error']
Availability,"Hi, I'm just starting with RNA-Seq and tryed to install salmon on the HPC of my university. However I get following error message when recompiling with ""$ make"". . ```; [ 6%] Built target libbz2; [ 13%] Built target libgff; [ 19%] Built target libbwa; [ 26%] Built target libjellyfish; [ 27%] Performing build step for 'libstadenio'; Making all in io_lib; Making all in progs; libtool: link: /usr/bin/cc -o convert_trace convert_trace.o ../io_lib/.libs/libstaden-read.a -lz -lm -lpthread -llzma -lbz2; /usr/bin/ld: cannot find -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; collect2: error: ld returned 1 exit status; make[5]: *** [convert_trace] Fehler 1; make[4]: *** [all-recursive] Fehler 1; make[3]: *** [all] Fehler 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Fehler 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Fehler 2; make: *** [all] Fehler 2. ```. Does this have anything to do with ""bzip2"" or ""libbz2"" and how would I provide missing paths to cmake?; I have bzip2 but not libbz2 availible on my system. I would be gratefull for any help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/216:116,error,error,116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216,3,"['avail', 'error']","['availible', 'error']"
Availability,"Hi, I'm trying to install Salmon on a local server, but I get the following error:. ```[ 81%] Building CXX object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp: In constructor ‘rank9b::rank9b(const uint64_t*, uint64_t)’:; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp:41:53: warning: suggest parentheses around ‘-’ inside ‘<<’ [-Wparentheses]; counts[ pos + 1 ] |= ( c - counts[ pos ] ) << 63 - 9 * j;; ^; [ 82%] Building C object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o; Linking CXX executable unitTests; /bin/ld: cannot find -lstdc++; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What can I do?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/235:76,error,error,76,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235,5,"['Error', 'error']","['Error', 'error']"
Availability,"Hi, I'm trying to use Alevin on a 10X v2 chemistry dataset, and after the preprocessing stpe I get the following error:; ```; Analyzed 1137 cells (11% of all).; ERROR: cell doesn't have any read count; ```; I tried looking at the documentation and previous tickets, but didn't find anything mentioning this issue. Is there any suggestion on how to address it?. The full terminal output is below. Thanks. ```; salmon alevin -lISR -1 cDNA_Small_S1_L001_R1_001.fastq.gz -2 cDNA_Small_S1_L001_R2_001.fastq.gz --chromium -i index -p 20 -o alevin_output9 --tgMap txp2gene.tsv --dumpCsvCounts; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output9/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ mates1 ] => { cDNA_Small_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { cDNA_Small_S1_L001_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 20 }; ### [ output ] => { alevin_output9 }; ### [ tgMap ] => { txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-06-30 22:10:28.044] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-30 22:10:28.048] [alevinLog] [info] Processing barcodes files (if Present). processed 17 Million barcodes. [2018-06-30 22:10:47.141] [alevinLog] [info] Done barcode density calculation.; [2018-06-30 22:10:47.141] [alevinLog] [info] # Barcodes Used: 17712582 / 17712585.; [2018-06-30 22:10:52.008] [alevinLog] [info] Knee found left boundary at 9447; [2018-06-30 22:10:52.498] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:113,error,error,113,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Hi, I'm trying to use salmon in Linux arm (aarch64) environment, but I can not compile the software due to an error. There is any instruction to compile?; Using Linux Ubuntu 18.04.3 LTS (arm).; Thank you in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/424:110,error,error,110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/424,1,['error'],['error']
Availability,"Hi, Rob. I'm seeing this same error `Cannot find source file`; ```; -- Configuring done; CMake Error at src/CMakeLists.txt:113 (add_executable):; Cannot find source file:; /tmp/salmon-20180222-8345-abjxc0/salmon-0.8.2/external/install/src/rapmap/RapMapFileSystem.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp; .hxx .in .txx; ```; See the complete build log at https://circleci.com/gh/brewsci/homebrew-bio/491; Any ideas?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367590842:30,error,error,30,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367590842,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi, just downloaded salmon, unpacked with tar, but I don't seem to find the bin folder containing the salmon binary file. Thanks; Kay",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/238:9,down,downloaded,9,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/238,1,['down'],['downloaded']
Availability,"Hi, just wondering if you guys managed to understand what the source of my error was? I don't know if I just don't know how to work the sci-rna-seq3 data",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/813#issuecomment-1344464188:75,error,error,75,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813#issuecomment-1344464188,1,['error'],['error']
Availability,"Hi, such a fantastic RNA-seq analyze tool Salmon! Recently, I used Salmon to analyze transcript level expression and the information of my analyze tool:. - Salmon: v1.6.0 (install from bioconda); - STAR: 2.7.9a (install from bioconda). And the detailed commands:. - Salmon:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/da6f0253-4dea-4566-aca6-749d4532ccc4); and the transcript index is constructed with hg38 transcripts fasta download from GENCODE:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/a839ba99-d731-45e4-bdc4-85c37419cd9e). - STAR:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/f657043b-c16b-4629-8b41-71acf14fb768). All commands were evaluated with Centos system. After get the result file of Salmon, I tried to check the result in genome browser using BAM only with unique mapping reads produced by STAR. But I am confused with the following result:. According to salmon transript level TPM value, PPIE gene is tend to use longer isoform (the labelled value is TPM):; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/daea059a-f0eb-4ecd-bbe3-3d4714564bc8); But when I visualized this gene in genome browser, I found that their are few reads aligned to specific region of the longest transcript:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/b4f6443f-319d-4e2c-8245-56941497ee2f). So, I'm confused about this result and search form some possible reasons. There are some people saying that because Salmon uses transcript index rather than genome index like STAR, so it can rescue more reads. But I would like to ask you for more advices, great thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/918:445,down,download,445,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/918,1,['down'],['download']
Availability,"Hi, who's concerning,; I was using alevin to run on a PBMC 10xv3 dataset.; Here is my script,; salmon alevin -lISR -1 $fastq1 -2 $fastq2 --chromiumV3 -i $work_p/salmon_index_human -p 12 -o output --tgMap $data_p/test12.tsv --keepCBFraction 1. I kept all CB to make sure I can use emptyDrops. Also, here this index is SAF index followed by your tutorial. Then I got the error message like:; [alevin.log](https://github.com/COMBINE-lab/salmon/files/7035475/alevin.log). Is there any suggestion on how to solve this?; Cheers,; Chloe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/698:369,error,error,369,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/698,1,['error'],['error']
Availability,"Hi,. Building salmon with `-DFETCH_BOOST=TRUE` ends with an error that might be caused by the build process looking to iostreams in the wrong place. The end of the ouput on the terminal is:. ```; [ 80%] Built target salmon_core; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/depend; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; cd /opt/local/salmon-index/resources/salmon-0.4.2 && /usr/bin/cmake -E cmake_depends ""Unix Makefiles"" /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2/src/CMakeFiles/salmon.dir/DependInfo.cmake --color=; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/build; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```. Earlier in the output I can spot this:. ```; cc1plus: warning: unrecognized command line option ""-Wno-deprecated-register"" [enabled by default]; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/21:60,error,error,60,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/21,5,"['Error', 'error']","['Error', 'error']"
Availability,"Hi,. First of all, thank you very much for this tool! I'm excited to try it after reading your bioRxiv paper and your blog post. Following your installation instructions, I got to the step where I run `CMake [flags] ..`, and it failed with the following error:. ```; CMake Error at src/CMakeLists.txt:94 (add_executable):; Cannot find source file:. /home/wulab2015linux/warren/Software/salmon/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp; .hxx .in .txx; ```. I realized that I did not have curl installed (I use `wget` all of the time, on a Ubuntu 14.04.4 system), so the `fetchRapMap.sh` script failed. I tried rerunning the `Cmake` command after installing `curl` with `apt-get`, and it still failed. However, the script worked after I manually ran `fetchRapMap.sh`, and the build was fine after that. . I'm a complete noob when it comes to CMake files, so I don't know what happened, but I wanted to bring this to your attention and provide users that might have the same issue with a workaround.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/42:254,error,error,254,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi,. I am running the latest version of Salmon 0.8.2 and I am getting the following error. I did remake the transcript index with the new version of salmon. I get no errors when i compile or run the ""make test"". . Logs will be written to salmon_output_A9039/logs; [2017-05-08 08:59:23.370] [jointLog] [info] parsing read library format; [2017-05-08 08:59:23.370] [jointLog] [info] There is 1 library.; [2017-05-08 08:59:23.395] [stderrLog] [error] Encountered exception [JSON Parsing failed - provided NVP (SeqHash) not found] when loading index.; [2017-05-08 08:59:23.395] [stderrLog] [error] The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version. Using boost 1.64, Clang 3.9, on a linux box. Any help will be appreciated. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/135:84,error,error,84,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135,4,['error'],"['error', 'errors']"
Availability,"Hi,. I am trying to process scRNAseq Chromium data using alevin. I already have results from cellranger and I wanted to compare them with alevin. I use the following command line; salmon alevin -lISR -1 Fastq1a.fastq.gz Fastq1b.fastq.gz -2 Fastq2a.fastq.gz Fastq2b.fastq.gz --chromium -i gencode.v25.transcripts_index -p 20 -o AlevinOUT --tgMap gencode.v25.txp2gene.tsv --dumpCsvCounts --whitelist 737K-august-2016.txt. I get the following error message at the end of the output; [alevinLog] [error] Barcode not found in frequency table. If I run the exact same files using without the --whitelist flag/file I get some results for a very small set of barcodes. Interestingly the barcodes found by alevin (I only checked 2 or 3) are also in the 737K-august-2016.txt file. . My first question is why alevin does not ""count"" barcodes (zero frequency) with the barcode file, and does estimate frequency for some (at least) barcodes without the barcode file. Considering that the barcodes in the latter case are also found in the whitelist file. . My second question is more about difference between alevin and cellranger. I do get estimated counts for a large number of barcodes (thousands) using cellranger, while barely on the order of a few hundreds, at best, using alevin. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/284:440,error,error,440,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284,2,['error'],['error']
Availability,"Hi,. I am using salmon quant v0.91 to map some reads against ce11 genome. . But the run fails with a cryptic error message, maybe you can help me sort this out.; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/210:109,error,error,109,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210,1,['error'],['error']
Availability,"Hi,. I have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; C",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682:385,down,download,385,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682,4,"['down', 'error', 'recover']","['download', 'error', 'recovery']"
Availability,"Hi,. I have been trying to run the installed salmon version on our HPC cluster on minimap aligned ONT reads and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/898:130,error,error,130,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898,3,"['avail', 'error']","['available', 'error']"
Availability,"Hi,. I have had success using Salmon and Alevin after the hash-resize-hotfix issues. However, when I try to compile the latest commit I get an error for an undeclared error. I have tried searching through the external dependencies for the definition of `rapmap::utils::ChainStatus` but I cannot find it. Thanks!. ```; [ 6%] Built target libbwa; [ 12%] Built target libtbb; [ 19%] Built target libcereal; [ 26%] Built target libdivsufsort; [ 32%] Built target libstadenio; [ 38%] Built target libspdlog; [ 45%] Built target libgff; [ 47%] Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/254:143,error,error,143,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254,3,['error'],['error']
Availability,"Hi,. I have the problem that salmon quant exits with a segfault when more than one BAM file is provided. ; If the BAM files are provided one at a time, no error or segfault happens and salmon wickedly fast quantificates the transcripts. The first used BAM files where shuffled (with samtools bamshuf) as recommended in the docs. To exclude an error on my side I did:; - try unshuffled BAM files --> Segfault; - try older Salmon Version (7.2) --> Segfault; - build Salmon from source --> Segfault; - use different transcriptdata (see below) --> Segfault. The segfault happens after all reads (in all files) are processed:; `processed 48000000 reads in current roundSegmentation fault`. ### Example workflow:. Get the read data from [here](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?run=ERR1433122) for example with SRA Toolkit:; `vdb-dump -f fastq --gzip --output-file test.fastq.gz ERR1433122`. Then use STAR:. First build a genome index for the reference transcriptset from [here](https://ics.hutton.ac.uk/atRTD/) and the [TAIR10 genome](https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files); You probably have to rename the chromosomes either in the .gtf or .fas file, to have consistent names. `STAR --runThreadN 4 --runMode genomeGenerate --genomeDir genome_index/ --genomeFastaFiles TAIR10_chr_all_edited.fas --sjdbGTFfile AtRTD2_19April2016.gtf --sjdbOverhang 100`. Then map:. `STAR --runThreadN 4 --genomeDir genome_index --readFilesCommand zcat --readFilesIn test.fastq.gz --sjdbOverhang 100 --sjdbGTFfile AtRTD2_19April2016.gtf --outFileNamePrefix mapping/ --quantMode TranscriptomeSAM`. and make a .fa file from the genome and the .gtf with:; `gffread -w gff_merged.fa -g TAIR10_chr_all_edited.fas AtRTD2_19April2016.gtf`. Now make a copy of the ""Aligned.toTranscriptome.out.bam"" (for the sake of simplicity) and try; `salmon quant -l A -a Aligned.toTranscriptome.out.bam Aligned.toTranscriptome.out_copy.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/145:155,error,error,155,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/145,3,"['error', 'fault']","['error', 'fault']"
Availability,"Hi,. I just encountered an unexpected behaviour of alevin when unmated reads are provided. Are unmated reads supported by alevin at all? I did not find anything in the alevin documentation, but the parameter is there. I tried to quantify some public Illumina SureCell data. Apparently the number of threads is set to 0 (because there are no file pairs?), which is of course not a good idea. The behaviour consists if I specify the number of threads manually (e.g. -p 1). Side note: There is a typo in the threads warning message (I think). ---; Salmon v1.2.1, installed from conda. #### Error message:. ```; ## alevin (dscRNA-seq quantification) v1.2.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ index ] => { ../salmon/index/ }; ### [ unmatedReads ] => { ../samples/sc.fastq.gz }; ### [ output ] => { sc/ }; ### [ tgMap ] => { tx2gene.tsv }; ### [ end ] => { 3 }; ### [ umiLength ] => { 8 }; ### [ barcodeLength ] => { 6 }. Can't make user of more parsing threads than file (pairs); setting # of parsing threads to 0. Segmentation fault (core dumped); ```; ---. **To Reproduce**. The index is based on a gencode reference and works fine for bulk data (salmon quant). Command:; ```; salmon alevin -l A -i ../salmon/index/ --unmatedReads ../samples/sc.fastq.gz -o sc/ --tgMap tx2gene.tsv --end 3 --umiLength 8 --barcodeLength 6; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/522:587,Error,Error,587,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/522,2,"['Error', 'fault']","['Error', 'fault']"
Availability,"Hi,. I thought I would extend this issue rather than creating a new issue. Happy to create new if that would be better. I'm using the docker version of Salmon (latest version). I have also mounted a local directory. I'm getting the same error. (Note I have tried several different versions of the command, including the --no-version-check command). salmon index --gencode ; -t /home/RnaSeq/transcriptome_gencode_v29/human_GENCODEv29/gentrome.fa ; -d /home/RnaSeq/transcriptome_gencode_v29/human_GENCODEv29/decoys.txt ; -i /home/RnaSeq/transcriptome_gencode_v29/human_GENCODEv29/combined_index. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2019-07-01 12:32:42.622] [jLog] [info] building index; [2019-07-01 12:32:42.628] [jointLog] [info] [Step 1 of 4] : counting k-mers. <Several warnings about transcripts that are disliked>. [2019-07-01 12:33:02.020] [jointLog] [info] Replaced 3801867 non-ATCG nucleotides; [2019-07-01 12:33:02.020] [jointLog] [info] Clipped poly-A tails from 1630 transcripts; [2019-07-01 12:33:02.041] [jointLog] [info] Building rank-select dictionary and saving to disk; [2019-07-01 12:33:02.248] [jointLog] [info] done; Elapsed time: 0.20793s; [2019-07-01 12:33:02.252] [jointLog] [info] Writing sequence data to file . . . ; [2019-07-01 12:33:04.501] [jointLog] [info] done; Elapsed time: 2.24861s; [2019-07-01 12:33:04.572] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 469043886); [2019-07-01 12:33:08.681] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 61.4932s; done; Elapsed time: 171.743s; processed 12000000 positionsKilled. I can send log files if required. The problem I have is that I cannot seem to run quant without the quant function. salmon quant --validateMappings ; -i /home/RnaSeq/transcriptome_gencode_v29/human_GENCODEv29/combined_index -l IU ; -1 /home/RnaSeq/fastq/DM_4a_H_",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/389#issuecomment-507253562:237,error,error,237,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/389#issuecomment-507253562,1,['error'],['error']
Availability,"Hi,. I used merged genome + transcriptome file with Hisat2 to retrieve all reads in my samples, and then converted the bam files to R1. fastq, R2.fastq + singletons files. I then used Hisat2 with the three files and used the transcriptome fasta file to pull out reads which is now in bam format to be used in Salmon. When I tried using Salmon using the transcriptome fasta file and the bam file, I get this error:. WARNING: Detected suspicious pair --- ; 	The proper-pair statuses are inconsistent:; read1 [HWI-7001326F:36:C7J2GANXX:5:1104:13209:80405] : proper-pair; mapped; matemapped. read2 : [HWI-7001326F:36:C7J2GANXX:5:1104:13209:80405] : no proper-pair; mapped; matemapped. [2017-07-07 10:46:02.309] [jointLog] [warning] . ERROR: Found unpaired read in a paired-end library. The read was marked as unpaired in sequencing (not just unmapped).The two ends of a paired-end read should be adjacent. Don't know how to proceed; exiting!. I tried to sort the bam files using samtools sort -n but still I get the above error. Any advice please? Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/140:407,error,error,407,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Hi,. I was able to build and install salmon on my mac, but it's giving me this error when I try to run it:. salmon; dyld: Symbol not found: __ZNSs4_Rep20_S_empty_rep_storageE; Referenced from: /usr/local/bin/salmon; Expected in: flat namespace; in /usr/local/bin/salmon; Trace/BPT trap: 5. I have the env vars set:; DYLD_FALLBACK_LIBRARY_PATH=/usr/local/lib; DYLD_LIBRARY_PATH=/usr/local/lib. but it's still not finding something it needs. Thanks in advance for any help!. Note, I tried using the pre-packaged binary and had a similar issue:. salmon; wme18-ed2:bin bhaas$ ; wme18-ed2:bin bhaas$ ./salmon ; dyld: lazy symbol binding failed: Symbol not found: _os_unfair_lock_lock; Referenced from: /Users/bhaas/BioIfx/SALMON/Salmon-v0.8.0_macOS_10.12/bin/./salmon (which was built for Mac OS X 10.12); Expected in: /usr/lib/libSystem.B.dylib. dyld: Symbol not found: _os_unfair_lock_lock; Referenced from: /Users/bhaas/BioIfx/SALMON/Salmon-v0.8.0_macOS_10.12/bin/./salmon (which was built for Mac OS X 10.12); Expected in: /usr/lib/libSystem.B.dylib. Trace/BPT trap: 5. I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/117:79,error,error,79,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/117,1,['error'],['error']
Availability,"Hi,. I'm running into an issue with quant and hope you could help. Get this error message saying my index/versionInfo.json does not seem to exist (screenshot attached). I have single end reads spread across 5 fastq files per sample. Just trying to run one sample as a test before looping it. . I have tried building an index both with Salmon v 0.8.1 using a conda install as well as salmon v0.9.1 installing directly the binary on a linux computing cluster. . I've attached a screenshot of the indexing process (it boots me out at the end but I cant tell from the outputs if it was cut short, last thing it notes is writing sequence data to the file). I've also attached a screenshot of the generated index folder contents. The index is the most recent Ensembl FASTA cDNA download for mouse. I tried indexing a transcripts FASTA file from Gencode as well and am running into the same issue, so dont think its the specific reference. The reference transcript files are 54 and 56mb respectively, so no issues downloading and transferring to our cluster. . Any thoughts are much appreciated! Thanks!. Paul. ![screen shot 2018-02-12 at 15 37 54](https://user-images.githubusercontent.com/23369975/36214991-d3b453ec-1178-11e8-8331-d641a334c47b.png); ![screen shot 2018-02-12 at 12 41 33](https://user-images.githubusercontent.com/23369975/36214993-d3bf729a-1178-11e8-9c78-38158e423b9b.png); ![screen shot 2018-02-12 at 15 33 53](https://user-images.githubusercontent.com/23369975/36214994-d3cb52cc-1178-11e8-9f74-6cfd554ccb0a.png); ![screen shot 2018-02-12 at 15 35 16](https://user-images.githubusercontent.com/23369975/36214995-d3d50376-1178-11e8-81c3-90de0a347763.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/197:76,error,error,76,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197,3,"['down', 'error']","['download', 'downloading', 'error']"
Availability,"Hi,. I'm trying to compile Salmon like this:; `cmake -DTBB_INSTALL_DIR=/home/fc464/software/tbb -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=/home/fc464/software/salmon ..`. but during; `make`. I get this error:. ```; [ 50%] Built target alevin_core; [ 55%] Built target ksw2pp_basic; [ 57%] Built target ksw2pp_sse2; [ 58%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 73%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd30): warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /usr/local/software/spack/spack-0.11.2/opt/spack/linux-rhel7-x86_64/gcc-5.4.0/bzip2-1.0.6-xsgsccpkklxd745bl2gbgyhube56o6w4/lib/libbz2.a(bzlib.o): unrecognized relocation (0x2a) in section `.text'; /usr/bin/ld: final link failed: Bad value; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What's wrong?; Best; F",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/231:202,error,error,202,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231,5,"['Error', 'error']","['Error', 'error']"
Availability,"Hi,. Juugii, the problem seems to be stemming from the fact that, although you are using clang, you don't have lib++, or the development headers it provides installed. Thus, clang is failing to find the basic c++ library includes that it needs. The easiest way to get salmon is to install the latest version for Linux via Bioconda, or to use the docker image of the latest release (from dockethub) `combinelab/salmon:latest`, or, to download the pre-compiled Linux binary from the release page. If you really wish to compile from source, you could try installing libc++ and the development directories or, perhaps more easily, switching your compiler to GCC.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/263#issuecomment-410240722:433,down,download,433,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263#issuecomment-410240722,1,['down'],['download']
Availability,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/560:330,error,error,330,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560,1,['error'],['error']
Availability,"Hi,. Quick question- if I have the reads for a library spread across multiple files, is it appropriate to run Alevin separately on each file pair and combine with quantmerge, rather than processing together? I'm looking to run Alevin via Galaxy for some training, and the available wrapper doesn't currently allow supplying multiple inputs. My feeling is that all files should be processed together for robust thresholding etc, but I may be worrying about nothing.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/434:272,avail,available,272,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/434,2,"['avail', 'robust']","['available', 'robust']"
Availability,"Hi,. We (@emilyburke, @andrewejaffe and me) can successfully run salmon using 1 core in the SGE-managed cluster we have access to. The problem is that for some reason we have to request a lot of memory, thus reducing the number of jobs we can run simultaneously and increasing the overall time it takes to process datasets. . I see in https://github.com/COMBINE-lab/salmon/issues/97 that you suggest using `--perfectHash` and a newer `salmon` version, which we haven't tried and might end up being the solution. Here is the bash script we used to run `salmon` for a 422 sample dataset:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:833,echo,echo,833,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,7,['echo'],['echo']
Availability,"Hi,. Yes, I did install with bioconda. Thanks for the link to the precompiled; version, which I downloaded and unzipped. I'm sorry to be so ignorant (my; unix knowledge is 25 years out of date) but how/where should I install; this?. Also, currently ""which salmon"" gives me the bioconda version. I guess I; will need to add the path to the precompiled version on the end of my PATH; environment variable?. Thanks,; Michael. On Sat, Nov 24, 2018 at 3:51 PM Rob Patro <notifications@github.com> wrote:. > Hi @michael-brent <https://github.com/michael-brent> ,; >; > Did you, by any chance, install via bioconda? There is a known issue with; > the bioconda build on OSX. Can you try this; > <https://github.com/COMBINE-lab/salmon/files/2383948/salmon_0.11.4-pre_OSX.tar.gz>; > pre-compiled binary in the meantime to see if it works for you?; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441398017>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ArM27mCF3NQcGVuZHpU3-8mb2_6WI7NIks5uyb9egaJpZM4YxmdA>; > .; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441447779:96,down,downloaded,96,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-441447779,1,['down'],['downloaded']
Availability,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/250:626,Error,Error,626,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250,4,"['Error', 'avail', 'error', 'fault']","['Error', 'available', 'error', 'fault']"
Availability,"Hi,. first of all congratulations on a great tool, the expansion to scRNA-seq analysis is especially appreciated!. I was wondering what the reason for setting an upper limit on the barcode length in alevin is - would longer barcodes affect the computation in some manner? We are working with barcodes of length 27, which are incompatible with the hardcoded upper barcode length limit [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). I manually raised the limit on a modified alevin version, and the final output looks as expected, so if there is no risk that I am unaware of, would you consider raising or removing the barcode length limit altogether?. Thank you for you help!. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Using the manual barcode and UMI specification with `--end`, `--barcodeLength`, and `--umiLength` fails for barcodes longer than 20 with the error message:; ```; Barcode length (27) was not in the required length range [1, 20].; ```; The barcode length upper limit is hardcoded [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). **To Reproduce**; In Salmon 1.0.0, run `salmon alevin [...] --end 5 --barcodeLength 27 --umiLength 8` (or any `barcodeLength` value above 20). * Which version of salmon was used? 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? not relevant; * Which read files were used? not relevant; * Which which program options were used? `--end 5 --barcodeLength 27 --umiLength 8`. **Expected behavior**; Ideally, barcode longer than 20 would be processed as normal. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Mac OS X; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/445:1004,error,error,1004,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/445,1,['error'],['error']
Availability,"Hi,. first of all, I really like using Salmon for RNAseq quantification. I have a very special problem. We are working with experimental conditions in which transposons get activated and highly expressed. This initially caused my RNAseq quantification to be wrong as transposon reads got assigned to genic transcripts. I can circumvent this problem mostly by adding the transposon transcripts into the index.; Still there are some regions that are 1:1 identical between transposons and genes that still cause problems. The gene in the examples is not expressed in the cells I use which is more or less what Salmon gives me for WT conditions. Still I get TPMs of >12 in my experimental conditions due to the heavy transposon deregulation. You can see this here in this chart where I overlay the mappings from salmon in WT and in the experimental knockout (KO):; ![image](https://user-images.githubusercontent.com/12491961/39418440-bfbca0f2-4c5a-11e8-8bde-f2da0cca2658.png). The only region covered is the transposon piece and the rest of the transcript is uncovered. . Is there any way to avoid such wrong quantification by some settings, or is it possible to mask such regions upstream?. Any help would be appreciated. . All the best and thank you,; Dominik",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/217:1159,mask,mask,1159,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/217,1,['mask'],['mask']
Availability,"Hi,. this is the error i get, when making a transcript index using salmon. I am using the decoy making script to make the decoy, which the script makes but fails when creating the index!. Specifically, please provide at least the following information:. Which version of salmon was used?; Version: salmon 0.14.1; How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; Which reference (e.g. transcriptome) was used?; Pig transcriptome; Which read files were used?; None; Which which program options were used?; command line:. salmon index -t gentrome.fa -i ../salmon_index -decoys decoys.txt -k 31; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; index [""../salmon_index""] did not previously exist . . . creating it; [2019-06-27 16:02:56.612] [jLog] [info] building index; [2019-06-27 16:02:56.614] [jointLog] [error] The decoy file ecoys does not exist. I did use the SalmonTools to make the decoy file (few lines). INFO, skch::Sketch::computeFreqHist, With threshold 0.001%, ignore minimizers occurring >= 5124 times during lookup.; INFO, skch::main, Time spent computing the reference index: 727.737 sec; INFO, skch::Map::mapQuery, [count of mapped reads, reads qualified for mapping, total input reads] = [40777, 40831, 45898]; INFO, skch::main, Time spent mapping the query : 1912.34 sec; INFO, skch::main, mapping results saved in : mashmap.out; [4/10] Extracting intervals from mashmap alignments; [5/10] Merging the intervals; [6/10] Extracting sequences from the genome; index file reference.masked.genome.fa.fai not found, generating...; [7/10] Concatenating to get decoy sequences; [8/10] Making gentrome; [9/10] Extracting decoy sequence ids; [10/10] Removing temporary files; **********************************************; *** DONE Processing ...; *** You can use files `$outfolder/gentrome.fa` ; *** and $outfolder/decoys.txt` with ; *** `salmon index`; ****",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/389:17,error,error,17,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/389,3,"['down', 'error']","['downloaded', 'error']"
Availability,"Hi,; Downgraded to version 0.11.3 of salmon using conda and the segmentation fault doesn't occur anymore. So must be an issue in the conda build of version 0.12.0 of salmon. ; Thanks",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/337#issuecomment-457573475:5,Down,Downgraded,5,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337#issuecomment-457573475,2,"['Down', 'fault']","['Downgraded', 'fault']"
Availability,"Hi,; I am having trouble with salmon on linux, I downloaded salmon through bioconda and was following your ""GETTING STARTED"" tutorial, followed the code exactly and it all worked fine except I am not getting the quant.sf file for any of the samples. I also tried it on my own mRNA fastq files and the same thing happened. I am able to get all the other files like the log in its own directory. The log files are empty though so I was not able to get any information as to what is wrong. I am not getting any errors either so I don't really know where to start looking.; Any help you can give would be much appreciated.; Thank you,; Tj.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/239:49,down,downloaded,49,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239,2,"['down', 'error']","['downloaded', 'errors']"
Availability,"Hi,; I am new to using salmon. I have tried quantifying one of my samples in both alignment and mapping-based modes. In both cases I get an error saying ""unrecognised option"" for various parts of the command (including both the ""-i"" and ""-t"" flags). Below is an example of my code and the error:. salmon quant -t References/Ensembl/Homo_sapiens.GRCh37.cdna.all.fa\; -l A\; -a bam_files/RNA_007_7669.Aligned.out.sort.com.bam\; -o salmon_quant_trial; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '-t'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. Do you know why flags such as -i and -t are not being recognized? I have tried using --index and --targets instead which hasn't helped. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/764:140,error,error,140,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/764,2,['error'],['error']
Availability,"Hi,; I am used to work with RNA-seq data sets from human or mouse (thus well-annotated organisms), for which I always use Salmon.; Now a colleague of mine asked whether I could help him with analyzing a data set obtained from a non-model organism (A) for which even no reference transcriptome is available. I therefore would like to map the reads to the transcriptome of the closest species (B) available in ENSEMBL. [It basically resembles the situation mentioned [here](https://www.biostars.org/p/253396/) at the BioStars forum, but then at the transcriptome level]. . I started by running Salmon using the settings I normally use for mouse, but the the percentage of mapped reads is extremely low, i.e varying between 0.5-2%. That it would be lower than usual I expected, but not this low....; Because I cannot easily see the forest for the trees, I would appreciate if some suggestions could be given that in effect 'relax' the criteria for mapping, eventually resulting in an increased mapping%. Thanks!; G. My code/arguments:; Input: 150 bp paired-end RNA-seq data.; Average number of reads per sample: ~22M. Transcriptome index file is 'decoyed'; generated with default settings (k=31). Salmon arguments:; ```; /home/guidoh/SALMON/salmon-latest_linux_x86_64/bin/salmon quant -i ./Lotgi1_combined_index \; 	--libType A \; 	--seqBias \; 	--gcBias \; 	--biasSpeedSamp 5 \; 	--validateMappings \; 	--numGibbsSamples 20 \; 	-1 ${F1} \; 	-2 ${R1} \; 	-o ${salmonsubdir}$fn4; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/403:296,avail,available,296,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/403,2,['avail'],['available']
Availability,"Hi,; I don't want to report a bug, but rather have 2 (unrelated) questions:; Because we don't generate that many RNA-seq data sets, I am using Salmon every now and then. I really like the program (speed!) and the obtained results. - Since I don't use Salmon on a daily basis, I usually have (would like) to update Salmon to its latest release. For these the binaries you (used to) provide are very convenient. I noticed that these are not explicitly linked to anymore on the page `https://github.com/COMBINE-lab/salmon/releases`, although these still are available through [this link](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) that is regularly posted on this Github 'forum'. Please note that I learned you favor the Bioconda route for keeping Salmon up to date. Nevertheless, provided it doesn't take too much effort, I would appreciate it very much if you could still make the binaries available. - My 2nd question has to do with some basic QC-ing: I am currently analyzing a set of 96 mouse samples. While running Salmon, I noticed most samples do have a nice percentage of mapped reads (>80%), but I also noticed that for samples this percentage was much lower (<50%).; Q: Is there an easy way of obtaining these numbers (""percent_mapped"") for all samples that were mapped in a Salmon run (without manually reviewing all 96 samples the 'meta_info.json' file)? In other words, how to obtain an 'overall log file'?. Thanks,; Guido",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/252:555,avail,available,555,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252,2,['avail'],['available']
Availability,"Hi,; I found the point, it was my fault... I've replaced salmon by a script calling salmon after changing the working directory, so salmon can both be in the PATH and find its libraries, forgetting that relative paths will hence not work.; I guess playing with LD_LIBRARY_PATH would be a better way to achieve that.; Sorry for the disturbance",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/420#issuecomment-524756680:34,fault,fault,34,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420#issuecomment-524756680,1,['fault'],['fault']
Availability,"Hi,; I get this error:. salmon: /drone/src/github.com/COMBINE-lab/salmon/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:16,error,error,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,1,['error'],['error']
Availability,"Hi,; I just installed salmon using conda. I tried to execute the sample test that comes on the main page: https://combine-lab.github.io/salmon/getting_started/. When I try to run the quantification code; #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 --validateMappings -o quants/${samp}_quant; done ; even though the files are there, in the data directory, the tool seems to not recognize the fastq files and pops the following error for every DRR0161xx_x.fastq.gz file:; ERROR: file [DRR016140_2.fastq.gz] does not appear to exist!. ]; salmon quant was invoked improperly. Is this some common error or is it a new bug?; Thanks in advance for any response/suggestion on how to proceed here",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/963:277,echo,echo,277,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/963,4,"['ERROR', 'echo', 'error']","['ERROR', 'echo', 'error']"
Availability,"Hi,; I run the command `salmon alevin -i index -p 4 -l SR --chromium --sketch -r 1.fastq.gz -o ./output` with single-end data as input . Although it didn't generate error, it didn't map anything. Can I use two single-end data from different samples as pair-end data to run `salmon alevin `. Thank you !. and here is a part of the output ; ```; [2022-04-23 17:54:35.286] [jointLog] [info] done; [2022-04-23 17:54:37.347] [jointLog] [info] Index contained 127,042 targets; [2022-04-23 17:54:37.628] [jointLog] [info] Number of decoys : 0. [2022-04-23 17:54:38.715] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2022-04-23 17:54:38.715] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2022-04-23 17:54:38.715] [jointLog] [info] Selectively-aligned 0 total fragments out of 0; [2022-04-23 17:54:38.715] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2022-04-23 17:54:38.715] [jointLog] [info] finished sc_align(); [2022-04-23 17:54:39.453] [alevinLog] [info] sc-align successful.; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/769:165,error,error,165,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/769,1,['error'],['error']
Availability,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/112:345,Down,Downloading,345,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112,3,"['Down', 'down', 'error']","['Downloading', 'downloaded', 'error']"
Availability,"Hi,; I was just trying to update my installation of Salmon last night, and encountered a series of errors in compilation:; ```; .../salmon/include/SalmonIndex.hpp:254:43: error: ‘class RapMapSAIndex<long int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<long int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481da",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/418:99,error,errors,99,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418,4,['error'],"['error', 'errors']"
Availability,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/339:1245,repair,repair,1245,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339,1,['repair'],['repair']
Availability,"Hi,; I would like quantify guide-RNAs (based on 5'-tagged scRNAseq 10X feature barcoding) using Alevin. Read 1 is 26bps long (16 CB +10 UMI) and Read 2 is 58bps long (19 constant region + 21 guide sequence). Now, when I use the following settings . `salmon alevin -l ISR --barcodeLength 16 --umiLength 10 --end 5 --featureStart 19 --featureLength 21 `. I get this error . > `Transcript to Gene Map File not provided`. . However, when I use the following instead. `salmon alevin -l ISR --citeseq --featureStart 19 --featureLength 21; `. It works but since `--citeseq` assumes `--umiLength=12`, I get the following output . > `[2020-06-03 13:53:30.298] [alevinLog] [info] set CITE-seq minScoreFraction parameter to : 0.797619; > ; > [2020-06-03 13:53:30.298] [alevinLog] [info] Found 64 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); > [2020-06-03 13:53:30.298] [alevinLog] [info] Filled with 64 txp to gene entries ; > [2020-06-03 13:53:30.298] [alevinLog] [info] Found all transcripts to gene mappings; > [2020-06-03 13:53:30.304] [alevinLog] [info] Processing barcodes files (if Present) ; > ; > ; > processed 52 Million barcodes; > ; > [2020-06-03 13:54:43.733] [alevinLog] [info] Done barcode density calculation.; > [2020-06-03 13:54:43.733] [alevinLog] [info] # Barcodes Used: 52200250 / 52200250.; > [2020-06-03 13:54:43.826] [alevinLog] [info] Forcing to use 100000 cells; > [2020-06-03 13:54:43.964] [alevinLog] [info] Throwing 49909 barcodes with < 10 reads; > [2020-06-03 13:54:43.984] [alevinLog] [info] Total 50092(has 201 low confidence) barcodes; > [2020-06-03 13:54:44.191] [alevinLog] [info] Done True Barcode Sampling; > [2020-06-03 13:54:44.285] [alevinLog] [info] Total 1.70493% reads will be thrown away because of noisy Cellular barcodes.; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done populating Z matrix; > [2020-06-03 13:54:45.790] [alevinLog] [info] Total 0 CB got sequence corrected; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done indexing B",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/531:364,error,error,364,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531,1,['error'],['error']
Availability,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/420:99,error,error,99,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420,2,"['avail', 'error']","['available', 'error']"
Availability,"Hi,; It does not seem to work through bioconda, I am trying to install the latest release on OSX with conda but I keep getting the following error:. ```; $ conda install -c bioconda salmon ; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon; - boost=1.64; - salmon; - libcxx==4.0.0. Current channels:. - https://conda.anaconda.org/bioconda/osx-64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/osx-64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/free/osx-64; - https://repo.anaconda.com/pkgs/free/noarch; - https://repo.anaconda.com/pkgs/r/osx-64; - https://repo.anaconda.com/pkgs/r/noarch; - https://repo.anaconda.com/pkgs/pro/osx-64; - https://repo.anaconda.com/pkgs/pro/noarch; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379743230:141,error,error,141,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-379743230,2,"['avail', 'error']","['available', 'error']"
Availability,"Hi,; Thanks for your reply. Yes, this is very much possible that a spurious mapping to a longer transcript is masking the original mapping, I find it extremely interesting from a mapping perspective. ; There are two ways to track down this, if the read file and reference are sharable, I can try to track the mapping artifact, otherwise, I would request you to try [this branch](https://github.com/COMBINE-lab/salmon/tree/selective-alignment-09) of salmon. The build process of the branch is identical with Salmon, and below is the instruction to run it. ; ```. build/src/salmon index -t Nbv5.1_TrPrm_NtCorrect.fasta -t Nbv5.1_TrPrm_NtCorrect_index; build/src/salmon quant -i Nbv5.1_TrPrm_NtCorrect_index -la -r <read file> -o <quant_dir> --softFilter --editDistance 4 --rangeFactorization 4. ```; This branch is not exactly designed for single end data, but I would be interested to see if there is any change. If you can provide me with some example dataset I will push possible bug fixes ASAP.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-385753659:110,mask,masking,110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/218#issuecomment-385753659,2,"['down', 'mask']","['down', 'masking']"
Availability,"Hi,; for a previous human deep mRNA-seq project I had downloaded the full decoy-aware hg38 salmon index from refgenie. I am now working on a new project and I see that the full index is no longer available on refgenie. Is this index available somewhere or do I need to construct it?; Thanks, Ina",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/658:54,down,downloaded,54,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/658,3,"['avail', 'down']","['available', 'downloaded']"
Availability,"Hi,; it goes literally in panic: . ```; panic: runtime error: slice bounds out of range. goroutine 1 [running]:; github.com/sylabs/singularity/internal/pkg/util/uri.Split(0x7ffd422b2b65, 0x1f, 0xc00003c195, 0xc0004852f0, 0xc0004e5c78, 0x929217); 	/tools/others_tools/Go/go-1.11.2/src/github.com/sylabs/singularity/internal/pkg/util/uri/uri.go:104 +0x13e; github.com/sylabs/singularity/cmd/singularity/cli.replaceURIWithImage(0x19d2a60, 0xc0000b8900, 0x11, 0x12); 	/tools/others_tools/Go/go-1.11.2/src/github.com/sylabs/singularity/cmd/singularity/cli/actions.go:189 +0x5d; github.com/sylabs/singularity/vendor/github.com/spf13/cobra.(*Command).execute(0x19d2a60, 0xc000030160, 0x12, 0x12, 0x19d2a60, 0xc000030160); 	/tools/others_tools/Go/go-1.11.2/src/github.com/sylabs/singularity/vendor/github.com/spf13/cobra/command.go:755 +0x4ed; github.com/sylabs/singularity/vendor/github.com/spf13/cobra.(*Command).ExecuteC(0x19d65c0, 0x0, 0xf6, 0xfc0b01); 	/tools/others_tools/Go/go-1.11.2/src/github.com/sylabs/singularity/vendor/github.com/spf13/cobra/command.go:852 +0x2fd; github.com/sylabs/singularity/vendor/github.com/spf13/cobra.(*Command).Execute(0x19d65c0, 0x4, 0x1133611); 	/tools/others_tools/Go/go-1.11.2/src/github.com/sylabs/singularity/vendor/github.com/spf13/cobra/command.go:800 +0x2b; github.com/sylabs/singularity/cmd/singularity/cli.ExecuteSingularity(); 	/tools/others_tools/Go/go-1.11.2/src/github.com/sylabs/singularity/cmd/singularity/cli/singularity.go:114 +0x110; main.main(); 	/tools/others_tools/Go/go-1.11.2/src/github.com/sylabs/singularity/cmd/singularity/cli.go:16 +0x20; ```; with -e you clean environment before running container.; I haven't found how to add the environmental variable, but logging in as shell and exporting the variable, it works ( or at least, I discover that I have to rebuild the index since it was built with the old verision in RapMap). I'll see if there is another way to import the variable or I'll build an image with the env; Thanks ; Claudio",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/447#issuecomment-553005722:55,error,error,55,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/447#issuecomment-553005722,1,['error'],['error']
Availability,"Hi,; this problem was considered in issue 104 and I have been following the instructions given there. I am running Salmon in alignment mode on bam files generated by STAR (unsorted and in transcriptome coordinates). I generated a transcriptome fasta file for Salmon (according to issue 104) with ; gffread -w all_transcripts.fa -g Homo_sapiens.GRCh38.dna.primary_assembly.fa Homo_sapiens.GRCh38.103.gtf; where the two genome files (fa and gtf) were used with STAR. ; When running Salmon with this fasta file, I get the following output and error message:. Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.4.0; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { all_transcripts.fa }; # [ libType ] => { A }; # [ threads ] => { 10 }; # [ alignments ] => { /groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Sal; mon/4010760_5_mono_S58_L002_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L003_R1_001.fastq_AT; _QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L004_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.b; am }; # [ output ] => { 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/638:540,error,error,540,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638,1,['error'],['error']
Availability,"Hi,; would you mind cleaning up the STDOUT and STDERR output from `salmon quant` and `salmon index`? Commonly `STDOUT` should be used for normal output messages and `STDERR` for errors or at worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:178,error,errors,178,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,3,['error'],"['error', 'errors']"
Availability,"Hi. :); I don't know if I should make this request here, but, if not, ou (adm) can delete it, but please, read first, it is important. In the Tutorial (Getting start) of the Salmon's page, in the Step 4 when we must to run the Script to Quantify the samples, the link to the script (**quant_tut_samples.sh** -- Link below to help) sends us to a page with a script different (and wrong) tha the script on the Tutorial's page. More specifically, the error is in the line 8 with this comand **(-2 ${samp}_2.fastq.gz \)**. Notice that the comand **(${fn}/)** is missing, which causes an error in the script run, which don't create the files in the respective folders, because it does not find de file DRR0161xx_2.fastq.gz.; I soffered to perceive this, because I went straight to the link and didn't read the script on page itself kkkkk, I think you need to fix this for other people be more to be happier with this tutorial, which is very good by the way. As I said, I don't know if this is where I should send this request, but, if you fix this error it's what matters now. **-- Script Link --** ; https://raw.githubusercontent.com/COMBINE-lab/salmon/gh-pages/assets/quant_tut_samples.sh. thank you very much. **C.B.; @charbavito**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/546:448,error,error,448,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/546,3,['error'],['error']
Availability,"Hi. Can someone please tell me how to get rid of the gene names and other weird names but only keep transcript names in `quant.sf`? Here is what my `quant.sf `looks like:. Name Length EffectiveLength TPM NumReads; ENST00000456328.2|ENSG00000223972.5|OTTHUMG00000000961.2|OTTHUMT00000362751.1|DDX11L1-202|DDX11L1|1657|processed_transcript| 1657 1502.212 0.752165 16.577; ENST00000450305.2|ENSG00000223972.5|OTTHUMG00000000961.2|OTTHUMT00000002844.2|DDX11L1-201|DDX11L1|632|transcribed_unprocessed_pseudogene| 632 477.467 0.000000 0.000. Also I am wondering if this is the reason why the error occurs when I import the data and run `tximeta` in R.; It says Error in checkAssays2Txps(assays, txps) :; none of the transcripts in the quantification files are in the GTF. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/513:586,error,error,586,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/513,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi. I would like to know where I can get detailed info for different fields that get listed in meta_info.json. I can see some information listed in the section ""New information available in meta_info.json:"" in this page https://github.com/COMBINE-lab/salmon/releases. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/446:177,avail,available,177,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/446,1,['avail'],['available']
Availability,"Hi:; Recently, I learned to use salmon in our lncRNA research project. I am confused in a point. ; As shown in the documentation (https://salmon.readthedocs.io/en/latest/salmon.html), according to our understanding, if we want those incompatible mappings will be discarded, the incompatPrior should be set as 0.0. And our RNA-Seq library type is dUTP based strand-specific RNA-Seq, so we should use ISR. ; But I am confused with https://gitter.im/COMBINE-lab/salmon?at=594a76d402c480e67268f02b and https://github.com/COMBINE-lab/salmon/issues/116; we want the expression level of antisense. Since there are about 0.5~1% reads can be the wrong reads mapped to the reverse strand of the gene (dUTP stranded protocol, the strand error (i.e. % of reads sequenced from the wrong strand of the RNA) is typically 0.5-1%). Can we use the incompatPrior option and get the expression level of antisense(right) in a single run?; This is our command line `salmon quant -i Ath_TX.index -l ISR -1 test_R1.fq.gz -2 test_R2.fq.gz -o TEST_TX_QUANT --incompatPrior 0.0 --seqBias --gcBias --threads 20`.; That those wrong mapped alignments (they didn't follow the ISR fule, maybe the error from the error of process of library construction) will be discarded.; Thank you and all the best.; Linhua",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/182:726,error,error,726,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/182,3,['error'],['error']
Availability,Hi; I reply as an author of the Scientific Reports paper referred to above. The salmon analysis was done in May 2018 using salmon v 0.9.1. I should have noted the version in the paper as I did for other software used - my slip up there.; It did take longer than expected to get the work written up and published. In the meantime there have been changes to Salmon. When I used it I am not sure the --noLengthCorrection flag was available ?? If it was then it wasn't apparent to me in the documentation.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/449#issuecomment-565314277:427,avail,available,427,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/449#issuecomment-565314277,1,['avail'],['available']
Availability,"Hm. I had to tweak a few bits in the cmake file for it to compile here due; to the firewall I'm behind (generally no ftp access) so it must have been a; side effect of that. I tried to make sure I was starting from a clean slate; to verify before posting, but guess I wasn't. Jason. On Tue, Jun 9, 2015 at 4:12 PM, Rob Patro notifications@github.com wrote:. > Strange! I should still be using Jellyfish 2.1.3 (; > https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L355).; > I'm not sure why it was fetching 2.2.0 for you. Anyway, I'm glad that this; > seems to resolve the error with the bias correction --- thanks for; > reporting back here. I'll probably roll this and a few other small changes; > into a v0.4.1 soon.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110489862.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110492510:588,error,error,588,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110492510,1,['error'],['error']
Availability,Hmm strange! But `conda install salmon` still gives the same error for me.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-1137172685:61,error,error,61,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-1137172685,1,['error'],['error']
Availability,"Hmm, something's up. I just deleted my previous transcripts_quan directory, replaced salmon with this newer version, and ran the same command. It finishes almost immediately with a return value of 1. ```; $ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; there is [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; 1 lib; [jorvis@grid-1-3-4 salmon]$ echo $?; 1; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan; logs; [jorvis@grid-1-3-4 salmon]$ ls transcripts_quan/logs/; salmon_quant.log; [jorvis@grid-1-3-4 salmon]$ cat transcripts_quan/logs/salmon_quant.log ; [2016-03-31 12:30:21.714] [jointLog] [info] parsing read library format; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075:858,echo,echo,858,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-204011075,1,['echo'],['echo']
Availability,"Ho @rob-p,. I changed gcc version so many times, I changed cluster, nothing. I tried with conda and it works, kind of. But apparently the bioconda version the [0.101](https://anaconda.org/bioconda/salmon) and is not the latest:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ```; Anything to be worried?; Thanks; F",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394448744:281,avail,available,281,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394448744,2,['avail'],['available']
Availability,Homebred-Science is still having some issues (but I don't think it's salmon's fault). However 0.8.2 is now available via bioconda :) https://github.com/bioconda/bioconda-recipes/pull/4208. Let me know if you have any problems. --Rob,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/128#issuecomment-287567714:78,fault,fault,78,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/128#issuecomment-287567714,2,"['avail', 'fault']","['available', 'fault']"
Availability,"Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: via singularity; while running manually to troubleshoot: conda.; * Which reference (e.g. transcriptome) was used? Homo_sapiens.GRCh38 transcriptome + genome as a 'gentrome'; * Which read files were used? newly sequenced bulk RNAseq reads. **Expected behavior**; All samples with similar numbers of reads using the same index to finish in roughly the same amount of time. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Pop!_OS 22.04 LTS x86_64 [Linux]; - Version: ; ``` ; $ uname -a; Linux pop-os 6.0.2-76060002-generic #202210150739~1666289067~22.04~fe0ce53 SMP PREEMPT_DYNAMIC Thu O x86_64 x86_64 x86_64 GNU/Linux. $lsb_release -a; No LSB modules are available.; Distributor ID:	Pop; Description:	Pop!_OS 22.04 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; - I can't share these reads publicly but might be able to share personally (but I'd have to ask first). - I tried using the suggestion from previous issues (e.g. [--hitFilterPolicy BOTH](https://github.com/COMBINE-lab/salmon/issues/527)) to use `--hitFilterPolicy BOTH` but it didn't seem to help. - I tried trimming polyX tails with `fastp` but that didn't help either. - To try and see if `salmon` was causing the issues, I thought I'd try `kallisto` as a similar-ish comparison. `kallisto` mapped the reads with 100 EM bootstraps in about 25 minutes. Commands:. ```; kallisto index -i transcripts.idx genome.transcripts.fa; kallisto quant -i transcripts.idx -o output -b 100 <(zcat ${R1}) <(zcat ${R2}) -t 6; ```. Thanks for the tool - hopefully this is easy to sort out!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:12024,avail,available,12024,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['avail'],['available']
Availability,"Hrmm the first error looks like some missing symbols; strange, since it seems to be looking in the right place. Can you tell me what system / compiler etc. are being used?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201253665:15,error,error,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201253665,1,['error'],['error']
Availability,"I agree completely with that complaint. Originally, I started using TBB instead of OpenMP because OSX's clang compiler didn't have OpenMP support. It's possible I will revisit this decision in the future, as I think that is no longer the case. On the other hand, this bug looks not to be TBB's fault. I pushed a fix, but then I explicitly resized the hash *before* setting the max thread count. I just pushed an update to this branch --- can you see if that helps?. Thanks!; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396093096:294,fault,fault,294,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-396093096,1,['fault'],['fault']
Availability,"I agree with the @roryk's suggestion and that was indeed the motivation to have whitelisting step downstream of deduplication in Alevin.; @pinin4fjords sounds good, I will add this into the todo list for next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490165970:98,down,downstream,98,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490165970,1,['down'],['downstream']
Availability,"I also have had to submit indexing jobs with much larger resources and times since the switch to the new indexing method with whole genome decoys. Prior to this I could built and index asking for only 16GB of ram in minutes. Now, I have to request ~256GB of memory and it runs for 7-10 hours. These are just ""standard"" mouse transcriptomes (GENCODE M23). I should note that using 17-mers as my kmer length dramatically increased these requirements. I re-ran using 31-mers, and the time reduces to a couple of hours and only used ~20GB of memory. I've attached two files that have summaries of the resources used in the jobs I ran in the above. Everything about these jobs is the same, except for the k-mer lengths. I requested the same amount of resources for each, but you can see that the one labeled 31mer has drastically less ""ru_maxrss"", which is the maximum amount of memory used by the process (it's in KB, although it's not labeled in the log). I also noted that there weren't any hard page faults for either of the jobs (""ru_majflt""). The longer job did have more soft page faults/page reclaims (""ru_minflt""). I don't know if that's useful information or not. [qacct-17mer.log](https://github.com/COMBINE-lab/salmon/files/4172209/qacct-17mer.log); [qacct-31mer.log](https://github.com/COMBINE-lab/salmon/files/4172210/qacct-31mer.log)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/476#issuecomment-583526416:999,fault,faults,999,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/476#issuecomment-583526416,2,['fault'],['faults']
Availability,"I also tried on the `testing` image. For more detail, here are the steps performed (perhaps taking a look at the installed packages will highlight a difference, as I did this from a clean testing Docker image, so my environment had nothing else in it). ### Attempt to reproduce segfault on Debian:testing. ```{bash}; $ docker pull debian:testing. $ docker run -it debian:testing. $ apt-get update. $ apt-get install build-essential git libboost-all-dev liblzma-dev libbz2-dev cmake zlib1g-dev curl unzip wget libcurl4-openssl-dev. $ git clone https://github.com/COMBINE-lab/salmon.git; $ cd salmon; $ mkdir build && cd build; $ cmake -DNO_IPO=TRUE .. # GCC still doesn't handle LTO robustly; $ make -j8; $ make install; $ make test; ```. which leads to the output. ```; root@fd877e359439:/salmon/build# make install; [ 7%] Built target libcereal; [ 13%] Built target libtbb; [ 16%] Built target ntcard; [ 19%] Built target graphdump; [ 27%] Built target twopaco; [ 29%] Built target ksw2pp_sse2; [ 32%] Built target ksw2pp_sse4; [ 37%] Built target ksw2pp_basic; [ 38%] Built target ksw2pp; [ 59%] Built target puffer; [ 73%] Built target salmon_core; [ 76%] Built target alevin_core; [ 77%] Built target UnitTestsMain; [ 81%] Built target unitTests; [100%] Built target salmon; Install the project...; -- Install configuration: ""Release""; -- Installing: /salmon/lib/libntcard.a; -- Installing: /salmon/lib/ntcard/ntcard-targets.cmake; -- Installing: /salmon/lib/ntcard/ntcard-targets-release.cmake; -- Installing: /salmon/lib/libgraphdump.a; -- Installing: /salmon/lib/graphdump/graphdump-targets.cmake; -- Installing: /salmon/lib/graphdump/graphdump-targets-release.cmake; -- Installing: /salmon/lib/libtwopaco.a; -- Installing: /salmon/lib/twopaco/twopaco-targets.cmake; -- Installing: /salmon/lib/twopaco/twopaco-targets-release.cmake; -- Installing: /salmon/lib/libtbb.so; -- Installing: /salmon/lib/libtbb.so.12; -- Installing: /salmon/lib/libtbb.so.12.5; -- Installing: /salmon/lib/libtbbmalloc",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1463312554:682,robust,robustly,682,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1463312554,1,['robust'],['robustly']
Availability,I am also running the same MacOS 10.12.6 and having a similar issue. I cannot get the provided binary to work either. I still get segmentation fault. The index seems to build but quantifying any samples is where I receive 'segmentation fault: 11'. Thanks for any advice.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-442681558:143,fault,fault,143,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318#issuecomment-442681558,2,['fault'],['fault']
Availability,"I am analyzing single cell RNAseq with10x chemistry.; I have my own transcriptome from long read sequencing and followed all the steps, prepare metadata, make the gentrome.fasta, indexing, using bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] E",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/540:250,error,error,250,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540,1,['error'],['error']
Availability,"I am assuming what you are looking for is the ""effective lengths"" of the transcripts i.e. not just the original transcript lengths but instead corrected based on the quantification model. I think it's going to be tricky to generate that because of two major reasons: (1) salmon model does not perform length correction in single-cell mode mainly due to 3' single-end sequencing of the read it's hard to reliably estimate the fragment lengths (2) salmon in single-cell mode performs quantification at gene-level which makes it harder to predict effective length of the transcripts.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/693#issuecomment-916889943:403,reliab,reliably,403,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/693#issuecomment-916889943,1,['reliab'],['reliably']
Availability,"I am assuming you gave the `--chromium` to `pbmc_4k` data too and it's throwing error, since the above log doesn't seems to have it. I am puzzled because it should have complained much before starting reading the fastq. Can you please try the following command: ; ```; salmon alevin -p 10 -lISR --chromium --no-version-check -1 /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz -2 /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz -i /path/to/salmonIndex -o alevin_output --tgMap tx2gene.tsv; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410328801:80,error,error,80,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410328801,3,"['down', 'error']","['downloads', 'error']"
Availability,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:394,error,error,394,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,4,"['down', 'error']","['downstream', 'error']"
Availability,"I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. Details below:. salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. The output is below. If I run the bash shell on all the A. thaliana samples it produces the same seg fault on each one. However the number that appears immediately before ""Segmentation fault"" (914 below) varies from one invocation to the next, even on the same data file. . I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.). (salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828:39,fault,fault,39,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317#issuecomment-441396828,3,['fault'],['fault']
Availability,I am getting the same error on the latest binary distro. I am running CentOS Linux 7 (Core).; Does this affect the performance?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-440346529:22,error,error,22,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-440346529,1,['error'],['error']
Availability,"I am having trouble with this. I'm at the cmake step and don't really know what I'm doing wrong but keep getting the error:. `CMake Error: The source directory ""/home/csijcs/salmon-0.11.1-linux_x86_64/build"" does not appear to contain CMakeLists.txt`",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436618:117,error,error,117,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436618,2,"['Error', 'error']","['Error', 'error']"
Availability,"I am intending to run salmon on a set of RNA-Seq data lying in our lab for a long time. They are for mm9 and since there are >50 samples I was intending to run it using Salmon `version : 0.6.0`. I have used earlier versions of salmon on hg19 data from both UCSC, NCBI (spiked-in and non-spiked in data) without alignment mode and have run them successfully. Recently we were able to download the latest version and compile and trying to run the indexing on the UCSC mm9 genome.fa file so that I can use quasi-mapping indexes that can be then used to run quant for my samples downstream so getting read counts as well as TPM much faster than any other tool. Can you tell me what is the problem. . Command line used; `salmon index -t /path_to/genome.fa -i salmonquasi-indexes --type quasi -k 31`. Here is the error message while using the Ram-Map. ```; Version Info: This is the most recent version of Salmon.; index [""salmonquasi-indexes""] did not previously exist . . . creating it; [2016-03-17 10:41:34.655] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; Elapsed time: 53.9731s. Replaced 96385738 non-ATCG nucleotides; Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.196609s; Writing sequence data to file . . . done; Elapsed time: 1.56391s; [info] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/49:383,down,download,383,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49,3,"['down', 'error']","['download', 'downstream', 'error']"
Availability,"I am interested in using Alevin to quantify some single nucleus RNA-seq data but am wondering what the best approach would be to get Alevin to appropriately handle the significant number of intronic reads. Issue #450 raised a similar question in the context of RNA velocity estimation, but it failed to address the appropriate approach if you are only interested in gene counts rather than distinguishing between intronic vs exonic counts. So, I am wondering if there are any recommendations on the best way to approach this issue. I imagine this mostly comes down to index generation, but am not sure what approach is best. After reading the [preprint on RNA velocity](https://www.biorxiv.org/content/10.1101/2020.03.13.990069v1.full#T1) the approach that immediately comes to mind would be to make an index including both fully-spliced and fully-unprocessed copies of each transcript. . I am somewhat concerned, however, how this might affect the UMI handling algorithm, especially since everything purely exonic would now multi-map while intronic reads would tend to be considered unique. I could see some cases where you end up getting over-counting due to inappropriately splitting UMIs, especially with transcripts that have a mix of splicing and intron retention (eg two short spliced exons + intron 2).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/586:560,down,down,560,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/586,1,['down'],['down']
Availability,"I am interested to run your tool: Salmon. It is a great and easy tool to use. I encounter this error by using:; ```; ./bin/salmon quant -t output.fa -g hgTables.gtf -l IU -a ../../pipeline/rna_seq/all_chr1/merged.bam -p 20 -o salmon_quant; ```. Error:; ```; [2017-04-11 12:33:40.420] [jointLog] [critical] Transcript chr1 appeared in the BAM header, but was not in the provided FASTA file; [2017-04-11 12:33:40.420] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment ; consider generating a transcriptome fasta using a command like: ; gffread -w output.fa -g genome.fa genome.gtf; you can find the gffread utility at (http://ccb.jhu.edu/software/stringtie/gff.shtml); ```. I generated output.fa using gffreads from hg19.fa and gtf . In the output.fa, it is annotated in terms of gene ids, but there is chr1 in BAM. I am not sure how can I make them to talk to each other?. Could you please tell me how can I fix it?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/131:95,error,error,95,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131,2,"['Error', 'error']","['Error', 'error']"
Availability,"I am not sure how the index here was created, but the actual error signifies that you are attempting to quantify the assembled transcripts using a recent version of salmon (`1.9.0` in this case) against an index that was created by a _very old_ version of salmon (`pre 1.0`). This is not supported, as the index format completely changed between pre v1.0 and post v1.0, and newer versions rely on a completely different data structure.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/832#issuecomment-1444189059:61,error,error,61,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832#issuecomment-1444189059,1,['error'],['error']
Availability,"I am running alevin on the 10X V3 pbmc 1k data set and I am getting a strange warning when running the following command:; ```; salmon alevin -i salmon-index/ -p 16 -l IU --chromiumV3 -1 pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R1_001.fastq.gz pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R1_001.fastq.gz -2 pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R2_001.fastq.gz pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R2_001.fastq.gz -o salmon-out --tgMap t2g.tsv; ```; I get the following warning:; ```; [2022-02-18 19:46:11.256] [jointLog] [warning] NOTE: Read Lib [[ [pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R1_001.fastq.gz, pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R2_001.fastq.gz], [ /pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R1_001.fastq.gz, pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R2_001.fastq.gz] ]] :. Found no concordant and consistent mappings. If this is a paired-end library, are you sure the reads are properly paired? check the file: salmon-out/lib_format_counts.json for details; ```; I cannot discern the source of the error. Notably, this error does not occur when I use -lISR instead of -l IU. Any thoughts?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/753:990,error,error,990,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/753,2,['error'],['error']
Availability,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/914:42,error,error,42,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914,3,"['Error', 'error']","['Error', 'error']"
Availability,"I am running salmon as part of a pipeline and this error message is being displayed:. running salmon quant...; Version Server Response: Not Found; exception : [unrecognised option '--biasCorrect']. Exiting.; pipeline failed at expression quantification!. Here are the options which the script uses: ; salmon quant -t ${transcript_fa} ${ltype} -a ${rna_bam} -o ${sm_odir} -p $nproc --biasCorrect; check_file ${sm_out} ""pipeline failed at expression quantification!"". I have the latest version of salmon installed.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/873:51,error,error,51,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/873,1,['error'],['error']
Availability,"I am trying make a Salmon Indexing but when I run with this code: ; $salmon index -t ../transcriptome/gencode.v37.transcripts.fa.gz -i ../transcriptome/genecode.v37.salmon141 . And I got this error:; Version Info: This is the most recent version of salmon.; The file [../transcriptome/gencode.v37.transcripts.fa.gz] pr; ovided for the transcriptome does not appear to exist.(salmon). I am trying to do this practice of ARN-seq:; https://comunidadbioinfo.github.io/minicurso_abr_2021/bin/Practica-RNAseq.html. i don't understand the error, because i have gencode.v37.transcripts.fa.gz in /reference",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/797:192,error,error,192,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/797,2,['error'],['error']
Availability,"I am trying to create index using salmon for human Genome (not transcriptome). The version of salmon I am using is : salmon `v0.13.1` .; The command I used is :. salmon index \; -t /hg38_genome/GRCh38.p13.genome.fa \; -i index. The main error I am getting is:. Command error:; [2022-01-26 12:20:19.647] [jointLog] [warning] Entry with header [KI270896.1] was longer than 200000 nucleotides. Are you certain that we are indexing a transcriptome and not a genome?. If I use transcriptome file instead of genome, it works perfectly and returns the index files. I got both `transcriptome` and `genome` from the `gencode`. For my analysis I need to use genome. do you know how I can use genome?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/741:237,error,error,237,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/741,2,['error'],['error']
Availability,"I am trying to quantify my reads with salmon quant (v. 1.8.0) and I'm getting an error saying ""SAM file says target Vcev1_p0.Chr07.17417.mRNA has length 2346, but the FASTA file contains a sequence of length [2348 or 2347]"". Do you know what is the issue?. `./salmon-1.8.0_linux_x86_64/bin/salmon quant -l A -a ./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam -t ./vcae1.4.cds.fa -o ./Rev5-2.quant`. Version Info: This is the most recent version of salmon.; salmon (alignment-based) v1.8.0; [ program ] => salmon; [ command ] => quant; [ libType ] => { A }; [ alignments ] => { ./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam }; [ targets ] => {./vcae1.4.cds.fa }; [ output ] => { ./Rev5-2.quant }; Logs will be written to /h./Rev5-2.quant/logs; [2022-06-21 22:56:14.963] [jointLog] [info] setting maxHashResizeThreads to 8; [2022-06-21 22:56:14.963] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; [2022-06-21 22:56:15.015] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam"", fasta = ""./vcae1.4.cds.fa"" . . . **SAM file says target Vcev1_p0.Chr07.17417.mRNA has length 2346, but the FASTA file contains a sequence of length [2348 or 2347]**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/785:81,error,error,81,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/785,1,['error'],['error']
Availability,"I am trying to quantify some rna sequences with Salmon. Instead of creating my own index, I downloaded a pre-build version from here: [http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4](url) suggested in the salmon doc. I downloaded the file: `salmon_partial_sa_index:default` which is under my scope of research. Then, I just run the following command: `salmon quant -i default -l A -1 P10_1.fq.gz -2 P10_2.fq.gz --validateMappings -o transcripts_quant`, where `default` is the name of the folder resulting after the decompression of the salmon pre-build index, and `P10_1.fq.gz -2 P10_2.fq.gz` are paired reads of rna. I get this error: **rapidjson internal assertion failure: IsObject()**. I read a thread where a user performed a re-build. But since I am new to this filed I don't know what FASTA file I could use to do it. It's worth mentioning that I am working on a remote server and I downloaded the pre-build index directly on it, using `wget`. Some screenshot of what the `default` folder contains:. <img width=""806"" alt=""Schermata 2023-07-27 alle 14 42 59"" src=""https://github.com/COMBINE-lab/salmon/assets/81829336/e0bda06a-f344-4836-9e27-8e2de6a10265"">",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/862:92,down,downloaded,92,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862,5,"['down', 'error', 'failure']","['downloaded', 'error', 'failure']"
Availability,"I am trying to quantify these data at the transcript level which is why the number of features is this big. For the PBMC3k I was trying with a transcript to gene --tgMap but was still seeing the same error. I realized I forgot to update the path to the run.sh script when calling the 0.12.0 binary (I updated the path to the binary but no to the script). When running the wrapper in the 0.12.0 folder I could succesfully run alevin on the CD14 dataset, with or without the --forceCells 4000 flag. I tried to run alevin-0.12.0 on the PBMC 3k dataset but I got the same error. I am now trying to run it on all the FACS-sorted samples and I will see how that goes. I feel this is happening slightly inconsistently (although very frequently). Notably, it either happens after `Clearing EqMap; Might take some time.` or `Starting Import of the gene count matrix of size 5344x167268.`. I have had it happen once in the middle of the `Analyzed xxx cells (yy% of all)` phase. I just managed to succesfully process the CD19+ B cells from the 10x v1 dataset, I'll attempt to process the other FACS sorted samples overnight and let you know how it went. Thank you",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445109075:200,error,error,200,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328#issuecomment-445109075,2,['error'],['error']
Availability,"I am trying to replicate the issue but unfortunately I am not observing the similar behavior. Alevin should ideally be using 2 threads (at the same time) and the program seems to be crashing at the CB counting stage, which doesn't uses more than 3 threads (no matter the number of available/given threads). Having said that, can you please confirm that you observe the same behavior when you provide say `-p 4` ? Since Alevin has been designed to work in highly parallel environment (within given limits), although it's possible there is a some tricky corner case we might be missing when using 1 thread.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395824915:281,avail,available,281,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395824915,1,['avail'],['available']
Availability,"I am trying to run Salmon (v0.14.1) in a linux environment with the following command:. `salmon quant -i /index -l A -1 PBS_2-R1.fastq.gz -2 PBS_2-R2.fastq.gz --numBootstraps 100 -o /scratch`. However, I get the error:. `(mapping-based mode) Exception : [unrecognised option '--numBootstraps 100'].`. When I run the command without the `--numBootstraps 100` argument it works fine. Is this error arising because I'm running in mapping-based mode? Can you not use numBootstraps in this mode?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/440:212,error,error,212,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/440,2,['error'],['error']
Availability,"I am trying to use Salmon and am being returned the following error. Any help here? . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501367_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501367 }; Logs will be written to salmonRes_SRR1501367/logs; [2021-07-16 11:47:01.372] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.372] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.372] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.372] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.372] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.372] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:62,error,error,62,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['error'],['error']
Availability,"I am unsure what qualifies as many but on an input of 20M reads and an unsorted BAM file, I get around 600 lines of error in the log file, some of the reads have many alignments so the errors are redundant to some extent. The no. of unique reads' alignments that cause an error is perhaps 300.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/701#issuecomment-1427049939:116,error,error,116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701#issuecomment-1427049939,4,"['error', 'redundant']","['error', 'errors', 'redundant']"
Availability,"I am using Metawrap`https://github.com/bxlab/metaWRAP/blob/master/Usage_tutorial.md` to analyze bins abundance to the fwd and rev paired reads. MetaWrap uses Salmon and its telling me to upgrade Salmon but since it is within Metawrap, I am unsure how to do this. This is the error I receive: ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; salmon v0.13.1; ===============. I downloaded the tar file for salmon but because it is used within MetaWrap I'm unsure the linux terminal line to update the salmon. Thanks,; Katie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/423:275,error,error,275,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/423,4,"['avail', 'down', 'error']","['available', 'downloaded', 'error']"
Availability,"I am using Ubuntu on my laptop.; I installed salmon by the command:-; conda install --channel bioconda salmon; I downloaded the SalmonTools scripts from; git clone https://github.com/COMBINE-lab/SalmonTools.git; But I am unable to run salmon or the salmon index.; I can even run :- salmon --version; it gives the above-said error.; I made the generateDecoyTranscritome.sh executable as well but still it did not work.; At first, it said that it needed libboost_filesystem.so.1.60.0 so I installed the entire boost 1.60.0. But it still shows this error.; Please help!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/639:113,down,downloaded,113,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/639,3,"['down', 'error']","['downloaded', 'error']"
Availability,"I am using `salmon` for both creating index and quant using the latest version of salmon using the following commands:. 1- for indexing:. salmon index ; -t ""${fasta}"" ; -i index . 2- for quantification:. salmon quant ; --libType=U; --index $index ; -1 ${reads[0]} ; -2 ${reads[1]} ; -o $pair_id. But I am getting this error:. Command error:; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [the option '--index' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. This error is related to quant part. Do you know how I can fix the problem?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/746:318,error,error,318,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/746,3,['error'],['error']
Availability,"I am using salmon v1.0.0 that was compiled using bioconda. I downloaded fastq files from GEO, built an index using salmon index, but am getting 0 mappings. . #Downloading data; wget -o test.fastq.gz s3://sra-pub-src-5/SRR*******/test.fastq.gz. #building the salmon index from gencode [using vM22 for consistency]; salmon index -t gencode.vM22.transcripts.fa.gz -i gencode.vM22.transcripts --gencode. #running salmon quant; salmon quant -l A -i gencode.vM22.transcripts -r test.fastq.gz -o ~/Test1/ --gcBias --validateMappings --numGibbsSamples 20. The output .sf files have 0 TPMs and 0 fragment reads for all outputs and I am attaching a screenshot of the log file. . The reference genome and sequencing file is from the same organism. . ![Screen Shot 2022-10-06 at 3 53 32 PM](https://user-images.githubusercontent.com/108241225/194406132-61d5a5ce-a429-4b04-9fab-e4586dea9020.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/804:61,down,downloaded,61,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/804,2,"['Down', 'down']","['Downloading', 'downloaded']"
Availability,"I am using the following commands:. ```; ./bin/salmon index -t ../Homo_sapiens.GRCh37.75.cdna.all.fa.gz -i transcripts_index --type quasi -k 31. ./bin/salmon quant -l A -i transcripts_index -r ../../rnaseq_data/SRR764785.fastq ../../rnaseq_data/SRR764786.fastq ../../rnaseq_data/SRR764787.fastq ../../rnaseq_data/SRR764788.fastq ../../rnaseq_data/SRR764789.fastq ../../rnaseq_data/SRR764790.fastq ../../rnaseq_data/SRR764791.fastq ../../rnaseq_data/SRR764792.fastq ../../rnaseq_data/SRR764793.fastq ../../rnaseq_data/SRR764794.fastq ../../rnaseq_data/SRR764795.fastq ../../rnaseq_data/SRR764796.fastq ../../rnaseq_data/SRR764797.fastq ../../rnaseq_data/SRR764802.fastq ../../rnaseq_data/SRR764803.fastq ../../rnaseq_data/SRR764804.fastq ../../rnaseq_data/SRR764805.fastq ../../rnaseq_data/SRR764806.fastq ../../rnaseq_data/SRR764807.fastq ../../rnaseq_data/SRR764808.fastq ../../rnaseq_data/SRR764809.fastq ../../rnaseq_data/SRR764810.fastq ../../rnaseq_data/SRR764811.fastq ../../rnaseq_data/SRR764812.fastq ../../rnaseq_data/SRR764813.fastq -1 ../../rnaseq_data/SRR764782_1.fastq ../../rnaseq_data/SRR764783_1.fastq ../../rnaseq_data/SRR764784_1.fastq -2 ../../rnaseq_data/SRR764782_2.fastq ../../rnaseq_data/SRR764783_2.fastq ../../rnaseq_data/SRR764784_2.fastq -o transcripts_quant; ```; and I get the following error and no .sf file in output:; ```; processed 783000000 fragmentsrag: 3.56267[2017-04-11 20:17:10.337] [jointLog] [info] Automatically detected most likely library type as IU; hits: 184962311, hits per frag: 0.236263couldn't dequeue read chunk; couldn't dequeue read chunk; couldn't dequeue read chunk; couldn't dequeue read chunk; ```. Am I using the commands wrong?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293391845:1316,error,error,1316,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-293391845,1,['error'],['error']
Availability,"I am working with C. griseus bulk RNAseq, and when using quant mode, the aux_info folder is empty. My understanding was that this folder shouldn't be empty. However, it is empty for every sample. I am using GCF_000223135.1 genome downloaded using NCBI datasets like this:; `datasets download genome accession GCF_000223135.1 --include gff3,rna,cds,protein,genome,seq-report`; I have tried indexing with and without decoy with similar results.; Is this normal?; EDIT: ; I tried using a different genome from here (https://ftp.ensembl.org/pub/release-112/fasta/cricetulus_griseus_picr/dna/Cricetulus_griseus_picr.CriGri-PICRH-1.0.dna_sm.toplevel.fa.gz) and it produces a non-empty aux_info folder.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/955:230,down,downloaded,230,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/955,2,['down'],"['download', 'downloaded']"
Availability,"I apologize, I misread one of the previous threads on segmentation faults. Upon downloading and running the precompiled linux binary provided in this thread https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436938 the program ran to completion. Sorry for that!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/268#issuecomment-413045028:67,fault,faults,67,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268#issuecomment-413045028,2,"['down', 'fault']","['downloading', 'faults']"
Availability,"I attempted to use the new --ont error model that has been developed for Salmon but am getting the same error mentioned here. **To Reproduce**. Which version of salmon was used?; salmon version: salmon 1.5.1, minimap2 version: 2.20-r1061; How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; Which reference (e.g. transcriptome) was used?; Custom generated transcriptome (Stringtie2, merged with ensembl release 104 Hg38); Which read files were used?; Nanopore reads.; Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l MSF -a {input.bam} -o {output.tsv_dir} --ont; Desktop (please complete the following information):; Ubuntu 20.04.2 LTS",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872309220:33,error,error,33,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289#issuecomment-872309220,3,"['down', 'error']","['downloaded', 'error']"
Availability,"I built Salmon 0.7.2 on OSX 10.13.3 and received an error when it was making libjemalloc: autogen.sh: autoconf not found. I installed ""autoconf"" program and tried it again and it succeeded. The documentation should say that autoconf must be installed in order to make salmon.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/203:52,error,error,52,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/203,1,['error'],['error']
Availability,"I built salmon 0.7.2 on OSX 10.13.3, then ran 'make test'. Test #1 fails, other two succeed. Looking at file Testing/Temporary/LastTest.log, it says:. ```; ""unit_tests"" start time: Mar 03 20:31 PST; Output:; ----------------------------------------------------------; CMake Error at /Users/tedtoal/src/salmon-0.7.2/cmake/UnitTests.cmake:7 (message):; Error running No such file or directory. ```. I looked in the tests directory and find program ""unitTests"", and when I run it, it succeeds:. ```; ===============================================================================; All tests passed (158 assertions in 4 test cases). ```. leading me to believe that actually, test1 succeeds, but something is wrong with the test system and it doesn't see that it succeeded.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/204:274,Error,Error,274,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204,2,['Error'],['Error']
Availability,"I can confirm that the problem in the log is not creating the exception error raised by this issue and the indexing procedure took care of the potential duplicates due to repeated names. There is something else going on. I used the binary from github and indexed, it seems to work on our end. @rob-p thoughts ?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/441#issuecomment-549155511:72,error,error,72,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/441#issuecomment-549155511,1,['error'],['error']
Availability,"I can't seem to reproduce this locally (OSX 10.13.1). However, what happens if you try:. `> conda install salmon=0.9.1`. do you see this version as available? Does it try to install it?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034:148,avail,available,148,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034,1,['avail'],['available']
Availability,"I changed the BUILD_COMMAND to use gmake. I also ran 'export MAKE=gmake', and used gmake to run the output of cmake. . BUILD_COMMAND sh -c ""gmake ${QUIET_MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER}"". Unfortunately, the BWA included with Salmon is broken on FreeBSD. . kthread.c:70:2: error: unknown type name 'int64_t'. The one on Git (https://github.com/lh3/bwa) works though. So I modified DOWNLOAD_COMMAND to grab the one from Git. . DOWNLOAD_COMMAND git clone https://github.com/lh3/bwa bwa-master. Next problem, it tries to build TBB and fails. This is two problems, because I have TBB, I passed it the path, and it fails to use it. The output of cmake says:. -- Could NOT find TBB (missing: tbbmalloc_proxy) (found suitable version ""2018.0"", minimum required is ""4.4""). tbbmalloc_proxy.h is present in /usr/local/include/tbb. Moving on, TBB fails to build because it's hard coded to use make. I fixed this and it built. BUILD_COMMAND gmake ${QUIET_MAKE} CXXFLAGS=${TBB_CXXFLAGS} lambdas=1 compiler=${TBB_COMPILER} cfg=release tbb_build_prefix=LIBS. Staden-io_lib fails to build with: ; /usr/bin/ld: undefined reference to symbol `pthread_create@@FBSD_1.0' (try adding -lthr); //lib/libthr.so.3: could not read symbols: Bad value. As advertised, -lthr fixed this issue. ; CONFIGURE_COMMAND ./configure --enable-shared=no --without-libcurl --prefix=<INSTALL_DIR> LDFLAGS=-lthr CFLAGS=${LIBSTADEN_CFLAGS} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER}. This leads me to an error I can't fix on my own. /home/esiefker/salmon/fresh-salmon/include/BWAMemStaticFuncs.hpp:36:36: error:; use of undeclared identifier 'MEM_F_SELF_OVLP'; int start_width = (opt->flag & MEM_F_SELF_OVLP)? 2 : 1;. There is a similar Debian bug which is fixed: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=818397. I could not find the fix mentioned. https://github.com/COMBINE-lab/salmon/commits/master?author=satta. I have done my best, but I am stuck. I hope this is helpful for those more skilled than I.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337390415:1615,error,error,1615,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337390415,2,['error'],['error']
Availability,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/778:99,error,error,99,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778,10,"['Error', 'error', 'fault']","['Error', 'error', 'fault']"
Availability,"I don't know enough about the Alevin code base but I think you are using intel thread buildling blocks. I did notice on [stackoverflow](https://stackoverflow.com/questions/3786408/number-of-threads-used-by-intel-tbb) that . > You must keep the tbb::task_scheduler_init object alive after this, or it will revert back to automatic. Perhaps there's a place where the init object is being destroyed before the different parallelization steps are complete?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395842118:276,alive,alive,276,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395842118,1,['alive'],['alive']
Availability,"I don't see any files named `*CMakeLog*`. Which file exactly do you need? I see…; ```; CMakeFiles/CMakeError.log CMakeFiles/CMakeRuleHashes.txt; CMakeFiles/CMakeOutput.log CMakeFiles/TargetDirectories.txt; ```; Here's a gist: https://gist.github.com/sjackman/6e15b7dfebaaad99b9476aa5ce269fda; This error is reproducible like so:; ```sh; docker run -it linuxbrew/linuxbrew brew install -sdv https://raw.githubusercontent.com/sjackman/homebrew-bio/dab661f902c5841e0d498eb338975c47080a1118/Formula/salmon.rb; ```. Ignore `FormulaUnavailableError: No available formula with the name ""xorg""`; and select `5. shell` to get a shell prompt",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367793075:298,error,error,298,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367793075,2,"['avail', 'error']","['available', 'error']"
Availability,"I don't think sequencing errors of the UMI's is a big issue. I was thinking more of the reads. I've been thinking in terms of (read, UMI) pairs and (transcript, UMI) pairs, and what the relation between them is. Now, during mapping, an equivalence class get a count every time a read is mapped to it right? How feasible would it be to keep track of all UMI's which have been assigned to an equivalence task?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269042747:25,error,errors,25,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/108#issuecomment-269042747,1,['error'],['errors']
Availability,"I downloaded Salmon-0.8.2_linux_x86_64, and I decompressed it.; When I ran salmon, it worked.; But when I ran salmon index, I got a mistake as follow:. Version Info: This is the most recent version of Salmon.; exception : [the option '--index' is required but missing]. Exiting.; ; Please help me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/146:2,down,downloaded,2,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/146,1,['down'],['downloaded']
Availability,"I downloaded the binary, both times.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752289:2,down,downloaded,2,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232#issuecomment-394752289,1,['down'],['downloaded']
Availability,"I downloaded the package from here ; https://anaconda.org/bioconda/salmon/files; then I opened the package up with ""The Unarchiver.app"", so I downloaded linux one, and open up the package with ""Unarchiver.app"", I didn't see any library files -libtbbmalloc.dylib, libtbbmalloc_proxy.dylib and libtbb.dylib. ; ![Screen Shot 2020-05-03 at 4 17 25 PM](https://user-images.githubusercontent.com/64718774/80924960-3ee52880-8d5a-11ea-8fbc-5cf4537f0129.png); ; Then I just installed Conda, but I have no idea how to install the package, sorry, I have ground zero coding knowledge",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/517#issuecomment-623175345:2,down,downloaded,2,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517#issuecomment-623175345,2,['down'],['downloaded']
Availability,"I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many paired-end reads would be discordant, which causes counts to look very...odd. See [this preprint](https://www.biorxiv.org/content/10.1101/2022.01.24.477642v1) for more details on that phenomenon. I'm trying to use the decoys as a first step in identifying reads that map to intergenic sequences, where reads might span two coding domain sequences, or land in the intergenic sequences between two coding domain sequenes. (#52). Decoy names: [s__Faecalibacterium_prausnitzii_C_clustered_intergenic_seq_names.txt.gz](https://github.com/COMBINE-lab/salmon/files/8005978/s__Faecalibacterium_prausnitzii_C_clustered_intergenic_seq_names.txt.gz); Transcriptome: [s__Faecaliba",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:5028,avail,available,5028,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['avail'],['available']
Availability,"I faced the same problem and found a simple solution. The trick is at line 585 of the cMakeList.txt. ""if (${TBB_VERSION} VERSION_GREATER_EQUAL 2018.0)"". It checks if you have tbb version 2018 or above. If you install tbb BEFORE running cmake, it will fulfill the requirement and bypass installing tbb in the make command, hence bypass the error. The solution:; 1. Delete the salmon folder and download a fresh one from github; 2. sudo apt update (this step is very important, to update the packages to be above version 2018) ; 3. sudo apt-get install libtbb-dev; 4. (Optional) apt-cache policy libtbb-dev (check the version of libtbb, it should be 2019 or above); 5. Then follows the standard installation (cmake, make etc.) The error should disappear and compile successfully. Thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/497#issuecomment-610977958:339,error,error,339,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497#issuecomment-610977958,6,"['down', 'error']","['download', 'error']"
Availability,"I get the FastxParser error as below during indexing with Salmon v0.9.0. What does that mean? Has the indexing run successfully? Should I worry about anything?. ```; $ salmon index -t gencode.v27lift37.transcripts.fa -i salmon_gencode/; Version Info: This is the most recent version of Salmon.; [2017-11-28 16:51:37.147] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2017-11-28 16:51:38.341] [jointLog] [warning] Entry with header [ENST00000594394.1|ENSG00000268141.1|-|-|AL606500.1-201|AL606500.1|21|protein_coding|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:51:40.503] [jointLog] [warning] Entry with header [ENST00000595481.1|ENSG00000268556.1|-|-|AC012360.1-201|AC012360.1|30|protein_coding|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:51:47.865] [jointLog] [warning] Entry with header [ENST00000473810.1_1|ENSG00000239255.1_3|OTTHUMG00000157482.1_3|OTTHUMT00000348942.1_1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:51:48.079] [jointLog] [warning] Entry with header [ENST00000603775.1_1|ENSG00000271544.1_3|OTTHUMG00000184300.1_3|OTTHUMT00000468575.1_1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:52:00.610] [jointLog] [warning] Entry with header [ENST00000632684.1_1|ENSG00000282431.1_3|OTTHUMG00000190602.2_3|OTTHUMT00000485301.2_1|AC245427.8-201|AC245427.8|9|TR_D_gene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:52:11.269] [jointLog] [warning] Entry with header [ENST00000606517.1|ENSG00000271831.1|OTTHUMG00000185672.1|OTTHUMT00000470956.1|AL022345.9-001|AL022345.9|27|unprocessed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:52:13.209] [join",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/176:22,error,error,22,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/176,1,['error'],['error']
Availability,I get the following error when installing `salmon`:. ```; cd /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external && /gsc/btl/linuxbrew/Cellar/cmake/3.3.0/bin/cmake -P /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake; -- extracting...; src='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; dst='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-1.0.0'; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; failed; ```. Is it possible to compile `salmon` with its external dependencies provided externally rather than vendored into `salmon`? What is `cereal`?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/10:20,error,error,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10,6,"['Error', 'error']","['Error', 'error']"
Availability,I get the same error in buliding 3' UTR index and expect the next version.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/451#issuecomment-558448799:15,error,error,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/451#issuecomment-558448799,1,['error'],['error']
Availability,I got the same error and a segmentation fault while processing single-read data using salmon 0.10.2. My command was:; `salmon quant -i <transcripts_index_folder> -l A -r <some_R1.fastq> -o <output_quant_folder>`; Are Salmon working on this since August?. Update: Using Salmon version 0.11.4 solved the issue for me.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/265#issuecomment-435715951:15,error,error,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265#issuecomment-435715951,2,"['error', 'fault']","['error', 'fault']"
Availability,"I got the same error but under Ubuntu 20.04.; After Installing boost 1.60.0 manually it initially seemed to work, but then I got the following error:. ```; Error, cannot determine salmon version installed from (salmon: symbol lookup error: salmon: undefined symbol: _ZN5boost15program_options3argE; ) at /usr/local/bin/trinityrnaseq-v2.11.0/Trinity line 3969.; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/565#issuecomment-696784484:15,error,error,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565#issuecomment-696784484,4,"['Error', 'error']","['Error', 'error']"
Availability,"I got this error and was surprised to find the cause. I've added `--no-version-check` now, but I agree the default of phone-home behaviour is not great.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-447030871:11,error,error,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-447030871,1,['error'],['error']
Availability,"I had a fasta file with an space at the end of a sequence line. This caused salmon to fail, somewhat quietly (no output files are produced). It would be nice to report the specific problem with the input or position of the failing line, ... log:. <pre>; Logs will be written to output_dir/logs; there is 1 lib; [2015-10-09 15:47:13.170] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading ./current_index/bwaidx.amb; </pre>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/22:409,error,error,409,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22,1,['error'],['error']
Availability,"I had a similar error, but was able to fix it by adding the line:; export LD_LIBRARY_PATH=/path/to/lib:$LD_LIBRARY_PATH ; to my .bashrc file, so maybe that's something to try if you haven't already. (There's a similar issue described here: #219).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/845#issuecomment-1570842745:16,error,error,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845#issuecomment-1570842745,1,['error'],['error']
Availability,"I have a pretty wide array of benchmarks and I haven't seen any regression with the VB option on 0.4.1, including ERCC spike-ins on the SEQC data, where it does very well. But I haven't tested 0.4.0. @vals your data looks really compelling, I wonder if you'd humor me and try something, if it's not too much trouble: Could you try recomputing these correlations excluding ERCC-00074 and ERCC-00130? I've seen some data suggesting these might be misannotated by the vendor, which can cause these two to have a large effect on something like Pearson correlation, especially with methods like salmon and cufflinks that do bias correction. In benchmarks I've done, excluding them leads to more reliable results. I'm really curious if doing the same in your data changes anything.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111743583:690,reliab,reliable,690,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/6#issuecomment-111743583,1,['reliab'],['reliable']
Availability,"I have a question , if you guys would like to answer. Where can I get the transcripts.gtf file for mm9. Is there any link from where I can download or do I have to create on my own. I am a bit confused and different forums are adding up to my confusion if you would like to suggest.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197899378:139,down,download,139,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49#issuecomment-197899378,1,['down'],['download']
Availability,"I have a similar problem.; Attached are:; 1. gtf file, where clearly, the gene_ id and transcript_id are provided; 2. quant files are as followed for gene and transcripts; 3. my command as followed:; ---. /gpfsdata/apps/salmon-latest_linux_x86_64/bin/salmon quant \; -i /gpfshome/hockchuan/SALMON/GCF_900626175.2_cs10_index \; -l ISR \; -1 /gpfsdata/JangiLab/hockchuan/170302/2.Trimmomatic_output/clean_HEADBANDSTEM_1.fastq.gz \; -2 /gpfsdata/JangiLab/hockchuan/170302/2.Trimmomatic_output/clean_HEADBANDSTEM_2.fastq.gz \; --seqBias \; --gcBias \; --posBias \; --incompatPrior 0.0 \; --geneMap /gpfsdata/JangiLab/hockchuan/cs10_reference_genome/GCF_900626175.2_cs10_genomic.gtf \; --recoverOrphans \; --allowDovetail \; --threads $NSLOTS \; --dumpEq \; --minScoreFraction 0.65 \; --writeMappings /gpfshome/hockchuan/SALMON/MAP/HEADBANDSTEM \; --fldMean 250 \; --fldSD 25 \; --writeOrphanLinks \; --writeUnmappedNames \; --quiet \; -o /gpfshome/hockchuan/SALMON/HEADBANDSTEM_quant; ---. [fewLines.gtf.txt](https://github.com/COMBINE-lab/salmon/files/5383013/fewLines.gtf.txt); [quant.genes.txt](https://github.com/COMBINE-lab/salmon/files/5382998/quant.genes.txt); [quant.txt](https://github.com/COMBINE-lab/salmon/files/5382999/quant.txt)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/569#issuecomment-708949661:683,recover,recoverOrphans,683,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/569#issuecomment-708949661,2,['recover'],['recoverOrphans']
Availability,"I have already run them all (successfully) separately as pairs, but for downstream analysis I need them to be a single library, so I thought it would be simpler to run them as multiple input files..?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446212203:72,down,downstream,72,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446212203,2,['down'],['downstream']
Availability,"I have been trying to use the salmon docker container available on docker hub. When I run salmon quant I am able to load all of the files and start the program, but I get a killed message while loading hash. I get an empty log file and empty folders created after the container is killed. **To Reproduce**; I run the following command to run the container:; `docker run -v /Users/caz3so/workspaces/salmon_docker:/temp -w /temp -ti combinelab/salmon`. The following is the output:; <img width=""1389"" alt=""screenshot 2018-06-27 11 15 56"" src=""https://user-images.githubusercontent.com/31480706/41983246-8296bb76-79fb-11e8-9710-c38ec051b7e7.png"">. **Expected behavior**; I have salmon installed on my machine and was able to run these files with no problem. It is only when I am using the docker container, so it could be a docker related problem. . **Desktop (please complete the following information):**; I am using a 2017 Macbook pro with 16 GB 2133 MHz LPDDR3 memory and a 2.8 GHz Intel Core i7 processor.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/243:54,avail,available,54,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243,1,['avail'],['available']
Availability,"I have made a singularity container for the salmon v1.6.0 and I am working with centOS. ; I am trying to make an index file for human transcript using this command:. **salmon index -t hg19_EnsenmblGenes_sequence_ensenmbl.fasta -i Ensembl_hg19_salmon_index**. But I am getting this error:. **Version Info: This is the most recent version of salmon.; exception : [the option '--index' is required but missing]. Exiting.**; ; Then I tried this command:. **salmon --index -t hg19_EnsenmblGenes_sequence_ensenmbl.fasta -i Ensembl_hg19_salmon_index**. Then I got this error:. **Version Info: This is the most recent version of salmon.; salmon was invoked improperly.; For usage information, try salmon --help; Exiting.**. Do you know how I can fix the issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/730:281,error,error,281,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/730,2,['error'],['error']
Availability,"I have mapped Oxford Nanopore Reads to transcriptome using Graphmap. When I tried to run salmon quant on the BAM file, it shows that error below:. ```; salmon quant -t GRCh37.67.cdna.all.fa -l A -a in.bam -o out.count -p 15 --incompatPrior 1 --noErrorModel; # salmon (alignment-based) v0.11.3; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { /mnt/projects/kokep/kokep/reference/GRCh37.67.cdna.all.fa }; # [ libType ] => { A }; # [ alignments ] => { in.bam }; # [ output ] => { out.count }; # [ threads ] => { 15 }; # [ incompatPrior ] => { 1 }; # [ noErrorModel ] => { }; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; Logs will be written to out.count/logs; Malformed key:value pair at line 1: ""@HD VN:1.0 SO:coordinate ""; ============; Exception : [ERROR: Failed to open file in.bam, exiting!; ]; ============; /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon alignment-quant was invoked improperly.; For usage information, try /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon quant --help-alignments; Exiting. ```; How do I fix the error? Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/387:133,error,error,133,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387,5,"['ERROR', 'avail', 'error']","['ERROR', 'available', 'error']"
Availability,"I have misterious ""hits: 17435551, hits per frag: 1.34457 Cannot combine distributions that live in a different space!"" error for the paired reads.; Here are the parameters:; ```bash; salmon quant -i /pipelines/indexes/GRAY_WHALE/salmon/graywhale_anton --threads 8 -l A -r /pipelines/results/graywhale/transcriptome/trinity_out_dir/Trinity-GG.fasta -1 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz -2 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz -o transcripts_quant; ```; All the files and folders are avaluabe for download, just add reads_1: http://pipelines1.westeurope.cloudapp.azure.com/ before /pipelines. Like this:. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/175:120,error,error,120,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175,2,"['down', 'error']","['download', 'error']"
Availability,"I have narrowed down the issue, the first 8 files are fine, adding a 9th reproduces the issue. . Will send you a link with a subset of the files",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446230657:16,down,down,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329#issuecomment-446230657,1,['down'],['down']
Availability,"I have single ended reads in a fastq file which I aligned with bowtie against the transcriptome. Now I am running the following command:; ./bin/salmon quant -t ../Data/DRR029379.fq -p 6 -l A -a ../Data/DRR029379_after_bowtie.bam -o ../Data/DRR029379_after_salmon; and this the error I am getting. Version Info: This is the most recent version of Salmon.; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { ../Data/DRR029379.fq }; # [ threads ] => { 6 }; # [ libType ] => { A }; # [ alignments ] => { ../Data/DRR029379_after_bowtie.bam }; # [ output ] => { ../Data/DRR029379_after_salmon }; Error: @RG lines are at odds with binary encoded reference data; ============; Exception : [ERROR: Failed to open file ../Data/DRR029379_after_bowtie.bam, exiting!; ]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting. I cannot figure out anything from this message. Please help. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/113:277,error,error,277,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,I have the same issue. But doing 'cmake -DFETCH_BOOST=TRUE ..' or 'cmake ..' gives the same error message 'does not appear to contain CMakeLists.txt'. I downloaded version 'salmon-0.12.0_linux_x86_64'.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449017473:92,error,error,92,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139#issuecomment-449017473,2,"['down', 'error']","['downloaded', 'error']"
Availability,"I have this error too. ```; root@10a5cddfd8c6:/mnt/experiments/Bebee-2015-Esrps/data# salmon quant -p 20 -t /mnt/genome/GRCm39.primary_assembly.genome.fa --quiet -l A \; 5976_Aligned.sortedByCoord.out.bam bam/SRR1725977_> -a bam/SRR1725976_Aligned.sortedByCoord.out.bam bam/SRR1725977_Aligned.sortedByCoord.out.bam bam/SRR1725983_Aligned.sortedByCoord.out.bam bam/SRR1725984_Aligned.sortedByCoord.out.bam \; > -o salmon_bam/; Version Server Response: Not Found; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""bam/SRR1725976_Aligned.sortedByCoord.out.bam"", fasta = ""/mnt/genome/GRCm39.primary_assembly.genome.fa"" . . .done. processed 83000000 reads in current roundSegmentation fault; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-2411953965:12,error,error,12,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-2411953965,2,"['error', 'fault']","['error', 'fault']"
Availability,"I have updated my homebrew index and installed Salmon on my Macbook (0S X Sierra). However, when I run `salmon` or `salmon -h` on the command line I get the following error message. ```; salmon(41538,0x7fffc4f5a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffc4f50000; ```. `brew doctor` doesn't show any unexpected issues. Any ideas what might be going on?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/142:167,error,error,167,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/142,1,['error'],['error']
Availability,"I haven't got it to reproduce the error yet, but I did see the error in one more run outside of gdb. . On the plus side, I did find this: http://stackoverflow.com/questions/6545763/how-can-i-rerun-a-program-with-gdb-until-a-segmentation-fault-occurs. So now I can have it keep trying forever.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267255069:34,error,error,34,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267255069,3,"['error', 'fault']","['error', 'fault-occurs']"
Availability,I haven't kept up with khmer so I'm not sure what it does. Can I do something equivalent of this with khmer?. ```; mkfifo /tmp/1.fastq && \; mkfifo /tmp/2.fastq && \; samtools sort -n input.cram | samtools fastq -1 /tmp/1.fastq -2 /tmp/2.fastq & salmon -i index -l IU -1 /tmp/1.fastq -2 /tmp/2.fastq -o /tmp/salmon_out && \; mv /tmp/salmon_out && \; rm /tmp/1.fastq && \; rm /tmp/2.fastq; ```. I just want to be able to do these sorts of things without wrapper scripts that obfuscate and complicate things... But maybe a robust bash wrapper is the best way to go.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168534703:521,robust,robust,521,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168534703,1,['robust'],['robust']
Availability,"I increased ram to 24G. Segmentation fault happens even faster. I have fiddled with swap memory, to no avail, but I am not a good swap fiddler.; libs with malloc in their name, installed in directory /salmon-latest_linux_x86_64/ib adjacent to /salmon-latest_linux_x86_64/bin, are the same as elsewhere already on my system. conda and bioconda are not available for FreeBSD. What OS would work?; I have looked through the published papers and find no mention of which OS should work. My attempted command for compiling the sources from unzipped directory salmon-0.14.1 is: cmake -S src -B build; Many errors result, starting with:; TBB_LIBRARIES = ; Setting libdivsufsort = /external/install/lib/libdivsufsort.a; Setting libdivsufsort64 = /external/install/lib/libdivsufsort64.a; -- Configuring done; CMake Error at CMakeLists.txt:196 (add_executable):; Cannot find source file:. /tests/UnitTests.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. CMake Error at CMakeLists.txt:196 (add_executable):; Target ""unitTests"" links to target ""Threads::Threads"" but the target was; not found. Perhaps a find_package() call is missing for an IMPORTED; target, or an ALIAS target is missing?. CMake Error at CMakeLists.txt:162 (add_library):; Cannot find source file:. /src/jellyfish/mer_dna.cc. Tried extensions .c .C .c++ .cc .cpp .cxx .cu .m .M .mm .h .hh .h++ .hm; .hpp .hxx .in .txx. Apparently the so-called sources do not include many files ending in .cpp, for instance. Please, I repeat, what linux OS should be able to install salmon? ; And/Or what command could compile salmon?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/419#issuecomment-522626638:37,fault,fault,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419#issuecomment-522626638,7,"['Error', 'avail', 'error', 'fault']","['Error', 'avail', 'available', 'errors', 'fault']"
Availability,"I installed salmon from conda environment using python3 and got the below error:. ```; $ salmon. salmon: error while loading shared libraries: libboost_thread.so.1.60.0: cannot open shared object file: No such file or directory; ```. I am using Ubuntu 16.04 Xenial for which the latest Boost version is [1.58](https://launchpad.net/ubuntu/xenial/+package/libboost-dev). Since it was originally compiled under a later version of Boost (1.60), it gives the above error. I found this post to fix the issue temporarily:; https://www.biostars.org/p/389360/. It would be nice to fix it to search for the latest version of boost available though. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/565:74,error,error,74,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565,4,"['avail', 'error']","['available', 'error']"
Availability,"I just cloned salmon from github repository. Everything was working good, I was able to perform cmake with the code: salmon/build cmake -DFETCH_BOOST=TRUE ..; but when I started to built with make, after several minutes it prompts the following error:. [ 7%] Built target libdivsufsort; [ 14%] Built target libtbb; [ 20%] Built target liblzma; [ 26%] Built target libjemalloc; [ 33%] Built target libcereal; [ 33%] Performing build step for 'libstadenio'; Making all in io_lib; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; compilation terminated.; Makefile:922: recipe for target 'libstaden_read_la-cram_io.lo' failed; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. I have looking for any solution but without success, Can anyone help me with this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/357:245,error,error,245,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/357,8,"['Error', 'error']","['Error', 'error']"
Availability,"I just conda installed salmon fresh. I got error when I ran it. . ```; $ conda create -n salmon salmon; Collecting package metadata (current_repodata.json): done; Solving environment: done. ## Package Plan ##. environment location:~/miniconda3/envs/salmon. added / updated specs:; - salmon. The following NEW packages will be INSTALLED:. _libgcc_mutex conda-forge/linux-64::_libgcc_mutex-0.1-conda_forge; _openmp_mutex conda-forge/linux-64::_openmp_mutex-4.5-1_gnu; bzip2 conda-forge/linux-64::bzip2-1.0.8-h7f98852_4; icu conda-forge/linux-64::icu-64.2-he1b5a44_1; jemalloc conda-forge/linux-64::jemalloc-5.2.1-h9c3ff4c_5; libgcc-ng conda-forge/linux-64::libgcc-ng-9.3.0-h2828fa1_18; libgomp conda-forge/linux-64::libgomp-9.3.0-h2828fa1_18; libstdcxx-ng conda-forge/linux-64::libstdcxx-ng-9.3.0-h6de172a_18; salmon bioconda/linux-64::salmon-1.4.0-hf69c8f4_0; tbb conda-forge/linux-64::tbb-2021.1.1-h4bd325d_1; zlib conda-forge/linux-64::zlib-1.2.11-h516909a_1010. Proceed ([y]/n)? y. Preparing transaction: done; Verifying transaction: done; Executing transaction: done; #; # To activate this environment, use; #; # $ conda activate salmon; #; # To deactivate an active environment, use; #; # $ conda deactivate. $ conda activate salmon; $ salmon; salmon: symbol lookup error: salmon: undefined symbol: _ZN3tbb8internal24concurrent_queue_base_v818internal_push_moveEPKv; ```. I think this is related with rob-p commented on Sep 22, 2020. ; I have a naive question: Is it possible to fix this in the recipe by adding the problematic dependencies?; I am using centOS 8.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/565#issuecomment-805608173:43,error,error,43,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565#issuecomment-805608173,2,['error'],['error']
Availability,I just issued an other pull request: boost_1_57 is no longer available on the download site.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-153147884:61,avail,available,61,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-153147884,2,"['avail', 'down']","['available', 'download']"
Availability,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/315:678,Error,Errors,678,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315,2,['Error'],"['Error', 'Errors']"
Availability,I just provided the list of transcripts in fasta format with the -t flag but its still giving me the same error.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270007769:106,error,error,106,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270007769,1,['error'],['error']
Availability,"I just redownloaded and extracted and tried again, and unfortunately the problem persists =/. ```; ...; [2016-01-02 17:47:51.342] [jointLog] [info] iteration = 1600 | max rel diff. = 0.0133376; [2016-01-02 17:47:51.443] [jointLog] [info] iteration = 1630 | max rel diff. = 0.00771098; [2016-01-02 17:47:51.447] [jointLog] [info] Finished optimizer; [2016-01-02 17:47:51.448] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 17:47:51.678] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/SRP057125_SRS936134_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: SRP057125_SRS936134_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); ```. If you want I can upload index and a couple of fastq files somewhere so you can try?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168412271:1089,fault,fault,1089,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168412271,1,['fault'],['fault']
Availability,"I just tried it on a fresh docker image of ubuntu 16.04 and am unable to install salmon. After `apt-get install build-essential cmake g++ gcc curl autoconfig libdevsufsort-dev`, `cmake -DFETCH_BOOST=TRUE` passes, but `make install` fails with following output:; ```; [ 6%] Built target liblzma; [ 12%] Built target libbz2; [ 18%] Built target libjemalloc; [ 19%] Performing download step (verify and extract) for 'libdivsufsort'; -- verifying file...; file='/home/salmon-0.10.2/external/libdivsufsort.zip'; -- verifying file... warning: did not verify file - no URL_HASH specified?; -- extracting...; src='/home/salmon-0.10.2/external/libdivsufsort.zip'; dst='/home/salmon-0.10.2/external/libdivsufsort-master'; CMake Error at /home/salmon-0.10.2/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:11 (message):; error: file to extract does not exist:; '/home/salmon-0.10.2/external/libdivsufsort.zip'. CMakeFiles/libdivsufsort.dir/build.make:90: recipe for target 'libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download' failed; make[2]: *** [libdivsufsort-prefix/src/libdivsufsort-stamp/libdivsufsort-download] Error 1; CMakeFiles/Makefile2:137: recipe for target 'CMakeFiles/libdivsufsort.dir/all' failed; make[1]: *** [CMakeFiles/libdivsufsort.dir/all] Error 2; Makefile:160: recipe for target 'all' failed; make: *** [all] Error 2; ```; It confuses me, as the error seems to be in the libdevsufsort, which should be installed.; (sorry for all the mess, really)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397:374,down,download,374,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404455397,9,"['Error', 'down', 'error']","['Error', 'download', 'error']"
Availability,I just tried with gcc 4.9.0 and errored out at the the same point (attached). I'll try using the pre-compiled ones. . [compile.error.txt](https://github.com/COMBINE-lab/salmon/files/189653/compile.error.txt),MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201331991:32,error,errored,32,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201331991,3,['error'],"['error', 'errored']"
Availability,I noticed that for some reason salmon does not convert transcript ids to gene ids.; Here is the command that I run:; ```; salmon --no-version-check quant -i /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/446511232/GRCh38.p13_ensembl_101 --geneMap /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-2062771642/Homo_sapiens.GRCh38.101.gtf --numBootstraps 128 --threads 3 -l A --seqBias --gcBias --validateMappings --writeUnmappedNames -o quant_GSE113798_GSE113801_GSM3119577_SRR7075087 \; -1 /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-11815/SRR7075087_1.fastq_cleaned.fastq.gz -2 /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-11815/SRR7075087_2.fastq_cleaned.fastq.gz; ```; I also enclose the results. Even though I use Ensembl Human GTF ( i.e. ftp://ftp.ensembl.org/pub/release-101/gtf/homo_sapiens/Homo_sapiens.GRCh38.101.gtf.gz ) it gives me transcript ids in quant.genes.sf output; [quant.zip](https://github.com/COMBINE-lab/salmon/files/5632824/quant.zip); [Downloads.tar.gz](https://github.com/COMBINE-lab/salmon/files/5632828/Downloads.tar.gz),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/598:1417,Down,Downloads,1417,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/598,2,['Down'],['Downloads']
Availability,"I prefer to have it bundled _within_ RapMap (but am willing to hear argument against this). Specifically, this allows that I have control over the availability (i.e. if the official repo disappears, RapMap will continue to build). Of course, the bundled zip was from a slightly updated version of the official `libdivsufsort` that incorporates a fix into the `CMakeLists.txt` file where the original failed. It would certainly be easy to just move the bundled version into a tarball rather than a zip without any hassle.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193926752:147,avail,availability,147,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193926752,1,['avail'],['availability']
Availability,"I ran salmon alevin 0.14.0 with a custom transcriptome reference and the following options: --chromium --dumpFeatures --dumpMtx --whitelist mylist.txt. Everything ran through OK. However, when I tried to load the .mtx file with readMM() in R, I got the error: ; ` Error: readMM(): column values 'j' are not in 1:nc `. When I tried to read directly the binary file into a matrix, there's a warning:; ```; counts <- readBin(quants_mat.gz, what = 'numeric', n = length(genes)*length(cells)); close.connection(quants_mat.gz); Warning message:; In matrix(data = counts, nrow = length(cells), ncol = length(genes), :; data length [391335] is not a sub-multiple or multiple of the number of rows [4942]; ```; It seems like there's issue with the dimensions; [out.zip](https://github.com/COMBINE-lab/salmon/files/3296080/out.zip); of the output matrix. I've attached my log file as well as my output files (both .mtx and binary). Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/380:253,error,error,253,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/380,2,"['Error', 'error']","['Error', 'error']"
Availability,"I ran salmon quant -p 6 -i refs/Homo_sapiens_GRCh38_91_quasi_index -l ISF -1 <(zcat RD1_R1_001.fastq.gz) -2 <(zcat RD1_R2_001.fastq.gz) -o test_salmon_quant -g refs/Homo_sapiens.GRCh38.91.gtf; (...); I am getting a bunch of warnings like:; [warning] couldn't find transcript named [ENST00000619185.1] in transcript <-> gene map; returning transcript as it's own gene. And in the end, there isn't a single ENSGxxxx Ensembl gene id in the quant.gene.sf file.; The gtf file was downloaded from Ensembl ftp site ftp://ftp.ensembl.org/pub/release-91/gtf/homo_sapiens. . I noticed the format of the gtf files from Ensembl v.75 and 91 are different; they have added gene_version between gene_id and transcript_id, and transcript_version. Homo_sapiens.GRCh37.75.gtf:8	protein_coding	transcript	26247878	26268564	.	+	.	gene_id ""ENSG00000104765""; transcript_id ""ENST00000518611""; gene_name ""BNIP3L""; gene_source ""ensembl_havana""; gene_biotype ""protein_coding""; transcript_name ""BNIP3L-004""; transcript_source ""ensembl_havana"";. Homo_sapiens.GRCh38.91.gtf:8	havana	transcript	26390362	26411048	.	+	.	gene_id ""ENSG00000104765""; gene_version ""15""; transcript_id ""ENST00000518611""; transcript_version ""5""; gene_name ""BNIP3L""; gene_source ""ensembl_havana""; gene_biotype ""protein_coding""; transcript_name ""BNIP3L-202""; transcript_source ""havana""; transcript_biotype ""protein_coding""; tag ""CCDS""; ccds_id ""CCDS83267""; tag ""basic""; transcript_support_level ""2"";",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/198:475,down,downloaded,475,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/198,1,['down'],['downloaded']
Availability,"I ran the following command: . ```; salmon index -t metagG.ffn -i transcript_index --type quasi -k 31; ```; to a symlink to a file (metaG.ffn) that didn't actually exist and salmon was stuck on ; ```; [Step 1 of 4] : counting k-mers; ```; for an hour instead of spitting out a ""file does not exist"" error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/105:299,error,error,299,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/105,1,['error'],['error']
Availability,"I ran the latest binary salmon (Salmon v0.11.0). But it said, ""salmon: symbol lookup error: salmon: undefined symbol: _ZNSt6locale10_S_classicE"". Can the issue for the binary salmon be fixed?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/256:85,error,error,85,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/256,1,['error'],['error']
Availability,"I realize my mistake, I was confused by the error message.; Pseudoaligment seems to work now. [...]; [2018-08-03 20:13:23.083] [jointLog] [info] Computed 312565 rich; equivalence classes for further processing; [2018-08-03 20:13:23.083] [jointLog] [info] Counted 120065952 total; reads in the equivalence classes; [2018-08-03 20:13:23.084] [jointLog] [warning] Found 9775 reads with `N`; in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-03 20:13:23.084] [jointLog] [info] Mapping rate = 63.2442%. [2018-08-03 20:13:23.084] [jointLog] [info] finished quantifyLibrary(); [2018-08-03 20:13:26.208] [alevinLog] [info] Starting optimizer. ERROR: Txp to Gene Map not found for 203027 transcripts. Exiting(salmon). I just have a problem with my tx2gene file. Here is the head of my file:. ENST00000013125	MAP4K5; ENST00000215368	EFNA2; ENST00000200453	PPP1R15A; ENST00000202028	EPB41L1; ENST00000204679	GNPTG; ENST00000175506	ASNS; ENST00000215574	CDC34; ENST00000167106	VASH1; ENST00000074304	INPP4A; ENST00000055077	RFC2. The transcript ID is probably not consistent with the one from the; alevin output. However, I used to perform some pseudo-alignments using; salmon on bulk RNAseq with the same transcriptome references and the; same tx2gene file that I used here (postprocessed using R) and it work.; What could be wrong here? Could you provide me with an example of the; tx2gene file needed?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410337209:44,error,error,44,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410337209,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"I recently had a similar problem using bioconda. . When installing salmon alongside [RSEM](https://anaconda.org/bioconda/rsem), conda downgraded salmon to version 0.6. As soon as I installed salmon in a dedicated environment, everything worked fine.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/565#issuecomment-735962605:134,down,downgraded,134,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565#issuecomment-735962605,1,['down'],['downgraded']
Availability,"I saw there was an earlier issue that discussed PCR duplicate removal (https://github.com/COMBINE-lab/salmon/issues/136). I am specifically curious about this response:. > We are currently working on the code that will do duplicate removal when UMI tags are present. That methodology can be extended to remove duplicates even without UMI tags. I am wondering if the functionality was ever added. I am not interested in removing duplicates, but it would be nice to see their estimated levels as a QC measure. Is this information available somewhere? If not, maybe there is some other related metric?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/307:528,avail,available,528,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/307,1,['avail'],['available']
Availability,"I see existing open issues with no workaround listed. Filing new one in the hopes of at getting a workaround. I have 48 files in all and could quantify one by one but not sure how to collate the results from all of them. Help is much appreciated. I am very happy to help reproduce the problem and gather whatever information is needed to fix this problem. Bulk mode was used with aligned files. I do plan to try this with fastq files (instead of already aligned files). Core is dumped if I use more than one file. Here is how I used it. I tried this while letting it pick the number of thread automatically (no change) and specifying the number of threads as 8 (went a little farther with that). 1.; v 1.9.0. 2.; Salmon was installed using the command conda install -c bioconda salmon; Arabidopsis Thaliana reference genome was used - TAIR10_chr_all.fas - from here: https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files. 3.; Alignment was done using STAR. 4.; See command below for options used. 5.; Linux login01 3.10.0-1160.el7.x86_64 #1 SMP Mon Oct 19 16:18:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. 6. Output, for success case, one file only. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam -o salmonquant; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { salmonquant }; Logs will be written to salmonquant/logs; [2023-01-29 16:02:11.267] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be igno",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:895,down,download,895,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['down'],['download']
Availability,"I see, we might have to tweak a bit based on the use case for `longranger basic`.; In `v0.10`, alevin should still be able to do CB correction, and attach the corrected CBs to the header of the second file, although the remaining template sequence (128 bases) from the first file might get loss, since `cellranger` was using template sequencing in only one file. Like @rob-p was saying we can work on making this step more generalized, once we confirm that the error-correction model for `cellranger` and `longranger` can be used interchangeably. In theory we can still concatenate the remaining 128 bases into an interleaved format since alevin has hidden options to provide the lengths explicitly but we have not tested this feature extensively. We will keep this at the top of our feature-request list and would inform you as soon as we have a stable version with this feature. Thanks again for the interest !!. re: *interleaved format* -- indeed an interleave format does makes sense and should be the default dumping format, but I believe since the default mode of 10x's `mkfastq` is to dump separate `FASTQ`, we should not use resources to create an interim interleaved format and then consume it downstream (since`FASTQ` itself is not very efficient), instead, in alevin we just consume the two separate `FASTQ` into our own interim data-structure to perform the downstream analysis.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395195411:461,error,error-correction,461,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/233#issuecomment-395195411,3,"['down', 'error']","['downstream', 'error-correction']"
Availability,"I see. Well, this is definitely what is leading to the error. The JSON files shouldn't be empty. Can you report the output of `salmon quant` when you were building the index? It seems that the JSON files were not written correctly, which prevents proper loading of the index (and which may be indicative of other parts of the index not being properly written).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404959801:55,error,error,55,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251#issuecomment-404959801,1,['error'],['error']
Availability,"I still had the same error on that computer after following the instructions on the other thread. However, that computer is a bit older (OS 10.11.3), and when I used that OSX binary on my newer computer in lab (OS 10.13.4) it is working perfectly well so far. Thank you!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432662209:21,error,error,21,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432662209,1,['error'],['error']
Availability,"I suppose it is two issues. With 1.4.0 I get a stripped down `cmd_info.json` file, and with 1.5.1 I get none at all.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/688#issuecomment-882833076:56,down,down,56,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/688#issuecomment-882833076,1,['down'],['down']
Availability,"I suspect the issue may be the computational cluster, which limits the number or processes an application can solve and the large number of threads alevin is spawning after processing the first 6M reads. Is there an alternative way to limit the number of threads? . I get the same error at 6M barcodes processed with the v2 chemsitry pbmc4k dataset available on the 10X website.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395814714:281,error,error,281,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395814714,2,"['avail', 'error']","['available', 'error']"
Availability,"I suspect you're running this on a Mac, correct? ; I had the same issue, Salmon would index for the better part of a day, use ~30 gb of swap space, then die (killed 9 message). The versionInfo.json error is slightly misleading, most likely what happened is that the indexing didn't finish and since that file is only created if it finishes correctly, that's the error you get.; Running the indexing with the same code, with similar resources completed on our AWS node so I wonder if this is a Mac specific problem...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/559#issuecomment-738480434:198,error,error,198,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/559#issuecomment-738480434,2,['error'],['error']
Availability,"I tested changing the parameters, and I am still getting the same error message:. ```; [2021-07-08 16:05:50.979] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-08 16:05:50.979] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. However, I will look into the other information and see if I can understand what is happening. I can also test not using a white list and see if that changes the number to be something like an order of magnitude different that what I would expect from the other sample. So, I will post an update when I can run alevin without an error message, and try to give some sense of the results that are quantified.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-877303669:66,error,error,66,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-877303669,3,['error'],['error']
Availability,"I think @rob-p meant to include links in his reply. The download page is [here](https://www.gencodegenes.org/releases/current.html), and you're likely looking for this file:. ftp://ftp.sanger.ac.uk/pub/gencode/Gencode_human/release_27/gencode.v27.pc_transcripts.fa.gz",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/186#issuecomment-359017963:56,down,download,56,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/186#issuecomment-359017963,1,['down'],['download']
Availability,"I think if you want to automate these steps though the easiest and most robust thing you could do is require everyone to tell you how many cells they captured and sequenced, and relax that number a little bit and do whatever filtering you need to do downstream to get rid of the crap on the low end; usually other quality control metrics like mitochondrial content or genes detected or whatever will filter out the garbage that leaks into the count matrix from being permissive in initial cell demultiplexing + quantification steps.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490161823:72,robust,robust,72,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490161823,2,"['down', 'robust']","['downstream', 'robust']"
Availability,I think logging non-error output to stderr is OK.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-237040761:20,error,error,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-237040761,1,['error'],['error']
Availability,"I think that's the right binary. You can check the sha256 sum:. ```; rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; $ shasum -a256 bin/salmon; 7be1c57e1a83956cc9c18f75aed3b2376c93595de7dec215041fe3065528b527 bin/salmon; ```. You can also check the libraries that `salmon` is seeing:. ```; rob at Robs-MacBook-Pro in ~/Salmon-0.8.2_macOX_10.12; $ otool -L bin/salmon; 	bin/salmon:; 	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8); 	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.0.0); 	/usr/lib/libbz2.1.0.dylib (compatibility version 1.0.0, current version 1.0.5); 	@rpath/libtbbmalloc_proxy.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libtbbmalloc.dylib (compatibility version 0.0.0, current version 0.0.0); 	@rpath/libtbb.dylib (compatibility version 0.0.0, current version 0.0.0); 	/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.4.0); ```. but, again, the library of interest with respect to this message (jemalloc) is linked statically. Out of curiosity, is this message a warning or error (i.e. does salmon run or return a non-zero exit code). The message you're seeing is actually expected if jemalloc was compiled without debug mode turned off (because apple did some funny business with the allocator in OS X 10.12).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294852033:1106,error,error,1106,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294852033,1,['error'],['error']
Availability,I think the error was caused by running out of memory,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641#issuecomment-817390863:12,error,error,12,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641#issuecomment-817390863,1,['error'],['error']
Availability,"I think the recommended approach would be to map against everything and filter down to only the information for these 1800 transcripts. Let us know if that process leads to further questions. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/681#issuecomment-1138621099:79,down,down,79,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/681#issuecomment-1138621099,1,['down'],['down']
Availability,"I think we should sort out this issue step by step. If you say `libstaden` has an important bugfix we should upgrade to the latest version in any case. Do you have a link to this bug? I admit this update simply slipped through - we should have upgraded this in the beginning of this year. Usually we try to follow upstream closely (which we failed for salmon blatantly for several reasons - one is the close connection to pufferfish).; Regarding `pufferfish`: We tried hard to get `pufferfish` packaged but failed (due to the use of other versions of `spdlog`, `cereal`, and `fmt`) However, since we can't run `fetchPufferfish.sh` *inside the build process* I was running it separately and added the downloaded source in [debian/external/pufferfish](https://salsa.debian.org/med-team/salmon/-/tree/master/debian/external/pufferfish) So I think the requirement of salmon should be fulfilled. I confirm your feeling that pufferfish is important for the current issue.; However, in the test I did when opening this bug report I did not do that pre-downloading of pufferfish since I was building right in the downloaded source tarball. `libpufferfish-dev` was not installed by `apt build-dep salmon` since this package does not exist.; Kind regards, Andreas.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1464878371:700,down,downloaded,700,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1464878371,6,['down'],"['downloaded', 'downloading']"
Availability,"I tried ; conda install -c bioconda salmon ; similar failure as shown by Jx-b.; Then I tried the way as Jx-b suggested, it failed at first. After updating Conda to the latest version (4.5.1), removing the salmon file and reinstall it by:; conda create -n salmon salmon=0.9.1; The installation was finally complete without error. Thanks for the discussion here, @Jx-b",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-383178270:53,failure,failure,53,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192#issuecomment-383178270,2,"['error', 'failure']","['error', 'failure']"
Availability,I tried re-installing salmon today after seeing your message. A simple `conda install salmon` worked for me this time. I don't know why it was giving me an error back then and not one now though....,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-1137154359:156,error,error,156,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-1137154359,2,['error'],['error']
Availability,"I tried to run salmon v0.9.1 (for Mac OSX, downloaded from the conda page) using the '--gencode' flag and am getting an error that the option is unrecognized. I have SE reads. salmon quant -i ~/path/to/index/gencodemouse_index -l A --seqBias --gcBias --gencode \; 	-r <(gunzip -c 19_S34_L004_R1_001.fastq.gz 19_S34_L005_R1_001.fastq.gz 19_S34_L006_R1_001.fastq.gz 19_S34_L007_R1_001.fastq.gz 19_S34_L008_R1_001.fastq.gz) \; 	-o ~/output/directory/SalmonQuantsGencode/19_S34_Quants. Exception : [unrecognised option '--gencode']. Exiting.; Pauls-MacBook-Pro:fastq pdellorusso$ salmon -h; salmon(51580,0x7fffadd90340) malloc: *** malloc_zone_unregister() failed for 0x7fffadd81000; Salmon v0.9.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/200:43,down,downloaded,43,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/200,2,"['down', 'error']","['downloaded', 'error']"
Availability,"I tried using Homo_sapiens.GRCh38.94.chr_patch_hapl_scaff.gtf.gz for the annotation file and ftp://ftp.ensembl.org/pub/release-94/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz to build the index but got a similar error. Here are the logs (I modified the salmon log a bit because it didn't have the error message that printed to stdout). [alevin.log](https://github.com/COMBINE-lab/salmon/files/3224429/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/3224440/salmon_quant.log). One curious thing that I noticed:. ```; Index contained 175,775 targets; ...; ERROR: Txp to Gene Map not found for 175775 transcripts; ```; It seems to not be finding any of the transcripts? This was also the case for the gencode attempt that I made previously.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/336#issuecomment-496258062:226,error,error,226,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/336#issuecomment-496258062,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,I tried using salmon quant v 1.3.0. I still get the same error,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641#issuecomment-809864805:57,error,error,57,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641#issuecomment-809864805,1,['error'],['error']
Availability,"I understand that salmon does not use read quality scores when performing alignment/quantitation but, as it stands, running with `--writeMappings` it also doesn't output the qualities in its SAM-format output. That may not impact most downstream applications of the data but it does limit some. I'd be particularly interested in using reads that have been aligned and assigned to transcripts with an EM algorithm to investigate RNA editing. The most advanced methods of doing this integrate the quality of base calls from the sequencer into the models and, as such, cannot currently run on the data output. Although it may save a few CPU cycles in not reading and outputting the qualities - I can understand the choice when running with default settings - when running with `--writeMappings` that nominal difference in speed needs to be weighed up against downstream utility. Could this be looked into?. Cheers! George",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/756:235,down,downstream,235,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/756,2,['down'],['downstream']
Availability,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/209:201,error,error,201,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209,2,['error'],['error']
Availability,"I was attempting to create an index for mapping of transcripts using the full chicken (Gallus gallus) genome from Ensembl. No errors appeared, but the ref_indexing.log stated ""Replaced 9,788,221 non-ATCG nucleotides"" which seems rather high compared to some of the numbers I've seen from gencode-derived indices. This is my first time making an index, so I don't know where to begin troubleshooting. What ""non-ATCG nucleotides"" are being replaced here, and what are they being replaced with? Could Salmon be reading metadata in transcript headers as nucleotide sequences? Why would it do that? Am I just being paranoid?. Here's my code. Note that chicken does not have a ""transcriptome"" file, so I concatenated the cdna and ncrna files ahead of the full genome. I've also attached the ref_indexing.log file.; ```. SALMON_BIN=/data/homezvol1/fweghors/chickscripts/salmon-1.8.0_linux_x86_64/bin/salmon; grep ""^>"" <(gunzip -c Gallus_gallus.GRCg6a.dna.toplevel.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat Gallus_gallus.GRCg6a.cdna.all.fa.gz Gallus_gallus.GRCg6a.ncrna.fa.gz Gallus_gallus.GRCg6a.dna.toplevel.fa.gz > gentrome.fa.gz. gunzip gentrome.fa.gz. $SALMON_BIN index -t gentrome.fa -d decoys.txt -p 13 -i salmon_index; ```. [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/8375551/ref_indexing.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/766:126,error,errors,126,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/766,1,['error'],['errors']
Availability,"I wonder if the max 1-edit distance restriction is too stringent for 21 length barcodes. One important flag to play with is the `--minScoreFraction`. The basic rule to set that is define [here](https://github.com/COMBINE-lab/salmon/blob/91091fc3650a3220f657a9f31616916513f0ad02/src/SalmonUtils.cpp#L3242-L3253). The gist being say if we wan't max k-edit we allow all the reads above the following threshold score (as in the log ):. ```; [2020-06-04 17:55:11.700] [alevinLog] [info] set CITE-seq minScoreFraction parameter to : 0.797619; ```; i.e. we use the equation `(max_score + edit_cost) - 0.5) / max_score`; where `max_score` = 2 * length of barcode = 2 * 21 = 42,; and `edit_cost`= `min( k * (mismatch - match), k * (go + ge - match)`;; `mismatch` penalty = -4; `match` = 2; `go` gap open penalty = -4; `ge` gap extend penalty = -2. For k=1, we had `edit_cost = 8` leading to automatic setting of `minScoreFraction` of 0.797619.; we have looked at 15 length barcodes, but it's possible longer barcodes might have more sequencing error. Let's try allowing more edits i.e. k=2, by setting `--minScoreFraction 0.607` and see if it improves the mapping rate.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/531#issuecomment-639235133:1035,error,error,1035,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531#issuecomment-639235133,1,['error'],['error']
Availability,I would have prefered an option to check if a new version is available instead of having a software that systematicly phone home . it will be problematic on our cluster as compute nodes does not have network acces to internet. ; did not checked yet how this case in handled by salmon. regards. Eric,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/486#issuecomment-617251989:61,avail,available,61,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/486#issuecomment-617251989,1,['avail'],['available']
Availability,"I would think the best way to test it would be as Mike says: run Salmon on a paired-end library with bias-correction enabled, and then re-run it on only read 1 of the same library, only read 2, and on all the reads but treating it as single-end, and see how close it comes in each case. I would say it's also important to test whether the bias estimation is robust against modest misspecification of the mean fragment size, since that is often not known very accurately.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-246164791:358,robust,robust,358,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/83#issuecomment-246164791,1,['robust'],['robust']
Availability,"I wrote the '[make.dummy.fastq()](https://bitbucket.org/habilzare/alzheimer/src/master/code/Habil/utilities/make.dummy.fastq.R) function in R, which addressed the issue as planned in above. . For some of the samples, I got the ""umi indexing of jellyfish failing"" error, which I realized from [this](https://github.com/COMBINE-lab/salmon/issues/237) report must be related to shorter than 26 bps reads. I used trimommatic to exclude those short reads, and finally Alevin produced the count matrix in CSV format for me. Thank you Salmon team!. Minor: The output CSV file has an extra comma at the end of each line, which I ignored in my post-processing step.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-407266564:263,error,error,263,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-407266564,1,['error'],['error']
Availability,"I'd rather not bundle the dependency. Troubleshooting bundled dependencies is crazy making. The `cmake` script could check that the dependency is satisfied and report an error message if it's not. Or I suppose install the dependency if it's not satisfied. Perhaps that's what you were thinking.; In any case, here's the web site: http://tukaani.org/xz/; and git repository: http://git.tukaani.org/; Here's a GitHub mirror. I don't know whether it's current: https://github.com/nobled/xz",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193941254:170,error,error,170,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193941254,1,['error'],['error']
Availability,"I'll be happy to go ahead an implement this; but the numeric_error exception that is thrown doesn't contain the value that caused the error (just that string that is printed out) `Error in function boost::math::digamma(double): numeric overflow`. The try/catch should be easy to do, but I'm quite interested in how this can even be triggered given that the range check is already being done.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393606315:134,error,error,134,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229#issuecomment-393606315,2,"['Error', 'error']","['Error', 'error']"
Availability,I'm actually still getting the same error.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259483994:36,error,error,36,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259483994,1,['error'],['error']
Availability,"I'm also not quite convinced about the superiority of either approach. On one hand, it would, of course, be nice to have sailfish and salmon natively support as many file formats as possible. On the other hand, every extra file format increases the complexity of the parsing code paths, probably putting us in some technical debt, and creating more opportunities for bugs to creep in. From this perspective, anything that can be handled cleanly and robustly from the command line seems a win (of course, this is only true if it can actually be handled _cleanly_ and _robustly_).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168536811:449,robust,robustly,449,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-168536811,1,['robust'],['robustly']
Availability,"I'm attaching the linux binary with the fix [here](https://github.com/COMBINE-lab/salmon/files/2074498/salmon-latest_linux_x86_64.tar.gz). Can you see if this runs without error for you (after addressing the issues with the duplicate sequences and alignment sort order mentioned above)? If so, I'll cut it as a new release. Thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394912602:172,error,error,172,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231#issuecomment-394912602,1,['error'],['error']
Availability,"I'm curious if there is code available to remove the duplicates based on UMI tags for RNA. I'm aware of Alevin, but I don't think this suits my purpose. Regards,; Steven",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-499500637:29,avail,available,29,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-499500637,1,['avail'],['available']
Availability,"I'm curious too if there is any specific feedback from the devs on whether using salmon on bacterial coding sequences is generally seen as appropriate or not? (sorry if this information is already available elsewhere, I've looked a bit and not seen it yet)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/350#issuecomment-582077473:197,avail,available,197,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/350#issuecomment-582077473,2,['avail'],['available']
Availability,"I'm getting a memory allocation error when I try to run the salmon binary after updating my OS. Here is the error:. salmon(65515,0x7fffdb32f3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffdb325000",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/103:32,error,error,32,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103,2,['error'],['error']
Availability,"I'm getting the same error as reported above. Copying the code i ran below:; ```; # download reference genome; curl -JLO https://ftp.ncbi.nlm.nih.gov/genomes/refseq/vertebrate_mammalian/Homo_sapiens/latest_assembly_versions/GCF_009914755.1_T2T-CHM13v2.0/GCF_009914755.1_T2T-CHM13v2.0_genomic.fna.gz; # extract chromosome names; grep ""^>"" <(gunzip -c GCF_009914755.1_T2T-CHM13v2.0_genomic.fna.gz) | cut -d "" "" -f 1 > GCF_009914755.1_T2T-CHM13v2.0_genomic.txt; # download transcriptome; curl -JLO https://ftp.ncbi.nlm.nih.gov/genomes/refseq/vertebrate_mammalian/Homo_sapiens/latest_assembly_versions/GCF_000001405.40_GRCh38.p14/GCF_000001405.40_GRCh38.p14_rna.fna.gz; # combine transcriptome and genome, in that order; cat GCF_000001405.40_GRCh38.p14_rna.fna.gz GCF_009914755.1_T2T-CHM13v2.0_genomic.fna.gz > human_seq.fa.gz; # give to salmon to index; salmon index -t human_seq.fa.gz -i salmon_index -d GCF_009914755.1_T2T-CHM13v2.0_genomic.txt; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/788#issuecomment-1482927046:21,error,error,21,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/788#issuecomment-1482927046,3,"['down', 'error']","['download', 'error']"
Availability,"I'm having a similar problem, also using an M1 mac. I've tried your solution @rob-p, as well as updating conda, creating a new environment specifically for salmon, it still doesn't work. I get the following error:. ```; $ conda install -c bioconda salmon 3s Py salmon; Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve. PackagesNotFoundError: The following packages are not available from current channels:. - salmon. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64; - https://conda.anaconda.org/bioconda/noarch; - https://conda.anaconda.org/conda-forge/osx-arm64; - https://conda.anaconda.org/conda-forge/noarch; - https://repo.anaconda.com/pkgs/main/osx-arm64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/r/osx-arm64; - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-1137109855:207,error,error,207,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-1137109855,2,"['avail', 'error']","['available', 'error']"
Availability,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/936:93,error,error,93,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936,11,"['Error', 'error']","['Error', 'error']"
Availability,"I'm looking at sequencing from cells infected with different SARS2 virus variants. In addition to looking at the host transcriptome, I'd also like to know more about the different levels of viral transcript expression. I'm curious the best way to do this. I can very easily take the SARS2 reference strain and generate a combined human-SARS2 transcriptome, but I'm worried about how the various mutations that define these viral strains will mess with Salmon's mapping of reads. . My current plan is to drop the --minScoreFraction (maybe to 0.7?) and change the mismatch penalty to 0, but I'm not sure it's the best option. I could also try to hunt down the genomes of each variant I'm using, but the annotations and deposited sequences for a lot of the variants aren't super great, so I might just run into this same problem. . Any advice on how best to use Salmon for this task would be greatly appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/747:649,down,down,649,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/747,1,['down'],['down']
Availability,"I'm not sure whether I should create a new issue for each problem. I'll just put them all here. . BWA continued to make, when I changed the BUILD_COMMAND to use gmake. I also ran 'export MAKE=gmake', and used gmake to run the output of cmake. . BUILD_COMMAND sh -c ""gmake ${QUIET_MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER}"". Unfortunately, the BWA included with Salmon is broken on FreeBSD. . kthread.c:70:2: error: unknown type name 'int64_t'. The one on Git (https://github.com/lh3/bwa) works though. So I modified DOWNLOAD_COMMAND to grab the one from Git. . DOWNLOAD_COMMAND git clone https://github.com/lh3/bwa bwa-master. Next problem, it tries to build TBB and fails. This is two problems, because I have TBB, I passed it the path, and it fails to use it. The output of cmake says:. -- Could NOT find TBB (missing: tbbmalloc_proxy) (found suitable version ""2018.0"", minimum required is ""4.4""). tbbmalloc_proxy.h is present in /usr/local/include/tbb. Moving on, TBB fails to build because it's hard coded to use make. I fixed this and it built. BUILD_COMMAND gmake ${QUIET_MAKE} CXXFLAGS=${TBB_CXXFLAGS} lambdas=1 compiler=${TBB_COMPILER} cfg=release tbb_build_prefix=LIBS. Staden-io_lib fails to build with: ; /usr/bin/ld: undefined reference to symbol `pthread_create@@FBSD_1.0' (try adding -lthr); //lib/libthr.so.3: could not read symbols: Bad value. As advertised, -lthr fixed this issue. ; CONFIGURE_COMMAND ./configure --enable-shared=no --without-libcurl --prefix=<INSTALL_DIR> LDFLAGS=-lthr CFLAGS=${LIBSTADEN_CFLAGS} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER}. This leads me to an error I can't fix on my own. /home/esiefker/salmon/fresh-salmon/include/BWAMemStaticFuncs.hpp:36:36: error:; use of undeclared identifier 'MEM_F_SELF_OVLP'; int start_width = (opt->flag & MEM_F_SELF_OVLP)? 2 : 1;. There is a similar Debian bug which is fixed: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=818397. I could not find the fix mentioned. https://github.com/COMBINE-lab/s",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337390415:421,error,error,421,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337390415,1,['error'],['error']
Availability,"I'm quantifying reads from a Lexogen QuantSeq experiment, using `-l SF and --noLengthCorrection`. I just downloaded the latest release 0.9.0. Full command (using nu parallel); `salmon quant -i path_to_index -r {} -l SF --noLengthCorrection -o {.} -p 5`. Which gives the following settings information:; ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/wdecoster/databases/Homo_sapiens/hg38/transcriptome/GRCh38-full-transcriptome-index }; ### [ unmatedReads ] => { pt_d10046-11.fastq.gz }; ### [ libType ] => { SF }; ### [ noLengthCorrection ] => { }; ### [ output ] => { pt_d10046-11.fastq }; ### [ threads ] => { 5 }; ```. But I get the following warning for each sample:; `Detected a *potential* strand bias > 1% in an unstranded protocol check the file: samplename/lib_format_counts.json for details`. That file looks as below:. ```; {; ""read_files"": ""pt_d10040-14.fastq.gz"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 2836170,; ""num_assigned_fragments"": 2836170,; ""num_consistent_mappings"": 10375916,; ""num_inconsistent_mappings"": 0,; ""strand_mapping_bias"": 0.9229587055253724,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 9576542,; ""SR"": 799374,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. This suggests my libType SF is ignored?. (Less important: If you could make --libtype an alias for --libType that would be great, random internal capitalization is quite annoying imho)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/177:105,down,downloaded,105,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/177,1,['down'],['downloaded']
Availability,"I'm running salmon v.4 (downloaded and compiled today) on gencode v22 and got the following error:. Performing PCA decomposition; salmon: /home/merkija1/software/salmon-0.4.0/include/eigen3/Eigen/src/Core/Redux.h:202: static Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Derived, 3, 0>::run(const Derived&, const Func&) [with Func = Eigen::internal::scalar_sum_op<double>; Derived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar = double]: Assertion `size && ""you are using an empty matrix""' failed.; Aborted. The command I ran is:; salmon-0.4.0/src/salmon quant --index gencode.v22.index_0.4.0/ --mates1 <(gunzip -c r1_fq1.gz r1_fq2.gz --mates2 <(gunzip -c r2_fq1.gz r2_fq2.gz ) --output $OUTPUT_DIR --biasCorrect --threads 4 --geneMap gencode.v22.annotation.nochr.gtf --libType ""ISF"". If I remove the --biasCorrect flag, it runs without error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/5:24,down,downloaded,24,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5,3,"['down', 'error']","['downloaded', 'error']"
Availability,I'm still experiencing this `cmake` error:. ```; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/libdivsufsort-prefix/src/libdivsufsort-stamp/extract-libdivsufsort.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20160307-4399-1vksuoo/salmon-0.6.0/external/libdivsufsort.zip'; failed; ```. Here's a gist of the logs:; https://gist.github.com/sjackman/2bbfcf212c555fb20505#file-02-make-L397-L404,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060:36,error,error,36,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193515060,6,"['Error', 'error']","['Error', 'error']"
Availability,"I'm surprised that the `@rpath` showed up, when I thought that we had disabled that. So long as `brew install salmon` works on Mac, I wouldn't worry about downloading and installing dependencies. Leave that chore to the package manager.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239604008:155,down,downloading,155,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/70#issuecomment-239604008,1,['down'],['downloading']
Availability,"I'm trying to build salmon on FreeBSD. . First issue, fetchRapMap.sh fails because it calls /bin/bash. Bash on FreeBSD is in /usr/local/bin/bash.; This is easily worked around with a symlink. Second issue: libbwa fails to build. . ```; [ 34%] Performing build step for 'libbwa'; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 17: Missing dependency operator; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 19: Need an operator; make[3]: Fatal errors encountered -- cannot continue; make[3]: stopped in /usr/home/esiefker/salmon/salmon/external/bwa-master; *** Error code 1; ```; In addition to failing to build bwa, bwa is present in ports and already installed on this machine. Cmake should check for this.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/162:505,error,errors,505,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162,2,"['Error', 'error']","['Error', 'errors']"
Availability,I'm trying to build version 0.6 and I get the following error:. ```; cd /root/soft/salmon/salmon-0.6.0/build/src && /usr/local/bin/cmake -E cmake_link_script CMakeFiles/salmon.dir/link.txt --verbose=1; /opt/rh/devtoolset-2/root/usr/bin/c++ -pthread -funroll-loops -fPIC -fomit-frame-pointer -Ofast -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -static-libstdc++ -Wno-deprecated-register -Wno-unused-local-typedefs -L/opt/rh/devtoolset-2/root/usr/lib64 -L/opt/rh/devtoolset-2/root/usr/lib CMakeFiles/salmon.dir/QSufSort.c.o CMakeFiles/salmon.dir/is.c.o CMakeFiles/salmon.dir/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:56,error,error,56,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['error'],['error']
Availability,"I'm trying to process the 10X 1.3 Million Brain Cells from E18 Mice dataset using Alevin with compiled salmon version 0.12.0 using the gencode.vM19.pc_transcripts.fa.gz as reference (https://support.10xgenomics.com/single-cell-gene-expression/datasets/1.3.0/1M_neurons). The chemistry used is the 10x-v2. I have divided the fastqs into the 133 libraries and I'm trying to run Alevin per library fastqs (~140 r1 fastqs per library). The dataset has been processed with the longranger demux program, which outputs one fastq with both the UMI+barcode and read-sequence. I have divided the fastqs so that it corresponds to the input of Alevin (i.e. the UMI+barcode in one fastq and the read-sequence in the other). However it seems that Alevin gets stuck on processing the barcodes, no error code is produced it just doesn't seem to do anything anymore with just ""processed X Million barcodes"" printed on the screen. Are you aware of such a problem with many fastq files or is there something that I'm not taking into account? Is there a limit how many files can be used as an input? I tested Alevin with 60 fastqs (120 in total r1+r2 fastqs) and it ran through but with more than 60 fastqs it seems to get stuck on processing the barcodes. If it is not possible to run all the library related fastqs, do you recommend running them in smaller batches and then combining the resulting count matrices?. Command used: salmon alevin -l ISR -1 R1_fastqs -2 R2_fastqs --chromium -i index -p 20 -o alevin_output --tgMap txp2gene_mouse.tsv --dumpCsvCounts --whitelist barcode_whitelist.txt --minScoreFraction 0.7. The barcode whitelist was gotten from the HDF5 file which has the original data in a filtered matrix format (it has been run through the cellranger).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/333:782,error,error,782,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/333,1,['error'],['error']
Availability,"I'm trying to use Trinity; With the modules:; module load trinityrnaseq/2.6.2; module load samtools/1.16; module load jellyfish/2.3.0; module load jdk/1.8.0_151; module load bowtie2/2.2.9; module load salmon/1.9.0; But I get the error:; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; Error, cmd:; salmon index -t /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp -i /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx --type quasi -k 25 -p 1; died with ret (256) at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; 	Process_cmd::process_cmd('salmon index -t /work/luarrieta/proy_labap/Output/trinity/rea...') called at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/salmon_runner.pl line 20; Trinity run failed. Must investigate error above. @brianjohnhaas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/832:229,error,error,229,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832,4,"['Error', 'error']","['Error', 'error']"
Availability,"I'm trying to use salmon v1.0.0 to merge a bunch of bulk quant files successfully also run with salmon. However, salmon can't seem to find the quant files, even though farther down in the log it lists the quant file within the same directory in memory:. [critical] The sample directory /gcloud-shared/quants/A653_388/quant.sf either doesn't exist, or doesn't contain a quant.sf file; ...yet... /gcloud-shared/quants/A653_388:; total 9.9M; drwxr-xr-x 2 root root 4.0K May 20 16:11 aux_info; -rw-r--r-- 1 root root 349 May 20 16:11 cmd_info.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 libParams; -rw-r--r-- 1 root root 588 May 20 16:11 lib_format_counts.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 logs; -rw-r--r-- 1 root root 9.8M May 20 16:11 quant.sf. Here's a shorter version of my command :; salmon --no-version-check quantmerge --quants /gcloud-shared/quants/A653_388 /gcloud-shared/quants/A653_242 --names sample1 sample2 --column numreads --genes -o /gcloud-shared/merge/ukbec_gene_numreads.sf. Any idea what might be happening? I'll also attach the logs and quant file from the sample in case thats helpful. [ukbec_logs_salmon_quantmerge5.txt](https://github.com/COMBINE-lab/salmon/files/6517777/ukbec_logs_salmon_quantmerge5.txt). [ukbec_quants_gencode_32_filtered_A653_388_quant.txt](https://github.com/COMBINE-lab/salmon/files/6517782/ukbec_quants_gencode_32_filtered_A653_388_quant.txt); [ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6517784/ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/662:176,down,down,176,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/662,1,['down'],['down']
Availability,"I've been running Salmon on some data from accession SRP034543. For some it works fine, but some there is segmentation fault when using the `--useFSPD`. For an example run where it fails, have a look at accession SRR2048254. Here is the command I ran along with output. ```; $ salmon quant \; > -i /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa \; > -l IU \; > -1 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/64:119,fault,fault,119,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64,1,['fault'],['fault']
Availability,"I've been using 0.7.1 without problems until today.; I'm trying to index the transcriptome (made with gffread) of human GRCh37 from archived Ensembl 60. The process has been running for hours, with no messages beyond this:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; [2016-11-04 13:45:38.583] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers. ```. This is all there is in the index.log. `[2016-11-04 13:45:38.583] [jLog] [info] building index`. None of me previous indexes have taken so long, especially not in total silence. So I'm guessing it gets stuck somewhere, but where? Why?. I know there is a newer version, but getting our busy sysadmin to install things takes time and I didn;t see anything critical for my usage case listed in the release notes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/100:276,avail,available,276,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100,2,['avail'],['available']
Availability,"I've built Salmon 0.9.1 (packaged it for GNU Guix) and experience a couple of errors. The first one is that running ""salmon quant"" without any further argument segfaults. That's likely because of the custom argument parsing code, which doesn't check bounds. It accesses argv2[1] even though that might not exist. (I've built it with GCC 5 and various versions of Boost. I've also unbundled all bundled libraries and made packages for them, but this should not affect the behaviour at all.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/184:78,error,errors,78,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/184,1,['error'],['errors']
Availability,"I've encountered a very similar scenario - I've used STAR for alignment and next ran salmon quant with transcripts data.. I'm also getting the error:. `[2019-01-21 23:11:38.495] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment`. But the correction suggested above using gttread does not solve my issue.. any suggestions?. Edit: apologies, it appears I forgot to use the `--quantMode TranscriptomeSAM` flag in STAR. now that I had the suggested fix works just fine.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-456201406:143,error,error,143,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-456201406,1,['error'],['error']
Availability,"I've found at least ~100 instances of identical RefSeq IDs that appear on more than one chromosome in the human genome reference. These are a mix of (I'm guessing) chrX/Y homologous genes, miRs, snoRNAs, and other long/short noncoding RNAs. This issue will also apply to genes appearing in genomic regions with sequence from multiple haplotypes (e.g. chr6_qbl_hap6, etc) since those also have identical RefSeq IDs. This is certainly bad practice for annotation purposes, but the consequence is that STAR effectively lumps the duplicates into one transcript model (e.g. 3 appearances of 68 bp miR means STAR annotates as one 204 bp gene), and salmon then finds a discrepancy during error modeling between the annotated and ""STAR-observed"" gene lengths, throwing a fatal error. One fix of course would be to remove duplicated sequences from the gene annotation prior to alignment with STAR, [or to have STAR deal with duplicated sequences differently](https://github.com/alexdobin/STAR/issues/482), but it might be nice to have some sort of check in place downstream as well to avoid failure.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/282:681,error,error,681,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/282,4,"['down', 'error', 'failure']","['downstream', 'error', 'failure']"
Availability,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/913:85,error,error,85,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913,2,"['error', 'failure']","['error', 'failure']"
Availability,"I've just used https://transfer.pcloud.com/ to share the files with you. I think you should get an email with the download link. I've included the FASTQ, the index (entire folder in a tar.gz) and the compiled-from-source salmon executable that I used.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266898682:114,down,download,114,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266898682,1,['down'],['download']
Availability,"I've run into this (or a similar) issue attempting to install Salmon on the UC Berkeley HPC cluster. Iconv was present within one of our Python installs, but that didn't seem to have the header files, so I installed libiconv/1.16 thinking this was a dependency issue. Unfortunately this didn't seem to help. Any guidance would be greatly appreciated. Here is my build script to the point of failure:; ```sh; #!/bin/sh ; MODULE_HOME=/clusterfs/vector/home/groups/software/sl-7.x86_64; PACKAGE_NAME=salmon; GITHUB_URL=https://api.github.com/repos/COMBINE-lab/salmon/releases/latest; VERSION=$(curl -s $GITHUB_URL | \; grep '""tag_name"":' | \; cut -d : -f 2,3 | \; tr -d \"",v | \; xargs); LATEST_RELEASE=$(curl -s $GITHUB_URL | \; grep '""tarball_url""' | \; cut -d : -f 2,3 | \; tr -d \"", | \; xargs); module load gcc/7.4.0 cmake/3.15.1 boost/1.70.0-gcc libiconv/1.16; export CC=`which gcc`; export CXX=`which c++`. cd $MODULE_HOME; mkdir -p source/$PACKAGE_NAME/$VERSION; INSTALL_DIR=$MODULE_HOME/modules/$PACKAGE_NAME/$VERSION; mkdir -p $INSTALL_DIR; mkdir -p modfiles/$PACKAGE_NAME. cd source/$PACKAGE_NAME/$VERSION; wget $LATEST_RELEASE -O - | tar -xz --strip-components 1; cmake -DBOOST_ROOT=/global/software/sl-7.x86_64/modules/gcc/7.4.0/boost/1.70.0-gcc -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR; make; ```; And the tail of the output from make:. ```; creating: /clusterfs/vector/home/groups/software/sl-7.x86_64/source/salmon/1.5.1/scripts/../external/pufferfish-salmon-v1.5.1/tests/compile_tests/; inflating: /clusterfs/vector/home/groups/software/sl-7.x86_64/source/salmon/1.5.1/scripts/../external/pufferfish-salmon-v1.5.1/tests/compile_tests/int128_numeric_limits.cpp ; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.11"") ; -- Performing Test Iconv_IS_BUILT_IN; -- Performing Test Iconv_IS_BUILT_IN - Failed; CMake Error at /global/home/groups/consultsw/sl-7.x86_64/modules/cmake/3.15.1/share/cmake-3.15/Modules/FindPackageHandleStandardArgs.cmake:137 (message",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/453#issuecomment-862737315:391,failure,failure,391,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453#issuecomment-862737315,2,['failure'],['failure']
Availability,"I've run into this as well, but's proving tricky to track down. I'm by no mean a expert on build chains (or a C/C++ for that matter), but as far as I can figure, this issue seems specific to RedHat systems. I get exactly the same linking error on RH6 and RH7 using any GCC compiler I have access to on those systems (4.8.5, 5.2.0, 7.2.0). Compiling on an Arch system with GCC 9.2.0 (glibc 2.30) sees no issue. Unfortunately I don't have easy access to the same compiler versions on both systems. I'm compiling GCC 5.2.0 (with glibc2.28) on the Arch system to test this now, but it's going to be a little while before I even know if I have a working toolchain that can use it.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/455#issuecomment-558714532:58,down,down,58,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455#issuecomment-558714532,2,"['down', 'error']","['down', 'error']"
Availability,"I've tried to reproduce the issue in docker by using the Build-Depends that are used in Debian:. $ docker pull debian:testing; $ docker run -it debian:testing; $ echo ""deb-src http://deb.debian.org/debian unstable main"" > /etc/apt/sources.list.d/10-debsrc.list; $ apt update; $ apt upgrade; $ apt build-dep salmon; $ wget https://github.com/COMBINE-lab/salmon/archive/refs/tags/v1.10.0.tar.gz; $ tar xaf v1.10.0.tar.gz; $ cd salmon-1.10.0; $ mkdir build && cd build; $ cmake -DNO_IPO=TRUE ..; $ make -j8; make -j8; [ 3%] Built target ksw2pp_sse4; [ 6%] Built target ntcard; [ 15%] Built target twopaco; [ 18%] Built target graphdump; [ 21%] Built target ksw2pp_sse2; [ 27%] Built target ksw2pp_basic; [ 43%] Built target salmon_core; [ 67%] Built target puffer; [ 68%] Built target ksw2pp; [ 69%] Built target UnitTestsMain; [ 73%] Built target alevin_core; [ 74%] Linking CXX executable unitTests; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_gnutls_la-psl.o): in function `Curl_psl_destroy':; (.text+0x21): undefined reference to `psl_free'; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_gnutls_la-psl.o): in function `Curl_psl_use':; (.text+0xbc): undefined reference to `psl_latest'; /usr/bin/ld: (.text+0x157): undefined reference to `psl_builtin'; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_gnutls_la-version.o): in function `curl_version':; (.text+0x129): undefined reference to `BrotliDecoderVersion'; /usr/bin/ld: (.text+0x16f): undefined reference to `ZSTD_versionNumber'; /usr/bin/ld: (.text+0x1e3): undefined reference to `idn2_check_version'; /usr/bin/ld: (.text+0x20e): undefined reference to `psl_get_version'; /usr/bin/ld: /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_gnutls_la-version.o): in function `curl_version_info':; (.text+0x386): undefined reference to `idn2_check_version'; /usr/bin/ld: (.text+0x3ad): undefined reference to `BrotliDecoderVersion'; /usr/bin/ld: (.text+0x3b8): undefined reference to `BrotliDecoderVersion'; /usr/bin/ld: (.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1463708855:162,echo,echo,162,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1463708855,1,['echo'],['echo']
Availability,I've updated the doc and it should me available with the next release or the docs from the develop branch. Thanks again.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/395#issuecomment-510121247:38,avail,available,38,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/395#issuecomment-510121247,1,['avail'],['available']
Availability,"If I install Salmon Binary:; [100%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:421: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:659: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/592#issuecomment-734935424:406,error,error,406,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/592#issuecomment-734935424,8,"['Error', 'error', 'fault']","['Error', 'error', 'fault']"
Availability,"If Salmon requires CMake 3.12 (or later), it would probably be worth bumping the `cmake_minimum_required` to this version in CMakeLists.txt. It's currently set to 3.9. This would at least point users to the ""proper"" error. At the moment, it's unclear if Salmon meant to provide its own FindIconv.cmake (like it does for several other packages) or not.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/453#issuecomment-557680455:216,error,error,216,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453#issuecomment-557680455,1,['error'],['error']
Availability,"If i use the smaller set of barcodes, then I progress further. However, I still receive an error message (and there no **quants_mat_rows.txt** file):. ```; [2021-07-13 13:59:07.109] [alevinLog] [info] Total 0.00 UMI after deduplicating.; [2021-07-13 13:59:07.109] [alevinLog] [info] Total 0 BiDirected Edges.; [2021-07-13 13:59:07.109] [alevinLog] [info] Total 0 UniDirected Edges.; [2021-07-13 13:59:07.134] [alevinLog] [info] Finished optimizer; /var/spool/slurmd/job3050767/slurm_script: line 23: 10494 Floating point exception../../Ref_Generation/salmon-1.5.1_linux_x86_64/bin/salmon alevin -l ISF --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL. ```. If the barcode is on the opposite read, then I am not sure if I should really be using the reverse or reverse complement (possibly even for the full barcode list)?. However, for the sake of this discussion, I will now test not providing any white list. If that works, then I will close the ticket again. **Update (7/14/2021)**: I have added the full log file here: [cluster_log.log](https://github.com/COMBINE-lab/salmon/files/6819402/cluster_log.log)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-879497561:91,error,error,91,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-879497561,1,['error'],['error']
Availability,"If it is a _large_ (i.e. > 2^31 nucleotide reference) then it should trigger the 64-bit index automatically. If there's a failure to do that, it's a bug I have to fix in RapMap. Admittedly, I've not tried to map to many transcriptomes that large, so I'd be much obliged if you could provide me with an example to trigger that behavior :).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174085756:122,failure,failure,122,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174085756,1,['failure'],['failure']
Availability,"If it's useful, I made an example where you can run beginning to end to reproduce (didn't see this thread beforehand). Download these:. ```; ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz; ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz; ftp://ftp.ensembl.org/pub/release-87/gtf/homo_sapiens/Homo_sapiens.GRCh38.87.gtf.gz. ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR188/ERR188297/ERR188297_1.fastq.gz; ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR188/ERR188297/ERR188297_2.fastq.gz; ```. Using STAR 2.5.2b. ```; star --runThreadN 6 \; --runMode genomeGenerate \; --genomeDir ensembl87 \; --genomeFastaFiles Homo_sapiens.GRCh38.dna.primary_assembly.fa \; --sjdbGTFfile Homo_sapiens.GRCh38.87.gtf \; --sjdbOverhang 100. star --runThreadN 6 \; --genomeDir ensembl87 \; --readFilesIn ERR188297_1.fastq ERR188297_2.fastq \; --outFileNamePrefix star/ \; --outSAMtype BAM Unsorted \; --quantMode TranscriptomeSAM; ```. Then, following Thomas, I chop the version numbers from the FASTA. ```; cut -f1 -d ""."" Homo_sapiens.GRCh38.cdna.all.fa > transcripts_unversioned.fa; ```. Now Salmon v0.7.2. Without `--gcBias` it runs to completion. Although nothing in `libParams` dir... ```; Salmon-0.7.2_linux_x86_64/bin/salmon quant -t transcripts_unversioned.fa -l IU -p 6 -a star/Aligned.toTranscriptome.out.bam -o align_test; ```. With `--gcBias` produces segfault:. ```; Salmon-0.7.2_linux_x86_64/bin/salmon quant --gcBias -t transcripts_unversioned.fa -l IU -p 6 -a star/Aligned.toTranscriptome.out.bam -o align_testGC; ```. ```; ^M^MESC[0;32mprocessedESC[0;31m 0 ESC[0;32mreads in current roundESC[0;0m/nas02/home/m/i/milove/.lsbatch/1481837415.333618.shell: line 9: 29198 Segmentation fault (core dumped); ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267451963:119,Down,Download,119,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267451963,2,"['Down', 'fault']","['Download', 'fault']"
Availability,"If one has a downstream fusion pipeline that uses transcriptome mapping, you can already get those from the -z=<output.sam> option for a while. The real challenge is how to properly control the false positive rate. That's the main thing special purpose downstream software must solve.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-280828290:13,down,downstream,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/52#issuecomment-280828290,2,['down'],['downstream']
Availability,"If so, I also received an 'image not found' error",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421408534:44,error,error,44,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421408534,1,['error'],['error']
Availability,"If the read length in the FASTQ input files to Salmon are less than the k-mer size used when building the index then no error is produced but a mapping rate of 0% is reported. It would be useful for Salmon to throw an error telling the user that the mapping will surely fail for this reason (as opposed to others such as wrong reference transcriptome or wrong library type), and suggest rebuilding the index using a smaller k-mer size.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/41:120,error,error,120,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/41,2,['error'],['error']
Availability,"If this feature is not supported, is there a reason that Salmon is allowed to run through the entire quantification process before throwing the error? Wouldn't it be beneficial to check that the -r and -1 -2 flags are not all called simultaneously? You could always add an override flag if there is some use case for adding all together...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-392174468:144,error,error,144,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175#issuecomment-392174468,1,['error'],['error']
Availability,"If you are not building from source, then `0.10.1` is identical to `0.10.0`, there are no new features, behavior changes, or bug fixes. The entire purpose of `0.10.1` is to fix the source build on specific versions of Debian linux using system versions of dependencies. Thus, the pre-compiled versions of `0.10.0` and `0.10.1` (which are not build on a Debian system and which downloads and builds the dependencies directly) will not have any differences.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/841#issuecomment-1542672313:377,down,downloads,377,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/841#issuecomment-1542672313,1,['down'],['downloads']
Availability,"If you put it in e.g. a google drive or dropbox link and share privately with me by email, i will let you know once it's downloaded. Otherwise, i might be able to set a google drive link where you can upload, but I've had mixed success with that in the past.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/435#issuecomment-544178376:121,down,downloaded,121,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/435#issuecomment-544178376,1,['down'],['downloaded']
Availability,"In CMakeLists.txt, `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` is used to determine whether to use LLVM's C++ stdlib - libc++, or the system's own GNU one (libstdc++). Unfortunately, those distros do not ship with that library (per the clip below) - and yet the test succeeds - yielding failure later in the build process due to lots of missing header files.; ```; [rocky@ip-10-11-36-33 ~]$ cat >test.cpp; #include <iostream>. int main() {; std::cout << ""Helloworld"";; }; [rocky@ip-10-11-36-33 ~]$ clang++ -stdlib=libc++ test.cpp ; test.cpp:1:10: fatal error: 'iostream' file not found; 1 | #include <iostream>; | ^~~~~~~~~~; 1 error generated.; ```. The cause is that CMake's `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` test which is used in Salmon only tests if the compiler accepts the flag (the test code it uses doesn't have any includes - just `main() {return 0;}`) rather than if it works. I don't know the whys behind the missing library - the library is available on OS/X for example - however it seems this behaviour should be changed for now on Linux platforms.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/969:297,failure,failure,297,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/969,4,"['avail', 'error', 'failure']","['available', 'error', 'failure']"
Availability,"In my case, the issue was that I was giving a relative path instead of absolute path to the `salmon quant -i` argument. Giving the absolute path made the `Exception : [Error: The index version file salmon_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]` error go away.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696#issuecomment-1903505996:168,Error,Error,168,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696#issuecomment-1903505996,2,"['Error', 'error']","['Error', 'error']"
Availability,"In my experience it is normal to get a **much lower** transcriptome mapping rate for rRNA-depleted samples vs polyA-selected samples. . I'm getting ~21% mapping rate (using Gencode 41 transcripts) on human brain RNAseq samples sequenced several years ago using rRNA-depletion protocol (older Illumina Ribo Zero kits).; I was initially shocked (being used to seeing >90% mapping rates from HISAT2/STAR for these samples) but it turns out **this is normal** for this kind of samples, in this context.; HISAT2 reports 96% mapping rate on the same samples, but QC metrics (rnaseqc) for these HISAT2 alignments (using the same Gencode annotation) show a **65% intronic rate** and a **%23.5 exonic rate** (the rest being intergenic etc). So the _exonic rate_ is getting close to what Salmon is showing (and what it measures), thus I suppose it makes sense to see such a low mapping rate for Salmon on these samples.; (kallisto also reports ~21% pseudoaligned percentage on the same samples). I am only a bit disappointed that when I use `--validateMappings` with decoy sequences (whole genome) added, the mapping rate goes down to about **16.7%** -- as some reads map better to the decoys in that case (partially intronic reads etc.), but I also see a `higher number of fragments entirely discarded because of alignment score` (higher `num_fragments_filtered_vm` and much higher `num_alignments_below_threshold_for_mapped_fragments_vm`).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/779#issuecomment-1474291747:1117,down,down,1117,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/779#issuecomment-1474291747,1,['down'],['down']
Availability,"In other news --- after many many continuous tries, I was finally able to reproduce the issue! I've never been so happy to reproduce a bug. Now to find out if it's our fault or TBB's fault.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267692883:168,fault,fault,168,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267692883,2,['fault'],['fault']
Availability,"In particular, fail when unzip is not available.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/199:38,avail,available,38,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/199,1,['avail'],['available']
Availability,"In particular, this would enable streaming behavior => transcript quantification, downstream of khmer error trimming etc. c.f. http://khmer.readthedocs.org/en/stable/whats-new-2.0.html cc @MacManes @Blahah",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827347:82,down,downstream,82,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152827347,2,"['down', 'error']","['downstream', 'error']"
Availability,"In terms of an intermediate update:. **Setting 1**:. _Command 1_:; `/path/to/salmon alevin -l ISF --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP`; _End of Log 1_:; ```; [2021-07-13 20:12:34.651] [alevinLog] [info] Starting white listing of 814 cells; [2021-07-13 20:12:34.651] [alevinLog] [info] Starting to make feature Matrix; [2021-07-13 20:12:34.654] [alevinLog] [info] Done making feature Matrix; [2021-07-13 20:12:35.447] [alevinLog] [info] Finished white listing; [2021-07-13 20:12:36.158] [alevinLog] [info] Finished optimizer; 0.0408521	8.9925e-05	0.000114595	636780	18682.9	; 0.0290163	6.61624e-05	0.000111685	230922	8010.3	; ```; _Size of quants_mat_rows.txt 1_: 814 lines/barcodes. **Setting 2:**:; _Command 1_:; `/path/to/salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP`; _End of Log 1_:; ```; [2021-07-14 09:51:38.564] [alevinLog] [info] Starting white listing of 814 cells; [2021-07-14 09:51:38.564] [alevinLog] [info] Starting to make feature Matrix; [2021-07-14 09:51:38.566] [alevinLog] [info] Done making feature Matrix; [2021-07-14 09:51:39.347] [alevinLog] [info] Finished white listing; [2021-07-14 09:51:39.541] [alevinLog] [info] Finished optimizer; [2021-07-14 09:51:39.564] [jointLog] [warning] NOTE: Read Lib [[ ../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz, ../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz]] :. Greater than 5% of the fragments disagreed with the provided library type; check the file: 5309-CT-2/lib_format_counts.json for details. 0.0408521	8.9925e-05	0.000114595	636780	18682.9	; 0.0290163	6.61624e-05	0.000111685	230922	8010.3	; ```; _Size of quants_mat_rows.txt 1_: 814 lines/barcodes. Technically, this means that the program ran without generating an error message, but this seems strange to me. So, I think I would prefer to keep the issue open a little bit longer.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-880273749:1737,error,error,1737,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-880273749,1,['error'],['error']
Availability,"In this case, it is likely treating the left and right reads as orphans when mapping. Therefore, you're losing basically all of the benefit of having paired-end reads (which can be considerable) and also increasing the probability of spurious mapping (orphans generally map much more ambiguously than properly paired reads). Since you have the paired-end files, you should try to repair them (using something like BBMap's [re-pair tool](https://jgi.doe.gov/data-and-tools/software-tools/bbtools/bb-tools-user-guide/repair-guide/)) to get back properly-paired FASTQ files for analysis. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/793#issuecomment-1220164752:380,repair,repair,380,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/793#issuecomment-1220164752,4,['repair'],"['repair', 'repair-guide']"
Availability,Index Version Error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:14,Error,Error,14,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,Index error with Salmon v1.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/451:6,error,error,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/451,1,['error'],['error']
Availability,"Internal testing suggests that these errors are gone, but feel free to report back here (and reopen this) if you still encounter it.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-303617599:37,error,errors,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50#issuecomment-303617599,1,['error'],['errors']
Availability,"Is it possible to use alevin with cell barcodes that have constant regions within them (see example below)?. bbbbbbccccccccccccbbbbbbcccccccccccc bbbbbb. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/654:516,down,downloaded,516,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/654,1,['down'],['downloaded']
Availability,"Is there a different binary somewhere perhaps? . I a downloading: . https://github.com/COMBINE-lab/salmon/releases/download/v0.8.2/Salmon-0.8.2_macOS_10.12.tar.gz. And get this: . Salmon-0.8.2_macOS_10.12.tar.gz; 100%[=====================================================>] 2.64M ; 326KB/s in 6.6s . 2017-04-18 09:43:33 (409 KB/s) - 'Salmon-0.8.2_macOS_10.12.tar.gz' saved; [2766997/2766997] . MacBook-Air:salmon jjv5$ tar zxf Salmon-0.8.2_macOS_10.12.tar.gz . MacBook-Air:salmon jjv5$ cd Salmon-0.8.2_macOX_10.12/bin/ . MacBook-Air:bin jjv5$ ./salmon -h . salmon(43548,0x7fffdc0c23c0) malloc: *** malloc_zone_unregister() failed; for 0x7fffdc0b8000 . Salmon v0.8.2 . Usage: salmon -h|--help or . salmon -v|--version or . salmon -c|--cite or . salmon [--no-version-check] <COMMAND> [-h | options] . Commands: . cite Show salmon citation information . index Create a salmon index . quant Quantify a sample . swim Perform super-secret operation . MacBook-Air:bin jjv5$ sw_vers . ProductName: Mac OS X . ProductVersion: 10.12.4 . BuildVersion: 16E195. On 2017-04-18 09:33, Rob Patro wrote:. > Hi @jjv5 [1], ; > ; > This error should be fixed. The binary works for me without error (or that strange jemalloc warning) on OS X 10.12.4. The relevant library should be statically linked in, so I doubt it's a path problem. You could also try the conda build [2] to see if that works for you. ; > ; > --; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub [3], or mute the thread [4].; . Links:; ------; [1] https://github.com/jjv5; [2] https://anaconda.org/bioconda/salmon; [3]; https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294845429; [4]; https://github.com/notifications/unsubscribe-auth/AA45u06Kawg81nafcz0GBVcZICdu85iqks5rxLuSgaJpZM4Ktuq4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294849229:53,down,downloading,53,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-294849229,4,"['down', 'error']","['download', 'downloading', 'error']"
Availability,"Is there a way to compile Salmon to a 32-bit architecture by any chance? I ask because I'd like to have single-cell tutorials on sandbox.bio v2 that use Salmon. But to power the platform, I'm running a 32-bit/i686 Debian OS in the browser 😬. When I try to compile it in a [i386/debian:bookworm-20230904-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/872:378,error,error,378,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872,1,['error'],['error']
Availability,Is there a way to produce the transcript level matrix output?. ```; salmon alevin -l ISR -1 /share/illumina/slims_view/cpdfjgh/Un_DTDB267/Project_XCJZ_10XSC0087/JZ_KO_S26_L002_R1_001.fastq.gz -2 /share/illumina/slims_view/cpdfjgh/Un_DTDB267/Project_XCJZ_10XSC0087/JZ_KO_S26_L002_R2_001.fastq.gz --chromium -i /share/biocore/keith/2020-A/scripts/reference_sources/salmon/GRCm38.salmon_decoys -p 4 -o /share/biocore/projects/Zhang_J_UCD/mouse_sc_2020/salmon/salmon_output --dumpMtx; Version Info: This is the most recent version of salmon. Transcript to Gene Map File not provided; Exiting Now./salmon.counts.sh: line 39: 8882 Segmentation fault salmon alevin -l ISR -1 /share/illumina/slims_view/cpdfjgh/Un_DTDB267/Project_XCJZ_10XSC0087/JZ_KO_S26_L002_R1_001.fastq.gz -2 /share/illumina/slims_view/cpdfjgh/Un_DTDB267/Project_XCJZ_10XSC0087/JZ_KO_S26_L002_R2_001.fastq.gz --chromium -i /share/biocore/keith/2020-A/scripts/reference_sources/salmon/GRCm38.salmon_decoys -p 4 -o /share/biocore/projects/Zhang_J_UCD/mouse_sc_2020/salmon/salmon_output --dumpMtx; 0; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/588:638,fault,fault,638,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/588,1,['fault'],['fault']
Availability,"Is this a user error or a programming error?. FreeBSD 12.0-RELEASE FreeBSD 12.0-RELEASE r341666 GENERIC amd64 ; 8G memory, 2T disc.; Salmon installed as Linux binary. The command I issued was; salmon quant -i salmonIndexMouse -l IU -1 SRR1818187_2.fastq.gz -2 SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant; nuc11.2 wayne@dideoxy2:~/rnaseq > sh salmonQuant.sh; Version Info: This is the most recent version of salmon. [ 0.14.1 ]. ......; It was going well, until:; ....; [2019-08-17 11:51:58.943] [stderrLog] [info] There were 134,473,138 set bits in the bit array; [2019-08-17 11:51:58.995] [stderrLog] [info] Computing transcript lengths; [2019-08-17 11:51:58.995] [stderrLog] [info] Waiting to finish loading hash. [2019-08-17 11:52:03.223] [stderrLog] [info] Done loading index; [2019-08-17 11:52:03.223] [jointLog] [info] done; [2019-08-17 11:52:03.223] [jointLog] [info] Index contained 106,434 targets; Segmentation fault (core dumped)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/419:15,error,error,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419,3,"['error', 'fault']","['error', 'fault']"
Availability,Issue with error message that doesn't always appear,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:11,error,error,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,1,['error'],['error']
Availability,"Issue with salmon for bulk RNA-seq. The following code was run to invoke salmon:; ```; docker run --rm -v /labs/Resources/mmulatta/MMUL_10:/mnt/indexdir/ resources/salmon salmon index -t /mnt/indexdir/gentrome.fa -d /mnt/indexdir/decoys.txt -p 8 -i /mnt/indexdir/index.salmon; ```; however, everytime I run it, I get the following error: ; Exception : [Error: The index version file /labs/khatrilab/Resources/mmulatta/MMUL_10/index.salmon/versionInfo.json doesn’t seem to exist. Please try re-building the salmon index.] . when in fact, the file exists. the gentrome.fa and decoys.txt files were created by following this tutorial (clearly changing the genome to mmulatta); https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ . Why is salmon not finding the index file that's clearly present in the given folder path?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/559:331,error,error,331,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/559,2,"['Error', 'error']","['Error', 'error']"
Availability,"It depends what type of ""replicates"" these are. If these are biological replicates, then they should _definitely_ be run separately. Biological replicates contain crucial information about the variability of expression that can be expected in a given condition, and all downstream differential expression tools will use this information. If these are ""technical"" replicates, then there should be little harm in quantifying them together (of course, then one has a 2 condition experiment with only 1 biological replicate per-condition ... which is a big problem if one wishes to analyze e.g. differential expression).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/190#issuecomment-400080695:270,down,downstream,270,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/190#issuecomment-400080695,1,['down'],['downstream']
Availability,"It is, if you provide a list of CB to use through command line flag --whitelist. But again I think it's a circular problem, if you know the list of CB to use, you might have already figures out the frequency distribution of each CB by parsing the fastq. Either by using --dumpFeatures or externally may be through awk. One other option is to use --keepCBfraction it takes a number in (0, 1] , which basically tells Alevin to use X fraction of CB from the total observed. The caveat there is to figure out a decent value of X as the CB frequency distribution is a long tailed distribution and if say you provide 1 then Alevin will quantify each and every observed CB and slow down the full pipeline.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490833213:675,down,down,675,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490833213,1,['down'],['down']
Availability,"It looks like it's having trouble parsing this folder name ""salmon-1.2.1-h2072146_0 2/"", what if you put it in quotes?. ```; export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:""/Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0 2/lib""; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/517#issuecomment-623118024:187,Down,Downloads,187,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517#issuecomment-623118024,1,['Down'],['Downloads']
Availability,"It looks like you are issuing . `$cmake .` . rather than . `$cmake ..`. when trying to perform the cmake step. If you could build from source, that would be great. However, I was suggesting you try downloading [this](; https://github.com/COMBINE-lab/salmon/releases/download/v0.11.1/salmon-0.11.1-linux_x86_64.tar.gz) pre-compiled linux binary and running that.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436938:198,down,downloading,198,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409436938,2,['down'],"['download', 'downloading']"
Availability,"It may be a bad alloc error. Do you have a machine with a bit more ram to try it on? Also, you could try installing through bioconda to see if it may be an issue with the precompiled binary (e.g. librar compatibility).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/419#issuecomment-522261180:22,error,error,22,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419#issuecomment-522261180,1,['error'],['error']
Availability,"It seems FreeBSD prefers to use Docker under an emulator -- I did not try that.; I installed a ubuntu on VirtualBox. There I was able to run salmon index and salmon quant in a conda environment. Same Segmentation Fault crash.; I also get the same crashes if I use only the first 54K reads of the 23.5M in the files. So I do not ; think it is an issue of computer memory size.; Maybe virtual Ubuntu is not the same as hardware Ubuntu. Can you please try the fastq files that I tried, and see if they don't crash for you on Ubuntu 19.04?; If they do not crash for you, I will build a hardware Ubuntu box so I can use your salmon suite.; As you probably know, you can find these mouse brain RNA-seq data at; https://www.ncbi.nlm.nih.gov/sra/?term=SRR1818187. I just noticed that you have posted decoys, thank you.; I indexed one, with your recommended command, and I got many many many warnings; (I could not figure out how to count them) such as; -------------------------------------------------------------; [2019-08-21 13:19:31.122] [jointLog] [warning] Entry with header [ENSMUST00000103739.3], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2019-08-21 13:19:31.178] [jointLog] [warning] Entry with header [ENSMUST00000200713.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2019-08-21 13:19:31.201] [jointLog] [warning] Entry with header [ENSMUST00000191703.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2019-08-21 13:19:31.344] [jointLog] [warning] Entry with header [ENSMUST00000192089.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); -------------------------------------- ; Is that expected for the gentome.fa ?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/419#issuecomment-524416706:213,Fault,Fault,213,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419#issuecomment-524416706,1,['Fault'],['Fault']
Availability,It seems to be working now with lab-generated data. Can't seem to recreate the issue. So will close the issue until we find more data that returns the same error. Thanks!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/337#issuecomment-466424466:156,error,error,156,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337#issuecomment-466424466,1,['error'],['error']
Availability,It will be good to have this feature to automatically infer the most likely library type by downsampling. Waiting for this feature to be implemented!!!,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/36#issuecomment-186365104:92,down,downsampling,92,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/36#issuecomment-186365104,1,['down'],['downsampling']
Availability,"It's now available in latest stable release, closing the issue but feel free to reopen if you have any issues.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/416#issuecomment-548614903:9,avail,available,9,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/416#issuecomment-548614903,2,['avail'],['available']
Availability,"It's possible that `Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz` was corrupted during your FTP download, since there's no error correction aside from TCP checksums. You might want to check your file just to make sure:. ```shell; $ md5 Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz ; MD5 (Caenorhabditis_elegans.WBcel235.cdna.all.fa.gz) = 3979cd3a2d5fe408b6261ae5b1d0c4de; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376924236:98,down,download,98,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210#issuecomment-376924236,2,"['down', 'error']","['download', 'error']"
Availability,"It's possible this is [related to the other issue](https://github.com/COMBINE-lab/salmon/issues/321), since I'm also seeing:. ```; 2018-11-28 18:01:19,745 i-05ef169a0611966c7 data_refinery_workers.processors.utils ERROR [pipeline_applied: SALMON] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/HOMO_SAPIENS/long }; ### [ mates1 ] => { /home/user/data_store/processor_job_405995/SRR2963482_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_405995/SRR2963482_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_405995/SRR2963482_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_405995/SRR2963482_output/logs; [2018-11-28 18:01:15.711] [jointLog] [info] parsing read library format; [2018-11-28 18:01:15.711] [jointLog] [info] There is 1 library.; [2018-11-28 18:01:15.761] [stderrLog] [info] Loading Suffix Array; [2018-11-28 18:01:15.761] [jointLog] [info] Loading Quasi index; [2018-11-28 18:01:15.761] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 1176099240 bytes from input stream! Read 872415224]; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442548280:214,ERROR,ERROR,214,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442548280,1,['ERROR'],['ERROR']
Availability,"It's still not working. If I type ./bin/salmon I get:. salmon(68460,0x7fffdb32f3c0) malloc: **\* malloc_zone_unregister() failed for 0x7fffdb325000; version : 0.7.1. So maybe it's working okay but it's still printing the error message.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259472964:221,error,error,221,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259472964,1,['error'],['error']
Availability,"It's still only a hypothesis that moving to a tarball would fix my issue. I noticed that once I hacked around this one error by using `unzip` instead, it seems to be working. Still, I think using a `tarball` rather than `zip` file is good style anyway.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193939385:119,error,error,119,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-193939385,1,['error'],['error']
Availability,"I’ve noticed the same thing, and have been hard-masking any repetitive sequences in my pipeline (which I’ve been late to open-source and should be available soon): http://mattshirley.com/uploads/2017/11/2017-11-01_Genome_Informatics.pdf",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/217#issuecomment-385393689:48,mask,masking,48,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/217#issuecomment-385393689,2,"['avail', 'mask']","['available', 'masking']"
Availability,"Jumping on this thread. I received similar Seg faults with conda install on OSX. I tried the binary you posted, but receive this error when I try to execute. dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Users/dnb14/Documents/salmon_0.11.4-pre_OSX/./bin/salmon; Reason: image not found; Trace/BPT trap: 5",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421407796:47,fault,faults,47,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295#issuecomment-421407796,2,"['error', 'fault']","['error', 'faults']"
Availability,"Just a bit more information:. I installed through conda salmon=0.11.3 and executed command on two different fastq files. The first one was on a single lane of the data and the second was on a concatenated file across 4 lanes. I managed to run the single lane file but got a seg dump error for the ""big""er file. Both times it seems to output the correct files. . Single lane:; ```; salmon alevin -l ISR -1 hgmm_100_S1_L001_001.fastq.1.gz -2 hgmm_100_S1_L001_001.fastq.2.gz --chromium -i geneset.dir/geneset_coding_exons.salmon.index/ -o salmon.dir/ --tgMap transcript2geneMap.tsv --dumpCsvCounts; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of Salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to salmon.dir/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { hgmm_100_S1_L001_001.fastq.1.gz }; ### [ mates2 ] => { hgmm_100_S1_L001_001.fastq.2.gz }; ### [ chromium ] => { }; ### [ index ] => { geneset.dir/geneset_coding_exons.salmon.index/ }; ### [ output ] => { salmon.dir/ }; ### [ tgMap ] => { transcript2geneMap.tsv }; ### [ dumpCsvCounts ] => { }. [2019-01-29 09:54:57.898] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-29 09:54:57.916] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 0 Million barcodes. [2019-01-29 09:54:59.693] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 09:54:59.693] [alevinLog] [info] # Barcodes Used: 902561 / 912145.; [2019-01-29 09:55:04.490] [alevinLog] [info] Knee found left boundary at 391 ; [2019-01-29 09:55:04.817] [alevinLog] [info] Gauss Corrected Boundary at 99 ; [2019-01-29 09:55:04.81",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/337#issuecomment-458481722:283,error,error,283,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337#issuecomment-458481722,3,"['avail', 'error']","['available', 'error']"
Availability,"Just a heads up, issue #266 has been added and the solution is currently available in the source build from the develop branch. We will include this to master with the next planned release of Salmon v0.11.3. Thanks again for the useful feedbacks and comments.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-412352411:73,avail,available,73,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253#issuecomment-412352411,2,['avail'],['available']
Availability,"LIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-02-10 12:57:59.774] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-02-10 12:57:59.774] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; ...; [etc.]. **Desktop**. - OS: Debian Linux; - Version: Linux elegans 5.6.0-1-amd64 #1 SMP Debian 5.6.7-1 (2020-04-29) x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bullseye/sid; Release: unstable; Codename: sid. **Additional context**. This is my first run with BD Rhapsody data (and our own single cell data, for that matter). We're currently using SevenBridges for generating gene count tables, but I don't like the black-box nature of that service. I'm much more comfortable when I know what's going on under the hood, and can tweak things when I notice oddness.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/628:3744,avail,available,3744,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628,1,['avail'],['available']
Availability,Large number of errors about non-existent positions in the reads,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/289:16,error,errors,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289,1,['error'],['errors']
Availability,"Looks like --no-version-check does the job of avoiding this warning, however, make it is better to just make a command for version check instead of forcing users to do --no-version-check all the time to silence this error?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-415572366:216,error,error,216,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/277#issuecomment-415572366,1,['error'],['error']
Availability,"Looks like I have some sort of conflict going on:. UnsatisfiableError: The following specifications were found to be in conflict:; - libboost -> libcxx >=4.0.1 -> clangdev ==5.0.0 -> llvmdev ==5.0.0; - libcxx 4.0.0* -> clangdev ==4.0.0 -> llvmdev ==4.0.0; Use ""conda info <package>"" to see the dependencies for each package. [https://sites.google.com/site/ummslogos/_/rsrc/1489610858836/home/apple-icon-76x76.png]. Javier E. Irazoqui, PhD; Associate Professor; Department of Microbiology and Physiological Systems; UMass Medical School. 368 Plantation Street; Albert Sherman Center; Room AS8.1053; Worcester, MA 01605. (774) 455-3797; Skype: javierirazoqui. Confidentiality Notice:; This e-mail message, including any attachments, is for the sole use of the intended recipient(s) and may contain confidential, proprietary and privileged information. Any unauthorized review, use, disclosure or distribution is prohibited. If you are not the intended recipient, please contact the sender immediately and destroy or permanently delete all copies of the original message. On Feb 11, 2018, at 11:01 PM, Rob Patro <notifications@github.com<mailto:notifications@github.com>> wrote:. I can't seem to reproduce this locally (OSX 10.13.1). However, what happens if you try:. > conda install salmon=0.9.1. do you see this version as available? Does it try to install it?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364824034>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AiohHaDPT6VtnW3toOd9kEKLLo2Zjvvcks5tT7e0gaJpZM4SAonB>.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997:1323,avail,available,1323,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194#issuecomment-364941997,1,['avail'],['available']
Availability,"MI count **but** I had to bring that part into the discussion as it was mentioned that you wanted to compare different deduplication strategies. I think your suggestion makes sense and mostly aligns with the definition being used by 10x [here](https://kb.10xgenomics.com/hc/en-us/articles/115003646912-How-is-sequencing-saturation-calculated-). Although note they have changed the definition with the new version of the software. Anyhow, the *short answer* to the question of how can we generate that in Alevin environment is -- by post processing the dumpFeatures output of the Alevin run. _long answer_: The difference lies in the term deduplication and the strategy used to perform it. Basically the fundamental unit for deduplication in 10x as mentioned in the link above is a tuple of `(valid cell-barcode, valid UMI, gene) `, while that's not exactly true for us. We can certainly generate it but it does not aligns with the theory of Alevin's deduplication Algorithm. Having said that, I also like your idea of using:; > the gene quantifications from (de)duplicated UMIs, gene quantifications from unique UMIs, using them to have an idea of the amount/ratio of redundant information. However, the above definition reflect more of the duplication rate (at least in terms of the definition defined in *Alevin* manuscript [here](https://www.biorxiv.org/content/early/2018/06/01/335000)) than sequence saturation. **NOTE** the quoted definition was actually the 10x definition of sequence saturation too before it was changed, at least in my understanding. If you need the deduplication rate of each cell you can get that by using `--dumpFeature` flag in the Alevin run and look for file `featureDump.txt`. There will be a dump of multiple features w/ each CB but the second (starting from 0) column of the file gives you the duplication rate of each CB. Hope that helps, I totally understand your suggestion and would like to include @rob-p into this too if he has more comments/insights on this.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414784626:1344,redundant,redundant,1344,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414784626,1,['redundant'],['redundant']
Availability,Maybe SLURM is killing your job because of too less memory allocation and the error message is just really wired?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-415887826:78,error,error,78,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-415887826,1,['error'],['error']
Availability,"Maybe it is a little off-topic, but here is the code for the v3 sample that ran without generating error messages:. ```; ID=5k_pbmc_v3. R1a=../Reads/5k_pbmc_v3_S1_L001_R1_001.fastq.gz; R1b=../Reads/5k_pbmc_v3_S1_L002_R1_001.fastq.gz; R1c=../Reads/5k_pbmc_v3_S1_L003_R1_001.fastq.gz; R1d=../Reads/5k_pbmc_v3_S1_L004_R1_001.fastq.gz. R2a=../Reads/5k_pbmc_v3_S1_L001_R2_001.fastq.gz; R2b=../Reads/5k_pbmc_v3_S1_L002_R2_001.fastq.gz; R2c=../Reads/5k_pbmc_v3_S1_L003_R2_001.fastq.gz; R2d=../Reads/5k_pbmc_v3_S1_L004_R2_001.fastq.gz. TYPE=10xV3; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=../../Ref_Generation/SARS_COV_2-hg38_RefSeq_2column.txt; REF=../../Ref_Generation/SARS_COV_2-hg38_salmon; CBWL=/net/isi-dcnl/ifs/user_data/Seq/Chromium_data/3M-february-2018.txt. ../../Ref_Generation/salmon-1.5.1_linux_x86_64/bin/salmon alevin -l ISR --chromium -1 $R1a $R1b $R1c $R1d -2 $R2a $R2b $R2c $R2d -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. That v3 white list is even **larger** than the v2 white list:. ```; cwarden$ wc -l /net/isi-dcnl/ifs/user_data/Seq/Chromium_data/3M-february-2018.txt; 6794880 /net/isi-dcnl/ifs/user_data/Seq/Chromium_data/3M-february-2018.txt; ```. So, that is part of why I was confused. However, before I start running the analysis with the shorter set of barcodes unique for this sample, here are the commands that I believe you were asking about. ```; cwarden$ wc -l ../CellRanger/5309-CT-2/outs/raw_feature_bc_matrix/barcodes.tsv; 737280 ../CellRanger/5309-CT-2/outs/raw_feature_bc_matrix/barcodes.tsv; cwarden$ wc -l ../CellRanger/5309-CT-2/outs/filtered_feature_bc_matrix/barcodes.tsv; 9974 ../CellRanger/5309-CT-2/outs/filtered_feature_bc_matrix/barcodes.tsv; ```. I would prefer to have an option where I could potentially conclude the cell count is different than provided by CellRanger. . However, I will at least check to confirm this solves the problem with the error message that I am seei",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-879347665:99,error,error,99,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-879347665,2,"['down', 'error']","['download', 'error']"
Availability,Maybe move the download stuff into an `install_deps.sh` script.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/11#issuecomment-132487629:15,down,download,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11#issuecomment-132487629,1,['down'],['download']
Availability,"MinCPUsNode=1 MinMemoryCPU=100000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Command=(null); WorkDir=/mnt/galaxy/tmp/job_working_directory/000/994; ```. - `Galaxy stderr`; ```; Fatal error: Exit code 139 (); ...; /mnt/galaxy/tmp/job_working_directory/000/994/tool_script.sh: line 50: 7495 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --ma 2 --mp 4 --go 5 --ge 3 --minScoreFraction 0.65 --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --consensusSlack 0 --vbPrior 0.001 --sigDigits 3; ```. - `syslog`; ```; Aug 27 20:14:23 ip-172-31-16-139 kernel: [ 2134.447133] traps: salmon[7495] general protection ip:7ff9ce320dca sp:7ffd6e497020 error:0 in libtbb.so.2[7ff9ce2fe000+37000]; ```. **`salmon 0.11.2 run with: NativeSpecification --ntasks=1 --nodes=1 --mem-per-cpu=100000`**; - `scontrol show job 99`; ```; JobId=99 Name=g995_salmon_refinery_stemcellcommons_org; UserId=galaxy(1001) GroupId=users(100); Priority=4294901662 Account=(null) QOS=(null); JobState=COMPLETED Reason=None Dependency=(null); Requeue=1 Restarts=0 BatchFlag=1 ExitCode=0:0; RunTime=00:07:36 TimeLimit=UNLIMITED TimeMin=N/A; SubmitTime=2018-08-27T20:20:26 EligibleTime=2018-08-27T20:20:26; StartTime=2018-08-27T20:20:26 EndTime=2018-08-27T20:28:02; PreemptTime=None SuspendTime=None SecsPreSuspend=0; Partition=main AllocNode:Sid=ip-172-31-24-127:7975; ReqNodeList=(null) ExcNodeList=(null); NodeList=w21; BatchHost=w21; NumNodes=1 NumCPUs=1 CPUs/Task=1 ReqS:C:T=*:*:*; MinCPUsNode=1 MinMemoryNode=100000M MinTmpDiskNode=0; Features=(null) Gres=(null) Reservation=(null); Shared=OK Contiguous=0 Licenses=(null) Network=(null); Comma",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238:3857,error,error,3857,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271#issuecomment-416364238,1,['error'],['error']
Availability,"Modified the CMakeLists.txt file to use dynamic libraries unconditionally, edited that section down to:. `set (Boost_USE_STATIC_LIBS OFF); `; Changed the CMakeLists.txt to try everything I could think of and then finally force the issue:. ```; set(Boost_ADDITIONAL_VERSIONS ""1.57"" ""1.57.0"" ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62"" ""1.63"" ""1.64"" ""1.65"" ""1.66""); find_package(Boost 1.57 COMPONENTS iostreams filesystem system thread timer chrono program_options); message(""Boost_FOUND 1.57 = ${Boost_FOUND}""); find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND 1.57.0 = ${Boost_FOUND}""); set(Boost_FOUND ""1""); message(""Boost_FOUND FORCED = ${Boost_FOUND}""); include(ExternalProject); ```; This emits:; ```. -- Could NOT find Boost; Boost_FOUND 1.57 = 0; -- Could NOT find Boost; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND 1.57.0 = 0; Boost_FOUND FORCED = 1; BOOST INCLUDE DIR = /usr/include/boost157; BOOST INCLUDE DIRS = /usr/include/boost157; BOOST LIB DIR = /usr/lib64; BOOST LIBRARIES = ; ```; That at least allowed cmake to complete when it was run with:. `nice scl enable devtoolset-4 '~/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt' >try_cmake.log 2>&1 &; `. Then tried to build it. ```; cd ..; nice scl enable devtoolset-4 'make' >build_2018_06_13d.log 2>&1 &. ```. It failed at this command because of missing boost symbols in a link operation, my reading is that the command does not include anything to link boost libraries. So telling cmake where the libraries are, where the include files are, and that boost was found was not sufficient. There must be some other set of symbols which need to be defined. `/opt/rh/devtoolset-4/root/usr/bin/c++ -pthread -ftree-ve",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719:95,down,down,95,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397025719,1,['down'],['down']
Availability,"Moving to Quantify. [2019-06-06 19:24:55.716] [alevinLog] [info] parsing read library format; [2019-06-06 19:24:55.716] [jointLog] [info] There is 1 library.; [2019-06-06 19:24:55.889] [jointLog] [info] Loading Quasi index; [2019-06-06 19:24:55.889] [jointLog] [info] Loading 32-bit quasi index; [2019-06-06 19:24:55.890] [stderrLog] [info] Loading Suffix Array ; [2019-06-06 19:24:56.791] [stderrLog] [info] Loading Transcript Info ; [2019-06-06 19:24:57.025] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-06 19:24:57.061] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-06 19:24:57.084] [stderrLog] [info] Computing transcript lengths; [2019-06-06 19:24:57.084] [stderrLog] [info] Waiting to finish loading hash; [2019-06-06 19:25:06.552] [jointLog] [info] done; [2019-06-06 19:25:06.552] [jointLog] [info] Index contained 136,011 targets; [2019-06-06 19:25:06.552] [stderrLog] [info] Done loading index; [2019-06-06 19:25:06.728] [alevinLog] [error] Barcode not found in frequency table; ```. Salmon Quant log is this. ```; [2019-06-06 19:23:29.519] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-06-06 19:23:29.519] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-06-06 19:23:29.520] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-06-06 19:23:29.520] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-06-06 19:23:29.520] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-06-06 19:24:55.716] [jointLog] [info] There is 1 library.; [2019-06-06 19:24:55.889] [jointLog] [info] Loading Quasi index; [2019-06-06 19:24:55.889] [join",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369#issuecomment-499592790:2082,error,error,2082,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369#issuecomment-499592790,1,['error'],['error']
Availability,"My first attempt at building salmon failed during what appears to be the tbblib build step. I'm going to continue by building tbb on my own and starting over, but wanted to post notes here. Steps:. ```; $ uname -a; Linux jorvisvm-lx 2.6.18-371.1.2.el5 #1 SMP Mon Oct 7 16:34:35 EDT 2013 x86_64 x86_64 x86_64 GNU/Linux. $ pwd; /tmp/salmon-0.6.1-pre. $ mkdir build && cd build. ## set up environment:; export PATH=/usr/local/packages/gcc-5.3.0/bin:$PATH. $ cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=/usr/local/packages/salmon-v0.6.1-pre ../; $ make; ```. [build.failure.txt](https://github.com/COMBINE-lab/salmon/files/189095/build.failure.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/51:566,failure,failure,566,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51,2,['failure'],['failure']
Availability,"My preference would be to throw a warning if any reads are shorter than the; kmer length and throw an error if all are. So if any reads are less then; k-mer length report ""Warning: x% of reads were found to be less than k used; to build index. Consider rebuilding index with smaller k. Minimum read size; found was [min read size]"" and then halt execution if x% is 100%. Would; that sound reasonable?. Thanks,. Kieran. On 8 February 2016 at 14:25, Rob Patro notifications@github.com wrote:. > Hi @kieranrcampbell https://github.com/kieranrcampbell,; > ; > Indeed, such reads will be un-mappable. The only tricky question here is; > at which point we should (1) do nothing (2) issue a warning (3) issue an; > error. Since the reads may not all be of the same size (perhaps the user; > has quality-trimmed the reads first and not opted to discard the short; > ones), it's possible we may see some reads too short to consider, but; > others would not be. We could choose arbitrary cutoffs (warning if greater; > than 1,000 such reads and an error if greater than 1,000,000), but this; > will, of course, depend on how large the input data set is. Anyway, I agree; > that we should notify the user of this and will be happy to add it; do you; > have any suggestions on the default behavior?; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181394180.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181396844:102,error,error,102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/41#issuecomment-181396844,3,['error'],['error']
Availability,"Nevermind, I figured it out! It seems this boils down to specifying the number of cores you request (if using HPC). I'm super new to this so I hope this was helpful!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/643#issuecomment-2113100892:49,down,down,49,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643#issuecomment-2113100892,1,['down'],['down']
Availability,No counts Reported although Salmon shows no errors,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/143:44,error,errors,44,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/143,1,['error'],['errors']
Availability,No error model errors when using --ont option,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/701:3,error,error,3,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701,2,['error'],"['error', 'errors']"
Availability,No error so far! Thanks a bunch. I'll let you know if I get any more errors,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259488873:3,error,error,3,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259488873,2,['error'],"['error', 'errors']"
Availability,"No, it's fine. I understand the error, it doesn't affect any of my workflow, and I can easily compensate for it.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/806#issuecomment-1294029352:32,error,error,32,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/806#issuecomment-1294029352,1,['error'],['error']
Availability,"Non Issue, user error",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/554:16,error,error,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/554,1,['error'],['error']
Availability,"Not a problem @roryk , yes in my understanding of v3 things directly effecting Alevin is just the Umi length increment. Other noticeable changes downstream of Alevin I have observed and seen some comments from @LTLA would be:; * Read length changes from 98 to 91; * The output format of cellranger has changed, [this](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/output/matrices) might give full overview.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443237933:145,down,downstream,145,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324#issuecomment-443237933,1,['down'],['downstream']
Availability,"Note that I do (now) have `cereal` installed, so there is no need for `salmon` to download and build it. It would be nice if this were an option to use the system-provided `cereal` library.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-127342739:82,down,download,82,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10#issuecomment-127342739,1,['down'],['download']
Availability,"OK --- I have an example where I can reproduce, and it does indeed seem to only occur with 64-bit indices. I will try and track this down ASAP, I'm almost certain it has to do with cereal though. While I look into this, I've also filed https://github.com/USCiLab/cereal/issues/386.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287348908:133,down,down,133,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287348908,1,['down'],['down']
Availability,"OK --- I think I fixed it; can you re-download the v0.6.0 binary and see if the segfault goes away for you? I think it was the result of failing to give a particular class a default constructor --- a certain variable was being initialized properly on my newer compiler, but that was not the case on the older compiler on the VM where I build the binary. ~~If this resolves the issue for you, I'll probably bump to v0.6.1 just in case anyone tries to build from the source tarball on an older compiler.~~ (I already moved the v0.6.0 tag to point to the new commit and updated the binaries. Hopefully nobody fell through the cracks with the old source tarball, but this doesn't seem like something worth bumping a release for --- assuming my minor change fixes the issue for you as well).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168364366:38,down,download,38,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34#issuecomment-168364366,1,['down'],['download']
Availability,"OS: ubuntu 16.04; Salmon was installed using conda. Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /work/yu_liu/resource/salmon_gencodev28_index/ }; ### [ libType ] => { U }; ### [ unmatedReads ] => { /work/yu_liu/NEPC_david/data_source/Output.Fastqs/HS_1-1_S1_R1_001.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { /scratch/yu_liu/HS_1-1_quant }; Logs will be written to /scratch/yu_liu/HS_1-1_quant/logs; [2018-07-13 20:04:48.086] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-13 20:04:48.086] [jointLog] [info] parsing read library format; [2018-07-13 20:04:48.086] [jointLog] [info] There is 1 library.; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/251:851,failure,failure,851,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251,1,['failure'],['failure']
Availability,"O_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; warning: File ""/u/user/local/lib64/libstdc++.so.6.0.21-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /u/user/local/lib64/libstdc++.so.6.0.21-gdb.py; line to your configuration file ""/u/user/.gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/u/user/.gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 14274)]; Version Info: ### A newer version of Salmon is available. ####; [Thread 0x7fff7e0f4700 (LWP 14274) exited]; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 14275)]; Logs will be written to pbmc4k/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 14276)]; [New Thread 0x7ffe7b56f700 (LWP 14277)]; [New Thread 0x7ffdfa6ed700 (LWP 14278)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 8 }; ### [ output ] => { pbmc4k/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { /u/user/ref/cellranger/salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 13:37:41.409] [jointLog] [info] Fragment incompatibility prior below threshold.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:2806,avail,available,2806,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214,1,['avail'],['available']
Availability,"Ok, I figured it out :) — these two *decoy* references are (1) identical with each other and (2) collide with *another* decoy reference. Currently, the way we process decoys, we don't allow duplicate decoys (it makes even less sense to allow duplicate decoys than to allow duplicate transcripts). However, the reason indexing worked with `k=17` is not because of `k` but because of the `--keepDuplicates` flag. With that flag, these decoys get added. I think the right thing for us to do on our part is to remove duplicate *decoys* if they appear in the reference and the user has not passed `--keepDuplicates`. . However, for the time being, I think the best thing to do is simply to remove `AABR07022993.1` and `AABR07023006.1` from the `toplevel` file and from `decoys.txt`, since the sequence they contain is already represented in the decoy part of the index. This will represent a full and comprehensive SAF index. I'm pinging @k3yavi to see if he has any good idea about the easiest way to cull these duplicate refs from the input files.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/505#issuecomment-613480649:925,ping,pinging,925,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/505#issuecomment-613480649,2,['ping'],['pinging']
Availability,"Ok, I realized that the Segmentation fault was not caused by passing multiple bam files, but by including either the `--seqBias` or `--gcBias` arguments. . The following command generates the segmentation fault:. ```; salmon quant -t transcripts.fasta -g gene_annotations.gtf -l IU -p 8 -o quantitation -a Aligned.toTranscriptome.bam --seqBias --gcBias; ```. and returns the following output before exiting:. ```; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fasta }; # [ geneMap ] => { gene_annotations.gtf }; # [ libType ] => { IU }; # [ threads ] => { 8 }; # [ output ] => { quantitation }; # [ alignments ] => {Aligned.toTranscriptome.bam }; # [ seqBias ] => { }; # [ gcBias ] => { }; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; Logs will be written to quantitation/logs; numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Aligned.toTranscriptome.bam"", fasta = ""transcripts.fasta"" . . .WARNING: Transcript ENSMUST00000185127 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000180893 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000206884 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000181916 appears in the reference but did not appear in the BAM; WARNING: Transcript ENSMUST00000202657 appears in the reference but did not appear in the BAM; [truncated]. replaced 3 non-ACGT nucleotides with random nucleotides; done. processed 0 reads in current round; ```. follow by the segmentation fold. The same command without the `--seqBias --gcBias` arguments succeeds. Perhas bias correction is not supported (or even necessary) when quantifying from a bam file?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738122:37,fault,fault,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-261738122,2,['fault'],['fault']
Availability,"Ok, I think I tracked it down! I'd forgot to replace `int` with the generic `OffsetT` in one function. This led to the `int64_t` being interpreted as an `int32_t` and hence ... overflow. I'll fix this upstream and push a new salmon binary (by the end of the week). Luckily, this only affects mapping and not index building, so you can use the index you already have.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203700011:25,down,down,25,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203700011,1,['down'],['down']
Availability,"Ok, I've tracked down and fixed the bug. I'll be tagging a new release with the fix soon. I'll ping back here and close this issue when the new release is out.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287431196:17,down,down,17,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287431196,2,"['down', 'ping']","['down', 'ping']"
Availability,"Ok, SAM output of the mapping information is available in 0.7.2 :).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-243957318:45,avail,available,45,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/38#issuecomment-243957318,1,['avail'],['available']
Availability,"Ok, nothing about your hardware, as reported, above, raises any ideas. I'll keep looking at the code that executes between the end of VBEM and Gibbs. However, one thing we might try to narrow down the offending region is running salmon under `gdb` (I can do this as well, but it's not useful on my end yet since I can't get the hanging behavior). If you run salmon under `gdb` and then issue a `SIGINT` (i.e., press `ctrl+C`) when the hanging behavior occurs, this will return you to `gdb`. At that point, you can issue the backtrace command (`bt`) at the `gdb` prompt, and it will tell us where in the code the thread was at the point the process was interrupted. Hopefully, this can narrow things down to an offending function.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267140418:192,down,down,192,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267140418,2,['down'],['down']
Availability,"Ok, pushed to [bioconda](https://github.com/bioconda/bioconda-recipes/pull/17922/checks?check_run_id=248588035), should be available in a couple of hours. Once it's available I'll make the official release too on the github. It'd be great if you can quickly test the new release for the bug once it's available. Thanks again !",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/431#issuecomment-538581395:123,avail,available,123,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/431#issuecomment-538581395,3,['avail'],['available']
Availability,"Ok, so this mapping rate looks perfectly normal. Can you share some of these reads so I can see if I can reproduce the error on my end? Also, do you see this issue when / if you use the pre-compiled binary included on the GitHub release page (i.e. just to make sure the problem isn't specific to the bioconda executable)?. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409428971:119,error,error,119,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409428971,1,['error'],['error']
Availability,"Ok, thank you very much.; The problem I had was RAM availability. I enlarged it for 48 and it works.; However, to quantify I had another problem.; I use this command line and I increase to 56 RAM. srun ./salmon-1.5.2_linux_x86_64/bin/salmon quant -i salmon_index \; -l A \; -1 ERR3537668_1.fastq.gz \; -2 ERR3537668_2.fastq.gz \; -o transcripts_DecoyQuant \; --validateMappings \; --numBootstraps 100 \; --gcBias \; --seqBias\; -p 12. And I got this error message:; [2021-11-08 14:35:28.348] [jointLog] [info] Finished Bootstrapping; ERROR: Could not create the directory [""transcripts_quant""]. Please check; that. But actually, it was created.; I really don't understand the message error. Best wishes,; Luciana. On Fri, Nov 5, 2021 at 5:56 PM Rob Patro ***@***.***> wrote:. > Hi @lubios <https://github.com/lubios>,; >; > This suggests that the machine was not able to allocate enough memory to; > perform the requested operation. I would try the following things in order; > to see if they fix the issue. First, try quantifying without the; > decoy-aware index. This doesn't provide the benefits of the decoy sequence,; > but it will ensure that this is, in fact, the problem you are having. If; > that works, try building the decoy-aware index with the --sparse; > parameter. This will build the sparse index instead of the dense index,; > which is a bit smaller and may therefore fit in RAM on the machine where; > you are doing quantification.; >; > Best,; > Rob; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/717#issuecomment-962058307>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADRT5CUYGXBSY3UOX24RTYDUKQLETANCNFSM5HOIMSQQ>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/717#issuecomment-963995631:52,avail,availability,52,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/717#issuecomment-963995631,4,"['ERROR', 'avail', 'error']","['ERROR', 'availability', 'error']"
Availability,"Ok, that's interesting. I am certain this is the error, because I had a student compiling salmon on OS 10.12 come to my office yesterday and we were able to fix the issue with exactly the change I'm using here. I have one more idea (and one more shot before I try upgrading to 10.12). Could you try the binary attached below?. [Salmon-0.7.3-pre_OSX_10.11.tar.gz](https://github.com/COMBINE-lab/salmon/files/581546/Salmon-0.7.3-pre_OSX_10.11.tar.gz)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259488142:49,error,error,49,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103#issuecomment-259488142,1,['error'],['error']
Availability,"Ok, the missing transcripts (from the reference FASTA) were definitely *the* problem. I created a transcript fasta using the genome FASTA and GTF file that were fed to STAR. Specifically, I used the command:. ```; $ ./gffread -w all_transcripts.fa -g Homo_sapiens.GRCh38.dna.primary_assembly.fa Homo_sapiens.GRCh38.87.gtf; ```. this produced transcript fasta that led to no warnings (fasta sequences not present in BAM) or errors (BAM sequences not present in fasta). This also allowed quantification (with bias correction) to run to completion. @mikelove, can you validate that this fixes things on your end? If so, perhaps @tomsing1 could also validate that this is the same root cause of the issue for him? In that case, I think that the right thing for me to do is to merge in the change that yells very loudly and bails if we find BAM header entries not present in the transcriptome FASTA.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267507316:423,error,errors,423,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104#issuecomment-267507316,1,['error'],['errors']
Availability,"Ok, when I attempt the build the way you say above, I get the following error during CMake:. ```; -- fetch PUFFERFISH exit code 127; CMake Error at CMakeLists.txt:317 (message):; Could not fetch pufferfish source [fetchPufferfish.sh returned exit code; 127]. -- Configuring incomplete, errors occurred!; See also ""/salmon-1.10.0/build/CMakeFiles/CMakeOutput.log"".; ```. It seems `wget`, `curl` and `unzip` were missing, and I had to install them. After that, I was able to build and install. At that point, I was able to reproduce the issue! So, it seems to me the underlying problem is coming from one of the upstream dependencies (i.e. libraries being linked to). I will try see if I can find the offender. In general, we like to statically link salmon for exactly this reason. Outside of package systems with which I am familiar (e.g. conda), we don't have a lot of experience in specifying dependent package version constrains, which I believe to be at fault here.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1463973824:72,error,error,72,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835#issuecomment-1463973824,4,"['Error', 'error', 'fault']","['Error', 'error', 'errors', 'fault']"
Availability,Okay got it. And is there any prospect of dealing with frameshift errors in the barcode detection step? Or is that out of scope?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-988023540:66,error,errors,66,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-988023540,1,['error'],['errors']
Availability,"Oki, so I have updated a couple of things in the latest commit on the develop branch, which should make the things more streamlined. . * `maxNumBarcodes`: As you have initially used `maxNumBarcodes` which is by default set to 100k it means. by default alevin quantifies 100k CBs which includes both the low and high confidence CB count. You can change this number accordingly to set the universe of the top CB to quantify.; * `KeepCBFraction` : It defines what fraction of `maxNumBarcodes` to be used as the high confidence barcodes and should definitely generate the quants for. If set to 1 then everything is high confidence and the whitelisting cannot be performed. Thanks to this issue, alevin will not fail without error when there is no low confidence CB is found instead it checks if the number of low confidence CB is less than `lowRegionMinBarcodes` (default to 200), alevin will warn and not perform the whitelisting.; * `freqThreshold`: This is used to filter out most obvious cases to filter out CB with frequency less than set by the parameter (default to 10). Hope this help ! I am also testing on my end for any other potential bug. Please let me know if you get a chance to check the develop branch .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/379#issuecomment-503396823:720,error,error,720,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/379#issuecomment-503396823,1,['error'],['error']
Availability,"On Sun, Mar 07, 2021 at 09:55:59AM -0800, Rob Patro wrote:; > This seems to explain the source of the issue : https://twitter.com/dpryan79/status/1368116490801717251?s=19. It looks like it will be fixed upstream (hopefully soon). excellent, thanks for tracking that down! Hopefully this issue can serve; as google bait for others wondering how to deal with this error :)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/637#issuecomment-792324222:266,down,down,266,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/637#issuecomment-792324222,2,"['down', 'error']","['down', 'error']"
Availability,"On Sun, Nov 01, 2015 at 06:15:19AM -0800, Rob Patro wrote:. > I, too, would like to see the relative performance of the two libraries. The only challenge is in making the comparison apples-to-apples (i.e. enabling multi-threaded parsing in seqtk with minimal overhead ??? a concurrent queue is cheap, but not free). . Other points worth considering:; - there's a runtime overhead to constantly changing sequencing formats. Some; programs want split, others want interleaved. We've settled on interleaved; because it enables streaming, which is a major win (2-4x performance); and; also because having one file is better than having 2 or 4.; - the management overhead to keeping track of many files is less for experts,; but is pretty significant for beginners. Enabling multiple input formats ++. So I think it'd be great to have the basic functionality, identify where; there are performance problems, and then simply note them for future ;). I would like to enable -1 and -2 in khmer scripts, but for our usual use cases; (multiple sequencing files being normalized and/or partitioned and/or error; trimmed) the command line syntax is too confusing ATM.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225:1094,error,error,1094,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/29#issuecomment-152829225,2,['error'],['error']
Availability,"On a fresh conda install,. ```; conda create -n slm2 -y -c bioconda salmon; ```; yields a broken salmon:; ```; $ conda activate slm2; (slm2) ggg298-43@farm:~$ salmon; salmon: error while loading shared libraries: libboost_iostreams.so.1.60.0: cannot open shared object file: No such file or directory; ```. This seems to be because I'm missing conda-forge; this:. ```; conda create -n slm3 -y -c conda-forge -c bioconda salmon; conda activate slm3; salmon; ```; works fine!. Nothing needs to be done, and I will update as I debug, but I wanted to put this here for google bait.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/480:175,error,error,175,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/480,1,['error'],['error']
Availability,On robustness of quasi-mapping for metagenomics,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/196:3,robust,robustness,3,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/196,1,['robust'],['robustness']
Availability,"On the system I'm trying to install Salmon 0.4.2 on, downloading from `ftp://` is blocked for security reasons. Therefore, the automagic download the Jellyfish 2.1.3 source tarball fails. I tried adjusting the `CMakeLists.txt` files to use the latest Jellyfish 2.2.3 instead, but this leads to an issue with a Jellyfish include file not being found:. ```; checking whether we are using the GNU C compiler... In file included from /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc(17):; /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/include/merge_files.hpp(21): catastrophic error: cannot open source file ""jellyfish/err.hpp""; #include <jellyfish/err.hpp>; ^. compilation aborted for /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/11:53,down,downloading,53,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11,4,"['Error', 'down', 'error']","['Error', 'download', 'downloading', 'error']"
Availability,"One problem I often run Into is that the sequence quality of the reads are problematic so I would like to trim the files based on sequence quality before. When I do that, fx with [trimmomatic](http://www.usadellab.org/cms/?page=trimmomatic), the result is 4 fastq files. Two where the pairs of reads both survived and two where one mate of the pair did not survive. Would it be possible to enable the bias corrections when mapping both paired data (with -1 and -2) and the unpaired data (--unmatedReads). Currently when I try this I just get the following error ""Cannot combine distributions that live in a different space"".",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/150:556,error,error,556,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150,1,['error'],['error']
Availability,"One thing is that bioconda is not in your channels list, only conda forge. Though I don't think that's the ultimate source of this error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-1171217271:131,error,error,131,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-1171217271,1,['error'],['error']
Availability,Orphan recovery option in rare cases causes Salmon to quit abruptly without error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:7,recover,recovery,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,2,"['error', 'recover']","['error', 'recovery']"
Availability,Out of Range error for txp to gene Map due to Duplicate Transcript Names in the reference,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:13,error,error,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['error'],['error']
Availability,"P.S. @shalercr,. I also note that layering `--hitFilterPolicy BOTH` on top of the new version cuts down the time by another factor of 2 for me . ```; 2163.65user 12.72system 4:21.57elapsed 832%CPU (0avgtext+0avgdata 1221856maxresident)k; ```. and the number of mappings discarded alignments due to score comes down by another factor of ~6X. It might be worth seeing what you get with that option as well.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/537#issuecomment-645127364:99,down,down,99,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537#issuecomment-645127364,2,['down'],['down']
Availability,Performing download step for 'libtbb'; tbb-2017_U3.tgz: FAILED; sha256sum: WARNING: 1 of 1 computed checksum did NOT match; tbb-2017_U3.tgz did not match expected SHA256! Exiting.; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make: *** [all] Error 2; -----------------------------------------------------------; command used; cmake -DBOOST_INCLUDEDIR=/local/genome/packages/boost/1.57.0/include/ -DBOOST_LIBRARYDIR=/local/genome/packages/boost/1.57.0/lib/ -DCMAKE_INSTALL_PREFIX=/local/genome/packages/salmon/0.8.2. ------------------------------------------------------------------------; boost/1.57.0 ; gcc/4.9.4,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/153:11,down,download,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/153,5,"['Error', 'down']","['Error', 'download']"
Availability,"Ping @k3yavi here. One thing to try @umutcakir would be to see if you get a similar mapping rate outputting a RAD file for processing with `alevin-fry`. For example if you ran:. ```; salmon alevin -l ISR \; -1 ""Single_S1_L001_R1_001.fastq.gz"" \; -2 ""Single_S1_L001_R2_001.fastq.gz"" \; --chromiumV3 \; --sketch \; -i $my_index \; -p 48 \; -o outputfolder \; ```. what happens to the mapping rate then? Also, as long as you are careful to pass the files in the same relative order, you can directly pass multiple input read files to the `salmon alevin` command as a _space separated_ list; you don't have to concatenate them manually. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/814#issuecomment-1336423789:0,Ping,Ping,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814#issuecomment-1336423789,1,['Ping'],['Ping']
Availability,Pinging @Gaura here — any idea what might be causing the inability to properly process the barcodes?. @cliftonlewis — would you be able to share a sampling of the reads for us to examine and help debug with?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/813#issuecomment-1330832918:0,Ping,Pinging,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813#issuecomment-1330832918,1,['Ping'],['Pinging']
Availability,"Pinging @k3yavi / @DongzeHE here in case they have an idea of what would be used for this protocol. If we know the fragment geometry, I imagine we could just use the custom geometry flag.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/878#issuecomment-1753070571:0,Ping,Pinging,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/878#issuecomment-1753070571,1,['Ping'],['Pinging']
Availability,Pinging @k3yavi here again and moving this over to a discussion where convo might better take place. This now lives [here](https://github.com/COMBINE-lab/salmon/discussions/780).,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/757#issuecomment-1138604971:0,Ping,Pinging,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/757#issuecomment-1138604971,1,['Ping'],['Pinging']
Availability,"Pinging @mikelove, who is certainly the person to give the best answer here. One clear difference to note though is that TPM is a length-normalized measure, while CPM is not. This alone means they will exhibit nontrivial differences.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/812#issuecomment-1323774035:0,Ping,Pinging,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/812#issuecomment-1323774035,1,['Ping'],['Pinging']
Availability,Please make gencode SA files available,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/904:29,avail,available,29,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/904,1,['avail'],['available']
Availability,"Presumably in part because of the conda-forge packages, if working from a relatively clean miniconda install:. conda install r-essential; followed by; conda install salmon. causes R to fail to start, throwing the error:; ""/home/timp/miniconda3/lib/R/bin/exec/R: symbol lookup error: /home/timp/miniconda3/lib/R/bin/exec/../../lib/../../libreadline.so.6: undefined symbol: PC"". This seems to be a relatively known ncurses/readline linked bug (https://github.com/conda-forge/rpy2-feedstock/issues/1) - but it seems solved in normal channels. Not sure exactly why it's cropping up here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/147:213,error,error,213,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147,2,['error'],['error']
Availability,"Problem with ""[error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character."" Error",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/642:15,error,error,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642,2,"['Error', 'error']","['Error', 'error']"
Availability,Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:19,Error,Error,19,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['Error'],['Error']
Availability,"Ptr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: candidate expects 1 argument, 3 provided; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2086:92: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadSeq>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >*)’; else if (isSingleEnd) { processFunctor(i, singleParserPtr, sidx->quasiIndex32()); }; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: processRead",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:22289,error,error,22289,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"R17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of salmon was used? salmon (1.9.0); alevin-fry (0.8.0) ; * How was salmon installed (compiled, downloaded executable, through bioconda)? Conda install; * Which reference (e.g. transcriptome) was used? Drosophila melanogaster (BDGP6.32 (GCA_000001215.4)); ; **Desktop (please complete the following information):**; - OS: Ubuntu Linux. Thanks in advance for all your help regarding this!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/813:1845,error,error,1845,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813,2,"['down', 'error']","['downloaded', 'error']"
Availability,Random Segmentation Faults,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/295:20,Fault,Faults,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295,1,['Fault'],['Faults']
Availability,RapMap and JSON parsing error salmon 0.8.2,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/135:24,error,error,24,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135,1,['error'],['error']
Availability,RapidJSON Logs Error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/322:15,Error,Error,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322,1,['Error'],['Error']
Availability,"Right I've been checking it without the trailing character as well, I changed to leaving that out. . Oddly, my index doesn't have the decimals at all, just continuous ENSTxx, unlike the examples you and Rob provided. I redownloaded the new release, same result. No duplicate in my grep query, which would lead to getting the quant for both transcripts. Not being filtered by salmon as duplicates. I also downloaded the same version in Rob's example above, indexed with latest salmon, with the same result. At a loss right now. I don't know why this is.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429501783:404,down,downloaded,404,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/301#issuecomment-429501783,1,['down'],['downloaded']
Availability,"Right, in short `salmon index -t txome_fasta -i txome_index` should work and both the versions of salmon (v0.15 and v1.0) is available on bioconda, check [here](https://bioconda.github.io/recipes/salmon/README.html), you may wanna try [force](https://docs.conda.io/projects/conda/en/latest/commands/update.html) update of conda. I think the confusion is you are thinking of the concept of Selective Alignment as the same as aligning to transcriptome w/ decoys (can be genome or mashmap based). Although they are related methods but the concept of Selective Alignment predates the idea of decoy based alignment, checkout [this](https://dl.acm.org/citation.cfm?id=3233589) paper from our lab where we discuss how Selectively Aligning difficult reads to just the transcriptome itself can result in improved quantification estimates compared to quasi or pseduo alignment. To summarize: ; In version 1.0; A) SA: The mashmap and bedtools based pipeline which follows old SalmonTools based pipeline.; B) SAF: Inbuilt salmon pipeline to consume genome and follows this pipeline.; C) If you don't provide any decoys, salmon will do Selective Alignment just on the transcriptome. The Release notes you quoted just means you cannot disable this feature i.e. you cannot fall back to quasi-mapping (in quasi mapping there is no alignment of the reads at all). In version 0.15.0; You cannot provide decoys and the transcriptome based mapping performed in this version would be quasi-mapping i.e. no Alignment of reads. Hope it helps .",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/442#issuecomment-549195321:125,avail,available,125,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/442#issuecomment-549195321,1,['avail'],['available']
Availability,"Right, that might explain it. So first of all I indeed used the `--dumpFeature` option to get the `MappedUMI.txt`, sorry for that. I will check the file once again and rerun the analysis, which I did on my machine at home. It might be that the 17M I told from the top of my head is actually incorrect. Unfortunately, the 10x crashes with a memory error on our clusters (I tested 2 different machines), for which I will open a separate thread (I think I saw someone else reporting a similar issue; will look that up). Celseq2 runs fine. I will check the analysis and the `mappedUMI.txt` a.s.a.p. I fear this issue will soon be resolved where both of us have a memory problem to deal with ;-). Cheers,; Wout",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/361#issuecomment-490115088:347,error,error,347,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361#issuecomment-490115088,1,['error'],['error']
Availability,"Rob,. Brilliant - I forgot that I built the boost libraries from whatever version of gcc was on the standard distribution. I have included -DFETCH_BOOST=TRUE, do you know why I am receiving the following error regarding a missing when executing make?. [ 5%] Performing configure step for 'libboost'; Building Boost.Build engine with toolset gcc... tools/build/src/engine/bin.linuxx86_64/b2; Detecting Python version... 2.7; Detecting Python root... /usr; Unicode/ICU support for Boost.Regex?... not found.; Generating Boost.Build configuration in project-config.jam... Bootstrapping is done. To build, run:. ./b2. To adjust configuration, edit 'project-config.jam'.; Further information:. - Command line help:; ./b2 --help. - Getting started guide:; http://www.boost.org/more/getting_started/unix-variants.html. - Boost.Build documentation:; http://www.boost.org/build/doc/html/index.html. using gcc : : /opt/gcc-8.2.0/bin/g++ ); [ 6%] Performing build step for 'libboost'; opt.jam: No such file or directory; /opt/salmon/external/boost_1_66_0/tools/build/src/build/toolset.jam:43: in toolset.using; ERROR: rule ""opt.init"" unknown in module ""toolset"".; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:461: in process-explicit-toolset-requests; /opt/salmon/external/boost_1_66_0/tools/build/src/build-system.jam:527: in load; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/modules.jam:295: in import; /opt/salmon/external/boost_1_66_0/tools/build/src/kernel/bootstrap.jam:139: in boost-build; /opt/salmon/external/boost_1_66_0/boost-build.jam:17: in module scope; make[2]: *** [libboost-prefix/src/libboost-stamp/libboost-build] Error 1; make[1]: *** [CMakeFiles/libboost.dir/all] Error 2; make: *** [all] Error 2. Thanks for all your help!. Nate",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099:204,error,error,204,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309#issuecomment-436834099,6,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"Rob,. Thanks for the --no-version-check option, I did not see it. regarding issue (2). I have been able to process these files without any problem with other; tools.; I have the same problem with the 10x pbmc4k fastq files:. salmon --no-version-check alevin -p 10 -lISR -1; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz -2; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz -i; /path/to/salmonIndex -o alevin_output --tgMap tx2gene.tsv; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 19:20:57.848] [jointLog] [info] Fragment incompatibility; prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 19:20:57.867] [alevinLog] [info] Processing barcodes files; (if Present). processed 189 Million barcodes. Segmentation error (core dumped). Avi,. You are right, I did miss the --chromium option. However, I just tried; again with the above command with --chromium and I still get the; segmentation error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090:283,down,downloads,283,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410325090,6,"['down', 'error']","['downloads', 'error']"
Availability,"Rob,; Rob,. Thank you. It worked. I was able to make my index without error messages. Best wishes,; Rich",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031294:70,error,error,70,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215#issuecomment-382031294,1,['error'],['error']
Availability,SE=''; COND_INTERNAL_SHA256_TRUE=''; COND_LZMADEC_FALSE='#'; COND_LZMADEC_TRUE=''; COND_LZMAINFO_FALSE='#'; COND_LZMAINFO_TRUE=''; COND_LZMALINKS_FALSE='#'; COND_LZMALINKS_TRUE=''; COND_MAIN_DECODER_FALSE='#'; COND_MAIN_DECODER_TRUE=''; COND_MAIN_ENCODER_FALSE='#'; COND_MAIN_ENCODER_TRUE=''; COND_SCRIPTS_FALSE='#'; COND_SCRIPTS_TRUE=''; COND_SHARED_FALSE=''; COND_SHARED_TRUE=''; COND_SMALL_FALSE=''; COND_SMALL_TRUE='#'; COND_SYMVERS_FALSE=''; COND_SYMVERS_TRUE='#'; COND_THREADS_FALSE=''; COND_THREADS_TRUE=''; COND_W32_FALSE=''; COND_W32_TRUE='#'; COND_XZDEC_FALSE='#'; COND_XZDEC_TRUE=''; COND_XZ_FALSE='#'; COND_XZ_TRUE=''; CPP=''; CPPFLAGS=''; CYGPATH_W='echo'; DEFS=''; DEPDIR='.deps'; DLLTOOL=''; DSYMUTIL=''; DUMPBIN=''; ECHO_C='\c'; ECHO_N=''; ECHO_T=''; EGREP=''; EXEEXT=''; FGREP=''; GETOPT_H=''; GETTEXT_MACRO_VERSION=''; GMSGFMT=''; GMSGFMT_015=''; GREP=''; HAVE_VISIBILITY=''; INSTALL_DATA='${INSTALL} -m 644'; INSTALL_PROGRAM='${INSTALL}'; INSTALL_SCRIPT='${INSTALL}'; INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'; INTLLIBS=''; INTL_MACOSX_LIBS=''; LD=''; LDFLAGS=''; LIBICONV=''; LIBINTL=''; LIBOBJS=''; LIBS=''; LIBTOOL=''; LIPO=''; LN_EXEEXT='$(EXEEXT)'; LN_S='ln -s'; LTLIBICONV=''; LTLIBINTL=''; LTLIBOBJS=''; LT_SYS_LIBRARY_PATH=''; MAKEINFO='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing makeinfo'; MANIFEST_TOOL=''; MKDIR_P='build-aux/install-sh -c -d'; MSGFMT=''; MSGFMT_015=''; MSGMERGE=''; NM=''; NMEDIT=''; OBJDUMP=''; OBJEXT=''; OTOOL64=''; OTOOL=''; PACKAGE='xz'; PACKAGE_BUGREPORT='lasse.collin@tukaani.org'; PACKAGE_NAME='XZ Utils'; PACKAGE_STRING='XZ Utils 5.2.2'; PACKAGE_TARNAME='xz'; PACKAGE_URL='http://tukaani.org/xz/'; PACKAGE_VERSION='5.2.2'; PATH_SEPARATOR=':'; POSIX_SHELL='/bin/sh'; POSUB=''; PREFERABLY_POSIX_SHELL='/bin/sh'; PTHREAD_CC=''; PTHREAD_CFLAGS=''; PTHREAD_LIBS=''; RANLIB=''; RC=''; SED=''; SET_MAKE=''; SHELL='/bin/sh'; STRIP=''; USE_NLS=''; VERSION='5.2.2'; XGETTEXT=''; XGETTEXT_015=''; XGETTEXT_EXT,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:13425,Down,Downloads,13425,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Down'],['Downloads']
Availability,"Salmon 0.9.1. ```; 2018-11-28 17:07:26,833 i-0656458112d739fa6 data_refinery_workers.processors.utils ERROR [failure_reason: Shell call to salmon failed because: ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/HOMO_SAPIENS/long }; ### [ mates1 ] => { /home/user/data_store/processor_job_408895/SRR4051017_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_408895/SRR4051017_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_408895/SRR4051017_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_408895/SRR4051017_output/logs; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Is this a ""working"" sample that just fails because of a problem with the logger?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/322:102,ERROR,ERROR,102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322,2,"['ERROR', 'failure']","['ERROR', 'failure']"
Availability,Salmon 1.10.3 build failure,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:20,failure,failure,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['failure'],['failure']
Availability,Salmon Binary for Osx while Bioconda is down,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/260:40,down,down,40,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260,1,['down'],['down']
Availability,Salmon Quant Error: Failed to Read Bytes From Input Stream! Read XXX,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/321:13,Error,Error,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321,1,['Error'],['Error']
Availability,Salmon alevin errors out when cell barcode length is > 31 base pairs,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/943:14,error,errors,14,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/943,1,['error'],['errors']
Availability,Salmon also depends on `libz` when compiling `bwa`.; https://gist.github.com/anonymous/a50569adddca1b8605f7#file-02-make-L118-L120. ```; /usr/bin/gcc-4.8 -c -g -Wall -Wno-unused-function -O2 -DHAVE_PTHREAD -DUSE_MALLOC_WRAPPERS utils.c -o utils.o; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193959265:269,error,error,269,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193959265,1,['error'],['error']
Availability,Salmon error message: salmon quant was invoked improperly,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/209:7,error,error,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209,1,['error'],['error']
Availability,Salmon indexing hangs or throws segmentation fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/829:45,fault,fault,45,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/829,1,['fault'],['fault']
Availability,Salmon installation error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/551:20,error,error,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551,1,['error'],['error']
Availability,"Salmon is version 0.9.1. This is happening for lots of samples, the error message is always `Exception : [Failed to read 879238456 bytes from input stream! Read 851443704]` regardless of the fastq files that are provided. . Nothing else too special is going on. It doesn't seem to have this problem with other indexes. Can you try to load and map again with 0.9.1?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442569984:68,error,error,68,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321#issuecomment-442569984,1,['error'],['error']
Availability,Salmon quant error in --ont mode (Bus error (core dumped),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/898:13,error,error,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898,2,['error'],['error']
Availability,Salmon quant with --recoverOrphans fails without warning,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:20,recover,recoverOrphans,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,1,['recover'],['recoverOrphans']
Availability,Salmon v0.10.0: Error in function boost::math::digamma<double>(double): numeric overflow],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229:16,Error,Error,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229,1,['Error'],['Error']
Availability,Salmon v0.9.0 index FastxParser error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/176:32,error,error,32,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/176,1,['error'],['error']
Availability,"Salmon version: 0.13.1 (installed via pre-compiled binary). I used salmon to quantify some samples and wanted to use the `quantmerge` command to produce a combined table. However, the merged table I got as output only contained 17 lines (of 52228 in the quant.genes.sf files). I was able to identify that the problem was related somehow to the ""Name"" column itself, although I didn't find any obvious pattern for failure. For example, if I rename all the genes to simply ""1"", ""2"", ... and then `quantmerge`, I get a properly combined table with all samples/genes. Looking back at the ""original"" data with the gene names, I find that the truncated merged table consistently/always truncates immediately *after* processing some gene names. For example, the 16th gene name in my ""quant.genes.sf"" table happens to be ""Erdr1"". If this line is moved to the top of that file, then the merged table will truncate at 2 (the header counting for one of those, obviously). Unfortunately, it's not just ""Erdr1"". If that line is moved to the end of the file, or deleted entirely, there is another failure at gene ""Gm28674"", which happens to be the 19th gene. And so on for a very large number of names (I gave up after removing ~30 one at a time). I've now tested with a few different samples and with a number of randomly selected subsets of the original quant files and the behavior is consistent. I can't figure out what the pattern is, but ""Erdr1"", ""Gm28674"", and all the other genes I discovered with my ad-hoc process above, always cause `quantmerge` to truncate the output.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/356:413,failure,failure,413,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/356,2,['failure'],['failure']
Availability,Salmon-0.9.1_linux_x86_64 binary: Exec format error (MacOS 10.12),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/192:46,error,error,46,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192,1,['error'],['error']
Availability,Salmon: rapidjson internal assertion failure: IsObject(),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/862:37,failure,failure,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862,1,['failure'],['failure']
Availability,Salom 0.9.1 gives errors when configuring and doesn't find installed libraries,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/181:18,error,errors,18,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181,1,['error'],['errors']
Availability,"Same error here, with a fresh (this morning) install of anaconda3-4.40 on Linux64-bit and a first-time install of salmon through bioconda. This may be premature / just plain incorrect, but [this post](https://github.com/ContinuumIO/anaconda-recipes/issues/56) mentioned issues with the default version of readline, so on a hunch I installed readline from conda-forge and then reinstalled salmon. The above errors disappear (still waiting on other errors).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-324627178:5,error,error,5,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147#issuecomment-324627178,3,['error'],"['error', 'errors']"
Availability,"Same issue on Alpine Linux (latest, 3.6). kthread.c:70:2: error: unknown type name 'int64_t'; int64_t index;; ^~~~~~~; kthread.c:78:2: error: unknown type name 'int64_t'; int64_t index;; ^~~~~~~ ; make[3]: *** [Makefile:24: kthread.o] Error 1",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343470922:58,error,error,58,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-343470922,3,"['Error', 'error']","['Error', 'error']"
Availability,Script Error on Tutorial's page (Getting start).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/546:7,Error,Error,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/546,1,['Error'],['Error']
Availability,"Seeing lots of these - any ideas? v0.9.1. ```; ERROR [processor_job: 399381] [pipeline_applied: SALMON] [no_retry: False] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/MUS_MUSCULUS/short }; ### [ mates1 ] => { /home/user/data_store/processor_job_399381/ERR1680104_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_399381/ERR1680104_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_399381/ERR1680104_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_399381/ERR1680104_output/logs; [2018-11-28 17:08:09.121] [jointLog] [info] parsing read library format; [2018-11-28 17:08:09.121] [jointLog] [info] There is 1 library.; [2018-11-28 17:08:09.165] [stderrLog] [info] Loading Suffix Array; [2018-11-28 17:08:09.165] [jointLog] [info] Loading Quasi index; [2018-11-28 17:08:09.165] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 879238456 bytes from input stream! Read 851443704]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.]: Processor job failed!; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/321:47,ERROR,ERROR,47,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321,1,['ERROR'],['ERROR']
Availability,Seg Fault in salmon quant,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:4,Fault,Fault,4,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['Fault'],['Fault']
Availability,Seg fault in prettyWriter,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/725:4,fault,fault,4,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/725,1,['fault'],['fault']
Availability,Segmentation fault (core dumped),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261,1,['fault'],['fault']
Availability,Segmentation fault (core dumped) in bulk mode,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['fault'],['fault']
Availability,Segmentation fault 11 with bioconda build,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,1,['fault'],['fault']
Availability,Segmentation fault in bioconda installation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/268:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268,1,['fault'],['fault']
Availability,Segmentation fault in bulk mode with .bam files,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['fault'],['fault']
Availability,Segmentation fault in salmon quant,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['fault'],['fault']
Availability,Segmentation fault on some data when using `--useFSPD`,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/64:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64,1,['fault'],['fault']
Availability,Segmentation fault when indexing,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/503:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/503,1,['fault'],['fault']
Availability,Segmentation fault when reporting results (0.6.0),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/34:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34,1,['fault'],['fault']
Availability,Segmentation fault with shipped example,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835,1,['fault'],['fault']
Availability,Silent failure while loading index,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/37:7,failure,failure,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37,1,['failure'],['failure']
Availability,Since I can't reproduce this locally? I'm going to close this until more information is available.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/730#issuecomment-1010446444:88,avail,available,88,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/730#issuecomment-1010446444,1,['avail'],['available']
Availability,"So I got the data and am trying to repro the issue now (thanks!). Quick question. I noticed in your example command you have `--libType ISF`. However, you have single-end reads, so the appropriate library type would be `SF` (i.e., they can't be ""inward"" facing reads, b/c there is no mate for each read). When I run your command as is, but replace `ISF` as `SF`, my run completes successfully, and I don't get any `errorminEQClassWeight` output. Could you let me know if this makes any difference for you (also, sorry that, apparently, we're not outputting a useful error message when one passes in a paired-end library type with single-end data). edit: Actually, it's even stranger. I noticed that in your command the library type comes *after* the reads to which it refers, but in this case, Salmon will not apply that library type to those reads (which explains why you're not getting a warning message). The restriction that the `--libType` flag comes before the reads it describes is buried in [the docs](http://salmon.readthedocs.io/en/latest/salmon.html#using-salmon), but I definitely need to make that clearer. Anyway, the point is that, in this case, Salmon should apply the ""default"" single-end library type (i.e., `U`) to your reads. So, presumably, that was what was happening when you saw the strange behavior during Gibbs sampling (and is also what was happening when my Gibbs sampling run completed successfully).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266927204:415,error,errorminEQClassWeight,415,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-266927204,4,['error'],"['error', 'errorminEQClassWeight']"
Availability,So no error/warning I guess ?; can you share a minimal bam from which we can replicate and work on solving the issue ?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/387#issuecomment-506399769:6,error,error,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387#issuecomment-506399769,1,['error'],['error']
Availability,"So the plot thickens, it seems like this is only happening for certain data. Unfortunately I cant share the data that creates the error because its commercially sensitive (I don't have permission, which is annoying) so I am looking for other data that will reproduce the issue. I have just ran a huge 10X PBMC dataset and it ran without any errors, so its unlikely due to any memory issue. Will let you know when I have data that can recreate this error",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/337#issuecomment-458998076:130,error,error,130,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337#issuecomment-458998076,3,['error'],"['error', 'errors']"
Availability,Some error was reported by the same command,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/950:5,error,error,5,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/950,1,['error'],['error']
Availability,"Sorry for not following up.. I'm an HPC sysadmin and the user probably found another way to do it's work. Yes, mixing compilers is probably not an error proof technique. Thanks anyway!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43#issuecomment-285603015:147,error,error,147,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43#issuecomment-285603015,1,['error'],['error']
Availability,"Sorry if I wasn't clear. Also, maybe I am trying to bluntly transpose a; metric that comes from alignment-based quantification. Yes, sequencing; saturation relies on UMI, using the transcript reads associated to the UMIs. I am not sure to understand the difference between resolving ambiguity; or collision at the transcript level, with the evaluation of sequencing; saturation in mind. To be more precise, I am not sure to see how it; could be a problem in this computation. But I am probably missing an; important point?. The idea of quasi-mapping as I understand is identifying the transcripts; from which the reads could have originated, generating a quantification.; For the sequencing saturation, we don't really need to know where the; read align on the transcript sequence, we just want to know that the; read comes from one single transcript, a unique UMI. So if I am right,; it is possible to summarize this quantification at the level of UMIs,; and have an idea of the duplication level of the transcripts that have; been tagged with UMIs. From what I understand, this is where alevin; perform the deduplication computation to have a correct idea of the; transcript amount when UMI are added, prior amplifications resulting; from the RT/PCR steps. So I was imagining it could be possible to take the gene quantifications; from (de)duplicated UMIs, gene quantifications from unique UMIs, using; them to have an idea of the amount/ratio of redundant information in the; sequencing data, producing a metric very similar to the seq sat from the; 10x definition.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414331344:1449,redundant,redundant,1449,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/267#issuecomment-414331344,2,['redundant'],['redundant']
Availability,"Sorry if I wasn't clear. I did try with and without the --chromium; option, with the same error. I just have try the exact command you provided (including the --chromium; flag), with option in the same order. The command log is then:; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ mates1 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => {; /path/to/downloads/10xPBMC/pbmc4k_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. Now it seems to work. I'll tell you if the whole alignment is; successfull when it will end. Note that when I use the --chromium flag earlier in the command, ie:. salmon --no-version-check --chromium alevin -p 10 -lISR -1 [...]. The log contains:; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ ] => { alevin }; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410331030:90,error,error,90,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410331030,6,"['down', 'error']","['downloads', 'error']"
Availability,"Sorry to add on previous issue but I am trying to run salmon quant using --gencode flag but it still outputs errors that header names in BAM file cannot be found in the input fasta. . gencode.M24.transcript.fa was indexed by minimap2 and reads were aligned using map-ont mode, using the unsorted BAM file ran the following command: . ```; salmon quant --noErrorModel --gencode -p 4 -t /home/callum/Genome_files/gencode.vM24.transcripts.fa -l U -a alignments/O1.bam -o counts/O1_salmon; ```. Example line from the error output. ; ```; [2021-06-04 13:48:14.728] [jointLog] [critical] Transcript ENSMUST00000078393.6|ENSMUSG00000062279.6|OTTMUSG00000071892.1|OTTMUST00000173863.1|Gm10237-201|Gm10237|336|processed_pseudogene| appeared in the BAM header, but was not in the provided FASTA file ; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/95#issuecomment-854355704:109,error,errors,109,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/95#issuecomment-854355704,2,['error'],"['error', 'errors']"
Availability,"Sorry,. > Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1_001.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497883:565,ERROR,ERROR,565,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497883,1,['ERROR'],['ERROR']
Availability,"Sounds good, just wanted to give you the heads up, as we are working on some other part of the salmon pipeline, currently I can't give you an ETA when would the new version of salmon be available. If For the time being the choice are either you can compile the develop branch of salmon or I can forward you a linux usable salmon binary.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/416#issuecomment-523090214:186,avail,available,186,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/416#issuecomment-523090214,2,['avail'],['available']
Availability,Space in fasta sequence causes quiet failure,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/22:37,failure,failure,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22,1,['failure'],['failure']
Availability,Strange the updated error message has @PG not @pg,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387498610:20,error,error,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387498610,1,['error'],['error']
Availability,"Strange! I should still be using Jellyfish 2.1.3 (https://github.com/COMBINE-lab/salmon/blob/master/CMakeLists.txt#L355). I'm not sure why it was fetching 2.2.0 for you. Anyway, I'm glad that this seems to resolve the error with the bias correction --- thanks for reporting back here. I'll probably roll this and a few other small changes into a v0.4.1 soon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110489862:218,error,error,218,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5#issuecomment-110489862,1,['error'],['error']
Availability,"Strangely enough - with the above error message of mine. when I go to the logs directory and look up salmon_quant.log, it has correct info (last line below); ```; [2020-04-22 19:45:18.487] [jointLog] [info] Finished Bootstrapping; ```. And the output directory has a `quant.sf` file and it has all the records I want -- however, salmon is exiting with the above error message",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/512#issuecomment-618027626:34,error,error,34,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512#issuecomment-618027626,2,['error'],['error']
Availability,"Strictly speaking, barcodes.tsv**.gz** files are provided. I was viewing the uncompressed file in Notepad++, so I think that number (from the line numbers on the left) should be correct. I will double-check the next time that I am on my work computer. I will test using the smaller number of barcodes. However, unlike the larger file, I think this would be different for every sample. If part of the reason that I wanted to run Alevin is that I wanted an independent quantification (which takes less time), then that may be a notable limitation. However, for whatever reason, this seems to only be an issue with the v2 sample (the v3 sample worked fine). So, I will test that, and I will at least confirm if I see the same error message or not.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-878693769:723,error,error,723,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-878693769,1,['error'],['error']
Availability,"Strictly speaking, if I use the barcodes.tsv (decompressed) files from CellRanger (for the _same sample_), I still get the same error message. I get the error message below, with or without ""-1"" at the end of the barcodes:. ```; [2021-07-12 15:55:48.717] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-12 15:55:48.717] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. If I **don't** use any white list, then I think that should be one possible resolution (mentioned before). However, in case others have a similar question, I have at least temporarily re-opened the ticket. This is the command that I am currently using:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=../../Ref_Generation/SARS_COV_2-hg38_RefSeq_2column.txt; REF=../../Ref_Generation/SARS_COV_2-hg38_salmon; CBWL=../CellRanger/5309-CT-2/outs/raw_feature_bc_matrix/barcodes.tsv. /path/to/salmon-1.5.1_linux_x86_64/bin/salmon alevin -l ISF --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. **Is there anything that you think I should change, if I wanted to confirm that I can run the analysis with some sort of white list?**",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-878688294:128,error,error,128,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-878688294,4,"['down', 'error']","['download', 'error']"
Availability,Subtract 2 to counter artificial increase in barcode length. Read1 length of 33 or 34 would result in error while being valid lengths.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/817:102,error,error,102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/817,1,['error'],['error']
Availability,Suggestions on --recoverOrphans,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/959:17,recover,recoverOrphans,17,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/959,1,['recover'],['recoverOrphans']
Availability,"Sure --- we'll just leave the issue open and when you have a chance we can dig in further. Once I can reproduce the issue, I can dig down to see the underlying cause.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393244558:133,down,down,133,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228#issuecomment-393244558,1,['down'],['down']
Availability,"Sure thing, thanks for your help. It's entirely possible the issue is user error, rather than something wrong with the bioconda build. I had to install and run in a py3 env, since our server defaults to py2. Not sure if that's related, but I've used successfully in the past one a server with py3 as the default.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409779737:75,error,error,75,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261#issuecomment-409779737,1,['error'],['error']
Availability,"Sure, thanks for letting me know you were able to install via bioconda. I'll try to make these build errors more informative.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/331#issuecomment-447963407:101,error,errors,101,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331#issuecomment-447963407,1,['error'],['errors']
Availability,"Sure, works for me. Is it possible to add an argument that indicates that the dependencies (like `xz`) should be provided by the host, and any missing dependencies are an error, rather than installing them automatically?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193944377:171,error,error,171,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45#issuecomment-193944377,1,['error'],['error']
Availability,"Sure; its rob.[lastname]@cs.stonybrook.edu. Sorry for the trouble you're encountering with the 64-bit index, but thanks for helping me track it down to fix!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203656485:144,down,down,144,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54#issuecomment-203656485,1,['down'],['down']
Availability,"TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB V",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:2592,down,downloaded,2592,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,1,['down'],['downloaded']
Availability,"Thank *you* for providing this software to the community.; BTW, it seems you're making an effort to support externally installed dependencies, for which I'm grateful. I did have to patch around a few bundled deps (e.g. libgff), which are downloaded unconditionally. Many package managers (e.g. FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc, ...) do not allow manual downloads by upstream build systems, for obvious security reasons. I'm hoping it will be possible to avoid all such downloads without patching in the future, by preinstalling and having them discovered by find_package(), as you're already doing for things like bzip2. This will make it easier to package salmon in many of the numerous package managers out there (and eliminate the need for you to install dependencies via cmake). Cheers!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699:238,down,downloaded,238,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/288#issuecomment-420352699,3,['down'],"['downloaded', 'downloads']"
Availability,"Thank @rob-p and @gmarcais, that clarifies it. There's only a handful of reads that seem to fall in this category.; Just a suggestion would it better to have just a one line summary on the amount of reads that are categorised as such and then make quite the error messages?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/701#issuecomment-1422213426:258,error,error,258,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701#issuecomment-1422213426,1,['error'],['error']
Availability,"Thank you @rached-97, for the incredibly thorough follow-up to the original issue. I agree that the work you put into not only reporting the issue thoroughly to begin with, but following up with your findings, will certainly help others who might encounter related issues in the future. Since salmon seems not to be at fault here, I'll close the issue. I do recommend taking this over to the bioconductor forums, where the community is _incredibly_ responsive; I imagine you'll have a resolution in no time. Thanks again for the excellent report and follow-up!. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/655#issuecomment-826117612:319,fault,fault,319,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/655#issuecomment-826117612,2,['fault'],['fault']
Availability,Thank you for the response. I suspect the same. mapping works fine normally but keeps giving me this error when I follow their protocol. They have this .R file that they say is bundled up with the index. Anyways I am not an expert in the field. Thank you for your quick response.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/833#issuecomment-1451389744:101,error,error,101,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833#issuecomment-1451389744,1,['error'],['error']
Availability,"Thank you for this wonderful pipeline. I have some human bulk RNAseq samples that were aligned in STAR against the genome with the soft-masked primary assembly (Homo_sapiens.GRCh38.dna_sm.primary_assembly.fa). . I want to run Salmon with the full genome decoy to compare, and would like to use the same reference files for consistency. Does Salmon (like STAR) ignore the lower case for these sequences? Or since its the decoy, does it make a big difference?. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/934:136,mask,masked,136,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/934,1,['mask'],['masked']
Availability,"Thank you guys. The new software did the trick and now I am getting 18 nt barcodes, however it appears that the mapping efficiency has gone down significantly. Previously it was about 8% of reads now it like 5.3e-5%. Any ideas where the issue might be?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/670#issuecomment-861099975:140,down,down,140,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/670#issuecomment-861099975,1,['down'],['down']
Availability,"Thank you! After unzipping and putting in my path and trying to run “salmon –version” I get the following error:. dyld: lazy symbol binding failed: Symbol not found: _os_unfair_lock_lock. Referenced from: /Users/douglasbarrows/Tools/salmon_0.11.4-pre_OSX/bin/./salmon (which was built for Mac OS X 10.13). Expected in: /usr/lib/libSystem.B.dylib. dyld: Symbol not found: _os_unfair_lock_lock. Referenced from: /Users/douglasbarrows/Tools/salmon_0.11.4-pre_OSX/bin/./salmon (which was built for Mac OS X 10.13). Expected in: /usr/lib/libSystem.B.dylib. Trace/BPT trap: 5. Is that something you have seen before?. From: Rob Patro <notifications@github.com>; Reply-To: COMBINE-lab/salmon <reply@reply.github.com>; Date: Tuesday, October 23, 2018 at 8:25 PM; To: COMBINE-lab/salmon <salmon@noreply.github.com>; Cc: dougbarrows <dbarrows@mail.rockefeller.edu>, Author <author@noreply.github.com>; Subject: Re: [COMBINE-lab/salmon] Segmentation fault 11 with bioconda build (#303). Thanks for reporting this. It seems there is an osx bioconda issue (likely related to their massive backend upgrade). Hopefully we can fix this upstream in the next release. I. The meantime, can you see if this<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_COMBINE-2Dlab_salmon_files_2383948_salmon-5F0.11.4-2Dpre-5FOSX.tar.gz&d=DwMFaQ&c=JeTkUgVztGMmhKYjxsy2rfoWYibK1YmxXez1G3oNStg&r=AcsC5BcigO3PFsA0uPOPf6vTyS2zaocuu4GaWSrIemY&m=wLNfpc7aJ_B1oE6XAqYsYKk5m7_TsLrkikeQql9eerg&s=40WTo4E4Odm5ZPLtYzGnDNBOb05l6L5woT7ke2vQ1L4&e=> OSX binary works for you?. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_COMBINE-2Dlab_salmon_issues_303-23issuecomment-2D432468434&d=DwMFaQ&c=JeTkUgVztGMmhKYjxsy2rfoWYibK1YmxXez1G3oNStg&r=AcsC5BcigO3PFsA0uPOPf6vTyS2zaocuu4GaWSrIemY&m=wLNfpc7aJ_B1oE6XAqYsYKk5m7_TsLrkikeQql9eerg&s=2d8a8eiQ0LuIlgyxoiTnsiwesaQ16X9sju0l7tT1WAw&e=>, or mute the thread<https://",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432469726:106,error,error,106,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303#issuecomment-432469726,2,"['error', 'fault']","['error', 'fault']"
Availability,"Thank you!. For a fix, I did: `echo $LD_LIBRARY_PATH`. ; this shows `salmonpath/1.3.0/lib:originalpath`; Doing ` export LD_LIBRARY_PATH=originalpath` fixed this in my environment",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/710#issuecomment-1165640786:31,echo,echo,31,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/710#issuecomment-1165640786,1,['echo'],['echo']
Availability,"Thanks @Gaura! Sounds promising. . Can you clarify what differences you saw between v1/v2 protocols? My understanding was that the only changes were slight differences in barcode positions within the barcode read, ie something that could be handled with different `bc-geometry`, but maybe that's all you meant in terms of differing implementations. Regarding the BC1 and how it could be two sequences for the same sample - this is confusing to explain in text format, but all comes down to the sequential nature of how the cells acquire barcodes in this protocol. We start with a 96-well plate, where each of the top 48 wells contain BOTH an oligo-dT barcode and random hexamer barcode. The samples then get added to each well. Biochemistry happens. Then you pool all the cells together, split them back out into 48 wells again, and each well gets its own BC2. Then repeat for BC3. . So a given transcript may get amplified via one of two amplification primers (oligo-dT or random hexamer), but after that, will get a single BC2 sequence and BC3 sequence added after that. In Fig 1A of the Rosenberg paper, it's as though there isn't _just_ an orange sequence carrying out reverse transcription, there are actually two different (known) sequences associated with different routes of amplification per cell. . The net effect is that a given cell can contain transcripts that have a sequence like this:; AACGTGAT-CTGTAGCC-ACACAGAA. or like this:; GATAGACA-CTGTAGCC-ACACAGAA. where maybe the first sequence was amplified by oligo-dT and the second was amplified via a random hexamer. Because they have the same BC2 and BC3 sequence, and the BC1 sequences match a known pairing, we know they come from the same cell and therefore the data should be merged. . Any lab running these experiments will have a table of known pairings (ie the two barcodes added to each of first 48 wells), so that they can be merged and treated as though they came from the same cell. This can either be handled upstream of sal",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-937918722:482,down,down,482,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-937918722,2,['down'],['down']
Availability,"Thanks @Gaura! This is helpful. I think I figured it out, and it was my fault indeed. Everything seems to be working as expected based on this info!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/774#issuecomment-1185098089:72,fault,fault,72,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/774#issuecomment-1185098089,1,['fault'],['fault']
Availability,"Thanks @Ryan-Zhu ,. A couple of thoughts.; To me the data seem a little noisy as a lot of CB/reads are thrown away due to ""knee"" thresholding.; Check https://github.com/COMBINE-lab/salmon/issues/362 if you wanna play with how to customize alevin for user-define whitelisting. Having said that this is how you can parse the data from alevin.; Alevin use 1277 CB after its knee thresholding + 638 low confidence Barcode for downstream whitelisting = total 1915 CBs.; If you check the warning in the log it says :. ```; [2019-06-12 15:07:08.152] [alevinLog] [warning] Skipped 313 barcodes due to No mapped read; ```; Basically it means out of 1915, 313 didn't had any read mapped to them, so alevin doesn't report them in the output matrix. Alevin reports 1915 - 313 = 1602 CBs both in `.mtx` and `quants_mat.gz` file. You can check the order of the CB in the `quants_mat_rows.txt` file, which has 1602 rows/CBs. If you don't provide alevin with external whitelist alevin tries to do post whitelisting of it's own. Basically out of the 1277 high confidence CBs alevin initially find out through knee it assigns 647 CBs as final whitelisted CB as found in the `whitelist.txt` file. If you wan't to subsample these CBs you have to extract the information from the `.mtx` or `quants_mat.gz` file. You can check a simple python parse of the `quants_mat.gz` file [here](https://github.com/k3yavi/vpolo/blob/master/vpolo/alevin/parser.py#L187-L230).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/374#issuecomment-501846672:422,down,downstream,422,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/374#issuecomment-501846672,2,['down'],['downstream']
Availability,"Thanks @Tj-Idowu,. So, indeed, it looks like this is the problem. The mapping is completing, but you seem to be encountering a segmentation fault at the end of the run (before the abundance estimation finishes). Could you tell me what OS and version you're using, and how you installed Salmon? My guess is a binary incompatibility somewhere. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400009534:140,fault,fault,140,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239#issuecomment-400009534,1,['fault'],['fault']
Availability,"Thanks @juugii for the detailed response and clarifying my doubts.; It surely is possible to lose some information when projecting the data on lower dimensional space since none of the methods, CCA and MNN, are lossless. I do see your point and would like to understand more about the depth normalization problem you are facing with different experiments. . I tried to search the algorithm used by cellranger to aggregate the counts and it looks like the following:; * As I was saying earlier aggregation step was happening downstream of count/quantification of the gene count matrix, at least in cellranger pipeline.; > When doing large studies involving multiple biological samples (or multiple libraries or replicates of the same sample), it is best to run cellranger count on each of the libraries individually, and then pool the results using cellranger aggr. * It looks like they have three different modes to normalize the libraries; > There are three normalization modes:; mapped: (default) Subsample reads from higher-depth libraries until they all have an equal number of confidently mapped reads per cell.; raw: Subsample reads from higher-depth libraries until they all have an equal number of total (i.e. raw, mapping-independent) reads per cell.; none: Do not normalize at all. * Although it's not clear, what do they mean by `equal number of confidently mapped reads per cell`, does it mean median reads per cell ? Like you tried to show in the above plot the distribution can be very uneven. But the part that troubles me more is once `count` information has been generated it has lost the read level information, since we have deduplicated them, then how do they use the read counts to normalize. Unless that is dumped too, not clear. Quoting your text from above:; > Alternatively, could a subsampling covariate be added to the probabilistic quantification model of alevin. I think we can definitely work on correcting the subsampling bias in the probabilistic model of Alevin but we",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433453155:524,down,downstream,524,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305#issuecomment-433453155,2,['down'],['downstream']
Availability,"Thanks @k3yavi , --keepCBfraction isn't in the docs, so I missed it. Unless it leads to completely unfeasible run times, --keepCBfraction 1 combined with downstream filtering may be the most robust way to handle things in my high throughput situation (as alluded to by @roryk ). Is there a way of combining this with a minimum UMI count per CB to remove just the most obvious junk and hopefully somewhat limit the impact on runtimes?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490843243:154,down,downstream,154,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490843243,2,"['down', 'robust']","['downstream', 'robust']"
Availability,"Thanks @mikelove . > we had some people using txi$counts alone and not using the countsFromAbundance argument. Based on the above, I assume that **_doing something like this is wrong_** as DESeqDataSetFromMatrix is being used after countsFromAbundance = ""no"". ```; txi = tximport(files, type=""salmon"", tx2gene=tx2gene,; countsFromAbundance = ""no""). dds <- DESeqDataSetFromMatrix (countData = txi$counts,; colData = coldata, ~ condition); ```. @rob-p and @mikelove -- While on this topic, how would you use salmon quant and DESeq2 for QuantSeq data (which would be 3' tagged RNA-seq)? Would you use `salmon quant without --noLengthCorrection` or would you use` salmon quant with ; --noLengthCorrection`. 1. call salmon quant as before (and **_do not use --noLengthCorrection_**) and then do as suggested/stated in these 2 links ; - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor and https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#3%E2%80%99_tagged_RNA-seq; - Do not manually pass the original gene-level counts to downstream methods without an offset. The only case where this would make sense is if there is no length bias to the counts, as happens in 3’ tagged RNA-seq data (see section below). The original gene-level counts are in txi$counts when tximport was run with countsFromAbundance=""no"". ; - If you have 3’ tagged RNA-seq data, then correcting the counts for gene length will induce a bias in your analysis, because the counts do not have length bias. Instead of using the default full-transcript-length pipeline, we recommend to use the original counts, e.g. txi$counts as a counts matrix , e.g. providing to DESeqDataSetFromMatrix",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/581#issuecomment-719946865:1124,down,downstream,1124,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581#issuecomment-719946865,1,['down'],['downstream']
Availability,"Thanks @mikelove . I believe tximeta can be used only for human/mouse? In my case, it is not human/mouse. @rob-p and @mikelove - Based on my reading of the salmon documentation, isn't it that the NumReads/TPM etc made available after lengthCorrection. Extending this, the NumReads in quant.sf corresponds to the estimated count value for each transcript and correlated by effective length. My idea is to therefore use the countsFromAbundance=“lengthScaledTPM” to compute counts that are on the same scale as original counts and not correlated with transcript length across samples. Given this - Is this below also valid (after salmon quant). ```; salmon_tx2gene_data = tximport(files, type=""salmon"", tx2gene=tx2gene,; countsFromAbundance = ""lengthScaledTPM""). # generate CSV for archival/use-for-other-purposes ; # then read in the csv and use with DESeq. write.csv(as.data.frame(salmon_tx2gene_data$counts),; file = ""lengthScaledTPM_tx2gene_counts.csv""). # other code for reading in csv, design_metadata etc. dds <- DESeqDataSetFromMatrix (countData = salmon_tx2gene_data$counts,; colData = coldata, ~ condition). ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/581#issuecomment-719784814:218,avail,available,218,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581#issuecomment-719784814,1,['avail'],['available']
Availability,"Thanks @molwizard,. We've added a more informative error message in 0.13.0. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/343#issuecomment-469843098:51,error,error,51,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/343#issuecomment-469843098,1,['error'],['error']
Availability,"Thanks @reganhayward. I'm pinging @hiraksarkar here as well as he can help us dig into this. I do think it will be really useful to have the bootstrap (in this case Gibbs) folders for the runs, so we can load that data up and see what the posterior traces look like for these transcripts. If you can throw that up somewhere, then we can grab it as well.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/600#issuecomment-756948080:26,ping,pinging,26,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/600#issuecomment-756948080,1,['ping'],['pinging']
Availability,"Thanks @rob-p and Thanks in advance @mikelove . The original question pertained to using salmon with say ILMN RNA-Seq followed by DGE with DESeq2. @rob-p - I will also use this opportunity to indulge myself on a related question (how to use salmon with QuantSeq and then downstream with DESeq2). I have asked many QuantSeq related questions on this GH forum and I am yet to find the correct recipe for using salmon with quantseq and downstream DGE; - https://github.com/COMBINE-lab/salmon/issues/449#issuecomment-565474848; - https://github.com/COMBINE-lab/salmon/issues/365#issuecomment-499732849; - and many others (do not want to get into a infinite loop here :) . @rob-p @mikelove - Here is my thought process (for salmon-QuantSeq-DESeq):; - I know salmon has the `--noLengthCorrection` feature and the help text says it is ""experimental"" for QuantSeq; - Probably, I should not use `--noLengthCorrection` feature when running salmon quant and just get the counts. ; - One might be wondeing why not to use `--noLengthCorrection` as it was introduced by @rob-p exclusively for QuantSeq -- that idea is based on what I see on [the tximport vignette for 3' tagged RNA-seq](https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#3%E2%80%99_tagged_RNA-seq) which has this to state; ```; If you have 3’ tagged RNA-seq data, then correcting the counts for gene length will induce a bias in your analysis, ; because the counts do not have length bias. Instead of using the default full-transcript-length pipeline, ; we recommend to use the original counts, e.g. txi$counts as a counts matrix, e.g. ; providing to DESeqDataSetFromMatrix or to the edgeR or limma functions ; without calculating an offset and without using countsFromAbundance.; ```. Let me know if you would approach the salmon-QuantSeq-DESeq puzzle differently. Thanks in advance.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/581#issuecomment-719150287:271,down,downstream,271,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581#issuecomment-719150287,2,['down'],['downstream']
Availability,"Thanks @rob-p for a quick and complete reply. I got your point :) Actually, I downloaded fastq files from ENA so I do not have access to BioAnalyzer results. From literature review it could be concluded that Alignment-free tools like Salmon or kallisto yield more accurate quantifications, that's why I went to apply salmon on my data (my aim is differential gene expression at the end). Now, my main issue is: without an accurate estimation of fragment length for running salmon, would it end up with less accurate quantification result? If yes, then it is more rational to me to use traditional methods such as featureCounts. Do you have any idea that sheds more light on this ambiguity.; Best,; Tima",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750925173:78,down,downloaded,78,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/127#issuecomment-750925173,1,['down'],['downloaded']
Availability,"Thanks @roryk and @k3yavi . The issue we have is that we're trying to run a pipeline in a fairly high-throughput manner to get a sensible 'enough' matrix without too much manual intervention. So I'm trying to avoid anything that requires an eyeballing step, accepting that the matrix we get will be less optimal than one you'd get from manual optimisation. Where possible, our curators are extracting the expected cell numbers from publications, so sometimes I have at least a general idea of where to look for an elbow/ feature. @roryk - have you used your alternate view on the data to automatically derive cutoffs? Does it work well?. @k3yavi:. As I say, first point is that this is for cases where I have a rough idea of the target cell number- we're generally working with pre-published data (though cell numbers per run are not always available). . From https://github.com/COMBINE-lab/salmon/issues/340 I'd inferred that --expectCells gives Alevin ballpark to look for a knee within, while --forceCells is a strict cuttoff. Is that correct? . That being the case, my thought was to try --expectCells first, and failing that --forceCells. The problem is that I need to parse the STDOUT/ERR to detect the boundary error from --expectCells, which is not a very robust way of doing things. If you returned informative error codes (anything but 1) on this and other errors, I could detect the error and implement the logic I describe.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490157428:841,avail,available,841,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490157428,6,"['avail', 'error', 'robust']","['available', 'error', 'errors', 'robust']"
Availability,"Thanks @roryk and @rob-p ; The transcript PB.40054.21 is in all of the files: The gff files from which I made Alin_neg_txp2gene.tsv, the gentrome.fasta. The gene is ""novelGene_36859"". All are unique.; It should be indexed, I have several samples and they all have this error with various transcripts/genes.; What about this error: `ERROR: Txp to Gene Map not found for 52191 transcripts`; The transcript numbers are 88793",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/540#issuecomment-648248120:269,error,error,269,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540#issuecomment-648248120,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Thanks @roryk for the code and @pinin4fjords for the suggestion.; That's correct, `--expectCells` and `--forceCells` flags are designed to use the way you described above. ; re: error codes, It's a good suggestion. Based on the timeline either we can make this into the next release of alevin or we can edit it in a different branch and then you can compile or I can give you a linux binary. Let us know what works for you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490161277:178,error,error,178,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490161277,1,['error'],['error']
Availability,"Thanks @tamuanand for the (as always) detailed and clear question! Since this directly involves `tximport` and `DESeq2` downstream, let me also ping @mikelove here.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/581#issuecomment-719143923:120,down,downstream,120,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581#issuecomment-719143923,4,"['down', 'ping']","['downstream', 'ping']"
Availability,"Thanks Matt for the response and fix, unfortunately the error persists;; Might need to re-align using a different pipeline?. > Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1_001.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497579:56,error,error,56,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222#issuecomment-387497579,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Thanks Nicolas,. I downloaded the files from this url and (unfortunately?) was unable to reproduce the segfault. I'd just like to check that we are working from the same source files and there wasn't e.g. a corruption during your download or some such. I have the following as the MD5 hash sums for the files input into the indexing. ```; $ md5sum GRCm38.primary_assembly.genome.fa.gz; 3bc591be24b77f710b6ba5d41022fc5a GRCm38.primary_assembly.genome.fa.gz; $ md5sum gencode.vM25.transcripts.fa.gz; a821c0dde39c48b9d2c4b48d36b0180c gencode.vM25.transcripts.fa.gz; $ md5sum decoys.txt; fdfb8e3ea371649a7ec2c39fcd8bb8f4 decoys.txt; $ md5sum gentrome.fa.gz; db7022ecc40483f105aedcdc4e113304 gentrome.fa.gz; ```. could you let me know if the signatures for your files are the same?. Thanks!; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/521#issuecomment-627671880:19,down,downloaded,19,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/521#issuecomment-627671880,2,['down'],"['download', 'downloaded']"
Availability,"Thanks Rob!; For both providing the binary download again, and pointing me to MultiQC (meanwhile got a informative QC report). :); Guido",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405540123:43,down,download,43,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252#issuecomment-405540123,1,['down'],['download']
Availability,"Thanks Rob. The sublib BC seems to be 6nt for a total of 30nt so good on that front. If @DongzeHE or @k3yavi know the chemistry already that would be great, if not I can try to figure it out by inspecting the reads. ; I'm using `alevin-fry` downstream but I thought this step (barcode extraction) had to happen via `salmon alevin`?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/874#issuecomment-1732630683:241,down,downstream,241,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/874#issuecomment-1732630683,1,['down'],['downstream']
Availability,"Thanks a lot @rob-p and @k3yavi .; I wanted your advise on something more intricate. Asking since you people are the pioneers in this aspect of problem solving.; I have to determine the expression of GFP and Transposon sequence in the transcriptome.; I read the material posted on the link https://salmon.readthedocs.io/en/latest/salmon.html.; It instructs this to be done in 2 different ways-; There are two options for generating a decoy-aware transcriptome:. The first is to compute a set of decoy sequences by mapping the annotated transcripts you wish to index against a hard-masked version of the organism’s genome. This can be done with e.g. MashMap2, and we provide some simple scripts to greatly simplify this whole process. Specifically, you can use the generateDecoyTranscriptome.sh script, whose instructions you can find in this README. The second is to use the entire genome of the organism as the decoy sequence. This can be done by concatenating the genome to the end of the transcriptome you want to index and populating the decoys.txt file with the chromosome names. Detailed instructions on how to prepare this type of decoy sequence is available here. This scheme provides a more comprehensive set of decoys, but, obviously, requires considerably more memory to build the index. I tried the 2nd approach. Combined the GFP,Transposon and the genome FASTA files, indexed it , constructed the decoy according to the given instructions given here https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/.; When I ran Salmon (version 1.2.1_linux_x86_64) it did not report anything in the quant files (I know that these samples have high GFP and Transposon expression in these samples). The 1st approach is giving me problems to the construction of the GTF file and then memory usage. The instructions say - generateDecoyTranscriptome.sh — Located in the scripts/ directory, this is a preprocessing script for creating augmented hybrid fasta file for salmon index. It cons",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/737#issuecomment-1022416973:581,mask,masked,581,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/737#issuecomment-1022416973,2,['mask'],['masked']
Availability,"Thanks for making these available! I'm looking through. Though it's not directly related to the `fetchRapMap.sh` script, I do find [this](https://gist.github.com/sjackman/6e15b7dfebaaad99b9476aa5ce269fda#file-cmakeerror-log-L47) disconcerting. Any idea what's up there?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367795756:24,avail,available,24,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181#issuecomment-367795756,1,['avail'],['available']
Availability,Thanks for pinging on this — I'll poke the model implementor (@gmarcais) via other channels and get back to you as soon as I can.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/701#issuecomment-1420973769:11,ping,pinging,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701#issuecomment-1420973769,1,['ping'],['pinging']
Availability,"Thanks for reporting this. Certainly, failure should be more apparent. Out of curiosity, is the failure in building the index? It looks like loading the index didn't work, so was the space character that caused the problem in your reference file?. --Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-146996488:38,failure,failure,38,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22#issuecomment-146996488,2,['failure'],['failure']
Availability,"Thanks for sharing the preprint. Is the SA method codebase available via github or via the combine lab site https://combine-lab.github.io/software/ . I know the preprint has supplementary material and code, but it would be valuable to have something like https://combine-lab.github.io/salmon/getting_started/ and/or https://salmon.readthedocs.io/en/latest/salmon.html",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/365#issuecomment-498953769:59,avail,available,59,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/365#issuecomment-498953769,1,['avail'],['available']
Availability,"Thanks for so much for tracking down that issue so quickly! These problems have plagued me for years with different tools. There always seems to be a library that does this. I'll try the patched version this weekend and let you know how it goes. Finally, thanks for pointing out the issue about process substitution issue. I usually have 4-12 fastq files per sample and was following the [Alevin documentation](http://salmon.readthedocs.io/en/latest/alevin.html), which had the gzipped example using process substitution.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395911670:32,down,down,32,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395911670,1,['down'],['down']
Availability,"Thanks for testing that out. In this case, I'll try an dig more deeply into why you're having issues compiling from source. In the mean time, I hope the pre-compiled binary will work for you. edit: I wonder if the error might be related to the fact that the build system things TBB was compiled with GCC 4.4? From the log:. > /usr/local/packages/intel-tbb.4.4.3.181/compilers_and_libraries_2016.2.181/linux/tbb/lib/intel64_lin/**gcc4.4**/libtbb.so.2",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201332198:214,error,error,214,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51#issuecomment-201332198,1,['error'],['error']
Availability,"Thanks for the awesome tool!. Just wanted to confirm what the intended usage is as, for e.g. [scPipe](https://github.com/LuyiTian/scPipe) uses all mitochondrial genes in `calculate_QC_metrics` (whether from nuclear or mitchondrial DNA). I am guessing that since the model for alevin is using the fraction of mitochondrial reads, the `--mrna` file should include only mtDNA (from mitochondrial genome) genes. It seems to be the case that nuclear mitochondrial genes are both up- and down-regulated with damage (**C**: *mtDNA*, *Mitochondria up*, *Mitochondria down* in figure below):. May also be a good idea to clarify in `salmon alevin --help`. ![image](https://user-images.githubusercontent.com/15719520/58443291-f3d08900-80a5-11e9-82ef-0c7debd7ac2a.png); [source](https://www.ncbi.nlm.nih.gov/pubmed/26887813)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/367:482,down,down-regulated,482,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/367,2,['down'],"['down', 'down-regulated']"
Availability,"Thanks for the detailed report @idinsmore1,. These are quite different versions of ensembl, and so changes in the underlying transcriptome can absolutely have an effect on estimated abundances. Specifically, as the newer releases of ensemble tend to annotate more and more isoforms, there are more potential explanations for the reads. Reads that may have been previously assigned to an isoform in the old annotation may better match to a new isoform in the new annotation, etc. This will affect the read assignment and TPM both to the isoform to which the reads were originally being assigned and the new isoform to which the reads are now being assigned. . One thing to look at would be to see how much things change at the gene level, where we'd expect mapping uncertainty to be much lower. Once there's an idea of the types of things that are changing, it will be possible to drill down a bit more to try and figure out exactly what's going on. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/653#issuecomment-823560566:886,down,down,886,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/653#issuecomment-823560566,1,['down'],['down']
Availability,"Thanks for the fast reply (and detailed explanation). The seg fault is produced regardless of the type (or lack thereof). In case the error below is somehow related to tbb: I haven't had it pre-installed, so the c- / make procedure 'took care of it'. Following output is generated by gdb:. ```Starting program: /usr/local/bin/salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; [New Thread 0x7ffff62b0700 (LWP 17488)]; Version Info: This is the most recent version of Salmon.; [Thread 0x7ffff62b0700 (LWP 17488) exited]. Thread 1 ""salmon"" received signal SIGSEGV, Segmentation fault.; __GI___libc_free (mem=0x7fff00000002) at malloc.c:2951; 2951	malloc.c: No such file or directory.; ``` ; and the backtrace:; ```; #0 __GI___libc_free (mem=0x7fff00000002) at malloc.c:2951; #1 0x00007ffff79b775d in operator delete[] (ptr=0x7fff00000002); at ../../src/tbbmalloc/proxy.cpp:256; #2 0x0000000000792272 in salmonIndex(int, char**) (); #3 0x000000000065baca in main (); ```. Edit: Similar things happen with conda installation, though the traceback details are slightly different:; `Temporary breakpoint 1 at 0x7ffff6cf2512: file malloc.c, line 2951. `",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404232467:62,fault,fault,62,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250#issuecomment-404232467,3,"['error', 'fault']","['error', 'fault']"
Availability,"Thanks for the feedback!. I tried playing with the vbPrior setting and observed that, as you noted, higher increases of the vbPrior tended to flatten out the read apportionment, such that as the vbPrior increased the two transcripts became increasingly similar in their final expression (presumably they would eventually hit 50/50). It's good to know how that settings affects my data, but this is not quite what I was hoping for... . Ideally, the short transcript would get nearly *all* of the reads, rather than splitting the reads 50/50 or, with the default settings, giving nearly all the reads to the longer transcript. I realized that, as a human, the reason the short transcript is obviously the dominant one is how the reads pileup in the alignment. There are hundreds of reads mapping to both transcripts, but NO reads map to the 5' of the long transcript. As I understand the selective alignment, the alignment scores are passed to the quantification step, but the *position* of the reads is not used downstream. In order to pass my human intuition along here, the software would need to pay attention to the coverage bias of the reads mapping to the transcripts and assign a penalty when two otherwise identical transcripts have a different coverage variance across the transcript. This sounds like what the --posBias flag should incorporate into the effective lengths, but it doesn't have much effect on these transcripts for me (FYI, I am getting a segfault when I run only --posBias in the current salmon version, but if I run all the models together like --gcBias --seqBias --posBias, it completes fine). . Also, my intuition for these transcripts is not really a coverage ""bias"" as much as the read depth absolutely plummeting at the 5' end of the long transcript. It would be neat if Salmon could detect these kinds of dramatic dropoffs and add a warning or something... even if not incorporating the information into the quants... it could even be a good QC step to identify large de",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/514#issuecomment-623043651:1011,down,downstream,1011,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514#issuecomment-623043651,2,['down'],['downstream']
Availability,"Thanks for the heads up. I gave it a test this evening and wow, it is wicked fast. I’ll send you those quant files tomorrow when I get a chance, but adding that flag and the new version fixed the problem. . Thank you for all your help. . Best,. Ryan . Sent from my iPhone. On Jun 16, 2020, at 11:36 PM, Rob Patro <notifications@github.com> wrote:. ﻿. P.S. ; @shalercr,; I also note that layering --hitFilterPolicy BOTH on top of the new version cuts down the time by another factor of 2 for me; 2163.65user 12.72system 4:21.57elapsed 832%CPU (0avgtext+0avgdata 1221856maxresident)k. and the number of mappings discarded alignments due to score comes down by another factor of ~6X. It might be worth seeing what you get with that option as well.; —; You are receiving this because you were mentioned.; Reply to this email directly, ; view it on GitHub, or ; unsubscribe.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/537#issuecomment-645762627:450,down,down,450,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537#issuecomment-645762627,2,['down'],['down']
Availability,"Thanks for the help sir. On Sat, Nov 23, 2019 at 1:52 AM cljacobs <notifications@github.com> wrote:. > If Salmon requires CMake 3.12 (or later), it would probably be worth; > bumping the cmake_minimum_required to this version in CMakeLists.txt.; > It's currently set to 3.9.; >; > This would at least point users to the ""proper"" error. At the moment, it's; > unclear if Salmon meant to provide its own FindIconv.cmake (like it does; > for several other packages) or not.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/453?email_source=notifications&email_token=AN2V7HUD74JWFOQATIRUGM3QVA5QXA5CNFSM4JP7NHKKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEE6YORY#issuecomment-557680455>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AN2V7HT2IHF63T56PP3EECTQVA5QXANCNFSM4JP7NHKA>; > .; >. -- ; *Shanmugavadivel, P. S.*; *Scientist (Agricultural Biotechnology),*. *#216, Block A,*; *ICAR-Indian Institute of Pulses Research,*. *Min. of Agriculture & Farmers Welfare,*. *Govt. of India,Kanpur - 208 024.*; *email: shanmugavadivel.ps@icar.gov.in <shanmugavadivel.ps@icar.gov.in>*; *www.iipr.res.in <http://www.iipr.res.in>*",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/453#issuecomment-557774552:329,error,error,329,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453#issuecomment-557774552,1,['error'],['error']
Availability,"Thanks for the info, @annajbott! Can you mention what OS and version you see the segfault on? This will help trying to track it down.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/337#issuecomment-457575844:128,down,down,128,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337#issuecomment-457575844,2,['down'],['down']
Availability,"Thanks for the kind word @alexvpickering and bringing this to our attention.; It does makes sense to have this clarified in alevin docs. We use `mRNA` for optional whitelisting at the end and you are right about aleivn using the fraction of reads from the mtRNA as a feature, so if the reads are both up and down regulated then the feature would not be very useful as it might cancel out the overall effect. May be we can use more fine grained at per gene level information as a feature but currently we have not put enough thoughts into it but we will clarify this in the alevin docs.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/367#issuecomment-497390977:308,down,down,308,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/367#issuecomment-497390977,1,['down'],['down']
Availability,"Thanks for the replies @alexvpickering @k3yavi ; As we have very high Ambient RNA and Doublet rate, we find that some of our key cell type genes for different neurotransmitters and glial expression are everywhere and this is to some extent affecting our clustering. While removing the doublets with 3 methods and taking a union of atleast 2 to get rid of cells helped, we still need to do something about the background.; So far the results seem ok, but we havent finished all our downstream analyses on the adjusted data to be sure that SoupX isnt doing something to the data that is weird. Thanks for the suggestions Avi, as I am no longer worried that I need CBs with UMIs in the range of 1-10 for SoupX i am using the default FreqThreshold 1 and only playing with MaxNumBarcodes and using KeepCBfraction 1.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/538#issuecomment-646077084:481,down,downstream,481,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/538#issuecomment-646077084,1,['down'],['downstream']
Availability,"Thanks for the reply; I actually tried the one on conda, but it says segmentation fault. I will look at the one you provided, thanks. Kay",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/238#issuecomment-398579731:82,fault,fault,82,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/238#issuecomment-398579731,1,['fault'],['fault']
Availability,Thanks for the report @callumparr! I'll ping @gmarcais on this.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/701#issuecomment-921864891:40,ping,ping,40,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701#issuecomment-921864891,1,['ping'],['ping']
Availability,"Thanks for the report, @chilampoon. I think this is due to an arbitrary (but fixable) limitation on the length of identifier names in the input. Can you look into this, @fataltes, and fix in upstream indexing code. We'll ping back here once we have a fix. I believe version 0.15.0 should not have this issue if you are in immediate need.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/451#issuecomment-555998732:221,ping,ping,221,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/451#issuecomment-555998732,1,['ping'],['ping']
Availability,"Thanks for the response. . The transcriptional variants I've been interested often are quite similar (e.g. only differ for a small part of one exon). Therefore, many of the reads (especially when they map to parts of the genes that don't differ) show up as pseudoaligned to multiple variants, as you'd expect. In that case, do you suggest only looking at the uniquely mapped reads, or only looking at primary alignments for each read, or still looking at all reads (perhaps with a certain `AS` score) for a given transcript? I'm mostly interested in performing sanity checks that transcriptional variants identified by Salmon/Swish are differentially used across conditions. Or would it be better to use a tool like DEXSeq to asks these questions directly? . Also, when filtering by the `AS`, I found some reads with `AS:i:-2147483648`, which I assume is an overflow error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/528#issuecomment-639153957:867,error,error,867,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/528#issuecomment-639153957,1,['error'],['error']
Availability,"Thanks for the responses. Here's the records for the first read in my bam:; ```; NB501285:81:HVJFGBGX2:1:11101:7287:1044 105 uc008cdk.2|C4b 2845 1 36M = 2845 0 AGATTCTCCAAATTGAGAAGGAAGGAGCCATCCACA * NH:i:3; NB501285:81:HVJFGBGX2:1:11101:7287:1044 149 uc008cdk.2|C4b 2845 0 * = 2845 0 ACCCTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN * NH:i:3; NB501285:81:HVJFGBGX2:1:11101:7287:1044 361 uc008cdl.2|C4b 2845 1 36M = 2845 0 AGATTCTCCAAATTGAGAAGGAAGGAGCCATCCACA * NH:i:3; NB501285:81:HVJFGBGX2:1:11101:7287:1044 405 uc008cdl.2|C4b 2845 0 * = 2845 0 ACCCTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN * NH:i:3; NB501285:81:HVJFGBGX2:1:11101:7287:1044 361 uc008cdp.1|C4a 2814 1 36M = 2814 0 AGATTCTCCAAATTGAGAAGGAAGGAGCCATCCACA * NH:i:3; NB501285:81:HVJFGBGX2:1:11101:7287:1044 405 uc008cdp.1|C4a 2814 0 * = 2814 0 ACCCTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN * NH:i:3; ```; Picard crashes on the fourth record with error: ; ```; ERROR: Record 4, Read name NB501285:81:HVJFGBGX2:1:11101:7287:1044, Not primary alignment flag should not be set for unmapped read.; ```; It looks like the issue is that Salmon is setting bit 4 (read unmapped) for the mates and is setting bit 256 (not primary alignment) for the secondary alignments. Both bits 4 and 256 are set for the mate of a secondary alignment which picard doesn't like.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-305539421:877,error,error,877,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136#issuecomment-305539421,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,Thanks for the speedy replies. I tried running alevin with 8 threads and it ends up leading to the same error and backtrace. I can see a large number of threads still spawning through GDB. I have had these kinds of issues before with OpenMP and I usually had to specify an environment variable to limit the threads. I compiled salmon with the download boost etc option:. ```; linux-vdso.so.1 (0x00007ffc90379000); libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f859b069000); libtbbmalloc_proxy.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbbmalloc_proxy.so.2 (0x00007f859ae66000); libtbbmalloc.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbbmalloc.so.2 (0x00007f859ac36000); libtbb.so.2 => /u/user/tmp/salmon/build-debug/src/../../external/install/lib/libtbb.so.2 (0x00007f859aa08000); libgomp.so.1 => /u/user/local/lib64/libgomp.so.1 (0x00007f859a7e7000); librt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f859a5df000); libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f859a2de000); libgcc_s.so.1 => /u/user/local/lib64/libgcc_s.so.1 (0x00007f859a0c8000); libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f8599d1d000); /lib64/ld-linux-x86-64.so.2 (0x00007f859b286000); libdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f8599b19000); libstdc++.so.6 => /u/user/local/lib64/libstdc++.so.6 (0x00007f859979f000); ```. The linux version and g++ version are listed below:; ```; cat /proc/version; Linux version 4.9.0-0.bpo.6-amd64 (debian-kernel@lists.debian.org) (gcc version 4.9.2 (Debian 4.9.2-10+deb8u1) ) #1 SMP Debian 4.9.82-1+deb9u3~bpo8+1 (2018-03-22). ~/data/PCSI/PC10X/paper/pbmc$ g++ -v; Using built-in specs.; COLLECT_GCC=g++; COLLECT_LTO_WRAPPER=/u/user/local/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ./configure --prefix=/u/user/local; Thread model: posix; gcc version 5.4.0 (GCC); ```. ```; [Thread debugging using libthread_db enab,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214:104,error,error,104,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234#issuecomment-395836214,2,"['down', 'error']","['download', 'error']"
Availability,"Thanks for your quick reply. My bam file is filtered, and there will be some single-ended reads. I don’t know how to deal with these 'orphan'. The program give me the info:orphan status: paired error likelihood: inf",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-1343760837:194,error,error,194,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131#issuecomment-1343760837,1,['error'],['error']
Availability,"Thanks for your quickly reply! It really worked @k3yavi; Then I run the command line ; `salmon alevin -l ISR /home/lailab/disk/gjw/Ascite-1_R1.fq.gz -2 /home/lailab/disk/gjw/Ascite-1_R2.fq.gz --chromium --index /home/lailab/disk/gjw/default/ -p 10 -o /home/lailab/disk/gjw/alevin_out --tgMap /home/lailab/disk/gjw/txp2gene.tsv`. ```; Version Server Response: Not Found; Logs will be written to /home/lailab/disk/gjw/alevin_out/logs; [2021-05-27 14:31:00.318] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-05-27 14:31:00.318] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-05-27 14:31:00.318] [jointLog] [error] You passed paired-end files to salmon, but you passed 0 files to --mates1 and 1 files to --mates2. You must pass the same number of files to both flags; [2021-05-27 14:31:00.318] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-05-27 14:31:00.318] [alevinLog] [error] Could not properly process salmon-level options!; ```; Is it the problem with my data?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/663#issuecomment-850151665:728,error,error,728,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/663#issuecomment-850151665,2,['error'],['error']
Availability,"Thanks sir. On Thu, Nov 21, 2019 at 9:27 PM Rob Patro <notifications@github.com> wrote:. > Hi @shanmugavadivelps <https://github.com/shanmugavadivelps>,; >; > This is because, to properly find and link libiconv, the build requires a; > version of CMake that ships with FindIConv.cmake. So, to build salmon from; > source, you should have at least CMake version 3.12. Internally and on our; > continuous integration servers, we use version 3.15.; >; > Also, I'll mention that it may not be essential to build from source.; > Salmon is available via Bioconda, and a docker image is available via; > DockerHub. Also, we have a pre-compiled binary that should work on many; > linux distributions available under our releases; > <https://github.com/COMBINE-lab/salmon/releases>.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/453?email_source=notifications&email_token=AN2V7HW3GLUZR52T4BJKOFLQU2VYHA5CNFSM4JP7NHKKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEE2W3DI#issuecomment-557149581>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AN2V7HTVJB3TCKRKDY6YKI3QU2VYHANCNFSM4JP7NHKA>; > .; >. -- ; *Shanmugavadivel, P. S.*; *Scientist (Agricultural Biotechnology),*. *#216, Block A,*; *ICAR-Indian Institute of Pulses Research,*. *Min. of Agriculture & Farmers Welfare,*. *Govt. of India,Kanpur - 208 024.*; *email: shanmugavadivel.ps@icar.gov.in <shanmugavadivel.ps@icar.gov.in>*; *www.iipr.res.in <http://www.iipr.res.in>*",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/453#issuecomment-557774568:534,avail,available,534,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453#issuecomment-557774568,3,['avail'],['available']
Availability,"Thanks, @lgautier! I think that ideally, we will create a github repo for all dependencies, so that we can control such availability issues.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-152302062:120,avail,availability,120,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/23#issuecomment-152302062,1,['avail'],['availability']
Availability,"Thanks, Avi- actually, I am interested in obtaining the **original** transcript lengths . For now, I'm going through the effort of mapping the salmon quant output (quant.sf) ""Length"" column to the raw counts. Not quite there yet, but as long as there isn't anything already in place for this, I'll proceed down this avenue. . Thanks again!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/693#issuecomment-917202872:306,down,down,306,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/693#issuecomment-917202872,1,['down'],['down']
Availability,"Thanks, Isn't Sailfish required to run Salmon?, because the first time I run salmon I got an error:. `bash: sailfish: command not found_`. I dowloaded sailfish and when got back to use salmon the malloc error appears.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/508#issuecomment-614218653:93,error,error,93,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/508#issuecomment-614218653,2,['error'],['error']
Availability,"Thanks- Jonathan. Yikes, that bad quality one looks like particularly bad quality, I have an example that looks like that in my failed examples. Were you able to recover usable data from it?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490510234:162,recover,recover,162,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490510234,2,['recover'],['recover']
Availability,"Thanks. I noticed that you forked BWA. I'm guessing my substitution of mainline BWA for your forked version is behind the last error. If we get int64_t defined, that might resolve it. I'd be happy to test, and can submit some patches for my other edits to CMakefiles.txt . I will try the Docker image. I was hesitant to use it because it relies on ZFS, and I'm not sure how ZFS will interact with my jail. Probably the easier path right now though.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337616760:127,error,error,127,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162#issuecomment-337616760,1,['error'],['error']
Availability,"Thanks. The ref genie thing might be a little big for me to download to be honest. I talked to my PI and he said it was to be expected that the RNA might be low quality. I ran it against mouse DNA as well and the mouse was multiples worse so I guess that's a good sign. The decoy hits also outnumber the mapped hits by about 6:1. But they never exceed about 7%. Does this indicate something wrong with my indexing?. I also tried mapping indexing against human CDS and NCRNA files from ftp://ftp.ensembl.org/pub/release-100/fasta/homo_sapiens/ and the human genome from the same source. Those had even lower hit rates. That was odd because rRNA wasn't filtered out for this RNA seq, so I would have expected the rRNA parts of the NCRNA to have a lot of hits. But alas.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/558#issuecomment-673153902:60,down,download,60,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/558#issuecomment-673153902,1,['down'],['download']
Availability,"That does not seem very likely in this case. The default C++ compiler mode is C++14 and pretty much everything on the system is compiled that way. Still, I'm not sure how boost169 was compiled (the src.rpm is not available at the moment, waiting for email from the builder). It was used with other packages though, and if it had an incompatible ABI they should not have worked either. Checking my notes there are a couple of specific programs which had to be compiled with older C++ standards, but none of those are linked to Salmon. Also, if that was the problem, shouldn't these have shown up as unresolved references because of the ABI_TAG (""cxx11"" or ""_cxx11"", according to this:. https://developers.redhat.com/blog/2015/02/05/gcc5-and-the-c11-abi/. ) ?. ccache was installed and was active for the salmon build. It was removed and salmon rebuilt. No difference, it still segfaults.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/460#issuecomment-641652976:213,avail,available,213,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460#issuecomment-641652976,1,['avail'],['available']
Availability,That sounds like a very good way of doing it :-). I'm sorry I was not clear enough - my question was acutally meant for a single sequence - let me try again:; Lets say we have a read pair where one mate maps fine - but the other mate have a problem - half of it is an adapter (or low quality sequence with to many errors). How would Salmon currently handle this situation where the first half of a sequence (e.g. nt 1-50) could be quasi-mapped to a transcript but the second half (nt 51-100) did not match anywhere? Would the the second half cause the whole sequence to be discarded or would it be enough that the first half matched for it to be considered/counted?,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-354955072:314,error,errors,314,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150#issuecomment-354955072,2,['error'],['errors']
Availability,"The 1 new alert is a false positive from LGTM. The rethrow is done in the uncaught error handler, so it is correct. Now this is a debugging feature to print the stack trace in case of error. It can be removed from the code (although you may be interested in keeping it maybe).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/617#issuecomment-764742021:83,error,error,83,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/617#issuecomment-764742021,2,['error'],['error']
Availability,"The `AS:i:-2147483648` is a sentinel value basically meaning the alignment was below the minimum acceptable quality. You can simply ignore those (its the min signed 32-bit integer). Let me think about your other question (and ping @mikelove), and get back to you.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/528#issuecomment-639157711:226,ping,ping,226,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/528#issuecomment-639157711,2,['ping'],['ping']
Availability,"The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:2622,error,error,2622,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,4,['error'],['error']
Availability,"The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); <ipython-input-23-f2e7708b5cf8> in <module>; ----> 1 scv.pp.filter_genes(adata, min_shared_counts = 30). /primary/projects/mnp/tools/anaconda3/envs/alevin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:4006,error,error,4006,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,1,['error'],['error']
Availability,"The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); <ipython-input-23-f2e7708b5cf8> in <module>; ----> 1 scv.pp.filter_genes(adata, min_shared_counts = 30). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/scvelo/preprocessing/utils.py in filter_genes(data, min_counts, min_cells, max_counts, max_cells, min_counts_u, min_cells_u, max_counts_u, max_cells_u, min_shared_counts, min_shared_cells, copy); 194 gene_subset &= filter(X, min_cells=_min_cells, max_cells=_max_cells)[0]; 195 ; --> 196 adata._inplace_subset_var(",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:4352,error,error,4352,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,1,['error'],['error']
Availability,"The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); <ipython-input-23-f2e7708b5cf8> in <module>; ----> 1 scv.pp.filter_genes(adata, min_shared_counts = 30). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/scvelo/preprocessing/utils.py in filter_genes(data, min_counts, min_cells, max_counts, max_cells, min_counts_u, min_cells_u, max_counts_u, max_cells_u, min_shared_counts, min_shared_cells, copy); 194 gene_subset &= filter(X, min_cells=_min_cells, max_cells=_max_cells)[0]; 195 ; --> 196 adata._inplace_subset_var(gene_subset); 197 ; 198 s = np.sum(~gene_subset). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in _inplace_subset_var(self, index); 1214 Same as `adata = adata[:, index]`, but inplace.; 1215 """"""; -> 1216 adata_subset = self[:, index].copy(); 1217 self._init_as_actual(adata_subset, dt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:4698,error,error,4698,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,1,['error'],['error']
Availability,"The bug primarily related to bulk mode. **Describe the bug**; Firstly, I built the index with RefSeq reference genome，cds and annotation file. And then, I run the command to get gene quantification,then ,I got the error:. [2024-06-09 20:52:47.925] [jointLog] [info] iteration = 3200 | max rel diff. = 0.0612643; [2024-06-09 20:52:48.138] [jointLog] [info] iteration = 3300 | max rel diff. = 0.0500664; [2024-06-09 20:52:48.352] [jointLog] [info] iteration = 3400 | max rel diff. = 0.0411332; [2024-06-09 20:52:48.569] [jointLog] [info] iteration = 3500 | max rel diff. = 0.0320723; [2024-06-09 20:52:48.782] [jointLog] [info] iteration = 3600 | max rel diff. = 0.0170861; [2024-06-09 20:52:48.997] [jointLog] [info] iteration = 3700 | max rel diff. = 0.218755; [2024-06-09 20:52:49.210] [jointLog] [info] iteration = 3800 | max rel diff. = 0.0130318; [2024-06-09 20:52:49.424] [jointLog] [info] iteration = 3900 | max rel diff. = 0.0255888; **Error: no valid ID found for GFF record**; [2024-06-09 20:52:49.648] [jointLog] [info] iteration = 4000 | max rel diff. = 0.088626; [2024-06-09 20:52:49.765] [jointLog] [info] iteration = 4050 | max rel diff. = 0.00732861. **To Reproduce**; Steps and data to reproduce the behavior:; 1. The command to build index:; threads=24; genome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_genomic.fna; transcriptome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_cds_from_genomic.rename.fna; index=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/index/salmon/RefSeq_index; grep ""^>"" ${genome} | cut -d "" "" -f 1 > ${index}/decoys.txt; sed -i.bak -e 's/>//g' ${index}/decoys.txt; cut -d ""_"" -f 1 ${transcriptome} > ${index}/salmon.cdna.fa; cat ${index}/salmon.cdna.fa ${genome} > ${index}/gentrome.fa.gz; salmon index -t ${index}/gentrome.fa.gz -d ${index}/decoys.t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/937:214,error,error,214,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/937,2,"['Error', 'error']","['Error', 'error']"
Availability,"The current behavior, which I think is the most reasonable for now, is to keep logging messages to stderr, even if they are not errors. This lets us use stdout for output which may need to be redirected to other programs (e.g. mapping results).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-245804636:128,error,errors,128,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-245804636,1,['error'],['errors']
Availability,"The documentation states. >If your alignments for the sample you want to quantify appear in multiple .bam/.sam files, then you can simply provide the Salmon -a parameter with a (space-separated) list of these files. But I somehow can't get that to work. I have two bam files, each of them with (different) STAR alignments to the same reference. When I pass either one of them, salmon works just fine, e.g. with the following commands:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run1/Aligned.toTranscriptome.out.bam; # or; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run2/Aligned.toTranscriptome.out.bam; ```; But when I try to pass both of them, I get the following error:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf) -a run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam. Version Info: This is the most recent version of Salmon.; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fasta }; # [ libType ] => { IU }; # [ threads ] => { 2 }; # [ output ] => { sample1/quantitation }; # [ alignments ] => { run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam }; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; Logs will be written to quantitation/logs; numQuantThreads = 2; parseThreads = 2; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""run1/Aligned.toTranscriptome.out.bam"", fasta = ""transcripts.fasta"" . . .replaced 0 non-ACGT nucleotides with random nucleotides; done. processed 0 reads in current roundSegmentation fault (core dumped); ```. The `Checking that provided alignment files have consistent headers . . . done` line seems to indicate that both bam files were recognized and that the headers matched. . Any hints on what might be going on?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/104:731,error,error,731,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104,2,"['error', 'fault']","['error', 'fault']"
Availability,"The downside of this choice, @rob-p and @mdshw5, is that the user has to do this kind of thing to get the long documentation into `less`:. `salmon quant --help-reads 2>&1 | less`. And this behavior is very unusual among command-line tools when invoking `--help`",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-375116281:4,down,downside,4,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55#issuecomment-375116281,1,['down'],['downside']
Availability,The error code comes from the underlying `kseq` parser. It means some read had an underlying quality string that was truncated (shorter than the corresponding read). See [this](https://www.biostars.org/p/342945/#405026) biostars post.,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/709#issuecomment-928588815:4,error,error,4,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/709#issuecomment-928588815,1,['error'],['error']
Availability,"The error you're seeing is a result of the BAM parser (libstaden) finding an inconsistency in the BAM file. Specifically, this line of code seems to be triggering the error that is printed (https://github.com/svn2github/staden-io_lib/blob/master/trunk/io_lib/bam.c#L300). This suggests something is awry with the BAM file / header. While I can't see anything immediately problematic from the snippet of the header you posted above, I do see some curious things even in this short region of the header. Specifically, the first transcript `NC_003070.9:0-30427671`, appears to be > 30 million nucleotides long --- this is a very suspicious length for a transcript. Second, the second and third transcripts appear to be exact duplicates. Though that is not an inconsistency itself, there is no benefit to having a transcript present multiple times and it can adversely affect quantification estimates. Are there any details about how the reference was obtained (or the BAM file created) that might shed light on why the BAM parser finds such an inconsistency?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270012983:4,error,error,4,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113#issuecomment-270012983,2,['error'],['error']
Availability,"The following bash code will detect and parse either format of gtf into an appropriately versioned two column tx2gene file. test=$(zless -S $gtf | grep -v ""#"" | awk '$3==""transcript""' | head -n 1| cut -f9 | tr -s "";"" "" "" | awk '{print$3}' | sort | uniq | sed 's/\""//g'); if [[ $test == ""transcript_id"" ]]; then; zless -S $gtf | grep -v ""#"" | awk '$3==""transcript""' | cut -f9 | tr -s "";"" "" "" | awk '{print$4""\t""$2}' | sort | uniq | sed 's/\""//g' > txp2gene.tsv; elif [[ $test == ""gene_version"" ]]; then; echo ""Separate version field (ensembl, non-gencode transcriptome, eg. rat, etc)""; zless -S $gtf | grep -v ""#"" | awk '$3==""transcript""' | cut -f9 | tr -s "";"" "" "" | awk '{print$6 ""."" $8""\t""$2 ""."" $4}' | sort | uniq | sed 's/\""//g' > txp2gene.tsv; fi",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/598#issuecomment-737617544:503,echo,echo,503,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/598#issuecomment-737617544,1,['echo'],['echo']
Availability,"The issue relates to the error message, so maybe I will close the issue in terms of being able to run the program without generating the error message. However, I think something still doesn't seem right, and I thought I should make that clear. <table>; <tbody>; <tr>; <th align=""center"">Method</th>; <th align=""center"">SRR13313130</th>; <th align=""center"">10x_pbmc_5k</th>; </tr>; <tr>; 	 <td align=""left"">CellRanger</td>; <td align=""center"">9,974 cells</td>; <td align=""center"">4,956 cells</td>; </tr>; <tr>; 	 <td align=""left"">STARsolo</td>; <td align=""center"">7,587 cells</br><i>(Summary.csv)</i></td>; <td align=""center"">4,586 cells</br><i>(Summary.csv)</i></td>; </tr>; <tr>; 	 <td align=""left"">Alevin</td>; <td align=""center""><b>814 cell barcodes?</b></td>; <td align=""center""> 856,224 cell barcodes</td>; </tr>; <tr>; 	 <td align=""left"">Kallisto</td>; <td align=""center"">79,254 cells</br><i>(BUSpaRse)</i></td>; <td align=""center"">47,598 cells</br><i>(BUSpaRse)</i></td>; </tr>; <tr>. </tbody>; </table>. For Alevin and Kallisto, I am not so worried about the exact values for cell barcodes (versus cells), since I was expecting extra work was needed to estimate a cell count from a distribution of measurements for each cell barcode. However, the number of cell barcodes should be larger than the number of cells, and that seems to match for everything except Alevin for this sample (SRR13313130). In other words, for sample, I think that this is the command that generates the fewest errors/warnings/notes:. `/path/to/salmon alevin -l ISF --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP`. However, I think the cell barcode count is too small. **Is there anything else that you would recommend trying?**",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-882751952:25,error,error,25,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-882751952,6,['error'],"['error', 'errors']"
Availability,"The issue with reading the .mtx file does not appear to be fixed in develop. I still get:. `Error: readMM(): column values 'j' are not in 1:nc` with `Matrix::readMM(file)`. I think it is related to the column indexing in the .mtx file. Specifically, values should be in `1:nc` where `nc` is in the first row second column after the `%%MatrixMarket matrix coordinate real general` line. There is a value of 0 in my .mtx file so I am guessing the issue is 0 indexing instead of 1 indexing.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/380#issuecomment-503677169:92,Error,Error,92,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/380#issuecomment-503677169,1,['Error'],['Error']
Availability,"The last patch display the error with `std::cerr << ...`, because `log->critical(...)` does not seem to work. Not sure how to fix it.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/617#issuecomment-835404939:27,error,error,27,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/617#issuecomment-835404939,1,['error'],['error']
Availability,"The main issue of alevin failing at a low % of analyzed cells is solved, after personal communication with Avi. It turns out that index contained some duplicated transcripts, which were causing the error. I have removed the duplicated transcripts from the .fa file and the transcript_to_gene.tsv matrix, and the analysis completed without errors in a sample run. If the error happens in the whole set of samples I will reopen the issue.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386#issuecomment-508753067:198,error,error,198,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386#issuecomment-508753067,3,['error'],"['error', 'errors']"
Availability,"The problem you're encountering here seems to be a result of a memory allocation error. Basically, building the index requires considerably more memory than actually storing it (and using it for quantification). One option would be to try and build the index with smaller k-mers, which should require less memory. It looks like you successfully indexed 3.8 / 4.1 billion nucleotides, so you're reasonably close to done. The other option will only work with the newest commits of Salmon (i.e. you'd have to clone the repository and build) --- however, they allow building a perfect hash index rather than using the google dense hash we use by default. The perfect hash construction uses an external memory algorithm, and it takes considerably less memory to build the index. A pre-compiled binary exposing this option should also be available later this week.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-202592429:81,error,error,81,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53#issuecomment-202592429,2,"['avail', 'error']","['available', 'error']"
Availability,"The sequence bias model is generic. That is, it does not start out with any assumption about the prevalence or use of specific hexamers. Rather, it trains a VLMM to assess bias in the context surrounding (upstream and downstream) read start positions. It makes sense to use this flag to model types of sequence-specific non-uniformity in read start positions even beyond those caused by non-random hexamer priming.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/880#issuecomment-1757689389:218,down,downstream,218,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/880#issuecomment-1757689389,1,['down'],['downstream']
Availability,"The singularity error must be related to the -e argument... I'll try tomorrow, but I think that will solve the problem, thank you very much!; ###; It works, thanks again.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/447#issuecomment-553016971:16,error,error,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/447#issuecomment-553016971,1,['error'],['error']
Availability,"The specific error message seems to be coming from [the serialization library we use](https://github.com/USCiLab/cereal/blob/master/include/cereal/archives/portable_binary.hpp#L245). This was upgraded recently, so I'm hoping that they didn't introduce a new bug upstream. As soon as I can reproduce this, I can test if rolling back the version of the serialization library fixes the issue (which I don't believe occurred in 0.7.2).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287255919:13,error,error,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129#issuecomment-287255919,1,['error'],['error']
Availability,"The ~/data/Sus_scrofa.Sscrofa11.1.dna.toplevel.fa is genome, the ./SQANTI3_1_output/cdna.new.fa is trans, therefore I don't know where is error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/919#issuecomment-2009036657:138,error,error,138,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/919#issuecomment-2009036657,1,['error'],['error']
Availability,"There are quant.sf files in each one of folders. But i get the error saying ""doesn't contain quant.sf "". aux_info cmd_info.json lib_format_counts.json libParams logs quant.sf",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/179#issuecomment-543271953:63,error,error,63,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/179#issuecomment-543271953,1,['error'],['error']
Availability,"There is a (known) compiler error. To compile from source, you should pass `-DNO_IPO=TRUE` to the `cmake` step. That should fix your compile.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/592#issuecomment-734936468:28,error,error,28,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/592#issuecomment-734936468,1,['error'],['error']
Availability,"There is a long literature about why we use counts or CPM (in either case, optionally with an effective transcript length offset) instead of raw TPM for statistical modeling. Using TPM throws out information about the sampling variation. It can be recovered in large sample datasets, but in small sample datasets, it's too much information loss. With respect to Wilcoxon, again, it's good to incorporate the inherent sampling variation of counts into the test statistic even with nonparametric schemes. This occurs in SAMseq (2013). https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4605138/. ...and also in our method Swish (2019), which is based on SAMseq but designed specifically for output of methods like Salmon. https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6765120/. Note that Swish is both 1) nonparametric 2) takes into account the multinomial-based sampling nature of sequencing data 3) also takes into account inferential uncertainty from multimapping reads (across isoforms, alleles, or genes).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/812#issuecomment-1325134215:248,recover,recovered,248,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/812#issuecomment-1325134215,1,['recover'],['recovered']
Availability,"There is nothing obvious about the command you provided that looks incorrect. Can you please check if the segmentation fault still occurs with the most recent release of salmon (either 1.10 or 1.10.1)?. Thanks,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/847#issuecomment-1533935566:119,fault,fault,119,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/847#issuecomment-1533935566,1,['fault'],['fault']
Availability,"There's been some issues with compiling salmon on macOS for some time now (see also https://github.com/brewsci/homebrew-bio/pull/528). In the current version, I was running into two compile errors on macOS:. 1) problems with staden & Clang; 2) problems with linking to boost static libraries. I could fix (1) by installing staden separately and then using that install in salmon. I've included the respective Find***.cmake files. (2) is an easy fix by modifying the `CMakeLists.txt`. Is there any particular preference for using static libraries? This is a rather small patch and could be done in a Homebrew formula, if you prefer static boost libraries. Otherwise, this PR are just suggestions. If you have changes that better conform to you style, that's fine by me. Thanks,; Gabriel",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/348:190,error,errors,190,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/348,1,['error'],['errors']
Availability,"This 'bug' is related to the funcionality. When attempting to quantify reads using the form, salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o SalmQuant_out, I get the error from the title of this post (screenshot below). * Salmon v 1.5.1 (downloaded executable) used to quantify transcriptome from two fastq files, R1 and R2, containing the same number of sequences. Executed as follows:; * salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o SalmQuant_out. **Expected behavior**; I expected a quant.sf file. Instead I; ![Screen Shot 2021-09-07 at 3 25 26 PM](https://user-images.githubusercontent.com/50889111/132418472-1bca6641-008e-4a9e-aae5-e0b61f771fd4.png); got the error in the title, and in the salmon_quant.log file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version: 18.04.1 . Any insight and help getting that quantification file is greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/700:179,error,error,179,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/700,3,"['down', 'error']","['downloaded', 'error']"
Availability,"This bug is primarily related to salmon (bulk mode). **Describe the bug**; I followed your instructions to create a `mm10` indexed transcriptome with decoys, but I encounter a weird error called:. ```; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **To Reproduce**. First install `salmon` and `mashmap` (`awk` and `bedtools` are already installed).; ```; conda create -n salmon salmon; conda activate salmon; conda install -c bioconda mashmap; ```. ```; salmon -v; salmon 1.6.0; ```; Download transcriptome from ensembl:; ````; mkdir /no_backup/transcriptome_seqs; cd transcriptome_seqs; wget http://ftp.ensembl.org/pub/release-102/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; # Rename the file to make more sense for my in the future; mv Mus_musculus.GRCm38.cdna.all.fa.gz Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz; ````. Build a *decoy-aware* transcriptome file as recommended:; download script with:; ```; wget https://raw.githubusercontent.com/COMBINE-lab/SalmonTools/master/scripts/generateDecoyTranscriptome.sh; ```; Run with:; ```; ./generateDecoyTranscriptome.sh \; -a /no_backup/genome_annots/Mus_musculus_ENSEMBL_v_102_GRCm38.gtf \; -g /no_backup/genome_seqs/Mmu10_gDNA.fasta \; -t /no_backup/transcriptome_seqs/Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz \; -o /no_backup/indexes/salmon/mm10; ```; It takes a bit to finish and once done I can do:. List the fasta headers of the decoy sequences; ```; head decoys.txt ; GL456210.1; chrX; chrY; GL456221.1; JH584304.1; ```. While this shows the the new hybrid (genome + transcriptome) fasta file which contains the decoy sequences from the genome, concatenated with the transcriptome (`gentrome.fa`) for a total of 119414 sequences.; ```; zcat gentrome.fa | grep ""^>"" | wc -l; gzip: gentrome.fa: decompression OK, trailing garbage ignored; 119414; ```. To create a salmon index do the following:; ```; salmon index \; -t /no_backup/indexes/salmon/mm10/gentrome.fa \; -i /no_backup/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731:182,error,error,182,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731,4,"['Down', 'down', 'error']","['Download', 'download', 'error']"
Availability,"This came up in #336. When building a gencode-based index with `salmon index` without the `--gencode` flag, the index that is generated won't work when subsequently running e.g. `salmon alevin`. This can be a pain to figure out the mistake (missing `--gencode` flag). Perhaps some sort of quick grep of the index file name for `'gencode'` or within the file for multiple `'|'`s (used for gencode field separator but not ensembl) should be done to check if it's gencode followed by a warning/error if the --gencode flag is missing? Another possibility could be to just auto-detect if the index is gencode using the above tests, removing the need for the `--gencode` flag. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/366:491,error,error,491,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/366,1,['error'],['error']
Availability,This commit uses multi-stage builds to minimize the Docker image size.; The uncompressed size is down to 101 MB from 1.38 GB. The second ; stage of the build begins with a fresh ubuntu:18.04 image and copies in; the compiled salmon binaries. It also installs one system library that; is linked by one of the salmon shared libraries.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/771:97,down,down,97,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/771,1,['down'],['down']
Availability,This error is only happening for HOMO_SAPIENS and no other organisms. Related TXI:; https://s3.amazonaws.com/data-refinery-s3-transcriptome-index-circleci-prod/HOMO_SAPIENS_TRANSCRIPTOME_LONG.tar.gz,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442547014:5,error,error,5,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322#issuecomment-442547014,1,['error'],['error']
Availability,"This error looks like it is not coming from Salmon, but from some R program that is processing Salmon's results.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/833#issuecomment-1446342132:5,error,error,5,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833#issuecomment-1446342132,1,['error'],['error']
Availability,"This fix resolves performance issue where Boost::math unnecessarily promotes doubles to long double, which is not fully supported by hardware leading to slow-downs. The change is to set a define during cmake process which prevents promotion ( -DBOOST_MATH_PROMOTE_DOUBLE_POLICY=false )",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/967:158,down,downs,158,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/967,1,['down'],['downs']
Availability,"This gave me:; ```; ****************; *** getDecoy ***; ****************; -a <Annotation GTF file> = /nfs/no_backup/genome_annots/Mus_musculus_ENSEMBL_v_102_GRCm38.gtf; -g <Genome fasta> = /nfs/no_backup/genome_seqs/Mmu10_gDNA.fasta; -t <Transcriptome fasta> = /nfs/no_backup/transcriptome_seqs/Mus_musculus_GENCODE_v25_GRCm38.fa; -o <Output files Path> = /no_backup/indexes/salmon/gencode_mm10_unzip; [1/10] Extracting exonic features from the gtf; [2/10] Masking the genome fasta; [3/10] Aligning transcriptome to genome; >>>>>>>>>>>>>>>>>>; Reference = [reference.masked.genome.fa]; Query = [/nfs/no_backup/transcriptome_seqs/Mus_musculus_GENCODE_v25_GRCm38.fa]; Kmer size = 16; Window size = 5; Segment length = 500 (read split allowed); Alphabet = DNA; Percentage identity threshold = 80%; Mapping output file = mashmap.out; Filter mode = 1 (1 = map, 2 = one-to-one, 3 = none); Execution threads = 8; >>>>>>>>>>>>>>>>>>; INFO, skch::Sketch::build, minimizers picked from reference = 843543544; INFO, skch::Sketch::index, unique minimizers = 276648625; INFO, skch::Sketch::computeFreqHist, Frequency histogram of minimizers = (1, 141685574) ... (2606547, 1); INFO, skch::Sketch::computeFreqHist, With threshold 0.001%, ignore minimizers occurring >= 7361 times during lookup.; INFO, skch::main, Time spent computing the reference index: 549.706 sec; INFO, skch::Map::mapQuery, [count of mapped reads, reads qualified for mapping, total input reads] = [111965, 112131, 142604]; INFO, skch::main, Time spent mapping the query : 17487.5 sec; INFO, skch::main, mapping results saved in : mashmap.out; [4/10] Extracting intervals from mashmap alignments; [5/10] Merging the intervals; [6/10] Extracting sequences from the genome; [7/10] Concatenating to get decoy sequences; [8/10] Making gentrome; [9/10] Extracting decoy sequence ids; [10/10] Removing temporary files; ```. Check the decoys:; ```; head /no_backup/indexes/salmon/gencode_mm10_unzip/decoys.txt ; GL456210.1; GL456367.1; chrX; chrY; GL4",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731#issuecomment-1003335885:457,Mask,Masking,457,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731#issuecomment-1003335885,2,"['Mask', 'mask']","['Masking', 'masked']"
Availability,"This happens when there was no read in the same length bin during training period (the first so many reads are used for training) as the read under consideration. So Salmon can't assigned a valid log likelihood and an error is reported. The 3 errors are really the same one. The error log likelihood of 3 models are added (based on position of first mismatch/indel, length of clipping at each end of the read). If the length bin is empty for 1 model, it is likely empty for the other 2 models, and 3 warnings are printed when 1 would have been enough. This read gets a error likelihood of 1 and is mostly ignored by Salmon after that. Such reads should be rare by definition (unless the input BAM was not randomized, or there is bug) and this warning should be rare as well. So unless you see many such warnings, you can safely ignore it.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/701#issuecomment-1421264240:218,error,error,218,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701#issuecomment-1421264240,4,['error'],"['error', 'errors']"
Availability,"This in the compile error I get for the Staden package, FYI:. ```; ❯ make VERBOSE=1 [12:30:35]; /usr/local/Cellar/cmake/3.13.4/bin/cmake -S/Users/gabriel/Projects/salmon-0.13.1 -B/Users/gabriel/Projects/salmon-0.13.1/build --check-build-system CMakeFiles/Makefile.cmake 0; /usr/local/Cellar/cmake/3.13.4/bin/cmake -E cmake_progress_start /Users/gabriel/Projects/salmon-0.13.1/build/CMakeFiles /Users/gabriel/Projects/salmon-0.13.1/build/CMakeFiles/progress.marks; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/Makefile2 all; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/libcereal.dir/build.make CMakeFiles/libcereal.dir/depend; cd /Users/gabriel/Projects/salmon-0.13.1/build && /usr/local/Cellar/cmake/3.13.4/bin/cmake -E cmake_depends ""Unix Makefiles"" /Users/gabriel/Projects/salmon-0.13.1 /Users/gabriel/Projects/salmon-0.13.1 /Users/gabriel/Projects/salmon-0.13.1/build /Users/gabriel/Projects/salmon-0.13.1/build /Users/gabriel/Projects/salmon-0.13.1/build/CMakeFiles/libcereal.dir/DependInfo.cmake --color=; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/libcereal.dir/build.make CMakeFiles/libcereal.dir/build; make[2]: Nothing to be done for `CMakeFiles/libcereal.dir/build'.; [ 8%] Built target libcereal; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/libstadenio.dir/build.make CMakeFiles/libstadenio.dir/depend; cd /Users/gabriel/Projects/salmon-0.13.1/build && /usr/local/Cellar/cmake/3.13.4/bin/cmake -E cmake_depends ""Unix Makefiles"" /Users/gabriel/Projects/salmon-0.13.1 /Users/gabriel/Projects/salmon-0.13.1 /Users/gabriel/Projects/salmon-0.13.1/build /Users/gabriel/Projects/salmon-0.13.1/build /Users/gabriel/Projects/salmon-0.13.1/build/CMakeFiles/libstadenio.dir/DependInfo.cmake --color=; /Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/libstadenio.dir/build.make CMakeFiles/libstadenio.dir/build; [ 9%] Performing configure step for 'libstadenio'; cd /Users/gabr",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/348#issuecomment-472500713:20,error,error,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/348#issuecomment-472500713,1,['error'],['error']
Availability,"This is an installation problem. I am getting a link-time error building Salmon 1.0.0 with GCC 7.3.0 and CMake 3.12.1. The error occurs immediately after ""[100%] Linking CXX executable salmon"". The OS is RHEL6. Here's the output:. ```; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::allocator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger, std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; ```. Googling this error implies an issue with the code, not a missing library.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/455:58,error,error,58,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455,5,['error'],['error']
Availability,"This is concerned with alevin, using a cite-seq like method with a different UMI barcode length. I believe this is similar to #531. running the command like this:. ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass \; --citeseq; ```; Produces the error `ERROR: Please specify one and only one scRNA protocol;`. whereas removing the `--citeseq` argument like this:; ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass; ```; Produces the error `[alevinLog] [critical] Transcript to Gene Map File not provided. Exiting Now.`. This is based on salmon 1.8.0 installed via bioconda on ubuntu 18.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/770:423,error,error,423,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/770,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"This is failing on our local drone CI during runtime. The log output is :. ```; + echo ""[Testing quant]""; [Testing quant]; + ./.drone/test_quant.sh; Holy build box activated; Prefix: /hbb_exe; CFLAGS: -g -O2 -fvisibility=hidden -I/hbb_exe/include ; LDFLAGS: -L/hbb_exe/lib -static-libstdc++; STATICLIB_CFLAGS: -g -O2 -fvisibility=hidden -I/hbb_exe/include ; SHLIB_CFLAGS: -g -O2 -fvisibility=hidden -I/hbb_exe/include ; SHLIB_LDFLAGS: -L/hbb_exe/lib -static-libstdc++; [Drone test] current path : /drone/src/github.com/COMBINE-lab/salmon; [Drone test] making quant test directory; [Drone test] run nextflow pipeline; N E X T F L O W ~ version 0.29.1; Launching `tests/test_quant.nf` [curious_gilbert] - revision: 4f25b30301; [warm up] executor > local; [91/922fac] Submitted process > buildIndex; ERROR ~ Error executing process > 'buildIndex'; Caused by:; Process `buildIndex` terminated with an error exit status (127); Command executed:; /drone/src/github.com/COMBINE-lab/salmon/bin/salmon index -t Homo_sapiens.GRCh37.75.cdna.pc.fa -i nfindex; Command exit status:; 127; Command output:; (empty); Command error:; /drone/src/github.com/COMBINE-lab/salmon/bin/salmon: error while loading shared libraries: libjemalloc.so.2: cannot open shared object file: No such file or directory; Work dir:; /drone/src/github.com/COMBINE-lab/salmon/work/91/922facec25da43edd4a2ce82f2289d; Tip: when you have fixed the problem you can continue the execution appending to the nextflow command line the option `-resume`; -- Check '.nextflow.log' file for detail; ```. So, it seems to be due to failure to find the dynamic shared library for jemalloc. Any idea why that might be?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/348#issuecomment-472495264:82,echo,echo,82,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/348#issuecomment-472495264,12,"['ERROR', 'Error', 'echo', 'error', 'failure']","['ERROR', 'Error', 'echo', 'error', 'failure']"
Availability,"This is great find! Thanks @jeremymsimon! I have started the download, will run it today.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-984788978:61,down,download,61,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-984788978,1,['down'],['download']
Availability,This is in regards to issue https://github.com/satijalab/seurat/issues/2197 where @apcamargo reported error when importing alevin quants into the Seurat inbuilt parser.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/436:102,error,error,102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/436,1,['error'],['error']
Availability,"This is not a bug but more of a question. I've run Salmon in alignment mode with transcriptome BAM file generated by STAR. The BAM file contains no unaligned reads. My question is there are often a small number of reads that were not assigned to any rich equivalence class. I am trying to understand what these reads are. I notice that this only happens when the input is paired-end reads. I suspect maybe the unassigned reads are dovetail paired end reads, but I don't know. The `--allowDovetail` option is not available in alignment mode. Here is an excerpt of the log:; ```; Completed first pass through the alignment file.; Total # of mapped reads : 6205189; # of uniquely mapped reads : 1718004; # ambiguously mapped reads : 4487185. [2024-08-14 18:21:52.491] [jointLog] [info] Computed 350358 rich equivalence classes for further processing; [2024-08-14 18:21:52.491] [jointLog] [info] Counted 6192944 total reads in the equivalence classes; ```; As you can see 6192944 out of 6205189 reads were assigned to rich equivalence classes.; It would be nice to know what the excluded reads are, and/or if there are options to rescue these reads, similar to `--allowDovetail`.; This is Salmon version 1.10.3, but I also ran older version, which generated same results.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/952:512,avail,available,512,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/952,1,['avail'],['available']
Availability,"This is not exactly a bug, but a comment and a question regarding how Salmon uses the positioning data in fastq files. We had a series a RNASeq samples where the majority of the reads were listed at 0:0 in the fastq file. We think this is some obscure issue with one of the trimming/demultiplexing pipelines. No one noticed, as this data is not generally used, but it did throw an error with rsem. Luckily, this error had been previously [reported](https://groups.google.com/forum/#!topic/rsem-users/qXDCpSbEn6Q). Notably, Salmon using quasi mapping was fine. It was only when I tried again using STAR aligned bam files that I noticed that only those reads not listed at 0:0 were used by Salmon (STAR does not seem to care one way or the other). Obviously, badly formated fastq files do not constitute a bug and we are working on fixing them, but we were curious why the positioning data was being used in alignment mode but not quasi mode. Moreover, why is it being used at all? Is it used to weed out potential artifacts?. Many thanks and happy to share an example file if your are interested.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/101:381,error,error,381,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/101,2,['error'],['error']
Availability,"This isn't strictly speaking a bug with salmon per-se, but when installing salmon from conda, its impossible to have both R 4.0.3 and Salmon 1.3.0 installed in the same environment (which is frustrating due to the downstream analysis of Salmon data with wasabi/sleuth then requiring a separate environment). The core incompatibility seems to be with the International Components for Unicode package. Salmon requires; ""icu >=64.2,<65.0a0"",; Whereas in one of the R dependencies when installing 4.0.3 in the environment solve the following is specified; ""icu >=67.1,<68.0a0"",. This seems to be the only conflict I could identify.; This seems to be a new incompatibility introduced with R 4.0.3 and Salmon can coexist alongside R 4.0.2 without issue, so this isn't a huge problem but something I thought should probably be on your radar if it isn't already. Output from the conda dry-run as follows: ; [salmon_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619618/salmon_solve.txt); [r-base_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619619/r-base_solve.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/594:214,down,downstream,214,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/594,1,['down'],['downstream']
Availability,"This issue is not only the case for ensembl, but also for gencode v29. Following the [tutorial](https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001), building an index from *ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_29/gencode.v29.pc_transcripts.fa.gz* and *txp2gene.tsv* from *ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_29/gencode.v29.annotation.gtf.gz* results in *ERROR: Txp to Gene Map not found for 98665 transcripts. ExitingNULL*. A suggested solution: have an option during building the index so that it will only include transcripts also present in a pre-generated txp2gene.tsv (what @sarahhcarl did manually).",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/336#issuecomment-496238223:422,ERROR,ERROR,422,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/336#issuecomment-496238223,1,['ERROR'],['ERROR']
Availability,"This issue is related to salmon (bulk mode). When running salmon quant, everything seems to run normally until the very end, when there is suddenly ""Segmentation fault (core dumped)"" and then a quant file is not written. Started with --gcBias, then tried with --seqBias, then without either and get the same error. Have run Salmon in the past with no issues. Have updated to the latest version but problem persists. The version is salmon (mapping-based) v0.11.1 and was installed through bioconda.; The command being run is:. ```; salmon quant -i /data2/csijcs/hg38/hg38.transcriptome.index -l A \; -1 ${dir}/${samp}/${samp}_R1_001.fastq.gz \; -2 ${dir}/${samp}/${samp}_R2_001.fastq.gz \; -p 16 -o ${dir}/salmon_quants/${samp}; ```. The output is:; ```; Processing sample PBMC_AML_BM_001; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /data2/csijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261:162,fault,fault,162,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261,2,"['error', 'fault']","['error', 'fault']"
Availability,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/276:128,error,error,128,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276,2,"['echo', 'error']","['echo', 'error']"
Availability,Throw error if reads are less than k-mer size,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/41:6,error,error,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/41,1,['error'],['error']
Availability,To reproduce this error:. ``` sh; docker run linuxbrew/linuxbrew brew install gcc homebrew/science/salmon; ```,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193897441:18,error,error,18,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/46#issuecomment-193897441,1,['error'],['error']
Availability,Trying to generate salmon indexes in WSL with Ubuntu 22.04.01 LTS either hangs after the contig count for validation step or throws a segmentation fault. . Using Salmon 1.9 installed through bioconda; Custom annotation of S. cerevisiae R64-3-1 downloaded from SGD. The whole genome was appended as a decoy,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/829:147,fault,fault,147,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/829,2,"['down', 'fault']","['downloaded', 'fault']"
Availability,"UPDATE: On @rob-p 's suggestion, I removed the `--recoverOrphans` option and then all 60 samples did finished without segfaulting. Perhaps there were too many orphans to handle - alignments rates were a dismal 0.5-23%. These were heavily degraded samples that the sequencing center recommended not to sequence but the PI wanted to try it anyway. If you want a pair of fastq files (full or cutdown to ~5 M reads) to test this weird edge case, I can see about getting them to you. Thanks!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/668#issuecomment-862525216:50,recover,recoverOrphans,50,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668#issuecomment-862525216,2,"['degraded', 'recover']","['degraded', 'recoverOrphans']"
Availability,"URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:7798,error,error,7798,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,2,"['Down', 'error']","['Downloads', 'error']"
Availability,"USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); if [ TRUE == ""TRUE"" ] ; then; FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); fi; ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID}. strace /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/Salmon_index_test/salmon_0.8.2_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test11/${ID} 2> logs/strace_${SGE_TASK_ID}.txt. echo ""**** Job ends ****""; date; ```. This requests SGE 2 cores with a total free memory of 2 * 7 = 14 GB and a maximum memory of 16 GB. This is the `strace` output for task 1:. ```; execve(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", [""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""quant"", ""-i"", ""/dcl01/lieber/ajaffe/Emily/RNAse""..., ""-p"", ""1"", ""-l"", ""ISR"", ""-1"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-2"", ""/dcl01/lieber/ajaffe/lab/libd_al""..., ""-o"", ""/dcl01/lieber/ajaffe/lab/libd_al""...], [/* 107 vars */]) = 0; brk(0) = 0xc2c000; mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fffbfffd000; readlink(""/proc/self/exe"", ""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/salmon"", 4096) = 88; access(""/etc/ld.so.preload"", R_OK) = -1 ENOENT (No such file or directory); open(""/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.8.2_linux_x86_64/bin/../lib/tls/x86_64/libpthread.so.0"", O_RDONLY) = -1 ENO",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888:3661,echo,echo,3661,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126#issuecomment-291994888,1,['echo'],['echo']
Availability,"Ubuntu 20.04 LTS, with gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/664:126,error,error,126,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664,4,"['error', 'fault']","['error', 'fault']"
Availability,"Ugh, salmon built, but it crashes. ```; module load salmon; cd /tmp; gunzip -c $ROOT_SALMON/sample_data.tgz | tar -xf -; cd sample_data; salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd; Segmentation fault (core dumped); ```; I wonder if this is related to the segfault seen when Pufferfish was built on the same platfrom from the git repository (today also.)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/460#issuecomment-641545954:223,fault,fault,223,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460#issuecomment-641545954,1,['fault'],['fault']
Availability,"Uh, why then does ""make test"" fail if the root directory name is changed? That was using the binary/libraries in $WHEREVER, after bin and lib below the root directory were removed. Typically that sort of operation doesn't care what the top level is named. For some future release, perhaps the run time dynamic loading of libraries could look up the path to libtbb.so.2 and try that first, before falling back to LD_LIBRARY_PATH? On my system ldd of salmon shows a link to libtbb.so.2, no LD_LIBRARY_PATH needed. ldd does not show any links to libtbb.malloc*. The program will do at least ""salmon --help' that way without any errors or warnings. That isn't sufficient to pass ""make test"" though (even when the directory has not been renamed). It seems that libtbb.malloc* libraries are used during that test, and that use requires LD_LIBRARY_PATH. Only when they are found that way does ""make test"" work.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397063656:625,error,errors,625,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236#issuecomment-397063656,1,['error'],['errors']
Availability,"Under some circumstances, the POS field of some reads in the pseudo-bam file are shifted by a few bases. The read will not match the sequence in these cases. . About 1-2% of reads show this behavior, and the behavior is clustered around certain locations. ; ; Below is a comparison of aligning two reads with Hisat(top), Kallisto(middle) and Salmon (bottom). . ![](https://i.imgur.com/9qOg6S3.png). **To Reproduce**. The following location contains the data. https://www.ialbert.me/static/down/pseudo_alignments/. We have aligned the file `reads.fq` containing two reads to the reference `chr1_g91.t2.fa` with three methods, Hisat, kallisto and salmon. There is a BAM file for each method. Command info json:. https://www.ialbert.me/static/down/pseudo_alignments/salmon_cmd_info.json. **Expected behavior**. The alignment should start in the correct position.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/475:489,down,down,489,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/475,2,['down'],['down']
Availability,"Unfortunately it's getting into a little under explored territory. ; Retrospectively, it does makes sense to have such a threshold but sadly in the current version we don't have that option. If it may help, I just got some stats for 10x data and generally it's around top < 1% of the data which is useful, which should be even lower in dropseq. Although it's possible my sample size of 5 below dataset is too small. ```; useful -> total; 4k -> 1,239,476; 8k -> 1,877,718; 900 -> 657,180; 2k -> 1,653,795; 9k -> 2,812,291; ```. My guess is keeping the `keepCBFraction` even to 0.1 (i.e. 10%) would get you decent number of empty/low confidence CB to correct for downstream but you might have to explore a little. Another caveat is, having too many CB blows up the memory for downstream whitelisting of alevin and currently there is no option to disable that whitelisting, again a must have feature which is missing. Thanks for this very useful discussion, we will definitely improve/add these options into alevin with the next release.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490857399:661,down,downstream,661,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490857399,2,['down'],['downstream']
Availability,"Untar salmon tarball:; ```; $ tar xzvf Salmon-0.9.1_linux_x86_64.tar.gz; ```; Verify binary file is executable:; ```; $ cd Salmon-latest_linux_x86_64/bin && ls -l; total 25336; -rwxr-xr-x 1 bgarchow staff 12971263 Nov 28 22:30 salmon; ```; Try to run salmon:; ```; bin $ ./salmon -h; -bash: ./salmon: cannot execute binary file: Exec format error; ```. BASH version:; ```; $ bash --version; GNU bash, version 4.4.18(1)-release (x86_64-apple-darwin16.7.0); Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/192:341,error,error,341,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192,1,['error'],['error']
Availability,"Updated error model for ONT reads -- uses a markov model to model mismatches, indels, and homopolymer regions. Kmer size and step size for the markov model are set at 50 in ONTAlignmentModel.hpp, but could be adjusted (50 was found to be the best out of the values of k I tried).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/868:8,error,error,8,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/868,1,['error'],['error']
Availability,Use installed cereal and stadenio libraries if available.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/348:47,avail,available,47,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/348,1,['avail'],['available']
Availability,Version 1.5.2 downloaded binary for linux system from GitHub. Judging but the length of the log output I do not think this applies to all alignments but certainly some alignments give the example output:. ```; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891 - align length 4731) has no trained error model; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891) has no trained clipping model; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891) has no trained clipping model; ```. Code to run salmon quant mode:; ```; salmon-1.5.2_linux_x86_64/bin/salmon quant -p 4 --ont -t Genome_files/gencode.v37.transcripts.fa -l SF -a /analysisdata/rawseq/fastq/SHARED/000081/Interactome_project_ONT-CAGE/iPSC_rep1/run1/alignment/Fantom6_iPSC_rep1_run1_pass_transcriptome.bam -o /analysisdata/rawseq/fastq/SHARED/000081/Interactome_project_ONT-CAGE/iPSC_rep1/run1/salmon_quant; ```. Was wondering if I can ignore these errors?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/701:14,down,downloaded,14,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701,3,"['down', 'error']","['downloaded', 'error', 'errors']"
Availability,"We do no have access to BSD-based systems (apart from the extent to which OSX can be said to be BSD-based) on which to test during development. Bioconda works on many linux distributions; though I do not have a comprehensive list. For example, we regularly run on Ubuntu, CentOS, RedHat and Debian. If you have the facilities to use Docker on this machine, you can also pull down a docker image of the latest release from https://hub.docker.com/r/combinelab/salmon.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/419#issuecomment-522628674:375,down,down,375,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419#issuecomment-522628674,1,['down'],['down']
Availability,We just discovered that Salmon build removes/collapses identical transcripts. This is very problematic that Salmon does this as many genes are duplicated throughout the genome. By concatenating them in the build index one of these is arbitrary selected (the others removed) meaning all downstream analysis will assume all expression originate from one genomic region instead of many. In the most r[ecent Gencode mouse release](https://www.gencodegenes.org/mouse_releases/current.html) this problem affects 1563 sequences annotated as 13812 and covers all transcript types (incl 840 protein coding - although the major once are lincRNA (n=3658) and snoRNAs (n=2622)). We strongly believe that if one want to analyse these duplicated regions jointly this should be done just like one would sum all transcripts from a particular gene to get the gene expression.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/214:286,down,downstream,286,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214,1,['down'],['downstream']
Availability,"We tried to run salmon with broken linked files (as in, we accidently linked to the wrong directory). This led to salmon getting to the kmer counting stage and then permanently pausing there (see output below). You can see a version of the broken protocol here: https://github.com/ngs-docs/2017-ucsc-metagenomics/blob/cd417dc4b384b668eda2a477fd805ebb3b30cd00/salmon_tutorial.rst. So, it would be nice if salmon could compensate for this misstep on our part and notify us if a broken linked file is given as input, rather than just pausing. . `tx160085@js-104-35:~/Salmon-0.7.2_linux_x86_64/data$ salmon index -t metagG.ffn -i transcript_index -; -type quasi -k 31; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; index [""transcript_index""] did not previously exist . . . creating it; [2017-04-23 17:02:32.614] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers`. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/134:712,avail,available,712,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/134,2,['avail'],['available']
Availability,"We use Salmon a lot in my lab. It's a great tool. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I am running salmon quant using dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"", i.e. salmon (selective-alignment-based) v1.4.0. **Describe the bug**; When I run salmon I exits with an error code of 137. any idea what this means? I also noticed that the output directory is not created. **To Reproduce**; I am running the container on app.terra.bio, unfortunately, I can not share the workspace because the data is from identifiable human subjects. Bellow, I include the log file showing how I ran salmon. I think the bug may have something to do with the run time environment. Know what salmon exit codes mean would really help me figure out where my bug is. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"",; * Which reference (e.g. transcriptome) was used?; we have a custom reference based on g35. ; * Which read files were used?; * Which which program options were used?; * . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:332,error,error,332,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,2,"['down', 'error']","['downloaded', 'error']"
Availability,"Well, one can certainly use a tool (like gffread or rsem-prepare-reference) to take a genome and a (possibly custom/augmented) GTF to extract a set of target transcripts. Above, it looks like you were only processing between 90 and 100k transcripts. Given the overall size of the overall reference — ~2.4 billion nucleotides — my guess would be that some of these transcripts may be exceedingly long (and perhaps extracted incorrectly from the underlying tool). I should note that an index can be built on large references (which is why we support 64-bit index construction), but it's a very rare use-case as most transcriptomes (even large _de novo_ transcriptomes) rarely cross the 2^31 barrier, and I would expect it to consume quite a bit of memory. The default `quasi` indexer of Salmon is optimized to be very fast for typical sized transcriptomes (usually a few hundred mega-bases) at the cost of using more memory. The alternative `fmd` index can be made more memory efficient, by setting a larger sampling factor, but the resulting mapping will be slower (though still much faster than standard alignment). I would first check to see if the transcripts.fa file contains what you were expecting (i.e. the normal transcriptome + the auxiliary transcripts you were interested in quantifying), and that you actually have close to 2.4Gb of non-redundant transcriptome sequence that you want to quantify. If this is the case, the options are to try and build the quasi-index on a large memory machine (building the index requires more memory than mapping with the constructed index), or using the fmd-index with a large sampling factor. Best,; Rob",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/39#issuecomment-176802594:1348,redundant,redundant,1348,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/39#issuecomment-176802594,1,['redundant'],['redundant']
Availability,When I add the whitelist using `--whitelist` command I get the following error. `[2020-06-09 09:01:07.401] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; `,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/531#issuecomment-641276650:73,error,error,73,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531#issuecomment-641276650,2,['error'],['error']
Availability,"When I do with proxy I got : . ```; Last login: Thu Jun 30 15:10:26 on ttys001; Benjamin@u932-ulm-2-57030119-6834 ~ % all_proxy= url:port conda install salmon; Collecting package metadata (current_repodata.json): failed. # >>>>>>>>>>>>>>>>>>>>>> ERROR REPORT <<<<<<<<<<<<<<<<<<<<<<. Traceback (most recent call last):; File ""/usr/local/Caskroom/miniforge/base/lib/python3.9/site-packages/conda/exceptions.py"", line 1082, in __call__; return func(*args, **kwargs); File ""/usr/local/Caskroom/miniforge/base/lib/python3.9/site-packages/conda/cli/main.py"", line 87, in _main; exit_code = do_call(args, p); File ""/usr/local/Caskroom/miniforge/base/lib/python3.9/site-packages/conda/cli/conda_argparse.py"", line 84, in do_call; return getattr(module, func_name)(args, parser); File ""/usr/local/Caskroom/miniforge/base/lib/python3.9/site-packages/conda/cli/main_install.py"", line 20, in execute; install(args, parser, 'install'); File ""/usr/local/Caskroom/miniforge/base/lib/python3.9/site-packages/conda/cli/install.py"", line 260, in install; unlink_link_transaction = solver.solve_for_transaction(; File ""/usr/local/Caskroom/miniforge/base/lib/python3.9/site-packages/conda/core/solve.py"", line 152, in solve_for_transaction; unlink_precs, link_precs = self.solve_for_diff(update_modifier, deps_modifier,; File ""/usr/local/Caskroom/miniforge/base/lib/python3.9/site-packages/conda/core/solve.py"", line 195, in solve_for_diff; final_precs = self.solve_final_state(update_modifier, deps_modifier, prune, ignore_pinned,; File ""/usr/local/Caskroom/miniforge/base/lib/python3.9/site-packages/conda/core/solve.py"", line 300, in solve_final_state; ssc = self._collect_all_metadata(ssc); File ""/usr/local/Caskroom/miniforge/base/lib/python3.9/site-packages/conda/common/io.py"", line 88, in decorated; return f(*args, **kwds); File ""/usr/local/Caskroom/miniforge/base/lib/python3.9/site-packages/conda/core/solve.py"", line 463, in _collect_all_metadata; index, r = self._prepare(prepared_specs); File ""/usr/local/Ca",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-1171208515:246,ERROR,ERROR,246,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-1171208515,1,['ERROR'],['ERROR']
Availability,"When I run salmon quantmerge I figure out the commands options only by errors, it would be useful to see the full list of options either in help or salmon docs",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/278:71,error,errors,71,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/278,1,['error'],['errors']
Availability,"When I tried to create a list with EdgeR, I encountered a error:""Error in DGEList(counts = cnt, group = group) : non-numeric values found in counts"" . I could not solve this error and I hope you can help me:. ![Captura desde 2023-04-09 18-28-31](https://user-images.githubusercontent.com/112660223/230804485-b6c306fa-71c5-40ba-b254-19498ee9764f.png). SessionInfo():. ![Captura desde 2023-04-09 18-06-19](https://user-images.githubusercontent.com/112660223/230804518-129da88b-02cc-4218-9651-18c3393fd385.png). Data base information:. ![Captura desde 2023-04-09 18-31-15](https://user-images.githubusercontent.com/112660223/230804542-9bb653f5-d798-4bc8-8e95-254a5b773011.png); ![Captura desde 2023-04-09 18-33-08](https://user-images.githubusercontent.com/112660223/230804551-64fb1aa9-992e-49cf-a9fc-9c6c104211eb.png). I hope you can help me to find out what the error is and how to solve it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/842:58,error,error,58,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/842,4,"['Error', 'error']","['Error', 'error']"
Availability,"When I try it this way, the program exits. ```; salmon index -t rnor_gentrome.fa -d decoys.txt -k 31 -p 16 -i rnor_ENSEMBL_96_SA_index_k31; ```. These are the last few lines. ```; [2020-04-14 01:07:52.750] [puff::index::jointLog] [critical] The decoy file contained the names of 955 decoy sequences, but 953 were matched by seq; uences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta; file that is being indexed.; [2020-04-14 01:07:52.895] [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/505#issuecomment-613229118:393,error,errors,393,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/505#issuecomment-613229118,3,"['down', 'error']","['downstream', 'error', 'errors']"
Availability,"When using the -z option to obtain a SAM file and using that same SAM file as an input for a quantification, the following error is thrown:. ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.1.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { ../../gencode.v32.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { sal.bam }; # [ output ] => { salsal }; Logs will be written to salsal/logs; [2019-12-20 16:29:27.435] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 4; [2019-12-20 16:29:27.723] [jointLog] [info] numQuantThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""sal.bam"", fasta = ""../../gencode.v32.transcripts.fa"" . . . SAM file says target ENST00000481276.1|ENSG00000189339.12|OTTHUMG00000078639.4|OTTHUMT00000171590.1|SLC35E2B-202|SLC35E2B|2199|retained_intron| has length 2184, but the FASTA file contains a sequence of length [2200 or 2199]; ```. For this transcript the correct length is indeed 2199. The same error occurs when using a RapMap-produced SAM. OS is Ubuntu 18.04, salmon version 1.1.0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/465:123,error,error,123,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/465,2,['error'],['error']
Availability,"When you compile the program, the last few lines tell you to make links to; the salmon executable and the LIB file. I forgot the lib file and was; getting this error. You can run the executable from the area of install; (works fine) or create a path to /urs/local/bin or any other folder you; want to install. You need to do this for both the files. For making path in linux:; https://stackoverflow.com/questions/14637979/how-to-permanently-set-path-on-linux. Hope this helps. On Mon, May 22, 2017 at 7:03 AM, Darlingfuer <notifications@github.com>; wrote:. > @sudeep71 <https://github.com/sudeep71> Hi there, I run into the same; > error when I use salmon. Would please tell me what you did to set a correct; > PATH ? Thanks!; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303068916>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGcbqM0Z1aeqPtMmppyF51gj9DvEJh5Vks5r8WtpgaJpZM4NT7ex>; > .; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303152754:160,error,error,160,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135#issuecomment-303152754,2,['error'],['error']
Availability,"With the extra `--expectCells 10000` parameter, Alevin finished running without error messages and 10,641 cell barcodes in **quants_mat_rows.txt**. I am not sure how much of a difference it makes if I expect 8,000 cells versus 10,000 cells. However, this looks much closer to the expected number, and I am closing the ticket. Thanks again!",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-884309748:80,error,error,80,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-884309748,1,['error'],['error']
Availability,Would separate bias corrections for separate samples introduce systematic error?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/165:74,error,error,74,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/165,1,['error'],['error']
Availability,Write non-error output to stdout,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/55:10,error,error,10,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55,1,['error'],['error']
Availability,"Yea. Both are frustrating, which is why we spam warning messages to the console when we remove duplicates. Sorry if this default behavior caused you any trouble, but hopefully its easy to recover these quants without rerunning anything using the map of collapsed transcripts.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-381584892:188,recover,recover,188,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214#issuecomment-381584892,1,['recover'],['recover']
Availability,"Yeah, this is definitely not your issue. In fact, I just figured out that my explanation above was incomplete. **You don't need to investigate anything on your end**. I simply didn't flush the entire contents of a FASTA file to disk before calling `salmon index`. In the course of tracking down the issue I fixed some of my code indentation, bringing some of my code into a more global scope, where the `with` context handler I was using to hold the FASTA file open went out of scope, flushing my final writes to disk. Sigh...",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303813062:290,down,down,290,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/132#issuecomment-303813062,2,['down'],['down']
Availability,"Yep, I think that's right and it is expected that every sample would have different number of cells/cellular barcodes. The general idea is to use a frequency distribution to separate high quality barcodes from low quality post quantification. I'm sorry that you are facing issues with v2, but the error simply means you are providing the full list of 737k barcodes which is not an expected behavior for the `--whitelist` flag and in a typical 10x/ Dropseq based experiment one would expect ~10-12k cells/CB.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-878695672:297,error,error,297,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682#issuecomment-878695672,2,['error'],['error']
Availability,"Yep, check this line in the log:; > Total 41.2673% reads will be thrown away because of noisy Cellular barcodes. I think the CB frequency is most probably a bimodal distribution, I'd suggest you to try `--expectCells 8000` command line flag along with the regular command you are using above and check if the numbers in the log comes down to `~15%`.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/396#issuecomment-510549172:334,down,down,334,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/396#issuecomment-510549172,1,['down'],['down']
Availability,"Yep, that is what I was reflecting at earlier. Using `--dumpFeatures` you can get the file `filtered_cb_frequency.txt` (this is after CB seq correction, `raw_cb_frequency` is before seq correction). As the file is reverse sorted by frequency you can count the number of CB with frequency `>100` and use that for the `--forceCell`. It does makes alevin multiple pass algorithm but that was the current use case with complex dataset where it fails to find the knee. . One thing to note here would be the downstream whitelisting. If the number of CB becomes too many then it can potentially blow up the memory. However, since you are already parsing the names of the CB (in your awk script) you can pass those CB as the `--whitelist`, alevin will still sequence correct the remaining CB with 1-edit distance around them. The benefit of this is, alevin will not run downstream whitelisting as a list of whitelisted CB has been provided externally.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490907226:502,down,downstream,502,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362#issuecomment-490907226,2,['down'],['downstream']
Availability,"Yes ! it's other error that I can't find . but I try : . ```; Last login: Thu Jun 30 15:14:51 on ttys002; Benjamin@u932-ulm-2-57030119-6834 ~ % conda config --add channels defaults; conda config --add channels bioconda; conda config --add channels conda-forge; Warning: 'conda-forge' already in 'channels' list, moving to the top; Benjamin@u932-ulm-2-57030119-6834 ~ % conda install salmon; Collecting package metadata (current_repodata.json): failed. CondaHTTPError: HTTP 000 CONNECTION FAILED for url <https://conda.anaconda.org/conda-forge/osx-arm64/current_repodata.json>; Elapsed: -. An HTTP error occurred when trying to retrieve this URL.; HTTP errors are often intermittent, and a simple retry will get you on your way.; 'https://conda.anaconda.org/conda-forge/osx-arm64'; ```. ```; Benjamin@u932-ulm-2-57030119-6834 ~ % conda config --show channels ; channels:; - conda-forge; - bioconda; - defaults; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-1171223414:17,error,error,17,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/724#issuecomment-1171223414,6,['error'],"['error', 'errors']"
Availability,"Yes, I wonder if there is some sort of simple formatting issue that could be at fault here. Having a look at the file(s) would make it much easier to diagnose.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/540#issuecomment-648250382:80,fault,fault,80,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540#issuecomment-648250382,2,['fault'],['fault']
Availability,"Yes, for gencode the tsv file would like as following:; ```; ENST00000456328.2 ENSG00000223972.5; ENST00000450305.2 ENSG00000223972.5; ENST00000488147.1 ENSG00000227232.5; ENST00000619216.1 ENSG00000278267.1; ENST00000473358.1 ENSG00000243485.5; ENST00000469289.1 ENSG00000243485.5; ENST00000607096.1 ENSG00000284332.1; ENST00000417324.1 ENSG00000237613.2; ENST00000461467.1 ENSG00000237613.2; ENST00000606857.1 ENSG00000268020.3; ```; Basically the error is popping because it is not able to map the name of the transcript in your reference `fasta` file to the name of the transcript in the `tsv` file.; How does head of the `fasta` looks like or ; ```; grep ""^>"" /path/to/fasta | head ; ```",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410346357:450,error,error,450,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410346357,1,['error'],['error']
Availability,"Yes, in the gtf file, I don't have any .[0-9] (transcript version); suffixes for the transcripts, while I have some on the fasta file; header. So it is the fasta feature identifier extracted from the header; that is used, not the transcript_id (without its suffix) from the gtf; file ? I'll rebuild a correct tx2gene file then. Le 03/08/2018 à 20:59, Avi Srivastava a écrit :; > Yes, for gencode the tsv file would like as following:; > ```; > ENST00000456328.2 ENSG00000223972.5; > ENST00000450305.2 ENSG00000223972.5; > ENST00000488147.1 ENSG00000227232.5; > ENST00000619216.1 ENSG00000278267.1; > ENST00000473358.1 ENSG00000243485.5; > ENST00000469289.1 ENSG00000243485.5; > ENST00000607096.1 ENSG00000284332.1; > ENST00000417324.1 ENSG00000237613.2; > ENST00000461467.1 ENSG00000237613.2; > ENST00000606857.1 ENSG00000268020.3; > ```; > Basically the error is popping because it is not able to map the name of the transcript in your reference `fasta` file to the name of the transcript in the `tsv` file.; > How does head of the `fasta` looks like or ; > ```; > grep ""^>"" /path/to/fasta | head ; > ```; >",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410351113:855,error,error,855,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264#issuecomment-410351113,1,['error'],['error']
Availability,"Yes, that is true. I have one more thing to try before going down that road though. I just pushed a commit (56b127429d65b8aa4fe6f706d508fbc308e554ff ) that replaces that call to the `gamma_distribution` with one from Boost. Can we see if Boost's implementation also triggers this?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267842320:61,down,down,61,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/111#issuecomment-267842320,1,['down'],['down']
Availability,"Yes, that is what I started to do as well. ; I generate reads from the transposon sequences and map them with bowtie allowing no missmatches to the transcriptome. Regions that get covered are masked.; Currently I use a read-length of 30 for the transposon masking. How are you doing it?",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/217#issuecomment-386261471:192,mask,masked,192,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/217#issuecomment-386261471,2,['mask'],"['masked', 'masking']"
Availability,"Yes; that should definitely correctly be identified as 32-bit. The way the parser works is that it ""chops"" the header at the first whitepsace character. I can't think of anything that would cause failure during mapping (but bugs come from exactly the kind of thing you can't think of). Something that might cause an issue now that I think about it is a complete poly-A transcript. The indexer will attempt to clip poly-A tails (if a transcript ends with > 10 A's, then it will clip all of the trailing A's. If this causes the entire sequence to disappear, this might cause an issue. Also, I hadn't given deep consideration to what might happen if a transcript is shorter than the k-mer size (default 31) used for hashing --- so I might also check for very short transcripts.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174578337:196,failure,failure,196,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37#issuecomment-174578337,1,['failure'],['failure']
Availability,"Yesterday, I got a mapping rate of about 16% with `--split-seqV1` flag and alevin-fry using salmon index based on GENCODE v31 reference and salmon index without decoy. The number of nuclei identified with knee-distance filter is 6928. However, the number of barcodes that match b/w the submission and run is 305 which I am trying to figure out why. ; Earlier, we spotted a position error in about 10% of the split-seq reads in a subset of 2.5M reads. The fixed sequence `ATCCACGTGCTTGAGAGGCCAGAGCATTCG` doesn't always occur at its position and sometimes it's a base or 2 off, which changes the expected barcodes. For example, the sequence in red is part fixed sequence and part 8-bp barcode and it should be in the end of read but sometimes it is not. ; ![image](https://user-images.githubusercontent.com/12998572/144609847-635e1997-fcf3-4e30-8992-ce2a54e21329.png)",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-985521197:382,error,error,382,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-985521197,1,['error'],['error']
Availability,You can see the added cmake file lint test case as allowed failures on Travis here.; It's good to see how the `cmakelint` works.; https://travis-ci.org/COMBINE-lab/salmon/builds/427929967,MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/293#issuecomment-421432387:59,failure,failures,59,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/293#issuecomment-421432387,1,['failure'],['failures']
Availability,"You can try installing from bioconda, or compiling from source. In the cases above, I presume this has to be resolved via the module system on the cluster / server where this is being run. In the pre-compiled binaries, salmon attempts to link against a specific, old version of libm to maximize compatibility among the operating systems on which it will run. However, given it's availability on bioconda, Dockerhub, and compiled via source, the pre-compiled executable for linux is probably the least preferred way to obtain and run salmon on linux.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/710#issuecomment-1165611828:379,avail,availability,379,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/710#issuecomment-1165611828,1,['avail'],['availability']
Availability,"You mean like cloud services to perform the DE analysis? It’s always possible to round the non-integer counts to the nearest integer. However, reliable abundance estimation tools (e.g. RSEM) have been around long enough now that it’s worth pushing any cloud service you might be using to properly deal with these types of inputs. We do differential analysis quite commonly with DESeq2, and salmon -> tximport -> DESeq2 is a quite low-friction solution.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/437#issuecomment-751195284:143,reliab,reliable,143,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/437#issuecomment-751195284,1,['reliab'],['reliable']
Availability,"You specify in the `salmon index` command that the cda.new.fa sequences are the decoys though.; `-d /home/Dingzifeng/SQANTI3_1_output/cdna.decoys.txt`; This line means ""use the sequences with the titles in the text file as my decoy sequences.""; If the `cda.new.fa` sequences are not supposed to be decoys, remove that flag. Otherwise, my above answer should resolve the error.",MatchSource.ISSUE_COMMENT,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/919#issuecomment-2013695547:370,error,error,370,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/919#issuecomment-2013695547,1,['error'],['error']
