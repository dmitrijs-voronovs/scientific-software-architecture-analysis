quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability," $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:28571,avail,available,28571,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['avail'],['available']
Availability," (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:1127,recover,recoverOrphans,1127,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['recover'],['recoverOrphans']
Availability," * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:1523,avail,available,1523,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['avail'],['available']
Availability, --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstad,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:4767,error,error,4767,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['error'],['error']
Availability," -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias --validateMappings. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13 Salmon/0.11.3-IGB-gcc-4.9.4; Salmon/0.9.1-IGB-gcc-4.9.4 Salmon/0.12.0-IGB-gcc-8.2.0 (D). * How was salmon installed (compiled, downloaded executable, through bioconda)?; through the biocluster in the University. * Which reference (e.g. transcriptome) was used?; converted the genomic fasta file to transcriptomic fasta file (described above); ; * Which read files were used?; the raw sequencing reads and the trimmed reads from the paired-end data. * Which which program options were used?; described above. **Expected behavior**; A clear and concise description of what you expected to happen. I've used the quassi mapping of Salmon using different versions several times and I expect to get different mapping rate per sample. I also expect to get different values of the parameters in the quant.sf parameters across all genes and across samples.; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ### For version 0.8. This is similar across all samples:; Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250 28.8836 527.392; LOC_Os01g01010.2 2218 250 1.84062 33.6083; LOC_Os01g01019.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:4381,down,downloaded,4381,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['down'],['downloaded']
Availability," 0.0984302; [2016-01-02 00:08:58.048] [jointLog] [info] iteration = 300 | max rel diff. = 0.0774471; [2016-01-02 00:08:58.265] [jointLog] [info] iteration = 400 | max rel diff. = 0.0866256; [2016-01-02 00:08:58.472] [jointLog] [info] iteration 500, recomputing effective lengths; [2016-01-02 00:09:00.486] [jointLog] [info] iteration = 500 | max rel diff. = 0.0216284; [2016-01-02 00:09:00.696] [jointLog] [info] iteration = 600 | max rel diff. = 0.0269734; [2016-01-02 00:09:00.905] [jointLog] [info] iteration = 700 | max rel diff. = 0.0166003; [2016-01-02 00:09:01.113] [jointLog] [info] iteration = 800 | max rel diff. = 0.0136659; [2016-01-02 00:09:01.334] [jointLog] [info] iteration = 900 | max rel diff. = 0.0114614; [2016-01-02 00:09:01.542] [jointLog] [info] iteration 1000, recomputing effective lengths; [2016-01-02 00:09:03.495] [jointLog] [info] iteration = 1000 | max rel diff. = 0.0102234; [2016-01-02 00:09:03.716] [jointLog] [info] iteration = 1100 | max rel diff. = 0.0202324; [2016-01-02 00:09:03.929] [jointLog] [info] iteration = 1200 | max rel diff. = 0.010957; [2016-01-02 00:09:03.946] [jointLog] [info] iteration = 1209 | max rel diff. = 0.00996627; [2016-01-02 00:09:03.952] [jointLog] [info] Finished optimizer; [2016-01-02 00:09:03.952] [jointLog] [info] writing output. Computing gene-level abundance estimates; [2016-01-02 00:09:04.141] [jointLog] [warning] NOTE: Read Lib [( /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/ERP009633_cell20_1.fastq, /nfs/research2/teichmann/valentine/detection-comparison/salmon0.4.2-comparison/mouse/ERP009633_cell20_2.fastq )] :. Greater than 5% of the alignments (but not, necessarily reads) disagreed with the provided library type; check the file: /tmp/ERP009633_cell20_salmon_out/libFormatCounts.txt for details. There were 104534 transcripts mapping to 44034 genes; Parsed 104000 expression lines; done; Aggregating expressions to gene level . . . done; Segmentation fault (core dumped); ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/34:3367,fault,fault,3367,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34,1,['fault'],['fault']
Availability," 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_ver",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:2364,Error,Error,2364,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,2,['Error'],['Error']
Availability," 400 | max rel diff. = 8.91734; [2021-09-20 16:24:56.130] [jointLog] [info] iteration = 500 | max rel diff. = 1.26201; [2021-09-20 16:24:57.628] [jointLog] [info] iteration = 600 | max rel diff. = 0.155034; [2021-09-20 16:24:59.130] [jointLog] [info] iteration = 700 | max rel diff. = 16.1436; [2021-09-20 16:25:00.660] [jointLog] [info] iteration = 800 | max rel diff. = 2.09965; [2021-09-20 16:25:02.202] [jointLog] [info] iteration = 900 | max rel diff. = 0.122996; [2021-09-20 16:25:03.751] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.156404; [2021-09-20 16:25:05.306] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.103478; [2021-09-20 16:25:06.868] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.03942; [2021-09-20 16:25:08.404] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0699512; [2021-09-20 16:25:09.961] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.109145; [2021-09-20 16:25:11.518] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.135139; [2021-09-20 16:25:13.091] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0545934; [2021-09-20 16:25:14.668] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.0287732; [2021-09-20 16:25:16.226] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.0201942; [2021-09-20 16:25:17.780] [jointLog] [info] iteration = 1,900 | max rel diff. = 1.83806; [2021-09-20 16:25:19.333] [jointLog] [info] iteration = 2,000 | max rel diff. = 0.0251548; [2021-09-20 16:25:19.842] [jointLog] [info] iteration = 2,034 | max rel diff. = 0.00913859; [2021-09-20 16:25:19.858] [jointLog] [info] Finished optimizer; [2021-09-20 16:25:19.858] [jointLog] [info] writing output ; ```. VM running Ubuntu ; Linux ubuntu 5.11.0-34-generic #36~20.04.1-Ubuntu SMP Fri Aug 27 08:06:32 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.3 LTS; Release:	20.04; Codename:	focal. Transcriptome index for mouse mm10 downloaded from RefGenie.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:9575,avail,available,9575,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,2,"['avail', 'down']","['available', 'downloaded']"
Availability," 8M reads in the single fastq file I am testing with. I can see a whole bunch of threads being created despite limiting the number of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 11:55:47.378] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [Ne",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:1392,avail,available,1392,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['avail'],['available']
Availability," ; # Feature counts on genome BAM, without umi_tools dedup: ; ENSMUSG00000029657.15 [...] 7266 415; # Feature counts on deduplicated genome BAM:; ENSMUSG00000029657.15 [...] 7266 289; ```. Here's a scatterplot of log1p(counts) of the salmon quant results for a single sample with and without umi_tools dedup; ![image](https://user-images.githubusercontent.com/7051479/125756098-5aff12af-a75f-4bd3-9c5d-30ce7890a2ba.png). **To Reproduce**; Run Salmon quant on the aligned transcriptome BAM file. I provide subsampled versions of both the deduplicated and non-deduplicated BAM files. If you need the full BAM files, LMK and we can arrange a transfer. . * [POOLAM1-40.Aligned.toTranscriptome.out.subsample.bam.gz](https://github.com/COMBINE-lab/salmon/files/6821654/POOLAM1-40.Aligned.toTranscriptome.out.subsample.bam.gz); * [POOLAM1-40.umi_dedup.transcriptome.sorted.subsample.bam.gz](https://github.com/COMBINE-lab/salmon/files/6821657/POOLAM1-40.umi_dedup.transcriptome.sorted.subsample.bam.gz); * [salmon_featurecounts_results.tar.gz](https://github.com/COMBINE-lab/salmon/files/6821561/salmon_featurecounts_results.tar.gz). Specifically, please provide at least the following information:. * Which version of salmon was used? **1.5.1**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **bioconda**; * Which reference (e.g. transcriptome) was used? **gencode.vM25.primary_assembly.annotation.gtf**; * Which read files were used? **Lexogen QuantSeq 3' UMI**; * Which which program options were used? **--noLengthCorrection**. **Expected behavior**; Correctly quantify results on deduplicated BAM. . **Desktop (please complete the following information):**; - OS: CentOS 7; - Version `3.10.0-1160.11.1.el7.x86_64 #1 SMP Fri Dec 18 16:34:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`. **Additional context**; There's already an issue with RSEM described in the UMI-tools repository (https://github.com/CGATOxford/UMI-tools/issues/465), maybe that's related. . CC @chripla",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/684:2270,down,downloaded,2270,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/684,1,['down'],['downloaded']
Availability," ; Emptied frag queue. . . ; Emptied Alignment Group Pool. . ; Emptied Alignment Group Queue. . . done; [2023-01-29 16:02:59.265] [jointLog] [info] . Completed first pass through the alignment file.; Total # of mapped reads : 13423395; # of uniquely mapped reads : 13423394; # ambiguously mapped reads : 1. [2023-01-29 16:02:59.271] [jointLog] [info] Computed 169 rich equivalence classes for further processing; [2023-01-29 16:02:59.272] [jointLog] [info] Counted 13,423,395 total reads in the equivalence classes ; [2023-01-29 16:02:59.272] [jointLog] [info] starting optimizer; [2023-01-29 16:02:59.274] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-01-29 16:02:59.274] [jointLog] [info] iteration = 0 | max rel diff. = 237.557; [2023-01-29 16:02:59.282] [jointLog] [info] iteration = 100 | max rel diff. = 3.78077e-16; [2023-01-29 16:02:59.282] [jointLog] [info] finished optimizer; [2023-01-29 16:02:59.282] [jointLog] [info] writing output. ```. Output for failure case - 48 files:. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a $file_list -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { apex_infe_t1_rep1_S29_R1_001Aligned.out.bam apex_infe_t1_rep3_S53_R1_001Aligned.out.bam apex_infe_t2_rep1_S30_R1_001Aligned.out.bam apex_infe_t2_rep3_S54_R1_001Aligned.out.bam apex_infe_t3_rep1_S31_R1_001Aligned.out.bam apex_infe_t3_rep3_S55_R1_001Aligned.out.bam apex_infe_t4_rep1_S32_R1_001Aligned.out.bam apex_infe_t4_rep3_S56_R1_001Aligned.out.bam apex_infe_t5_rep1_S33_R1_001Aligned.out.bam apex_infe_t5_rep3_S57_R1_001Aligned.out.bam apex_infe_t6_rep1_S34_R1_001Aligned.out.bam apex_infe_t6_rep3_S58_R1_001Aligned.out.bam apex_mock_t1_rep1_S23_R1_001Align",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:4116,failure,failure,4116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['failure'],['failure']
Availability," ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/664:1025,error,error,1025,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664,2,['error'],['error']
Availability," BAM file is provided. ; If the BAM files are provided one at a time, no error or segfault happens and salmon wickedly fast quantificates the transcripts. The first used BAM files where shuffled (with samtools bamshuf) as recommended in the docs. To exclude an error on my side I did:; - try unshuffled BAM files --> Segfault; - try older Salmon Version (7.2) --> Segfault; - build Salmon from source --> Segfault; - use different transcriptdata (see below) --> Segfault. The segfault happens after all reads (in all files) are processed:; `processed 48000000 reads in current roundSegmentation fault`. ### Example workflow:. Get the read data from [here](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?run=ERR1433122) for example with SRA Toolkit:; `vdb-dump -f fastq --gzip --output-file test.fastq.gz ERR1433122`. Then use STAR:. First build a genome index for the reference transcriptset from [here](https://ics.hutton.ac.uk/atRTD/) and the [TAIR10 genome](https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files); You probably have to rename the chromosomes either in the .gtf or .fas file, to have consistent names. `STAR --runThreadN 4 --runMode genomeGenerate --genomeDir genome_index/ --genomeFastaFiles TAIR10_chr_all_edited.fas --sjdbGTFfile AtRTD2_19April2016.gtf --sjdbOverhang 100`. Then map:. `STAR --runThreadN 4 --genomeDir genome_index --readFilesCommand zcat --readFilesIn test.fastq.gz --sjdbOverhang 100 --sjdbGTFfile AtRTD2_19April2016.gtf --outFileNamePrefix mapping/ --quantMode TranscriptomeSAM`. and make a .fa file from the genome and the .gtf with:; `gffread -w gff_merged.fa -g TAIR10_chr_all_edited.fas AtRTD2_19April2016.gtf`. Now make a copy of the ""Aligned.toTranscriptome.out.bam"" (for the sake of simplicity) and try; `salmon quant -l A -a Aligned.toTranscriptome.out.bam Aligned.toTranscriptome.out_copy.bam -t gff_merged.fa -o ./out/`. Then the above mentioned segfault happens. The o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/145:1074,down,download,1074,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/145,1,['down'],['download']
Availability," Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:977:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1210:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, r1ptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/254:1444,error,error,1444,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254,1,['error'],['error']
Availability," I tried loading all of the entry names into a computing language, and check that the number of unique names was identical to the total number (suggesting that this wasn't the case). **To Reproduce**; I required to re-run some RNA seq mapping from someone who left the lab, and gave me this script (I've asked them, they did not really know what got wrong). ```; conda create --name rnaseq -c bioconda salmon; conda activate rnaseq; conda install -c conda-forge -c bioconda salmon=1.4.0; mkdir -p reference . # reference genome; wget -O reference/genome.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_genomic.fna.gz. # reference Transcriptome; wget -O reference/transcripts.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_cds_from_genomic.fna.gz. # prepare file with ""decoy"" sequences; zcat reference/genome.fa.gz | grep ""^>"" | cut -d "" "" -f 1 | sed -e 's/>//g' > reference/decoys.txt. # concatenate the two; cat reference/transcripts.fa.gz reference/genome.fa.gz > reference/gentrome.fa.gz. # Try to create index, this gives problems; salmon index -t reference/gentrome.fa.gz -d reference/decoys.txt -p 12 -i salmon_index --gencode -k 31; ```. The last one gives an error:; ```; Version Info: This is the most recent version of salmon.; [2021-03-30 14:29:34.652] [jLog] [info] building index; out : salmon_index; [2021-03-30 14:29:34.653] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2021-03-30 14:29:34.670] [puff::index::jointLog] [error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character.; ```. **Desktop (please complete the following information):**; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/642:1839,error,error,1839,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642,3,"['avail', 'error']","['available', 'error']"
Availability," ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; [root@fsutil02 build]#; [root@fsutil02 build]# vim salmon^C; [root@fsutil02 build]# cd ..; [root@fsutil02 salmon]# vim salmon.build.error; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; In file included from /usr/include/c++/4.8.2/memory:81:0,; from /usr/include/c++/4.8.2/thread:40,; from /opt/build/salmon/src/SalmonQuantify.cpp:35:; /usr/include/c++/4.8.2/bits/unique_ptr.h: In instantiation of ‘void std::unique_ptr<_Tp, _Dp>::reset(std::unique_ptr<_Tp, _Dp>::pointer) [with _Tp = fastx_parser::FastxParser<fastx_parser::ReadSeq>; _Dp = processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; std",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:44635,error,error,44635,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability," [ 12%] Built target libtbb; [ 19%] Built target libcereal; [ 26%] Built target libdivsufsort; [ 32%] Built target libstadenio; [ 38%] Built target libspdlog; [ 45%] Built target libgff; [ 47%] Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:977:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuanti",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/254:1268,error,error,1268,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254,1,['error'],['error']
Availability," [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. 5. The duplicates have same sequence or ID or both? The message should be clearer. I wonder what are these duplicates in a human cdna predicted, as available from `ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna`; :. ```; [2018-06-25 19:26:07.480] [jointLog] [warning] Removed 11768 transcripts that were sequence duplicates of indexed transcripts.; ```. 6. For the bwa-based index again, the logs are too verbose on one hand and on the second, they do not say what files were created. I doubt any file with *prefix* `Homo_sapiens.GRCh38.cdna.all/bwaidx` was created. ```; + salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type fmd; outputPrefix = ""Homo_sapiens.GRCh38.cdna.all/bwaidx""; [2018-06-25 19:29:02.497] [jLog] [info] building index; [bwa_index] Pack FASTA... 2.87 sec; [bwa_index] Construct BWT for the packed sequence...; [BWTIncCreate] textLength=609536484, availableWord=54888760; [BWTIncConstructFromPacked] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromPacked] 20 iterations done. 164630980 characters processed.; [BWTIncConstructFromPacked] 30 iterations done. 233119636 characters processed.; [BWTIncConstructFromPacked] 40 iterations done. 293988548 characters processed.; [BWTIncConstructFromPacked] 50 iterations done. 348084948 characters processed.; [BWTIncConstructFromPacked] 60 iterations done. 396161956 characters processed.; [BWTIncConstructFromPacked] 70 iterations done. 438888868 characters processed.; [BWTIncConstructFromPacked] 80 iterations done. 476860644 characters processed.; [BWTIncConstructFromPacked] 90 iterations done. 510606036 characters processed.; [BWTIncConstructFromPacked] 100 iterations done. 540594980 characters processed.; [BWTIncConstructFromPacked] 110 iterations done. 567245236 characters processed.; [BWTIncConstructFromPacked] 120 iterations done. 590928020 characters processed.; [bwa_index] 279.06",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:14045,avail,availableWord,14045,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['avail'],['availableWord']
Availability," [alevin-fry tutorial](https://combine-lab.github.io/alevin-fry-tutorials/2021/improving-txome-specificity/). . **Describe the bug**; A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86.fa""; output:; ""{out_data}/ref/idx/complete_ref_lens.bin"",; ""{out_data}/ref/idx/ctable.bin"",; ""{out_data}/ref/idx/ctg_offsets.bin"",; ""{out_data}/ref/idx/duplicate_clusters.tsv"",; ""{out",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:1221,error,error,1221,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['error'],['error']
Availability," [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173892_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173892 }; Logs will be written to salmonRes_SRR2173892/logs; [2021-07-16 11:47:01.807] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.807] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.807] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.807] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.807] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.807] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR1501367/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR1501367/quant.sf': No such file or directory",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:11425,Error,Error,11425,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,2,['Error'],['Error']
Availability," a 21 GiB swap partition which works fine (I've already seen it at 60%, so it is active and recognized and everything despite being on another physical hard drive ; (the 1. hard drive has a dual installation of win 10 and ubuntu 20.4 and the swap from the installation (2 GiB, because I thought that would be enough at the time and tried to save some space ^^) and the 2. hard drive has a swap partition of 20 GiB (with the highest priority of all swaps), which results in a total of 21.4 GiB in the System Monitor Resources Tab). . The system is still responding, and the System Monitor seems to be working fine (salmon is an active process using 12% CPU, 6.9 GiB memory, 13.5 GiB Disk read total, N/A Disk write total, Disk read 1.2 MiB/s (sometimes 1.1 or 1.3), Disk write N/A, Priority normal); and the Resources Tab shows that ; * out of 8 available CPUs, one is working at 100% (the others 5% at max) and ; * Memory 99.3% (which is only 7.7 GiB); * swap 9.5% (which is only 2 GiB of 21.4 GiB available). So here are (finally) my questions:. 1. How can I get Salmon to use the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ""visible"" happening during Round0?; 3. How can I see or check if it is still working (and it might be worthwhile to wait longer)? ; 4. Is what I'm doing correct to create an index file for running Salmon on human RNA-seq data that is supposed to ""end up"" in sleuth?; 5. Is there another way to create an index file that I can use as an index file to create input data for sleuth from RNA-seq data using Salmon (that might need less computational power)?. The last lines of the output are:. [2021-04-02 08:46:48.282] [puff::index::jointLog] [warning] Entry with header [ENST00000634174.1|ENSG00000282732.1|OTTHUMG00000191398.1|OTTHUMT00000487783.1|AC073539.7-201|AC073539.7|28|unprocessed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping). [2021-04-02",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/643:4263,avail,available,4263,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643,1,['avail'],['available']
Availability," and concise description of what the bug is. I had an older version of salmon that works (v0.8.2) that I believe was not compiled with Bioconda. I am now trying to get the latest version through Bioconda and with the same ""salmon quant"" command (See below) that works on the old version, I get a ""segmentation fault 11"" error and it never actually quantifies any reads. Do you know why this would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:1160,Down,Downloads,1160,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,1,['Down'],['Downloads']
Availability," annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.org/packages/salmon) because conda triggers another bug.; I suspect that this is the cause of the bug. I tried to clean up my dependencies/packages but could not fix the bug. . Thank you for this great program! Cheers!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/965:1226,error,error,1226,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965,1,['error'],['error']
Availability," attached the output from the indexing run). The memory allocation was as below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz. * Which read files were used?; Files used for salmon quant are attached (*fq.gz). * Which which program options were used?; None specifically was invoked to run salmon.; I am running salmon on a cluster (Linux 3.10.0-957.el7.x86_64 x86_64). **Expected behavior**; A clear and concise description of what you expected to happen. I expect the salmon quant to align and quantify the reads. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 1) Attaching the",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/561:1643,down,downloaded,1643,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561,1,['down'],['downloaded']
Availability," attempting to run Alevin on [https://support.10xgenomics.com/single-cell-gene-expression/datasets/1.1.0/cd14_monocytes](url), with the 10x v1 wrapper, the initialization seems to go smoothly then Alevin produces the following:. ```; [2018-09-13 11:41:47.586] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-13 11:41:47.586] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-13 11:41:47.593] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-13 11:41:47.593] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-13 11:41:47.593] [jointLog] [info] Mapping rate = 0%; ```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:; A downloaded binary Salmon v0.11.2 was executed using the v1 wrapper script compiled locally in a Salmon specific Conda environment. The GRCh38.p12 reference was used. Dataset is linked above in bug description. . Full command used:; `~/bin/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -1 read-I1_*.fastq.gz -2 read-RA_*.fastq.gz -r read-I1_*.fastq.gz --gemcode -i ../../../index_15_pc -p 10 -o ../../alevin_15_pc --tgMap ../../../txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; `; Full terminal output:. ```; (Salmonenv) @compute-1-16: ~/Documents/PBMCStem/cd14/fastqs/flowcell1 $ ~/bin/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -1 read-I1_*.fastq.gz -2 read-RA_*.fastq.gz -r read-I1_*.fastq.gz --gemcode -i ../../../index_15_pc -p 10 -o ../../alevin_15_pc --tgMap ../../../txp2gene.tsv --dumpCsvCounts --dumpFeatures --end 5 --umiLength 5 --barcodeLength 14; TEMPDIR is /tmp/tmp.fyLlOm2tjU; Running command [salmon alevin -l ISR ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:1073,down,downloaded,1073,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['down'],['downloaded']
Availability," below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz. * Which read files were used?; Files used for salmon quant are attached (*fq.gz). * Which which program options were used?; None specifically was invoked to run salmon.; I am running salmon on a cluster (Linux 3.10.0-957.el7.x86_64 x86_64). **Expected behavior**; A clear and concise description of what you expected to happen. I expect the salmon quant to align and quantify the reads. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 1) Attaching the screenshot in the zipped folder.; 2) Attaching the screenshot of the con",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/561:1738,down,download,1738,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561,1,['down'],['download']
Availability," bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Can't find gene mapping for : PB.40054.21 w/ index 81766; [2020-06-22 22:51:19.323] [alevinLog] [error] ERROR: Txp to Gene Map not found for 52191 transcripts. Exiting; ```. What's wrong?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/540:1993,error,error,1993,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540,4,"['ERROR', 'error']","['ERROR', 'error']"
Availability," bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the fastq files are as follows:; `$ zcat SRR6327122_1.fastq.gz |head -n 4`; @SRR6327122.1 1 length=36; CTGATCCT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:1151,avail,available,1151,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['avail'],['available']
Availability," but 193 were matched by sequences in the reference file provided.; [2020-07-04 15:10:17.047] [puff::index::jointLog] [info] Replaced 151,122,983 non-ATCG nucleotides; [2020-07-04 15:10:17.047] [puff::index::jointLog] [info] Clipped poly-A tails from 1,825 transcripts; wrote 344371 cleaned references; seqHash 256 : a4437735d0f94862f3c5321f8541b52b3e063d99afd1c4adaacc6b23ad10cc00; seqHash 512 : 29ef1f67a252009538c30d22ab52f1aae09605f9cd6eb731cb5866275eeb4f50917c409fdac10c5da1a6396687c8d3da64ab33dc7cb426dba961639385ce7040; nameHash 256 : 120179531963e6930022681ba9f4226ad0871ca0f6ae01f6c16be496fee9e03f; nameHash 512 : 3ba5b8d011fe981bf67b581cb6d3d83ae1b8d7885c868b7ab634bbf86448889fcc246b9e65374b79270f6d11d5a71ac6335910fcda2b1b9e86bcafe1ae3ae89f; [2020-07-04 15:10:22.800] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2020-07-04 15:11:07.094] [puff::index::jointLog] [info] ntHll estimated 2630714644 distinct k-mers, setting filter size to 2^36; error: Can't open a temporary file; error: Can't read the input file; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Setting the index/BinaryGfa directory /scratch/jl2e19/salmon_index; size = 0; -----------------------------------------; | Loading contigs | Time = 84.402 us; -----------------------------------------; size = 0; -----------------------------------------; | Loading contig boundaries | Time = 30.909 us; -----------------------------------------; Number of ones: 0; Number of ones per inventory item: 512; Inventory entries filled: 1; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] contig count for validation: 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [inf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:16019,error,error,16019,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,2,['error'],['error']
Availability," concise description of what the bug is.; The new updates to the `cmd_info.json` file result in an extra `:` at the end of `""salmon_version:""` inside the quotes. This results in the json file being read in with the header of that entry being `salmon_version:` when it should be `salmon_version`. . Note that this was found when running `salmon alevin` in the `--rad` or `--justAlign` mode and we have not tested if this is also the case when running only `salmon alevin`. . **To Reproduce**; Steps and data to reproduce the behavior:; We ran alevin-fry v0.4.1 starting with `salmon alevin` using `--rad` on single-cell data in the salmon biocontainer and that led to the `cmd_info.json` file being output with the extra `:` on salmon_version. . The biocontainer that we used was: quay.io/biocontainers/salmon:1.5.2--h84f40af_0 . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; used the biocontainer ; * Which reference (e.g. transcriptome) was used?; used the splici index following the alevin-fry tutorial ; * Which read files were used?; * Which which program options were used?; ```; salmon alevin -l ISR --chromiumV3 --dumpFeatures --rad; ```. **Expected behavior**; A clear and concise description of what you expected to happen.; We would expect that the extra `:` would not be included to be consistent with previous versions of salmon. ; <img width=""325"" alt=""Screen Shot 2021-07-29 at 12 35 38 PM"" src=""https://user-images.githubusercontent.com/54039191/127538599-206d5e71-cb7a-4a82-8064-4e92e12ee892.png"">. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add an",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/691:1108,down,downloaded,1108,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/691,1,['down'],['downloaded']
Availability," configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:5902,error,error,5902,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,4,['error'],['error']
Availability," data to reproduce the behavior:; Following steps as specified in guide. Assigning prefix to point to different installation directory and have tried passing in boost location and telling cmake to fetch boost but both result with the same error. . Specifically, please provide at least the following information:; `[ 91%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:47: error: parameter declared ‘auto’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nf",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:1261,error,error,1261,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability," different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. In addition, I am only using trimmed paired-end reads of 100bp. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't receive any errors during these runs, just the results of Gene C and Gene D varying for a reason I cannot pinpoint.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/523:2041,error,errors,2041,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/523,1,['error'],['errors']
Availability," help me with that, but if you have thoughts, I'd appreciate them! Anyway, I decided arbitrarily to use the long-read BAMs as input to Salmon. ### Bug description; Secondly, as discussed a little in #104 , I keep running into:; `Transcript NM_032515.5 appears in the reference but did not appear in the BAM`; and; `Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffread to generate a new transcriptome fasta as follows:; `gffread -w salmon_fix.fa -g chm13v2.0.fa chm13v2.0_RefSeq_Liftoff_v5.1.gff3`. I reran the above salmon command using this new fasta file, but got the same error and warnings: there are transcripts in the BAM not in the fasta and vice versa. Again, the ""transcripts"" not in the fasta were chromosome names. I also tried with the short read SAM files, and still got the same error. I'm not sure how to fix either the warnings or the errors and would really appreciate your help. ### Software information; I used salmon v1.10.0 (though I also tried v1.10.1). In the case of v1.10.0, I had downloaded the pre-compiled binary, and in the case of v1.10.1, the admins of the HPC cluster I used installed it- not sure how. Regardless, all the runs were on HPC clusters, which run on Linux CentOS (I use two different HPC clusters, depending on their availability). Cluster1:; ```; $ uname -a; Linux rescomp1.hpc.in.bmrc.ox.ac.uk 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; -bash: lsb_release: command not found; ```. Cluster2:; ```; $ uname -a; Linux htc-login02 4.18.0-348.7.1.el8_5.x86_64 #1 SMP",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/863:2210,error,error,2210,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863,1,['error'],['error']
Availability," less than equal to the k-mer length of 28 (perhaps after poly-A clipping); [2021-12-24 17:32:49.337] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000196221.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-12-24 17:32:57.126] [puff::index::jointLog] [critical] The decoy file contained the names of 52 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [2021-12-24 17:32:57.224] [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **Expected behavior**; I followed the instructions, I don't think I should be getting this error?; I don't understand why I have only 52 decoys (basically the whole genome), and why zero were matched in the reference file provided. . If I look in `gentrome.fa` I do find the decoys; ```; zgrep ""chr8"" /no_backup/indexes/salmon/mm10/gentrome.fa ; >chr8; ```; I do not want to retain duplicated transcripts so the `--keepDuplicates` flag is something I would want to avoid. **Desktop (please complete the following information):**. ```; uname -a; Linux ant-login6.linux.crg.es 3.10.0-514.16.1.el7.x86_64 #1 SMP Wed Apr 12 07:10:20 CDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-am",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731:3691,error,errors,3691,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731,2,"['down', 'error']","['downstream', 'errors']"
Availability," mm10, Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; * Which read files were used? 125-bases PE RNA-seq samples; * Which which program options were used? `-l A` and `-g`. **Expected behavior**; Transcript ID should be found, translated into GeneSymbol and used for gene-level abundance.; Instead the program fails to find transcript ID even though it exists exactly as expected. **Screenshots**; etc. For all genes.; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082416.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082417.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082418.1] in transcript <-> gene map; returning transcript as it's own gene`. **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; `Linux 3.10.0-1160.6.1.el7.x86_64 #1 SMP Tue Nov 17 13:59:11 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`; LSB Version: :core-4.1-amd64:core-4.1-noarch ; Distributor ID: CentOS ; Description: CentOS Linux release 7.9.2009 (Core) ; Release: 7.9.2009 ; Codename: Core. **Additional context**; This is a wonderful feature, and makes the need for downstream analysis with `tximoprt` redundant. PLEASE HELP :); Attaching `head` of `quant.sf`, `quant.gene.sf`, `transcript_to_id_mm10` files. Identical transcript ID can be easily seen in both files.; THANK YOU; [transcript_to_id_mm10.head.txt](https://github.com/COMBINE-lab/salmon/files/5739701/transcript_to_id_mm10.head.txt); [quant.genes.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739703/quant.genes.head.sf.txt); [quant.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739704/quant.head.sf.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/607:2509,down,downstream,2509,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/607,2,"['down', 'redundant']","['downstream', 'redundant']"
Availability," model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; ```; above warning repeated multiple times for different reads. ```; [2024-04-09 21:53:51.012] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 13013) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; /var/lib/slurm/slurmd/job14839922/slurm_script: line 27: 419663 Segmentation fault (core dumped) salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant. ```. **Additional context**; The bam files were generated from ONT direct RNA SQKRNA004 kit reads aligned with minimap2. I have previously trialled running the above command on a single bam file and it seemed to have worked.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:7421,error,error,7421,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,3,"['error', 'fault']","['error', 'fault']"
Availability," much appreciated. thank you. ; determining read length; Trimming reads; This is cutadapt 4.2 with Python 3.10.8; Command line parameters: -m 30 -u 18 -u -17 -o ./subset_SRR12820270_trimmed.fq subset_SRR12820270.fastq; Processing single-end reads on 1 core ...; Finished in 99.186 s (2.870 µs/read; 20.90 M reads/minute). === Summary ===. Total reads processed: 34,554,336. == Read fate breakdown ==; Reads that were too short: 778,286 (2.3%); Reads written (passing filters): 33,776,050 (97.7%). Total basepairs processed: 2,555,642,890 bp; Total written (filtered): 1,335,316,421 bp (52.2%); Salmon; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//default }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR12820270_trimmed.fq }; ### [ output ] => { salmonRes_SRR12820270 }; Logs will be written to salmonRes_SRR12820270/logs; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant --help; Exiting.; [2023-02-27 15:21:11.968] [jointLog] [info] setting maxHashResizeThreads to 5; [2023-02-27 15:21:11.968] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-27 15:21:11.969] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-27 15:21:11.970] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-27 15:21:11.970] [jointLog] [info] parsing read library format; [2023-02-27 15:21:11.971] [jointLog] [info] There is 1 library.; ./salmonRes_SRR12820270/quant.sf ; Error in geneIndexList[[i]] : subscript out of boun",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/833:1151,Error,Error,1151,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833,1,['Error'],['Error']
Availability," on building index process. **To Reproduce**; Steps and data to reproduce the behavior:. wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/cdna/Mus_musculus.GRCm39.cdna.all.fa.gz ; wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; grep ""^>"" <(gunzip -c Mus_musculus.GRCm39.dna.primary_assembly.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Mus_musculus.GRCm39.cdna.all.fa.gz Mus_musculus.GRCm39.dna.primary_assembly.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.8.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable. * Which reference (e.g. transcriptome) was used?; downloaded executable; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. salmon-1.8.0_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index; Version Info: This is the most recent version of salmon.; index [""Mus_musculus.GRCm39_v1.8.0_decoy.index""] did not previously exist . . . creating it; [2022-06-01 18:13:38.986] [jLog] [info] building index; out : Mus_musculus.GRCm39_v1.8.0_decoy.index; [2022-06-01 18:13:38.986] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178537.2], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178862.2], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2022-06-01 18:1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783:1233,down,downloaded,1233,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783,1,['down'],['downloaded']
Availability," positions. processed 263000000 positions. processed 264000000 positions. processed 265000000 positions. processed 266000000 positions. processed 267000000 positions. processed 268000000 positions. processed 269000000 positions. processed 270000000 positions. processed 271000000 positions. processed 272000000 positions. processed 273000000 positions. processed 274000000 positions. processed 275000000 positions. processed 276000000 positions. processed 277000000 positions. processed 278000000 positions. processed 279000000 positions. processed 280000000 positions. processed 281000000 positions. processed 282000000 positions. processed 283000000 positions. processed 284000000 positions. processed 285000000 positions. processed 286000000 positions. processed 287000000 positions. processed 288000000 positions. processed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 7.61947s; [2018-08-16 19:47:14.359] [jLog] [info] done building index; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:22868,avail,available,22868,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['avail'],['available']
Availability," reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:1493,error,error,1493,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,1,['error'],['error']
Availability," result with the same error. . Specifically, please provide at least the following information:; `[ 91%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:47: error: parameter declared ‘auto’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:62: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:1496,error,error,1496,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability," salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.532] [jointLog] [info] parsing read library format; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon[2019-07-24 13:33:29.532] [jointLog] [info] There is 1 library.; quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:5112,Error,Error,5112,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability," the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; We have 60 samples made from very low RNA inputs (cell captures) so the libraries were made with Ovation Solo RNAseq kit from Tecan. 150 PE. One of the sample finished fine (but mapping rate 21%) but our nextflow pipeline crashed on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can send",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/668:1008,fault,fault,1008,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668,1,['fault'],['fault']
Availability," to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Re",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:1550,down,downloaded,1550,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,1,['down'],['downloaded']
Availability," tools. . I have some split-seq data (from Parse Bio) that ran through the Parse Bio pipeline already (1 moving part at a time). I am trying to run it through Alevin and it keeps failing with printing to the screen:. > [2023-08-17 22:13:22.207] [alevinLog] [info] Done barcode density calculation.; > [2023-08-17 22:13:22.207] [alevinLog] [info] # Barcodes Used: 15722231 / 15722593.; > [2023-08-17 22:13:22.910] [alevinLog] [info] Total 545(has 201 low confidence) barcodes; > [2023-08-17 22:13:23.660] [alevinLog] [info] Done True Barcode Sampling; (some lines later); > [2023-08-17 22:14:04.046] [jointLog] [info] Computed 0 rich equivalence classes for further processing; > [2023-08-17 22:14:04.046] [jointLog] [info] Counted 0 total reads in the equivalence classes; > [2023-08-17 22:14:04.047] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2023-08-17 22:14:04.083] [jointLog] [info] Mapping rate = 0%. It ultimately dies with a floating point error, probably for dividing by 0 somewhere. . The command I'm running is (and note that I have r1 and r2 swapped, per some other guidance. It dies earlier during barcode processing otherwise):. > salmon alevin -i /ref/gencode.v43.transcripts/ -l ISR -1 r2.fastq.gz -2 r1.fastq.gz -p 30 --splitseqV2 --tgMap /ref/gencode.v43_full.txMap -o salmon_output --expectCells 400. I tried to make it simpler and simpler, so that's a salmon index I made myself with no decoys, just the gencode transcript fasta with the software version I'm trying to run (salmon 1.10.2, from the combinelab/salmon docker hub), gencode v43 (I know, it's a version behind, but it's what I'm using elsewhere...) and hg38. It's handling the barcodes fine and recovering approximately the right amount (it's a sub-library with a few hundred cells to check the quality of the library before sequencing the full experiment). But it's failing to quantitate any of the reads. Oddly, just quantitating the read1 file with; > salmon quant",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/867:1043,error,error,1043,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/867,1,['error'],['error']
Availability,"![image](https://user-images.githubusercontent.com/33716378/100950925-6bf3f680-3548-11eb-9c5b-bdc1a5d6ce7f.png); i get this information when i use the command : salmon index ; can anybody have the same problem,how should i do with these error; thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/599:237,error,error,237,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/599,1,['error'],['error']
Availability,"""Bus error: 10"" or ""Segmentation fault: 11"" with version 0.10 and --validateMappings",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/228:5,error,error,5,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228,2,"['error', 'fault']","['error', 'fault']"
Availability,"""Wrong whitelist provided"" Error Message",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682:27,Error,Error,27,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682,1,['Error'],['Error']
Availability,"""[ERROR] Transcript IDs are not in sorted order"" encountered during processing of single-end library",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/265:2,ERROR,ERROR,2,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265,1,['ERROR'],['ERROR']
Availability,"""[error] Can't find right Boundary."" with --expectCells and drop-seq data",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362:2,error,error,2,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362,1,['error'],['error']
Availability,"""salmon index was invoked improperly. "" Error",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/767:40,Error,Error,40,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/767,1,['Error'],['Error']
Availability,"""you are using an empty matrix"" error, seemingly during bias correction (--biasCorrect)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/5:32,error,error,32,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5,1,['error'],['error']
Availability,"# tl;dr; - `salmon alevin` returns an error if the cell barcode length is > 31 base pairs; - This blocks me from using `salmon alevin` for a novel scRNA-seq chemistry that has a 34 base pair cell barcode.; - Previously the `salmon alevin` maximum cell barcode length was increased from 20 base pairs to 31 base pairs. https://github.com/COMBINE-lab/salmon/discussions/629; - Could you please increase the maximum cell barcode length again?; - Or provide guidance on how I should do this in my own fork of salmon?. # Summary. This bug primarily related to alevin (single-cell mode). **Describe the bug**. **To Reproduce**; ```; salmon alevin; -i /path/to/salmon_index ; -p 16 ; -l ISR; --read-geometry 2[1-100] ; --bc-geometry 1[1-34] ; --umi-geometry 1[35-44] ; --sketch ; -1 /path/to/r1.fastq ; -2 /path/to/r2.fastqs; -o /output/path ; --tgMap /path/to/t2g.tsv; ```. Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Salmon version`v1.10.1`; * How was salmon installed? -> Compiled; * Encountered this error when running a feature barcoding analysis following this tutorial https://combine-lab.github.io/alevin-fry-tutorials/2021/af-feature-bc/. **Expected behavior**; Salmon alevin does not error out when the cell barcode length is 34 base pairs. **Screenshots**; Error log; `[2024-06-17 22:00:25.466] [alevinLog] [error] Barcode length (34) was not in the required length range [1, 31].`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/943:38,error,error,38,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/943,5,"['Error', 'error']","['Error', 'error']"
Availability,"## Describe the bug; When I run the following command:; ```; salmon quant --threads 1 --libType=U -i index -r SRR493367.fastq.gz -o SRR493367; ```. I get the following error(s) even though the same version of kallisto was used for the indexing & quantifiation:; ```; Encountered exception [JSON Parsing failed - provided NVP (SeqHash512) not found] when loading index.; The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version.; ```. ## To Reproduce; - Install docker ; - Download transcriptome:; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.transcripts.fa.gz; ```; - Run docker container (warning 2GB):; ```; docker run -v $PWD -w $PWD:$PWD -it lifebitai/rnaseq-nf-dseq2 bash; ```; - Download reads (warning reads are 2.3GB:; ```; fastq-dump SRR493367; ```; - Index transcriptome:; ```; salmon index --threads 1 -t gencode.v27.transcripts.fa.gz -i index; ```; - Run quantification cmd above. <br />; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.12.0; * How was salmon installed? Download precompliied binary and made Dockerfile with the following:; ```Dockerfile; COPY ./salmon-0.12.0_linux_x86_64/bin /usr/local/bin; COPY ./salmon-0.12.0_linux_x86_64/lib /usr/local/lib. RUN chmod -R u+x /usr/local/bin. ENV PATH=""$PATH:/usr/local/bin""; ```; * Which reference (e.g. transcriptome) was used? gencode.v27.transcripts.fa.gz; * Which read files were used? SRR493367.fastq.gz; * Which which program options were used? See above. I encountered this error when running this [Nextflow pipeline](https://github.com/PhilPalmer/RNASeq-nf-dseq2). More details can be found [here](https://deploit.lifebit.ai/public/jobs/5c6eca93758e8300a8740a59) . Any ideas what the problem may be? I am not sure if it is a problem with my installation of Salmon, the [data](https://www.ncbi.nlm.nih.gov/sra/?term=SRR493367), the command or something",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/345:168,error,error,168,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345,3,"['Down', 'error']","['Download', 'error']"
Availability,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:63,error,error,63,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,4,['error'],['error']
Availability,"## [ mates2 ] => { preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz }; ### [ output ] => { preprocs_fastq/ERAP1_EAE_2270_S4 }; ### [ validateMappings ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; Logs will be written to preprocs_fastq/ERAP1_EAE_2270_S4/logs; [2021-08-20 18:19:52.590] [jointLog] [info] setting maxHashResizeThreads to 40; [2021-08-20 18:19:52.590] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 18:19:52.590] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 18:19:52.590] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 18:19:52.590] [jointLog] [info] parsing read library format; [2021-08-20 18:19:52.590] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file mnt/home/oconn341/salmon/indexs/alt_long_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /mnt/home/oconn341/salmon/bin/salmon quant was invoked improperly.; For usage information, try /mnt/home/oconn341/salmon/bin/salmon quant --help; Exiting. However, the versionInfo.json file is in my index folder, it only takes up 126 bits. I have tried generating index's w/ various k-mer lengths, w/ and w/o full genome decoy's, and allocating anywhere from 8-40Gb of RAM to the process. . I am not sure if my indexes are failing to generate. I get no output messaging saying they failed. . Here is the output from my last index build attempt w/o decoy's. Run time in the order of 15min or so:. [2021-08-20 18:04:11.408] [puff::index::jointLog] [warning] Removed 739 transcripts that were sequence duplicates of indexed transcripts.; [2021-08-20 18:04:11.408] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` fla",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:1630,Error,Error,1630,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['Error'],['Error']
Availability,")':; SalmonUtils.cpp:(.text+0x3911): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/551:2101,error,error,2101,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551,2,"['Error', 'error']","['Error', 'error']"
Availability,"* Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:28192,echo,echo,28192,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['echo'],['echo']
Availability,"*** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:22448,echo,echo,22448,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['echo'],['echo']
Availability,"**Bug primarily related to salmon (bulk mode)**. Using files from the tutorial (https://combine-lab.github.io/salmon/getting_started/) did not trigger the bug so I had to make an example with my data. ; C. reinhardtii annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.or",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/965:242,avail,available,242,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965,3,"['avail', 'down']","['available', 'download']"
Availability,"**Describe the bug**; Build problem. . Centos 6.9's boost is too old for salmon. There are RPMs for 1.5.7 installed. The library files are in /usr/lib64 and the include files are in /usr/include/boost157. These all work and are employed by numerous other packages without issues. Using devtoolset-4 (for a recent enough compiler) and a freshly built cmake 3.1.3 this command:. `scl enable devtoolset-4 '~/bin/cmake -DBOOST_ROOT=/usr/lib64 ../CMakeLists.txt'; `; fails with . ```; -- Could NOT find Boost; BOOST_INCLUDEDIR = ; BOOST_LIBRARYDIR = ; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This:; `scl enable devtoolset-4 '~/bin/cmake -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt; `; fails with:. ```; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This::; `scl enable devtoolset-4 '~/bin/cmake -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt'; `; fails the exact same way. Examined the CMakeLists.txt file, found the list of acceptable versions starts with 1.59.0. Crud. ; Tried modifying one line to:; ` find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); `; but it still failed. I am out of tricks. Is it really the case that Salmon cannot use 1.57.0?. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/236:570,Error,Error,570,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236,2,['Error'],['Error']
Availability,"**Describe the bug**; I am trying to quantify long reads mapped using minimap2 and I am getting a large number of the following messages:. ```; [2018-09-10 12:42:32.972] [jointLog] [warning] CIGAR = 106c16M1D7M1D8M1D26M1D55M3D8M1D32M2I14M1I8M1I52M1D14M1I2M1I19M1I1M1I7M11D28M1D5M3I40M1D5M1I5M1I6M1I13M147c; [2018-09-10 12:42:32.972] [jointLog] [warning] (in update()) CIGAR string for read [e6b69e2f-1bf2-4fd5-bace-d4d213164026] seems inconsistent. It refers to non-existant positions in the read!. ```. **To Reproduce**; * Which version of salmon was used?; salmon version: salmon 0.11.3, minimap2 version: 2.9-r720; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; * Which reference (e.g. transcriptome) was used?; Ensembl [cDNA collection](http://ftp.ensembl.org/pub/release-93/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz).; * Which read files were used?; Nanopore reads.; * Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l SF -a {input.bam} -o {output.tsv_dir}. **Desktop (please complete the following information):**; Ubuntu 14.04.5 LTS. **Additional context**; I am wondering whether the issue is caused by the fact that minimap2 does not include sequences in the secondary alignments. The errors disappear if I filter for primary alignments only.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/289:656,down,downloaded,656,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289,2,"['down', 'error']","['downloaded', 'errors']"
Availability,"**Describe the bug**; I followed every step of this tutorial to generate the index.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; Instead of using the mouse genomic data, I used the human data (https://www.gencodegenes.org/human/release_33lift37.html).; I invoked the indexing with the following command: ; **salmon index -t gentrome.fa.gz -d decoys.txt -p 8 -i salmon_index --gencode**; In the beginning everything seems to run smoothly, but a couple minutes in different error messages appear:; **error: Cant write to a temporary file**; **error: Cant read the input file**; followed by **Segmentation fault** and then the algorithm exits. ; Nonetheless a directory with different files regarding the indexing is beeing created.; However when I run; **salmon quant -i salmon_index/ -l A -1 ../../patients/patient001/fastq/S0012_1.fastq.gz -2 ../../patients/patient001/fastq/S0012_2.fastq.gz --validateMappings -o transcripts_quant**. it tells me that **The index version file salmon_index/versionInfo.json doesn't seem to exist**. **To Reproduce**; I installed salmon via bioconda, version 1.1.0. **Desktop (please complete the following information):**; Its running on CentOS 7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/503:501,error,error,501,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/503,4,"['error', 'fault']","['error', 'fault']"
Availability,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/860:74,down,downloaded,74,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860,9,"['Error', 'down', 'error', 'fault']","['Error', 'downloaded', 'error', 'fault']"
Availability,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/496:83,down,downloaded,83,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496,6,['down'],"['download', 'downloaded']"
Availability,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/141:607,error,error,607,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141,12,"['Error', 'error']","['Error', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)? Salmon. **Describe the bug**; I downloaded salmon-0.11.3-linux_x86_64.tar.gz file and extracted it. There is no makefile or install.sh files, just the bin. lib, sample_data. Therefore no any installation steps. The bin and lib were put in environment paths PATH and LD_LIBRARY_PATH.; When I run trinity command i get following error:. Trinity version: Trinity-v2.6.6; -ERROR: couldn't run the network check to confirm latest Trinity software version. Tuesday, September 11, 2018: 14:29:38	CMD: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/290:115,down,downloaded,115,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290,7,"['ERROR', 'Error', 'down', 'error', 'failure']","['ERROR', 'Error', 'downloaded', 'error', 'failure']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/320:362,down,downloaded,362,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/320,3,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.4; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; ensembl releases 103 and 87; * Which read files were used?; fastq files; * Which which program options were used?; quant --validateMappings --numBootstraps 50 --gcBias --seqBias. **Expected behavior**; A clear and concise description of what you expected to happen.; We expected to get the similar TPMs for a recalculation of a cohort of RNAseq data with a newer ensembl fasta release, but they were far off. **Desktop (please complete the following information):**; - RHEL7. **Additional context**; We also attempted to create our own fasta files using stringtie and scallop, but ran into the same issue as stated above.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/653:374,down,downloaded,374,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/653,2,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I am getting this error : Two references with the same name but different sequences: XR_001465382.2_LOC4; 21118_-. We require that all input records have a unique name up to the first whitespace character. But when I try to create a histogram of that reference it only shows 1 sequence with that name: ; grep 'XR_001465383.2_LOC421108' galGal6.gene+cluster+repBase+tRNA.fa.nodup | sort | uniq -c | awk '{printf(""%s\t%s\n"", $1, $2)}'; 1 >XR_001465383.2_LOC421108_-. **To Reproduce**; This is the code I used ; salmon index -t galGal6.gene+cluster+repBase+tRNA.fa.nodup -i SalmonIndexNodup -k 31. Specifically, please provide at least the following information:. * Which version of salmon was used?; I used v1.5.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Yes; * Which reference (e.g. transcriptome) was used?; Mouse (mm10); * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/683:126,error,error,126,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/683,2,"['down', 'error']","['downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I am getting this error when I try to update my index using salmon v1.4.0 or 1.5.1; Version Server Response: Not Found; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; However the index is working with salmon version 0.8.2 . **To Reproduce**; This is how I ran it:; salmon index -t galGal6.gene+cluster+repBase+tRNA.fa -i SalmonIndex --type quasi -k 31; ; This is the dropbox link to the galGal6.gene+cluster+repBase+tRNA.fa https://www.dropbox.com/s/nb39rpydanlxr3p/galGal6.gene%2Bcluster%2BrepBase%2BtRNA.fa?dl=0 file",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/694:126,error,error,126,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/694,2,"['Error', 'error']","['Error', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I can't run ""Quantifying in mapping-based mode"" in Salmon 1.8.0 for reads single-end.; Im not sure if the ""--libType"" (-l) argument is right...; The menssage that appear is ""Segmentation fault"" and the run finish. (following Screenshots). **To Reproduce**; Im executing the following command: salmon quant -i index -l A -r ../fastq_zip/SRR16620521.fastq.gz -o ../salmon_quant/. The ""index"" is my directory with my transciptome data and ""SRR16620521.fastq.gz"" is my file single-end. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.8.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon=1.8.0; * Which reference (e.g. transcriptome) was used? Sviridis_500_v2.1.transcript_primaryTranscriptOnly.fa.gz (Setaria viridis transciptome from Phytozome); * Which read files were used? SRR16620521.fastq.gz; * Which which program options were used? . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/87829929/236075390-07846634-fa21-4146-8a21-673947510a84.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/847:295,fault,fault,295,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/847,2,"['down', 'fault']","['downloaded', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed latest version of salmon through git clone for trinityrnaseq. When i run trinity using a command ""perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G' I am getting a message to install salmon. kindly give me a solution for this. **To Reproduce**; Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G. ______ ____ ____ ____ ____ ______ __ __; | || \ | || \ | || || | |; | || D ) | | | _ | | | | || | |; |_| |_|| / | | | | | | | |_| |_|| ~ |; | | | \ | | | | | | | | | |___, |; | | | . \ | | | | | | | | | | |; |__| |__|\_||____||__|__||____| |__| |____/. Trinity-v2.8.5. Left read files: $VAR1 = [; 'reads_1.fq'; ];; Right read files: $VAR1 = [; 'reads_2.fq'; ];; Trinity version: Trinity-v2.8.5; ** NOTE: Latest version of Trinity is v2.8.6, and can be obtained at:; 	https://github.com/trinityrnaseq/trinityrnaseq/releases. Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870.; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ ^C. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version18.04. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/452:673,down,downloaded,673,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/452,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/453:576,Error,Error,576,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453,2,"['Error', 'error']","['Error', 'errors']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Alevin. **Describe the bug**. Maybe more of a support request than a bug. . I've got some of what I suspect is lower-quality drop-seq data. Running Alevin with default parameters yields very low mapping rates, presumably because elbow-finding is failing. Here's the barcode rank plot, you can see why it's having trouble, you might see an elbow if you squint a bit. . ![Drop-seq](https://user-images.githubusercontent.com/5775915/57308423-3d006f00-70de-11e9-8c59-47e55d060035.png). I know from the source publication that we expect 278 cells in this case. . Supplying --expectCells yields the boundary error above. For this to work I need to break out the big guns and use --forceCells, yes? What I would really like is to try --expectCells first to allow Alevin to be a little bit intelligent, and if that fails to use --forceCells. Is that a sensible approach?. If so, could we a) have an informative error code on the boundary error above such that I can easily detect that error and re-submit with --forceCells, or b) if this is generically useful have a flag in Alevin to do it directly?. **To Reproduce**; Steps and data to reproduce the behavior:. - cDNA reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R2.fastq.gz; - barcode reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R1.fastq.gz; - transcript/ gene mapping as: [transcript_to_gene.txt](https://github.com/COMBINE-lab/salmon/files/3153221/transcript_to_gene.txt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; #",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362:688,error,error,688,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. I am using a version that was compiled in Trinity; module load conda/trinity-2.8.4; source activate trinity-2.8.4; salmon --version salmon 0.11.3. **Describe the bug**. @RG lines are at odds with binary encoded reference data ; Segmentation fault. **To Reproduce**; Steps and data to reproduce the behavior:. salmon quant -t Cp_cds.fa -l ISR -a SB1.bam -o salmon_SB1. **Summary** ; I mapped the reads to a de novo transcriptome assembly using BWA-mem. I then use Salmon to get counts for RNAseq analysis using the alignment based mode. This has worked well for the nine previous samples, but the last 3 samples throw the error above (different species and reference transcriptome assembly). Maybe a problem with the bam file? If no not sure how the read groups etc, could be a problem unless there is a problem with the fastq files. But they came from the same run/machine/lane (Illumina NextSeq 500) as six other samples that have not caused problems.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/323:327,fault,fault,327,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323,2,"['error', 'fault']","['error', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon (bulk mode). **Describe the bug**. For one of our 41 samples, salmon fails (quits, without any substantial output) when using the orphan recovery option (where Salmon attempts to try harder to pair up read alignments when one of the reads in a read pair fails to map properly). Given that it's only related to the orphan recovery option, and only one sample out of 41, I don't expect it'll affect our results in any substantial way, but I'm reporting this bug just in case it exposes other software issues that are more concerning. **To Reproduce**; Steps and data to reproduce the behavior:. * Which version of salmon was used?; * v1.10.0 (the latest release that had a compiled executable); * How was salmon installed (compiled, downloaded executable, through bioconda)?; * downloaded executable; * Which reference (e.g. transcriptome) was used?; * Gencode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:230,recover,recovery,230,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,4,"['down', 'recover']","['downloaded', 'recovery']"
Availability,**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon. **Describe the bug**; Running on a machine with 256GB of RAM the index builds without error but quant fails. **To Reproduce**; The input transcript file is 425Mb and I'm using salmon 0.14.1. This command ran successfully to index:. `/usr/local/common/salmon-0.14.1/bin/salmon index -t Trinity.fasta -i transcripts_index -k 31 -p 12`. And this one failed:. `/usr/local/common/salmon-0.14.1/bin/salmon quant -i transcripts_index -l IU -1 IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq -2 IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq --validateMappings -p 12 --output salmon_out`. But here's the output:. ```; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { transcripts_index }; ### [ libType ] => { IU }; ### [ mates1 ] => { IL100038432.R1.trimmed.PE.fastq IL100038433.R1.trimmed.PE.fastq IL100038708.R1.trimmed.PE.fastq IL100038709.R1.trimmed.PE.fastq IL100044635.R1.trimmed.PE.fastq IL100054706.R1.trimmed.PE.fastq IL100062514.R1.trimmed.PE.fastq }; ### [ mates2 ] => { IL100038432.R2.trimmed.PE.fastq IL100038433.R2.trimmed.PE.fastq IL100038708.R2.trimmed.PE.fastq IL100038709.R2.trimmed.PE.fastq IL100044635.R2.trimmed.PE.fastq IL100054706.R2.trimmed.PE.fastq IL100062514.R2.trimmed.PE.fastq }; ### [ validateMappings ] => { }; ### [ threads ] => { 12 }; ### [ output ] => { salmon_out }; Logs will be written to salmon_out/logs; [2019-08-27 11:44:12.350] [jointLog] [info] Fragment incompatibility prior below threshold. Incompati,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/426:180,error,error,180,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. The bug is primarily related to salmon, but I am using salmon to build an index for use with alevin-fry per the [alevin-fry tutorial](https://combine-lab.github.io/alevin-fry-tutorials/2021/improving-txome-specificity/). . **Describe the bug**; A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:698,error,error,698,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,2,"['Error', 'error']","['Error', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. alevin. **Describe the bug**; salmon alevin fails to output quants_mat.mtx.gz file when invoked with flags `-dumpMtx --keepCBFraction 1 --maxNumBarcodes 4294967295`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.14.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; human_GENCODEv29.tar.gz with decoys from README. **Expected behavior**. Save a quants_mat.mtx.gz file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/15719520/59559081-16730500-8fb5-11e9-8bbd-faf2b99a02e7.png). **Desktop (please complete the following information):**; - OS: Ubuntu 16.04; - Version; ```; uname -a; Linux desktop 4.15.0-51-generic #55~16.04.1-Ubuntu SMP Thu May 16 09:24:37 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; Distributor ID: Ubuntu; Description: Ubuntu 16.04.6 LTS; Release: 16.04; Codename: xenial. ```; Related to #377",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/379:401,down,downloaded,401,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/379,2,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon (bulk mode) latest binary (1.8.0) from github. **Describe the bug**; A clear and concise description of what the bug is. core dumped crash on building index process. **To Reproduce**; Steps and data to reproduce the behavior:. wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/cdna/Mus_musculus.GRCm39.cdna.all.fa.gz ; wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; grep ""^>"" <(gunzip -c Mus_musculus.GRCm39.dna.primary_assembly.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Mus_musculus.GRCm39.cdna.all.fa.gz Mus_musculus.GRCm39.dna.primary_assembly.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.8.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable. * Which reference (e.g. transcriptome) was used?; downloaded executable; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. salmon-1.8.0_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index; Version Info: This is the most recent version of salmon.; index [""Mus_musculus.GRCm39_v1.8.0_decoy.index""] did not previously exist . . . creating it; [2022-06-01 18:13:38.986] [jLog] [info] building index; out : Mus_musculus.GRCm39_v1.8.0_decoy.index; [2022-06-01 18:13:38.986] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178537.2], had length less than equal to the k-mer length of 31 (perha",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783:584,down,download,584,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783,1,['down'],['download']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; A clear and concise description of what the bug is. Running `salmon index` on a HPC cluster (called from a trinity perl script). After a while salmon is only idling. In the stderr I see:. ```; Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!; ```. The problem seems to be the available memory. On HPC systems one usually needs to specify a max amount of memory which is enforced (e.g. with ulimit). . If I give more memory to the job salmon finishes. . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. Salmon 1.1 installed through conda. I guess any data will do to reproduce as long as the memory limitations ar small enough. **Expected behavior**; A clear and concise description of what you expected to happen. Would be good if salmon would exit with a better error message and a non-zero exit code in such a case. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. CentOS 7. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/484:524,avail,available,524,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/484,3,"['avail', 'down', 'error']","['available', 'downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. **To Reproduce**. * Which version of salmon was used?. salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. * How was salmon installed (compiled, downloaded executable, through bioconda)?. bioconda. * Which reference (e.g. transcriptome) was used?. To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. * Which read files were used?. See above. * Which which program options were used?. I used the bash script from ; https://combine-lab.github.io/salmon/getting_started/. **Expected behavior**. I expected an output indicating successful quantification. **Screenshots**. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/317:155,fault,fault,155,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317,2,"['down', 'fault']","['downloaded', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; - Alevin. **Describe the bug**; I got the error copied below, it said to report on GitHub so I'm doing that. **To Reproduce**; Steps and data to reproduce the behavior:; - The Jupyter notebook I was using is in the attached zip file; [alevin-default-eduardo.zip](https://github.com/COMBINE-lab/salmon/files/2096615/alevin-default-eduardo.zip). Specifically, please provide at least the following information:. * Which version of salmon was used? ; Salmon 0.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed with bioconda; * Which reference (e.g. transcriptome) was used? ; This transcriptome: https://drive.google.com/open?id=1XcsFUxJM6XaYEKh9BYdUoAyJSlWJLIiW. ; It's a mouse transcriptome with 3 additional transcripts at the end; * Which read files were used?; * Which which program options were used?; `salmon alevin -lISR -1 ./H2_S5_L003_R1_001.fastq.gz -2 H2_S5_L003_R2_001.fastq.gz --chromium -i salmon_index -p 8 -o alevin_output --tgMap txp2gene.tsv`. **Desktop (please complete the following information):**; - OS: CentOS; - Version:; Linux login1 3.10.0-514.2.2.el7.x86_64 #1 SMP Tue Dec 6 23:06:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.3.1611 (Core); Release: 7.3.1611; Codename: Core. **Additional context**; ```; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/237:128,error,error,128,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237,2,"['down', 'error']","['downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Affects salmon (bulk mode) for sure. I don't know alevin. **Describe the bug**; totalCount_ is not initialized in Transcript constructors. In the vast majority of the cases it doesn't matter because the memory is initialized to 0 anyway, but for a very small fraction of the transcripts the totalCount gest initialized to some random value, which can lead to missed invocations of projectToPolytope in normalizeAlphas and writeAbundances. **To Reproduce**. Systematic. Effect might be more difficult to detect as you'd need a truth set. Dumping a trace of the totalCount_ might be easier. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.11.3 ans 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. N/A. compiled from scratch. * Which reference (e.g. transcriptome) was used?. * Which read files were used?. BAM input, generated by STAR, from proprietary data produced with Illumina instruments. * Which which program options were used?. --no-version-check --threads 1 --dumpEq --useEM --noErrorModel --noRichEqClasses --gcBias -l isr. **Expected behavior**. Accurate values for totalCount for all transcripts. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu 18.10, CentOs 7.5.1804. **Additional context**; Add any other context about the problem here. Attached patch for 0.13.1:. [Transcript.hpp.patch-0.13.1.txt](https://github.com/COMBINE-lab/salmon/files/3044728/Transcript.hpp.patch-0.13.1.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/355:835,down,downloaded,835,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/355,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin single-cell mode. **Describe the bug**; Hi, I bumped into a problem following this tutorial [https://combine-lab.github.io/alevin-tutorial/2018/output-format/](url) . It's the ""Reading Alevin’s bfh (big freaking hash) file"" section, where there are just 2 lines I should run. The problem is on the second line, ""parser.read_bfh()"" function. It throws me a `pandas.errors.ParserError: Error tokenizing data. C error: Expected 1 fields in line 110446, saw 20` . I tried diagnosing the problem and looked into the input bfh.txt file. The problem wasn't just line 110447, but many other lines that had more than 1 field. So the real question breaks down into: should the bfh.txt file have only 1 field per row (line)? If this is the case, then the input bfh.txt file is problematic. If not, then the parser function is problematic, as it should account for more than 1 field. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * 1.4.0; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * conda create -n salmon -c conda-forge -c bioconda salmon; conda activate salmon. * Which reference (e.g. transcriptome) was used?; * generated index via ""Protein-coding transcript sequences"" here : https://www.gencodegenes.org/human/ ; * generated the txp2gene.tsv file via ""Comprehensive Gene Annotation, Region: PRI"" here: ; https://www.gencodegenes.org/human/release_37lift37.html. * Which read files were used?; * 5k_pbmc FASTQ file from 10x: https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_v3; ; * Which program options were used?; `salmon alevin -l ISR -1 5k_pbmc_v3_S1_L001_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz -2 5k_pbmc_v3_S1_L001_R2_001.fastq.gz 5k_pbmc_v3_S1_L002_R2_001.fastq.gz 5k_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/650:457,error,errors,457,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650,4,"['Error', 'down', 'error']","['Error', 'down', 'error', 'errors']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin. **Describe the bug**; `Wrong barcode-end parameters`; `[2019-01-17 15:50:10.269] [jointLog] [error] wrong barcode-end parameters.; Please report this bug on Github`. **To Reproduce**; Steps and data to reproduce the behavior:; `./Software/salmon-0.12.0_linux_x86_64/bin/salmon alevin -l ISR ; -1 Data/Fastq/PBMC6_PolyTTrimmed.R2.fq.gz; -2 Data/Fastq/PBMC6_PolyTTrimmed.R1.fq.gz; --chromiumV3; --barcodeLength 11; --umiLength 12; --end 3; --debug; --validateMapping; --minScoreFraction 0.8; -p 10; -i Reference/GENCODE_v29_Human_SalmonIndex_0_12_0/; --tgMap Reference/GENCODE_v29_Human.genemap.txt; -o Quantifications/pbmc6_alevin_onecell_UMI12_3Prime/`. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.12.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloadable executable; * Which reference (e.g. transcriptome) was used? GENCODE V29; * Which read files were used? in house from 1CellBio data ; * Which which program options were used? see above command, but I suspect it's the `--end 3` causing issues. **Expected behavior**; No error to be thrown. **Screenshots**; NA. **Desktop (please complete the following information):**; - OS: RHEL ; - Version 7.3. **Additional context**; NA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/334:187,error,error,187,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/334,4,"['down', 'error']","['downloadable', 'downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both likely.; **Describe the bug**; Trying to build the new pufferfish index format, I receive a memory allocation error near the end of the index build process. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.99.0 beta1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded from Github release; * Which reference (e.g. transcriptome) was used?; gencode v25 with some ""extra"" stuff added - mainly introns for each unprocessed transcript.; * Which read files were used?; None; * Which which program options were used?; -p 8 (though I've used the default as well). **Expected behavior**; I expected the indexing process to complete. **Screenshots**; [pisces_bug.log](https://github.com/COMBINE-lab/salmon/files/3692191/pisces_bug.log). **Desktop (please complete the following information):**; - OS: Linux; - Version RHEL7; **Additional context**. I'm attempting to build an index that's quite large, and am very excited to try the new pufferfish graph-based index. Please let me know how I can help out - if it would be useful I can try to build the index using your standalone library as well.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/432:201,error,error,201,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/432,3,"['Down', 'down', 'error']","['Downloaded', 'downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both.; salmon index. **Describe the bug**; I want to build a murine index fo use Alevin later with a Chromium dataset. I downloaded the relevant files from Gencode, and followed the instructions at https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; It runs fine until:. index_decoys/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:68719476736; Pass Filling Filtering; 1 208; Error: Found an invalid character 'I' in sequence chr9; Segmentation fault. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.2.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded the executable. * Which reference (e.g. transcriptome) was used?; gencode.vM25.transcripts.fa.gz; GRCm38.primary_assembly.genome.fa.gz. grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat gencode.vM25.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. Ubuntu 20.04 LTS. **Additional context**; I understand that the problem seems to come from the genome. However, salmon should perhaps have a way to handle that.; In any case, seg fault are not ideal. Thank you for your great piece of kit though. Life saver for me since I cannot use Cellranger.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/521:207,down,downloaded,207,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/521,6,"['Down', 'Error', 'down', 'fault']","['Downloaded', 'Error', 'downloaded', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk mode. **Describe the bug**; We uses salmon with ver 0.8 in the beginning, later on we found that it could updated to the latest version. Then after we updated it through conda, the quantify amount was reduced from 200+ to 39. **To Reproduce**; `salmon index -t test.transcripts.fa -i test_index --type puff -k 31 ; salmon quant -l A -i test_index -g annotation.gtf -r test.ccs.fq.gz -z -o test > test.sam`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.8.1 to 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; through bioconda ; * Which reference (e.g. transcriptome) was used?; transcriptome. **Expected behavior**; what is the different between these two versions? We expected that the result would not have such different like this. And we don't know which one is more accurate. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/47863838/85987901-de542e00-ba20-11ea-916a-fe90ca18586f.png). ![image](https://user-images.githubusercontent.com/47863838/85986442-d4c9c680-ba1e-11ea-9b98-140559ee0149.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu Linux.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/542:655,down,downloaded,655,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/542,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is in alevin, single-cell mode. **Describe the bug**; The log shows that there are at least 50% percent reads has been thrown away, and the mapping rate was between 18.7%-19.1%. **To Reproduce**; Steps and data to reproduce the behavior:; Reference was indexed using transcripts without decoy, and command line parameters are described below; The genome was not published so I can't share with you that, and I'm sorry with that. Specifically, please provide at least the following information:; * Which version of salmon was used? ; salmon 1.4.0. * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Bioconda. * Which reference (e.g. transcriptome) was used? ; The reference genome is sequenced by ourselves, and it's a plant. Reference was indexed using transcripts without decoy. * Which read files were used?; my reads layout is paired end 150bp; Will the 150bp reads affect the pipeline, and if it will, how can I make it to 28bp R1 and 91bp R2, which is identical to cellranger makefastq output.; > R1: ; @A00582:424:HJYLGDSXY:3:1101:1090:1000 1:N:0:ACCGGCTC; TAACCAGGTCGAGTGAGTATTTAAGGCGCGCGGCGCACCAACGCACTCCCAACAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; > +; FFFFFFFFFFFFFFFFFFFFFFFFFFFF,,:,,FF:,,,::FF,,:F,,,,,,F:,,,:,::FF::::::,FFF:F:FF:FFFFFFF::FF::FF,F:F:FF:F,FFFF,:FF,FFFFF:,FF:::FF:FFF:FF:FF:FFFFFFFFFF:; > R2:; @A00582:424:HJYLGDSXY:3:1101:1090:1000 2:N:0:ACCGGCTC; NCCTAGAAGCAGCCACCCTTGAAAGAGTGCGTAATAGCTCACTGATCGAGCGCTCTTGCGCCGAAGATGAACGGGGCTAAGCGATCTGCCGAAGCTGTGGGATGTAAAAATACATCGGTAGGGGAGCGTTCCGCCTTAGAGAGAAGCCTC; > +; #FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFF::FFFFFFFFFF:FFFFFFFFFFFFF:FFFFFF:FFFFFFF:. * Which which program options were used?; `salmon alevin -l ISR -1 ../clean/sample_S1_L001_R1_001.fastq -2 ../clean/sample_S1_L001_R2_001.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/620:674,down,downloaded,674,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is related to salmon when used after umi tools deduplication. **Describe the bug**; Once deduplicated the bams with umi_tools (and previously sorted by coordinates) salmon gives the following warning: WARNING: Detected suspicious pair ---; The names are different:; read1 : XXXXXXXXX-YYYY:YYYY; read2 : XXXXXXXXX-ZZZZ:ZZZZ. **To Reproduce**; The used code is the following:. ""salmon_version"": ""1.10.1"",; ""targets"": ""../index/hg38/salmon/gencode.v45.transcripts.fa"",; ""libType"": ""A"",; ""seqBias"": [],; ""gcBias"": [],; ""posBias"": [],; ""threads"": ""16"",; ""dumpEq"": [],; ""numBootstraps"": ""50"",; ""alignments"": ""/media/storage/work/iiglesia/rnaseq/RESULTS/BAM_STAR_dedup/17932763_S28_Aligned_dedup.sorted.bam"",; ""output"": ""./aligned_salmon/17932763_S28"",; ""geneMap"": ""../index/hg38/salmon/mart_export.txt"",; ""gencode"": [],. When I have treid to use the same sample without deduplication and sorting salmon works good. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.v45.transcripts.fa; * Which read files were used? BAM files; * Which which program options were used? it can be seen above. **What I expect**; I want to know how could I use salmon after umi_tools or to account for UMI deduplication. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version: 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/930:1147,down,downloaded,1147,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/930,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It occurs when I run Salmon. **Describe the bug**; When I try to index I get an error; ```; [2021-03-30 14:29:34.670] [puff::index::jointLog] [error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character.; ```; I asked for advice, and it was suggested that two entries in the fasta file had the same name. I tried loading all of the entry names into a computing language, and check that the number of unique names was identical to the total number (suggesting that this wasn't the case). **To Reproduce**; I required to re-run some RNA seq mapping from someone who left the lab, and gave me this script (I've asked them, they did not really know what got wrong). ```; conda create --name rnaseq -c bioconda salmon; conda activate rnaseq; conda install -c conda-forge -c bioconda salmon=1.4.0; mkdir -p reference . # reference genome; wget -O reference/genome.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_genomic.fna.gz. # reference Transcriptome; wget -O reference/transcripts.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_cds_from_genomic.fna.gz. # prepare file with ""decoy"" sequences; zcat reference/genome.fa.gz | grep ""^>"" | cut -d "" "" -f 1 | sed -e 's/>//g' > reference/decoys.txt. # concatenate the two; cat reference/transcripts.fa.gz reference/genome.fa.gz > reference/gentrome.fa.gz. # Try to create index, this gives problems; salmon index -t reference/gentrome.fa.gz -d reference/decoys.txt -p 12 -i salmon_index --gencode -k 31; ```. The last one gives an error:; ```; Version Info: This is the most recent version of salmon.; [2021-03-30 14:29:34.652] [jLog] [info] building index; out : salmon_index; [2021-03-30 14:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/642:166,error,error,166,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642,2,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Neither, it's related to compilation. **Describe the bug**. While trying to compile the project I get the following error:; ```; $ make; [ 6%] Built target libcereal; [ 12%] Built target libdivsufsort; [ 18%] Built target liblzma; [ 23%] Built target libbz2; [ 29%] Built target libgff; [ 29%] Performing build step for 'libstadenio'; Making all in io_lib; Making all in progs; libtool: link: /usr/bin/cc -o convert_trace convert_trace.o ../io_lib/.libs/libstaden-read.a -lm -lpthread -llzma -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xf03): warning: the use of `tempnam' is dangerous, better use `mkstemp'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_huff':; compression.c:(.text+0xc0): undefined reference to `deflateInit2_'; compression.c:(.text+0x13b): undefined reference to `deflate'; compression.c:(.text+0x181): undefined reference to `deflateEnd'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_dehuff':; compression.c:(.text+0x2f7): undefined reference to `inflateInit_'; compression.c:(.text+0x371): undefined reference to `inflate'; compression.c:(.text+0x3b4): undefined reference to `inflateEnd'; collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libst",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:202,error,error,202,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No. **Describe the bug**; I ran `salmon quant` and the `lib_format_counts.json` file that was produced contained a `NaN` value which is not valid JSON. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.9.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. From our dockerfile:; ```; # Install Salmon; ENV SALMON_VERSION 0.9.1; RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; RUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # Create soft link `/usr/local/bin/salmon` that points to the actual program; RUN ln -sf `pwd`/Salmon-latest_linux_x86_64/bin/salmon /usr/local/bin/; RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # End Salmon installation.; ```. * Which reference (e.g. transcriptome) was used?. One we prepared. We got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/279:447,down,downloaded,447,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279,2,['down'],"['download', 'downloaded']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Related to Salmon. **Describe the bug**; my transcript file has a total of 119032 records:. [gao@bio reference]$ grep -c "">"" GRCm38.vM11.transcripts.ercc.Tg.fa; 119032. However, my salmon output has 117509 records:; [gao@bio KM25_salmon_quant.originalData.k21]$ wc -l quant.sf; 117509 quant.sf. How should I explain this?; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? ; I used salmon 0.13.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed on HPC; * Which reference (e.g. transcriptome) was used?; Mouse transcriptome; * Which read files were used?; RNAseq files; * Which which program options were used?; command line:. salmon quant -p 8 -i /data/Re-analysis/SalmonRun/reference/GRCm38.vM11.transcripts.ercc.Tg.fa.k21.index -g /data/Re-analysis/Salmon-Run/reference/tx2gene.gencode.v27.tabbed.csv --seqBias --gcBias -l A -1 read1.fastq.gz -2 read2.fastq.gz -o /data/Re-analysis/Salmon-Run/quant-output-co; rrected/KM25_salmon_quant.originalData.k21. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; HPC computing cluster; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/378:634,down,downloaded,634,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/378,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Running make inside build after doing ""cmake"" against the source directory. . **Describe the bug**; A clear and concise description of what the bug is.; Unable to compile this file with gcc-4.9.2 and cmake 3.11.1; **To Reproduce**; Steps and data to reproduce the behavior:; Following steps as specified in guide. Assigning prefix to point to different installation directory and have tried passing in boost location and telling cmake to fetch boost but both result with the same error. . Specifically, please provide at least the following information:; `[ 91%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:47: error: parameter declared ‘auto’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalcul",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:566,error,error,566,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (build mode). **Describe the bug**; A clear and concise description of what the bug is. From salmon output: ""validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35"". When passing the --validateMappings flag without an explicit consensus slack, the program says that a 0.2 value is implied for the consensus salck, but then proceeds to set a different value. **To Reproduce**; Steps and data to reproduce the behavior:; Pass --validateMappigngs without explicit consensusSlack; Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.3.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? Mouse gencode M25; * Which read files were used? Internal experiment; * Which which program options were used?. salmon quant \; --index=$index \; --threads=12 \; --validateMappings \; --gcBias \; --posBias \; --seqBias \; --libType=A \ (ISR was detected, which is correct); -1 ""${R1[$i]}"" \; -2 ""${R2[$i]}"" \; --numBootstraps=30 \; --output=$outdir ;. **Expected behavior**; A clear and concise description of what you expected to happen. The default consensusSlack and the value that is set when it is not explicitly provided should be the same value. **Desktop (please complete the following information):**; ProductName:	Mac OS X; ProductVersion:	10.15.7; BuildVersion:	19H2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/587:754,down,downloaded,754,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/587,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk mode); **Describe the bug**; A clear and concise description of what the bug is.; Salmon fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:223,recover,recoverOrphans,223,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,3,"['error', 'recover']","['error', 'recoverOrphans']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk); **Describe the bug**; I have a Illumina TruSeq Stranded Ribozero library and when I use salmon with -l A, it detects the libraries as either ISF or IU (for different indexes). The mapping rate is about 50-75% per index. However, as I understand it, Illumina TruSeq stranded libraries are supposed to be ISR? When I use -l ISR, i get much lower mapping rates so I'm a bit confused. Am I wrong about the library type for TruSeq Stranded, or is there a mistake in the Salmon docs? . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Latest (0.14.1); * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda, using a Snakemake workflow (ARMOR, from Mark Robinson's lab); * Which reference (e.g. transcriptome) was used?; Arabidopsis thaliana, from ensembl; * Which read files were used?; * Which which program options were used?; salmon (mapping-based) v0.14.1; [ program ] => salmon; [ command ] => quant; [ index ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/reference/SalmonIndex/Arabidopsis_thaliana }; [ libType ] => { ISR }; [ mates1 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R1.fastq.gz }; [ mates2 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R2.fastq.gz }; [ output ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/output/salmon/12-0-rve-30-3 }; [ numBootstraps ] => { 100 }; [ seqBias ] => { }; [ gcBias ] => { }; [ validateMappings ] => { }; [ ] => { o--fldMean }; [ ] => { 250 }; [ fldSD ] => { 25 }; [ threads ] => { 7 }. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version ; **Additional context**; Add any o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/393:800,down,downloaded,800,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/393,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon index; **Describe the bug**; Hi,; I have tried a big reference file before and It was succesfully created. Now, I am getting the following error. My index file is relatively big, ~2G. I could not solve the problem. I also increased CPU to 36. Log:; ````; [2023-03-15 20:10:48.957] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-15 20:10:48.968] [jLog] [info] building index; out : illerney.index; [2023-03-15 20:10:48.990] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; ^M^Mcounted k-mers for 10000 transcripts^M^Mcounted k-mers for 20000 transcripts^M^Mcounted k-mers for 30000 transcripts^M^Mcounted k-mers for 40000 transcripts^M^Mcounted k-mers for 50000 transcripts^M^Mcounted k-mers for 60000 transcripts^M^Mcounted k-mers for 70000 transcripts^M^Mcounted k-mers for 80000 transcripts^M^Mcounted k-mers for 90000 transcripts^M^Mcounted k-mers for 100000 transc; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-15 20:12:01.773] [puff::index::jointLog] [info] Clipped poly-A tails from 28 transcripts; wrote 4224924 cleaned references; [2023-03-15 20:12:12.984] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2023-03-15 20:12:29.921] [puff::index::jointLog] [info] ntHll estimated 1872745301 distinct k-mers, setting filter size to 2^35; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 34359738368; Capacity = 2; Files:; illerney.index/ref_k31_fixed.fa; --------------------------------------------------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/837:232,error,error,232,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Only `u` (unmapped) reads are labelled in the `aux_info/unmapped.txt` file, even when the log file indicates that many fragments were discarded because they are best-mapped to decoys. . **To Reproduce**. This GitHub repository details the motivation and full workflow of my pipeline: https://github.com/greenelab/2022-microberna/. To get the read files, I ran:; ```; rule rnaseq_sample_download:; output:; reads=""outputs/rnaseq_fastp/{sra}.fq.gz"",; json = ""outputs/rnaseq_fastp/{sra}.fastp.json"",; html = ""outputs/rnaseq_fastp/{sra}.fastp.html""; params: tmp_base = lambda wildcards: ""inputs/tmp_raw/"" + wildcards.sra; threads: 1; resources:; mem_mb=8000; run:; row = m.loc[m['experiment_accession'] == wildcards.sra]; fastqs = row['fastq_ftp'].values[0]; fastqs = fastqs.split("";""); if len(fastqs) == 1:; # single end data; download and stream directly to fastp for trimming.; fastq = fastqs[0]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + "".fastq.gz""):; shell(""wget -O {params.tmp_base}.fastq.gz ftp://{fastq}""). shell(""fastp -i {params.tmp_base}.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {output.reads}""). # check that the file exists, and if it does, remove raw fastq files; if os.path.exists(output.reads):; os.remove(params.tmp_base + "".fastq.gz""). else:; # paired end data; download both files, interleave, and then remove files; fastq_1 = fastqs[0]; fastq_2 = fastqs[1]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + ""_1.fastq.gz""):; shell(""wget -O {params.tmp_base}_1.fastq.gz ftp://{fastq_1}""). if not os.path.exists(params.tmp_base + ""_2.fastq.gz""):; shell(""wget -O {params.tmp_base}_2.fastq.gz ftp://{fastq_2}""). shell(""fastp -i {params.tmp_base}_1.fastq.gz -I {params.tmp_base}_2.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:940,down,download,940,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['down'],['download']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/845:126,failure,failure,126,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845,7,"['Error', 'down', 'error', 'failure']","['Error', 'downloaded', 'error', 'failure']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon; **Describe the bug**; `419663 Segmentation fault (core dumped) `; **To Reproduce**; Steps and data to reproduce the behavior:; Code ran:; `salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant`. Specifically, please provide at least the following information:; * Which version of salmon was used? 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? module installed on HPC; * Which reference (e.g. transcriptome) was used? gencode.v44.transcriptome (Human); * Which read files were used? bam; * Which program options were used? salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant output.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Server Response: Not Found; # salmon (alignment-based) v1.10.2; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ threads ] => { 24 }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { U }; # [ alignments ] => { 007_D14_transcript.bam 007_D1_transcript.bam 014_D14_transcript.bam 014_D1_transcript.bam 069_D14_transcript.bam 069_D1_transcript.bam 127_D14_transcript.bam 127_D1_transcript.bam 36S_D14_transcript.bam 36S_D1_transcript.bam SCTI_D14_transcript.bam SCTI_D1_transcript.bam SCTI_D1_2000ng_transcript.bam ioGLUT_D7_transcript.bam ioMGL_D10_transcript.bam }; # [ output ] => { /scratch/prj/ppn_microglia_m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:137,fault,fault,137,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,2,"['down', 'fault']","['downloaded', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; The bug is related to building the index by combining genome and transcriptome reference. **Describe the bug**; [salmon_index.err.log](https://github.com/COMBINE-lab/salmon/files/3801633/salmon_index.err.log). **To Reproduce**; Steps and data to reproduce the behavior: Reproducing the [Selective Alignment](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) tutorial. * Which version of salmon was used?; 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded Linux executable from GitHub; * Which reference (e.g. transcriptome) was used?; gencode.vM23.transcripts.fa.gz and GRCm38.primary_assembly.genome.fa.gz; * Which which program options were used?; `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index`. **Desktop (please complete the following information):**; - OS: Linux; - Version: Ubuntu 16.04. **Additional context**; When installed via bioconda the salmon index command finishes with no error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/441:559,down,downloaded,559,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/441,3,"['down', 'error']","['downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; The issue existed in both bulk and single-cell mode. **Describe the bug**; When using Salmon to quantify non-redundant (NR) genes in metagenomic datasets, the generated output is missing a summary for nucleotide IDs that correspond to multiple sequences. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Merging quantifications with Salmon:; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; 2. Searching for a specific gene ID in the quantification file:; grep ""k141_1346622_1"" temp/salmon/L1EHI0900465--Q_S1_N6.quant/quant.sf; # Multiple lines are found for this gene ID; 3. Searching for the same gene ID in the resulting TPM file:; grep ""k141_1346622_1"" result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; #No results are found, which is unexpected. <img width=""1166"" alt=""截屏2024-01-30 21 56 23"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/b77e5aa4-aadc-4a17-bdde-b998ce14d72c"">; <img width=""1056"" alt=""截屏2024-01-30 21 55 28"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/877cfa9b-0484-4937-87b2-e987679e09e3"">. Specifically, please provide at least the following information:. * Which version of salmon was used? salmon 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon -y; * Which reference (e.g. transcriptome) was used? metagenome data; * Which read files were used? L1EHI0900465--Q_S1_N6.quant/; * Which which program options were used?; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM. **Expected behavior**; A clear and concise description of what you expected to happen.; I hope to keep all the gene IDs and for those who contains more than one line, take average values for each gene ID. . **Screenshots**; If applicable, add screenshots or terminal output to he",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/910:195,redundant,redundant,195,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/910,1,['redundant'],['redundant']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This bug is generated from Salmon. **Describe the bug**; To use Salmon, I installed windows subsystem for Linux (WLS), then newest Ubuntu, Anaconda, bioconda, and finally Salmon (via Bioconda) on my PC. However, when I run any order (making index or do quant), I get this error message:. salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). I checked what this means and thought this is because this Ubuntu may not have GLIBC C++ library, so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded e",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/927:358,error,error,358,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This is related to salmon. **Describe the bug**; When building Salmon 1.10.3 from source, I'm seeing the following error.; ```; [ 63%] Building CXX object src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o; In file included from /usr/include/pthread.h:33,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr-default.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr.h:148,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ext/atomicity.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/ios_base.h:39,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:201,error,error,201,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This is relevant to salmon.; **Describe the bug**; I have been trying to run the salmon quant commando and have kept running into the following error:; Exception : [Error: The index version file salmon_index_gencode_vM25/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; bad ; After going through some of the previous complaints, I figured that there was a bad memory allocation while creating the index. I increased the memory allocation which seems to have solved the indexing problem (please see attached the output from the indexing run). The memory allocation was as below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/rel",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/561:230,error,error,230,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561,3,"['Error', 'error']","['Error', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; `salmon`. **Describe the bug**; Running `salmon quant` through my SLURM cluster consistently segfaults. I've attempted runs on `m4.2xlarge` & `m4.8xlarge` worker nodes. `Aug 16 19:38:23 ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a ip 00007fe2fcdc2dca sp 00007fff27128b90 error 4 in libtbb.so.2[7fe2fcda0000+37000]`. **To Reproduce**; * Which version of salmon was used?; * `salmon 0.9.1`; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Installed through conda; * `conda create -y --name salmon@0.9.1 bzip2=1.0.6 salmon=0.9.1 seqtk=1.2`; * Which reference (e.g. transcriptome) was used?; * `ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz`; * Which read files were used?; * `ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/009/SRR1039509/SRR1039509_1.fastq.gz`; * Which program options were used?; ```; {; ""salmon_version"": ""0.9.1"",; ""index"": ""./index"",; ""libType"": ""U"",; ""unmatedReads"": ""./single.fastq"",; ""output"": ""./output"",; ""allowOrphansFMD"": [],; ""threads"": ""8"",; ""incompatPrior"": ""1e-20"",; ""biasSpeedSamp"": ""1"",; ""fldMax"": ""1000"",; ""fldMean"": ""200"",; ""fldSD"": ""80"",; ""forgettingFactor"": ""0.65"",; ""maxOcc"": ""200"",; ""maxReadOcc"": ""100"",; ""numBiasSamples"": ""2000000"",; ""numAuxModelSamples"": ""5000000"",; ""numPreAuxModelSamples"": ""1000000"",; ""numGibbsSamples"": ""0"",; ""numBootstraps"": ""0"",; ""vbPrior"": ""0.001"",; ""auxDir"": ""aux_info""; }; ``` . **Expected behavior**; For `salmon quant` to run to completion. **Desktop (please complete the following information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:382,error,error,382,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,2,"['down', 'error']","['downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:363,error,error,363,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,4,"['down', 'error']","['download', 'downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; When using the `--whitelist` flag the option `--dumpCsvCounts` does not seem to work. **To Reproduce**; Salmon version 0.13.1 from Bioconda. `salmon alevin -l ISR -i ../salmon/index/ -1 R1_file -2 R2_file -o out_dir/ --tgMap ../salmon/txp2gene.tsv -p 20 --chromium --whitelist whitelist.txt --dumpFeatures --dumpCsvCounts`. I have a very problematic sample where the knee autodetection fails (way too high cell number). So I created a whitelist of the 5000 most frequent entries of the filtered_cb_frequency.txt. It seems to work as expected, but the quants_mat.csv is not created, which I need for further downstream analysis (Seurat). The quant_mat.gz is created though, is there a way to manually create a .csv from this file (it seems to be binary).; Thanks. P.S.: The alevin logs seem to contain some non-standard characters when the number of ""Barcodes used"" should be printed (maybe because of the colour highlighting?). **Expected behavior**; quants_mat.csv of the whitelisted cells should be created. **Logs**; ```; [2019-05-17 07:28:11.279] [alevinLog] [info] Processing barcodes files (if Present) . ; [2019-05-17 07:39:15.712] [alevinLog] [info] Done barcode density calculation.; [2019-05-17 07:39:15.712] [alevinLog] [info] # Barcodes Used: [32m346967519[0m / [31m347069857[0m.; [2019-05-17 07:39:15.731] [alevinLog] [info] Done importing white-list Barcodes; [2019-05-17 07:39:15.732] [alevinLog] [info] Total 4000 white-listed Barcodes; [2019-05-17 07:39:16.050] [alevinLog] [info] Done populating Z matrix; [2019-05-17 07:39:16.112] [alevinLog] [info] Done indexing Barcodes; [2019-05-17 07:39:16.112] [alevinLog] [info] Total Unique barcodes found: 3968995; [2019-05-17 07:39:16.112] [alevinLog] [info] Used Barcodes except Whitelist: 80709; [2019-05-17 07:39:16.858] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-05-17 07:39:16.868] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/363:723,down,downstream,723,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/363,1,['down'],['downstream']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; A clear and concise description of what the bug is.; I am running the following command on some sci-rna-seq3 samples and it seems to not work as expected. ; `salmon alevin -i af_splici/dm6_splici_idx/ -l ISR -1 data/SRR17122012_1.fastq -2 data/SRR17122012_2.fastq -o SRR17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/813:585,error,error,585,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813,2,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; I got reasonable cell barcode when I worked with 10X cellranger, I just got very few cell barcode when I use alevin. I don't have problem with 10X V3 data when I use alevin. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; ![image](https://github.com/user-attachments/assets/287e4955-ca55-4767-99a8-299c100b667f). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/949:492,down,downloaded,492,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/949,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; both. **Describe the bug**; I have Ubuntu 22.04.4 LTS. The conda version I have is 23.3.1. After I followed ""Get Started"", I installed salmon by the command ""conda create -n salmon salmon"". Everything looks fine so far. conda activate salmon. salmon -h; salmon: error while loading shared libraries: libboost_iostreams.so.1.60.0: cannot open shared object file: No such file or directory. Any help with this problem will be highly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/915:348,error,error,348,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/915,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be writte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:281,fault,fault,281,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,4,"['down', 'error', 'fault']","['downloaded', 'error', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; We have 60 samples made from very low RNA inputs (cell captures) so the libraries were made with Ovation Solo RNAseq kit from Tecan. 150 PE. One of the sample finished fine (but mapping rate 21%) but our nextflow pipeline crashed on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/668:749,recover,recoverOrphans,749,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668,1,['recover'],['recoverOrphans']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; in Salmon bulk mode, while using the following commands to create an index:; A. Ingredients preparation:; grep ""^>"" genome.fa | cut -d "" "" -f 1 > ./decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Gencode_transcripts.fa genome.fa > ./gentrome.fa; B. index building:; salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode; **Describe the bug**; I got the following bug/error message:; Version Info: This is the most recent version of salmon.; salmon.sh: line 23: 37339 Illegal instruction (core dumped) salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode. Specifically, I was using the following version and files/options:. * Salmon 1.0.0; * through bioconda?; conda update salmon; * gencode.v27.transcripts.fa; * default. Any help to fix this bug would be appreciated!. Kind regards,; Jamal.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/458:476,error,error,476,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/458,1,['error'],['error']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (buik mode). **Describe the bug**; A clear and concise description of what the bug is.; I compiled the code (salmon v1.4.0) and produced the executable. Then when I try to ""salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode"" (transcriptome and genome from your tutorial: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/), a segmentation fault occurs. (gdb backtrack is provided below.). **To Reproduce**; Steps and data to reproduce the behavior:. 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /cmake version 3.13.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoy",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:479,fault,fault,479,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,1,['fault'],['fault']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode) . **Describe the bug**; salmon fails to map gene to transcript id despite given GTF or tx2id file as properly required.; I also used `grep` on both tx2id file and quant.sf file and both contain the transcript IDs tested. **To Reproduce**; 1. Create index decoys; Followed the steps in [tutorial](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment) ; 2. Create index; `salmon1.4.0/salmon-latest_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode -p 40`; 3. Run ; `salmon1.4.0/salmon-latest_linux_x86_64/bin/salmon quant -l A -1 <(zcat S1_1.fastq) -2 <(zcat S1_2.fastq) -o output -i salmon_index -g transcript_to_id_mm10`. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary; * Which reference (e.g. transcriptome) was used? mm10, Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; * Which read files were used? 125-bases PE RNA-seq samples; * Which which program options were used? `-l A` and `-g`. **Expected behavior**; Transcript ID should be found, translated into GeneSymbol and used for gene-level abundance.; Instead the program fails to find transcript ID even though it exists exactly as expected. **Screenshots**; etc. For all genes.; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082416.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082417.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082418.1] in transcript <-> gene map; returning transcript as it's own gene`. **Desktop (please complete t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/607:936,down,downloaded,936,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/607,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; Segmentation fault error when running salmon quant. **To Reproduce**; Steps and data to reproduce the behavior:; Inconsistent behaviour, sometimes quant.sf files are generated, sometimes not. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:194,fault,fault,194,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,3,"['down', 'error', 'fault']","['downloaded', 'error', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; after following tutorial step by step from the following website:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. with the following files ; GRCm39.primary_assembly.genome.fa.gz; gencode.vM28.transcripts.fa.gz. I get the following error . Exception : [Device or resource busy: 'salmon_index/twopaco_tmp']; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting. **To Reproduce**; Steps and data to reproduce the behavior:; create the files:; decoys.txt; gentrome.fa.gz. and put them in salmonDecoy directory ; and run:; salmon index -t salmonDecoy/gentrome.fa.gz -d salmonDecoy/decoys.txt -p 12 -i salmon_index --gencode. Specifically, please provide at least the following information:; * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?; I used a linux machine with conda salmon env ; salmon version: salmon 1.8.0. **Expected behavior**; create index for salmon . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/767:385,error,error,385,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/767,2,"['down', 'error']","['downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode); **Describe the bug**; I did a lot of independent RNAseq libs recently and all came out with the identical frag_length mean and sd (see below). This surprised me greatly as while the libraries looked consistent on a tapestation, I would not expect them to be this consistent down to >7 decimal places. Also it is unclear how I can access fld.gz to see the raw data. MultiQC only shows me one distribution (for ; ```Sample: Gam_0h_rep1A_RL5382_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_0h_rep2A_RL5383_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_0h_rep3A_RL5403_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_37C_rep1_RL5385_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_37C_rep2_RL5386_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_37C_rep3_RL5406_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_4C_rep1_RL5387_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_4C_rep2_RL5388_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_4C_rep3_RL5407_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep1_RL5384_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/948:380,down,down,380,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948,1,['down'],['down']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode); **Describe the bug**; The contents of the quant.genes.sf file and the quant.sf file are identical. The file quant.genes.sf should have been the results of genes quantification, but now it is all transcript quantification. I.e., the file quant.genes.sf is exactly the same as quant.sf (only the transcript names corresponding to the Name column are in a different order). **To Reproduce**; * Which version of salmon was used?; * 1.10.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * bioconda; * Which reference (e.g. transcriptome) was used?; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.109.gtf \; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.dna.primary_assembly.fa \; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.cdna.all.fa. * My options ：; * generate decoys.txt:; grep ""^>"" < /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.dna.primary_assembly.fa | cut -d "" "" -f 1 > \; /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt; sed -i.bak -e 's/>//g' /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt; cat /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.cdna.all.fa \; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.dna.primary_assembly.fa > \; /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa. * salmon index; /home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon index \; --transcripts /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa \; --kmerLen 31 \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --decoy /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt \; --keepDuplicates \; --threads 50. */home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon quant \; --libType A \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --unmatedReads /cold_data/zhaojiaxin/long_read/GRM/upstream-analysis/trim_polya/GRM/ONT_GRM_R01/ONT_GRM_R01.full_length.trim_polyA.filter.fasta \; --output /c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/962:580,down,downloaded,580,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/962,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon quant. **Describe the bug**; --gencode used with salmon quant does not result in correct handling of of multi-label headers in gencode reference files. Resulting in errors and failure to estimate counts when using gencode transcriptome for alignment. Now for every reference header error is output: ; ```; [2021-06-15 00:15:36.623] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment; ```. **To Reproduce**; Steps and data to reproduce the behavior:. align reads to transcriptome using minimap2 to generate BAM file. Use of salmon to estimate transcript counts using ONT specific flags. ```; salmon-1.5.1_linux_x86_64/bin/salmon quant --ont --gencode -p 4 -t Genome_files/gencode.vM24.transcripts.fa -l U -a Documents/Day2_03_DRS_pass.bam -o Documents/counts/Day2_03_DRS_pass; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary downloaded from github; * Which reference (e.g. transcriptome) was used? gencode.M24.transcriptome.fa; * Which read files were used? direct RNA sequences from MinION platform ; * Which which program options were used? see above. **Expected behavior**; Expect that salmon splits the header from gencode reference and takes first part of the header and uses in output files for transcript estimatation. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/671:258,error,errors,258,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/671,5,"['down', 'error', 'failure']","['downloaded', 'error', 'errors', 'failure']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon(bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; While setting -DCMAKE_BUILD_TYPE=Debug, ; ""make"" command failed at ; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:322,error,error,322,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,4,"['Error', 'error']","['Error', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; A clear and concise description of what the bug is. I had an older version of salmon that works (v0.8.2) that I believe was not compiled with Bioconda. I am now trying to get the latest version through Bioconda and with the same ""salmon quant"" command (See below) that works on the old version, I get a ""segmentation fault 11"" error and it never actually quantifies any reads. Do you know why this would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:433,fault,fault,433,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,3,"['down', 'error', 'fault']","['downloaded', 'error', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; Errors compiling salmon in spack with cmake. **To Reproduce**; `spack install salmon`. Specifically, please provide at least the following information:. * Which version of salmon was used?: 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?: through spack, that downloads source; * Which reference (e.g. transcriptome) was used?: none, the error is during compilation; * Which read files were used?: none; * Which which program options were used? `RELEASE`. **Expected behavior**; Program would compile correctly. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]: linux x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]:; ```; Linux pablo-ThinkPad-T14-Gen-3 5.19.0-50-generic #50-Ubuntu SMP PREEMPT_DYNAMIC Mon Jul 10 18:24:29 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.2 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; During the update of the spack package for salmon we found `hts` is needed, and cmake could not find the module. We are wondering if you want/plan to use this by default. https://github.com/spack/spack/pull/39202/commits/c3357a64a9697be4058feb555a2c4e4138793f17",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/866:116,Error,Errors,116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/866,5,"['Error', 'avail', 'down', 'error']","['Errors', 'available', 'downloaded', 'downloads', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; It appears that when I run the quant command it gets up to the ""loading dense pufferfish index"" but stop after loading positions. So I think that it isn't even getting to the quantification step because it doesn't finish loading the index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; *v.1.5.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * through bioconda; * Which reference (e.g. transcriptome) was used?; * ; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen.; I would expect it to continue to ""loading reference sequence"" etc., then display done and continue with the quantification; **Screenshots**; ![image](https://user-images.githubusercontent.com/85455566/120937098-82d2fb80-c6d9-11eb-9aea-a2935ccc1e50.png). **Desktop (please complete the following information):**; Ubuntu Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; I'm pretty new to linux and salmono it is likely that my problem is due to some simple misunderstanding of how the program works, but any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/667:621,down,downloaded,621,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; The cDNA fasta file contains 176241 ENSTs,but the result file only contains 166667 ENSTs.; **To Reproduce**; Steps and data to reproduce the behavior:; The steps and data are as follows. ; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.9.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used? ; Homo_sapiens.GRCh38.cdna.all.fa obtained from Ensembl release 83; * Which read files were used? ; GSE41009; * Which which program options were used? ; Building index: salmon index -t filepath/Homo_sapiens.GRCh38.cdna.all.fa -i V83-homo_index --type quasi -k 31; Quantification: salmon quant -p 50 -i filepath/V83-homo_index -l IU -1 ESC-SRR574820_1.fastq ESC-SRR574821_1.fastq -2 ESC-SRR574820_2.fastq ESC-SRR574821_2.fastq -o ESC-quantification. **Expected behavior**; A clear and concise description of what you expected to happen.; The result file should contain all the ENSTs existed in cDNA fasta file.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; uname -a; Linux mn1 2.6.32-431.29.2.2.ky3.1.x86_64 #1 SMP Thu Sep 25 10:15:09 CST 2014 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	NeoKylin; Description:	NeoKylin release 3.2 (Carambola); Release:	3.2; Codename:	Carambola; **Additional context**; Add any other context about the prob",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/255:506,down,downloaded,506,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255,2,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon 1.1.0 and 1.0.0 core-dump when attempting to build an index under Ubuntu 18.04 LTS; **To Reproduce**; Steps and data to reproduce the behavior:; ```; root@firefly:/usr/local/src/salmon# salmon-1.1.0_linux_x86_6/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: This is the most recent version of salmon.; [2020-04-07 21:11:41.237] [jLog] [info] building index; out : index; [2020-04-07 21:11:41.240] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; Illegal instruction (core dumped). root@firefly:/usr/local/src/salmon# salmon-0.14.1_linux_x86_64/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; [2020-04-07 21:12:14.575] [jLog] [info] building index; [2020-04-07 21:12:14.580] [jointLog] [info] [Step 1 of 4] : counting k-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit su",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/500:945,avail,available,945,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500,2,['avail'],['available']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon quant is leading to segmentation fault when `--skipQuant` flag is set. The behavior may be annotation dependent.; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:209,fault,fault,209,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,3,"['down', 'error', 'fault']","['downloaded', 'error', 'fault']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I used the default parameters to run salmon on mouse sample. But I got the warning:. `Detected a *potential* strand bias > 1% in an unstranded protocol check the file:`. **To Reproduce**; `""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 10869138,; ""num_assigned_fragments"": 10869138,; ""num_frags_with_concordant_consistent_mappings"": 10212463,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1088473,; ""strand_mapping_bias"": 0.5258466052704426,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4842274,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 5370189,; ""SF"": 593930,; ""SR"": 494543,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0`. Specifically, please provide at least the following information:. * Which version of salmon was used? ; ""salmon_version"": ""0.14.1"". * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda. * Which reference (e.g. transcriptome) was used?; gencode mouse VM22. * Which read files were used?. Downloaded from sra（Just ordinary Illumina reads). * Which which program options were used?. ```; salmon quant -i $mm10_whole_index -l A \; -1 $fastq1 \; -2 $fastq2 \; -p 20 --validateMappings -o $output_whole; ```. **Expected behavior**; Why Strand bias is very high?. **Desktop (please complete the following information):**; Linux localhost.localdomain 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/422:923,down,downloaded,923,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/422,2,"['Down', 'down']","['Downloaded', 'downloaded']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I was trying to do salmon quant on multiple bam files together but got the error.; <img width=""1209"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/30546732/45cad092-de37-4e00-a873-6ea46254efbd"">. **To Reproduce**; Steps and data to reproduce the behavior:; `salmon quant -t /Reference/GRCm39_Gencode/GRCm39.fa --libType A --ont -a ./bamfiles/*.bam -o ./salmon_bulk`; Specifically, please provide at least the following information:. * Which version of salmon was used?; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/920:191,error,error,191,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/920,2,"['down', 'error']","['downloaded', 'error']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; When loading a pufferfish index using salmon v1.0 I encounter errors. I've posted to https://github.com/COMBINE-lab/pufferfish/issues/8 with a full description. When running salmon v1.0 using a rather large index, I receive an error raised from the cereal library ""Index requested greater than vector's size"". The log reads:. ```; -----------------------------------------; | Loading contig table | Time = 12.954 s; -----------------------------------------; size = 35010142; -----------------------------------------; | Loading contig offsets | Time = 269.18 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 7.8427 ms; -----------------------------------------; -----------------------------------------; | Loading eq table | Time = 3.3896 s; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 3.8301 s; -----------------------------------------; size = 3567796961; Number of ones: 35010141; Number of ones per inventory item: 512; Inventory entries filled: 68380; -----------------------------------------; | Loading contig boundaries | Time = 11.288 s; -----------------------------------------; size = 3567796961; -----------------------------------------; | Loading sequence | Time = 7.763 s; -----------------------------------------; size = 2517492731; -----------------------------------------; | Loading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>64",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/463:178,error,errors,178,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463,2,['error'],"['error', 'errors']"
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; salmon takes days to process through 16 samples. **To Reproduce**; Tried running on a different computer, same issue. . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda; * Which reference (e.g. transcriptome) was used?; mouse Mus_musculus.GRCm38.cdna.all.fa; * Which read files were used?; fastq; * Which which program options were used?; Various ; the --hitfilterpolicy BOTH was just added following reading another user query to see if that would help. (https://github.com/COMBINE-lab/salmon/issues/527). ```; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { mouse_index1 }; ### [ libType ] => { IU }; ### [ mates1 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_1.trimmed.fastq.gz }; ### [ mates2 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_2.trimmed.fastq.gz }; ### [ threads ] => { 4 }; ### [ hitFilterPolicy ] => { BOTH }; ### [ biasSpeedSamp ] => { 10 }; ### [ output ] => { quants/13_quant }; ```. **Expected behavior**; Not to be so slow.... I've used salmon previously with some SRR datasets and it was very fast, this seems very strange to me . **Screenshots**; ```; [2020-06-13 02:34:43.686] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-06-13 02:34:43.686] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-13 02:34:43.686] [jointLog] [info] parsing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/537:384,down,downloaded,384,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537,1,['down'],['downloaded']
Availability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; yes; **Describe the bug**; A clear and concise description of what the bug is.; I was going though the tutorial https://combine-lab.github.io/alevin-tutorial/2020/alevin-velocity/; using Alevin and scVelo. The filtering with ; scv.pp.filter_genes(adata, min_shared_counts = 30). gives the error bellow. Any advice?; **Error**; R[write to console]: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. R[write to console]: In addition: ; R[write to console]: Warning message:. R[write to console]: call dbDisconnect() when finished working with a connection . ---------------------------------------------------------------------------; RRuntimeError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 168 if reductor:; --> 169 rv = reductor(4); 170 else:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/sexp.py in __getstate__(self); 123 self.__sexp__._cdata,; --> 124 globalenv.__sexp__._cdata); 125 ). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/_rinterface_capi.py in serialize(cdata, cdata_env); 412 if error_occured[0]:; --> 413 raise embedded.RRuntimeError(_geterrmessage()); 414 return res. RRuntimeError: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following ex",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:375,error,error,375,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,3,"['Error', 'error']","['Error', 'error']"
Availability,"**Meta information:**; salmon version: 0.7.2; average length of reads: 50bp; reference sequences to bulid index: A fq file just contain **3′ UTR sequences**. **Selected kmer and result of mapping rate:**; ```; kmer 15：54.0812%; kmer 17：45.4212%; kmer 19：38.8951%; kmer 21：37.8544%; ```. Hi, I'm trying to select a number of kmer to build an index. In some answers, k < l/2 likes 21 is an appropriate value based on experience . In my downstream analysis, I got a good result in a sense based on k=15. However, other k-mer could't return the result I want. . **I wonder whether the significant increase in the mapping rate is due to the correct mapping read rather than the increased false positives.** . Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/462:434,down,downstream,434,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/462,1,['down'],['downstream']
Availability,**The bug is primarily related to salmon (bulk mode)**. **Describe the bug**; After building salmon it segfaults with the example file shipped with the source tarball. The problem is described in detail in the [Debian bug tracking system](https://bugs.debian.org/1028713). While the Debian bug is against version 1.9.0 I can perfectly reproduce the issue with a recent download of version 1.10.0. **To Reproduce**; Steps and data to reproduce the behavior:. Download [your release tarball](https://github.com/COMBINE-lab/salmon/archive/refs/tags/v1.10.0.tar.gz). $ tar xaf v1.10.0.tar.gz; $ cd salmon-1.10.0; # build on Debian testing system; $ cmake -DCMAKE_BUILD_TYPE=Release -DUSE_SHARED_LIBS=TRUE -DBZIP2_LIBRARIES=-lbz2 -DBZIP2_INCLUDE_DIR=/usr/include -DLIBLZMA_INCLUDE_DIR=/usr/include/ -DLIBLZMA_LIBRARY=lzma -DCMAKE_MODULE_PATH=/usr/share/cmake/Modules -DTBB_WILL_RECONFIGURE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not man,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835:369,down,download,369,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835,2,"['Down', 'down']","['Download', 'download']"
Availability,"**The bug is primarily related to salmon (bulk mode)**; **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v0.14.1; # [ program ] => salmon ; # [ command ] => quant ; # [ libType ] => { U }; # [ alignments ] => { Analysis/Quantification/OJ33.sam }; # [ targets ] => { Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas }; # [ output ] => { Analysis/Quantification/OJ33 }; # [ noErrorModel ] => { }; # [ writeUnmappedNames ] => { }; Logs will be written to Analysis/Quantification/OJ33/logs; [2019-08-13 11:13:43.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2019-08-13 11:13:43.563] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Analysis/Quantification/OJ33.sam"", fasta = ""Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas"" . . .done; [2019-08-13 11:13:46.239] [jointLog] [info] replaced 1 non-ACGT nucleotides with random nucleotides. processed 2000000 reads in current roundSegmentation fault (core dumped); ```; # To Reproduce; **Which version of salmon was used?**; salmon 0.14.1; **How was salmon installed (compiled, downloaded executable, through bioconda)?**; downloaded executable; **Which reference was used?**; custom, transcriptom derived from nanopore long-reads using Pinfish pipeline; **Which read files were used?**; SAM file returned by minimap2 (nanopore long reads); **Which which program options were used?**; `salmon quant -l U -a Analysis/Quantification/OJ33.sam -t Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas -o Analysis/Quantification/OJ33 --noErrorModel --writeUnmappedNames > Analysis/Quantification/OJ33.log`; **Desktop (please complete the following information):**; x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/414:1249,fault,fault,1249,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/414,3,"['down', 'fault']","['downloaded', 'fault']"
Availability,"**This question is primarily related to salmon (bulk mode)**. **Describe the problem**; How will Salmon handle if only a fraction of a read maps to a transcript but the rest do not? Ran in to this problematic FastQ file the other day where the first 52 nucleotides where N (see below). Could Salmon handle such fastq files or is trimming needed? What if the first 50 nucleotides ""just"" had very low quality (and thereby were full of errors whereby the did not map to the transcriptome?. **Screenshots**. ![image](https://user-images.githubusercontent.com/23721187/60346555-ac4a5f00-99bb-11e9-94a7-57e3d75654f6.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/390:433,error,errors,433,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/390,1,['error'],['errors']
Availability,"**salmon (bulk mode)**. **Describe the bug**; During salmon quant call, there is a segmentation fault . **To Reproduce**; Steps and data to reproduce the behavior:; * I am hardly able to recreate it myself, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:96,fault,fault,96,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,4,"['down', 'fault', 'recover']","['downloaded', 'fault', 'faulted', 'recoverOrphans']"
Availability,"**tl;dr**: 3-tag sequencing methods for bulk RNA samples contain known sample indices and UMIs and thus resembles sc-RNA-seq read formats. Do you have a recommendation on how to use Salmon and / or Alevin to quantify gene expression for this data type?. Congratulations on the recent [alevin preprint](https://www.biorxiv.org/content/early/2018/10/24/335000)! The new algorithm to deduplicate UMIs looks awesome. I am wondering if you had a recommendation on how to leverage it for 3' tag sequencing of bulk samples. There are a number of protocols that focus on the 3' ends of transcripts to allow for cheap quantification of gene expression, e.g. - [BRB-seq](https://www.biorxiv.org/content/early/2018/01/30/256594); - [Drug-seq](https://www.nature.com/articles/s41467-018-06500-x); - [Quant-seq](https://www.lexogen.com/quantseq-3mrna-sequencing/). These methods combine conventional (known) sample-indices to label samples (or wells) with unique molecular identifiers (UMIs). (I found [one question on this topic](https://github.com/COMBINE-lab/salmon/issues/108) in the salmon issue tracker from back in 2016). Here is the Drug-seq approach, for example:. ![Drug-seq](https://media.springernature.com/lw900/springer-static/image/art%3A10.1038%2Fs41467-018-06500-x/MediaObjects/41467_2018_6500_Fig1_HTML.png). The resulting read data resembles that of single-cell approaches and requires deduplication of UMIs and quantification based on reads with a strong 3' bias. It seems analysis of this data could benefit a lot from the algorithms implemented in Alevin. Can this data be analyzed with Salmon and / or Alevin? Are there any pitfalls that I should be aware off?. Many thanks for any feedback - and thanks again for making these great tools available to the community.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/306:1749,avail,available,1749,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/306,1,['avail'],['available']
Availability,"*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > > >(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&)':; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x73): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::al; locator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x24e): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger,; std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; collect2: error: ld returned 1 exit status; make[2]: *** [src/salmon] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; ```. Do you have any leads?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/570:2454,error,error,2454,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/570,4,"['Error', 'error']","['Error', 'error']"
Availability,", hits per frag: 0.429399[A. [32mprocessed[31m 20,500,000 [32mfragments[0m; hits: 8,800,288, hits per frag: 0.429726[A. [32mprocessed[31m 21,000,001 [32mfragments[0m; hits: 9,016,478, hits per frag: 0.429653[A. [32mprocessed[31m 21,500,000 [32mfragments[0m; hits: 9,229,756, hits per frag: 0.429727[A. [32mprocessed[31m 22,000,000 [32mfragments[0m; hits: 9,449,005, hits per frag: 0.429716[A. [32mprocessed[31m 22,500,001 [32mfragments[0m; hits: 9,665,567, hits per frag: 0.429693[A. [32mprocessed[31m 23,000,000 [32mfragments[0m; hits: 9,886,728, hits per frag: 0.430177[A. [32mprocessed[31m 23,500,000 [32mfragments[0m; hits: 10,104,758, hits per frag: 0.43008[A. [32mprocessed[31m 24,000,000 [32mfragments[0m; hits: 10,317,472, hits per frag: 0.4299[A. [32mprocessed[31m 24,500,000 [32mfragments[0m; hits: 10,534,359, hits per frag: 0.430157[A. [32mprocessed[31m 25,000,000 [32mfragments[0m; hits: 10,748,602, hits per frag: 0.430214[A. [32mprocessed[31m 25,500,000 [32mfragments[0m; hits: 10,958,978, hits per frag: 0.429905[A. [32mprocessed[31m 26,000,000 [32mfragments[0m; hits: 11,179,020, hits per frag: 0.430235[A. [32mprocessed[31m 26,500,000 [32mfragments[0m; hits: 11,394,635, hits per frag: 0.430031[A. [32mprocessed[31m 27,000,001 [32mfragments[0m; hits: 11,609,653, hits per frag: 0.43023[A. [32mprocessed[31m 27,500,000 [32mfragments[0m; hits: 11,825,601, hits per frag: 0.430128; salmon.standard/sample.standard.sh: line 20: 13916 Segmentation fault (core dumped) ……/miniconda3/envs/salmon1/bin/salmon quant -i ……/share/references/gencode/salmon_index --libType A -1 $read1 -2 $read2 -p 16 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output $outdir. ``` . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] HPC; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:9593,fault,fault,9593,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,2,"['fault', 'recover']","['fault', 'recoverOrphans']"
Availability,"----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:4828,avail,available,4828,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['avail'],['available']
Availability,"-----------------; size = 4016010494; Number of ones: 45110163; Number of ones per inventory item: 512; Inventory entries filled: 88106; -----------------------------------------; | Loading contig boundaries | Time = 5.7049 s; -----------------------------------------; size = 4016010494; -----------------------------------------; | Loading sequence | Time = 554.02 ms; -----------------------------------------; size = 2662705604; -----------------------------------------; | Loading positions | Time = 6.1033 s; -----------------------------------------; size = 5024146461; -----------------------------------------; | Loading reference sequence | Time = 658.08 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 18.506 ms; -----------------------------------------; [2023-09-28 04:51:48.011] [jointLog] [info] done; [2023-09-28 04:51:48.061] [jointLog] [info] Index contained 5352508 targets; [2023-09-28 04:52:00.269] [jointLog] [info] Number of decoys : 182; [2023-09-28 04:52:00.269] [jointLog] [info] First decoy index : 5155176 . [2023-09-28 04:52:03.534] [jointLog] [info] Automatically detected most likely library type as ISR; processed 26000000 fragments; hits: 42435888, hits per frag: 1.63223/.../work2/c3/593743a22569a97e1d10b2a200b713/.command.sh: line 4: 38 Segmentation fault (core dumped) /usr/local/bin/salmon quant -i references/salmon/*ucsc.rmsk.salmon*/ --libType A -1 SRR14506785_output_forward_paired.fq.gz -2 SRR14506785_output_reverse_paired.fq.gz -p 8 --validateMappings --gcBias --seqBias --recoverOrphans --rangeFactorizationBins 4 --output SRR14506785.salmon.rmsk.out --writeUnmappedNames; ```. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version: 5.15.0-76-generic. **Additional context**; This is a very recent issue, it *seems* to be resolved by version 1.10 but I have no reads into where the issue may be occuring, or why it is so inconsistent.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:4925,fault,fault,4925,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,2,"['fault', 'recover']","['fault', 'recoverOrphans']"
Availability,"----------------; -----------------------------------------; | Loading mphf table | Time = 2.3485 s; -----------------------------------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:4558,fault,fault,4558,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['fault'],['fault']
Availability,"----------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:4653,fault,fault,4653,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,2,"['avail', 'fault']","['available', 'fault']"
Availability,--SeqBias quant error with single-end reads,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:16,error,error,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,1,['error'],['error']
Availability,"--biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [2016-06-21 10:04:47.033] [stderrLog] [info] Done loading index. processed 6500000 fragments; hits: 13927069, hits per frag: 2.15389. [2016-06-21 10:05:13.847] [jointLog] [info] Computed 165969 rich equivalence classes for further processing; [2016-06-21 10:05:13.847] [jointLog] [info] Counted 6514601 total reads in the equivalence classes; [2016-06-21 10:05:13.893] [jointLog] [info] Mapping rate = 95.0922%. [2016-06-21 10:05:13.893] [jointLog] [info] finished quantifyLibrary(); [2016-06-21 10:05:13.894] [jointLog] [info] Starting optimizer; Segmentation fault (core dumped); ```. It runs fine when disabling `--useFSPD`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/64:2561,fault,fault,2561,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64,1,['fault'],['fault']
Availability,"-alignment/ https://salmon.readthedocs.io/en/latest/salmon.html#what-s-this-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa | cut -d "" "" -f 1 > GRCh38.decoys.txt; sed -i 's/>//g' GRCh38.decoys.txt; cat gencode.v36.transcripts.fa GRCh38.primary_assembly.genome.fa | gzip > GRCh38.gentrome.fa.gz; salmon index -t GRCh38.gentrome.fa.gz -d GRCh38.decoys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/""; for fn in /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR{2557119..2557121}; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i $IDX -l A -1 ${fn}_1.fastq.gz -2 ${fn}_2.fastq.gz -p 8 \; --validateMappings \; -o quants/${samp}_quant \; --gcBias; done; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; 1.3.0 salmon was installed by miniconda, then updated to 1.4.0 via miniconda ; * Which reference (e.g. transcriptome) was used?; Gencode_human/release_36/gencode.v36.transcripts.fa.gz; * Which read files were used?; fastq.gz file with 150 paired reads ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; On a cluster with Ubuntu Linux. **Additional context**; I was running the default method of building index with only the gencode.v36.transcripts.fa.gz, and the mapping rate for my fastq files were 42-55%, which i think is quite low (based on what i read, it is expected to be around 70%). Then, I thought i might give a go with building decoy-aware transcriptome index, and this did not go well as i presented above. . I ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/603:3425,down,downloaded,3425,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603,1,['down'],['downloaded']
Availability,"-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be written to salmon.standard/sample/logs; [2024-11-01 05:13:59.563] [jointLog] [info] setting maxHashResizeThreads to 16; [2024-11-01 05:13:59.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-11-01 05:13:59.563] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-11-01 05:13:59.563] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-11-01 05:13:59.563] [jointLog] [info] parsing read library format; [2024-11-01 05:13:59.563] [jointLog] [info] There is 1 library.; [2024-11-01 05:13:59.563] [jointLog] [info] Loading pufferfish index; [2024-11-01 05:13:59.563] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:1870,recover,recoverOrphans,1870,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['recover'],['recoverOrphans']
Availability,"-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed time: 0.0107059s; ```; Specifically, please provide at least the following information:. * Which version of salmon was used? 1.1.0, 1.0.0 and 0.14.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? GitHub binary; * Which reference (e.g. transcriptome) was used? sample data from GitHub release; * Which read files were used? none; * Which which program options were used? -k 31 -i index -t sample_data/transcripts.fasta. **Expected behavior**; A clear and concise description of what you expected to happen.; I expected salmon 1.1.0 to run without a core-dump and produce similar results to 0.14.1. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Ubuntu 18.04.4 LTS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux firefly 5.3.0-40-generic #32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Using ""bcbio-nextgen"", with ""salmon 1.1.0"" installed by Anaconda: Removed this version because of core-dumps",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/500:2392,down,downloaded,2392,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500,1,['down'],['downloaded']
Availability,"-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Error 2; 1087.8 make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; 1087.8 make[1]: *** [CMakeFiles/Makefile2:281: CMakeFiles/libtbb.dir/all] Error 2; 1087.8 make: *** [Makefile:166: all] Error 2; ```. Any thoughts on whether this is possible at all?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/872:1494,error,error,1494,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872,8,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"./salmon index -t Mus_musculus.GRCm38.cdna.all.norm.fasta -i GRCm38.cdna.all_index --type quasi -l 31. Dear Salmon list,. I am using the Salmon 0.8.1 binary for Mac OS X, Sierra, 10.12.8. I am trying to set up an mm10; mouse index. I downlaod the mouse cDNAs from Ensembl, and normlized the ends with galaxy.; I am running evelything in lib in case there are path issues.; Here is my directory:. c2b2afmd2:lib friedman$ ls; Mus_musculus.GRCm38.cdna.all.fa	libtbbmalloc_proxy.dylib; libtbb.dylib			salmon; libtbbmalloc.dylib. Here is my attemot to build an index:. c2b2afmd2:lib friedman$ ./salmon index -t Mus_musculus.GRCm38.cdna.all.norm.fasta -i GRCm38.cdna.all_index --type quasi -l 31; dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Applications/Salmon-0.8.2_macOX_10.12/lib/./salmon; Reason: image not found; Abort trap: 6. I would greatly appreciate any help that you might be able ot give. Thanks and best wishes,; Rich; Richard A. Friedman, PhD; Associate Research Scientist,; Biomedical Informatics Shared Resource; Herbert Irving Comprehensive Cancer Center (HICCC); Lecturer,; Department of Biomedical Informatics (DBMI); Room 825; Irving Cancer Research Center ; Columbia University Herbert and Florence Irving Medical Center; 1130 St. Nicholas Ave; New York, NY 10032; (212)851-4765 (voice); raf4@cumc.columbia.edu. http://www.columbia.edu/~raf4/index.html. “Will there still be ""Classics Illustrated” by the time I have children? I cannot; imagine raising kids without ""Classics Illustrated” .” -Rose Friedman, age 20",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/215:234,down,downlaod,234,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/215,1,['down'],['downlaod']
Availability,".6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: result: arm-apple-darwin22.6.0; configure:3066: checking if debugging code should be compiled; configure:3082: result: no; configure:3122: checking which encoders to build; configure:3209: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking whi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:2589,Down,Downloads,2589,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Down'],['Downloads']
Availability,".fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-11-14 21:21:46.821] [alevinLog] [info] Found 116507 transcripts(+66 decoys, +39 short and +0 duplicate names in the index); [2021-11-14 21:21:46.932] [alevinLog] [info] Filled with 116545 txp to gene entries ; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Can't find gene mapping for : ENSMUST00000196221.1 w/ index 0; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Txp to Gene Map not found for 18446744073709551551 transcripts. Exiting; ```. I had also tried building the index myself using the Gencode mm10 transcripts downloaded [here](https://www.gencodegenes.org/mouse/), but it seems unclear how one could make the `tgMap` from that exact same genome version/patch. Is there a recommended way to extract `tgMap` from, for example, the GTF file provided on that same webpage?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/722:2267,error,error,2267,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722,5,"['ERROR', 'down', 'error']","['ERROR', 'downloaded', 'error']"
Availability,".manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:22795,avail,available,22795,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['avail'],['available']
Availability,"/All-H.m-reads/Trimmed/Sample_8-15/8-15_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_42-50_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-46-53_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-4-10_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_23-31/23-31_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P1_H.m_16-24_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_22-30/22-30_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_27-35/27-35_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_25-33/25-33_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-45-54_221020_L002_R1.fastq.gz""]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. script. #!/bin/bash; #SBATCH -p shared; #SBATCH -c 100; #SBATCH --mem=200G; #SBATCH --gres=tmp:300G; #SBATCH -t 36:00:00. module purge; module load bioinformatics; module load salmon/1.10.1. cd /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/. # Set the path to the Salmon index; salmon_index=""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/salmon_index"". # Set the path to the directory containing all the FASTQ files; fastq_dir=""/nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed"". # Use the find command to locate all R1 and R2 FASTQ files; r1_files=$(find ""$fastq_dir"" -name ""*1.fastq.gz""); r2_files=$(find ""$fastq_dir"" -name ""*2.fastq.gz""). # Loop through the found files; for i in ""${!r1_files[@]}""; do; r1_file=""${r1_files[i]}""; r2_file=""${r2_files[i]}"". # Extract the sample name; samp=$(basename ""$r1_file"" ""_1.fastq.gz""). # echo ""Processing sample ${samp}""; salmon quant -i salmon_index -l A -1 ""$r1_file"" -2 ""$r2_file"" -p 100 --validateMappings -o ""salmon_out/${samp}_quant""; done. thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:16965,echo,echo,16965,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['echo'],['echo']
Availability,"/Homo_sapiens.GRCh38.dna.primary_assembly.fa > \; /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa. * salmon index; /home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon index \; --transcripts /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa \; --kmerLen 31 \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --decoy /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt \; --keepDuplicates \; --threads 50. */home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon quant \; --libType A \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --unmatedReads /cold_data/zhaojiaxin/long_read/GRM/upstream-analysis/trim_polya/GRM/ONT_GRM_R01/ONT_GRM_R01.full_length.trim_polyA.filter.fasta \; --output /cold_data/zhaojiaxin/ensembl/salmon/transcripts_quant \; --seqBias \; --gcBias \; --posBias \; --geneMap /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.109.gtf \; --auxDir aux_info \; --incompatPrior 0 \; --threads 50. **Expected behavior**; I want the genes quantization results to appear normally in the file quant.genes.sf. **Desktop (please complete the following information):**; - OS : Ubuntu Linux; - Version ; uname -a：; Linux 1302ubuntu 6.8.0-40-generic #40~22.04.3-Ubuntu SMP PREEMPT_DYNAMIC Tue Jul 30 17:30:19 UTC 2 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a：; No LSB modules are available.; Distributor ID: Ubuntu; Description: Ubuntu 22.04.4 LTS; Release: 22.04; Codename: jammy. **Additional context**; I've already found a similar question, but it didn't solve my problem very well, the link to this question is as follows: https://github.com/COMBINE-lab/salmon/issues/569. As I understand it, one of the two questioners solved the problem by updating the salmon version, the other by tximport solved the problem. But first of all my salmon version is the latest 1.10.3, and secondly, I understand that tximport is an R package that handles salmon output files, which may not solve my problem. Looking forward to your professional reply and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/962:2602,avail,available,2602,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/962,1,['avail'],['available']
Availability,/Modules -DTBB_WILL_RECONFIGURE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not managed to package version 1.7.0 and 1.8.0 but I confirm that version 1.6.0 was not affected by the described problem.; * Salmon was build as Debian package as well as built from source (see above); * The reference was taken from the `sample_data` shipped with the release tarball. **Expected behavior**; Clean processing without SEGFAULT. **Desktop (please complete the following information):**; - OS: Debian (testing or unstable). **Additional context**; * You can find some debug logs inside the [Debian bug log](https://bugs.debian.org/1028713). ; * There is a build log which includes the said salmon call above as [build time test](https://salsa.debian.org/med-team/salmon/-/jobs/4031000); * When ignoring the package build time test the [Continuous Integration log](https://salsa.debian.org/med-team/salmon/-/jobs/3980059) might be interesting as w,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835:1910,fault,fault,1910,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835,1,['fault'],['fault']
Availability,"/anndata.py in __getitem__(self, index); 1048 """"""Returns a sliced view of the object.""""""; 1049 oidx, vidx = self._normalize_indices(index); -> 1050 return AnnData(self, oidx=oidx, vidx=vidx, asview=True); 1051 ; 1052 def _remove_unused_categories(self, df_full, df_sub, uns):. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in __init__(self, X, obs, var, uns, obsm, varm, layers, raw, dtype, shape, filename, filemode, asview, obsp, varp, oidx, vidx); 280 if not isinstance(X, AnnData):; 281 raise ValueError(""`X` has to be an AnnData object.""); --> 282 self._init_as_view(X, oidx, vidx); 283 else:; 284 self._init_as_actual(. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in _init_as_view(self, adata_ref, oidx, vidx); 328 self._varp = adata_ref.varp._view(self, vidx); 329 # hackish solution here, no copy should be necessary; --> 330 uns_new = deepcopy(self._adata_ref._uns); 331 # need to do the slicing before setting the updated self._n_obs, self._n_vars; 332 self._n_obs = self._adata_ref.n_obs # use the original n_obs here. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 148 copier = _deepcopy_dispatch.get(cls); 149 if copier:; --> 150 y = copier(x, memo); 151 else:; 152 try:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in _deepcopy_dict(x, memo, deepcopy); 239 memo[id(x)] = y; 240 for key, value in x.items():; --> 241 y[deepcopy(key, memo)] = deepcopy(value, memo); 242 return y; 243 d[dict] = _deepcopy_dict. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 159 copier = getattr(x, ""__deepcopy__"", None); 160 if copier:; --> 161 y = copier(memo); 162 else:; 163 reductor = dispatch_table.get(cls). SystemError: <built-in method __deepcopy__ of numpy.ndarray object at 0x2aab0b27cc60> returned a result with an error set",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:7785,error,error,7785,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,1,['error'],['error']
Availability,"/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/290:2116,down,downloaded,2116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290,2,['down'],['downloaded']
Availability,"/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:1621,error,error,1621,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['error'],['error']
Availability,"/output_genome/salmon-1.9.0_linux_x86_64/bin/salmon alevin -l ISR -i /users/nklimper/data/nklimper/permexp/output_genome/salmon_partial_sa_index \; -1 /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L001_R1_001.fastq.gz \; /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R1_001.fastq.gz \; -2 /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L001_R2_001.fastq.gz \; /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R2_001.fastq.gz \; -o alevin_out_new -p 16 --tgMap /users/nklimper/data/nklimper/permexp/output_genome/txp2gene.tsv \; --chromiumV3; ```. There were no errors when running salmon alevin, however the lib_format_counts.json file shows that there were 0 fragments with concordant consistent mappings:. ```json; {; ""read_files"": ""[ [ /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L001_R1_001.fastq.gz, /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L001_R2_001.fastq.gz], [ /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R1_001.fastq.gz, /users/nklimper/data/nklimper/permexp/output_genome/V1_Mouse_Brain_Sagittal_Anterior_Section_1_fastqs/V1_Mouse_Brain_Sagittal_Anterior_Section_1_S7_L002_R2_001.fastq.gz] ]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 250325422,; ""num_assigned_fragments"": 250325422,; ""num_frags_with_con",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/827:1544,error,errors,1544,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/827,1,['error'],['errors']
Availability,"/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:62: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2011:38: error: overloaded function with no contextual type information; rapmap::utils::writeSAMHeader(*index, salmonOpts.qmLog);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2014:25: error: ‘parserPtr’ was not declared in this scope; processReadsQuasi(parserPtr.get(), readExp, rl, structureVec[i],; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In instantiation of ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]’:; /nfs/sw/src/rescomp-6993/salmon/src",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:2636,error,error,2636,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"/salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Computing transcript lengths; [2018-10-23 20:11:15.042] [stderrLog] [info] Waiting to finish loading hash; [2018-10-23 20:11:20.618] [stderrLog] [info] Done loading index; [2018-10-23 20:11:20.618] [jointLog] [info] done; [2018-10-23 20:11:20.618] [jointLog] [info] Index contained 199,612 targets. Segmentation fault: 11; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OSX; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. ProductName:	Mac OS X; ProductVersion:	10.11.3; BuildVersion:	15D21. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:2822,fault,fault,2822,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,1,['fault'],['fault']
Availability,"/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [joint",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:28529,avail,available,28529,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['avail'],['available']
Availability,"0 0 22663523 427757 1037534 0 0 0 0; ```; The num_frags_with_concordant_consistent_mappings was high. The library format does indeed seem to be ISR. I was worried that including the premature RNA was causing a problem (e.g. if the reads emitted by these regions are caused by genomic DNA contamination). To rule out this possibility and experiment with an alternate tool to infer library format, I aligned the FASTQ files using HIAST2 and used RSeQC's infer_experiment.py python module using intronic and exonic features per gene in .bed format as input (http://rseqc.sourceforge.net/). In both cases, RSeQC was able to guess the correct library format (ISR):. ```; > rseqc.guess; SRR LibFormat Fraction of reads failed to determine Fraction of reads explained by 1++,1--,2+-,2-+ Fraction of reads explained by 1+-,1-+,2++,2-- features; 1: SRR9071838 This is PairEnd Data 0.0070 0.0096 0.9834 exonOnly; 2: SRR9071838 This is PairEnd Data 0.0012 0.0111 0.9877 intronOnly; 3: SRR9071839 This is PairEnd Data 0.0070 0.0095 0.9835 exonOnly; 4: SRR9071839 This is PairEnd Data 0.0012 0.0111 0.9877 intronOnly; 5: SRR9071840 This is PairEnd Data 0.0068 0.0128 0.9804 exonOnly; 6: SRR9071840 This is PairEnd Data 0.0009 0.0162 0.9829 intronOnly; 7: SRR9071841 This is PairEnd Data 0.0068 0.0133 0.9799 exonOnly; 8: SRR9071841 This is PairEnd Data 0.0011 0.0167 0.9823 intronOnly; 9: SRR9071842 This is PairEnd Data 0.0076 0.0115 0.9809 exonOnly; 10: SRR9071842 This is PairEnd Data 0.0011 0.0140 0.9849 intronOnly; 11: SRR9071843 This is PairEnd Data 0.0075 0.0097 0.9828 exonOnly; 12: SRR9071843 This is PairEnd Data 0.0012 0.0117 0.9871 intronOnly; 13: SRR9071844 This is PairEnd Data 0.0069 0.0127 0.9805 exonOnly; 14: SRR9071844 This is PairEnd Data 0.0011 0.0163 0.9827 intronOnly; 15: SRR9071845 This is PairEnd Data 0.0065 0.0125 0.9809 exonOnly; 16: SRR9071845 This is PairEnd Data 0.0010 0.0158 0.9832 intronOnly; ```. Any idea what could be happening here? Am I at fault? Your help is appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/655:6680,fault,fault,6680,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/655,1,['fault'],['fault']
Availability,"0-12-13 19:07:51.508] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-12-13 19:07:51.508] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-12-13 19:07:51.508] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2020-12-13 19:07:51.508] [jointLog] [info] parsing read library format; [2020-12-13 19:07:51.508] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/gencode_v36_decoy_salmon-1.4.0/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; ```. **To Reproduce**; Steps and data to reproduce the behavior:; Building the index:; 1. Download the transcript and the genome sequence of human, latest version; ```; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_36/GRCh38.primary_assembly.genome.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_36/gencode.v36.transcripts.fa.gz; ```; 2. unzip:; ```; gunzip gencode.v36.transcripts.fa.gz; gunzip GRCh38.primary_assembly.genome.fa.gz; ```; 3. following the instruction for building a SAF salmon index (https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ https://salmon.readthedocs.io/en/latest/salmon.html#what-s-this-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa | cut -d "" "" -f 1 > GRCh38.decoys.txt; sed -i 's/>//g' GRCh38.decoys.txt; cat gencode.v36.transcripts.fa GRCh38.primary_assembly.genome.fa | gzip > GRCh38.gentrome.fa.gz; salmon index -t GRCh38.gentrome.fa.gz -d GRCh38.decoys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/603:1902,Down,Download,1902,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603,1,['Down'],['Download']
Availability,"024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; ```; above warning repeated multiple times for different reads. ```; [2024-04-09 21:53:51.012] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 13013) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; /var/lib/slurm/slurmd/job14839922/slurm_script: line 27: 419663 Segmentation fault (core dumped) salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant. ```. **Additional context**; The bam files were generated from ONT direct RNA SQKRNA0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:7268,error,error,7268,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,1,['error'],['error']
Availability,"06 08:42:39.323] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2021-12-06 08:42:40.120] [puff::index::jointLog] [warning] Entry with header [ATMG00665.1], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping) ; ; [2021-12-06 08:43:01.886] [puff::index::jointLog] [warning] Removed 580 transcripts that were sequence duplicates of indexed transcripts. ; [2021-12-06 08:43:01.886] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag ; [2021-12-06 08:43:01.886] [puff::index::jointLog] [info] Replaced 698 non-ATCG nucleotides; [2021-12-06 08:43:01.886] [puff::index::jointLog] [info] Clipped poly-A tails from 24 transcripts; wrote 40811 cleaned references; Segmentation fault (core dumped); ```; ```; (lldb) bt; * thread #1, name = 'salmon', stop reason = signal SIGSEGV; * frame #0: 0x0000000000995120 salmon`rapidjson::PrettyWriter<rapidjson::BasicOStreamWrapper<std::__1::basic_ostream<char, std::__1::char_traits<char> > >, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::CrtAllocator, 2u>::PrettyPrefix(rapidjson::Type) [inlined] rapidjson::BasicOStreamWrapper<std::__1::basic_ostream<char, std::__1::char_traits<char> > >::Put(this=<unavailable>, c=',') at ostreamwrapper.h:51:9; frame #1: 0x0000000000995120 salmon`rapidjson::PrettyWriter<rapidjson::BasicOStreamWrapper<std::__1::basic_ostream<char, std::__1::char_traits<char> > >, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::CrtAllocator, 2u>::PrettyPrefix(this=<unavailable>, type=<unavailable>) at prettywriter.h:215; frame #2: 0x00000000004e10dc salmon`rapidjson::PrettyWriter<rapidjson::BasicOStreamWrapper<std::__1::basic_ostream<char, std::__1::char_traits<char> > >, rapidjson::UTF8<char>, rapidjson::UTF8<char>, rapidjson::CrtAllocator, 2u>::Bool(this=0x00007fffffff4a70, b=false) at prettywriter.h:96:35; frame #3: 0x00000000004e108f salmon`cereal::JSONOutputArchive::saveValue",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/725:1552,fault,fault,1552,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/725,1,['fault'],['fault']
Availability,"0m; hits: 66225532; hits per frag: 4.42625[A. [32mprocessed[31m 15500006 [32mfragments[0m; hits: 68431333; hits per frag: 4.42688[A. [32mprocessed[31m 16000002 [32mfragments[0m; hits: 70643320; hits per frag: 4.44249[A. [32mprocessed[31m 16500002 [32mfragments[0m; hits: 72850859; hits per frag: 4.42435[A. [32mprocessed[31m 17500001 [32mfragments[0m; hits: 77275281; hits per frag: 4.43251[A. [32mprocessed[31m 18000005 [32mfragments[0m; hits: 79494713; hits per frag: 4.433[A. [32mprocessed[31m 18500000 [32mfragments[0m; hits: 81710387; hits per frag: 4.43219[A. [32mprocessed[31m 19000001 [32mfragments[0m; hits: 83924289; hits per frag: 4.42804[A. [32mprocessed[31m 19500000 [32mfragments[0m; hits: 86134985; hits per frag: 4.43392[A. [32mprocessed[31m 20000000 [32mfragments[0m; hits: 88347210; hits per frag: 4.42895[A. [32mprocessed[31m 20500003 [32mfragments[0m; hits: 90559781; hits per frag: 4.43081[A. [32mprocessed[31m 21000000 [32mfragments[0m; hits: 92771131; hits per frag: 4.42429. [2018-08-16 19:47:49.632] [jointLog] [info] Computed 260771 rich equivalence classes for further processing; [2018-08-16 19:47:49.632] [jointLog] [info] Counted 19352476 total reads in the equivalence classes ; [2018-08-16 19:47:49.646] [jointLog] [info] Mapping rate = 91.4764%. [2018-08-16 19:47:49.646] [jointLog] [info] finished quantifyLibrary(); [2018-08-16 19:47:49.649] [jointLog] [info] Starting optimizer; /mnt/galaxy/tmp/job_working_directory/000/900/tool_script.sh: line 50: 5733 Segmentation fault (core dumped) salmon quant --index ./index --libType U --unmatedReads ./single.fastq --output ./output --allowOrphans --threads ""${GALAXY_SLOTS:-4}"" --incompatPrior 1e-20 --biasSpeedSamp 1 --fldMax 1000 --fldMean 200 --fldSD 80 --forgettingFactor 0.65 --maxOcc 200 --maxReadOcc 100 --numBiasSamples 2000000 --numAuxModelSamples 5000000 --numPreAuxModelSamples 1000000 --numGibbsSamples 0 --numBootstraps 0 --vbPrior 0.001; ```<details>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:29038,fault,fault,29038,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['fault'],['fault']
Availability,"1 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-rec",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/268:1564,error,error,1564,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268,1,['error'],['error']
Availability,1.0 build error: openssl.c: undefined reference to `EVP_sha256',MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/443:10,error,error,10,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/443,1,['error'],['error']
Availability,"10,; ""num_processed"": 28233938,; ""num_mapped"": 13878036,; ""num_decoy_fragments"": 1377519,; ""num_dovetail_fragments"": 563891,; ""num_fragments_filtered_vm"": 1456279,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 2129372,; ""percent_mapped"": 49.153738313089728,; ""call"": ""quant"",; ""start_time"": ""Fri May 03 11:31:29 2024"",; ""end_time"": ""Fri May 03 11:33:32 2024""; }; ```. **Screenshots**. Program output from a failed process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-03 15:09:51.221] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-03 15:09:51.221] [jointLog] [info] parsing read library format; [2024-05-03 15:09:51.221] [jointLog] [info] There is 1 library.; [2024-05-03 15:09:51.221] [jointLog] [info] Loading pufferfish index; [2024-05-03 15:09:51.221] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 6.1119 s; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:4967,recover,recoverOrphans,4967,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['recover'],['recoverOrphans']
Availability,"10; ```; It takes a bit to finish and once done I can do:. List the fasta headers of the decoy sequences; ```; head decoys.txt ; GL456210.1; chrX; chrY; GL456221.1; JH584304.1; ```. While this shows the the new hybrid (genome + transcriptome) fasta file which contains the decoy sequences from the genome, concatenated with the transcriptome (`gentrome.fa`) for a total of 119414 sequences.; ```; zcat gentrome.fa | grep ""^>"" | wc -l; gzip: gentrome.fa: decompression OK, trailing garbage ignored; 119414; ```. To create a salmon index do the following:; ```; salmon index \; -t /no_backup/indexes/salmon/mm10/gentrome.fa \; -i /no_backup/indexes/salmon/mm10 \; -d /no_backup/indexes/salmon/mm10/decoys.txt \; -k 28 --threads 6; ```; The author of `salmon` find that a *k* of 31 seems to work well for reads of 75bp or longer, but recommend considering a smaller *k* if you plan to deal with shorter reads. So I picked `28` cause I have 50bp SE. After the job starts I get this error message:; ```; Version Info: This is the most recent version of salmon.; [2021-12-24 17:32:49.324] [jLog] [info] building index; out : /no_backup/indexes/salmon/mm10; [2021-12-24 17:32:49.326] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2021-12-24 17:32:49.337] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000177564.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping); [2021-12-24 17:32:49.337] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000196221.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731:2340,error,error,2340,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731,1,['error'],['error']
Availability,"14:04.047] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2023-08-17 22:14:04.083] [jointLog] [info] Mapping rate = 0%. It ultimately dies with a floating point error, probably for dividing by 0 somewhere. . The command I'm running is (and note that I have r1 and r2 swapped, per some other guidance. It dies earlier during barcode processing otherwise):. > salmon alevin -i /ref/gencode.v43.transcripts/ -l ISR -1 r2.fastq.gz -2 r1.fastq.gz -p 30 --splitseqV2 --tgMap /ref/gencode.v43_full.txMap -o salmon_output --expectCells 400. I tried to make it simpler and simpler, so that's a salmon index I made myself with no decoys, just the gencode transcript fasta with the software version I'm trying to run (salmon 1.10.2, from the combinelab/salmon docker hub), gencode v43 (I know, it's a version behind, but it's what I'm using elsewhere...) and hg38. It's handling the barcodes fine and recovering approximately the right amount (it's a sub-library with a few hundred cells to check the quality of the library before sequencing the full experiment). But it's failing to quantitate any of the reads. Oddly, just quantitating the read1 file with; > salmon quant -i /ref/gencode.v43.transcripts/ -l ISR -r r1.fastq.gz -p 30 -o work/salmon_output. behaves as expected and prints this and proceeds. > [2023-08-17 22:21:17.619] [jointLog] [info] Computed 618403 rich equivalence classes for further processing; > [2023-08-17 22:21:17.619] [jointLog] [info] Counted 6085013 total reads in the equivalence classes; > [2023-08-17 22:21:17.632] [jointLog] [info] Number of mappings discarded because of alignment score : 166235099. I found a discussion about the initial implementation of splitseq here with [this](https://github.com/COMBINE-lab/salmon/issues/699#issuecomment-985198050) comment from @rob-p. I copied the geometry parameters he mentioned for this command:. > salmon alevin -i /ref/gencode.v43.transcripts/ -l A -1 r2.fastq.gz -2 r1.fastq.gz -p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/867:1772,recover,recovering,1772,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/867,1,['recover'],['recovering']
Availability,2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; -----------------------------------,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:4986,Error,Error,4986,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,3,['Error'],['Error']
Availability,"20-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249': File exists; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v1.1.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/jl2e19/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_1.fq }; ### [ mates2 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_2.fq }; ### [ validateMappings ] => { }; ### [ output ] => { /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/ }; Logs will be written to /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/logs; [2020-07-04 15:51:46.138] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-07-04 15:51:46.138] [jointLog] [info] parsing read library format; [2020-07-04 15:51:46.138] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/jl2e19/salmon_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; /home/jl2e19/.conda/envs/SALMON/bin/salmon quant was invoked improperly.; For usage information, try /home/jl2e19/.conda/envs/SALMON/bin/salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:19013,Error,Error,19013,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,1,['Error'],['Error']
Availability,"2g.tsv"",; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz, Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 351484244,; ""num_assigned_fragments"": 351484244,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1727876200,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. For the selective alignment - Salmon quant. ```console; cat cmd_info.json ; {; ""salmon_version"": ""1.4.0"",; ""index"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/transcriptome_selective_alignment_index_salmon"",; ""libType"": ""ISR"",; ""threads"": ""32"",; ""unmatedReads"": ""Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz"",; ""output"": ""salmon_quant"",; ""validateMappings"": [],; ""writeMappings"": [],; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz ]"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 387129150,; ""num_assigned_fragments"": 387129150,; ""num_frags_with_concordant_consistent_mappings"": 399519815,; ""num_frags_with_inconsistent_or_orphan_mappings"": 0,; ""strand_mapping_bias"": 0.9389489029474045,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 375128692,; ""SR"": 24391123,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Download executable; * Which reference (e.g. transcriptome) was used?; GENCODE hg38; * Which read files were used?; 10x scRNA-seq files. Any insight about why are these differences in the mapped fragments happening would be much appreciated. . Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/702:5156,down,downloaded,5156,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/702,2,"['Down', 'down']","['Download', 'downloaded']"
Availability,"3.32 reads per unique molecule. So it seems like the duplication rate might be closer to the SevenBridges estimate than the Alevin estimate. The Alevin documentation seems to suggest that cell/transcript/UMI triplets are being used for UMI collapsing (""identify potential PCR/sequencing errors in the UMIs, and performs hybrid de-duplication while accounting for UMI collisions""), so I'm at a loss as to why the difference is this large. I'm not too worried about numbers being different, but the UMI proportion is a concern to me, because sequencing is expensive, and it'd be good to have an idea of whether we need to further improve our library prep (which would certainly be the case for 9X duplication, but less important with 3-5X duplication). Is anyone able to explain how the UMI deduplication is applied in Salmon Alevin, or why it might be different from other analysis platforms?. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? Binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v42; * Which read files were used? NovaSeq 6000 S2; * Which program options were used?. ```; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; --mrna ${indexDir}/mt_genes.txt --rrna ${indexDir}/rRNA_genes.txt \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} --whitelist goodSampleTagCells.txt \; -p 10 -o salmon_1.9_cbc_whitelist_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**. I would expect the Salmon Alevin PCR duplication estimate to be similar to that of SevenBridges, or my semi-manual attempt (e.g. 3-5X). **Desktop OS/Version:**. `Linux musculus 5.18.0-4-amd64 #1 SMP PREEMPT_DYNAMIC Debian 5.18.16-1 (2022-08-10) x86_64 GNU/Linu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/808:2724,down,downloaded,2724,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808,2,['down'],"['download', 'downloaded']"
Availability,"3.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz; * Which read files were used? not quantifying yet, I'm at the indexing step.; * Which which program options were used? salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Expected behavior**; A clear and concise description of what you expected to happen.; Producing directory that contains indexed files to be applied to ""salm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:2075,fault,fault,2075,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,1,['fault'],['fault']
Availability,"30:57.209] [stderrLog] [info] Done loading index; [2018-08-29 11:30:57.209] [jointLog] [info] done; [2018-08-29 11:30:57.209] [jointLog] [info] Index contained 135226 targets. processed 2 Million fragments; processed 18 Million fragments 2.38179; hits: 42509133, hits per frag: 2.29867. [2018-08-29 11:33:18.039] [jointLog] [info] Computed 59040 rich equivalence classes for further processing; [2018-08-29 11:33:18.039] [jointLog] [info] Counted 8158322 total reads in the equivalence classes ; [2018-08-29 11:33:18.039] [jointLog] [warning] Found 187 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-08-29 11:33:18.039] [jointLog] [info] Mapping rate = 43.5974%. [2018-08-29 11:33:18.039] [jointLog] [info] finished quantifyLibrary(); Analyzed 14 cells (0% of all).vinLog] [info] Starting optimizer; ......; ......; Analyzed 544 cells (16% of all). ERROR: cell doesn't have any read count; ------------------------------------------------------------; Sender: LSF System <lsf@ebi5-164>; Subject: Job 9248384: <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> in cluster <EBI> Exited. Job <./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv> was submitted from host <ebi-login-001> by user <mahogny> in cluster <EBI>.; Job was executed on host(s) <10*ebi5-164>, in queue <research-rh7>, as user <mahogny> in cluster <EBI>.; </homes/mahogny> was used as the home directory.; </homes/mahogny/common/data/henrikson_celsee_20180825> was used as the working directory.; Started at Wed Aug 29 11:26:42 2018; Results reported at Wed Aug 29 11:33:2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:4778,ERROR,ERROR,4778,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,1,['ERROR'],['ERROR']
Availability,"31:27.814] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2023-06-19 16:31:27.814] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-06-19 16:31:27.816] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2023-06-19 16:31:27.888] [alevinLog] [info] Found 39363 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); ### alevin (dscRNA-seq quantification) v1.10.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R1.fastq.gz }; ### [ mates2 ] => { /public/home/name/workspace/data/tissues/dedup_fastq/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2_R2.fastq.gz }; ### [ chromiumV3 ] => { }; ### [ index ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/txfasta.idx }; ### [ threads ] => { 12 }; ### [ output ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/dedup_Microvascular_endothelial_cells_of_adipose_tissue_2 }; ### [ tgMap ] => { /public/home/name/workspace/scRNA_APA/labratsc/output/tissues/tgMap.tsv }; ### [ fldMean ] => { 250 }; ### [ fldSD ] => { 20 }; ### [ validateMappings ] => { }. [2023-06-19 16:31:27.949] [alevinLog] [info] Filled with 39363 txp to gene entries ; [2023-06-19 16:31:27.956] [alevinLog] [info] Found all transcripts to gene mappings; [2023-06-19 16:31:27.971] [alevinLog] [info] Processing barcodes files (if Present) . . [2023-06-19 16:31:28.595] [alevinLog] [info] Done barcode density calculation.; [2023-06-19 16:31:28.595] [alevinLog] [info] # Barcodes Used: 442596 / 442596.; [2023-06-19 16:31:28.601] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/853:2578,error,error,2578,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853,1,['error'],['error']
Availability,"4:29:38	CMD: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following inform",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/290:1542,error,error,1542,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290,1,['error'],['error']
Availability,"4cfb0b230f58119448d1c82706f1c515f210cccaf4fdf7d"",; ""index_seq_hash512"": ""d683c5132cae8695500566a25eb95c0349427afe1664ac571160337850aa269b634ad444936bd6d35205597c4962636c8fadbcf6406ca409a159b65e5f53c59e"",; ""index_name_hash512"": ""e552bd7a70d98c20ff4cf07a83a5f25d2dafe4a78e3dff92348f3d566c9037ccde0de6d4040625ca065a7484dcb8d668c583822bf5138e1540f61685bc991290"",; ""index_decoy_seq_hash"": ""39d3837ea001def952e79d70003dbba0199cc859b32f26350abfa271a6741167"",; ""index_decoy_name_hash"": ""bd5cd185b9e3272a64108e64e2bc47bc0552046dba3ff53683edeafab750c9ab"",; ""num_bootstraps"": 10,; ""num_processed"": 28233938,; ""num_mapped"": 13878036,; ""num_decoy_fragments"": 1377519,; ""num_dovetail_fragments"": 563891,; ""num_fragments_filtered_vm"": 1456279,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 2129372,; ""percent_mapped"": 49.153738313089728,; ""call"": ""quant"",; ""start_time"": ""Fri May 03 11:31:29 2024"",; ""end_time"": ""Fri May 03 11:33:32 2024""; }; ```. **Screenshots**. Program output from a failed process (with the `--recoverOrphans` option):. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ threads ] => { 64 }; ### [ index ] => { reference/salmon_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { merged/XXXX-03_1P.fastq.gz }; ### [ mates2 ] => { merged/XXXX-03_2P.fastq.gz }; ### [ validateMappings ] => { }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ softclip ] => { }; ### [ allowDovetail ] => { }; ### [ recoverOrphans ] => { }; ### [ numBootstraps ] => { 10 }; ### [ output ] => { mapped/salmon_03 }; Logs will be written to mapped/salmon_03/logs; [2024-05-03 15:09:51.221] [jointLog] [info] setting maxHashResizeThreads to 64; [2024-05-03 15:09:51.221] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-03 15:09:51.221] [jointLog] [info] Usage of --validateMappings im",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:4412,recover,recoverOrphans,4412,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['recover'],['recoverOrphans']
Availability,"4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; ```; above warning repeated multiple times for different reads. ```; [2024-04-09 21:53:51.012] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 13013) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 12932) has no trained error model; /var/lib/slurm/slurmd/job14839922/slurm_script: line 27: 419663 Segmentation fault (core dumped) salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:6778,error,error,6778,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,1,['error'],['error']
Availability,"500] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-05-07 14:40:36.500] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-05-07 14:40:36.511] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 8 Million barcodes; processed 17 Million barcodes; processed 25 Million barcodes; processed 34 Million barcodes; processed 42 Million barcodes; processed 51 Million barcodes; processed 59 Million barcodes; processed 67 Million barcodes; processed 76 Million barcodes; processed 84 Million barcodes; processed 93 Million barcodes; processed 101 Million barcodesdes; processed 109 Million barcodes; processed 118 Million barcodes; processed 126 Million barcodes; processed 134 Million barcodes; processed 143 Million barcodesodes; processed 148 Million barcodes. [2019-05-07 14:42:18.567] [alevinLog] [info] Done barcode density calculation.; [2019-05-07 14:42:18.567] [alevinLog] [info] # Barcodes Used: 147999216 / 148515763.; [2019-05-07 14:42:19.496] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version . Linux ebi6-054.ebi.ac.uk 3.10.0-514.16.1.el7.x86_64 #1 SMP Fri Mar 10 13:12:32 EST 2017 x86_64 x86_64 x86_64 GNU/Linux; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 7.3 (Maipo); Release:	7.3; Codename:	Maipo. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362:3711,error,error,3711,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362,1,['error'],['error']
Availability,5df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626 - align length 3527) has no trained error model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; ```; above warning repeated multiple times for different reads. ```; [2024-04-09 21:53:51.012] [jointLog] [warning] read b47a6511-ca44-423e-a429-29a490da1c1b (length 13320 - align length 13013) has no trained error model; [2024-04-09 21:53:51.013] [jointLog] [,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:6360,error,error,6360,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,1,['error'],['error']
Availability,"6125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info ; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. **Desktop (please complete the following information):**. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. **Additional context**; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/317:2613,fault,fault,2613,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317,1,['fault'],['fault']
Availability,"7-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.269] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:17926,Error,Error,17926,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"7:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:21494,echo,echo,21494,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,6,['echo'],['echo']
Availability,"8dd90e917d; seqHash 512 : 87b7752997ca977ff56d02f69857a32f13b3c39a0a084c72feaa2c97e698b9b04d80a88c6755b97aede5604b89fdf66789a14f7976a89597a7832760a47e8919; nameHash 256 : 54e47ff5eb21b38ef24c8ffa3fc2a192ee5d9c0541bc6ee2da9414ecbd0f8c59; nameHash 512 : 163b337219cfd19b0c4c99cece12c2c2b760b3bf7e4686dbe633259c78552a56f2f015f18740a33c18e0f14c5f362997395c3168590f3ad80704071cabfab13a; [2019-11-20 19:50:26.273] [puff::index::jointLog] [info] Filter size not provided; estimating from number of distinct k-mers; [2019-11-20 19:50:27.059] [puff::index::jointLog] [info] ntHll estimated 34379504 distinct k-mers, setting filter size to 2^30; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1073741824; Capacity = 2; Files: ; utr_library/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1073741824; Pass	Filling	Filtering; 1	17	42	; 2	2	0; True junctions count = 102593; False junctions count = 122933; Hash table size = 225526; Candidate marks count = 1387640; --------------------------------------------------------------------------------; Reallocating bifurcations time: 0; True marks count: 1100523; Edges construction time: 13; --------------------------------------------------------------------------------; Distinct junctions = 102593. approximateContigTotalLength: 29519449; counters:; 13519 5 4 5; ERROR!! DOESN'T SUPPORT STRING LENGTH LONGER THAN 255. String length: 317; ```. And the `output_sequences.fa` is from `qapa fasta -f genome/hg38/hg38.fa /qapa/qapa_3utrs.gencode_V31.hg38.bed output_sequences.fa`. The bed file is the pre-compiled annotation file from QAPA. **To Reproduce**; Steps and data to reproduce the behavior:. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Ubuntu 18.04.2 LTS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/451:2397,ERROR,ERROR,2397,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/451,1,['ERROR'],['ERROR']
Availability,"95% identity. Then, I took the complement of these sequences (all the left over intergenic stuff) and designated these as decoys. . I indexed the transcriptome with:; ```; rule index_transcriptome:; input:; seqs=ancient(""outputs/gtdb_genomes_salmon_ref/{gtdb_species}.fa""),; decoys=ancient(""outputs/gtdb_genomes_intergenic_comb/{gtdb_species}_clustered_intergenic_seq_names.txt""); output: ""outputs/gtdb_genomes_salmon_index/{gtdb_species}/info.json""; threads: 1; params: index_dir = lambda wildcards: ""outputs/gtdb_genomes_salmon_index/"" + wildcards.gtdb_species; resources:; mem_mb=16000,; tmpdir=TMPDIR; conda: ""envs/salmon.yml""; benchmark:""benchmarks/salmon_index_{gtdb_species}.txt""; shell:'''; salmon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys :",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:3592,down,downloaded,3592,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['down'],['downloaded']
Availability,": 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 UniDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [warning] Skipped 113 barcodes due to No mapped read; [2021-04-09 12:16:43.584] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting white listing of 81 cells; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting to make feature Matrix; [2021-04-09 12:16:43.589] [alevinLog] [info] Done making feature Matrix; Exception : [vector]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **To Reproduce**. I have uploaded the files used and a script to run a reproducible example:. https://www.dropbox.com/sh/ksn45n73bazp0rc/AABlsbkG-SLyKJN4DBO7zQ-va?dl=0. * Which version of salmon was used? 1.4.0; * How was salmon installed? bioconda. **Expected behavior**. Alevin should run to completion, with no errors. **Desktop :**; - OS: OSX; - Version: ProductName=Mac OS X, ProductVersion=10.15.7, BuildVersion=19H524. **Additional context**. The files are from a small test dataset - the reads have been subsampled and the genome reference sequence and annotation was filtered for the X chromosome. The index file was generated using the method describe here: https://combine-lab.github.io/alevin-tutorial/2020/alevin-velocity/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:7792,error,errors,7792,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['error'],['errors']
Availability,":. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:1481,avail,available,1481,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['avail'],['available']
Availability,"; observed = }; Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:observed = Library format { type: }; paired endLibrary format { type:paired end, relative orientation:, relative orientation:inward, strandedness:(sense, antisense) }; observed = Library format { type:paired end, relative orientation:inward, strandedness:observed = inward, strandedness:(antisense, sense) }; (antisense, sense) }paired end, relative orientation:inward, strandedness:(antisense, sense) }; expected = Library format { type:paired end, relative orientation:inward, strandedness:(sense, antisense)expected = Library format { type:Library format { type:; }paired endpaired endexpected = Library format { type:paired end, relative orientation:; , relative orientation:inwardinward, strandedness:(sense, antisense)observed = , strandedness:(antisense, sense) }; }; observed = Library format { type:paired end, relative orientation:inward, strandedness:(antisense, sense) }expected = Library format { type:, relative orientation:Library format { type:paired end; ```. and so on... It seems that the [`LibraryFormat` class](https://github.com/COMBINE-lab/salmon/blob/a6a4fe0dcf71674a59eb901d5ec6933df40de7f2/src/LibraryFormat.cpp#L52) is performing this check, and that the string format method is producing all of this output on stderr. . I believe that the Salmon index I'm using contains some transcript sequences from the ""wrong"" strand, and it would be helpful if the program gave information about the observed mapping (maybe just the transcript sequence ID) so that I could track down the error during index generation. . It also seems that all of the above error output contains no line terminators, although maybe this has been fixed in a more recent version. ```; -bash-4.1$ salmon --version; version : 0.4.0; ```. cc @jmerkin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/16:2427,down,down,2427,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/16,3,"['down', 'error']","['down', 'error']"
Availability,"=''; SED=''; SET_MAKE=''; SHELL='/bin/sh'; STRIP=''; USE_NLS=''; VERSION='5.2.2'; XGETTEXT=''; XGETTEXT_015=''; XGETTEXT_EXTRA_OPTIONS=''; ac_ct_AR=''; ac_ct_CC='/Library/Developer/CommandLineTools/usr/bin/cc'; ac_ct_DUMPBIN=''; am__EXEEXT_FALSE=''; am__EXEEXT_TRUE=''; am__fastdepCCAS_FALSE=''; am__fastdepCCAS_TRUE=''; am__fastdepCC_FALSE=''; am__fastdepCC_TRUE=''; am__include='include'; am__isrc=''; am__leading_dot='.'; am__nodep='_no'; am__quote=''; am__tar='$${TAR-tar} chof - ""$$tardir""'; am__untar='$${TAR-tar} xf -'; ax_pthread_config=''; bindir='${exec_prefix}/bin'; build='arm-apple-darwin22.6.0'; build_alias=''; build_cpu='arm'; build_os='darwin22.6.0'; build_vendor='apple'; datadir='${datarootdir}'; datarootdir='${prefix}/share'; docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'; dvidir='${docdir}'; exec_prefix='NONE'; host='arm-apple-darwin22.6.0'; host_alias=''; host_cpu='arm'; host_os='darwin22.6.0'; host_vendor='apple'; htmldir='${docdir}'; includedir='${prefix}/include'; infodir='${datarootdir}/info'; install_sh='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/install-sh'; libdir='${exec_prefix}/lib'; libexecdir='${exec_prefix}/libexec'; localedir='${datarootdir}/locale'; localstatedir='${prefix}/var'; mandir='${datarootdir}/man'; mkdir_p='$(MKDIR_P)'; oldincludedir='/usr/include'; pdfdir='${docdir}'; prefix='/Users/jeremybono/Downloads/salmon-1.10.1/external/install'; program_transform_name='s,x,x,'; psdir='${docdir}'; sbindir='${exec_prefix}/sbin'; sharedstatedir='${prefix}/com'; sysconfdir='${prefix}/etc'; target_alias=''; xz=''. ## ----------- ##; ## confdefs.h. ##; ## ----------- ##. /* confdefs.h */; #define PACKAGE_NAME ""XZ Utils""; #define PACKAGE_TARNAME ""xz""; #define PACKAGE_VERSION ""5.2.2""; #define PACKAGE_STRING ""XZ Utils 5.2.2""; #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; #define PACKAGE_URL ""http://tukaani.org/xz/""; #define NDEBUG 1; #define HAVE_ENCODER_LZMA1 1; #define HAVE_ENCODER_LZMA2 1; #define HAVE",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:15073,Down,Downloads,15073,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Down'],['Downloads']
Availability,"=> { /scratch/prj/ppn_microglia_mod/directrna/salmon/transcripts_quant }; Logs will be written to /scratch/prj/ppn_microglia_mod/directrna/salmon/transcripts_quant/logs; [2024-04-09 18:22:04.559] [jointLog] [info] setting maxHashResizeThreads to 24; [2024-04-09 18:22:04.559] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2024-04-09 18:22:04.563] [jointLog] [info] numQuantThreads = 18; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""007_D14_transcript.bam"", fasta = ""/scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa"" . . .done. processed 0 reads in current round[2024-04-09 18:22:15.424] [jointLog] [info] replaced 4 non-ACGT nucleotides with random nucleotides; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has n",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:3010,error,error,3010,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,1,['error'],['error']
Availability,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:1955,Error,Error,1955,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.441] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.441] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.441] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.441] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.532] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.532] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:3566,Error,Error,3566,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.626] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.626] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.626] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.626] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:6787,Error,Error,6787,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.720] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.720] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.720] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.720] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:8398,Error,Error,8398,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.808] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.808] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.808] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.808] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:10009,Error,Error,10009,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.899] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.899] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.899] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.899] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:11620,Error,Error,11620,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.990] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.990] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.990] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.990] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Plea",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:13231,Error,Error,13231,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"> { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.175] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.175] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.175] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:16453,Error,Error,16453,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"> { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.34 s; -----------------------------------------; size = 45242875; -----------------------------------------; | Loading contig offsets | Time = 14.76 s; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 2.0848 s; -----------------------------------------; /cromwell_root/script: line 103: 22 Killed salmon quant -i $refIndexDir --libType A -1 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz"" -2 ""/cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz"" -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; + salmonRet=137; + echo 'AEDWIP in time salmonRet='; AEDWIP in time salmonRet=; + '[' 137 -eq 0 ']'; + echo 'Salmon ERROR code 137'; Salmon ERROR code 137; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:4971,recover,recoverOrphans,4971,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,5,"['ERROR', 'echo', 'recover']","['ERROR', 'echo', 'recoverOrphans']"
Availability,"><summary>Mapping rates w/ quasi mapping method</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189014-b8350580-40f1-11ea-8f6a-9d7d39867a89.png). </p>; </details>. <details><summary>cmd_info.json (quasi)</summary>; <p>. ```json; {; ""salmon_version"": ""1.1.0"",; ""index"": ""results/salmon_test/index"",; ""libType"": ""A"",; ""mates1"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R1_val_1.fq.gz"",; ""mates2"": ""results/trimmed/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_R2_val_2.fq.gz"",; ""output"": ""results/salmon_test/quant/ILWN_RNAseq_G002_ATCACG_Arachis_hypogaea_I801_L1_salmon_test_quant"",; ""validateMappings"": [],; ""gcBias"": [],; ""seqBias"": [],; ""writeUnmappedNames"": [],; ""threads"": ""30"",; ""numBootstraps"": ""100"",; ""auxDir"": ""aux_info""; }; ```. </p>; </details>. I have also run kallisto on same dataset to compare the results:. <details><summary>Mapping results from kallisto</summary>; <p>. ![image](https://user-images.githubusercontent.com/42179487/73189235-0d711700-40f2-11ea-8952-1ca309554efd.png). </p>; </details>. As you can see there is quite a bit difference between two methods. Results from quasi mapping method look much similar to kallisto results. On the other hand, SAF method gave different results with lower mapping rates. My question is should one always trust the results from SAF method for downstream analysis since it supposed to give much accurate results? Is it usually normal to see this much differences between two methods (according to your [preprint](http://dx.doi.org/10.1101/657874) their correlation rate seems to be very high)? Might this lower mapping rate seen with SAF method be due to the discarded fragments that are mapped to decoys? Can it be said that SAF method doing better job dealing with rRNA contamination and therefore yields more accurate results but with lower mapping rates in my case?. I would be happy to provide more information if necessary. Thank you very much for your time. Best,; Kivanc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/479:5560,down,downstream,5560,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/479,1,['down'],['downstream']
Availability,@RG lines are at odds with binary encoded reference data Segmentation fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/323:70,fault,fault,70,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/323,1,['fault'],['fault']
Availability,"@k3yavi @rob-p Thanks for work pertaining to new Salmon indexing methods as mentioned in this preprint: https://www.biorxiv.org/content/10.1101/657874v2. Some questions on salmon index building with salmon/v1.0 (as I am confused following the documentation at https://salmon.readthedocs.io/en/latest/salmon.html) - let me know if my understanding is correct. 1. Is this how to create SAF indices - https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ - with these steps, I assume I do not have to separately download mashmap and bedtools software. 2. If one has to use SA method, does one still use the generateDecoyTranscriptome.sh method as listed here - https://github.com/COMBINE-lab/SalmonTools/blob/master/scripts/generateDecoyTranscriptome.sh (and this requires the gff file, mashmap and bedtools software). 3. SA and SAF both require genome. Can I still use `salmon index` on the transcriptome file without using genome files? Based on the release notes quoted (copy/pasted) below, I am worried about the phrase `""mapping without selective alignment is disabled""`). . Salmon v1.0 release notes state: . > changes since v.014.1; > In this release of salmon, selective-alignment is enabled by default (and, in fact, mapping without selective-alignemnt is disabled). We may explore, in the future, ways to allow disabling selecive-alignment under the new mapping approach, but at this point, it is always enabled.; > ; ; 4. Page 18 of your preprint pdf states that you used ""salmon v0.15.0 for quasi-mapping"" - so I am assuming I have to keep 2 versions of salmon in my system if I have to do both quasi-mapping and SA/SAF?. 5. Page 19 of your preprint pdf states you used `--mimicBT2 and --useEM for SA and SAF` quantification methods. Is this the recommendation while using SA and SAF methods? ; From salmon v01.4.1 with SA method, I have all along used the default `VBEM `and `--validateMappings` based on info in [SalmonReadTheDocs](https://salmon.readthedocs.io/en/latest/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/442:527,down,download,527,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/442,1,['down'],['download']
Availability,"A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86.fa""; output:; ""{out_data}/ref/idx/complete_ref_lens.bin"",; ""{out_data}/ref/idx/ctable.bin"",; ""{out_data}/ref/idx/ctg_offsets.bin"",; ""{out_data}/ref/idx/duplicate_clusters.tsv"",; ""{out_data}/ref/idx/info.json"",; ""{out_data}/ref/idx/mphf.bin"",; ""{out_data}/ref/idx/pos.bin"",; ""{out_data}/ref/idx/pre_indexing.log"",; ""{ou",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:1408,error,error,1408,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['error'],['error']
Availability,"AGCACCCCCCGACCCCACATCCCCTGCTTCACGGCCCCCCTCGCGGCCTACCCG; +SRR6327122.1 1 length=88; --7-<7----7---77----77A-7--7-A7-7---7-A-A7<F-777-77-A---A<A----77--77------------7------. * Which which program options were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { cell_barcode_seq.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 18:24:03.053] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-19 18:24:03.059] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 18:26:13.307] [alevinLog] [info] Done barcode density calculation",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:3314,avail,available,3314,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['avail'],['available']
Availability,AGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=yes; gl_cv_posix_shell=/bin/sh. ## ----------------- ##; ## Output variables. ##; ## ----------------- ##. ACLOCAL='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing aclocal-1.15'; AMDEPBACKSLASH='\'; AMDEP_FALSE='#'; AMDEP_TRUE=''; AMTAR='$${TAR-tar}'; AM_BACKSLASH='\'; AM_CFLAGS=''; AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'; AM_DEFAULT_VERBOSITY='1'; AM_V='$(V)'; AR=''; AS=''; AUTOCONF='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoconf'; AUTOHEADER='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoheader'; AUTOMAKE='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing automake-1.15'; AWK='awk'; CC='/Library/Developer/CommandLineTools/usr/bin/cc'; CCAS=''; CCASDEPMODE=''; CCASFLAGS=''; CCDEPMODE=''; CFLAGS=''; CFLAG_VISIBILITY=''; COND_ASM_X86_64_FALSE=''; COND_ASM_X86_64_TRUE='#'; COND_ASM_X86_FALSE=''; COND_ASM_X86_TRUE='#'; COND_CHECK_CRC32_FALSE='#'; COND_CHECK_CRC32_TRUE=''; COND_CHECK_CRC64_FALSE='#'; COND_CHECK_CRC64_TRUE=''; COND_CHECK_SHA256_FALSE='#'; COND_CHECK_SHA256_TRUE=''; COND_DECODER_ARMTHUMB_FALSE='#'; COND_DECODER_ARMTHUMB_TRUE=''; COND_DECODER_ARM_FALSE='#'; COND_DECODER_ARM_TRUE=''; COND_DECODER_DELTA_FALSE='#'; COND_DECODER_DELTA_TRUE=''; COND_DE,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:9440,Down,Downloads,9440,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Down'],['Downloads']
Availability,Add an error model specific to Oxford Nanopore long sequencing reads. Added a switch `--ont` that triggers the use of this error model (this implies `--noLengthCorrection`). The error model assumes IID error rate along the reads and a geometric length distribution of clipping at both ends of the reads. (valid after trimming the reads with Oxford's own trimmer).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/617:7,error,error,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/617,4,['error'],['error']
Availability,Add debug mode to avoid segmentation faults.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/266:37,fault,faults,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/266,1,['fault'],['faults']
Availability,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/99:100,error,errors,100,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99,9,"['Error', 'echo', 'error']","['Error', 'echo', 'error', 'errors']"
Availability,"After generating issue #48, I took the recommendation of switching to the standard EM algorithm, but I'm having further problems. However, I don't think the problem was with the Variational EM algorithm, but an issue with how the dataset is behaving. . This is with the same dataset as before (single end, rRNA-depleted, second-strand protocol, extreme depth of 170M+ reads). I have the options --useFSPD and --biasCorrect turned on with library type ""SF""; the full call is . ```; salmon quant -i $SALMON_DIR -l SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT \; --numBootstraps 100 --useFSPD --geneMap $GENES \; --biasCorrect -p 59; ```. I had attempted to use wasabi and run sleuth, but I got an error where the number of transcripts passing the initial filter was ""NA"". I then discovered that for four samples, many of the transcripts had ""-nan"" generated for the ""NumReads"" column, and this led to all of them having ""-nan"" for the TPM column. One sample had ~100 that failed, but the other three had a variable 106K-109K out of 176K total transcripts fail. No warning or error was thrown during the quantifying or EM optimization steps, so I don't know what happened. Interesting, I should note that the NaNs are only generated when both biasCorrect and useFSPD are turned on. NaNs are not generated when I use only one or neither option. (this was only tested with one sample though). If you have immediate suggestions, that would be great. Otherwise, I can work on generating a test dataset.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/50:690,error,error,690,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/50,2,['error'],['error']
Availability,"After starting a blank Ubuntu machine, and then executing:. ```; sudo apt-get update && \; sudo apt-get -y install screen git curl gcc make g++ python-dev unzip \; default-jre pkg-config libncurses5-dev r-base-core r-cran-gplots \; python-matplotlib python-pip python-virtualenv sysstat fastqc \; trimmomatic bowtie samtools blast2; sudo apt-get -y install cmake libboost-all-dev liblzma-dev. curl -O -L https://github.com/COMBINE-lab/salmon/archive/v0.5.0.tar.gz. tar xzf v0.5.0.tar.gz; cd salmon-0.5.0; cmake .; make; ```. gives. ```; In file included from /home/ubuntu/salmon-0.5.0/include/BAMQueue.hpp:146:0,; from /home/ubuntu/salmon-0.5.0/include/AlignmentLibrary.hpp:14,; from /home/ubuntu/salmon-0.5.0/src/SalmonUtils.cpp:13:; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp: In function 'bool checkProperPairedNames_(const char*, const char*, uint32_t)':; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp:247:33: error: 'BOOST_LIKELY' was not declared in this scope; if (BOOST_LIKELY(nameLen > 1)) {; ^; ```. I'm not sure if this is a Boost version requirement, or what -- looks like I have boost 1.54 installed. Suggestions welcome!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/24:919,error,error,919,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/24,1,['error'],['error']
Availability,Alevin Segmentation fault after reading Cellular Barcodes.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/264:20,fault,fault,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264,1,['fault'],['fault']
Availability,Alevin segmentation fault (core dumped),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/337:20,fault,fault,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337,1,['fault'],['fault']
Availability,Allocation error building pufferfish index using v0.99.0 beta1,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/432:11,error,error,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/432,1,['error'],['error']
Availability,"Apologies for the previous empty post. I think I know how to do this now!. Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?. salmon. Describe the bug; I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. To Reproduce. Which version of salmon was used?; salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda. Which reference (e.g. transcriptome) was used?; To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. Which read files were used?; See above. Which which program options were used?; I used the bash script from; https://combine-lab.github.io/salmon/getting_started/. Expected behavior. I expected an output indicating successful quantification. Screenshots. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.87",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/318:222,fault,fault,222,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318,2,"['down', 'fault']","['downloaded', 'fault']"
Availability,"As suggested by Nick Schurch, we should be writing non-error output (including simple logging and informative messages) to stdout rather than stderr.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/55:55,error,error,55,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55,1,['error'],['error']
Availability,"BAM format file describes the option '-t transcripts.fa' for this purpose:. > ./bin/salmon quant -t transcripts.fa -l <LIBTYPE> -a aln.bam -o salmon_quant. Also the command-line help 'salmon quant --help-alignment' names the same options:. alignment input options:. -l [ --libType ] arg Format string describing the library ; type; -a [ --alignments ] arg input alignment (BAM) file(s).; -t [ --targets ] arg FASTA format file containing target ; transcripts. The 'salmon quant' command doesn't recognize either the short or long form of this option and stops execution immediately. There is no difference if the full set of options for a quantification run are provided or only this option. . **To Reproduce**; salmon quant -t Homo_sapiens.GRCh37.87.cdna.all.fa; salmon quant --targets Homo_sapiens.GRCh37.87.cdna.all.fa. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.12.0 and 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable (salmon-0.12.0_linux_x86_64.tar.gz, salmon-0.11.3-linux_x86_64.tar.gz); * Which reference (e.g. transcriptome) was used?; any, independant of transcriptome; * Which read files were used?; not applicable; * Which which program options were used?; other options than '-t/--targets' were irrelevant for provoking the error . **Expected behavior**; Salmon should run and process the alignment file in BAM format. **Screenshots**; --- Error messages ------------------; Exception : [unrecognised option '-t']. Exiting.; Exception : [unrecognised option '--targets']. Exiting.; --------------------------------------. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version:; Linux nnn 4.15.0-36-generic #39~16.04.1-Ubuntu SMP Tue Sep 25 08:59:23 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial. **Additional con",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/343:1293,down,downloaded,1293,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/343,2,['down'],['downloaded']
Availability,Broken linked files cause salmon indexing to pause (indefinitely) without throwing an error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/134:86,error,error,86,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/134,2,['error'],['error']
Availability,Build failure (libtbb),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/51:6,failure,failure,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51,1,['failure'],['failure']
Availability,COND_ENCODER_ARMTHUMB_FALSE='#'; COND_ENCODER_ARMTHUMB_TRUE=''; COND_ENCODER_ARM_FALSE='#'; COND_ENCODER_ARM_TRUE=''; COND_ENCODER_DELTA_FALSE='#'; COND_ENCODER_DELTA_TRUE=''; COND_ENCODER_IA64_FALSE='#'; COND_ENCODER_IA64_TRUE=''; COND_ENCODER_LZMA1_FALSE='#'; COND_ENCODER_LZMA1_TRUE=''; COND_ENCODER_LZMA2_FALSE='#'; COND_ENCODER_LZMA2_TRUE=''; COND_ENCODER_LZ_FALSE='#'; COND_ENCODER_LZ_TRUE=''; COND_ENCODER_POWERPC_FALSE='#'; COND_ENCODER_POWERPC_TRUE=''; COND_ENCODER_SIMPLE_FALSE='#'; COND_ENCODER_SIMPLE_TRUE=''; COND_ENCODER_SPARC_FALSE='#'; COND_ENCODER_SPARC_TRUE=''; COND_ENCODER_X86_FALSE='#'; COND_ENCODER_X86_TRUE=''; COND_FILTER_ARMTHUMB_FALSE='#'; COND_FILTER_ARMTHUMB_TRUE=''; COND_FILTER_ARM_FALSE='#'; COND_FILTER_ARM_TRUE=''; COND_FILTER_DELTA_FALSE='#'; COND_FILTER_DELTA_TRUE=''; COND_FILTER_IA64_FALSE='#'; COND_FILTER_IA64_TRUE=''; COND_FILTER_LZMA1_FALSE='#'; COND_FILTER_LZMA1_TRUE=''; COND_FILTER_LZMA2_FALSE='#'; COND_FILTER_LZMA2_TRUE=''; COND_FILTER_LZ_FALSE='#'; COND_FILTER_LZ_TRUE=''; COND_FILTER_POWERPC_FALSE='#'; COND_FILTER_POWERPC_TRUE=''; COND_FILTER_SIMPLE_FALSE='#'; COND_FILTER_SIMPLE_TRUE=''; COND_FILTER_SPARC_FALSE='#'; COND_FILTER_SPARC_TRUE=''; COND_FILTER_X86_FALSE='#'; COND_FILTER_X86_TRUE=''; COND_GNULIB_FALSE=''; COND_GNULIB_TRUE=''; COND_INTERNAL_SHA256_FALSE=''; COND_INTERNAL_SHA256_TRUE=''; COND_LZMADEC_FALSE='#'; COND_LZMADEC_TRUE=''; COND_LZMAINFO_FALSE='#'; COND_LZMAINFO_TRUE=''; COND_LZMALINKS_FALSE='#'; COND_LZMALINKS_TRUE=''; COND_MAIN_DECODER_FALSE='#'; COND_MAIN_DECODER_TRUE=''; COND_MAIN_ENCODER_FALSE='#'; COND_MAIN_ENCODER_TRUE=''; COND_SCRIPTS_FALSE='#'; COND_SCRIPTS_TRUE=''; COND_SHARED_FALSE=''; COND_SHARED_TRUE=''; COND_SMALL_FALSE=''; COND_SMALL_TRUE='#'; COND_SYMVERS_FALSE=''; COND_SYMVERS_TRUE='#'; COND_THREADS_FALSE=''; COND_THREADS_TRUE=''; COND_W32_FALSE=''; COND_W32_TRUE='#'; COND_XZDEC_FALSE='#'; COND_XZDEC_TRUE=''; COND_XZ_FALSE='#'; COND_XZ_TRUE=''; CPP=''; CPPFLAGS=''; CYGPATH_W='echo'; DEFS=''; DEPDIR='.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:12795,echo,echo,12795,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['echo'],['echo']
Availability,"CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000415118.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000632684.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping);",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:3094,error,error,3094,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,2,"['avail', 'error']","['available', 'error']"
Availability,Can salmon be made available for ARM based arch,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/556:19,avail,available,19,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/556,1,['avail'],['available']
Availability,Compilation error (179191a): Linked RapMap missing isDecoy function,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/418:12,error,error,12,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418,1,['error'],['error']
Availability,"Compilation fails with ""lto1: internal compiler error: Segmentation fault""",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/860:48,error,error,48,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860,2,"['error', 'fault']","['error', 'fault']"
Availability,Compilation of newest release crashes with many undefined reference errors:; ```; [ 72%] Linking CXX executable unitTests; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o): In function `Curl_disconnect':; (.text+0xb3c): undefined reference to `idn2_free'; (.text+0xb58): undefined reference to `idn2_free'; (.text+0xb74): undefined reference to `idn2_free'; (.text+0xb90): undefined reference to `idn2_free'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o): In function `Curl_connect':; (.text+0x4e9e): undefined reference to `idn2_free'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o):(.text+0x4eba): more undefined references to `idn2_free' follow; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o): In function `fix_hostname.isra.7':; (.text.unlikely+0x2e4): undefined reference to `idn2_check_version'; (.text.unlikely+0x301): undefined reference to `idn2_lookup_ul'; (.text.unlikely+0x34b): undefined reference to `idn2_strerror'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-cookie.o): In function `Curl_cookie_add':; (.text+0xbb1): undefined reference to `psl_builtin'; (.text+0xbca): undefined reference to `psl_is_cookie_domain_acceptable'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-version.o): In function `curl_version':; (.text+0xd6): undefined reference to `idn2_check_version'; (.text+0xe2): undefined reference to `idn2_check_version'; (.text+0x106): undefined reference to `psl_get_version'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-version.o): In function `curl_version_info':; (.text+0x1e9): undefined reference to `idn2_check_version'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-socks_gssapi.o): In function `check_gss_err.part.0':; (.text+0x57): undefined reference to `gss_release_buffer'; (.text+0x77): undefined reference to `gss_display_status'; (.text+0x9b): undefined reference to `gss_release_buffer'; (.text+0xcf): undefined reference to `gss_release_buffer'; (.text+0xef): undefined reference to `gss_display_status'; (.text+0x10e): ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/425:68,error,errors,68,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/425,1,['error'],['errors']
Availability,Compile files due to failed download of tbb-VERSION tar distro,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/496:28,down,download,28,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496,1,['down'],['download']
Availability,"Compiled from source (https://github.com/COMBINE-lab/salmon/archive/v0.10.0.tar.gz) on OS X 10.13.4 (Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64 x86_64). The error generally occurs in the first 2000000 fragments (tried with paired-end samples, either IU or ISR). \#\#\# salmon (mapping-based) v0.10.0; \#\#\# [ program ] => salmon; \#\#\# [ command ] => quant; \#\#\# [ index ] => { salmon010.index }; \#\#\# [ libType ] => { A }; \#\#\# [ mates1 ] => { L001_R1.fastq.gz }; \#\#\# [ mates2 ] => { L001_R2.fastq.gz }; \#\#\# [ validateMappings ] => { }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/228:210,error,error,210,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/228,1,['error'],['error']
Availability,Configure error installing salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:10,error,error,10,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['error'],['error']
Availability,"Contrary to earlier versions, e.g. ```sh; $ curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v1.7.0/salmon-1.7.0_linux_x86_64.tar.gz; $ tar zxf salmon-1.7.0_linux_x86_64.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 669 100 669 0 0 2676 0 --:--:-- --:--:-- --:--:-- 2676; 100 52.5M 100 52.5M 0 0 26.0M 0 0:00:02 0:00:02 --:--:-- 33.2M; 20220314-W11-1 (d073) 12:51:34 hb-x1:~/tmp/salmon; ○ $ ls -la salmon-1.7.0_linux_x86_64/; total 1184; drwxr-xr-x 4 hb hb 4096 Feb 16 10:01 .; drwxrwxr-x 4 hb hb 4096 Mar 14 12:51 ..; drwxr-xr-x 2 hb hb 4096 Feb 15 21:05 bin # <===; drwxr-xr-x 2 hb hb 4096 Feb 15 21:05 lib # <===; -rw-r--r-- 1 hb hb 1193382 Feb 15 21:05 sample_data.tgz; ```. the binaries for the recent salmon 1.8.0 release does not share any of the files or subfolders with ""group"" and ""other"";. ```sh; $ curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; tar zxf salmon-1.8.0_linux_x86_64.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 669 100 669 0 0 7689 0 --:--:-- --:--:-- --:--:-- 7689; 100 91.9M 100 91.9M 0 0 33.4M 0 0:00:02 0:00:02 --:--:-- 35.9M; 20220314-W11-1 (d073) 12:51:14 hb-x1:~/tmp/salmon; ○ $ ls -la salmon-1.8.0_linux_x86_64/; total 1184; drwx------ 4 hb hb 4096 Mar 10 09:57 .; drwxrwxr-x 3 hb hb 4096 Mar 14 12:51 ..; drwx------ 2 hb hb 4096 Mar 14 12:51 bin # <===; drwx------ 2 hb hb 4096 Mar 8 06:57 lib # <===; -rw------- 1 hb hb 1193382 Mar 8 06:57 sample_data.tgz # <===. $ ls -la salmon-1.8.0_linux_x86_64/bin; total 442304; drwx------ 2 hb hb 4096 Mar 14 12:51 .; drwx------ 4 hb hb 4096 Mar 10 09:57 ..; -rw------- 1 hb hb 452905776 Mar 8 06:57 salmon # <===; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/761:102,down,download,102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/761,2,['down'],['download']
Availability,Corrected: segmentation fault 11 on salmon tutorial,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/318:24,fault,fault,24,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318,1,['fault'],['fault']
Availability,"Could someone help me with errors I'm getting while trying to run Salmon index?. The full error output is given below. Here a few lines from that output:. Pass Filling Filtering; 1 1186 error: Can't write to a temporary file; error: Can't read the input file. Segmentation fault. I'm working on a Linux system and Salmon v1.2.0. While Salmon is running it does create the temp index files which are deleted after completing the script. However, it does not seem to create all the files e.g. versionInfo.json is missing. These files are created:. ![image](https://user-images.githubusercontent.com/61871236/86531929-79d01d80-bebd-11ea-882b-2a7cab39fdd4.png). **Full error output:**. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2020-07-04 15:08:27.992] [jLog] [info] building index; out : /scratch/jl2e19/salmon_index; [2020-07-04 15:08:27.992] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2020-07-04 15:08:47.186] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482.1|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:47.348] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300.1|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:49.395] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602.2|OTTHUMT00000485301.2|TRBD1-202|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:51.746] [puff::index::jointLog] [warning] Entry with header [ENST00000626826.1|ENSG00000281",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:27,error,errors,27,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,6,"['error', 'fault']","['error', 'errors', 'fault']"
Availability,Critical error in Salmon in alignment mode,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/131:9,error,error,9,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131,1,['error'],['error']
Availability,"Currently alevin requires a transcript to gene mapping file to be provided with the --tgMap flag. A similar file is required when computing gene level quantification downstream of Salmon. This file needs to exactly match the transcript IDs used when building the initial salmon index, furthermore, when building the initial index, a gtf file containing the transcript to gene mappings is typically provided. In order to ensure ideal mappings of transcripts to genes, it would be ideal if, when constructing the salmon index when a GTF file is provided, an additional tgMap file was automatically produced from the GTF and written to the index output directory that could then be automatically detected by alevin, and/or then manually passed to other downstream tools. Automatically generating this file, and thus allowing the --tgmap flag to become optional would ensure that the subsequent transcript to gene mappings were perfectly matched to the original quantification. This could additionally allow a future option for salmon to automatically produce gene level quantifications.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/595:166,down,downstream,166,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/595,2,['down'],['downstream']
Availability,"Currently on develop branch, there is a build error. https://travis-ci.org/COMBINE-lab/salmon/builds/418288039; https://api.travis-ci.org/v3/job/415232259/log.txt. ```; cd /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0 && CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc toolset=gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/COMBINE-lab/salmon/external/install/include -L/home/travis/build/COMBINE-lab/salmon/external/install/lib"" link=static install. g++: error: unrecognized command line option ‘-std=c++14’; ```. I suspect the `g++` (Not `g++-N`) is wrongly used for to build boost.; As a result, the old version `g++` version 4.8 does not support `-std=c++14`. Maybe. https://www.boost.org/doc/libs/1_66_0/more/getting_started/unix-variants.html; https://stackoverflow.com/questions/5346454/building-boost-with-different-gcc-version. Maybe below kind of process is necessary if CC=gcc-N. ```; $ echo ""using gcc : 7 : /usr/bin/g++-7 ; "" >> tools/build/src/user-config.jam; $ ./bootstrap.sh ...; $ ./b2 --toolset=gcc-7 ...; ```. Here is my work to fix the issue.; Still working in progress.; But you can imagine how I am trying to fix it. I am not familiar with the `cmake`.; https://github.com/junaruga/salmon/commit/6cb73098155f0e776d4eb68bc639f3d761dd8963. If possible, I want you to fix this issue :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/275:46,error,error,46,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/275,3,"['echo', 'error']","['echo', 'error']"
Availability,"Currently, `salmon` fails hard (termination with return code `1`) when no reads are mapable; that limits its applicability when screening for pathogens such as viruses that are not expected to express their factors in every sample. From my point of view that leads to [unexpected behavior in bcbio](https://github.com/chapmanb/bcbio-nextgen/issues/1883), which is also reflected in an issue [raised here](https://github.com/COMBINE-lab/salmon/issues/119). . I would like to (re-)raise these issues here and encourage a change to `salmon` that leads to a more graceful behavior in such outlier cases, i.e. quantitation values of `0` for all quantified features instead of the hard error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/130:680,error,error,680,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/130,1,['error'],['error']
Availability,"Dear Dr. Patro,. First of all, my apologies as I want to make it clear that I have just posted this same question on Bioconductor community as well in a hope to get a quick reply. . I have put great amount of effort to find out answer to this question on internet. Couldn't find it anywhere (bioconductor, biostars, seqanswers, github etc.). I have 3 replicates for each sample and one of the replicates from each sample is single-end and other two are paired-end as SE and PE were processed at different facilities (I know I have to do batch correction in downstream analysis). Now I want to use transcript level abundance from quant.sf file which I derived for each replicates using Salmon's quasi-mapping pipeline (used appropriate flags for SE and PE reads). All these (SE & PE) reads are strand specific. . My question is, can I use quant.sf directly from these replicates for downstream DE analysis using tximport or do SE or PE requires separate kind of processing before I can use them together as replicates for downstream analysis. I am planning to use limma-voom for my DE analysis. Thank you so much for your time and apologies if the question was answered already.; Sandip Darji",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/156:557,down,downstream,557,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/156,3,['down'],['downstream']
Availability,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/562:702,down,downsampled,702,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562,5,"['down', 'error']","['downsampled', 'error']"
Availability,"Dear `salmon` developers,. We are using salmon at ONT for quantifying transcripts from alignments of cDNA reads to transcriptomes on a regular basis and in [some](https://github.com/nanoporetech/pipeline-transcriptome-de) of our pipelines.; Transcriptomic aligments of long reads generate less multimapping reads than short reads (depeneding on the structure of the transcriptome), however we would prefer not to ignore them during quantification in order to make maximal use of the data.; However, since the error model was built for short reads, until now we have used the tool with the error model turned off (`--noErrorModel`), which is not optimal. Would it be possible to add a simple error model suitable for long read alignments? We propose something like the following for calculating the likelihood of an alignment:. - The likelihood of the aligment would be calculated based on the empirical distributions (or a normal fit) of edit distances conditioned on the length of the alignment. We could provide you with this information if needed.; - The likelihood of left and right soft or hard clipped sequences would be calculated as a function of their length (such as (1/x)^z, where the parameter z can be tuned based on real datasets). A more complicated model could be build taking into account the error profile of the long reads. It might be overkill though. I had a look at the source code and it seems to me that it might not be hard to implement it, however I am lacking the intimate knowledge of the codebase to do it easily.; Let me know if you would be interested in adding this feature. If yes, we could evaluate the change in the quality of estimates on real datasets. Best regards,; Botond Sipos",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/519:509,error,error,509,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/519,4,['error'],['error']
Availability,"Dear all,. I am trying to analyze direct nanopore RNA sequencing data with salmon.; Now I seem to have problems with getting the command line properly:. I use:; salmon quant -i salmon_index -l r dmso_sham_4.fastq --validateMappings -o transcripts_quant. and get the following; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.10.3; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { salmon_index }; ### [ libType ] => { r }; ### [ ] => { dmso_sham_4.fastq }; ### [ validateMappings ] => { }; ### [ output ] => { transcripts_quant }; Logs will be written to transcripts_quant/logs; [2024-05-29 11:13:30.128] [jointLog] [info] setting maxHashResizeThreads to 24; Exception : [unknown library format string : R]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2024-05-29 11:13:30.128] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-05-29 11:13:30.128] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-05-29 11:13:30.128] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-05-29 11:13:30.128] [jointLog] [info] parsing read library format. So, as far I can see, being a bloody beginner, the error: Exception : [unknown library format string : R] somehow suggests that the small letter r in my command line is interpreted as a capital letter???; Or is there anything else wrong with my command?. Help would be appreciated. Thanks and best,; Matthias",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/933:1383,error,error,1383,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/933,1,['error'],['error']
Availability,"Dear all,. I started to follow the Salmon ""Real data example"" on https://combine-lab.github.io/salmon-tutorials/2021/ont-long-read-quantification/. Everything goes fine up to:; minimap2 –t 8 –a -x map-ont –p 1.0 –N 100 minimap2_spike_index SRR6058582.fastq. when I get the following error:; [ERROR] failed to open file '–t': No such file or directory. ???. Help would be appreciated. Thanks and best,; Matthias",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/931:283,error,error,283,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/931,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Dear community,. I have 4 lane files for each sample. I want to run Alevin on these samples. Alevin runs without any error, but the mapping rate is too low (about 5%). I tried different k-mers, different versions of transcriptome datasets, and all protocols (--dropseq / --chromium / --chromiumV3), but my mapping rate is still too low. Let me explain my workflow. These are my samples:. ```; Sample1_S1_L001_I1_001.fastq.gz Sample1_S1_L002_R1_001.fastq.gz Sample1_S1_L003_R2_001.fastq.gz; Sample1_S1_L001_R1_001.fastq.gz Sample1_S1_L002_R2_001.fastq.gz Sample1_S1_L004_I1_001.fastq.gz; Sample1_S1_L001_R2_001.fastq.gz Sample1_S1_L003_I1_001.fastq.gz Sample1_S1_L004_R1_001.fastq.gz; Sample1_S1_L002_I1_001.fastq.gz Sample1_S1_L003_R1_001.fastq.gz Sample1_S1_L004_R2_001.fastq.gz; ```. I generated single I1, R1 and R2 files by concatenating fastq.gz files across lanes; for instance, Sample1_S1_L001_R1_001.fastq.gz + Sample1_S1_L002_R1_001.fastq.gz + Sample1_S1_L003_R1_001.fastq.gz + Sample1_S1_L004_R1_001.fastq.gz -> Single_S1_L001_R1_001.fastq.gz . I indexed my transcriptome by salmon, and I used Alevin using the indexed transcriptome. I used the following command:. ```; salmon alevin -l ISR \; -1 ""Single_S1_L001_R1_001.fastq.gz"" \; -2 ""Single_S1_L001_R2_001.fastq.gz"" \; --chromiumV3 \; -i $my_index \; -p 48 \; -o outputfolder \; --tgMap $my_tgmap \; --expectCells 10000 \; --forceCells 10000; ```. However, my mapping rate is only ~5%. I used cell ranger on the same data and the same transcriptome; the mapping rate is ~95%.; Is there any bug on Alevin? How can I improve the mapping rate?. Thank you!. ```; Alevin log:; [2022-12-03 15:43:12.004] [alevinLog] [info] Found 117342 transcripts(+0 decoys, +35 short and +0 duplicate names in the index); [2022-12-03 15:43:12.072] [alevinLog] [info] Filled with 117377 txp to gene entries; [2022-12-03 15:43:12.083] [alevinLog] [info] Found all transcripts to gene mappings; [2022-12-03 15:43:12.097] [alevinLog] [info] Processing barcodes fi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/814:117,error,error,117,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/814,1,['error'],['error']
Availability,Dear developer; Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2).; code salmon quant -i $IndexDir -p 15 -l A -1 ${CleanDataDir}/${treat}${CleanReads1Suffix} -2 ${CleanDataDir}/${treat}${CleanReads2Suffix} -o ${outDir}/${treat}. How should I go about solving this error or investigating its cause?; ; Best wishes!,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/941:16,Error,Error,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/941,2,"['Error', 'error']","['Error', 'error']"
Availability,"Dear developers,. I noticed that salmon introduced the ""--ont"" option in version 1.5+ but this option is not valid anymore for the latest v1.6.0. So I was wondering the reason behind this. Also, say if I want to use v1.6.0 to analyze my ONT direct-RNA sequencing data, which options would you recommend regarding the following options: `--noErrorModel`,` --noLengthCorrection`, and `--libType`? Thanks!. ```; $ ./salmon-1.6.0_linux_x86_64/bin/salmon quant --ont ; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '--ont'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. $ ./salmon-1.5.2_linux_x86_64/bin/salmon quant --ont ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###exception : [the option '--libType' is required but missing]. Exiting. ```; Best,; Jia-Xing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/735:931,avail,available,931,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/735,2,['avail'],['available']
Availability,"Dear salmon authors,. While I was using **salmon (v0.11.0, downloaded executable, on a Ubuntu Linux** server) to process a **single-end RNA-seq library**, it reported the following error message:. ""**[ERROR] Transcript IDs are not in sorted order; please report this bug on GitHub!**"" . Actually I found it reports this error message for over tens of millions of times through greping the log file. And the command line I applied to invoke salmon was like this:. ""**salmon quant -i mySalmonIndexFile(FMD based/transcriptome) -l A -r myLibrary.fastq -p 8**"". It looks like this is something about single-end reads processing, since I arbitrarily picked up another pair-end library, which works prefectly fine with command line ""-1 PE_library_1.fastq -2 PE_library_2.fastq"", however, when I deliberately provide only one end of the library with ""-r PE_library_1/2.fastq"", exactly the same error was recurred immediately. Curiously, salmon could still accomplish the whole procedure and generate the results file with the aformentioned error reported. But I' m worried about its reliability in this situation. I' m wondering if you have any clues about this issue. With many thanks ahead!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/265:59,down,downloaded,59,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/265,7,"['ERROR', 'down', 'error', 'reliab']","['ERROR', 'downloaded', 'error', 'reliability']"
Availability,"Dear salmon support team,. I firstly assembled MAGs from my metagenome data, then predicted the ORF gene operons using the prodigal software to generate the corresponding prodigal predicted MAG *faa files. Now, I am using each MAG *fna fasta file to map on their corresponding prodigal predicted *faa protein sequences. **But, the TPM values in my quantification files - quant.sf are all as 0.**. So, could you give me some suggestions on this condition?. **Salmon command lines**; #index each MAG faa file; for f in ${quant_sf_dir}*faa; do ; fname=${f##*/}; fbase=${f##*.} ; index_dir=${f%.faa}; #mkdir -p ${index_dir}; #echo ${index_dir}; /services/tools/salmon/1.5.2/bin/salmon index -t ${f} -i ${index_dir}; done. #quantify each MAG fna using each corresponding MAG indexed faa file; for i in ${MAG_PATH}*.fasta; do; iname=${i##*/}; i_dir=${iname%.fasta}; index_dir=${quant_sf_dir}${i_dir}; /services/tools/salmon/1.5.2/bin/salmon quant -i ${index_dir} -l A \; -r ${i} \; **--minAssignedFrags 1 \**; -p 20 -o ${index_dir}_salmon_count > ${index_dir}.salmon.log 2>&1;; done. Best,. Bing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/792:622,echo,echo,622,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/792,1,['echo'],['echo']
Availability,"Dear salmon team and @k3yavi,. I am an happy user of alevin on scRNAseq data (10x). In some circumstances, I have to compare samples from very uneven sequencing depth (less than 100k reads per cell vs 1M reads per cell,), which naturally produces a huge ""batch effect"", some transcripts being impossible to detect at a lower sequencing depth. For 10x datasets, cellranger offers to compensate this kind of difference across datasets by subsampling, and I should tell it works very well. I tried this strategy before running alevin, by the use of python scripts subsampling the fastq files prior any alevin quasi-mapping. However, all my attempts failed, as all downstream analyses shown that this strategy didn't correct the batch effect at all with alevin (visualization on dimension reduction/UMAP show a huge difference between batches, while the cellranger subsampling method clearly corrects it). An important point is by default, the cellranger method corrects according to the amount of mapped reads between samples. So ideally, I should have to evaluate the difference in term of mapped reads to compute a subsampling coefficient (fraction of reads to keep). What correct alevin metrics should I use to estimate such a coefficient?. Considering the probalistic approach of alevin's transcript quantification, I am wondering if it could be any better way to normalize the samples to account for this kind of issue? Also, any option to subsample the reads (take a read into account under a certain probability) during alevin quantification would be of great help in my case. Thank you for your work and your time,; Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/305:661,down,downstream,661,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/305,1,['down'],['downstream']
Availability,"Dear salmon team. I'm using salmon v1.3.0 and I've tried to ran the quantification using the command as is in the web page. ` salmon quant -i mus_musculus_index -l A -1 ../../output_paired_PVI18_1.fastq.gz -2 ../../output_paired_PVI18_2.fastq.gz -p 4 --validateMappings -o quants/`. but it give me the error . Exception : [unrecognised option '--validateMappings']. Exiting. at first look my line doesn't seems to be bad-formatted, so can you help me with the error please. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/563:302,error,error,302,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/563,2,['error'],['error']
Availability,"Due to a current default in the boost library (https://github.com/boostorg/math/issues/1211) in boost::math::digamma, there is a performance hit on aarch64. This happens on v1.10.3 of Salmon, with GNU compiler 13 on Linux aarch64. A 4-thread quantization of one of the Salmon tutorials DRR0* series files spends ~15% of time in this routine (called within CollapsedEMOptimizer). On a larger example, we see 7% performance hit over a run that takes 1300 seconds on 4 cores. On x86 this time is small enough to be lost in the noise. `salmon quant -i athal_index -l A ; -1 DRR016125/DRR016125_1.fastq.gz; -2 DRR016125/DRR016125_2.fastq.gz ; -p $threads --validateMappings -o quants/DRR016125_quant`. There is a simple fix which is to ensure the CMake/Makefiles ensure salmon compiles with: ; `-DBOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS`; or to add that to any file that brings in boost::math via adding `#define BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS` at the start. With that change, a 1300 second runtime drops to 1212 for the larger test case, and for the tutorial case is 48 seconds down to 40 on a 4-core r8g.xlarge (Graviton4). Whilst Boost may fix the issue soon - it's likely that older versions of the library will be found installed for some time. It would be helpful to add this define to cmake settings, or the sources.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/966:1085,down,down,1085,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966,1,['down'],['down']
Availability,Duplicates error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/683:11,error,error,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/683,1,['error'],['error']
Availability,"EEXT_TRUE=''; am__fastdepCCAS_FALSE=''; am__fastdepCCAS_TRUE=''; am__fastdepCC_FALSE=''; am__fastdepCC_TRUE=''; am__include='include'; am__isrc=''; am__leading_dot='.'; am__nodep='_no'; am__quote=''; am__tar='$${TAR-tar} chof - ""$$tardir""'; am__untar='$${TAR-tar} xf -'; ax_pthread_config=''; bindir='${exec_prefix}/bin'; build='arm-apple-darwin22.6.0'; build_alias=''; build_cpu='arm'; build_os='darwin22.6.0'; build_vendor='apple'; datadir='${datarootdir}'; datarootdir='${prefix}/share'; docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'; dvidir='${docdir}'; exec_prefix='NONE'; host='arm-apple-darwin22.6.0'; host_alias=''; host_cpu='arm'; host_os='darwin22.6.0'; host_vendor='apple'; htmldir='${docdir}'; includedir='${prefix}/include'; infodir='${datarootdir}/info'; install_sh='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/install-sh'; libdir='${exec_prefix}/lib'; libexecdir='${exec_prefix}/libexec'; localedir='${datarootdir}/locale'; localstatedir='${prefix}/var'; mandir='${datarootdir}/man'; mkdir_p='$(MKDIR_P)'; oldincludedir='/usr/include'; pdfdir='${docdir}'; prefix='/Users/jeremybono/Downloads/salmon-1.10.1/external/install'; program_transform_name='s,x,x,'; psdir='${docdir}'; sbindir='${exec_prefix}/sbin'; sharedstatedir='${prefix}/com'; sysconfdir='${prefix}/etc'; target_alias=''; xz=''. ## ----------- ##; ## confdefs.h. ##; ## ----------- ##. /* confdefs.h */; #define PACKAGE_NAME ""XZ Utils""; #define PACKAGE_TARNAME ""xz""; #define PACKAGE_VERSION ""5.2.2""; #define PACKAGE_STRING ""XZ Utils 5.2.2""; #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; #define PACKAGE_URL ""http://tukaani.org/xz/""; #define NDEBUG 1; #define HAVE_ENCODER_LZMA1 1; #define HAVE_ENCODER_LZMA2 1; #define HAVE_ENCODER_DELTA 1; #define HAVE_ENCODER_X86 1; #define HAVE_ENCODER_POWERPC 1; #define HAVE_ENCODER_IA64 1; #define HAVE_ENCODER_ARM 1; #define HAVE_ENCODER_ARMTHUMB 1; #define HAVE_ENCODER_SPARC 1; #define HAVE_DECODER_LZMA1 1; #define HAVE_DECODER_LZMA2 1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:15397,Down,Downloads,15397,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Down'],['Downloads']
Availability,ERROR: Txp to Gene Map not found for transcripts.. no quant file in output dir,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/326:0,ERROR,ERROR,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326,1,['ERROR'],['ERROR']
Availability,ERROR: Version Server Response: Not Found; missing symbol called,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/957:0,ERROR,ERROR,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/957,1,['ERROR'],['ERROR']
Availability,ERROR: cell doesn't have any read count,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:0,ERROR,ERROR,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,1,['ERROR'],['ERROR']
Availability,ERROR: file [DRR016125_2.fastq.gz] does not appear to exist!,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/963:0,ERROR,ERROR,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/963,1,['ERROR'],['ERROR']
Availability,Error (bug): version `GLIBC_PRIVATE' not found,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/927:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927,1,['Error'],['Error']
Availability,Error about Transcript * appears in the reference but did not appear in the BAM,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/945:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/945,2,['Error'],['Error']
Availability,Error bar on TPM estimation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/246:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/246,1,['Error'],['Error']
Availability,Error building develop version: lzma.h not found,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/99:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99,1,['Error'],['Error']
Availability,Error building salmon (possible issue with Boost's iostreams),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/21:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/21,1,['Error'],['Error']
Availability,Error compiling salmon on Ubuntu 14.04,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/24:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/24,1,['Error'],['Error']
Availability,Error during Salmon installation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/235:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235,1,['Error'],['Error']
Availability,Error generating index.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/224:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/224,1,['Error'],['Error']
Availability,"Error in DGEList(counts = cnt, group = group) : non-numeric values found in counts",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/842:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/842,1,['Error'],['Error']
Availability,Error in geneIndexList[[i]] : subscript out of bounds,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/833:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833,1,['Error'],['Error']
Availability,Error in library(edgeR) - there is no package called 'edgeR',MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/855:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855,1,['Error'],['Error']
Availability,Error in the tutorial,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/244:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/244,1,['Error'],['Error']
Availability,Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/941:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/941,1,['Error'],['Error']
Availability,Error running salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/914:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914,1,['Error'],['Error']
Availability,Error when indexing,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,1,['Error'],['Error']
Availability,Error while loading shared libraries: libtbbmalloc_proxy.so.2: cannot open shared object file: No such file or directory,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/219:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/219,1,['Error'],['Error']
Availability,Error with Salmon build: It removes identical transcript sequences,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/214:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214,1,['Error'],['Error']
Availability,Error with bam files that has paired end reads + singletons,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/140:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140,1,['Error'],['Error']
Availability,Error with index build while mapping reads,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,1,['Error'],['Error']
Availability,Error with installing Salmon v0.7.2,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/112:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112,1,['Error'],['Error']
Availability,Error: The index version file /labs/Resources/MMUL_10/index.salmon/versionInfo.json doesn’t seem to exist. Please try re-building the salmon index.],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/559:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/559,1,['Error'],['Error']
Availability,Error: no valid ID found for GFF record,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/937:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/937,1,['Error'],['Error']
Availability,Error:alpha weight was too small (only some samples),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119:0,Error,Error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119,1,['Error'],['Error']
Availability,Errors in Salmon Indexing with --features Option,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/865:0,Error,Errors,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/865,1,['Error'],['Errors']
Availability,Errors when installing from source,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/139:0,Error,Errors,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139,1,['Error'],['Errors']
Availability,"Exception : [ERROR: Failed to open file filename.bam, exiting!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/222:13,ERROR,ERROR,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222,1,['ERROR'],['ERROR']
Availability,Exception : [Error: RapMap-based indexing is not supported in this version of salmon.],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/832:13,Error,Error,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832,1,['Error'],['Error']
Availability,Exception : [rapidjson internal assertion failure: IsObject()],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/518:42,failure,failure,42,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518,1,['failure'],['failure']
Availability,"ExperimentT&, bool, SalmonOpts&, double, uint32_t) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; uint32_t = unsigned int]’; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2553:83: required from here; /usr/include/c++/4.8.2/bits/unique_ptr.h:184:16: error: no match for call to ‘(std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadSeq>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>::deleter_type {aka processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__ptr);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atom",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:32211,error,error,32211,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"ExperimentT&, bool, SalmonOpts&, double, uint32_t) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; uint32_t = unsigned int]’; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2553:83: required from here; /usr/include/c++/4.8.2/bits/unique_ptr.h:262:16: error: no match for call to ‘(std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadPair>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>::deleter_type {aka processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadPair>*&)’; get_deleter()(__p);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atom",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:37155,error,error,37155,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,FYI: Compile error for 1.4.0 and current git master,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/664:13,error,error,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664,1,['error'],['error']
Availability,"Failure to compile using -lpthreads flag (should use -lpthread, without ""s"" instead ?)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/207:0,Failure,Failure,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207,1,['Failure'],['Failure']
Availability,Feature request: long read error model,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/519:27,error,error,27,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/519,1,['error'],['error']
Availability,"First off, thanks for the great tool!. I've been looking for a way to quantify the length of all recovered transcripts for single-cell RNA-Seq data. The salmon quant approach that generates a quant.sf is the equivalent of what I need. Since I can't specify UMI information with salmon quant, I was curious whether this output is available for alevin. Just can't seem to find anything online after scouring the web for several hours. . Thank you for any insight you can provide,; Aaron",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/693:97,recover,recovered,97,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/693,2,"['avail', 'recover']","['available', 'recovered']"
Availability,"First time trying to use SALMON 1.5.2 (not bioconda) index with decoy.txt on Arabidopsis thaliana. I'm using AtRTD3 Transcriptome ""atRTD3_07082020.fasta"" (https://ics.hutton.ac.uk/atRTD/RTD3/ - username atrtd; password atrtd3-06092021) and the genome ""GWHBDNP00000000.1"" from https://ngdc.cncb.ac.cn/gwh/Assembly/21820/show. I followed the steps from (https://gist.github.com/k3yavi/a486647c35158a8296cec543ed9b526f) using this two files as follow:; ```; grep ""^>"" <(zcat GWHBDNP00000000.1.genome.fasta.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i -e 's/>//g' decoys.txt; cat atRTD3_07082020.fasta GWHBDNP00000000.1.genome.fasta.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode; ```. The index generation failed, creating a folder with only two files ""pre_indexing.log"" and ""ref_indexing.log""([pre_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515704/pre_indexing.log) and [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/7515701/ref_indexing.log)) . I recieved this error from the terminal:; ![Screenshot from 2021-11-10 17-24-24](https://user-images.githubusercontent.com/71443183/141187955-4601923f-001f-424a-969a-8ad346f2cf36.png). - OS: Ubuntu Linux; - Version 21.10. Thanks for this great software!!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/720:1041,error,error,1041,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/720,1,['error'],['error']
Availability,"Fixes #966 ; This fix resolves performance issue where Boost::math unnecessarily promotes doubles to long double, which is not fully supported by hardware leading to slow-downs. The change is to set a define during cmake process which prevents promotion ( -DBOOST_MATH_PROMOTE_DOUBLE_POLICY=false )",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/968:171,down,downs,171,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/968,1,['down'],['downs']
Availability,Found an invalid character / Seg fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/521:33,fault,fault,33,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/521,1,['fault'],['fault']
Availability,"Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz; * Which read files were used? not quantifying yet, I'm at the indexing step.; * Which which program options were used? salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Expected behavior**; A clear and concise description of what you expected to happen.; Producing directory that contains indexed files to be applied to ""salmon quant"" command. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 2 pictures: a segmentation fault screenshot and a gdb backtrack screenshot in ""**To Reproduce**"" section. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] : CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:2550,down,downloaded,2550,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,1,['down'],['downloaded']
Availability,"Good Afternoon,. I hope this message finds you well. . I am having a hard time running salmon version 0.14.1 downloaded via bioconda. I am trying to count my reads using alignment-based mode. Whenever I run the program, I get similar error messages to [issue 104](https://github.com/COMBINE-lab/salmon/issues/104). Here is the command I am running:. salmon quant -t trimmed_fasta/SRR1810204_1.trim.fastq -l A -a results/bam_files/SRR1810204_1.trim.fastq.bam -o salmon_test. trimmed_fasta/SRR1810204_1.trim.fastq is a fastq sample that I've obtained following trimmomatic and contains the forward strands of the data. . results/bam_files/SRR1810204_1.trim.fastq.bam is the bam file following bwa alignment of the fastq file here and its reverse strand to a reference database. . Could the issue be that I am not using both forward and reverse strands in the target argument for salmon since they were both used to generate the alignment file? I tried to look at the docs for guidance on the best course of action, and I had a hard time finding info. All help would be very much appreciated. All the best,; Craig",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/520:109,down,downloaded,109,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/520,2,"['down', 'error']","['downloaded', 'error']"
Availability,"Good evening,; I have been trying to do some alignments using salmon but I get this error after a few; hours. error: commlib error: got read error (closing ""compute-0-19.local/shepherd_ijs/1""). Your ""qlogin"" request could not be scheduled, try again later. Here is one example of the codes I used that didn't work, some others worked fine. for this I built a decoy-aware transcriptome file. salmon quant --libType A -1 L395_gfp_plus_Track_3446_3455_R1.fastq -2; L395_gfp_plus_Track-3446-3455_R2.fastq -i desalttama_salmon_index31 -p 12; --writeUnmappedNames --writeMappings -o desalttama_salmon_index31_quant_L395. I used This qlogin; qlogin -q all.q -l h_rt=48:00:00 -l mem_free=10G -R yes -now n -pe smp 1. How can I solve this issue?; Thank you; Beatriz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/580:84,error,error,84,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/580,4,['error'],['error']
Availability,"Greetings,. I would like to thank you for providing this as an open-source tool. Currently, I am performing Salmon Indexing using human Gencode V35. I am following the instruction from: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. But when I try running the command of ""**salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode**"", I hit the error of ""exception : [unrecognised option '-d']. Exiting."". In the --help section the argument of ""-d"" is not present. Please do advise me on how I should proceed with indexing?. Regards,; Ben. ![image](https://user-images.githubusercontent.com/69944967/137584568-a0378455-a751-4d1f-885b-a66addf07160.png). ![image](https://user-images.githubusercontent.com/69944967/137584591-c61a3777-aff5-416f-beee-a33ad81ea5dd.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/714:391,error,error,391,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/714,1,['error'],['error']
Availability,"Greetings,. When trying to debug test failure, I ended up with an incomplete error messages which turned out to stem from a typo in the variable name, so I took the liberty to make the whole message a bit more verbose to help with the present and future debugging. I thought you might be interested.; Have a nice day, :); Étienne.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/810:38,failure,failure,38,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810,2,"['error', 'failure']","['error', 'failure']"
Availability,"HI,; I using Salmon version1.2.1_l.; I have mate pairs for transcriptome mapping. ; `./bin/salmon quant -i /media/amit/Amit/Usr/new_salmon_index/ -l IU -1 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L3_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq -2 /media/amit/Amit/Usr/DNA12/fastq/V300012057_L4_HK500HUMpybEAAKRAAPEI-530_1.fq V300012057_L4_HK500HUMpybEAAKRAAPEI-530_2.fq -p 8 --validateMappings -o /media/amit/Amit/Usr/DNA12/fastq/DNA12.quant`. But salmon gives an error:; ```; The following errors were detected with the read files; ======================================================; ERROR: file [V300012057_L3_HK500HUMpybEAAKRAAPEI-530_2.fq] does not appear to exist!. ```; Kindly help. I have followed all the instructions noted here:; https://github.com/COMBINE-lab/salmon/issues/69. Regards.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/737:498,error,error,498,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/737,3,"['ERROR', 'error']","['ERROR', 'error', 'errors']"
Availability,Hello ; We are currently trying to use Salmon quant mode with BAM files that were generated from another lab's work. We have continued to get the error below and are unsure what the problem is. Our original command used the libtype A parameter which gave us a similar warning to the one below. We then sorted the BAM files by name using samtools sort -n and tried to run the command again and got the same error. We have used a myriad of different libtypes and continue to get the same error. We have a reference transcriptome generated from a de novo transcriptome assembly that the previous lab produced. WARNING: Detected suspicious pair --- ; The names are different:; read1 : D61655M1:276:D10YJACXX:3:1114:17825:17511; read2 : D61655M1:276:D10YJACXX:3:1114:17825:18115; The proper-pair statuses are inconsistent:; read1 [D61655M1:276:D10YJACXX:3:1114:17825:17511] : proper-pair; mapped; matemapped. read2 : [D61655M1:276:D10YJACXX:3:1114:17825:17511] : no proper-pair; mapped; matenot mapped. We have seen that others have had similar issue but haven't found a thread that mentions what the user did to remedy the problem. Any suggestions would be appreciated! We are using salmon V0.14.1.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/582:146,error,error,146,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/582,3,['error'],['error']
Availability,"Hello Bob, ; I am trying to implement Salmon 1.5.3 and I have problems running the quant mode. I succeed to prepare the index using decoy protocol and I am trying reads quantification mode.; I; used this command line:; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant -i salmon_index -l ISF -1 rawDataPE/ERR3537668_1.fastq.gz -2 rawDataPE/ERR3537668_2.fastq.gz --validateMappings -o transcripts_quant_test. and I got this message error:; Exception : [std::bad_alloc]; ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant was invoked improperly.; For usage information, try ./src/salmon-1.5.2_linux_x86_64/bin/salmon quant --help; Exiting. Would you have any idea why I got this message error? Could you please help me to solve this problem?; Best ; Luciana",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/717:430,error,error,430,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/717,2,['error'],['error']
Availability,"Hello I'm a new in bioinformatics. when I upload my quant.sf files to R for using DESeq2, my file's indexes are weird. I thought my index should be formed like ENST00000456328.2 or ENSG00000223972.5; but my index name is; ""ENST00000456328.2|ENSG00000223972.5|OTTHUMG00000000961.2|OTTHUMT00000362751.1|DDX11L1-202|DDX11L1|1657|processed_transcript|"". So I think that's why I wasn't able to upload my quantificated files to R using tximport(). I used the index that I downloaded from gencode ""gencode.v37.annotation.gtf.gz""; and I used the gene reference ""gencode.v37.transcripts.fa"". ![image](https://user-images.githubusercontent.com/80821527/111452633-112c8680-8756-11eb-84c6-d654219f56bb.png); ![image](https://user-images.githubusercontent.com/80821527/111452674-1ab5ee80-8756-11eb-8648-fdffad002745.png). thank you for helping me",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/640:466,down,downloaded,466,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/640,1,['down'],['downloaded']
Availability,"Hello Salmon team,. I've recently been exploring the alignment mode of salmon quant and noticed that the --eqclasses option is mentioned in the help manual. Based on my understanding of the documentation, I initially thought that the --eqclasses option is used when input files are in alignment (BAM/SAM format). However, when I tried to use it, I encountered the following error: ""Conflicting options 'alignments' and 'eqclasses'."". Is the --eqclasses option applicable in alignment mode?; If not, when should it be used?; Does using the --eqclasses option in the context of alignment mode imply starting the quantification with a pre-computed equivalence class file and a reference transcriptome, thus bypassing the need for an alignment file (BAM)?. Thank you for your continuous efforts in developing and maintaining Salmon. I'm looking forward to any clarifications you can provide on this matter.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/877:374,error,error,374,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/877,1,['error'],['error']
Availability,"Hello all, . I really wish Salmon was easier to install. . When running: . _cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX='/home/.../salmon-master/'_. I get the following message: . _Making Release build; running /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh 2>&1; /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh: line 33: curl: command not found; -- fetch RAPMAP exit code 127. CMake Error at CMakeLists.txt:265 (message):; Could not fetch RapMap source [fetchRapMap.sh returned exit code 127]. -- Configuring incomplete, errors occurred!; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeOutput.log"".; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeError.log""._. This seems to be an issue that keeps coming up. What is the proper way to solve it? ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/331:409,Error,Error,409,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331,2,"['Error', 'error']","['Error', 'errors']"
Availability,"Hello all, we are trying to use salmon quant on environmental samples using a big index but the quant step keeps crashing. While trying to quant different samples all crashed at the same step with the error message: `Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]`. The system is part of a cluster and we have requested 500gb of RAM and disk available for the job and I kept track of the memory and disk usage which never exceeded 254gb. lsb_release -a; ```; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 6.4 (Carbon); Release:	6.4; Codename:	Carbon; ```. Do you have any idea what can be the causing the error?. Thanks. We are using the precompiled salmon bin and running it with:. `salmon quant -i $index -1 $f1 -2 $f2 -o $output_folder --meta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/129:201,error,error,201,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129,3,"['avail', 'error']","['available', 'error']"
Availability,"Hello everybody, . I've checked the google group, but it seems pretty deserted. I'm new to Salmon, but I do need to process a lot of experiments on my cluster, and it keeps overwhelming the I/O (and if I don't, the process would take much longer than I can wait - order of years). . So, I've had two questions: ; - can Salmon use SRA files directly? I.e. in hisat2 they implemented NGS sdk from NCBI and if you have your SRA file downloaded, you can read it same as you'd read fastq or fastq.gz. ; - can Salmon batch-process RNA-seq experiments? The goal is to not read the index every time - e.g. you've loaded the human transcriptome index into memory once, and then processed 100 files or so. . Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/319:430,down,downloaded,430,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/319,1,['down'],['downloaded']
Availability,"Hello! I am having some difficulty quantifying RNAseq data with salmon in mapping-based mode. I have been struggling with this for a few days and would be very grateful for any advice on how to move forward. Thank you in advance. Here is my command:; ```; #!/bin/bash -l ; #SBATCH -J male_salmon_map; #SBATCH -t 700:00:00; #SBATCH -p high; #SBATCH --cpus-per-task=24; source ~/.bashrc; source activate salmon; cd /home/seboles/abaloneraw/salmon_quantification/salmon_male/abalone_orfs/; ./bin/salmon -i salmon_index -p 8 -l --libType A -1 *R1_001.qc.fq.gz -2 R2_001.qc.fq.gz --validateMappings -o transcripts_quant; ```; # And here is my error message:. ```; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:29.347] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:29.347] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:29.347] [jointLog] [info] parsing read library format; [2019-07-24 13:33:29.347] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/ve",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:638,error,error,638,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['error'],['error']
Availability,"Hello!. I'm packaging salmon and many of its dependencies for Debian in support of https://github.com/Blahah/transrate/issues/160. I have a messy patch to enable the use of external libraries instead of bundled or downloaded copies at http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/dependency-fix. As I'm not a CMake expert I was only able to make it work for Debian instead of a generic solution that would fall back to the shipped copies or downloading as it is now. Perhaps you all are better with CMake than I am? A generic solution would be best so I don't have to adjust the patch with every change to the CMakeLists.txt. Specifically it would be great to support; - [ ] external copy of spdlog headers and the cereal serialization headers; - linking to external dynamic libraries for; - [ ] boost; - Headers: https://packages.debian.org/sid/amd64/libboost1.58-dev/filelist; - Sample library layout: https://packages.debian.org/sid/amd64/libboost-filesystem1.58-dev/filelist; - [ ] bwa; - Headers & library: https://ftp-master.debian.org/new/bwa_0.7.12-5.html; - [ ] jellyfish; - Headers & library: https://packages.debian.org/sid/amd64/libjellyfish-2.0-dev/filelist; - [ ] tbb; - Headers & library: https://packages.debian.org/sid/amd64/libtbb-dev/filelist; - [ ] libgff; - Headers & library: https://ftp-master.debian.org/new/libgff_1.0-1.html; - [ ] staden IOLib; - Headers & library: https://packages.debian.org/sid/amd64/libstaden-read-dev/filelist. I also have a patch to support the latest release of jellyfish that I can turn into a pull request, should you want it: http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/19:214,down,downloaded,214,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19,2,['down'],"['downloaded', 'downloading']"
Availability,"Hello!; This might be an unusual request, but I have been attempting to use Salmon Alevin for mapping of **scATAC-seq data** (10X Genomics platform) and have a few questions on how to best do this (/whether it is possible at all!). _**A bit of background**_:; I have two sequenced libraries of the same cross-species hybrid: scRNA-seq 10X v3 and scATAC-seq 10X (alas, not from the same cells). My aim is to use Salmon Alevin on both, using a home-made diploid reference so that down the line I can do allele-specific analysis on both datasets and then compare allelic imbalance. _**What I have done**_:; I generated a diploid reference ""feature set"" for the scATAC-seq, to mimic in a way how the reference transcriptome is interpreted. I did this by using bulk ATAC data from both species, calling peaks with MACS2, and then using this peak set (BED format) to extract strain- and species-corrected sequences (fasta) to use as a reference. _**My questions/issues**_:; Considering the basic Alevin invocation:; `salmon alevin -l ISR -1 cb.fastq.gz -2 reads.fastq.gz --chromiumV3 -i salmon_index_directory [--whitelist barcodes.tsv] -p 10 -o alevin_output`; ; `-1 cb.fastq.gz` —> these should be CB+UMI reads, but in 10X ATAC there are no UMIs, so this would only be a 16bp CB. I'm afraid this would be a major issue considering how Alevin relies on UMI whitelisting. Would it help if I already provide a list of filtered whitelisted CB, as provided by Cell Ranger? I have this from a quality control alignment to only one parental species. `--chromiumV3 `—> If I understand correctly, this tells the program to search for the first X bases of cb.fastq.gz as CB, and the first Y bases of it as UMI (as per [this ](https://github.com/COMBINE-lab/salmon/issues/369) thread). So technically one could swap --chromiumV3 for --end 5 --barcodeLength X --umiLength Y and set this manually? But again, what if I only have CBs?. `-2 reads.fastq.gz` —> I understand this is meant for 10X scRNA-seq - which only ha",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/611:478,down,down,478,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/611,1,['down'],['down']
Availability,"Hello, . While running the quantifications of my samples while quasi-mapping, the resulting created quant folders remain empty following the shell script is done running. An example of this would be from the ""Getting Started"" tab: . #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 -o quants/${samp}_quant; done . Once this is done, the created folders are empty, whereas I would expect them to continue to quant files. Of note, I do sometimes get complete quantification of one or two samples (again, referring to the A.thaliana example used in the ""Getting Started"" tab. My, albeit limited, experience might suggest that my case might be a matter of number of threads used/made available. I would appreciate any feed back/confirmation on this. As a reference, I was initially running this on a quad core (3.1 GHz Intel Core i7) MacBook Pro. Thank you for taking the time to consider this, most likely, simple issue",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/302:306,echo,echo,306,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/302,2,"['avail', 'echo']","['available', 'echo']"
Availability,"Hello, ; Could someone tell me what this error message means and if there is a way to fix the issue? I'm trying to use salmon for my Master's project data (I break down salmon into two parts to make it easier for myself) but keep getting the error message below during the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/855:41,error,error,41,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855,4,"['down', 'error']","['down', 'downloaded', 'error']"
Availability,"Hello, I am relatively new to bioinformatics/salmon. I am using the newest version of salmon (v1.10.0, downloaded executable). I created two decoy-aware transcriptomes using 1. a Trinity assembly created with 24 RNA-seq samples plus a published genome of the same species (an insect) and 2. a transcriptome compiled using Evigene into which I fed the same Trinity assembly, a MEGAHIT assembly (created with the same read files), and a previously published transcriptome from the same species, along with the same published genome of the same species as above. Running salmon with the two different indexes yields very different results using the same set of paired-end RNA-seq files. With the Trinity assembly-only-index, I get ""expected_format"": ""IU""; whereas with the Evigene index, I get ""expected_format"": ""ISR"". Why would this differ when the read files are exactly the same? Isn't the read file what is being looked at to automatically detect the library type? . For the Trinity index, here is an example from one sample:; ""strand_mapping_bias"": 0.5196075475175259; ; The same sample run with the Evigene index gave:; ""strand_mapping_bias"": 0.00013477965729161834. . For every sample run with the Trinity index, a warning ""Detected a *potential* strand bias > 1% in an unstranded protocol"" appeared, whereas this was very rare for samples run with the Evigene index, even though when using the latter, the strand-mapping_bias was FAR farther from the 0.50 ideal (it was always < 0.01). Why is this the case? I expected similar results using both indexes, because the read files used to create the two transcriptomes were largely the same, and both used Trinity as part (or all) of the transcriptome assembly process. . Thank you in advance for your insight. Holly Williams",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/840:103,down,downloaded,103,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/840,1,['down'],['downloaded']
Availability,"Hello, I am trying to install this Salmon 0.11.3 from source but I am running into the following error when running make:. [ 80%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd2c): warning: the use of `tempnam' is dangerous, better use `mkstemp'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::conflicting_options(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x5318): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x53b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xd13f): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::processQuantOptions(SalmonOpts&, boost::program_options::variables_map&, int)':; SalmonUtils.cpp:(.text+0xeb97): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0xec0a): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xf846): more undefined references to `boost::program_options",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/309:97,error,error,97,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309,1,['error'],['error']
Availability,"Hello, I'm debugging a salmon install problem with conda. I don't have time to double check, but it looks something like:. * if you install salmon 1.1.0, you get a version of tbb, 2021.1.1, from conda-forge ; * if you then try to upgrade to salmon 1.4.0, you actually want to get a different version of tbb from defaults, but the version pinning doesn't require it so it sticks with conda-forge; * if you force `tbb==2020.3` for salmon 1.4.0, things work; * if you don't, you get `salmon: error while loading shared libraries: libtbb.so.2: cannot open shared object file: No such file or directory`. The error shows up with:; `tbb 2021.1.1 h4bd325d_0 conda-forge`. and the functioning version of tbb seems to be:; `tbb 2020.3 hfd86e86_0 defaults`. I don't have time to chase this down further at the moment, but hopefully this will be sufficiently clear for me to figure it out later :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/637:489,error,error,489,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/637,3,"['down', 'error']","['down', 'error']"
Availability,"Hello, I'm interested in trying out Salmon for the first time. In this analysis, I would like to disentangle a host eukaryote organism's reads for quantification from read data containing it and eight of its microbial symbionts. The host (C. elegans worms) of course has a great genome and transcriptome available.` transcript.fa` is no problem.; The microbes all have genomes and gtfs, but not transcript files (on NCBI). Luckily, I'm not interested in quantifying them - I checked a couple samples with STAR and BBsplit (within the BBmap toolkit) and microbial read abundance is too low for any one bacterium to use in analysis. However, I still need to get those bacteria reads out of the picture when quantifying the host worm reads/transcripts. **What is the best approach to go from a mixed-organism read pool to quantified host transcripts?**. - Perhaps, target-transcriptome = worm_transcripts.fa, with a concatenated decoy composed of worm transcripts, worm genome, and the genomes of the 8 microbes? This seems like the fastest and least error prone method, based on my developing understanding of Salmon. - Or, truly align reads and bin them to new fastq files using genomes+gtfs with STAR/samtools (or just genomes with BBsplit). Then take the putative worm-only reads, and then run Salmon in a single-organisms routine manner? Perhaps this is more accurate in a way?. Thank you for any advice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/901:304,avail,available,304,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/901,2,"['avail', 'error']","['available', 'error']"
Availability,"Hello, I'm trying to generate an index from a transcriptome, that was generated by StringTie, with salmon, but I'm getting the following error. What could be the problem?. # salmon index -t /home/...out.gtf -i /home/...salmon-index. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-05-23 10:37:53.715] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; Elapsed time: 0.0602932s. Replaced 0 non-ATCG nucleotides; Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 3.7924e-05s; Writing sequence data to file . . . done; Elapsed time: 1.7461e-05s; [info] Building 32-bit suffix array (length of generalized text is 0); Building suffix array . . . FAILURE: return code from libdivsufsort() was -1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/224:137,error,error,137,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/224,2,"['FAILURE', 'error']","['FAILURE', 'error']"
Availability,"Hello, I'm trying to install Salmon on my CentOS 7 system, as suggested here:; https://salmon.readthedocs.io/en/latest/building.html#installation. I decided to get the cmake `-DFETCH_BOOST=TRUE` option, in spite of having installed Boost. ; I get this error (here is the full log):. `cmake -DFETCH_BOOST=TRUE`. > Salmon requires g++ 5.2 or greater. https://pastebin.com/UmVJw0Ae. This is particularly odd.; I have installed a recent GCC version and even rebuilt Boost after it... As you can see, if I type . > gcc --version; > g++ --version. By root and user, I always get... > gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and . > g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. On another tutorial, I found that I should open a bash instead while installing gcc/g++, with the instruction:. `scl enable devtoolset-7 bash`. When I run . > gcc --version; > g++ --version. By root and user, this time the proper version is recognised!. > gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and. > g++ (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. As you can see, this time the latest version is recognised. I'm quite sure the bash was open even when I rebuilt Boost... But even though I re-open the bash before cma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/388:252,error,error,252,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/388,1,['error'],['error']
Availability,"Hello, salmon developer!; I am working on an arm HPC machine. And when I tried to build with salmon on it. I found a little problem in the CMakeLists.txt. ```; not setting -DHAVE_NUMERIC_LIMITS128; CMake Error at /home/hzwi/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Iconv (missing: Iconv_LIBRARY); Call Stack (most recent call first):; /home/houzhuangwei/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /home/hzw/arm_software/biosoft/cmake-3.23.0-linux-aarch64/share/cmake-3.23/Modules/FindIconv.cmake:165 (find_package_handle_standard_args); CMakeLists.txt:362 (find_package); ```; It seems the cmake can not found the right path of libiconv.; So I change the CMakeLists.txt the 362-365 line.; ```; find_package(Iconv REQUIRED); if(NOT Iconv_IS_BUILT_IN); set(ICONV_LIB Iconv::Iconv); endif(); ```; ```; find_package(iconv); if(NOT Iconv_IS_BUILT_IN); set(ICONV_LIB Iconv::Iconv); endif(); ```; or ; I use the -D in the cmake like; ```; cmake -DFETCH_BOOST=TRUE -DBOOST_ROOT=/path/boost -DCMAKE_INSTALL_PREFIX=/path/salmon-1.8.0/salmon_install -DIconv_LIBRARY=/path/libiconv-1.16/iconv_install/lib ; ```; Then the configure was success",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/776:204,Error,Error,204,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/776,1,['Error'],['Error']
Availability,"Hello,. Compilation bug; Trying to compile latest source code of salmon 0.11.1 (git fetched) on CentOS 7. With:; CXX=/usr/bin/clang++; CC=/usr/bin/clang; /usr/bin/clang --version; clang version 3.4.2 (tags/RELEASE_34/dot2-final); Target: x86_64-redhat-linux-gnu; Thread model: posix. /path/to/cmake/cmake-3.11.4/cmake-3.11.4-Linux-x86_64/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/path/to/.local/boost/boost-1.67.0/lib -DBOOST_INCLUDEDIR=/path/to/.local/boost/boost-1.67.0/include -DCMAKE_INSTALL_PREFIX=/path/to/.local/salmon/salmon-0.11.1 .. boost 1.67 containing all default 113 libraries. Error:; Many warnings and fatal errors, including; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/edlib.cpp:4:; /path/to/downloads/salmon/include/edlib.h:4:10: fatal error: 'cstdint' file not found; #include <cstdint>; ^; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/AlevinUtils.cpp:1:; /path/to/downloads/salmon/include/AlevinUtils.hpp:4:10: fatal error: 'algorithm' file not found; #include <algorithm>; warning: unknown warning option '-Wno-unused-local-typedefs' [-Wunknown-warning-option]; In file included from /path/to/downloads/salmon/src/jellyfish/mer_dna.cc:18:; /path/to/downloads/salmon/include/jellyfish/mer_dna.hpp:27:10: fatal error: 'iostream' file not found; #include <iostream>; /path/to/downloads/salmon/include/eigen3/Eigen/Core:66:12: fatal error: 'new'In file included from file /path/to/downloads/salmon/src/LibraryFormat.cpp not :found; 1:; /path/to/downloads/salmon/include/LibraryFormat.hpp: #include <new>4:10:. Best,; juugii",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/263:644,Error,Error,644,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/263,15,"['Error', 'down', 'error']","['Error', 'downloads', 'error', 'errors']"
Availability,"Hello,. Hoping you can help troubleshoot a salmon quant failure. We're running V0.9.1. BAM files are transcriptome aligned using OSA aligner. The program is calling out a malformed key:pair? The salmon_quant.log is blank. > ./bin/salmon quant -t transcripts.fa -l A -a A549_S1_001.bam -o A549_S1_quant &; [1] 10291; us1salxngst01> Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ; ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/222:56,failure,failure,56,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222,2,"['ERROR', 'failure']","['ERROR', 'failure']"
Availability,"Hello,. I am currently using Salmon v1.2.0 which was build from source and is run on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't receive any errors during these runs",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/524:948,recover,recoverOrphans,948,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/524,1,['recover'],['recoverOrphans']
Availability,"Hello,. I am having a problem with an inconsistent segmentation fault: 11. Please see below. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I've only worked in salmon mode. **Describe the bug**; Following the tutorial procedure exactly, I'm experiencing seemingly random segmentation fault: 11 warnings on some alignments but not others. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. Salmon was installed yesterday through the getting started tutorial using the conda install method. The sample data downloaded fine using the provided scripts, and the index creation seemed normal. When I went to run the program (with the options given in the tutorial), 10 of the 16 alignments failed with a segmentation fault: 11 warning. Attached is a screen shot of the warning on one of the failed alignments. the quant.sf files of the successful alignments seem normal, and the files do not exist in the faulted samples. . To test repeatability, I deleted all of the quant files, and ran the program again. Again, most samples failed, and the samples that did not we different from the first run. **Expected behavior**; I expected all of the tutorial samples to produce quant.sf files successfully. **Desktop (please complete the following information):**; - OSX 10.13.3. Thank you,; Matt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/295:64,fault,fault,64,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295,5,"['down', 'fault']","['downloaded', 'fault', 'faulted']"
Availability,"Hello,. I am using the recent downloaded executable for v1.1.0 and am using salmon (bulk-mode). Noticed one potential bug and have some general questions regarding bootstraps. 1. The potential bug I noticed was when I use `--numGibbsSamples` the logs/salmon_quant.log file is always blank. When I remove this flag and re-run the program the log file is correctly printed out. 2. Regarding Bootstraps:. I've been working with parameters to min/max my predicted estimates to quantified cDNA results that we have. Through this process I was not performing bootstraps and was just using the TPM results that were located within the `quants.sf` file and have been getting some good results, with R-squared values of ~0.98 for actual v. predicted plots. As a note, even after running hundreds of runs with the same parameters, the TPM values in the `quants.sf` file never really fluctuated that much between runs and were generally nearly identical. . However, I thought it would be best to bootstrap `--numBootstraps` each Salmon run and average the bootstraps to get more accurate results. After doing 1,000 bootstraps per sample I noticed that the TPM values I calculated from numbers of mapped reads in the `bootstraps.gz` fluctuated a lot more and overall brought my R-squared values down to ~0.87. (I used your ConvertBootstrapsToTSV.py script to get the read counts from the bootstrap file and then calculated the TPMs using the effective lengths from the `quants.sf` file. As looking through previous issues (#246) I was under the assumption that the bootstrap file only contained new mapped read estimates and the effective lengths should be the same for all bootstrap runs.) . My question is why do the TPM values in the `quants.sf` file not fluctuate as much (even after 100+ runs using the same parameters), while calculated TPM values from bootstraps of the same run are showing greater variance?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/466:30,down,downloaded,30,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/466,2,['down'],"['down', 'downloaded']"
Availability,"Hello,. I came across this error after executing the make index command in salmon. Eg:salmon index -t gencode.v46.transcripts.fa.gz -i human_index. . Please help me out. . Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/957:27,error,error,27,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/957,1,['error'],['error']
Availability,"Hello,. I noticed a small typo in the documentation for one of the command line options. I haven't used .rst files before, but I believe I was able to track down the source of the typo. Thanks for your work on salmon. Matt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/314:157,down,down,157,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/314,1,['down'],['down']
Availability,"Hello,. I recently updated to 1.3.1 and I have been trying to set minScoreFraction to 0.7. However when i try to set this value I get an error stating it is an unknown option. Anyone else have this issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/549:137,error,error,137,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/549,1,['error'],['error']
Availability,"Hello,. I tried creating a salmon index for bos taurus but was not successful. I created the decoy file using:. grep ""^>"" <(gunzip -c Bos_taurus.ARS-UCD1.2.dna.toplevel.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. When i try to index using ; salmon index -t bos_taurus_gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode ; OR; salmon index -t Bos_taurus.ARS-UCD1.2.cdna.all.fa.gz -i bos_taurus_107_index --decoys decoys.txt -k 31. I get an error. The last two lines of the log file are. [puff::index::jointLog] [critical] The decoy file contained the names of 2211 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1. What is happening and how can i solve this issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/788:478,error,error,478,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/788,4,"['down', 'error']","['downstream', 'error', 'errors']"
Availability,"Hello,. My lab is in the process of testing out Salmon and potentially switching to it from traditional aligners. With a traditional aligner, we use picard's MarkDuplicates to remove PCR duplicates. Is there a way to remove PCR duplicates with Salmon? I tried using --writeMappings to generate a BAM and feed that into picard, but I just get a SAM validation error: ""Not primary alignment flag should not be set for unmapped read."". Best,; Brian",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/136:359,error,error,359,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/136,1,['error'],['error']
Availability,"Hello,; I'm running in to problems trying to run salmon quant. I've installed the latest version 0.11.2 via bioconda, and successfully constructed an index of the C. elegans Wormbase WS265 transcriptome with the following settings:. `salmon index -k 21 -p 24 -t ${txome_reference} -i ${index_path}`. but upon running quant with the following command:. `salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; `. I get a segmentation fault error midway through running:. ```hits: 122146249, hits per frag: 2.10747; processed 58500001 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/268:467,fault,fault,467,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268,3,"['error', 'fault']","['error', 'fault']"
Availability,"Hello,; I'm trying to compile salmon into arm64 linux system, but I'm getting the error bellow:; ```; ...; Found Jemalloc library --- using this memory allocator; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; TBB_LIBRARIES = /usr/lib/aarch64-linux-gnu/libtbbmalloc_proxy.so;/usr/lib/aarch64-linux-gnu/libtbbmalloc.so;/usr/lib/aarch64-linux-gnu/libtbb.so;/usr/lib/aarch64-linux-gnu/libtbb.so; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon-0.14.2/build; [ 34%] Completed 'libtbb'; [ 39%] Built target libtbb; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. ```. How to fix this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/433:82,error,error,82,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/433,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hello,; I'm trying to run the docker image on a cluster to quantify fastq files using the mapping mode. ; I'm using it with singularity ( already used it on another cluster and it worked perfectly). Here the command:; singularity exec docker://combinelab/salmon:latest salmon quant --validateMappings -l A -p ${threads} -o ./salmon_map -i ${salmon_index} -1 ${file_1} -2 ${file_2}. And the error:; salmon: error while loading shared libraries: libtbbmalloc.so.2: cannot open shared object file: No such file or directory. I suspect that it's missing inside the image and that in the other cluster it was running because it was taking the one outside the image ( the cluster where it worked had lots of libraries and softwares available, in this other you need to load the modules). Cheers; Claudio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/447:390,error,error,390,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/447,3,"['avail', 'error']","['available', 'error']"
Availability,"Hello,; salmon 0.11.1, on CentOS 7.; Tested with install from precompiled binaires, and from bioconda/conda 4.5.9. (1) salmon -h is fine, but salmon [command] -h takes lots of time, and ends up with; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. It could be related to any bad local proxy settings. Is there any way to skip the upgrade information lookup as a command-line option ?. (2) segmentation error with alevin; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /path/to/sample_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { /path/to/sample_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 14:31:41.793] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 14:31:41.810] [alevinLog] [info] Processing barcodes files (if Present) ; processed 109 Million barcodes; segmentation error (core dumped). No any other logs available, programs stopped. Best,; juugii.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/264:497,error,error,497,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264,3,"['avail', 'error']","['available', 'error']"
Availability,"Hello. I'm trying to quantify the samples included with the Salmon tutorial, but is giving me a malloc error. I'm using ANACONDA with salmon 1.1.0 on MacOS Catalina. First, I had to separately download sailfish because wasn't included with the salmon package. So the first error was:. _Processing sample DRR016125. -bash: sailfish: command not found_. I solved this by downloading sailfish from biobuilds, but then I'm getting this error:. Processing sample DRR016125. sailfish(23259,0x105f71dc0) malloc: *** malloc_zone_unregister() failed for 0x7fff90f4f000. How can I solve this issue. I'm totally new on RNA-seq analysis and don't know how to continue. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/508:103,error,error,103,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/508,5,"['down', 'error']","['download', 'downloading', 'error']"
Availability,"Hey @rob-p and @k3yavi! Avi and I have chatted a bit about this offline, and [I've commented about this in the past](https://github.com/COMBINE-lab/salmon/discussions/629#discussioncomment-777414), but I'm currently attempting to extend alevin's use to the newer combinatorial indexing experiments like [SPLiT-seq](https://science.sciencemag.org/content/360/6385/176) or the commercial solution, [ParseBio](https://www.parsebiosciences.com/) (the biotech formerly known as SplitBio). Now that you support different barcode geometries and allow the user to specify where these barcodes should be expected, this _should_ be doable. . I've downloaded the [raw data from the original SPLiT-seq paper](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3017261), and we have some ParseBio data of our own; my goal is to help you all write a vignette on this once we get the details worked out. . In short, the R1 file contains cDNA sequence, and R2 contains a 10bp UMI followed by 3 different barcodes in the following arrangements (note: ParseBio seems to shift BC1 up a few bp, to 79-86):; - UMI: 1-10; - BC3: 11-18; - BC2: 49-56; - BC1: 87-94. The intervening bases are a combination of common and variable sequences. The other wrinkle with these approaches is that the cDNA can be amplified using either oligo-dT or random hexamer barcodes. The net effect of this is that BC1 can be one of two options, and some barcode combinations need to be pooled to represent the same cell. For example:. AACGTGAT-CTGTAGCC-ACACAGAA; GATAGACA-CTGTAGCC-ACACAGAA. may be the same cell, amplified by two different means. . We know how the BC1s are paired, so Avi suggested pre-processing the R2 FASTQ file such that we locate random hexamer BC1 sequences and modify them to the matched oligo-dT sequence. In the above example, we'd correct some R2 reads that contain ""GATAGACA"" in the 87-94 position to ""AACGTGAT"". I [wrote a script](https://github.com/jeremymsimon/SPLITseq) (in perl because I'm old-school) that d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699:637,down,downloaded,637,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699,1,['down'],['downloaded']
Availability,"Hey all,. I'm currently attempting to install Salmon from source on a machine running Ubuntu 16.04. I'm following along with the installation instructions (http://salmon.readthedocs.io/en/latest/building.html#installation); however, I am running into errors when running cmake:. michael@thinkpad:/opt/salmon/salmon-0.8.2/build$ cmake -DFETCH_BOOST=TRUE; CMake Error: The source directory ""/opt/salmon/salmon-0.8.2/build"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI. I tried to fix the issue by moving CMakeLists.rxt from the parent directory into the build directory, but I was met with even more errors, I've attached the created CMakeError.log and CMakeOutput.log file. [CMakeOutput.txt](https://github.com/COMBINE-lab/salmon/files/1109023/CMakeOutput.txt); [CMakeError.txt](https://github.com/COMBINE-lab/salmon/files/1109022/CMakeError.txt). I'm thinking that this may be a simple issue that I've overlooked as I'm new to Linux, and installation using CMake is new to me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/139:251,error,errors,251,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139,3,"['Error', 'error']","['Error', 'errors']"
Availability,"Hey there!; I got the following error when running the command `~/tools/Trinityrnaseq-v2.6.6/util/align_and_estimate_abundance.pl --seqType fq --samples_file gpul_adpul_samples.txt --transcripts Gpul_Adpul_trinity.Trinity.fasta --est_method salmon --trinity_mode --prep_reference`:. _[2020-06-11 01:53:08.809] [jointLog] [warning] NOTE: Read Lib [[ /dev/fd/63, /dev/fd/62]]_. _Detected a potential strand bias > 1% in an unstranded protocol check the file: ADPUL3/lib_format_counts.json for details_. _CMD: /home/curupi/tools/Trinityrnaseq-v2.6.6/util/support_scripts/salmon_trans_to_gene_results.pl ADPUL3/quant.sf /home/curupi/data/pulchella/fastq/trim/Gpul_Adpul_trinity.Trinity.fasta.gene_trans_map > ADPUL3/quant.sf.genes_. strand_mapping_bias: 0.9945332800206606. May anyone help me, please?; Thank you in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/536:32,error,error,32,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/536,1,['error'],['error']
Availability,"Hey, . First, thanks a lot for implementing Alevin for the analysis of scRNA-seq, it is super useful. I would like to open the file ```alevin/quants_tier_mat.gz``` but I am not being able to do it. . When I try to follow the parser instructions [here](https://github.com/k3yavi/vpolo/blob/242b519ea47eae1cce14bb3bafb736a1f3ad7d40/vpolo/alevin/parser.py) I am facing this error when importing sce:; ```; ImportError: cannot import name 'sce' from partially initialized module 'sce' (most likely due to a circular import) (/home/egonie/.local/lib/python3.8/site-packages/sce/__init__.py); ```. I have already imported```vpolo``` which I have installed with: ; ```; pip3 install vpolo; ```. Also I have tested the R library ```fishpond```with the function; ```; fishpond::readEDS(numOfGenes = num.genes, numOfOriginalCells = num.cells, countMatFilename = tier.file, tierImport = T); ```; Which outputs this message:; ```; Error in validObject(x) : ; invalid class ""dgCMatrix"" object: all row indices must be between 0 and nrow-1; ```. Any insight that helps in reading Alevin tiers file would be much appreciated. Thanks in advance and sorry for the inconveniences. Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/596:371,error,error,371,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/596,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hey,. I'm pretty new to RNA-seq so hope this question is formatted okay! . I've carried out my RNA-seq analysis using STAR into feature counts but wanted to redo the analysis using Salmon as everything I'm reading says its the way forward! I've tried to create a genome index using the following files. ``; wget http://ftp.ensembl.org/pub/release-103/fasta/cricetulus_griseus_picr/cdna/Cricetulus_griseus_picr.CriGri-PICR.cdna.all.fa.gz; wget http://ftp.ensembl.org/pub/release-103/fasta/cricetulus_griseus_picr/dna/Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz; ``; Then I created the decoy file and the combined file them using the following. ; `; grep ""^>"" <(zcat Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz) | cut -d "" "" -f 1 > decoys.txt; cat Cricetulus_griseus_picr.CriGri-PICR.cdna.all.fa.gz Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz > gentrome.fa.gz; `; And finally ran the index using ; `./salmon index -t /data/fcr18ab/Refrence/New_Refrence_Files/gentrome.fa.gz -d /data/fcr18ab/Refrence/New_Refrence_Files/decoys.txt -p 1 -i /fastdata/fcr18ab/Adrian_salmon_index/salmon_index `. The error I get is shown below in the file. It says it can't find any of the decoy sequences in the combined file, but I have searched through them and they are there?. [Super_Low.txt](https://github.com/COMBINE-lab/salmon/files/6254711/Super_Low.txt). Sorry if this is a super simple issue. The cell line is a cancer cell which has not got defined chromosomes. I'm sure its me messing up somewhere but I can't figure out where!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/644:1145,error,error,1145,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/644,1,['error'],['error']
Availability,"Hi , . I am having issues with calculating the differential splicing using SUPPA. I have tried several times but kept getting the same error message, even though all files required are uploaded. . The error message is below:; ```; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; [1] ""Parsing samples...""; [1] ""Loading ./results/iso_tpm_formatted.txt...""; Error: first_condition %in% colnames(input_file) are not all TRUE; Execution halted; [1] ""Parsing samples...""; [1] ""Loading ./results/events.psi...""; Error in file(file, ""rt"") : cannot open the connection; Calls: read.table -> file; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './results/events.psi': No such file or directory; Execution halted; Traceback (most recent call last):; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/suppa.py"", line 10, in <module>; import psiPerGene as psiPerIsoform; File ""/mnt/storage/nobackup/b7070855/april2023/SUPPA/psiPerGene.py"", line 13, in <module>; from lib.tools import *; ModuleNotFoundError: No module named 'lib.tools'; CalculateDifferentialSplicingEvents.sh: line 24: -e: command not found; ```. Could you please help me with this ; **Thank you in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/859:135,error,error,135,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/859,4,"['Error', 'error']","['Error', 'error']"
Availability,"Hi ,. I am getting following error while installing salmon:. [ 86%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd30): warning: the use of `tempnam' is dangerous, better use `mkstemp'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::conflicting_options(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x355e): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x35fc): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::option_dependency(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x3911): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/551:29,error,error,29,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551,1,['error'],['error']
Availability,"Hi :). I was already successfully using Salmon before, but unfortunately a storage node of the computing cluster I am using crashed and now I am running into trouble re-installing it. . I downloaded ""salmon-master.zip"", unzipped it and changed into the salmon-master folder. Further, I ran the following command:. > cmake -DCMAKE_INSTALL_PREFIX=/scratch/hpc-prf-ptma2/ptma2001/salmon-master -DFETCH_BOOST=TRUE. The configuration starts, but finally runs into the following error:. > -- Configuring done; > CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; > Please set them or make sure they are set and tested correctly in the CMake files:; > CURL_LIBRARY; > linked by target ""salmon"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > linked by target ""unitTests"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > ; > -- Generating done; > CMake Generate step failed. Build files cannot be regenerated correctly. Would you have an idea how I could circumnavigate that issue?. Thanks a lot in advance for your time and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/729:188,down,downloaded,188,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/729,3,"['Error', 'down', 'error']","['Error', 'downloaded', 'error']"
Availability,"Hi @k3yavi @rob-p . Will there be precomputed SAF gentromes made available as tarballs for select genomes (human, mouse, rat, arabidopsis, soybean, maize) etc . A few months ago, they were available (for SA gentromes) here: https://github.com/COMBINE-lab/salmon. Thanks,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/444:65,avail,available,65,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/444,2,['avail'],['available']
Availability,"Hi @rob-p ! I try to install Salmon on macOS M1 Max with hombrew (brewsci) ; but I guess the formula is the UNIX one on it. I got :. ```; Benjamin@macbook-pro ~ % brew install salmon ; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v1.3.0.tar.gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/787:189,Down,Downloading,189,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787,3,"['Down', 'down']","['Downloading', 'downloaded', 'downloads']"
Availability,"Hi @rob-p . A question: Can salmon be made available for ARM based arch?. Context: [AWS has recently launched instances with ARM based processors](https://aws.amazon.com/ec2/instance-types/r6/#:~:text=Amazon%20EC2%20R6g%20instances%20are,real%20time%20big%20data%20analytics.) which claim to have better performance. I would like to test/use salmon workflows with ARM based instances. Thanks in advance,",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/556:43,avail,available,43,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/556,1,['avail'],['available']
Availability,"Hi @rob-p . I have a dataset with about 30 samples or so, in some cases salmon quant (1.2.0) runs fine, with some samples I get the error below. I am using the same command (changing it for different sample names and hence output directories). It works correctly for some samples and errs out with others like below. ```; Command executed:. salmon --no-version-check quant --threads 16 --seqBias --validateMappings; --numBootstraps 100 -l A --writeUnmappedNames -i <my_salmon_index> ; -r sample1.fastq.gz -o salmon_sample1. Command exit status:; 1. Command output:; (empty). Command error:; ### salmon (mapping-based) v1.2.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 16 }; ### [ seqBias ] => { }; ### [ validateMappings ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { A }; ### [ writeUnmappedNames ] => { }; ### [ index ] => { my_salmon_index }; ### [ unmatedReads ] => { sample1.fastq.gz }; ### [ output ] => { salmon_sample1 }; Logs will be written to salmon_sample1/logs; [2020-04-22 19:51:56.392] [jointLog] [info] setting maxHashResizeThreads to 16; [2020-04-22 19:51:56.392] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-04-22 19:51:56.392] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-04-22 19:51:56.392] [jointLog] [info] parsing read library format; [2020-04-22 19:51:56.392] [jointLog] [info] There is 1 library.; -----------------------------------------; | Loading contig table | Time = 72.775 us; -----------------------------------------; [2020-04-22 19:51:56.470] [jointLog] [info] Loading pufferfish index; [2020-04-22 19:51:56.470] [jointLog] [info] Loading dense pufferfish index.; Exception : [Failed to read 8 bytes fr",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/512:132,error,error,132,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512,2,['error'],['error']
Availability,"Hi @rob-p . I have a question on the ""right"" way of tximport/DESeq2 after salmon quant. . Why I ask ""right way"" - is because I am a bit confused with the tximport vignette. 1 - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor. ```; Do not manually pass the original gene-level counts to downstream methods without an offset. ; The only case where this would make sense is if there is no length bias to the counts, as happens in 3’ tagged RNA-seq data (see section below). ; The original gene-level counts are in txi$counts when tximport was run with countsFromAbundance=""no"". ; This is simply passing the summed estimated transcript counts, and does not correct for potential differential isoform usage (the offset), which is the point of the tximport methods (Soneson, Love, and Robinson 2015) for gene-level analysis. ; Passing uncorrected gene-level counts without an offset is not recommended by the tximport package authors. ; The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. ; Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level differential expression.; ```. 2 - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Salmon. ```; files <- file.path(dir, ""salmon"", samples$run, ""quant.sf.gz""); names(files) <- paste0(""sample"", 1:6); txi.salmon <- tximport(files, type = ""salmon"", tx2gene = tx2gene); head(txi.salmon$counts). ```; Why the confusion - https://bioconductor.org/packages/devel/bioc/vignettes/tximport/inst/doc/tximport.html#Downstream_DGE_in_Bioconductor - states ; - The two methods we provide here are: “original counts and offset” or “bias corrected counts without an offset”. Passing txi to DESeqDataSetFromTximport as outlined below is correct: the function creates the appropriate offset for you to perform gene-level d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/581:356,down,downstream,356,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/581,1,['down'],['downstream']
Availability,"Hi @rob-p and all,. Thank you for the wonderful tool.; I've been using Salmon for some time now, and have encountered a question.; How is Salmon affected by different read lengths and adapters?. I have a dataset with 5%-15% adapters at 3' of read. How will salmon output be affected if:; 1) I don't remove them; 2) I trim all reads down; 3) use an adapter trimming program - resulting in reads with different length. . Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/634:332,down,down,332,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/634,1,['down'],['down']
Availability,"Hi All,. I downloaded the Salmon index as well as `tgMap` from refgenie for the mm10 genome using the following. ```; ## get index and tgmap from refgenie; wget -O mm10SalmonIndex.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/salmon_sa_index; gunzip mm10SalmonIndex.gz. wget -O mm10tgMap.gz http://refgenomes.databio.org/v3/assets/archive/0f10d83b1050c08dd53189986f60970b92a315aa7a16a6f1/tgMap; gunzip mm10tgMap.gz; ```. The index is surprisingly large, though, as compared to using `salmon index` on just the mm10 transcripts. In addition, when I try using it with `alevin`, it is returning the following error. ```; (base) Koens-MacBook-Pro:data koenvandenberge$ /Applications/salmon/bin/salmon alevin -l ISR \; > -1 SRR1853178_1.fq.gz \; > -2 SRR1853178_2.fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/722:11,down,downloaded,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722,2,"['down', 'error']","['downloaded', 'error']"
Availability,"Hi Rob and team. I am obtaining the following errors in some of my samples but not all and I cannot figure out what is happening. I am using salmon to see if specific genes are present (apart from a general quantification). I. In order to do that I run the following code:; Code (example):; `salmon quant -l A -i /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/spikein/Flox5YFP0_B07_R/index -p 6 -o /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/bcbiotx/tmpTest2/quant -1 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R1_Flox5YFP0_B07_R.trimmed.fastq.gz) -2 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119:46,error,errors,46,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119,2,['error'],"['error', 'errors']"
Availability,"Hi Rob, ; After successfully finishing my DE analysis on gene expression, I want to use the package IsoformSwitchAnalyzeR which as mentioned here [https://github.com/COMBINE-lab/salmon/issues/214](url) must utilize the `--keepDupicates ` argument when indexing the transcriptome with gencode annotations. As I read this only after, I need to re-run my analysis, but would *really* like to use the initial version 10.1 which I have installed as well as which is on the cluster. When I enter the conda environment, I receive an update that the newest version is available and I should update.. is there any way to force salmon to index the transcriptome with the current (10.1) version? . ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; salmon v0.10.1; ```; Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/262:560,avail,available,560,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262,3,['avail'],['available']
Availability,"Hi Rob,. I've been running another group's samples (single-end, second-strand protocol), and I have a script that iterates through each sample and runs salmon. I'm running the latest version (0.6.0) with the following arguments: salmon quant -i salmon_index --libType SF -r <(gzip -c -d $IN_FILE) -o $OUTPUT --numBootstraps 100 --useVBOpt --useFSPD --geneMap $GENES --biasCorrect -p 59. During the EM iteration step (soon after the 500th round, when salmon recalculates effective lengths), I get this error: . ```; [jointLog] [info] iteration 500, recomputing effective lengths; [jointLog] [info] iteration = 500 | max rel diff. = 64.1299; Exception : [Error in function boost::math::digamma<long double>(long double): Evaluation of function at pole -nan]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. I can't tell if this is just a regular possible occurrence with the non-deterministic algorithm or if this is never supposed to happen. These particular samples are extremely high depth (about ~170-190M reads per sample), so that might be the cause, but I don't understand enough of how the algorithm works to know how to troubleshoot or to put together a toy dataset that reproduces the error. Rerunning the sample that causes the error often works. If I can throw in a feature request here, it would be great to be able to set the seed to make the runs deterministic. Is that possible?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/48:501,error,error,501,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/48,4,"['Error', 'error']","['Error', 'error']"
Availability,"Hi Rob,. I've been trying to update the bioconda package, but I can't get it to build. The bioconda package pulls in gperftools so Salmon gets built with tcmalloc, to fix some problems over NFS on CentOS < 6: https://github.com/chapmanb/bcbio-nextgen/issues/1376 I can get that to work by pulling in libunwind, but I end up with a bunch of linking errors I don't know how to fix. I could use a hand debugging it. Alternatively, and maybe easier, we could use the Linux binary if it was built with tcmalloc. Is there any chance the Linux binary could get built with tcmalloc?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/89:348,error,errors,348,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/89,1,['error'],['errors']
Availability,"Hi Salmon developers,. I wonder if Salmon can handle both paired-end reads, and single-end orphan reads from the same library as inputs. These inputs reads are from trimmomatic outputs, which would generate 4 files: Paired-end reads both pass QC, and 2 of the orphan forward or reverse reads that also passed QC. . In my project, I found that for all of my 49 samples (~25M PE reads/sample), I had about ~70% of reads from each sample are Paired-end both pass QC, and another ~25% are orphan reads (expectedly majority are forwarded reads). 25% seems to be too big for me, so I was thinking to utilize those orphan reads. . Since I wasn't sure if Salmon can handle these inputs in the same run, I initiated 2 runs of salmon, one for PE, one for SE, as follows:; ```; # Mapped PE pass QC; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_PE/ --joblog logs/salmon_map_PE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l IU \; -1 data/qc/{}_O1_paired.fastq.gz \; -2 data/qc/{}_O2_paired.fastq.gz \; -p 8 \; --validateMappings \; --recoverOrphans \; --allowDovetail \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/{}_quant &. # Mapped SE pass QC; # --fldMean and --fldSD is set based on the PE run results; parallel -a data/raw_filenames.txt -j 3 --results logs/salmon_map_SE/ --joblog logs/salmon_map_SE.log \; salmon quant -i data/reference/MmvM27_salmon_ind -l U \; -r data/qc/{}_O1_unpaired.fastq.gz data/qc/{}_O2_unpaired.fastq.gz \; -p 8 \; --validateMappings \; --fldMean 265 \; --fldSD 105 \; --useVBOpt \; --seqBias \; -o data/mapped_salmon/SE/{}_quant &; ```; But I wasn't sure if the outputs can be directly combined by addition. From TPM definition, I don't think it can be added together for the same transcript of in the same sample. But can I use the NumReads column from the 2 runs, and add them together and then re-generate the combined TPM?. Thank you very much!. Jincheng",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/675:1055,recover,recoverOrphans,1055,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/675,1,['recover'],['recoverOrphans']
Availability,"Hi Salmon team!. I am encountering multiple issues while attempting to run Salmon Index (v1.10.1) with the --features option using a Transcript FASTA file in TSV format. Despite my efforts to address the problems, I am still facing errors at different stages of the process. 1. CRITICAL ERROR: The length of all the feature sequences should be the same.; - I made sure that all feature sequences in the TSV file have the same length. However, the error persists. 2. CRITICAL ERROR: The feature sequences should be unique.; - I carefully checked for and removed any duplicate feature sequences in the TSV file. Despite this, the error still occurs. 3. 8 Segmentation fault (core dumped) Error in piping. Pipe statuses: 139. I suspect this issue is memory-related, but even on systems with sufficient memory, the error persists.; I followed the official documentation for Salmon and ensured the correct version of the tool was used. The input data is also in the proper format. However, I am still unable to complete the Salmon Indexing process with the --features option. Any assistance in resolving these issues or suggestions on how to proceed would be greatly appreciated. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/865:232,error,errors,232,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/865,8,"['ERROR', 'Error', 'error', 'fault']","['ERROR', 'Error', 'error', 'errors', 'fault']"
Availability,"Hi Salmon team. Are there plans afoot to support quantification of scRNA-seq data with unique molecular identifiers (UMIs)? UMIs are very commonly used in scRNA-seq data now, and correct quantification requires ""de-duplication"" of the reads so that each UMI is only counted once for expression quantification. Doing this is not entirely trivial, as a quick survey of tools available shows (e.g. [UMI-tools](https://github.com/CGATOxford/UMI-tools), [umitools](https://github.com/brwnj/umitools), [umis](https://github.com/vals/umis), [umi](https://github.com/aryeelab/umi/wiki)). . Nevertheless, it would be _very_ convenient for those Salmon fans amongst us dealing with scRNA-seq data to be able to process scRNA-seq data with UMIs directly with Salmon. Selfishly, this would be awesome for the Salmon integration with the scater package (now fully implemented). . Not to make a thing of it, but kallisto is now providing some support for UMI quantification (https://pachterlab.github.io/kallisto/singlecell.html) ;P. Best; Davis",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/93:373,avail,available,373,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93,1,['avail'],['available']
Availability,"Hi `COMBINE-lab/salmon`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential secu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:363,error,errors,363,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['error'],['errors']
Availability,"Hi all, ; I have a dataset with 40 samples, which I aligned to a reference transcriptome using HISAT2. I then quantified these using salmon using the alignment mode, with a command like this:. `salmon quant -t referencetranscriptome.fa -l U -a alignment.bam -o path/to/out/dir/`. Here referencetranscriptome.fa is constant for all 40 samples, and the same reference I indexed for use with HISAT. Upon rereading the documentation, I understand that this is wrong?. > Say that you’ve prepared your alignments using your favorite aligner and the results are in the file aln.bam, and assume that the sequence of the transcriptome you want to quantify is in the file transcripts.fa. This makes it seem like for each run of salmon in alignment mode, I should use a different transcriptome. For instance, something like this:. `salmon quant -t transcriptome1A.fa -l U -a 1A.bam -o /path/to/out/dir`. So question 1: Is this the right approach?. When I noticed this, I tried to run the above command, which gave me an error like this:. > Please provide a reference FASTA file that includes all targets present in the BAM header If you have access to the genome FASTA and GTF used for alignment consider generating a transcriptome fasta using a command like: gffread -w output.fa -g genome.fa genome.gtf. A post on Biostars with the same error had the issue that the references were difference (genome and transcriptome), which is not the case for me. Additionally, I tried running gffread as suggested by the salmon error, which doesn't work at all because it wants to pull gene names (?) from my gff file, but my first column has chromosome numbers, while my gene names are in the 9th column. The command was:. `gffread -w transcript1A.fa -g referencetranscriptome.fa referenceannotation.gff`. So question 2 : Is gffread the right step here? If so, what should I be using to have it run properly?. Thanks in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/740:1009,error,error,1009,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/740,3,['error'],['error']
Availability,"Hi all,. Is there any suggestion/best practices on whether one should or should not use orphan recovery? My feeling is that it should be used in cases where the library quality maybe isn't the greatest, but i'm not sure about this. Thanks all!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/959:95,recover,recovery,95,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/959,1,['recover'],['recovery']
Availability,"Hi all,. So I'm having a similar problem to whats found in issue https://github.com/COMBINE-lab/salmon/issues/49. I'm want to see how much intron RNA is quantified in my experiment, but it seems like the number of ""transcripts"" (i.e. introns) from the fasta is too many. Any ideas as to how to approach this?. Best. ```; /labseq/tools/SalmonBeta-0.5.0_DebianSqueeze/bin/salmon index -t /labseq/Genomes/introns/hg19.introns.fasta -i /labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/ --type quasi ; ```. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains **important bug fixes**; please upgrade at your; earliest convenience.; ###; index [""/labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/""] did not previously exist . . . creating it; [2016-03-28 13:52:29.407] [jointLog] [info] computeBiasFeatures( {[/labseq/Genomes/introns/hg19.introns.fasta] , /labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/bias_feats.txt, 1, 24). readFile: /labseq/Genomes/introns/hg19.introns.fasta, ; file /labseq/Genomes/introns/hg19.introns.fasta: ; processed 659300 transcripts (4515) transcripts/snscripts/sipts/s transcripts/sts/s; [2016-03-28 13:54:55.658] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 650000 transcriptsElapsed time: 128.964s. Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 5.40482s; Writing sequence data to file . . . done; Elapsed time: 40.1748s; [info] Building 64-bit suffix array (length of generalized text is 4128215243 ); Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 358.792s; done; Elapsed time: 3065.92s; processed 3810000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/53:572,avail,available,572,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53,2,['avail'],['available']
Availability,"Hi and thank you for helping,. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Running alevin on 10x v1 data results in the following error:; > [alevinLog] [info] Starting Import of the gene count matrix.; > Exception : [std::bad_alloc]; > alevin was invoked improperly. **To Reproduce**. * Salmon version: Release v0.11.3; * Installed from: Compiled. I also followed the instructions from the [alevin tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) to compile the `scripts/v1_10x/wrapper.cpp` file; * Reference transcriptome: [Homo_sapiens.GRCh37.cdna.all.fa](ftp://ftp.ensembl.org/pub/grch37/release-83/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh37.cdna.all.fa.gz); * Which read files were used? Either the [CD14+ Monocytes from the 10x v1 paper](http://s3-us-west-2.amazonaws.com/10x.files/samples/cell-exp/1.1.0/cd14_monocytes/cd14_monocytes_fastqs.tar) or the [PBMC 3k from the same paper](http://cf.10xgenomics.com/samples/cell-exp/1.0.0/pbmc3k/pbmc3k_fastqs.tar); * Which program options were used?; I ran the following command for the CD14 Monocytes dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:202,error,error,202,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['error'],['error']
Availability,"Hi everyone,. Is there a way to feed pre-transformed files into Alevin? We've been using Valentine's nice umis repository https://github.com/vals/umis as our preprocessing step to put sample, cell and UMI barcodes into the read name. They end up with formats like this:. ```; @ST-K00126:314:HFYL2BBXX:7:1101:1631:1226:CELL_GGGCACTAGCTGATAA:UMI_GGGCCCAACG:SAMPLE_GTAATTGC; GNTGTGGCAGAGCAGCGACCCGCGGCGGGGCGGCATCCCCAGCTGGTTCGGGCCGGGACGGGGCGGCCAGCAGGGACGCGCCCCAGGGGGGCAGCTGT; +; A#-<<F7<AJF-FJ<JAAJJFJJ<AF-7AJF77<FJJJFFFJJ<JA-7-777<-F7<<F--7AA7AAAFF-AF<A-AFFA7J7F--7)-)7--7A<J-; ```; the nice thing about the way umis is doing it is you can specify how to do transformations via a JSON file that has regexes regarding where in the original FASTQ files the UMI/cell/sample barcodes are. For example, for 10x v2:; ```json; {; ""read1"": ""(?P<name>@.*) .*\\n(?P<CB>.{16})(?P<MB>.{10})(.*)\\n\\+(.*)\\n(.*)\\n"",; ""read2"": ""(@.*) .*\\n(?P<seq>.*)\\n\\+(.*)\\n(?P<qual>.*)\\n"",; ""read3"": ""(@.*)\\n(?P<SB>.*)\\n\\+(.*)\\n(.*)\\n""; }; ```; This makes it so end users can write their own transformations to handle arbitrary protocols. . I'd love to plug into Alevin after this step and use Alevin for everything else. Is there a description of what the reads need to look like to work with the downstream steps in Alevin?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/360:1279,down,downstream,1279,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/360,1,['down'],['downstream']
Availability,"Hi everyone,; Lately I was trying to use Salmon (v0.8.0) along with tximport to study a downloaded single-cell data on gene-level. And I came across something werid that I found almost 20k genes on average per cell, which is way higher than expected. Realistically, the scRNA-seq protocol I followed will only have a gene number detection of roughly 10k. I re-do the analysis with STAR + featurecounts and I observed a per-cell gene number of 6k on average. Just wonder which part of my code goes wrong. Attached please find my code for Salmon and subsequent R script for tximport. Any advice or suggestion will be much appreciated! I do love Salmon for its speed and convenience. Salmon index; #!/bin/bash. salmon index -t /home1/garyhe/workingdir/ref/gencode/gencode.v25.transcripts.ercc.fa -i /home1/garyhe/workingdir/ref/index/salmonindex/v25/19mer --gencode --type quasi -k 19. Salmon quant; #!/bin/bash. cd /home1/garyhe/workingdir/data/bjorklund2016ni/00_raw. for i in $(ls *.gz | cut -c 1-10 | uniq). do. salmon quant -i /home1/garyhe/workingdir/ref/index/salmonindex/v25/19mer \; -l U \; -r ${i}_1.fastq.gz \; --writeMappings=/home1/garyhe/workingdir/data/bjorklund2016ni/01_aligned/${i}.sam \; -o /home1/garyhe/workingdir/data/bjorklund2016ni/02_quant/${i}. Done. R script for tximport; #condense the ensemble transcript ID counts to gene ID counts; library(GenomicFeatures); txdb <- makeTxDbFromGFF(""./Sequencing_run/gencode.vM12.primary_assembly.annotation.ercc.gtf""); k <- keys(txdb, keytype = ""GENEID""); df <- select(txdb, keys = k, keytype = ""GENEID"", columns = ""TXNAME""); tx2gene <- df[, 2:1]; head(tx2gene). library(tximport); library(readr); dir <- ""./Sequencing_run/salmon_output/sc/""; list.files(dir); samples <- read.table(""./Sequencing_run/salmon_output/scsampleinfo.txt"", header=TRUE); samples; files <- file.path(dir, samples$Sample_ID, ""quant.sf""); names(files) <- paste0(samples$Sample_ID); names(files) <- gsub(""[:_:].*$"", """", names(files)). #gene-level; txi.salmon.g <- txi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/120:88,down,downloaded,88,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/120,1,['down'],['downloaded']
Availability,"Hi folks,. I'm trying to run DebianSqueeze Salmon v0.4.2 with some issue in the 'quant' step. Here is the skinny:; - ERCC + latest human ensembl transcriptome; - Index builds fine -- no apparent issues; - Quant step fails with the following output:. ``` bash; LD_LIBRARY_PATH=~/software/SalmonBeta-0.4.2_DebianSqueeze/lib; ~/software/SalmonBeta-0.4.2_DebianSqueeze/bin/salmon quant -i index/hs_ens_ercc.sidx --libType IU --output output/salmon -1 reads_1.fastq -2 reads_2.fastq; Version Info: This is the most recent version of Salmon.; # salmon (smem-based) v0.4.2; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { index/hs_ens_ercc.sidx }; # [ libType ] => { IU }; # [ output ] => { output/salmon }; # [ mates1 ] => { reads_1.fastq }; # [ mates2 ] => { reads_2.fastq }; Logs will be written to output/salmon/logs; there is 1 lib; [2015-08-23 21:58:57.438] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading index/hs_ens_ercc.sidx/bwaidx.amb; ```. I've provided a reproducible and self-contained Snakefile that only depends on the binaries being dumped in `~/software` and the reads_*fastq below. Let me know if there is anything I can do to help. Thanks a bunch!. Harold. ---. ``` python; ercc_fa = 'index/ERCC.fa'; ens_fa = 'index/Homo_sapiens.GRCh38.cdna.all.fa'; ens_ercc_fa = 'index/hs_ens_ercc.fa'; ens_ercc_sidx = 'index/hs_ens_ercc.sidx'. SALMON_PRE = '~/software/SalmonBeta-0.4.2_DebianSqueeze'; SALMON = 'LD_LIBRARY_PATH={0}/lib; {0}/bin/salmon'.format(SALMON_PRE). rule all:; input:; ens_ercc_fa,; ens_ercc_sidx,; 'output/salmon/quant.sf'. rule download_ens:; output:; ens_fa; params:; dl = 'ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule download_ercc:; output:; ercc_fa; params:; dl = 'http://bio.math.berkeley.edu/kallisto/transcriptomes/ERCC.fa.gz'; threads: 1; shell:; 'curl {params.dl} | zcat > {output}'. rule merge_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/12:947,error,error,947,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/12,1,['error'],['error']
Availability,"Hi salmon team,. Thank you for developing this useful tool! I used salmon (v1.9.0) to quantify transcript abundance using full-length cDNA reads (ONT) after mapping with minimap2 to a transcriptome (Ensembl, GRCh38.p13). The commands as follows:. ```; minimap2 -t 4 -ax map-ont -N 100 -p 0.99 Homo_sapiens.GRCh38.cdna.all.mmi sample_full_length.fa | samtools view -bS > sample_cdna.bam; salmon quant -p 4 --ont -l U -t Homo_sapiens.GRCh38.cdna.all.fa -a sample_cdna.bam -o salmon_quant -g TranscriptID_GeneID_from_cDNA_fasta.tsv; ```. I found that salmon with the ""--ont"" option has a tendency to assign reads to isoforms containing longer exons (especially at the 5' end), even if regions specific to the longer exons have no read coverage. In the following example, the expression abundance of TPI1-202 is obviously higher than TPI1-201 based on genome mapping coverage in IGV tools. <img width=""415"" alt=""image"" src=""https://user-images.githubusercontent.com/33354198/191897914-cb68c719-3971-4489-b970-5f2322d878aa.png"">. However, in salmon (with “--ont”) results, the average detected transcript abundance for TPI1-202, TPI1-201 and TPI1-210 were 84.339, 186.753 and 132.503 respectively, i.e., the abundance of TPI1-202 was much lower than TPI1-201. Salmon seems to overestimate the abundance of TPI1-201 and TPI1-210 which contain longer exons at the 5' end. Similar problems were also observed in many other genes. Meanwhile, using the “--noErrorModel” option instead of “--ont” does not show this behavior (but “--noErrorModel” has problematic quantifications in other cases). Could you help with this problem? Is there any specific considerations in the “--ont” mode that could explain this behavior, and how can I fix it?. Thanks in advance!. Ping",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/802:1753,Ping,Ping,1753,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/802,1,['Ping'],['Ping']
Availability,"Hi there, I was merging the quantified bulk rnaseq samples into a single file using **quantmerge**, however, I keep getting the ""either doesn't exist or doesn't contain a quant.sf file error"", although the file located in the given path. By the way, I do use salmon-1.10.0 version. I would apprecoate if you can help me to fix it. . Thanks,; Hasan",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/849:185,error,error,185,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/849,1,['error'],['error']
Availability,"Hi there, new to experimental RNAseq analysis. Have used ""clean"" example datasets and felt like salmon would be suitable for my analysis. However, using paired-end libraries from Illumina (I have tried trimmed and non-trimmed reads) I am getting the following error when running: salmon quant -i salmon_index/ --libType A -1 151_R1.fastq.gz -2 151_R2.fastq.gz --validateMappings -o 151_quant: . ""Found no concordant and consistent mappings. If this is a paired-end library, are you sure the reads are properly paired? check the file: 151_quant/lib_format_counts.json for details"". When I go to this file, I see: ""num_frags_with_consistent_mappings"": 0,. Given that the reads from illumina come in lanes, I did merge those files (R1 with R1 files and R2 with R2) but running salmon quant on the non-merged files produces the same error. These reads have been mapped to a reference genome for which my lab has used for many analyses, I am not sure what the issue could be. Any ideas would be greatly appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/869:260,error,error,260,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/869,2,['error'],['error']
Availability,"Hi there,. I'm a newcomer here.; Salmon source was downloaded and extracted, new folder ""build"" has created, 'cmake ..' has also be done to confirm the feasibility of installation.; However, When I run the code ""sudo make"", it returns a error regarding downloading the package tbb-2019_U8, here is the report. ```; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; tbb-2019_U8.tgz did not match expected SHA256! Exiting.; CMakeFiles/libtbb.dir/build.make:107: recipe for target 'libtbb-prefix/src/libtbb-stamp/libtbb-download' failed; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; CMakeFiles/Makefile2:253: recipe for target 'CMakeFiles/libtbb.dir/all' failed; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; Makefile:179: recipe for target 'all' failed; make: *** [all] Error 2; ```; it seems the requirement isn't met and the threshold should be modified?; appreciate any help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/497:51,down,downloaded,51,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497,8,"['Error', 'down', 'error']","['Error', 'download', 'downloaded', 'downloading', 'error']"
Availability,"Hi there,. here is my error and i ll provide my script. Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_33-41/33-41_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_32-40/32-40_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_38-45_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_30-38/30-38_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_20-28/20-28_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_13-21/13-21_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-6-12_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_17-25/17-25_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-11-18_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_7-14/7-14_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P1_H.m_15-23_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_2-4/2-4_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_35-43/35-43_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P1_H.m_18-26_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_41-49_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/Sample_48-56/48-56_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P2-10-17_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m-reads/Trimmed/P3_43-52_221020_L002_R1.fastq.gz; /nobackup/qkdf72/Trinity/Reads/All-H.m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/870:22,error,error,22,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/870,1,['error'],['error']
Availability,"Hi!. I'm trying to tidy up some of the strandedness analysis in nf-core/rnaseq, and have gone down the rabbit hole a little bit, hoping you can shortcut things for me. . nf-core/rnaseq's test profile runs Salmon on subsampled FASTQ files and uses Salmon to infer the strandedness, by extracting the `library_types` from a meta_info.json. . In an example run (~50k reads) this is unstranded (`IU`), but I'm having trouble reconciling with what I see in the corresponding `lib_format_counts.json`:. ```; {; ""read_files"": ""[ WT_REP2.subsampled_R1.fastq.gz, WT_REP2.subsampled_R2.fastq.gz]"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 39909,; ""num_assigned_fragments"": 39909,; ""num_frags_with_concordant_consistent_mappings"": 41509,; ""num_frags_with_inconsistent_or_orphan_mappings"": 3363,; ""strand_mapping_bias"": 0.11922715555662628,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4949,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 36560,; ""SF"": 1754,; ""SR"": 1609,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. Is it possible for me to do my own inference of `IU` from those numbers, or does it happen elsewhere? Is there a minimum number of reads/ mappings required to make this assessment, such that 'IU' is just a default? . I'm hoping to derive my own logic, so that we can harmonise it with the calculations we make from RSeQC's output, for example. I've been poking through [LibraryTypeDetector](https://github.com/COMBINE-lab/salmon/blob/master/include/LibraryTypeDetector.hpp) without much joy, if I replicate that logic in Python I get 'ISR', not 'IU'.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/938:94,down,down,94,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/938,1,['down'],['down']
Availability,"Hi!; I just used salmon(v1.4.0) to quant the paired-end fastq files from GSE66630(just some failed, not all), which were trimmed by [rabbitQC](https://github.com/ZekunYin/RabbitQC). I remembered I have analyzed it successfully by former version salmon, but now I couldn't make it work for this version. ```; salmon quant \; 		-i $indexdir \; 		-l A \; 		-1 $workdir/fastq/$line"".read1.fq"" \; 		-2 $workdir/fastq/$line"".read2.fq"" \; 		-p 44 \; 		-o $workdir/salmon_out/quant_out/$line \; 		-g $gtfpath \; 		--numGibbsSamples 50 \; 		--auxDir aux_info \; 		--seqBias --gcBias -d --posBias --hardFilter --discardOrphansQuasi --writeUnmappedNames && echo salmon $line Done!. [2021-05-19 18:46:25.303] [jointLog] [info] setting maxHashResizeThreads to 44; [2021-05-19 18:46:25.303] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-05-19 18:46:25.303] [jointLog] [info] You specified --dumpEqWeights, which implies --dumpEq; that option has been enabled.; [2021-05-19 18:46:25.303] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-05-19 18:46:25.303] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:646,echo,echo,646,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['echo'],['echo']
Availability,"Hi, . I'm new to RNA seq and trying to use Salmon to analyse my dataset. However, it gives an error when I try to run it after downloading the package: . ` ~/Downloads/Salmon-0.8.2_macOX_10.12/bin/salmon`. It gves the following error: . `dyld: Library not loaded: @rpath/libtbbmalloc_proxy.dylib; Referenced from: /Users/rishika/Downloads/Salmon-0.8.2_macOX_10.12/bin/./salmon; Reason: image not found; Abort trap: 6`. I would be grateful for your help. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/172:94,error,error,94,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172,5,"['Down', 'down', 'error']","['Downloads', 'downloading', 'error']"
Availability,"Hi, . Running much of anything in command line is new to me. I ran the line below without success. . > ./bin/salmon quant -t transcripts.fa -l OSR -a myseq.bam -o salmon_quant. I keep getting the error below and am not sure why. . > [jointLog] [critical] Note: Alignment-free mapping (i.e. mapping without subsequent selective-alignment) has not yet been throughly tested under the pufferfish-based index and using the pufferfish-based mapping strategies. Thus, disabling of selective-alignment is not currently allowed. We may, potentially explore re-enabling this option in future versions of salmon. I am betting this is something really simple. I'd appreciate any help... Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/511:196,error,error,196,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/511,1,['error'],['error']
Availability,"Hi, . Thank you for helping me with my issue. I'm not sure if the mapping rate so low is reasonable in this case: the fastq files (R1 and R2) were generated reservely from the bam files. I tried both Hg38 and Hg19 for this dataset (only bam files available to me, which were aligned by Hg19 genome), and I got similarly low mapping rate. . The salmon log is like this:; ```; [2024-01-27 01:09:31.030] [jointLog] [info] setting maxHashResizeThreads to 20; [2024-01-27 01:09:31.030] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-01-27 01:09:31.030] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-01-27 01:09:31.030] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2024-01-27 01:09:31.030] [jointLog] [info] parsing read library format; [2024-01-27 01:09:31.030] [jointLog] [info] There is 1 library.; [2024-01-27 01:09:31.032] [jointLog] [info] Loading pufferfish index; [2024-01-27 01:09:31.033] [jointLog] [info] Loading dense pufferfish index.; [2024-01-27 01:09:33.435] [jointLog] [info] done; [2024-01-27 01:09:33.508] [jointLog] [info] Index contained 252,048 targets; [2024-01-27 01:09:36.263] [jointLog] [info] Number of decoys : 0; [2024-01-27 01:09:41.237] [jointLog] [info] Automatically detected most likely library type as IU. [2024-01-27 01:10:28.189] [fileLog] [info] ; At end of round 0; ==================; Observed 3600210 total fragments (3600210 in most recent round). [2024-01-27 01:10:28.188] [jointLog] [info] Computed 179,584 rich equivalence classes for further processing; [2024-01-27 01:10:28.188] [jointLog] [info] Counted 446,871 total reads in the equivalence classes ; [2024-01-27 01:10:28.202] [jointLog] [warning] 0.197488% of fragments were shorter than the k used to build the index.; If this fraction is too large, consider re-building the index with a smaller k.; The m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/908:247,avail,available,247,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/908,1,['avail'],['available']
Availability,"Hi, . [bulk mode] salmon 1.10.3; the error was reported in partial jobs when I used salmon to quantify the LR-RNA-seq data (It works normally on some samples). ; ; `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/salmon:1.10.3--h6dccd9a_2 salmon quant --ont -p 10 -t /public/home/b20223040336/Workspace/long_read_rna/01data/references/GCF_002263795.3_ARS-UCD2.0_rna.fna -l U -a mammary.cistern_4_tran.all.bam -o /public/home/b20223040336/Workspace/long_read_rna/03Results/mammary.cistern/LR/mammary.cistern_4/02_expression/UCD_based`. ![image](https://github.com/user-attachments/assets/b5f2348d-1bbf-4a6b-8902-e72bf065e0ae). I don't know how to solve this problem. I tried to install salmon using different methods, But it still doesn't work.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/950:37,error,error,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/950,1,['error'],['error']
Availability,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/854:267,echo,echo,267,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854,5,"['avail', 'echo', 'error']","['available', 'echo', 'error']"
Availability,"Hi, ; I am new to bioinformatics and scRNAseq.; I am working on a scRNAseq dataset i downloaded from GEO. Downloading the SRA file with fastq-dump --split-files resulted in 3 reads, i.e R1, R2, and R3. I understand the R3 reads are the sample index reads. Do I need to use this R3 as input for alevin quantification, since alevin only accepts two read at a time, i.e R1, R2. Additionally, I used R1 and R2 for the alevin quantification using the code;; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 F379_R1.fastq -2 F379_R2.fastq -o alevin_combinedRun -p 16 --tgMap txp2gene_BM.tsv --chromiumV3 --dumpFeatures . This resulted in 233 cells indicated in the figure below with Mapping rate less than 6%.; <img width=""473"" alt=""Alevin"" src=""https://user-images.githubusercontent.com/38905650/151156881-da620d2e-3e9a-41fc-acce-ef2722788424.PNG"">; log file; 2022-01-26 11:52:30.149] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 11:52:30.149] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 11:52:30.149] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 11:52:30.149] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 11:52:30.149] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 11:52:30.149] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 11:52:30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/742:85,down,downloaded,85,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742,2,"['Down', 'down']","['Downloading', 'downloaded']"
Availability,"Hi, ; I am trying to calculate the alignment rate of each cellular barcode in the final expression matrix for downstream filtering. What is the best way to accomplish this with Alevin data? . I am currently using the _filtered_cb_frequency.txt_ file from _--dumpBfh_ and dividing the sum of each cell barcode's row in the gene expression matrix by the corresponding value in _filtered_cb_frequency.txt._ I assumed that that file lists the number of filtered reads that alignment was attempted on for each cellular barcode. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/274:110,down,downstream,110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/274,1,['down'],['downstream']
Availability,"Hi, ; I just downloaded the salmon.10.0 version and indexed my transcriptome using the https://www.gencodegenes.org/releases/current.html --> FASTA files --> trasnscript sequences. When I try to run Salmon I receive the above error message. The last time I ran Salmon I used 9.1 and this trasncriptome from ensembl ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/...; What is going on here? . The header.json file looks like this: ; {; ""value0"": {; ""IndexType"": 1,; ""IndexVersion"": ""q3"",; ""UsesKmers"": true,; ""KmerLen"": 31,; ""BigSA"": false,; ""PerfectHash"": false; }; }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/232:13,down,downloaded,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232,2,"['down', 'error']","['downloaded', 'error']"
Availability,"Hi, ; I've been trying to run alevin for single cell data. I've been using test data and the salmon alevin command seems to work right until the end, and then the core is dumped just as counts are in the csv format. I've also tried running it without --dumpCsvCounts and this also results in a segmentation fault. . What I was running:; salmon alevin -l ISR -1 ./hgmm_100_S1_L002_001.fastq.1.gz -2 ./hgmm_100_S1_L002_001.fastq.2.gz --chromium -i geneset.dir/geneset_coding_exons.salmon.index -p 10 -o salmon.dir/hgmm_100_S1_L002_001 --tgMap transcript2geneMap.tsv --dumpCsvCounts. Final part of output:; Analyzed 287 cells (100% of all).; [2019-01-25 11:14:44.509] [alevinLog] [info] Total 46729.00 UMI after deduplicating.; [2019-01-25 11:14:44.509] [alevinLog] [warning] Skipped 63 barcodes due to No mapped read; [2019-01-25 11:14:44.529] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-25 11:14:44.561] [alevinLog] [info] Starting Import of the gene count matrix of size 224x19879.; [2019-01-25 11:14:44.576] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-25 11:14:45.067] [alevinLog] [info] Done Importing gene count matrix for dimension 224x19879; [2019-01-25 11:14:45.770] [alevinLog] [info] Starting dumping cell v gene counts in csv format; Segmentation fault (core dumped) . I am running version 0.12.0 of salmon, installed via bioconda. I have also allocated 30GB of memory for the job, so this isn't a memory issue.; I have seen other users having similar issues using salmon quant having installed salmon through conda and the suggestions have been to install from binaries. This is not an option as salmon needs to be run easily using a conda environment. ; Has any headway been made into fixing the bioconda build?. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/337:307,fault,fault,307,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337,2,['fault'],['fault']
Availability,"Hi, ; This is my first time posting here. I have been trying to get Salmon to work for the past few days but kept running into the same issue (shown below). Any help or tips would be greatly appreciated!. **This bug/issue is primarily related to salmon in bulk mode.**. **Bug/issue Description**; I'm trying to use Salmon with precomputed indecies that I downloaded from the refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)), but when I pass in the index and my `.fastq.gz` files into Salmon I am encountering an error (shown below). . **To Reproduce**. - Used Salmon version 1.2.1; - Downloaded the index (aka the reference transcriptome from refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)).; - Attempted to pass in trimmed .fastq.gz files (the files were trimmed using the FASTQC quality control pipeline) using the following command. > `salmon quant -i default -l A -1 <(gunzip -c <path to .fastq.gz file>) -2 <(gunzip -c <path to .fastq.gz file>) --validateMappings -o salmon_output`. - Received error shown below. ![image](https://user-images.githubusercontent.com/67990244/126880016-0c556d6f-a4f6-4a4b-9906-29d9fc06e00d.png). **Expected behavior**; I expected this program to run normally and generate the quantification output files. . **Desktop (please complete the following information):**; - OS: RedHat Linux Enterprise; - More information in screenshot below; ![image](https://user-images.githubusercontent.com/67990244/126880058-d03a8247-7eea-4108-b2c2-0566ff2c975f.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/690:355,down,downloaded,355,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/690,4,"['Down', 'down', 'error']","['Downloaded', 'downloaded', 'error']"
Availability,"Hi, ; just a quick check if it is normal for SALMON 1.3 to send > 100 Gb of output to the stdout, despite using the -quiet flag. The quant mode appears to be running smoothly.; A sample of the output at the end of file:; <img width=""960"" alt=""Screenshot 2020-10-15 14 23 42"" src=""https://user-images.githubusercontent.com/1333150/96084759-380a3680-0ef2-11eb-82ab-b5ea839c9113.png"">. My command is as follow:; /gpfsdata/apps/salmon-latest_linux_x86_64/bin/salmon quant \; -i /gpfshome/hockchuan/SALMON/GCF_900626175.2_cs10_index \; -l ISR \; -1 /gpfsdata/JangiLab/hockchuan/170302/2.Trimmomatic_output/clean_HEADBANDSTEM_1.fastq.gz \; -2 /gpfsdata/JangiLab/hockchuan/170302/2.Trimmomatic_output/clean_HEADBANDSTEM_2.fastq.gz \; --seqBias \; --gcBias \; --posBias \; --incompatPrior 0.0 \; --geneMap /gpfsdata/JangiLab/hockchuan/cs10_reference_genome/GCF_900626175.2_cs10_genomic.gtf \; --recoverOrphans \; --allowDovetail \; --threads $NSLOTS \; --dumpEq \; --minScoreFraction 0.65 \; --writeMappings /gpfshome/hockchuan/SALMON/MAP/HEADBANDSTEM \; --fldMean 250 \; --fldSD 25 \; --writeOrphanLinks \; --writeUnmappedNames \; --quiet \; -o /gpfshome/hockchuan/SALMON/HEADBANDSTEM_quant",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/573:887,recover,recoverOrphans,887,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/573,1,['recover'],['recoverOrphans']
Availability,"Hi, I am having issues with calculating the differential splicing and I kept getting this error message, even though all files required are uploaded. Could you please help me with this issue. The error message is below :",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/858:90,error,error,90,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/858,2,['error'],['error']
Availability,"Hi, I have been trying to follow [this tutorial](https://combine-lab.github.io/alevin-tutorial/2020/alevin-spatial/) but have run into a problem where Seurat appears to think I am trying to add new cells when I believe I am trying to add an assay. Here is the relevant code section and the error I receive:; ```; DefaultAssay(object = image.data) <- ""Spatial""; brain[['slice']] <- image.data; Error in `[[<-`:; ! Cannot add new cells with [[<-; Run `rlang::last_trace()` to see where the error occurred.; > rlang::last_trace(); <error/rlang_error>; Error in `[[<-`:; ! Cannot add new cells with [[<-; ---; Backtrace:; ▆; 1. ├─methods (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); 2. └─SeuratObject (local) `[[<-`(`*tmp*`, ""slice"", value = `<VisiumV2[,600]>`); Run rlang::last_trace(drop = FALSE) to see 1 hidden frame.; ```. I checked that Seurat has not changed the `sobj[[""ASSAYNAME""]] <- MYASSAYOBJECT` syntax in the same R session by following [this tutorial](https://satijalab.org/seurat/articles/multimodal_vignette) up to the line where the `adt` assay is added and confirmed that the resulting object had two assays present. I think this may be a versioning issue related to what types of objects can be added into layers (aka slots) in a Seurat object. For reference, here are some details of the objects involved:; ```; > class(brain); [1] ""Seurat""; attr(,""package""); [1] ""SeuratObject""; > class(image.data); [1] ""VisiumV2""; attr(,""package""); [1] ""Seurat""; ```. It is worth noting that I installed Salmon using the docker image found [here](https://hub.docker.com/r/combinelab/salmon) approximately three months ago. The version number I see is `1.10.3`. Below is my sessionInfo output as well. My best guess is that I have to adjust the object type for `image.data` here to something that can be coerced into a slot in the `brain` Seurat object, but I am not sure what object that should be. Let me know if I am making a simple mistake here too, I am quite rusty with the nu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/942:290,error,error,290,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/942,5,"['Error', 'error']","['Error', 'error']"
Availability,"Hi, I have some kind the same error of (https://github.com/COMBINE-lab/salmon/issues/251#issue-341161248). I download the prebuild index from refgenie and I got exactly the same error message. refgenie pull hg38/salmon_sa_index <- I downloaded the 16Gb of the index files. [2020-05-04 21:30:58.648] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2020-05-04 21:30:58.648] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2020-05-04 21:30:58.648] [jointLog] [info] parsing read library format; [2020-05-04 21:30:58.648] [jointLog] [info] There is 1 library.; [2020-05-04 21:30:58.701] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. The son files of the index show this;; ls -lrth *json; -rwxrwxrwx 1 usr usr 1007 dic 14 00:41 info.json; -rwxrwxrwx 1 usr usr 96 dic 14 00:44 versionInfo.json. Any idea would be really appreciated,. Kind regards,; Fer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/518:30,error,error,30,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/518,5,"['down', 'error', 'failure']","['download', 'downloaded', 'error', 'failure']"
Availability,"Hi, I hope you're well. Here is my question:. [Bulk mode] Error: Transcript * appears in the reference but did not appear in the BAM; I want to obtain the ONT data expression by alignment-based mode, The command:; `singularity exec ${code_path}/singularity_images/salmon:1.10.3--h6dccd9a_2 salmon quant \ --ont -p 16 -t ${ref_trans_fa} -l U -a ${LR_bam} -o ${output_tmp1}`. I changed a lot of transcripts.fa file, but it still reports ""Transcript * appears in the reference but did not appear in the BAM"". 1. Firstly, I used the transcripts.fa provided by the NCBI - GCF_002263795.3_ARS-UCD2.0_genomic.fna. 2. Secondly, I used gffread to obtain the transcripts.fa, But ""Error: no valid ID found for GFF record"". So I converted the gtf file (version2.2) by shell command as you recommended. the command:. `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/gffread:0.12.7--hdcf5f25_4 gffread -w GCF_002263795.3_ARS-UCD2.0_transcripts.fa -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_genomic.gtf`; `grep -P '\btranscript_id\s+""[^""]+""' GCF_002263795.3_ARS-UCD2.0_genomic.gtf > GCF_002263795.3_ARS-UCD2.0_genomic_fixed.gtf`; `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/gffread:0.12.7--hdcf5f25_4 gffread GCF_002263795.3_ARS-UCD2.0_genomic_fixed.gtf -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_transcripts_gtf.fa`. 3.Finally, I used the gff3 files provided by NCBI to obtain the transcripts.fa, the command:; `GCF_002263795.3_ARS-UCD2.0_genomic.gff -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_transcripts_gff.fa`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/946:58,Error,Error,58,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/946,2,['Error'],['Error']
Availability,"Hi, I hope you're well. Here is my question:; [Bulk mode] Error: Transcript * appears in the reference but did not appear in the BAM. I want to obtain the ONT data expression by alignment-based mode, The command:; `singularity exec ${code_path}/singularity_images/salmon:1.10.3--h6dccd9a_2 salmon quant \; --ont -p 16 -t ${ref_trans_fa} -l U -a ${LR_bam} -o ${output_tmp1}`. I changed a lot of transcripts.fa file, but it's still report ""Transcript * appears in the reference but did not appear in the BAM"". 1. Firstly, I used the transcripts.fa provided by the NCBI - GCF_002263795.3_ARS-UCD2.0_genomic.fna. 2. Secondly, I used gffread to obtain the transcripts.fa, But ""Error: no valid ID found for GFF record"". So I converted the gtf file (version2.2) by shell command as you recommended. the command:; `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/gffread:0.12.7--hdcf5f25_4 gffread \; -w GCF_002263795.3_ARS-UCD2.0_transcripts.fa -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_genomic.gtf. grep -P '\btranscript_id\s+""[^""]+""' GCF_002263795.3_ARS-UCD2.0_genomic.gtf > GCF_002263795.3_ARS-UCD2.0_genomic_fixed.gtf. singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/gffread:0.12.7--hdcf5f25_4 gffread \; GCF_002263795.3_ARS-UCD2.0_genomic_fixed.gtf -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_transcripts_gtf.fa. `. 3.Finally, I used the gff3 files provided by NCBI to obtain the transcripts.fa, the command:; `GCF_002263795.3_ARS-UCD2.0_genomic.gff -g GCF_002263795.3_ARS-UCD2.0_genomic.fna -w GCF_002263795.3_ARS-UCD2.0_transcripts_gff.fa; `",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/945:58,Error,Error,58,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/945,2,['Error'],['Error']
Availability,"Hi, I'm just starting with RNA-Seq and tryed to install salmon on the HPC of my university. However I get following error message when recompiling with ""$ make"". . ```; [ 6%] Built target libbz2; [ 13%] Built target libgff; [ 19%] Built target libbwa; [ 26%] Built target libjellyfish; [ 27%] Performing build step for 'libstadenio'; Making all in io_lib; Making all in progs; libtool: link: /usr/bin/cc -o convert_trace convert_trace.o ../io_lib/.libs/libstaden-read.a -lz -lm -lpthread -llzma -lbz2; /usr/bin/ld: cannot find -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; collect2: error: ld returned 1 exit status; make[5]: *** [convert_trace] Fehler 1; make[4]: *** [all-recursive] Fehler 1; make[3]: *** [all] Fehler 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Fehler 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Fehler 2; make: *** [all] Fehler 2. ```. Does this have anything to do with ""bzip2"" or ""libbz2"" and how would I provide missing paths to cmake?; I have bzip2 but not libbz2 availible on my system. I would be gratefull for any help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/216:116,error,error,116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216,3,"['avail', 'error']","['availible', 'error']"
Availability,"Hi, I'm trying to install Salmon on a local server, but I get the following error:. ```[ 81%] Building CXX object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp: In constructor ‘rank9b::rank9b(const uint64_t*, uint64_t)’:; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp:41:53: warning: suggest parentheses around ‘-’ inside ‘<<’ [-Wparentheses]; counts[ pos + 1 ] |= ( c - counts[ pos ] ) << 63 - 9 * j;; ^; [ 82%] Building C object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o; Linking CXX executable unitTests; /bin/ld: cannot find -lstdc++; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What can I do?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/235:76,error,error,76,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235,5,"['Error', 'error']","['Error', 'error']"
Availability,"Hi, I'm trying to use Alevin on a 10X v2 chemistry dataset, and after the preprocessing stpe I get the following error:; ```; Analyzed 1137 cells (11% of all).; ERROR: cell doesn't have any read count; ```; I tried looking at the documentation and previous tickets, but didn't find anything mentioning this issue. Is there any suggestion on how to address it?. The full terminal output is below. Thanks. ```; salmon alevin -lISR -1 cDNA_Small_S1_L001_R1_001.fastq.gz -2 cDNA_Small_S1_L001_R2_001.fastq.gz --chromium -i index -p 20 -o alevin_output9 --tgMap txp2gene.tsv --dumpCsvCounts; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output9/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ mates1 ] => { cDNA_Small_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { cDNA_Small_S1_L001_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 20 }; ### [ output ] => { alevin_output9 }; ### [ tgMap ] => { txp2gene.tsv }; ### [ dumpCsvCounts ] => { }. [2018-06-30 22:10:28.044] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-30 22:10:28.048] [alevinLog] [info] Processing barcodes files (if Present). processed 17 Million barcodes. [2018-06-30 22:10:47.141] [alevinLog] [info] Done barcode density calculation.; [2018-06-30 22:10:47.141] [alevinLog] [info] # Barcodes Used: 17712582 / 17712585.; [2018-06-30 22:10:52.008] [alevinLog] [info] Knee found left boundary at 9447; [2018-06-30 22:10:52.498] [alevinLog] [warning] Gauss Prediction 0 Too far from knee prediction skipping it; [2018-06-30 22:10:52.498] [alevinLog] [info] Learned InvCov: 457.073 normfactor: 260.286; [2018-06-30 22:10:52.498] [alevinLog] [info] Total 10434(has 987 low confidence) barcodes; [2018-06-30 22:10:52.530] [alevinLog] [info] Done True Barcode Sampling; [2018-06-30 22:10:53.101] [alevinLo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:113,error,error,113,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Hi, I'm trying to use salmon in Linux arm (aarch64) environment, but I can not compile the software due to an error. There is any instruction to compile?; Using Linux Ubuntu 18.04.3 LTS (arm).; Thank you in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/424:110,error,error,110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/424,1,['error'],['error']
Availability,"Hi, just downloaded salmon, unpacked with tar, but I don't seem to find the bin folder containing the salmon binary file. Thanks; Kay",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/238:9,down,downloaded,9,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/238,1,['down'],['downloaded']
Availability,"Hi, such a fantastic RNA-seq analyze tool Salmon! Recently, I used Salmon to analyze transcript level expression and the information of my analyze tool:. - Salmon: v1.6.0 (install from bioconda); - STAR: 2.7.9a (install from bioconda). And the detailed commands:. - Salmon:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/da6f0253-4dea-4566-aca6-749d4532ccc4); and the transcript index is constructed with hg38 transcripts fasta download from GENCODE:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/a839ba99-d731-45e4-bdc4-85c37419cd9e). - STAR:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/f657043b-c16b-4629-8b41-71acf14fb768). All commands were evaluated with Centos system. After get the result file of Salmon, I tried to check the result in genome browser using BAM only with unique mapping reads produced by STAR. But I am confused with the following result:. According to salmon transript level TPM value, PPIE gene is tend to use longer isoform (the labelled value is TPM):; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/daea059a-f0eb-4ecd-bbe3-3d4714564bc8); But when I visualized this gene in genome browser, I found that their are few reads aligned to specific region of the longest transcript:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/b4f6443f-319d-4e2c-8245-56941497ee2f). So, I'm confused about this result and search form some possible reasons. There are some people saying that because Salmon uses transcript index rather than genome index like STAR, so it can rescue more reads. But I would like to ask you for more advices, great thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/918:445,down,download,445,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/918,1,['down'],['download']
Availability,"Hi, who's concerning,; I was using alevin to run on a PBMC 10xv3 dataset.; Here is my script,; salmon alevin -lISR -1 $fastq1 -2 $fastq2 --chromiumV3 -i $work_p/salmon_index_human -p 12 -o output --tgMap $data_p/test12.tsv --keepCBFraction 1. I kept all CB to make sure I can use emptyDrops. Also, here this index is SAF index followed by your tutorial. Then I got the error message like:; [alevin.log](https://github.com/COMBINE-lab/salmon/files/7035475/alevin.log). Is there any suggestion on how to solve this?; Cheers,; Chloe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/698:369,error,error,369,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/698,1,['error'],['error']
Availability,"Hi,. Building salmon with `-DFETCH_BOOST=TRUE` ends with an error that might be caused by the build process looking to iostreams in the wrong place. The end of the ouput on the terminal is:. ```; [ 80%] Built target salmon_core; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/depend; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; cd /opt/local/salmon-index/resources/salmon-0.4.2 && /usr/bin/cmake -E cmake_depends ""Unix Makefiles"" /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2 /opt/local/salmon-index/resources/salmon-0.4.2/src /opt/local/salmon-index/resources/salmon-0.4.2/src/CMakeFiles/salmon.dir/DependInfo.cmake --color=; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make -f src/CMakeFiles/salmon.dir/build.make src/CMakeFiles/salmon.dir/build; make[2]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```. Earlier in the output I can spot this:. ```; cc1plus: warning: unrecognized command line option ""-Wno-deprecated-register"" [enabled by default]; make[2]: *** No rule to make target `/usr/lib/libboost_iostreams-mt.a', needed by `src/salmon'. Stop.; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/21:60,error,error,60,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/21,5,"['Error', 'error']","['Error', 'error']"
Availability,"Hi,. First of all, thank you very much for this tool! I'm excited to try it after reading your bioRxiv paper and your blog post. Following your installation instructions, I got to the step where I run `CMake [flags] ..`, and it failed with the following error:. ```; CMake Error at src/CMakeLists.txt:94 (add_executable):; Cannot find source file:. /home/wulab2015linux/warren/Software/salmon/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp; .hxx .in .txx; ```. I realized that I did not have curl installed (I use `wget` all of the time, on a Ubuntu 14.04.4 system), so the `fetchRapMap.sh` script failed. I tried rerunning the `Cmake` command after installing `curl` with `apt-get`, and it still failed. However, the script worked after I manually ran `fetchRapMap.sh`, and the build was fine after that. . I'm a complete noob when it comes to CMake files, so I don't know what happened, but I wanted to bring this to your attention and provide users that might have the same issue with a workaround.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/42:254,error,error,254,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi,. I am running the latest version of Salmon 0.8.2 and I am getting the following error. I did remake the transcript index with the new version of salmon. I get no errors when i compile or run the ""make test"". . Logs will be written to salmon_output_A9039/logs; [2017-05-08 08:59:23.370] [jointLog] [info] parsing read library format; [2017-05-08 08:59:23.370] [jointLog] [info] There is 1 library.; [2017-05-08 08:59:23.395] [stderrLog] [error] Encountered exception [JSON Parsing failed - provided NVP (SeqHash) not found] when loading index.; [2017-05-08 08:59:23.395] [stderrLog] [error] The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version. Using boost 1.64, Clang 3.9, on a linux box. Any help will be appreciated. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/135:84,error,error,84,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135,4,['error'],"['error', 'errors']"
Availability,"Hi,. I am trying to process scRNAseq Chromium data using alevin. I already have results from cellranger and I wanted to compare them with alevin. I use the following command line; salmon alevin -lISR -1 Fastq1a.fastq.gz Fastq1b.fastq.gz -2 Fastq2a.fastq.gz Fastq2b.fastq.gz --chromium -i gencode.v25.transcripts_index -p 20 -o AlevinOUT --tgMap gencode.v25.txp2gene.tsv --dumpCsvCounts --whitelist 737K-august-2016.txt. I get the following error message at the end of the output; [alevinLog] [error] Barcode not found in frequency table. If I run the exact same files using without the --whitelist flag/file I get some results for a very small set of barcodes. Interestingly the barcodes found by alevin (I only checked 2 or 3) are also in the 737K-august-2016.txt file. . My first question is why alevin does not ""count"" barcodes (zero frequency) with the barcode file, and does estimate frequency for some (at least) barcodes without the barcode file. Considering that the barcodes in the latter case are also found in the whitelist file. . My second question is more about difference between alevin and cellranger. I do get estimated counts for a large number of barcodes (thousands) using cellranger, while barely on the order of a few hundreds, at best, using alevin. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/284:440,error,error,440,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/284,2,['error'],['error']
Availability,"Hi,. I am using salmon quant v0.91 to map some reads against ce11 genome. . But the run fails with a cryptic error message, maybe you can help me sort this out.; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/210:109,error,error,109,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210,1,['error'],['error']
Availability,"Hi,. I have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; C",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682:385,down,download,385,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682,4,"['down', 'error', 'recover']","['download', 'error', 'recovery']"
Availability,"Hi,. I have been trying to run the installed salmon version on our HPC cluster on minimap aligned ONT reads and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/898:130,error,error,130,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898,3,"['avail', 'error']","['available', 'error']"
Availability,"Hi,. I have had success using Salmon and Alevin after the hash-resize-hotfix issues. However, when I try to compile the latest commit I get an error for an undeclared error. I have tried searching through the external dependencies for the definition of `rapmap::utils::ChainStatus` but I cannot find it. Thanks!. ```; [ 6%] Built target libbwa; [ 12%] Built target libtbb; [ 19%] Built target libcereal; [ 26%] Built target libdivsufsort; [ 32%] Built target libstadenio; [ 38%] Built target libspdlog; [ 45%] Built target libgff; [ 47%] Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/254:143,error,error,143,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254,3,['error'],['error']
Availability,"Hi,. I have the problem that salmon quant exits with a segfault when more than one BAM file is provided. ; If the BAM files are provided one at a time, no error or segfault happens and salmon wickedly fast quantificates the transcripts. The first used BAM files where shuffled (with samtools bamshuf) as recommended in the docs. To exclude an error on my side I did:; - try unshuffled BAM files --> Segfault; - try older Salmon Version (7.2) --> Segfault; - build Salmon from source --> Segfault; - use different transcriptdata (see below) --> Segfault. The segfault happens after all reads (in all files) are processed:; `processed 48000000 reads in current roundSegmentation fault`. ### Example workflow:. Get the read data from [here](https://trace.ncbi.nlm.nih.gov/Traces/sra/sra.cgi?run=ERR1433122) for example with SRA Toolkit:; `vdb-dump -f fastq --gzip --output-file test.fastq.gz ERR1433122`. Then use STAR:. First build a genome index for the reference transcriptset from [here](https://ics.hutton.ac.uk/atRTD/) and the [TAIR10 genome](https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files); You probably have to rename the chromosomes either in the .gtf or .fas file, to have consistent names. `STAR --runThreadN 4 --runMode genomeGenerate --genomeDir genome_index/ --genomeFastaFiles TAIR10_chr_all_edited.fas --sjdbGTFfile AtRTD2_19April2016.gtf --sjdbOverhang 100`. Then map:. `STAR --runThreadN 4 --genomeDir genome_index --readFilesCommand zcat --readFilesIn test.fastq.gz --sjdbOverhang 100 --sjdbGTFfile AtRTD2_19April2016.gtf --outFileNamePrefix mapping/ --quantMode TranscriptomeSAM`. and make a .fa file from the genome and the .gtf with:; `gffread -w gff_merged.fa -g TAIR10_chr_all_edited.fas AtRTD2_19April2016.gtf`. Now make a copy of the ""Aligned.toTranscriptome.out.bam"" (for the sake of simplicity) and try; `salmon quant -l A -a Aligned.toTranscriptome.out.bam Aligned.toTranscriptome.out_copy.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/145:155,error,error,155,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/145,3,"['error', 'fault']","['error', 'fault']"
Availability,"Hi,. I just encountered an unexpected behaviour of alevin when unmated reads are provided. Are unmated reads supported by alevin at all? I did not find anything in the alevin documentation, but the parameter is there. I tried to quantify some public Illumina SureCell data. Apparently the number of threads is set to 0 (because there are no file pairs?), which is of course not a good idea. The behaviour consists if I specify the number of threads manually (e.g. -p 1). Side note: There is a typo in the threads warning message (I think). ---; Salmon v1.2.1, installed from conda. #### Error message:. ```; ## alevin (dscRNA-seq quantification) v1.2.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ index ] => { ../salmon/index/ }; ### [ unmatedReads ] => { ../samples/sc.fastq.gz }; ### [ output ] => { sc/ }; ### [ tgMap ] => { tx2gene.tsv }; ### [ end ] => { 3 }; ### [ umiLength ] => { 8 }; ### [ barcodeLength ] => { 6 }. Can't make user of more parsing threads than file (pairs); setting # of parsing threads to 0. Segmentation fault (core dumped); ```; ---. **To Reproduce**. The index is based on a gencode reference and works fine for bulk data (salmon quant). Command:; ```; salmon alevin -l A -i ../salmon/index/ --unmatedReads ../samples/sc.fastq.gz -o sc/ --tgMap tx2gene.tsv --end 3 --umiLength 8 --barcodeLength 6; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/522:587,Error,Error,587,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/522,2,"['Error', 'fault']","['Error', 'fault']"
Availability,"Hi,. I used merged genome + transcriptome file with Hisat2 to retrieve all reads in my samples, and then converted the bam files to R1. fastq, R2.fastq + singletons files. I then used Hisat2 with the three files and used the transcriptome fasta file to pull out reads which is now in bam format to be used in Salmon. When I tried using Salmon using the transcriptome fasta file and the bam file, I get this error:. WARNING: Detected suspicious pair --- ; 	The proper-pair statuses are inconsistent:; read1 [HWI-7001326F:36:C7J2GANXX:5:1104:13209:80405] : proper-pair; mapped; matemapped. read2 : [HWI-7001326F:36:C7J2GANXX:5:1104:13209:80405] : no proper-pair; mapped; matemapped. [2017-07-07 10:46:02.309] [jointLog] [warning] . ERROR: Found unpaired read in a paired-end library. The read was marked as unpaired in sequencing (not just unmapped).The two ends of a paired-end read should be adjacent. Don't know how to proceed; exiting!. I tried to sort the bam files using samtools sort -n but still I get the above error. Any advice please? Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/140:407,error,error,407,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/140,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Hi,. I was able to build and install salmon on my mac, but it's giving me this error when I try to run it:. salmon; dyld: Symbol not found: __ZNSs4_Rep20_S_empty_rep_storageE; Referenced from: /usr/local/bin/salmon; Expected in: flat namespace; in /usr/local/bin/salmon; Trace/BPT trap: 5. I have the env vars set:; DYLD_FALLBACK_LIBRARY_PATH=/usr/local/lib; DYLD_LIBRARY_PATH=/usr/local/lib. but it's still not finding something it needs. Thanks in advance for any help!. Note, I tried using the pre-packaged binary and had a similar issue:. salmon; wme18-ed2:bin bhaas$ ; wme18-ed2:bin bhaas$ ./salmon ; dyld: lazy symbol binding failed: Symbol not found: _os_unfair_lock_lock; Referenced from: /Users/bhaas/BioIfx/SALMON/Salmon-v0.8.0_macOS_10.12/bin/./salmon (which was built for Mac OS X 10.12); Expected in: /usr/lib/libSystem.B.dylib. dyld: Symbol not found: _os_unfair_lock_lock; Referenced from: /Users/bhaas/BioIfx/SALMON/Salmon-v0.8.0_macOS_10.12/bin/./salmon (which was built for Mac OS X 10.12); Expected in: /usr/lib/libSystem.B.dylib. Trace/BPT trap: 5. I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/117:79,error,error,79,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/117,1,['error'],['error']
Availability,"Hi,. I'm running into an issue with quant and hope you could help. Get this error message saying my index/versionInfo.json does not seem to exist (screenshot attached). I have single end reads spread across 5 fastq files per sample. Just trying to run one sample as a test before looping it. . I have tried building an index both with Salmon v 0.8.1 using a conda install as well as salmon v0.9.1 installing directly the binary on a linux computing cluster. . I've attached a screenshot of the indexing process (it boots me out at the end but I cant tell from the outputs if it was cut short, last thing it notes is writing sequence data to the file). I've also attached a screenshot of the generated index folder contents. The index is the most recent Ensembl FASTA cDNA download for mouse. I tried indexing a transcripts FASTA file from Gencode as well and am running into the same issue, so dont think its the specific reference. The reference transcript files are 54 and 56mb respectively, so no issues downloading and transferring to our cluster. . Any thoughts are much appreciated! Thanks!. Paul. ![screen shot 2018-02-12 at 15 37 54](https://user-images.githubusercontent.com/23369975/36214991-d3b453ec-1178-11e8-8331-d641a334c47b.png); ![screen shot 2018-02-12 at 12 41 33](https://user-images.githubusercontent.com/23369975/36214993-d3bf729a-1178-11e8-9c78-38158e423b9b.png); ![screen shot 2018-02-12 at 15 33 53](https://user-images.githubusercontent.com/23369975/36214994-d3cb52cc-1178-11e8-9f74-6cfd554ccb0a.png); ![screen shot 2018-02-12 at 15 35 16](https://user-images.githubusercontent.com/23369975/36214995-d3d50376-1178-11e8-81c3-90de0a347763.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/197:76,error,error,76,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197,3,"['down', 'error']","['download', 'downloading', 'error']"
Availability,"Hi,. I'm trying to compile Salmon like this:; `cmake -DTBB_INSTALL_DIR=/home/fc464/software/tbb -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=/home/fc464/software/salmon ..`. but during; `make`. I get this error:. ```; [ 50%] Built target alevin_core; [ 55%] Built target ksw2pp_basic; [ 57%] Built target ksw2pp_sse2; [ 58%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 73%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd30): warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /usr/local/software/spack/spack-0.11.2/opt/spack/linux-rhel7-x86_64/gcc-5.4.0/bzip2-1.0.6-xsgsccpkklxd745bl2gbgyhube56o6w4/lib/libbz2.a(bzlib.o): unrecognized relocation (0x2a) in section `.text'; /usr/bin/ld: final link failed: Bad value; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What's wrong?; Best; F",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/231:202,error,error,202,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231,5,"['Error', 'error']","['Error', 'error']"
Availability,"Hi,. My salmon quant program killed itself with the following message. Have no idea what's going on. Maybe because of the memory? I use MacBook pro with 16GB of memory. command =======; conda activate salmon; salmon quant -i salmon_sa_index -l ISR -1 testData/XX_R1.fastq.gz -2 testData/XX_R2.fastq.gz --validateMappings -o XX_2. error message: =======; validateMappings -o XX_2; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.3.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { salmon_sa_index }; ### [ libType ] => { ISR }; ### [ mates1 ] => { testData/XX_R1.fastq.gz }; ### [ mates2 ] => { testData/XX_R2.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { XX_2 }; Logs will be written to XX_2/logs; [2020-08-13 09:35:38.575] [jointLog] [info] setting maxHashResizeThreads to 12; [2020-08-13 09:35:38.576] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-08-13 09:35:38.576] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-08-13 09:35:38.576] [jointLog] [info] parsing read library format; [2020-08-13 09:35:38.577] [jointLog] [info] There is 1 library.; [2020-08-13 09:35:38.642] [jointLog] [info] Loading pufferfish index; [2020-08-13 09:35:38.642] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 11.256 s; -----------------------------------------; size = 36981178; -----------------------------------------; | Loading contig offsets | Time = 127.43 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 3.7792 ms; -------------------------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/560:330,error,error,330,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/560,1,['error'],['error']
Availability,"Hi,. Quick question- if I have the reads for a library spread across multiple files, is it appropriate to run Alevin separately on each file pair and combine with quantmerge, rather than processing together? I'm looking to run Alevin via Galaxy for some training, and the available wrapper doesn't currently allow supplying multiple inputs. My feeling is that all files should be processed together for robust thresholding etc, but I may be worrying about nothing.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/434:272,avail,available,272,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/434,2,"['avail', 'robust']","['available', 'robust']"
Availability,"Hi,. We (@emilyburke, @andrewejaffe and me) can successfully run salmon using 1 core in the SGE-managed cluster we have access to. The problem is that for some reason we have to request a lot of memory, thus reducing the number of jobs we can run simultaneously and increasing the overall time it takes to process datasets. . I see in https://github.com/COMBINE-lab/salmon/issues/97 that you suggest using `--perfectHash` and a newer `salmon` version, which we haven't tried and might end up being the solution. Here is the bash script we used to run `salmon` for a 422 sample dataset:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=80G,h_vmem=90G,h_fsize=100G; #$ -N step6-txQuant-alzheimer.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -e ./logs/txQuant-alzheimer.$TASK_ID.txt; #$ -t 1-422; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:833,echo,echo,833,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,7,['echo'],['echo']
Availability,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/250:626,Error,Error,626,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250,4,"['Error', 'avail', 'error', 'fault']","['Error', 'available', 'error', 'fault']"
Availability,"Hi,. first of all congratulations on a great tool, the expansion to scRNA-seq analysis is especially appreciated!. I was wondering what the reason for setting an upper limit on the barcode length in alevin is - would longer barcodes affect the computation in some manner? We are working with barcodes of length 27, which are incompatible with the hardcoded upper barcode length limit [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). I manually raised the limit on a modified alevin version, and the final output looks as expected, so if there is no risk that I am unaware of, would you consider raising or removing the barcode length limit altogether?. Thank you for you help!. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Using the manual barcode and UMI specification with `--end`, `--barcodeLength`, and `--umiLength` fails for barcodes longer than 20 with the error message:; ```; Barcode length (27) was not in the required length range [1, 20].; ```; The barcode length upper limit is hardcoded [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). **To Reproduce**; In Salmon 1.0.0, run `salmon alevin [...] --end 5 --barcodeLength 27 --umiLength 8` (or any `barcodeLength` value above 20). * Which version of salmon was used? 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? not relevant; * Which read files were used? not relevant; * Which which program options were used? `--end 5 --barcodeLength 27 --umiLength 8`. **Expected behavior**; Ideally, barcode longer than 20 would be processed as normal. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Mac OS X; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/445:1004,error,error,1004,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/445,1,['error'],['error']
Availability,"Hi,. first of all, I really like using Salmon for RNAseq quantification. I have a very special problem. We are working with experimental conditions in which transposons get activated and highly expressed. This initially caused my RNAseq quantification to be wrong as transposon reads got assigned to genic transcripts. I can circumvent this problem mostly by adding the transposon transcripts into the index.; Still there are some regions that are 1:1 identical between transposons and genes that still cause problems. The gene in the examples is not expressed in the cells I use which is more or less what Salmon gives me for WT conditions. Still I get TPMs of >12 in my experimental conditions due to the heavy transposon deregulation. You can see this here in this chart where I overlay the mappings from salmon in WT and in the experimental knockout (KO):; ![image](https://user-images.githubusercontent.com/12491961/39418440-bfbca0f2-4c5a-11e8-8bde-f2da0cca2658.png). The only region covered is the transposon piece and the rest of the transcript is uncovered. . Is there any way to avoid such wrong quantification by some settings, or is it possible to mask such regions upstream?. Any help would be appreciated. . All the best and thank you,; Dominik",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/217:1159,mask,mask,1159,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/217,1,['mask'],['mask']
Availability,"Hi,. this is the error i get, when making a transcript index using salmon. I am using the decoy making script to make the decoy, which the script makes but fails when creating the index!. Specifically, please provide at least the following information:. Which version of salmon was used?; Version: salmon 0.14.1; How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; Which reference (e.g. transcriptome) was used?; Pig transcriptome; Which read files were used?; None; Which which program options were used?; command line:. salmon index -t gentrome.fa -i ../salmon_index -decoys decoys.txt -k 31; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; index [""../salmon_index""] did not previously exist . . . creating it; [2019-06-27 16:02:56.612] [jLog] [info] building index; [2019-06-27 16:02:56.614] [jointLog] [error] The decoy file ecoys does not exist. I did use the SalmonTools to make the decoy file (few lines). INFO, skch::Sketch::computeFreqHist, With threshold 0.001%, ignore minimizers occurring >= 5124 times during lookup.; INFO, skch::main, Time spent computing the reference index: 727.737 sec; INFO, skch::Map::mapQuery, [count of mapped reads, reads qualified for mapping, total input reads] = [40777, 40831, 45898]; INFO, skch::main, Time spent mapping the query : 1912.34 sec; INFO, skch::main, mapping results saved in : mashmap.out; [4/10] Extracting intervals from mashmap alignments; [5/10] Merging the intervals; [6/10] Extracting sequences from the genome; index file reference.masked.genome.fa.fai not found, generating...; [7/10] Concatenating to get decoy sequences; [8/10] Making gentrome; [9/10] Extracting decoy sequence ids; [10/10] Removing temporary files; **********************************************; *** DONE Processing ...; *** You can use files `$outfolder/gentrome.fa` ; *** and $outfolder/decoys.txt` with ; *** `salmon index`; ****",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/389:17,error,error,17,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/389,3,"['down', 'error']","['downloaded', 'error']"
Availability,"Hi,; I am having trouble with salmon on linux, I downloaded salmon through bioconda and was following your ""GETTING STARTED"" tutorial, followed the code exactly and it all worked fine except I am not getting the quant.sf file for any of the samples. I also tried it on my own mRNA fastq files and the same thing happened. I am able to get all the other files like the log in its own directory. The log files are empty though so I was not able to get any information as to what is wrong. I am not getting any errors either so I don't really know where to start looking.; Any help you can give would be much appreciated.; Thank you,; Tj.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/239:49,down,downloaded,49,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/239,2,"['down', 'error']","['downloaded', 'errors']"
Availability,"Hi,; I am new to using salmon. I have tried quantifying one of my samples in both alignment and mapping-based modes. In both cases I get an error saying ""unrecognised option"" for various parts of the command (including both the ""-i"" and ""-t"" flags). Below is an example of my code and the error:. salmon quant -t References/Ensembl/Homo_sapiens.GRCh37.cdna.all.fa\; -l A\; -a bam_files/RNA_007_7669.Aligned.out.sort.com.bam\; -o salmon_quant_trial; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '-t'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. Do you know why flags such as -i and -t are not being recognized? I have tried using --index and --targets instead which hasn't helped. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/764:140,error,error,140,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/764,2,['error'],['error']
Availability,"Hi,; I am used to work with RNA-seq data sets from human or mouse (thus well-annotated organisms), for which I always use Salmon.; Now a colleague of mine asked whether I could help him with analyzing a data set obtained from a non-model organism (A) for which even no reference transcriptome is available. I therefore would like to map the reads to the transcriptome of the closest species (B) available in ENSEMBL. [It basically resembles the situation mentioned [here](https://www.biostars.org/p/253396/) at the BioStars forum, but then at the transcriptome level]. . I started by running Salmon using the settings I normally use for mouse, but the the percentage of mapped reads is extremely low, i.e varying between 0.5-2%. That it would be lower than usual I expected, but not this low....; Because I cannot easily see the forest for the trees, I would appreciate if some suggestions could be given that in effect 'relax' the criteria for mapping, eventually resulting in an increased mapping%. Thanks!; G. My code/arguments:; Input: 150 bp paired-end RNA-seq data.; Average number of reads per sample: ~22M. Transcriptome index file is 'decoyed'; generated with default settings (k=31). Salmon arguments:; ```; /home/guidoh/SALMON/salmon-latest_linux_x86_64/bin/salmon quant -i ./Lotgi1_combined_index \; 	--libType A \; 	--seqBias \; 	--gcBias \; 	--biasSpeedSamp 5 \; 	--validateMappings \; 	--numGibbsSamples 20 \; 	-1 ${F1} \; 	-2 ${R1} \; 	-o ${salmonsubdir}$fn4; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/403:296,avail,available,296,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/403,2,['avail'],['available']
Availability,"Hi,; I don't want to report a bug, but rather have 2 (unrelated) questions:; Because we don't generate that many RNA-seq data sets, I am using Salmon every now and then. I really like the program (speed!) and the obtained results. - Since I don't use Salmon on a daily basis, I usually have (would like) to update Salmon to its latest release. For these the binaries you (used to) provide are very convenient. I noticed that these are not explicitly linked to anymore on the page `https://github.com/COMBINE-lab/salmon/releases`, although these still are available through [this link](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) that is regularly posted on this Github 'forum'. Please note that I learned you favor the Bioconda route for keeping Salmon up to date. Nevertheless, provided it doesn't take too much effort, I would appreciate it very much if you could still make the binaries available. - My 2nd question has to do with some basic QC-ing: I am currently analyzing a set of 96 mouse samples. While running Salmon, I noticed most samples do have a nice percentage of mapped reads (>80%), but I also noticed that for samples this percentage was much lower (<50%).; Q: Is there an easy way of obtaining these numbers (""percent_mapped"") for all samples that were mapped in a Salmon run (without manually reviewing all 96 samples the 'meta_info.json' file)? In other words, how to obtain an 'overall log file'?. Thanks,; Guido",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/252:555,avail,available,555,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252,2,['avail'],['available']
Availability,"Hi,; I get this error:. salmon: /drone/src/github.com/COMBINE-lab/salmon/include/eigen3/Eigen/src/Core/DenseCoeffsBase.h:378: Eigen::DenseCoeffsBase<Derived, 1>::Scalar& Eigen::DenseCoeffsBase<Derived, 1>::operator[](Eigen::DenseCoeffsBase<Derived, 1>::Index) [with Derived = Eigen::Matrix<double, -1, 1>; Eigen::DenseCoeffsBase<Derived, 1>::Scalar = double; Eigen::DenseCoeffsBase<Derived, 1>::Index = long int]: Assertion `index >= 0 && index < size()' failed.; /home/ngs/scripts/sc-rna/sc-s-salmon-quant.sh: line 40: 10170 Aborted (core dumped) . when I run. ```bash; salmon quant \; -i ""$path_dr_salmonindex_transcriptome_ercc"" \; -o ""$newfilename-salmon-quant"" \; -g ""$path_dr_gtf"" \; -l ""U"" \; -p 1 \; --fldMax 50 \; --fldMean 43 \; --seqBias \; --numBootstraps 10 \; -r <(zcat $1); ```. <details>; <summary>Std out</summary>. ```; Logs will be written to 142-salmon-quant/logs; [2017-08-02 14:41:28.018] [jointLog] [info] parsing read library format; [2017-08-02 14:41:28.018] [jointLog] [info] There is 1 library.; [2017-08-02 14:41:28.190] [jointLog] [info] Loading Quasi index; [2017-08-02 14:41:28.254] [jointLog] [info] Loading 32-bit quasi index; [2017-08-02 14:41:28.286] [stderrLog] [info] Loading Suffix Array; [2017-08-02 14:41:36.196] [stderrLog] [info] Loading Transcript Info; [2017-08-02 14:41:38.296] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-08-02 14:41:38.631] [stderrLog] [info] There were 51378 set bits in the bit array; [2017-08-02 14:41:38.676] [stderrLog] [info] Computing transcript lengths; [2017-08-02 14:41:38.676] [stderrLog] [info] Waiting to finish loading hash; [2017-08-02 14:41:42.951] [stderrLog] [info] Done loading index. [2017-08-02 14:41:42.951] [jointLog] [info] done; [2017-08-02 14:41:42.951] [jointLog] [info] Index contained 51378 targets. [2017-08-02 14:41:46.428] [jointLog] [info] Computed 10524 rich equivalence classes for further processing; [2017-08-02 14:41:46.428] [jointLog] [info] Counted 98301 total reads in the equivalence ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/144:16,error,error,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/144,1,['error'],['error']
Availability,"Hi,; I just installed salmon using conda. I tried to execute the sample test that comes on the main page: https://combine-lab.github.io/salmon/getting_started/. When I try to run the quantification code; #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 --validateMappings -o quants/${samp}_quant; done ; even though the files are there, in the data directory, the tool seems to not recognize the fastq files and pops the following error for every DRR0161xx_x.fastq.gz file:; ERROR: file [DRR016140_2.fastq.gz] does not appear to exist!. ]; salmon quant was invoked improperly. Is this some common error or is it a new bug?; Thanks in advance for any response/suggestion on how to proceed here",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/963:277,echo,echo,277,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/963,4,"['ERROR', 'echo', 'error']","['ERROR', 'echo', 'error']"
Availability,"Hi,; I run the command `salmon alevin -i index -p 4 -l SR --chromium --sketch -r 1.fastq.gz -o ./output` with single-end data as input . Although it didn't generate error, it didn't map anything. Can I use two single-end data from different samples as pair-end data to run `salmon alevin `. Thank you !. and here is a part of the output ; ```; [2022-04-23 17:54:35.286] [jointLog] [info] done; [2022-04-23 17:54:37.347] [jointLog] [info] Index contained 127,042 targets; [2022-04-23 17:54:37.628] [jointLog] [info] Number of decoys : 0. [2022-04-23 17:54:38.715] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2022-04-23 17:54:38.715] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2022-04-23 17:54:38.715] [jointLog] [info] Selectively-aligned 0 total fragments out of 0; [2022-04-23 17:54:38.715] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; [2022-04-23 17:54:38.715] [jointLog] [info] finished sc_align(); [2022-04-23 17:54:39.453] [alevinLog] [info] sc-align successful.; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/769:165,error,error,165,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/769,1,['error'],['error']
Availability,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/112:345,Down,Downloading,345,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112,3,"['Down', 'down', 'error']","['Downloading', 'downloaded', 'error']"
Availability,"Hi,; I was just trying to update my installation of Salmon last night, and encountered a series of errors in compilation:; ```; .../salmon/include/SalmonIndex.hpp:254:43: error: ‘class RapMapSAIndex<long int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<long int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481da",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/418:99,error,errors,99,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418,4,['error'],"['error', 'errors']"
Availability,"Hi,; I was skimming through some of the code and other open issues on support for other library (cell barcode/umi) designs. It looks like there is code for supporting inDrop libraries, but I wasn't sure which parameters I'd need to set. I have inDrop v2 libraries that I'd like to process and am just trying to figure out if we'll need to write our own extensions or if there is already code in place that we can test. Related to some of the comments about the best model for UMI correction in #269 ; The inDrop (at least the v2 protocol) is based on the CEL-Seq like chemistry -- which uses (in vitro transcription) IVT for the initial amplification rather than PCR. From what I've seen so far, the 2 main flavors of single cell RNA-Seq library construction chemistry are; 1. CelSeq/inDrop; polyA capture -> Reverse transcription (RT) for 1st strand cDNA synthesis -> 2nd strand synthesis -> IVT (linear) amplification -> fragmentation -> RT again to convert back to cDNA -> final PCR to amplify library and add Illumina adapters. 2. DropSeq/10X; polyA capture -> RT with template switching -> PCR amplification of cDNA -> fragmentation followed by variable library construction (either transposon/Nextera based or more traditional --frag, end repair, a-tail and adapter ligation) -> final PCR to amplify library and add Illumina adapters. Thanks so much!; Julie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/339:1245,repair,repair,1245,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/339,1,['repair'],['repair']
Availability,"Hi,; I would like quantify guide-RNAs (based on 5'-tagged scRNAseq 10X feature barcoding) using Alevin. Read 1 is 26bps long (16 CB +10 UMI) and Read 2 is 58bps long (19 constant region + 21 guide sequence). Now, when I use the following settings . `salmon alevin -l ISR --barcodeLength 16 --umiLength 10 --end 5 --featureStart 19 --featureLength 21 `. I get this error . > `Transcript to Gene Map File not provided`. . However, when I use the following instead. `salmon alevin -l ISR --citeseq --featureStart 19 --featureLength 21; `. It works but since `--citeseq` assumes `--umiLength=12`, I get the following output . > `[2020-06-03 13:53:30.298] [alevinLog] [info] set CITE-seq minScoreFraction parameter to : 0.797619; > ; > [2020-06-03 13:53:30.298] [alevinLog] [info] Found 64 transcripts(+0 decoys, +0 short and +0 duplicate names in the index); > [2020-06-03 13:53:30.298] [alevinLog] [info] Filled with 64 txp to gene entries ; > [2020-06-03 13:53:30.298] [alevinLog] [info] Found all transcripts to gene mappings; > [2020-06-03 13:53:30.304] [alevinLog] [info] Processing barcodes files (if Present) ; > ; > ; > processed 52 Million barcodes; > ; > [2020-06-03 13:54:43.733] [alevinLog] [info] Done barcode density calculation.; > [2020-06-03 13:54:43.733] [alevinLog] [info] # Barcodes Used: 52200250 / 52200250.; > [2020-06-03 13:54:43.826] [alevinLog] [info] Forcing to use 100000 cells; > [2020-06-03 13:54:43.964] [alevinLog] [info] Throwing 49909 barcodes with < 10 reads; > [2020-06-03 13:54:43.984] [alevinLog] [info] Total 50092(has 201 low confidence) barcodes; > [2020-06-03 13:54:44.191] [alevinLog] [info] Done True Barcode Sampling; > [2020-06-03 13:54:44.285] [alevinLog] [info] Total 1.70493% reads will be thrown away because of noisy Cellular barcodes.; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done populating Z matrix; > [2020-06-03 13:54:45.790] [alevinLog] [info] Total 0 CB got sequence corrected; > [2020-06-03 13:54:45.790] [alevinLog] [info] Done indexing B",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/531:364,error,error,364,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/531,1,['error'],['error']
Availability,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/420:99,error,error,99,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420,2,"['avail', 'error']","['available', 'error']"
Availability,"Hi,; for a previous human deep mRNA-seq project I had downloaded the full decoy-aware hg38 salmon index from refgenie. I am now working on a new project and I see that the full index is no longer available on refgenie. Is this index available somewhere or do I need to construct it?; Thanks, Ina",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/658:54,down,downloaded,54,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/658,3,"['avail', 'down']","['available', 'downloaded']"
Availability,"Hi,; this problem was considered in issue 104 and I have been following the instructions given there. I am running Salmon in alignment mode on bam files generated by STAR (unsorted and in transcriptome coordinates). I generated a transcriptome fasta file for Salmon (according to issue 104) with ; gffread -w all_transcripts.fa -g Homo_sapiens.GRCh38.dna.primary_assembly.fa Homo_sapiens.GRCh38.103.gtf; where the two genome files (fa and gtf) were used with STAR. ; When running Salmon with this fasta file, I get the following output and error message:. Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.4.0; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { all_transcripts.fa }; # [ libType ] => { A }; # [ threads ] => { 10 }; # [ alignments ] => { /groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Sal; mon/4010760_5_mono_S58_L002_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L003_R1_001.fastq_AT; _QT.fastq.gz.STAR_aligned.toTranscriptome.bam /groups/inah/test_Salmon/4010760_5_mono_S58_L004_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.b; am }; # [ output ] => { 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/638:540,error,error,540,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638,1,['error'],['error']
Availability,"Hi,; would you mind cleaning up the STDOUT and STDERR output from `salmon quant` and `salmon index`? Commonly `STDOUT` should be used for normal output messages and `STDERR` for errors or at worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:178,error,errors,178,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,3,['error'],"['error', 'errors']"
Availability,"Hi. :); I don't know if I should make this request here, but, if not, ou (adm) can delete it, but please, read first, it is important. In the Tutorial (Getting start) of the Salmon's page, in the Step 4 when we must to run the Script to Quantify the samples, the link to the script (**quant_tut_samples.sh** -- Link below to help) sends us to a page with a script different (and wrong) tha the script on the Tutorial's page. More specifically, the error is in the line 8 with this comand **(-2 ${samp}_2.fastq.gz \)**. Notice that the comand **(${fn}/)** is missing, which causes an error in the script run, which don't create the files in the respective folders, because it does not find de file DRR0161xx_2.fastq.gz.; I soffered to perceive this, because I went straight to the link and didn't read the script on page itself kkkkk, I think you need to fix this for other people be more to be happier with this tutorial, which is very good by the way. As I said, I don't know if this is where I should send this request, but, if you fix this error it's what matters now. **-- Script Link --** ; https://raw.githubusercontent.com/COMBINE-lab/salmon/gh-pages/assets/quant_tut_samples.sh. thank you very much. **C.B.; @charbavito**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/546:448,error,error,448,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/546,3,['error'],['error']
Availability,"Hi. Can someone please tell me how to get rid of the gene names and other weird names but only keep transcript names in `quant.sf`? Here is what my `quant.sf `looks like:. Name Length EffectiveLength TPM NumReads; ENST00000456328.2|ENSG00000223972.5|OTTHUMG00000000961.2|OTTHUMT00000362751.1|DDX11L1-202|DDX11L1|1657|processed_transcript| 1657 1502.212 0.752165 16.577; ENST00000450305.2|ENSG00000223972.5|OTTHUMG00000000961.2|OTTHUMT00000002844.2|DDX11L1-201|DDX11L1|632|transcribed_unprocessed_pseudogene| 632 477.467 0.000000 0.000. Also I am wondering if this is the reason why the error occurs when I import the data and run `tximeta` in R.; It says Error in checkAssays2Txps(assays, txps) :; none of the transcripts in the quantification files are in the GTF. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/513:586,error,error,586,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/513,2,"['Error', 'error']","['Error', 'error']"
Availability,"Hi. I would like to know where I can get detailed info for different fields that get listed in meta_info.json. I can see some information listed in the section ""New information available in meta_info.json:"" in this page https://github.com/COMBINE-lab/salmon/releases. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/446:177,avail,available,177,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/446,1,['avail'],['available']
Availability,"Hi:; Recently, I learned to use salmon in our lncRNA research project. I am confused in a point. ; As shown in the documentation (https://salmon.readthedocs.io/en/latest/salmon.html), according to our understanding, if we want those incompatible mappings will be discarded, the incompatPrior should be set as 0.0. And our RNA-Seq library type is dUTP based strand-specific RNA-Seq, so we should use ISR. ; But I am confused with https://gitter.im/COMBINE-lab/salmon?at=594a76d402c480e67268f02b and https://github.com/COMBINE-lab/salmon/issues/116; we want the expression level of antisense. Since there are about 0.5~1% reads can be the wrong reads mapped to the reverse strand of the gene (dUTP stranded protocol, the strand error (i.e. % of reads sequenced from the wrong strand of the RNA) is typically 0.5-1%). Can we use the incompatPrior option and get the expression level of antisense(right) in a single run?; This is our command line `salmon quant -i Ath_TX.index -l ISR -1 test_R1.fq.gz -2 test_R2.fq.gz -o TEST_TX_QUANT --incompatPrior 0.0 --seqBias --gcBias --threads 20`.; That those wrong mapped alignments (they didn't follow the ISR fule, maybe the error from the error of process of library construction) will be discarded.; Thank you and all the best.; Linhua",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/182:726,error,error,726,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/182,3,['error'],['error']
Availability,"Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: via singularity; while running manually to troubleshoot: conda.; * Which reference (e.g. transcriptome) was used? Homo_sapiens.GRCh38 transcriptome + genome as a 'gentrome'; * Which read files were used? newly sequenced bulk RNAseq reads. **Expected behavior**; All samples with similar numbers of reads using the same index to finish in roughly the same amount of time. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Pop!_OS 22.04 LTS x86_64 [Linux]; - Version: ; ``` ; $ uname -a; Linux pop-os 6.0.2-76060002-generic #202210150739~1666289067~22.04~fe0ce53 SMP PREEMPT_DYNAMIC Thu O x86_64 x86_64 x86_64 GNU/Linux. $lsb_release -a; No LSB modules are available.; Distributor ID:	Pop; Description:	Pop!_OS 22.04 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; - I can't share these reads publicly but might be able to share personally (but I'd have to ask first). - I tried using the suggestion from previous issues (e.g. [--hitFilterPolicy BOTH](https://github.com/COMBINE-lab/salmon/issues/527)) to use `--hitFilterPolicy BOTH` but it didn't seem to help. - I tried trimming polyX tails with `fastp` but that didn't help either. - To try and see if `salmon` was causing the issues, I thought I'd try `kallisto` as a similar-ish comparison. `kallisto` mapped the reads with 100 EM bootstraps in about 25 minutes. Commands:. ```; kallisto index -i transcripts.idx genome.transcripts.fa; kallisto quant -i transcripts.idx -o output -b 100 <(zcat ${R1}) <(zcat ${R2}) -t 6; ```. Thanks for the tool - hopefully this is easy to sort out!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:12024,avail,available,12024,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['avail'],['available']
Availability,"I am analyzing single cell RNAseq with10x chemistry.; I have my own transcriptome from long read sequencing and followed all the steps, prepare metadata, make the gentrome.fasta, indexing, using bioawk for the transcript to gene table.; Getting this error consistently:; ```; salmon alevin -l ISR -1 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R1_001.fastq.gz -2 Novogene/fastq/Alin_neg/Alin_neg_S2_L008_R2_001.fastq.gz --chromiumV3 -i salmon_alevin/Alin_neg_salmon_index -p 15 -o Alin_neg_alevin_output --tgMap PacBio/single_cell_pipeline/sqanti3_output/Alin_neg_txp2gene.tsv. Version Info: This is the most recent version of salmon.; Logs will be written to Alin_neg_alevin_output/logs; [2020-06-22 22:51:19.065] [jointLog] [info] setting maxHashResizeThreads to 15; [2020-06-22 22:51:19.065] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-22 22:51:19.065] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2020-06-22 22:51:19.065] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-22 22:51:19.065] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes.; [2020-06-22 22:51:19.066] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-22 22:51:19.066] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2020-06-22 22:51:19.250] [alevinLog] [info] Found 88744 transcripts(+455 decoys, +0 short and +0 duplicate names in the index); [2020-06-22 22:51:19.323] [alevinLog] [info] Filled with 36098 txp to gene entries; [2020-06-22 22:51:19.323] [alevinLog] [error] E",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/540:250,error,error,250,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540,1,['error'],['error']
Availability,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:394,error,error,394,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,4,"['down', 'error']","['downstream', 'error']"
Availability,"I am intending to run salmon on a set of RNA-Seq data lying in our lab for a long time. They are for mm9 and since there are >50 samples I was intending to run it using Salmon `version : 0.6.0`. I have used earlier versions of salmon on hg19 data from both UCSC, NCBI (spiked-in and non-spiked in data) without alignment mode and have run them successfully. Recently we were able to download the latest version and compile and trying to run the indexing on the UCSC mm9 genome.fa file so that I can use quasi-mapping indexes that can be then used to run quant for my samples downstream so getting read counts as well as TPM much faster than any other tool. Can you tell me what is the problem. . Command line used; `salmon index -t /path_to/genome.fa -i salmonquasi-indexes --type quasi -k 31`. Here is the error message while using the Ram-Map. ```; Version Info: This is the most recent version of Salmon.; index [""salmonquasi-indexes""] did not previously exist . . . creating it; [2016-03-17 10:41:34.655] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; Elapsed time: 53.9731s. Replaced 96385738 non-ATCG nucleotides; Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 0.196609s; Writing sequence data to file . . . done; Elapsed time: 1.56391s; [info] Building 64-bit suffix array (length of generalized text is 2654911539 ); Building suffix array . . . success; saving to disk . . . done; Elapsed time: 126.003s; done; Elapsed time: 883.472s; processed 615000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/49:383,down,download,383,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/49,3,"['down', 'error']","['download', 'downstream', 'error']"
Availability,"I am interested in using Alevin to quantify some single nucleus RNA-seq data but am wondering what the best approach would be to get Alevin to appropriately handle the significant number of intronic reads. Issue #450 raised a similar question in the context of RNA velocity estimation, but it failed to address the appropriate approach if you are only interested in gene counts rather than distinguishing between intronic vs exonic counts. So, I am wondering if there are any recommendations on the best way to approach this issue. I imagine this mostly comes down to index generation, but am not sure what approach is best. After reading the [preprint on RNA velocity](https://www.biorxiv.org/content/10.1101/2020.03.13.990069v1.full#T1) the approach that immediately comes to mind would be to make an index including both fully-spliced and fully-unprocessed copies of each transcript. . I am somewhat concerned, however, how this might affect the UMI handling algorithm, especially since everything purely exonic would now multi-map while intronic reads would tend to be considered unique. I could see some cases where you end up getting over-counting due to inappropriately splitting UMIs, especially with transcripts that have a mix of splicing and intron retention (eg two short spliced exons + intron 2).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/586:560,down,down,560,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/586,1,['down'],['down']
Availability,"I am interested to run your tool: Salmon. It is a great and easy tool to use. I encounter this error by using:; ```; ./bin/salmon quant -t output.fa -g hgTables.gtf -l IU -a ../../pipeline/rna_seq/all_chr1/merged.bam -p 20 -o salmon_quant; ```. Error:; ```; [2017-04-11 12:33:40.420] [jointLog] [critical] Transcript chr1 appeared in the BAM header, but was not in the provided FASTA file; [2017-04-11 12:33:40.420] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment ; consider generating a transcriptome fasta using a command like: ; gffread -w output.fa -g genome.fa genome.gtf; you can find the gffread utility at (http://ccb.jhu.edu/software/stringtie/gff.shtml); ```. I generated output.fa using gffreads from hg19.fa and gtf . In the output.fa, it is annotated in terms of gene ids, but there is chr1 in BAM. I am not sure how can I make them to talk to each other?. Could you please tell me how can I fix it?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/131:95,error,error,95,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131,2,"['Error', 'error']","['Error', 'error']"
Availability,"I am running alevin on the 10X V3 pbmc 1k data set and I am getting a strange warning when running the following command:; ```; salmon alevin -i salmon-index/ -p 16 -l IU --chromiumV3 -1 pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R1_001.fastq.gz pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R1_001.fastq.gz -2 pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R2_001.fastq.gz pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R2_001.fastq.gz -o salmon-out --tgMap t2g.tsv; ```; I get the following warning:; ```; [2022-02-18 19:46:11.256] [jointLog] [warning] NOTE: Read Lib [[ [pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R1_001.fastq.gz, pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L001_R2_001.fastq.gz], [ /pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R1_001.fastq.gz, pbmc_1k_v3_fastqs/pbmc_1k_v3_S1_L002_R2_001.fastq.gz] ]] :. Found no concordant and consistent mappings. If this is a paired-end library, are you sure the reads are properly paired? check the file: salmon-out/lib_format_counts.json for details; ```; I cannot discern the source of the error. Notably, this error does not occur when I use -lISR instead of -l IU. Any thoughts?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/753:990,error,error,990,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/753,2,['error'],['error']
Availability,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/914:42,error,error,42,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914,3,"['Error', 'error']","['Error', 'error']"
Availability,"I am running salmon as part of a pipeline and this error message is being displayed:. running salmon quant...; Version Server Response: Not Found; exception : [unrecognised option '--biasCorrect']. Exiting.; pipeline failed at expression quantification!. Here are the options which the script uses: ; salmon quant -t ${transcript_fa} ${ltype} -a ${rna_bam} -o ${sm_odir} -p $nproc --biasCorrect; check_file ${sm_out} ""pipeline failed at expression quantification!"". I have the latest version of salmon installed.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/873:51,error,error,51,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/873,1,['error'],['error']
Availability,"I am trying make a Salmon Indexing but when I run with this code: ; $salmon index -t ../transcriptome/gencode.v37.transcripts.fa.gz -i ../transcriptome/genecode.v37.salmon141 . And I got this error:; Version Info: This is the most recent version of salmon.; The file [../transcriptome/gencode.v37.transcripts.fa.gz] pr; ovided for the transcriptome does not appear to exist.(salmon). I am trying to do this practice of ARN-seq:; https://comunidadbioinfo.github.io/minicurso_abr_2021/bin/Practica-RNAseq.html. i don't understand the error, because i have gencode.v37.transcripts.fa.gz in /reference",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/797:192,error,error,192,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/797,2,['error'],['error']
Availability,"I am trying to create index using salmon for human Genome (not transcriptome). The version of salmon I am using is : salmon `v0.13.1` .; The command I used is :. salmon index \; -t /hg38_genome/GRCh38.p13.genome.fa \; -i index. The main error I am getting is:. Command error:; [2022-01-26 12:20:19.647] [jointLog] [warning] Entry with header [KI270896.1] was longer than 200000 nucleotides. Are you certain that we are indexing a transcriptome and not a genome?. If I use transcriptome file instead of genome, it works perfectly and returns the index files. I got both `transcriptome` and `genome` from the `gencode`. For my analysis I need to use genome. do you know how I can use genome?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/741:237,error,error,237,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/741,2,['error'],['error']
Availability,"I am trying to quantify my reads with salmon quant (v. 1.8.0) and I'm getting an error saying ""SAM file says target Vcev1_p0.Chr07.17417.mRNA has length 2346, but the FASTA file contains a sequence of length [2348 or 2347]"". Do you know what is the issue?. `./salmon-1.8.0_linux_x86_64/bin/salmon quant -l A -a ./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam -t ./vcae1.4.cds.fa -o ./Rev5-2.quant`. Version Info: This is the most recent version of salmon.; salmon (alignment-based) v1.8.0; [ program ] => salmon; [ command ] => quant; [ libType ] => { A }; [ alignments ] => { ./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam }; [ targets ] => {./vcae1.4.cds.fa }; [ output ] => { ./Rev5-2.quant }; Logs will be written to /h./Rev5-2.quant/logs; [2022-06-21 22:56:14.963] [jointLog] [info] setting maxHashResizeThreads to 8; [2022-06-21 22:56:14.963] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; [2022-06-21 22:56:15.015] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""./STARaligned_Rev5-2_Aligned.toTranscriptome.out.bam"", fasta = ""./vcae1.4.cds.fa"" . . . **SAM file says target Vcev1_p0.Chr07.17417.mRNA has length 2346, but the FASTA file contains a sequence of length [2348 or 2347]**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/785:81,error,error,81,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/785,1,['error'],['error']
Availability,"I am trying to quantify some rna sequences with Salmon. Instead of creating my own index, I downloaded a pre-build version from here: [http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4](url) suggested in the salmon doc. I downloaded the file: `salmon_partial_sa_index:default` which is under my scope of research. Then, I just run the following command: `salmon quant -i default -l A -1 P10_1.fq.gz -2 P10_2.fq.gz --validateMappings -o transcripts_quant`, where `default` is the name of the folder resulting after the decompression of the salmon pre-build index, and `P10_1.fq.gz -2 P10_2.fq.gz` are paired reads of rna. I get this error: **rapidjson internal assertion failure: IsObject()**. I read a thread where a user performed a re-build. But since I am new to this filed I don't know what FASTA file I could use to do it. It's worth mentioning that I am working on a remote server and I downloaded the pre-build index directly on it, using `wget`. Some screenshot of what the `default` folder contains:. <img width=""806"" alt=""Schermata 2023-07-27 alle 14 42 59"" src=""https://github.com/COMBINE-lab/salmon/assets/81829336/e0bda06a-f344-4836-9e27-8e2de6a10265"">",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/862:92,down,downloaded,92,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862,5,"['down', 'error', 'failure']","['downloaded', 'error', 'failure']"
Availability,"I am trying to run Salmon (v0.14.1) in a linux environment with the following command:. `salmon quant -i /index -l A -1 PBS_2-R1.fastq.gz -2 PBS_2-R2.fastq.gz --numBootstraps 100 -o /scratch`. However, I get the error:. `(mapping-based mode) Exception : [unrecognised option '--numBootstraps 100'].`. When I run the command without the `--numBootstraps 100` argument it works fine. Is this error arising because I'm running in mapping-based mode? Can you not use numBootstraps in this mode?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/440:212,error,error,212,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/440,2,['error'],['error']
Availability,"I am trying to use Salmon and am being returned the following error. Any help here? . Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501367_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501367 }; Logs will be written to salmonRes_SRR1501367/logs; [2021-07-16 11:47:01.372] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.372] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.372] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.372] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.372] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.372] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:62,error,error,62,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['error'],['error']
Availability,"I am using Metawrap`https://github.com/bxlab/metaWRAP/blob/master/Usage_tutorial.md` to analyze bins abundance to the fwd and rev paired reads. MetaWrap uses Salmon and its telling me to upgrade Salmon but since it is within Metawrap, I am unsure how to do this. This is the error I receive: ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; salmon v0.13.1; ===============. I downloaded the tar file for salmon but because it is used within MetaWrap I'm unsure the linux terminal line to update the salmon. Thanks,; Katie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/423:275,error,error,275,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/423,4,"['avail', 'down', 'error']","['available', 'downloaded', 'error']"
Availability,"I am using Ubuntu on my laptop.; I installed salmon by the command:-; conda install --channel bioconda salmon; I downloaded the SalmonTools scripts from; git clone https://github.com/COMBINE-lab/SalmonTools.git; But I am unable to run salmon or the salmon index.; I can even run :- salmon --version; it gives the above-said error.; I made the generateDecoyTranscritome.sh executable as well but still it did not work.; At first, it said that it needed libboost_filesystem.so.1.60.0 so I installed the entire boost 1.60.0. But it still shows this error.; Please help!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/639:113,down,downloaded,113,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/639,3,"['down', 'error']","['downloaded', 'error']"
Availability,"I am using `salmon` for both creating index and quant using the latest version of salmon using the following commands:. 1- for indexing:. salmon index ; -t ""${fasta}"" ; -i index . 2- for quantification:. salmon quant ; --libType=U; --index $index ; -1 ${reads[0]} ; -2 ${reads[1]} ; -o $pair_id. But I am getting this error:. Command error:; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [the option '--index' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. This error is related to quant part. Do you know how I can fix the problem?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/746:318,error,error,318,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/746,3,['error'],['error']
Availability,"I am using salmon v1.0.0 that was compiled using bioconda. I downloaded fastq files from GEO, built an index using salmon index, but am getting 0 mappings. . #Downloading data; wget -o test.fastq.gz s3://sra-pub-src-5/SRR*******/test.fastq.gz. #building the salmon index from gencode [using vM22 for consistency]; salmon index -t gencode.vM22.transcripts.fa.gz -i gencode.vM22.transcripts --gencode. #running salmon quant; salmon quant -l A -i gencode.vM22.transcripts -r test.fastq.gz -o ~/Test1/ --gcBias --validateMappings --numGibbsSamples 20. The output .sf files have 0 TPMs and 0 fragment reads for all outputs and I am attaching a screenshot of the log file. . The reference genome and sequencing file is from the same organism. . ![Screen Shot 2022-10-06 at 3 53 32 PM](https://user-images.githubusercontent.com/108241225/194406132-61d5a5ce-a429-4b04-9fab-e4586dea9020.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/804:61,down,downloaded,61,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/804,2,"['Down', 'down']","['Downloading', 'downloaded']"
Availability,"I am working with C. griseus bulk RNAseq, and when using quant mode, the aux_info folder is empty. My understanding was that this folder shouldn't be empty. However, it is empty for every sample. I am using GCF_000223135.1 genome downloaded using NCBI datasets like this:; `datasets download genome accession GCF_000223135.1 --include gff3,rna,cds,protein,genome,seq-report`; I have tried indexing with and without decoy with similar results.; Is this normal?; EDIT: ; I tried using a different genome from here (https://ftp.ensembl.org/pub/release-112/fasta/cricetulus_griseus_picr/dna/Cricetulus_griseus_picr.CriGri-PICRH-1.0.dna_sm.toplevel.fa.gz) and it produces a non-empty aux_info folder.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/955:230,down,downloaded,230,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/955,2,['down'],"['download', 'downloaded']"
Availability,"I built Salmon 0.7.2 on OSX 10.13.3 and received an error when it was making libjemalloc: autogen.sh: autoconf not found. I installed ""autoconf"" program and tried it again and it succeeded. The documentation should say that autoconf must be installed in order to make salmon.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/203:52,error,error,52,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/203,1,['error'],['error']
Availability,"I built salmon 0.7.2 on OSX 10.13.3, then ran 'make test'. Test #1 fails, other two succeed. Looking at file Testing/Temporary/LastTest.log, it says:. ```; ""unit_tests"" start time: Mar 03 20:31 PST; Output:; ----------------------------------------------------------; CMake Error at /Users/tedtoal/src/salmon-0.7.2/cmake/UnitTests.cmake:7 (message):; Error running No such file or directory. ```. I looked in the tests directory and find program ""unitTests"", and when I run it, it succeeds:. ```; ===============================================================================; All tests passed (158 assertions in 4 test cases). ```. leading me to believe that actually, test1 succeeds, but something is wrong with the test system and it doesn't see that it succeeded.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/204:274,Error,Error,274,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/204,2,['Error'],['Error']
Availability,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/778:99,error,error,99,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778,10,"['Error', 'error', 'fault']","['Error', 'error', 'fault']"
Availability,"I downloaded Salmon-0.8.2_linux_x86_64, and I decompressed it.; When I ran salmon, it worked.; But when I ran salmon index, I got a mistake as follow:. Version Info: This is the most recent version of Salmon.; exception : [the option '--index' is required but missing]. Exiting.; ; Please help me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/146:2,down,downloaded,2,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/146,1,['down'],['downloaded']
Availability,"I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 961,758; SRX3847835_quant/logs/salmon_quant.log:[2022-02-02 15:33:54.185] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 220,351; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version: ; ```; Linux farm.cse.ucdavis.edu 4.15.0-159-generic #167-Ubuntu SMP Tue Sep 21 08:55:05 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.6 LTS; Release:	18.04; Codename:	bionic; ```; **Additional context**; I intentionally mapped all three libraries as SE, even though two are PE. Because of the presence of polycistronic transcripts in microbes, many paired-end reads would be discordant, which causes counts to look very...odd. See [this preprint](https://www.biorxiv.org/content/10.1101/2022.01.24.477642v1) for more details on that phenomenon. I'm trying to use the decoys as a first step in identifying reads that map to intergenic sequences, where reads might span two coding domain sequences, or land in the intergenic sequences between two coding domain sequenes. (#52). Decoy names: [s__Faecalibacterium_prausnitzii_C_clustered_intergenic_seq_names.txt.gz](https://github.com/COMBINE-lab/salmon/files/8005978/s__Faecalibacterium_prausnitzii_C_clustered_intergenic_seq_names.txt.gz); Transcriptome: [s__Faecaliba",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:5028,avail,available,5028,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['avail'],['available']
Availability,"I get the FastxParser error as below during indexing with Salmon v0.9.0. What does that mean? Has the indexing run successfully? Should I worry about anything?. ```; $ salmon index -t gencode.v27lift37.transcripts.fa -i salmon_gencode/; Version Info: This is the most recent version of Salmon.; [2017-11-28 16:51:37.147] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2017-11-28 16:51:38.341] [jointLog] [warning] Entry with header [ENST00000594394.1|ENSG00000268141.1|-|-|AL606500.1-201|AL606500.1|21|protein_coding|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:51:40.503] [jointLog] [warning] Entry with header [ENST00000595481.1|ENSG00000268556.1|-|-|AC012360.1-201|AC012360.1|30|protein_coding|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:51:47.865] [jointLog] [warning] Entry with header [ENST00000473810.1_1|ENSG00000239255.1_3|OTTHUMG00000157482.1_3|OTTHUMT00000348942.1_1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:51:48.079] [jointLog] [warning] Entry with header [ENST00000603775.1_1|ENSG00000271544.1_3|OTTHUMG00000184300.1_3|OTTHUMT00000468575.1_1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:52:00.610] [jointLog] [warning] Entry with header [ENST00000632684.1_1|ENSG00000282431.1_3|OTTHUMG00000190602.2_3|OTTHUMT00000485301.2_1|AC245427.8-201|AC245427.8|9|TR_D_gene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:52:11.269] [jointLog] [warning] Entry with header [ENST00000606517.1|ENSG00000271831.1|OTTHUMG00000185672.1|OTTHUMT00000470956.1|AL022345.9-001|AL022345.9|27|unprocessed_pseudogene|], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2017-11-28 16:52:13.209] [join",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/176:22,error,error,22,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/176,1,['error'],['error']
Availability,I get the following error when installing `salmon`:. ```; cd /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external && /gsc/btl/linuxbrew/Cellar/cmake/3.3.0/bin/cmake -P /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake; -- extracting...; src='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; dst='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-1.0.0'; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; failed; ```. Is it possible to compile `salmon` with its external dependencies provided externally rather than vendored into `salmon`? What is `cereal`?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/10:20,error,error,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10,6,"['Error', 'error']","['Error', 'error']"
Availability,"I had a fasta file with an space at the end of a sequence line. This caused salmon to fail, somewhat quietly (no output files are produced). It would be nice to report the specific problem with the input or position of the failing line, ... log:. <pre>; Logs will be written to output_dir/logs; there is 1 lib; [2015-10-09 15:47:13.170] [jointLog] [info] parsing read library format; [bns_restore_core] Parse error reading ./current_index/bwaidx.amb; </pre>",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/22:409,error,error,409,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22,1,['error'],['error']
Availability,"I have been trying to use the salmon docker container available on docker hub. When I run salmon quant I am able to load all of the files and start the program, but I get a killed message while loading hash. I get an empty log file and empty folders created after the container is killed. **To Reproduce**; I run the following command to run the container:; `docker run -v /Users/caz3so/workspaces/salmon_docker:/temp -w /temp -ti combinelab/salmon`. The following is the output:; <img width=""1389"" alt=""screenshot 2018-06-27 11 15 56"" src=""https://user-images.githubusercontent.com/31480706/41983246-8296bb76-79fb-11e8-9710-c38ec051b7e7.png"">. **Expected behavior**; I have salmon installed on my machine and was able to run these files with no problem. It is only when I am using the docker container, so it could be a docker related problem. . **Desktop (please complete the following information):**; I am using a 2017 Macbook pro with 16 GB 2133 MHz LPDDR3 memory and a 2.8 GHz Intel Core i7 processor.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/243:54,avail,available,54,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243,1,['avail'],['available']
Availability,"I have made a singularity container for the salmon v1.6.0 and I am working with centOS. ; I am trying to make an index file for human transcript using this command:. **salmon index -t hg19_EnsenmblGenes_sequence_ensenmbl.fasta -i Ensembl_hg19_salmon_index**. But I am getting this error:. **Version Info: This is the most recent version of salmon.; exception : [the option '--index' is required but missing]. Exiting.**; ; Then I tried this command:. **salmon --index -t hg19_EnsenmblGenes_sequence_ensenmbl.fasta -i Ensembl_hg19_salmon_index**. Then I got this error:. **Version Info: This is the most recent version of salmon.; salmon was invoked improperly.; For usage information, try salmon --help; Exiting.**. Do you know how I can fix the issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/730:281,error,error,281,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/730,2,['error'],['error']
Availability,"I have mapped Oxford Nanopore Reads to transcriptome using Graphmap. When I tried to run salmon quant on the BAM file, it shows that error below:. ```; salmon quant -t GRCh37.67.cdna.all.fa -l A -a in.bam -o out.count -p 15 --incompatPrior 1 --noErrorModel; # salmon (alignment-based) v0.11.3; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { /mnt/projects/kokep/kokep/reference/GRCh37.67.cdna.all.fa }; # [ libType ] => { A }; # [ alignments ] => { in.bam }; # [ output ] => { out.count }; # [ threads ] => { 15 }; # [ incompatPrior ] => { 1 }; # [ noErrorModel ] => { }; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; Logs will be written to out.count/logs; Malformed key:value pair at line 1: ""@HD VN:1.0 SO:coordinate ""; ============; Exception : [ERROR: Failed to open file in.bam, exiting!; ]; ============; /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon alignment-quant was invoked improperly.; For usage information, try /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon quant --help-alignments; Exiting. ```; How do I fix the error? Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/387:133,error,error,133,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387,5,"['ERROR', 'avail', 'error']","['ERROR', 'available', 'error']"
Availability,"I have misterious ""hits: 17435551, hits per frag: 1.34457 Cannot combine distributions that live in a different space!"" error for the paired reads.; Here are the parameters:; ```bash; salmon quant -i /pipelines/indexes/GRAY_WHALE/salmon/graywhale_anton --threads 8 -l A -r /pipelines/results/graywhale/transcriptome/trinity_out_dir/Trinity-GG.fasta -1 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz -2 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz -o transcripts_quant; ```; All the files and folders are avaluabe for download, just add reads_1: http://pipelines1.westeurope.cloudapp.azure.com/ before /pipelines. Like this:. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/175:120,error,error,120,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175,2,"['down', 'error']","['download', 'error']"
Availability,"I have single ended reads in a fastq file which I aligned with bowtie against the transcriptome. Now I am running the following command:; ./bin/salmon quant -t ../Data/DRR029379.fq -p 6 -l A -a ../Data/DRR029379_after_bowtie.bam -o ../Data/DRR029379_after_salmon; and this the error I am getting. Version Info: This is the most recent version of Salmon.; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { ../Data/DRR029379.fq }; # [ threads ] => { 6 }; # [ libType ] => { A }; # [ alignments ] => { ../Data/DRR029379_after_bowtie.bam }; # [ output ] => { ../Data/DRR029379_after_salmon }; Error: @RG lines are at odds with binary encoded reference data; ============; Exception : [ERROR: Failed to open file ../Data/DRR029379_after_bowtie.bam, exiting!; ]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting. I cannot figure out anything from this message. Please help. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/113:277,error,error,277,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/113,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"I have updated my homebrew index and installed Salmon on my Macbook (0S X Sierra). However, when I run `salmon` or `salmon -h` on the command line I get the following error message. ```; salmon(41538,0x7fffc4f5a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffc4f50000; ```. `brew doctor` doesn't show any unexpected issues. Any ideas what might be going on?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/142:167,error,error,167,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/142,1,['error'],['error']
Availability,"I installed salmon from conda environment using python3 and got the below error:. ```; $ salmon. salmon: error while loading shared libraries: libboost_thread.so.1.60.0: cannot open shared object file: No such file or directory; ```. I am using Ubuntu 16.04 Xenial for which the latest Boost version is [1.58](https://launchpad.net/ubuntu/xenial/+package/libboost-dev). Since it was originally compiled under a later version of Boost (1.60), it gives the above error. I found this post to fix the issue temporarily:; https://www.biostars.org/p/389360/. It would be nice to fix it to search for the latest version of boost available though. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/565:74,error,error,74,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565,4,"['avail', 'error']","['available', 'error']"
Availability,"I just cloned salmon from github repository. Everything was working good, I was able to perform cmake with the code: salmon/build cmake -DFETCH_BOOST=TRUE ..; but when I started to built with make, after several minutes it prompts the following error:. [ 7%] Built target libdivsufsort; [ 14%] Built target libtbb; [ 20%] Built target liblzma; [ 26%] Built target libjemalloc; [ 33%] Built target libcereal; [ 33%] Performing build step for 'libstadenio'; Making all in io_lib; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; compilation terminated.; Makefile:922: recipe for target 'libstaden_read_la-cram_io.lo' failed; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. I have looking for any solution but without success, Can anyone help me with this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/357:245,error,error,245,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/357,8,"['Error', 'error']","['Error', 'error']"
Availability,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/315:678,Error,Errors,678,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315,2,['Error'],"['Error', 'Errors']"
Availability,I noticed that for some reason salmon does not convert transcript ids to gene ids.; Here is the command that I run:; ```; salmon --no-version-check quant -i /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/446511232/GRCh38.p13_ensembl_101 --geneMap /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-2062771642/Homo_sapiens.GRCh38.101.gtf --numBootstraps 128 --threads 3 -l A --seqBias --gcBias --validateMappings --writeUnmappedNames -o quant_GSE113798_GSE113801_GSM3119577_SRR7075087 \; -1 /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-11815/SRR7075087_1.fastq_cleaned.fastq.gz -2 /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-11815/SRR7075087_2.fastq_cleaned.fastq.gz; ```; I also enclose the results. Even though I use Ensembl Human GTF ( i.e. ftp://ftp.ensembl.org/pub/release-101/gtf/homo_sapiens/Homo_sapiens.GRCh38.101.gtf.gz ) it gives me transcript ids in quant.genes.sf output; [quant.zip](https://github.com/COMBINE-lab/salmon/files/5632824/quant.zip); [Downloads.tar.gz](https://github.com/COMBINE-lab/salmon/files/5632828/Downloads.tar.gz),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/598:1417,Down,Downloads,1417,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/598,2,['Down'],['Downloads']
Availability,"I ran salmon alevin 0.14.0 with a custom transcriptome reference and the following options: --chromium --dumpFeatures --dumpMtx --whitelist mylist.txt. Everything ran through OK. However, when I tried to load the .mtx file with readMM() in R, I got the error: ; ` Error: readMM(): column values 'j' are not in 1:nc `. When I tried to read directly the binary file into a matrix, there's a warning:; ```; counts <- readBin(quants_mat.gz, what = 'numeric', n = length(genes)*length(cells)); close.connection(quants_mat.gz); Warning message:; In matrix(data = counts, nrow = length(cells), ncol = length(genes), :; data length [391335] is not a sub-multiple or multiple of the number of rows [4942]; ```; It seems like there's issue with the dimensions; [out.zip](https://github.com/COMBINE-lab/salmon/files/3296080/out.zip); of the output matrix. I've attached my log file as well as my output files (both .mtx and binary). Thank you.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/380:253,error,error,253,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/380,2,"['Error', 'error']","['Error', 'error']"
Availability,"I ran salmon quant -p 6 -i refs/Homo_sapiens_GRCh38_91_quasi_index -l ISF -1 <(zcat RD1_R1_001.fastq.gz) -2 <(zcat RD1_R2_001.fastq.gz) -o test_salmon_quant -g refs/Homo_sapiens.GRCh38.91.gtf; (...); I am getting a bunch of warnings like:; [warning] couldn't find transcript named [ENST00000619185.1] in transcript <-> gene map; returning transcript as it's own gene. And in the end, there isn't a single ENSGxxxx Ensembl gene id in the quant.gene.sf file.; The gtf file was downloaded from Ensembl ftp site ftp://ftp.ensembl.org/pub/release-91/gtf/homo_sapiens. . I noticed the format of the gtf files from Ensembl v.75 and 91 are different; they have added gene_version between gene_id and transcript_id, and transcript_version. Homo_sapiens.GRCh37.75.gtf:8	protein_coding	transcript	26247878	26268564	.	+	.	gene_id ""ENSG00000104765""; transcript_id ""ENST00000518611""; gene_name ""BNIP3L""; gene_source ""ensembl_havana""; gene_biotype ""protein_coding""; transcript_name ""BNIP3L-004""; transcript_source ""ensembl_havana"";. Homo_sapiens.GRCh38.91.gtf:8	havana	transcript	26390362	26411048	.	+	.	gene_id ""ENSG00000104765""; gene_version ""15""; transcript_id ""ENST00000518611""; transcript_version ""5""; gene_name ""BNIP3L""; gene_source ""ensembl_havana""; gene_biotype ""protein_coding""; transcript_name ""BNIP3L-202""; transcript_source ""havana""; transcript_biotype ""protein_coding""; tag ""CCDS""; ccds_id ""CCDS83267""; tag ""basic""; transcript_support_level ""2"";",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/198:475,down,downloaded,475,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/198,1,['down'],['downloaded']
Availability,"I ran the following command: . ```; salmon index -t metagG.ffn -i transcript_index --type quasi -k 31; ```; to a symlink to a file (metaG.ffn) that didn't actually exist and salmon was stuck on ; ```; [Step 1 of 4] : counting k-mers; ```; for an hour instead of spitting out a ""file does not exist"" error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/105:299,error,error,299,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/105,1,['error'],['error']
Availability,"I ran the latest binary salmon (Salmon v0.11.0). But it said, ""salmon: symbol lookup error: salmon: undefined symbol: _ZNSt6locale10_S_classicE"". Can the issue for the binary salmon be fixed?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/256:85,error,error,85,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/256,1,['error'],['error']
Availability,"I saw there was an earlier issue that discussed PCR duplicate removal (https://github.com/COMBINE-lab/salmon/issues/136). I am specifically curious about this response:. > We are currently working on the code that will do duplicate removal when UMI tags are present. That methodology can be extended to remove duplicates even without UMI tags. I am wondering if the functionality was ever added. I am not interested in removing duplicates, but it would be nice to see their estimated levels as a QC measure. Is this information available somewhere? If not, maybe there is some other related metric?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/307:528,avail,available,528,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/307,1,['avail'],['available']
Availability,"I see existing open issues with no workaround listed. Filing new one in the hopes of at getting a workaround. I have 48 files in all and could quantify one by one but not sure how to collate the results from all of them. Help is much appreciated. I am very happy to help reproduce the problem and gather whatever information is needed to fix this problem. Bulk mode was used with aligned files. I do plan to try this with fastq files (instead of already aligned files). Core is dumped if I use more than one file. Here is how I used it. I tried this while letting it pick the number of thread automatically (no change) and specifying the number of threads as 8 (went a little farther with that). 1.; v 1.9.0. 2.; Salmon was installed using the command conda install -c bioconda salmon; Arabidopsis Thaliana reference genome was used - TAIR10_chr_all.fas - from here: https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files. 3.; Alignment was done using STAR. 4.; See command below for options used. 5.; Linux login01 3.10.0-1160.el7.x86_64 #1 SMP Mon Oct 19 16:18:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. 6. Output, for success case, one file only. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam -o salmonquant; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { salmonquant }; Logs will be written to salmonquant/logs; [2023-01-29 16:02:11.267] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be igno",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:895,down,download,895,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['down'],['download']
Availability,"I tried to run salmon v0.9.1 (for Mac OSX, downloaded from the conda page) using the '--gencode' flag and am getting an error that the option is unrecognized. I have SE reads. salmon quant -i ~/path/to/index/gencodemouse_index -l A --seqBias --gcBias --gencode \; 	-r <(gunzip -c 19_S34_L004_R1_001.fastq.gz 19_S34_L005_R1_001.fastq.gz 19_S34_L006_R1_001.fastq.gz 19_S34_L007_R1_001.fastq.gz 19_S34_L008_R1_001.fastq.gz) \; 	-o ~/output/directory/SalmonQuantsGencode/19_S34_Quants. Exception : [unrecognised option '--gencode']. Exiting.; Pauls-MacBook-Pro:fastq pdellorusso$ salmon -h; salmon(51580,0x7fffadd90340) malloc: *** malloc_zone_unregister() failed for 0x7fffadd81000; Salmon v0.9.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/200:43,down,downloaded,43,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/200,2,"['down', 'error']","['downloaded', 'error']"
Availability,"I understand that salmon does not use read quality scores when performing alignment/quantitation but, as it stands, running with `--writeMappings` it also doesn't output the qualities in its SAM-format output. That may not impact most downstream applications of the data but it does limit some. I'd be particularly interested in using reads that have been aligned and assigned to transcripts with an EM algorithm to investigate RNA editing. The most advanced methods of doing this integrate the quality of base calls from the sequencer into the models and, as such, cannot currently run on the data output. Although it may save a few CPU cycles in not reading and outputting the qualities - I can understand the choice when running with default settings - when running with `--writeMappings` that nominal difference in speed needs to be weighed up against downstream utility. Could this be looked into?. Cheers! George",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/756:235,down,downstream,235,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/756,2,['down'],['downstream']
Availability,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/209:201,error,error,201,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209,2,['error'],['error']
Availability,"I was attempting to create an index for mapping of transcripts using the full chicken (Gallus gallus) genome from Ensembl. No errors appeared, but the ref_indexing.log stated ""Replaced 9,788,221 non-ATCG nucleotides"" which seems rather high compared to some of the numbers I've seen from gencode-derived indices. This is my first time making an index, so I don't know where to begin troubleshooting. What ""non-ATCG nucleotides"" are being replaced here, and what are they being replaced with? Could Salmon be reading metadata in transcript headers as nucleotide sequences? Why would it do that? Am I just being paranoid?. Here's my code. Note that chicken does not have a ""transcriptome"" file, so I concatenated the cdna and ncrna files ahead of the full genome. I've also attached the ref_indexing.log file.; ```. SALMON_BIN=/data/homezvol1/fweghors/chickscripts/salmon-1.8.0_linux_x86_64/bin/salmon; grep ""^>"" <(gunzip -c Gallus_gallus.GRCg6a.dna.toplevel.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat Gallus_gallus.GRCg6a.cdna.all.fa.gz Gallus_gallus.GRCg6a.ncrna.fa.gz Gallus_gallus.GRCg6a.dna.toplevel.fa.gz > gentrome.fa.gz. gunzip gentrome.fa.gz. $SALMON_BIN index -t gentrome.fa -d decoys.txt -p 13 -i salmon_index; ```. [ref_indexing.log](https://github.com/COMBINE-lab/salmon/files/8375551/ref_indexing.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/766:126,error,errors,126,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/766,1,['error'],['errors']
Availability,"I'm getting a memory allocation error when I try to run the salmon binary after updating my OS. Here is the error:. salmon(65515,0x7fffdb32f3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffdb325000",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/103:32,error,error,32,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/103,2,['error'],['error']
Availability,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/936:93,error,error,93,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936,11,"['Error', 'error']","['Error', 'error']"
Availability,"I'm looking at sequencing from cells infected with different SARS2 virus variants. In addition to looking at the host transcriptome, I'd also like to know more about the different levels of viral transcript expression. I'm curious the best way to do this. I can very easily take the SARS2 reference strain and generate a combined human-SARS2 transcriptome, but I'm worried about how the various mutations that define these viral strains will mess with Salmon's mapping of reads. . My current plan is to drop the --minScoreFraction (maybe to 0.7?) and change the mismatch penalty to 0, but I'm not sure it's the best option. I could also try to hunt down the genomes of each variant I'm using, but the annotations and deposited sequences for a lot of the variants aren't super great, so I might just run into this same problem. . Any advice on how best to use Salmon for this task would be greatly appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/747:649,down,down,649,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/747,1,['down'],['down']
Availability,"I'm quantifying reads from a Lexogen QuantSeq experiment, using `-l SF and --noLengthCorrection`. I just downloaded the latest release 0.9.0. Full command (using nu parallel); `salmon quant -i path_to_index -r {} -l SF --noLengthCorrection -o {.} -p 5`. Which gives the following settings information:; ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/wdecoster/databases/Homo_sapiens/hg38/transcriptome/GRCh38-full-transcriptome-index }; ### [ unmatedReads ] => { pt_d10046-11.fastq.gz }; ### [ libType ] => { SF }; ### [ noLengthCorrection ] => { }; ### [ output ] => { pt_d10046-11.fastq }; ### [ threads ] => { 5 }; ```. But I get the following warning for each sample:; `Detected a *potential* strand bias > 1% in an unstranded protocol check the file: samplename/lib_format_counts.json for details`. That file looks as below:. ```; {; ""read_files"": ""pt_d10040-14.fastq.gz"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 2836170,; ""num_assigned_fragments"": 2836170,; ""num_consistent_mappings"": 10375916,; ""num_inconsistent_mappings"": 0,; ""strand_mapping_bias"": 0.9229587055253724,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 9576542,; ""SR"": 799374,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. This suggests my libType SF is ignored?. (Less important: If you could make --libtype an alias for --libType that would be great, random internal capitalization is quite annoying imho)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/177:105,down,downloaded,105,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/177,1,['down'],['downloaded']
Availability,"I'm running salmon v.4 (downloaded and compiled today) on gencode v22 and got the following error:. Performing PCA decomposition; salmon: /home/merkija1/software/salmon-0.4.0/include/eigen3/Eigen/src/Core/Redux.h:202: static Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar Eigen::internal::redux_impl<Func, Derived, 3, 0>::run(const Derived&, const Func&) [with Func = Eigen::internal::scalar_sum_op<double>; Derived = Eigen::Block<const Eigen::Matrix<double, -1, -1>, -1, 1, true>; Eigen::internal::redux_impl<Func, Derived, 3, 0>::Scalar = double]: Assertion `size && ""you are using an empty matrix""' failed.; Aborted. The command I ran is:; salmon-0.4.0/src/salmon quant --index gencode.v22.index_0.4.0/ --mates1 <(gunzip -c r1_fq1.gz r1_fq2.gz --mates2 <(gunzip -c r2_fq1.gz r2_fq2.gz ) --output $OUTPUT_DIR --biasCorrect --threads 4 --geneMap gencode.v22.annotation.nochr.gtf --libType ""ISF"". If I remove the --biasCorrect flag, it runs without error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/5:24,down,downloaded,24,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/5,3,"['down', 'error']","['downloaded', 'error']"
Availability,"I'm trying to build salmon on FreeBSD. . First issue, fetchRapMap.sh fails because it calls /bin/bash. Bash on FreeBSD is in /usr/local/bin/bash.; This is easily worked around with a symlink. Second issue: libbwa fails to build. . ```; [ 34%] Performing build step for 'libbwa'; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 17: Missing dependency operator; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 19: Need an operator; make[3]: Fatal errors encountered -- cannot continue; make[3]: stopped in /usr/home/esiefker/salmon/salmon/external/bwa-master; *** Error code 1; ```; In addition to failing to build bwa, bwa is present in ports and already installed on this machine. Cmake should check for this.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/162:505,error,errors,505,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162,2,"['Error', 'error']","['Error', 'errors']"
Availability,I'm trying to build version 0.6 and I get the following error:. ```; cd /root/soft/salmon/salmon-0.6.0/build/src && /usr/local/bin/cmake -E cmake_link_script CMakeFiles/salmon.dir/link.txt --verbose=1; /opt/rh/devtoolset-2/root/usr/bin/c++ -pthread -funroll-loops -fPIC -fomit-frame-pointer -Ofast -DRAPMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -static-libstdc++ -Wno-deprecated-register -Wno-unused-local-typedefs -L/opt/rh/devtoolset-2/root/usr/lib64 -L/opt/rh/devtoolset-2/root/usr/lib CMakeFiles/salmon.dir/QSufSort.c.o CMakeFiles/salmon.dir/is.c.o CMakeFiles/salmon.dir/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:56,error,error,56,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['error'],['error']
Availability,"I'm trying to process the 10X 1.3 Million Brain Cells from E18 Mice dataset using Alevin with compiled salmon version 0.12.0 using the gencode.vM19.pc_transcripts.fa.gz as reference (https://support.10xgenomics.com/single-cell-gene-expression/datasets/1.3.0/1M_neurons). The chemistry used is the 10x-v2. I have divided the fastqs into the 133 libraries and I'm trying to run Alevin per library fastqs (~140 r1 fastqs per library). The dataset has been processed with the longranger demux program, which outputs one fastq with both the UMI+barcode and read-sequence. I have divided the fastqs so that it corresponds to the input of Alevin (i.e. the UMI+barcode in one fastq and the read-sequence in the other). However it seems that Alevin gets stuck on processing the barcodes, no error code is produced it just doesn't seem to do anything anymore with just ""processed X Million barcodes"" printed on the screen. Are you aware of such a problem with many fastq files or is there something that I'm not taking into account? Is there a limit how many files can be used as an input? I tested Alevin with 60 fastqs (120 in total r1+r2 fastqs) and it ran through but with more than 60 fastqs it seems to get stuck on processing the barcodes. If it is not possible to run all the library related fastqs, do you recommend running them in smaller batches and then combining the resulting count matrices?. Command used: salmon alevin -l ISR -1 R1_fastqs -2 R2_fastqs --chromium -i index -p 20 -o alevin_output --tgMap txp2gene_mouse.tsv --dumpCsvCounts --whitelist barcode_whitelist.txt --minScoreFraction 0.7. The barcode whitelist was gotten from the HDF5 file which has the original data in a filtered matrix format (it has been run through the cellranger).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/333:782,error,error,782,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/333,1,['error'],['error']
Availability,"I'm trying to use Trinity; With the modules:; module load trinityrnaseq/2.6.2; module load samtools/1.16; module load jellyfish/2.3.0; module load jdk/1.8.0_151; module load bowtie2/2.2.9; module load salmon/1.9.0; But I get the error:; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; Error, cmd:; salmon index -t /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp -i /work/luarrieta/proy_labap/Output/trinity/read_partitions/Fb_0/CBin_36/c3679.trinity.reads.fa.out/Trinity.fasta.tmp.salmon.idx --type quasi -k 25 -p 1; died with ret (256) at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/../../PerlLib/Process_cmd.pm line 19.; 	Process_cmd::process_cmd('salmon index -t /work/luarrieta/proy_labap/Output/trinity/rea...') called at /opt/bioinf/trinityrnaseq-2.6.2/util/support_scripts/salmon_runner.pl line 20; Trinity run failed. Must investigate error above. @brianjohnhaas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/832:229,error,error,229,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/832,4,"['Error', 'error']","['Error', 'error']"
Availability,"I'm trying to use salmon v1.0.0 to merge a bunch of bulk quant files successfully also run with salmon. However, salmon can't seem to find the quant files, even though farther down in the log it lists the quant file within the same directory in memory:. [critical] The sample directory /gcloud-shared/quants/A653_388/quant.sf either doesn't exist, or doesn't contain a quant.sf file; ...yet... /gcloud-shared/quants/A653_388:; total 9.9M; drwxr-xr-x 2 root root 4.0K May 20 16:11 aux_info; -rw-r--r-- 1 root root 349 May 20 16:11 cmd_info.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 libParams; -rw-r--r-- 1 root root 588 May 20 16:11 lib_format_counts.json; drwxr-xr-x 2 root root 4.0K May 20 16:11 logs; -rw-r--r-- 1 root root 9.8M May 20 16:11 quant.sf. Here's a shorter version of my command :; salmon --no-version-check quantmerge --quants /gcloud-shared/quants/A653_388 /gcloud-shared/quants/A653_242 --names sample1 sample2 --column numreads --genes -o /gcloud-shared/merge/ukbec_gene_numreads.sf. Any idea what might be happening? I'll also attach the logs and quant file from the sample in case thats helpful. [ukbec_logs_salmon_quantmerge5.txt](https://github.com/COMBINE-lab/salmon/files/6517777/ukbec_logs_salmon_quantmerge5.txt). [ukbec_quants_gencode_32_filtered_A653_388_quant.txt](https://github.com/COMBINE-lab/salmon/files/6517782/ukbec_quants_gencode_32_filtered_A653_388_quant.txt); [ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/6517784/ukbec_quants_gencode_32_filtered_A653_388_logs_salmon_quant.log)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/662:176,down,down,176,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/662,1,['down'],['down']
Availability,"I've been running Salmon on some data from accession SRP034543. For some it works fine, but some there is segmentation fault when using the `--useFSPD`. For an example run where it fails, have a look at accession SRR2048254. Here is the command I ran along with output. ```; $ salmon quant \; > -i /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa \; > -l IU \; > -1 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_1.fastq.gz) \; > -2 <(zcat /nfs/research2/teichmann/valentine/data/SRP034543/SRR2048254_2.fastq.gz) \; > -o /tmp/SRR2048254_salmon_out \; > --biasCorrect \; > --useFSPD; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { /nfs/research2/teichmann/reference/mus-musculus/salmon/mouse_cdna_38.p4.83_repbase20.11_ercc_SIRV.fa }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ output ] => { /tmp/SRR2048254_salmon_out }; # [ biasCorrect ] => { }; # [ useFSPD ] => { }; Logs will be written to /tmp/SRR2048254_salmon_out/logs; [2016-06-21 10:04:29.524] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi indextcmalloc: large alloc 4294967296 bytes == 0x4d084000 @; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Suffix Array; [2016-06-21 10:04:30.159] [stderrLog] [info] Loading Position Hash; [2016-06-21 10:04:30.158] [jointLog] [info] Loading Quasi index; [2016-06-21 10:04:32.681] [stderrLog] [info] Loading Transcript Info; [2016-06-21 10:04:33.686] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-06-21 10:04:34.050] [stderrLog] [info] There were 115426 set bits in the bit array; [2016-06-21 10:04:34.376] [stderrLog] [info] Computing transcript lengths; [2016-06-21 10:04:34.377] [stderrLog] [info] Waiting to finish loading hash; Index contained 115426 targets; [2016-06-21 10:04:47.033] [jointLog] [info] done; [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/64:119,fault,fault,119,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64,1,['fault'],['fault']
Availability,"I've been using 0.7.1 without problems until today.; I'm trying to index the transcriptome (made with gffread) of human GRCh37 from archived Ensembl 60. The process has been running for hours, with no messages beyond this:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; [2016-11-04 13:45:38.583] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers. ```. This is all there is in the index.log. `[2016-11-04 13:45:38.583] [jLog] [info] building index`. None of me previous indexes have taken so long, especially not in total silence. So I'm guessing it gets stuck somewhere, but where? Why?. I know there is a newer version, but getting our busy sysadmin to install things takes time and I didn;t see anything critical for my usage case listed in the release notes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/100:276,avail,available,276,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100,2,['avail'],['available']
Availability,"I've built Salmon 0.9.1 (packaged it for GNU Guix) and experience a couple of errors. The first one is that running ""salmon quant"" without any further argument segfaults. That's likely because of the custom argument parsing code, which doesn't check bounds. It accesses argv2[1] even though that might not exist. (I've built it with GCC 5 and various versions of Boost. I've also unbundled all bundled libraries and made packages for them, but this should not affect the behaviour at all.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/184:78,error,errors,78,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/184,1,['error'],['errors']
Availability,"I've found at least ~100 instances of identical RefSeq IDs that appear on more than one chromosome in the human genome reference. These are a mix of (I'm guessing) chrX/Y homologous genes, miRs, snoRNAs, and other long/short noncoding RNAs. This issue will also apply to genes appearing in genomic regions with sequence from multiple haplotypes (e.g. chr6_qbl_hap6, etc) since those also have identical RefSeq IDs. This is certainly bad practice for annotation purposes, but the consequence is that STAR effectively lumps the duplicates into one transcript model (e.g. 3 appearances of 68 bp miR means STAR annotates as one 204 bp gene), and salmon then finds a discrepancy during error modeling between the annotated and ""STAR-observed"" gene lengths, throwing a fatal error. One fix of course would be to remove duplicated sequences from the gene annotation prior to alignment with STAR, [or to have STAR deal with duplicated sequences differently](https://github.com/alexdobin/STAR/issues/482), but it might be nice to have some sort of check in place downstream as well to avoid failure.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/282:681,error,error,681,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/282,4,"['down', 'error', 'failure']","['downstream', 'error', 'failure']"
Availability,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/913:85,error,error,85,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913,2,"['error', 'failure']","['error', 'failure']"
Availability,"If the read length in the FASTQ input files to Salmon are less than the k-mer size used when building the index then no error is produced but a mapping rate of 0% is reported. It would be useful for Salmon to throw an error telling the user that the mapping will surely fail for this reason (as opposed to others such as wrong reference transcriptome or wrong library type), and suggest rebuilding the index using a smaller k-mer size.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/41:120,error,error,120,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/41,2,['error'],['error']
Availability,"In CMakeLists.txt, `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` is used to determine whether to use LLVM's C++ stdlib - libc++, or the system's own GNU one (libstdc++). Unfortunately, those distros do not ship with that library (per the clip below) - and yet the test succeeds - yielding failure later in the build process due to lots of missing header files.; ```; [rocky@ip-10-11-36-33 ~]$ cat >test.cpp; #include <iostream>. int main() {; std::cout << ""Helloworld"";; }; [rocky@ip-10-11-36-33 ~]$ clang++ -stdlib=libc++ test.cpp ; test.cpp:1:10: fatal error: 'iostream' file not found; 1 | #include <iostream>; | ^~~~~~~~~~; 1 error generated.; ```. The cause is that CMake's `check_cxx_compiler_flag(-stdlib=libc++ HAVE_LIBCPP)` test which is used in Salmon only tests if the compiler accepts the flag (the test code it uses doesn't have any includes - just `main() {return 0;}`) rather than if it works. I don't know the whys behind the missing library - the library is available on OS/X for example - however it seems this behaviour should be changed for now on Linux platforms.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/969:297,failure,failure,297,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/969,4,"['avail', 'error', 'failure']","['available', 'error', 'failure']"
Availability,"In particular, fail when unzip is not available.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/199:38,avail,available,38,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/199,1,['avail'],['available']
Availability,Index Version Error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:14,Error,Error,14,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,Index error with Salmon v1.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/451:6,error,error,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/451,1,['error'],['error']
Availability,"Is it possible to use alevin with cell barcodes that have constant regions within them (see example below)?. bbbbbbccccccccccccbbbbbbcccccccccccc bbbbbb. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/654:516,down,downloaded,516,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/654,1,['down'],['downloaded']
Availability,"Is there a way to compile Salmon to a 32-bit architecture by any chance? I ask because I'd like to have single-cell tutorials on sandbox.bio v2 that use Salmon. But to power the platform, I'm running a 32-bit/i686 Debian OS in the browser 😬. When I try to compile it in a [i386/debian:bookworm-20230904-slim](https://hub.docker.com/r/i386/debian/) Docker container, this is the error I get:. ```; 1075.0 -- Build files have been written to: /root/build/salmon/external/oneTBB-2021.5.0; 1075.2 [ 14%] Performing build step for 'libtbb'; 1075.7 [ 2%] Building CXX object src/tbb/CMakeFiles/tbb.dir/address_waiter.cpp.o; 1079.6 [ 5%] Building CXX object src/tbb/CMakeFiles/tbb.dir/allocator.cpp.o; 1083.2 [ 7%] Building CXX object src/tbb/CMakeFiles/tbb.dir/arena.cpp.o; 1087.7 In file included from /usr/lib/gcc/i686-linux-gnu/12/include/x86gprintrin.h:89,; 1087.7 from /usr/lib/gcc/i686-linux-gnu/12/include/immintrin.h:27,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_machine.h:42,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/../../include/oneapi/tbb/detail/_utils.h:26,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/task_dispatcher.h:20,; 1087.7 from /root/build/salmon/external/oneTBB-2021.5.0/src/tbb/arena.cpp:17:; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h: In function 'tbb::detail::r1::prolonged_pause()':; 1087.7 /usr/lib/gcc/i686-linux-gnu/12/include/waitpkgintrin.h:53:1: error: inlining failed in call to 'always_inline' '_tpause(unsigned int, unsigned long long)': target specific option mismatch; 1087.7 53 | _tpause (unsigned int __A, unsigned long long __B); 1087.7 | ^~~~~~~; 1087.7 compilation terminated due to -Wfatal-errors.; 1087.8 make[5]: *** [src/tbb/CMakeFiles/tbb.dir/build.make:104: src/tbb/CMakeFiles/tbb.dir/arena.cpp.o] Error 1; 1087.8 make[4]: *** [CMakeFiles/Makefile2:170: src/tbb/CMakeFiles/tbb.dir/all] Error 2; 1087.8 make[3]: *** [Makefile:156: all] Er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/872:378,error,error,378,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/872,1,['error'],['error']
Availability,Is there a way to produce the transcript level matrix output?. ```; salmon alevin -l ISR -1 /share/illumina/slims_view/cpdfjgh/Un_DTDB267/Project_XCJZ_10XSC0087/JZ_KO_S26_L002_R1_001.fastq.gz -2 /share/illumina/slims_view/cpdfjgh/Un_DTDB267/Project_XCJZ_10XSC0087/JZ_KO_S26_L002_R2_001.fastq.gz --chromium -i /share/biocore/keith/2020-A/scripts/reference_sources/salmon/GRCm38.salmon_decoys -p 4 -o /share/biocore/projects/Zhang_J_UCD/mouse_sc_2020/salmon/salmon_output --dumpMtx; Version Info: This is the most recent version of salmon. Transcript to Gene Map File not provided; Exiting Now./salmon.counts.sh: line 39: 8882 Segmentation fault salmon alevin -l ISR -1 /share/illumina/slims_view/cpdfjgh/Un_DTDB267/Project_XCJZ_10XSC0087/JZ_KO_S26_L002_R1_001.fastq.gz -2 /share/illumina/slims_view/cpdfjgh/Un_DTDB267/Project_XCJZ_10XSC0087/JZ_KO_S26_L002_R2_001.fastq.gz --chromium -i /share/biocore/keith/2020-A/scripts/reference_sources/salmon/GRCm38.salmon_decoys -p 4 -o /share/biocore/projects/Zhang_J_UCD/mouse_sc_2020/salmon/salmon_output --dumpMtx; 0; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/588:638,fault,fault,638,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/588,1,['fault'],['fault']
Availability,"Is this a user error or a programming error?. FreeBSD 12.0-RELEASE FreeBSD 12.0-RELEASE r341666 GENERIC amd64 ; 8G memory, 2T disc.; Salmon installed as Linux binary. The command I issued was; salmon quant -i salmonIndexMouse -l IU -1 SRR1818187_2.fastq.gz -2 SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant; nuc11.2 wayne@dideoxy2:~/rnaseq > sh salmonQuant.sh; Version Info: This is the most recent version of salmon. [ 0.14.1 ]. ......; It was going well, until:; ....; [2019-08-17 11:51:58.943] [stderrLog] [info] There were 134,473,138 set bits in the bit array; [2019-08-17 11:51:58.995] [stderrLog] [info] Computing transcript lengths; [2019-08-17 11:51:58.995] [stderrLog] [info] Waiting to finish loading hash. [2019-08-17 11:52:03.223] [stderrLog] [info] Done loading index; [2019-08-17 11:52:03.223] [jointLog] [info] done; [2019-08-17 11:52:03.223] [jointLog] [info] Index contained 106,434 targets; Segmentation fault (core dumped)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/419:15,error,error,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419,3,"['error', 'fault']","['error', 'fault']"
Availability,Issue with error message that doesn't always appear,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:11,error,error,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,1,['error'],['error']
Availability,"Issue with salmon for bulk RNA-seq. The following code was run to invoke salmon:; ```; docker run --rm -v /labs/Resources/mmulatta/MMUL_10:/mnt/indexdir/ resources/salmon salmon index -t /mnt/indexdir/gentrome.fa -d /mnt/indexdir/decoys.txt -p 8 -i /mnt/indexdir/index.salmon; ```; however, everytime I run it, I get the following error: ; Exception : [Error: The index version file /labs/khatrilab/Resources/mmulatta/MMUL_10/index.salmon/versionInfo.json doesn’t seem to exist. Please try re-building the salmon index.] . when in fact, the file exists. the gentrome.fa and decoys.txt files were created by following this tutorial (clearly changing the genome to mmulatta); https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ . Why is salmon not finding the index file that's clearly present in the given folder path?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/559:331,error,error,331,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/559,2,"['Error', 'error']","['Error', 'error']"
Availability,"LIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-02-10 12:57:59.774] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-02-10 12:57:59.774] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; ...; [etc.]. **Desktop**. - OS: Debian Linux; - Version: Linux elegans 5.6.0-1-amd64 #1 SMP Debian 5.6.7-1 (2020-04-29) x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bullseye/sid; Release: unstable; Codename: sid. **Additional context**. This is my first run with BD Rhapsody data (and our own single cell data, for that matter). We're currently using SevenBridges for generating gene count tables, but I don't like the black-box nature of that service. I'm much more comfortable when I know what's going on under the hood, and can tweak things when I notice oddness.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/628:3744,avail,available,3744,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628,1,['avail'],['available']
Availability,Large number of errors about non-existent positions in the reads,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/289:16,error,errors,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289,1,['error'],['errors']
Availability,"My first attempt at building salmon failed during what appears to be the tbblib build step. I'm going to continue by building tbb on my own and starting over, but wanted to post notes here. Steps:. ```; $ uname -a; Linux jorvisvm-lx 2.6.18-371.1.2.el5 #1 SMP Mon Oct 7 16:34:35 EDT 2013 x86_64 x86_64 x86_64 GNU/Linux. $ pwd; /tmp/salmon-0.6.1-pre. $ mkdir build && cd build. ## set up environment:; export PATH=/usr/local/packages/gcc-5.3.0/bin:$PATH. $ cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=/usr/local/packages/salmon-v0.6.1-pre ../; $ make; ```. [build.failure.txt](https://github.com/COMBINE-lab/salmon/files/189095/build.failure.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/51:566,failure,failure,566,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/51,2,['failure'],['failure']
Availability,No counts Reported although Salmon shows no errors,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/143:44,error,errors,44,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/143,1,['error'],['errors']
Availability,No error model errors when using --ont option,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/701:3,error,error,3,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701,2,['error'],"['error', 'errors']"
Availability,"Non Issue, user error",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/554:16,error,error,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/554,1,['error'],['error']
Availability,"OS: ubuntu 16.04; Salmon was installed using conda. Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /work/yu_liu/resource/salmon_gencodev28_index/ }; ### [ libType ] => { U }; ### [ unmatedReads ] => { /work/yu_liu/NEPC_david/data_source/Output.Fastqs/HS_1-1_S1_R1_001.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { /scratch/yu_liu/HS_1-1_quant }; Logs will be written to /scratch/yu_liu/HS_1-1_quant/logs; [2018-07-13 20:04:48.086] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-13 20:04:48.086] [jointLog] [info] parsing read library format; [2018-07-13 20:04:48.086] [jointLog] [info] There is 1 library.; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/251:851,failure,failure,851,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251,1,['failure'],['failure']
Availability,"On a fresh conda install,. ```; conda create -n slm2 -y -c bioconda salmon; ```; yields a broken salmon:; ```; $ conda activate slm2; (slm2) ggg298-43@farm:~$ salmon; salmon: error while loading shared libraries: libboost_iostreams.so.1.60.0: cannot open shared object file: No such file or directory; ```. This seems to be because I'm missing conda-forge; this:. ```; conda create -n slm3 -y -c conda-forge -c bioconda salmon; conda activate slm3; salmon; ```; works fine!. Nothing needs to be done, and I will update as I debug, but I wanted to put this here for google bait.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/480:175,error,error,175,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/480,1,['error'],['error']
Availability,On robustness of quasi-mapping for metagenomics,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/196:3,robust,robustness,3,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/196,1,['robust'],['robustness']
Availability,"On the system I'm trying to install Salmon 0.4.2 on, downloading from `ftp://` is blocked for security reasons. Therefore, the automagic download the Jellyfish 2.1.3 source tarball fails. I tried adjusting the `CMakeLists.txt` files to use the latest Jellyfish 2.2.3 instead, but this leads to an issue with a Jellyfish include file not being found:. ```; checking whether we are using the GNU C compiler... In file included from /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc(17):; /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/include/merge_files.hpp(21): catastrophic error: cannot open source file ""jellyfish/err.hpp""; #include <jellyfish/err.hpp>; ^. compilation aborted for /tmp/Salmon/0.4.2/intel-2015a/salmon-0.4.2/src/merge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/11:53,down,downloading,53,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11,4,"['Error', 'down', 'error']","['Error', 'download', 'downloading', 'error']"
Availability,"One problem I often run Into is that the sequence quality of the reads are problematic so I would like to trim the files based on sequence quality before. When I do that, fx with [trimmomatic](http://www.usadellab.org/cms/?page=trimmomatic), the result is 4 fastq files. Two where the pairs of reads both survived and two where one mate of the pair did not survive. Would it be possible to enable the bias corrections when mapping both paired data (with -1 and -2) and the unpaired data (--unmatedReads). Currently when I try this I just get the following error ""Cannot combine distributions that live in a different space"".",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/150:556,error,error,556,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/150,1,['error'],['error']
Availability,Orphan recovery option in rare cases causes Salmon to quit abruptly without error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:7,recover,recovery,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,2,"['error', 'recover']","['error', 'recovery']"
Availability,Out of Range error for txp to gene Map due to Duplicate Transcript Names in the reference,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/386:13,error,error,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/386,1,['error'],['error']
Availability,Performing download step for 'libtbb'; tbb-2017_U3.tgz: FAILED; sha256sum: WARNING: 1 of 1 computed checksum did NOT match; tbb-2017_U3.tgz did not match expected SHA256! Exiting.; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make: *** [all] Error 2; -----------------------------------------------------------; command used; cmake -DBOOST_INCLUDEDIR=/local/genome/packages/boost/1.57.0/include/ -DBOOST_LIBRARYDIR=/local/genome/packages/boost/1.57.0/lib/ -DCMAKE_INSTALL_PREFIX=/local/genome/packages/salmon/0.8.2. ------------------------------------------------------------------------; boost/1.57.0 ; gcc/4.9.4,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/153:11,down,download,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/153,5,"['Error', 'down']","['Error', 'download']"
Availability,Please make gencode SA files available,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/904:29,avail,available,29,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/904,1,['avail'],['available']
Availability,"Presumably in part because of the conda-forge packages, if working from a relatively clean miniconda install:. conda install r-essential; followed by; conda install salmon. causes R to fail to start, throwing the error:; ""/home/timp/miniconda3/lib/R/bin/exec/R: symbol lookup error: /home/timp/miniconda3/lib/R/bin/exec/../../lib/../../libreadline.so.6: undefined symbol: PC"". This seems to be a relatively known ncurses/readline linked bug (https://github.com/conda-forge/rpy2-feedstock/issues/1) - but it seems solved in normal channels. Not sure exactly why it's cropping up here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/147:213,error,error,213,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147,2,['error'],['error']
Availability,"Problem with ""[error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character."" Error",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/642:15,error,error,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642,2,"['Error', 'error']","['Error', 'error']"
Availability,Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:19,Error,Error,19,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['Error'],['Error']
Availability,"Ptr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: candidate expects 1 argument, 3 provided; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2086:92: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadSeq>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >*)’; else if (isSingleEnd) { processFunctor(i, singleParserPtr, sidx->quasiIndex32()); }; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: processRead",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:22289,error,error,22289,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"R17122012 --tgMap transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv -p 28 --sciseq3 --justAlign`; I then took the output into alevin-fry to create a generate-permit-list and it gives me the error that salmon hasn't added the extra bps to account for the chemistry; ""thread 'main' panicked at 'assertion failed: `(left == right)`; left: `20`,; right: `19`: found barcodes of different lenghts 20 and 19', src/cellfilter.rs:203:13; note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace""; Thus I re-ran salmon alevin without the --justAlign flag and it seems to hit a different error; ""### alevin (dscRNA-seq quantification) v1.9.0; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { af_splici/dm6_splici_idx/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { data/SRR17122012_1.fastq }; ### [ mates2 ] => { data/SRR17122012_2.fastq }; ### [ output ] => { SRR17122012 }; ### [ tgMap ] => { transcriptome_splici_fl52/transcriptome_splici_fl52_t2g.tsv }; ### [ threads ] => { 28 }; ### [ sciseq3 ] => { }. [2022-11-28 21:13:57.772] [alevinLog] [info] Found all transcripts to gene mappings; [2022-11-28 21:13:57.781] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 10 Million barcodes. [2022-11-28 21:14:01.454] [alevinLog] [info] Done barcode density calculation.; [2022-11-28 21:14:01.454] [alevinLog] [info] # Barcodes Used: 1 / 10285890.; [2022-11-28 21:14:01.455] [alevinLog] [error] Can't find left Boundary.; Please Report this issue on github."". Specifically, please provide at least the following information:. * Which version of salmon was used? salmon (1.9.0); alevin-fry (0.8.0) ; * How was salmon installed (compiled, downloaded executable, through bioconda)? Conda install; * Which reference (e.g. transcriptome) was used? Drosophila melanogaster (BDGP6.32 (GCA_000001215.4)); ; **Desktop (please complete the following information):**; - OS: Ubuntu Linux. Thanks in advance for all your help regarding this!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/813:1845,error,error,1845,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/813,2,"['down', 'error']","['downloaded', 'error']"
Availability,Random Segmentation Faults,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/295:20,Fault,Faults,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295,1,['Fault'],['Faults']
Availability,RapMap and JSON parsing error salmon 0.8.2,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/135:24,error,error,24,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/135,1,['error'],['error']
Availability,RapidJSON Logs Error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/322:15,Error,Error,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322,1,['Error'],['Error']
Availability,SE=''; COND_INTERNAL_SHA256_TRUE=''; COND_LZMADEC_FALSE='#'; COND_LZMADEC_TRUE=''; COND_LZMAINFO_FALSE='#'; COND_LZMAINFO_TRUE=''; COND_LZMALINKS_FALSE='#'; COND_LZMALINKS_TRUE=''; COND_MAIN_DECODER_FALSE='#'; COND_MAIN_DECODER_TRUE=''; COND_MAIN_ENCODER_FALSE='#'; COND_MAIN_ENCODER_TRUE=''; COND_SCRIPTS_FALSE='#'; COND_SCRIPTS_TRUE=''; COND_SHARED_FALSE=''; COND_SHARED_TRUE=''; COND_SMALL_FALSE=''; COND_SMALL_TRUE='#'; COND_SYMVERS_FALSE=''; COND_SYMVERS_TRUE='#'; COND_THREADS_FALSE=''; COND_THREADS_TRUE=''; COND_W32_FALSE=''; COND_W32_TRUE='#'; COND_XZDEC_FALSE='#'; COND_XZDEC_TRUE=''; COND_XZ_FALSE='#'; COND_XZ_TRUE=''; CPP=''; CPPFLAGS=''; CYGPATH_W='echo'; DEFS=''; DEPDIR='.deps'; DLLTOOL=''; DSYMUTIL=''; DUMPBIN=''; ECHO_C='\c'; ECHO_N=''; ECHO_T=''; EGREP=''; EXEEXT=''; FGREP=''; GETOPT_H=''; GETTEXT_MACRO_VERSION=''; GMSGFMT=''; GMSGFMT_015=''; GREP=''; HAVE_VISIBILITY=''; INSTALL_DATA='${INSTALL} -m 644'; INSTALL_PROGRAM='${INSTALL}'; INSTALL_SCRIPT='${INSTALL}'; INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'; INTLLIBS=''; INTL_MACOSX_LIBS=''; LD=''; LDFLAGS=''; LIBICONV=''; LIBINTL=''; LIBOBJS=''; LIBS=''; LIBTOOL=''; LIPO=''; LN_EXEEXT='$(EXEEXT)'; LN_S='ln -s'; LTLIBICONV=''; LTLIBINTL=''; LTLIBOBJS=''; LT_SYS_LIBRARY_PATH=''; MAKEINFO='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing makeinfo'; MANIFEST_TOOL=''; MKDIR_P='build-aux/install-sh -c -d'; MSGFMT=''; MSGFMT_015=''; MSGMERGE=''; NM=''; NMEDIT=''; OBJDUMP=''; OBJEXT=''; OTOOL64=''; OTOOL=''; PACKAGE='xz'; PACKAGE_BUGREPORT='lasse.collin@tukaani.org'; PACKAGE_NAME='XZ Utils'; PACKAGE_STRING='XZ Utils 5.2.2'; PACKAGE_TARNAME='xz'; PACKAGE_URL='http://tukaani.org/xz/'; PACKAGE_VERSION='5.2.2'; PATH_SEPARATOR=':'; POSIX_SHELL='/bin/sh'; POSUB=''; PREFERABLY_POSIX_SHELL='/bin/sh'; PTHREAD_CC=''; PTHREAD_CFLAGS=''; PTHREAD_LIBS=''; RANLIB=''; RC=''; SED=''; SET_MAKE=''; SHELL='/bin/sh'; STRIP=''; USE_NLS=''; VERSION='5.2.2'; XGETTEXT=''; XGETTEXT_015=''; XGETTEXT_EXT,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:13425,Down,Downloads,13425,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Down'],['Downloads']
Availability,"Salmon 0.9.1. ```; 2018-11-28 17:07:26,833 i-0656458112d739fa6 data_refinery_workers.processors.utils ERROR [failure_reason: Shell call to salmon failed because: ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/HOMO_SAPIENS/long }; ### [ mates1 ] => { /home/user/data_store/processor_job_408895/SRR4051017_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_408895/SRR4051017_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_408895/SRR4051017_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_408895/SRR4051017_output/logs; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; ```. Is this a ""working"" sample that just fails because of a problem with the logger?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/322:102,ERROR,ERROR,102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/322,2,"['ERROR', 'failure']","['ERROR', 'failure']"
Availability,Salmon 1.10.3 build failure,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:20,failure,failure,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['failure'],['failure']
Availability,Salmon Binary for Osx while Bioconda is down,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/260:40,down,down,40,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/260,1,['down'],['down']
Availability,Salmon Quant Error: Failed to Read Bytes From Input Stream! Read XXX,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/321:13,Error,Error,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321,1,['Error'],['Error']
Availability,Salmon alevin errors out when cell barcode length is > 31 base pairs,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/943:14,error,errors,14,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/943,1,['error'],['errors']
Availability,Salmon error message: salmon quant was invoked improperly,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/209:7,error,error,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209,1,['error'],['error']
Availability,Salmon indexing hangs or throws segmentation fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/829:45,fault,fault,45,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/829,1,['fault'],['fault']
Availability,Salmon installation error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/551:20,error,error,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551,1,['error'],['error']
Availability,Salmon quant error in --ont mode (Bus error (core dumped),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/898:13,error,error,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898,2,['error'],['error']
Availability,Salmon quant with --recoverOrphans fails without warning,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:20,recover,recoverOrphans,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,1,['recover'],['recoverOrphans']
Availability,Salmon v0.10.0: Error in function boost::math::digamma<double>(double): numeric overflow],MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229:16,Error,Error,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229,1,['Error'],['Error']
Availability,Salmon v0.9.0 index FastxParser error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/176:32,error,error,32,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/176,1,['error'],['error']
Availability,"Salmon version: 0.13.1 (installed via pre-compiled binary). I used salmon to quantify some samples and wanted to use the `quantmerge` command to produce a combined table. However, the merged table I got as output only contained 17 lines (of 52228 in the quant.genes.sf files). I was able to identify that the problem was related somehow to the ""Name"" column itself, although I didn't find any obvious pattern for failure. For example, if I rename all the genes to simply ""1"", ""2"", ... and then `quantmerge`, I get a properly combined table with all samples/genes. Looking back at the ""original"" data with the gene names, I find that the truncated merged table consistently/always truncates immediately *after* processing some gene names. For example, the 16th gene name in my ""quant.genes.sf"" table happens to be ""Erdr1"". If this line is moved to the top of that file, then the merged table will truncate at 2 (the header counting for one of those, obviously). Unfortunately, it's not just ""Erdr1"". If that line is moved to the end of the file, or deleted entirely, there is another failure at gene ""Gm28674"", which happens to be the 19th gene. And so on for a very large number of names (I gave up after removing ~30 one at a time). I've now tested with a few different samples and with a number of randomly selected subsets of the original quant files and the behavior is consistent. I can't figure out what the pattern is, but ""Erdr1"", ""Gm28674"", and all the other genes I discovered with my ad-hoc process above, always cause `quantmerge` to truncate the output.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/356:413,failure,failure,413,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/356,2,['failure'],['failure']
Availability,Salmon-0.9.1_linux_x86_64 binary: Exec format error (MacOS 10.12),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/192:46,error,error,46,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192,1,['error'],['error']
Availability,Salmon: rapidjson internal assertion failure: IsObject(),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/862:37,failure,failure,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/862,1,['failure'],['failure']
Availability,Salom 0.9.1 gives errors when configuring and doesn't find installed libraries,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/181:18,error,errors,18,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181,1,['error'],['errors']
Availability,Script Error on Tutorial's page (Getting start).,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/546:7,Error,Error,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/546,1,['Error'],['Error']
Availability,"Seeing lots of these - any ideas? v0.9.1. ```; ERROR [processor_job: 399381] [pipeline_applied: SALMON] [no_retry: False] [failure_reason: Shell call to salmon failed because: ### salmon (; ### [ program ] => salmon; ### [ command ] => quant; ### [ libType ] => { A }; ### [ biasSpeedSamp ] => { 5 }; ### [ index ] => { /home/user/data_store/TRANSCRIPTOME_INDEX/MUS_MUSCULUS/short }; ### [ mates1 ] => { /home/user/data_store/processor_job_399381/ERR1680104_1.fastq }; ### [ mates2 ] => { /home/user/data_store/processor_job_399381/ERR1680104_2.fastq }; ### [ threads ] => { 16 }; ### [ output ] => { /home/user/data_store/processor_job_399381/ERR1680104_output/ }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ dumpEq ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to /home/user/data_store/processor_job_399381/ERR1680104_output/logs; [2018-11-28 17:08:09.121] [jointLog] [info] parsing read library format; [2018-11-28 17:08:09.121] [jointLog] [info] There is 1 library.; [2018-11-28 17:08:09.165] [stderrLog] [info] Loading Suffix Array; [2018-11-28 17:08:09.165] [jointLog] [info] Loading Quasi index; [2018-11-28 17:08:09.165] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 879238456 bytes from input stream! Read 851443704]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.]: Processor job failed!; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/321:47,ERROR,ERROR,47,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/321,1,['ERROR'],['ERROR']
Availability,Seg Fault in salmon quant,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:4,Fault,Fault,4,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['Fault'],['Fault']
Availability,Seg fault in prettyWriter,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/725:4,fault,fault,4,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/725,1,['fault'],['fault']
Availability,Segmentation fault (core dumped),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261,1,['fault'],['fault']
Availability,Segmentation fault (core dumped) in bulk mode,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['fault'],['fault']
Availability,Segmentation fault 11 with bioconda build,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,1,['fault'],['fault']
Availability,Segmentation fault in bioconda installation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/268:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268,1,['fault'],['fault']
Availability,Segmentation fault in bulk mode with .bam files,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['fault'],['fault']
Availability,Segmentation fault in salmon quant,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['fault'],['fault']
Availability,Segmentation fault on some data when using `--useFSPD`,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/64:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/64,1,['fault'],['fault']
Availability,Segmentation fault when indexing,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/503:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/503,1,['fault'],['fault']
Availability,Segmentation fault when reporting results (0.6.0),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/34:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/34,1,['fault'],['fault']
Availability,Segmentation fault with shipped example,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835,1,['fault'],['fault']
Availability,Silent failure while loading index,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/37:7,failure,failure,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37,1,['failure'],['failure']
Availability,Some error was reported by the same command,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/950:5,error,error,5,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/950,1,['error'],['error']
Availability,Space in fasta sequence causes quiet failure,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/22:37,failure,failure,37,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/22,1,['failure'],['failure']
Availability,Subtract 2 to counter artificial increase in barcode length. Read1 length of 33 or 34 would result in error while being valid lengths.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/817:102,error,error,102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/817,1,['error'],['error']
Availability,Suggestions on --recoverOrphans,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/959:17,recover,recoverOrphans,17,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/959,1,['recover'],['recoverOrphans']
Availability,"TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB V",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:2592,down,downloaded,2592,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,1,['down'],['downloaded']
Availability,"Thank you for this wonderful pipeline. I have some human bulk RNAseq samples that were aligned in STAR against the genome with the soft-masked primary assembly (Homo_sapiens.GRCh38.dna_sm.primary_assembly.fa). . I want to run Salmon with the full genome decoy to compare, and would like to use the same reference files for consistency. Does Salmon (like STAR) ignore the lower case for these sequences? Or since its the decoy, does it make a big difference?. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/934:136,mask,masked,136,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/934,1,['mask'],['masked']
Availability,"Thanks for the awesome tool!. Just wanted to confirm what the intended usage is as, for e.g. [scPipe](https://github.com/LuyiTian/scPipe) uses all mitochondrial genes in `calculate_QC_metrics` (whether from nuclear or mitchondrial DNA). I am guessing that since the model for alevin is using the fraction of mitochondrial reads, the `--mrna` file should include only mtDNA (from mitochondrial genome) genes. It seems to be the case that nuclear mitochondrial genes are both up- and down-regulated with damage (**C**: *mtDNA*, *Mitochondria up*, *Mitochondria down* in figure below):. May also be a good idea to clarify in `salmon alevin --help`. ![image](https://user-images.githubusercontent.com/15719520/58443291-f3d08900-80a5-11e9-82ef-0c7debd7ac2a.png); [source](https://www.ncbi.nlm.nih.gov/pubmed/26887813)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/367:482,down,down-regulated,482,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/367,2,['down'],"['down', 'down-regulated']"
Availability,"The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:2622,error,error,2622,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,4,['error'],['error']
Availability,"The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); <ipython-input-23-f2e7708b5cf8> in <module>; ----> 1 scv.pp.filter_genes(adata, min_shared_counts = 30). /primary/projects/mnp/tools/anaconda3/envs/alevin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:4006,error,error,4006,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,1,['error'],['error']
Availability,"The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); <ipython-input-23-f2e7708b5cf8> in <module>; ----> 1 scv.pp.filter_genes(adata, min_shared_counts = 30). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/scvelo/preprocessing/utils.py in filter_genes(data, min_counts, min_cells, max_counts, max_cells, min_counts_u, min_cells_u, max_counts_u, max_cells_u, min_shared_counts, min_shared_cells, copy); 194 gene_subset &= filter(X, min_cells=_min_cells, max_cells=_max_cells)[0]; 195 ; --> 196 adata._inplace_subset_var(",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:4352,error,error,4352,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,1,['error'],['error']
Availability,"The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); <ipython-input-23-f2e7708b5cf8> in <module>; ----> 1 scv.pp.filter_genes(adata, min_shared_counts = 30). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/scvelo/preprocessing/utils.py in filter_genes(data, min_counts, min_cells, max_counts, max_cells, min_counts_u, min_cells_u, max_counts_u, max_cells_u, min_shared_counts, min_shared_cells, copy); 194 gene_subset &= filter(X, min_cells=_min_cells, max_cells=_max_cells)[0]; 195 ; --> 196 adata._inplace_subset_var(gene_subset); 197 ; 198 s = np.sum(~gene_subset). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in _inplace_subset_var(self, index); 1214 Same as `adata = adata[:, index]`, but inplace.; 1215 """"""; -> 1216 adata_subset = self[:, index].copy(); 1217 self._init_as_actual(adata_subset, dt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:4698,error,error,4698,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,1,['error'],['error']
Availability,"The bug primarily related to bulk mode. **Describe the bug**; Firstly, I built the index with RefSeq reference genome，cds and annotation file. And then, I run the command to get gene quantification,then ,I got the error:. [2024-06-09 20:52:47.925] [jointLog] [info] iteration = 3200 | max rel diff. = 0.0612643; [2024-06-09 20:52:48.138] [jointLog] [info] iteration = 3300 | max rel diff. = 0.0500664; [2024-06-09 20:52:48.352] [jointLog] [info] iteration = 3400 | max rel diff. = 0.0411332; [2024-06-09 20:52:48.569] [jointLog] [info] iteration = 3500 | max rel diff. = 0.0320723; [2024-06-09 20:52:48.782] [jointLog] [info] iteration = 3600 | max rel diff. = 0.0170861; [2024-06-09 20:52:48.997] [jointLog] [info] iteration = 3700 | max rel diff. = 0.218755; [2024-06-09 20:52:49.210] [jointLog] [info] iteration = 3800 | max rel diff. = 0.0130318; [2024-06-09 20:52:49.424] [jointLog] [info] iteration = 3900 | max rel diff. = 0.0255888; **Error: no valid ID found for GFF record**; [2024-06-09 20:52:49.648] [jointLog] [info] iteration = 4000 | max rel diff. = 0.088626; [2024-06-09 20:52:49.765] [jointLog] [info] iteration = 4050 | max rel diff. = 0.00732861. **To Reproduce**; Steps and data to reproduce the behavior:; 1. The command to build index:; threads=24; genome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_genomic.fna; transcriptome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_cds_from_genomic.rename.fna; index=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/index/salmon/RefSeq_index; grep ""^>"" ${genome} | cut -d "" "" -f 1 > ${index}/decoys.txt; sed -i.bak -e 's/>//g' ${index}/decoys.txt; cut -d ""_"" -f 1 ${transcriptome} > ${index}/salmon.cdna.fa; cat ${index}/salmon.cdna.fa ${genome} > ${index}/gentrome.fa.gz; salmon index -t ${index}/gentrome.fa.gz -d ${index}/decoys.t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/937:214,error,error,214,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/937,2,"['Error', 'error']","['Error', 'error']"
Availability,"The documentation states. >If your alignments for the sample you want to quantify appear in multiple .bam/.sam files, then you can simply provide the Salmon -a parameter with a (space-separated) list of these files. But I somehow can't get that to work. I have two bam files, each of them with (different) STAR alignments to the same reference. When I pass either one of them, salmon works just fine, e.g. with the following commands:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run1/Aligned.toTranscriptome.out.bam; # or; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf -a run2/Aligned.toTranscriptome.out.bam; ```; But when I try to pass both of them, I get the following error:. ```; salmon quant -t transcripts.fasta -l IU -p 2 -o quantitation/quant.sf) -a run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam. Version Info: This is the most recent version of Salmon.; # salmon (alignment-based) v0.7.2; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fasta }; # [ libType ] => { IU }; # [ threads ] => { 2 }; # [ output ] => { sample1/quantitation }; # [ alignments ] => { run1/Aligned.toTranscriptome.out.bam run2/Aligned.toTranscriptome.out.bam }; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; Logs will be written to quantitation/logs; numQuantThreads = 2; parseThreads = 2; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""run1/Aligned.toTranscriptome.out.bam"", fasta = ""transcripts.fasta"" . . .replaced 0 non-ACGT nucleotides with random nucleotides; done. processed 0 reads in current roundSegmentation fault (core dumped); ```. The `Checking that provided alignment files have consistent headers . . . done` line seems to indicate that both bam files were recognized and that the headers matched. . Any hints on what might be going on?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/104:731,error,error,731,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/104,2,"['error', 'fault']","['error', 'fault']"
Availability,"There's been some issues with compiling salmon on macOS for some time now (see also https://github.com/brewsci/homebrew-bio/pull/528). In the current version, I was running into two compile errors on macOS:. 1) problems with staden & Clang; 2) problems with linking to boost static libraries. I could fix (1) by installing staden separately and then using that install in salmon. I've included the respective Find***.cmake files. (2) is an easy fix by modifying the `CMakeLists.txt`. Is there any particular preference for using static libraries? This is a rather small patch and could be done in a Homebrew formula, if you prefer static boost libraries. Otherwise, this PR are just suggestions. If you have changes that better conform to you style, that's fine by me. Thanks,; Gabriel",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/348:190,error,errors,190,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/348,1,['error'],['errors']
Availability,"This 'bug' is related to the funcionality. When attempting to quantify reads using the form, salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o SalmQuant_out, I get the error from the title of this post (screenshot below). * Salmon v 1.5.1 (downloaded executable) used to quantify transcriptome from two fastq files, R1 and R2, containing the same number of sequences. Executed as follows:; * salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o SalmQuant_out. **Expected behavior**; I expected a quant.sf file. Instead I; ![Screen Shot 2021-09-07 at 3 25 26 PM](https://user-images.githubusercontent.com/50889111/132418472-1bca6641-008e-4a9e-aae5-e0b61f771fd4.png); got the error in the title, and in the salmon_quant.log file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version: 18.04.1 . Any insight and help getting that quantification file is greatly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/700:179,error,error,179,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/700,3,"['down', 'error']","['downloaded', 'error']"
Availability,"This bug is primarily related to salmon (bulk mode). **Describe the bug**; I followed your instructions to create a `mm10` indexed transcriptome with decoys, but I encounter a weird error called:. ```; [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **To Reproduce**. First install `salmon` and `mashmap` (`awk` and `bedtools` are already installed).; ```; conda create -n salmon salmon; conda activate salmon; conda install -c bioconda mashmap; ```. ```; salmon -v; salmon 1.6.0; ```; Download transcriptome from ensembl:; ````; mkdir /no_backup/transcriptome_seqs; cd transcriptome_seqs; wget http://ftp.ensembl.org/pub/release-102/fasta/mus_musculus/cdna/Mus_musculus.GRCm38.cdna.all.fa.gz; # Rename the file to make more sense for my in the future; mv Mus_musculus.GRCm38.cdna.all.fa.gz Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz; ````. Build a *decoy-aware* transcriptome file as recommended:; download script with:; ```; wget https://raw.githubusercontent.com/COMBINE-lab/SalmonTools/master/scripts/generateDecoyTranscriptome.sh; ```; Run with:; ```; ./generateDecoyTranscriptome.sh \; -a /no_backup/genome_annots/Mus_musculus_ENSEMBL_v_102_GRCm38.gtf \; -g /no_backup/genome_seqs/Mmu10_gDNA.fasta \; -t /no_backup/transcriptome_seqs/Mus_musculus_ENSEMBL_v_102_GRCm38_cdna_all.fa.gz \; -o /no_backup/indexes/salmon/mm10; ```; It takes a bit to finish and once done I can do:. List the fasta headers of the decoy sequences; ```; head decoys.txt ; GL456210.1; chrX; chrY; GL456221.1; JH584304.1; ```. While this shows the the new hybrid (genome + transcriptome) fasta file which contains the decoy sequences from the genome, concatenated with the transcriptome (`gentrome.fa`) for a total of 119414 sequences.; ```; zcat gentrome.fa | grep ""^>"" | wc -l; gzip: gentrome.fa: decompression OK, trailing garbage ignored; 119414; ```. To create a salmon index do the following:; ```; salmon index \; -t /no_backup/indexes/salmon/mm10/gentrome.fa \; -i /no_backup/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731:182,error,error,182,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731,4,"['Down', 'down', 'error']","['Download', 'download', 'error']"
Availability,"This came up in #336. When building a gencode-based index with `salmon index` without the `--gencode` flag, the index that is generated won't work when subsequently running e.g. `salmon alevin`. This can be a pain to figure out the mistake (missing `--gencode` flag). Perhaps some sort of quick grep of the index file name for `'gencode'` or within the file for multiple `'|'`s (used for gencode field separator but not ensembl) should be done to check if it's gencode followed by a warning/error if the --gencode flag is missing? Another possibility could be to just auto-detect if the index is gencode using the above tests, removing the need for the `--gencode` flag. Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/366:491,error,error,491,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/366,1,['error'],['error']
Availability,This commit uses multi-stage builds to minimize the Docker image size.; The uncompressed size is down to 101 MB from 1.38 GB. The second ; stage of the build begins with a fresh ubuntu:18.04 image and copies in; the compiled salmon binaries. It also installs one system library that; is linked by one of the salmon shared libraries.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/771:97,down,down,97,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/771,1,['down'],['down']
Availability,"This fix resolves performance issue where Boost::math unnecessarily promotes doubles to long double, which is not fully supported by hardware leading to slow-downs. The change is to set a define during cmake process which prevents promotion ( -DBOOST_MATH_PROMOTE_DOUBLE_POLICY=false )",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/967:158,down,downs,158,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/967,1,['down'],['downs']
Availability,"This is an installation problem. I am getting a link-time error building Salmon 1.0.0 with GCC 7.3.0 and CMake 3.12.1. The error occurs immediately after ""[100%] Linking CXX executable salmon"". The OS is RHEL6. Here's the output:. ```; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::allocator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; /software/Core/GCCcore/7.3.0/include/c++/7.3.0/bits/shared_ptr_base.h:522: error: undefined reference to 'vtable for std::_Sp_counted_ptr_inplace<spdlog::async_logger, std::allocator<spdlog::async_logger>, (__gnu_cxx::_Lock_policy)2>'; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the vtable symbol may be undefined because the class is missing its key function; /software/Compiler/GCCcore/7.3.0/binutils/2.30/bin/ld.gold: the symbol should have been defined by a plugin; ```. Googling this error implies an issue with the code, not a missing library.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/455:58,error,error,58,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455,5,['error'],['error']
Availability,"This is concerned with alevin, using a cite-seq like method with a different UMI barcode length. I believe this is similar to #531. running the command like this:. ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass \; --citeseq; ```; Produces the error `ERROR: Please specify one and only one scRNA protocol;`. whereas removing the `--citeseq` argument like this:; ```; salmon alevin \; -l ISR \; -i ${PROJECT}/adt_index \; -1 $R1_ADT \; -2 $R2_ADT \; --end 5 \; --umiLength 10 \; --barcodeLength 16 \; -o $PROJECT/alevin_adt \; -p 24 \; --featureStart 1 --featureLength 15 \; --naiveEqclass; ```; Produces the error `[alevinLog] [critical] Transcript to Gene Map File not provided. Exiting Now.`. This is based on salmon 1.8.0 installed via bioconda on ubuntu 18.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/770:423,error,error,423,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/770,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,This is in regards to issue https://github.com/satijalab/seurat/issues/2197 where @apcamargo reported error when importing alevin quants into the Seurat inbuilt parser.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/436:102,error,error,102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/436,1,['error'],['error']
Availability,"This is not a bug but more of a question. I've run Salmon in alignment mode with transcriptome BAM file generated by STAR. The BAM file contains no unaligned reads. My question is there are often a small number of reads that were not assigned to any rich equivalence class. I am trying to understand what these reads are. I notice that this only happens when the input is paired-end reads. I suspect maybe the unassigned reads are dovetail paired end reads, but I don't know. The `--allowDovetail` option is not available in alignment mode. Here is an excerpt of the log:; ```; Completed first pass through the alignment file.; Total # of mapped reads : 6205189; # of uniquely mapped reads : 1718004; # ambiguously mapped reads : 4487185. [2024-08-14 18:21:52.491] [jointLog] [info] Computed 350358 rich equivalence classes for further processing; [2024-08-14 18:21:52.491] [jointLog] [info] Counted 6192944 total reads in the equivalence classes; ```; As you can see 6192944 out of 6205189 reads were assigned to rich equivalence classes.; It would be nice to know what the excluded reads are, and/or if there are options to rescue these reads, similar to `--allowDovetail`.; This is Salmon version 1.10.3, but I also ran older version, which generated same results.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/952:512,avail,available,512,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/952,1,['avail'],['available']
Availability,"This is not exactly a bug, but a comment and a question regarding how Salmon uses the positioning data in fastq files. We had a series a RNASeq samples where the majority of the reads were listed at 0:0 in the fastq file. We think this is some obscure issue with one of the trimming/demultiplexing pipelines. No one noticed, as this data is not generally used, but it did throw an error with rsem. Luckily, this error had been previously [reported](https://groups.google.com/forum/#!topic/rsem-users/qXDCpSbEn6Q). Notably, Salmon using quasi mapping was fine. It was only when I tried again using STAR aligned bam files that I noticed that only those reads not listed at 0:0 were used by Salmon (STAR does not seem to care one way or the other). Obviously, badly formated fastq files do not constitute a bug and we are working on fixing them, but we were curious why the positioning data was being used in alignment mode but not quasi mode. Moreover, why is it being used at all? Is it used to weed out potential artifacts?. Many thanks and happy to share an example file if your are interested.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/101:381,error,error,381,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/101,2,['error'],['error']
Availability,"This isn't strictly speaking a bug with salmon per-se, but when installing salmon from conda, its impossible to have both R 4.0.3 and Salmon 1.3.0 installed in the same environment (which is frustrating due to the downstream analysis of Salmon data with wasabi/sleuth then requiring a separate environment). The core incompatibility seems to be with the International Components for Unicode package. Salmon requires; ""icu >=64.2,<65.0a0"",; Whereas in one of the R dependencies when installing 4.0.3 in the environment solve the following is specified; ""icu >=67.1,<68.0a0"",. This seems to be the only conflict I could identify.; This seems to be a new incompatibility introduced with R 4.0.3 and Salmon can coexist alongside R 4.0.2 without issue, so this isn't a huge problem but something I thought should probably be on your radar if it isn't already. Output from the conda dry-run as follows: ; [salmon_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619618/salmon_solve.txt); [r-base_solve.txt](https://github.com/COMBINE-lab/salmon/files/5619619/r-base_solve.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/594:214,down,downstream,214,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/594,1,['down'],['downstream']
Availability,"This issue is related to salmon (bulk mode). When running salmon quant, everything seems to run normally until the very end, when there is suddenly ""Segmentation fault (core dumped)"" and then a quant file is not written. Started with --gcBias, then tried with --seqBias, then without either and get the same error. Have run Salmon in the past with no issues. Have updated to the latest version but problem persists. The version is salmon (mapping-based) v0.11.1 and was installed through bioconda.; The command being run is:. ```; salmon quant -i /data2/csijcs/hg38/hg38.transcriptome.index -l A \; -1 ${dir}/${samp}/${samp}_R1_001.fastq.gz \; -2 ${dir}/${samp}/${samp}_R2_001.fastq.gz \; -p 16 -o ${dir}/salmon_quants/${samp}; ```. The output is:; ```; Processing sample PBMC_AML_BM_001; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /data2/csijcs/hg38/hg38.transcriptome.index }; ### [ libType ] => { A }; ### [ mates1 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R1_001.fastq.gz }; ### [ mates2 ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/PBMC_AML_BM_001/PBMC_AML_BM_001_R2_001.fastq.gz }; ### [ threads ] => { 16 }; ### [ output ] => { /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001 }; Logs will be written to /data2/csijcs/AML/RNA_seq/AML_total_MNC/total_MNCs/Fresh_samples/salmon_quants/PBMC_AML_BM_001/logs; [2018-07-30 15:41:42.232] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-30 15:41:42.232] [jointLog] [info] parsing read library format; [2018-07-30 15:41:42.232] [jointLog] [info] There is 1 library.; [2018-07-30 15:41:45.840] [jointLog] [info] Loading Quasi index; [2018-07-30 15:41:45.840] [jointLog] [info] Loading 32-bit quasi index; [2018-07-30 15:41:45.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261:162,fault,fault,162,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261,2,"['error', 'fault']","['error', 'fault']"
Availability,"This pull-request is for develop branch.; This fixes https://github.com/COMBINE-lab/salmon/issues/275 . The reason of the build error was because b2 was always built with ""gcc"".; I added something like below code. ```; echo ""using gcc : ${CC_VERSION} : ${CMAKE_CXX_COMPILER} ;"" > ${CMAKE_CURRENT_SOURCE_DIR}/external/boost_1_66_0/tools/build/src/user-config.jam. /path/to/b2 .. toolset=${CC} ...; ```; ; There are still challenges to fix it. 1. The `make test` was finished with timeout. When setting `travis_wait 30 make test`, still failed with the timeout. Maybe we need to change the unit test logic to output something (log or progress bar) regularly to `stdout` during the test process or change the test logic itself. It is freezing at the below point. ```; /usr/local/cmake-3.9.2/bin/ctest --force-new-ctest-process ; Test project /home/travis/build/junaruga/salmon/build; Start 1: unit_tests; ```. 2. The `b2` parameter string `toolset=gcc-7 cxxflags=-std=c++14` is duplicated like this. Maybe we can change the logic in `CMakeLists.txt`. ```; CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/junaruga/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc-7 toolset=gcc-7 cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/junaruga/salmon/external/install/include -L/home/travis/build/junaruga/salmon/external/install/lib"" link=static install; ```. 3. `CMakeLists.txt` and `cmake/*.cmake` have a mixture of the different code formatting style. Aligning for formatting those make us read the files easier. I found the useful information for that. [1][2][3][4].; * 2 or 4 space indent?; * ""Tab"" indent is unintentionally used maybe.; * `set(...)` or `set (...)`.; * `set or SET`. [1] the KDE cmake coding style: https://community.kde.org/Policies/CMake",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/276:128,error,error,128,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/276,2,"['echo', 'error']","['echo', 'error']"
Availability,Throw error if reads are less than k-mer size,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/41:6,error,error,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/41,1,['error'],['error']
Availability,Trying to generate salmon indexes in WSL with Ubuntu 22.04.01 LTS either hangs after the contig count for validation step or throws a segmentation fault. . Using Salmon 1.9 installed through bioconda; Custom annotation of S. cerevisiae R64-3-1 downloaded from SGD. The whole genome was appended as a decoy,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/829:147,fault,fault,147,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/829,2,"['down', 'fault']","['downloaded', 'fault']"
Availability,"URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:7798,error,error,7798,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,2,"['Down', 'error']","['Downloads', 'error']"
Availability,"Ubuntu 20.04 LTS, with gcc version 9.3.0 (Ubuntu 9.3.0-17ubuntu1~20.04) ; fails to compile salmon due to an internal compiler error.; The problem occurs for both the 1.4.0 release as well as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/664:126,error,error,126,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664,4,"['error', 'fault']","['error', 'fault']"
Availability,"Under some circumstances, the POS field of some reads in the pseudo-bam file are shifted by a few bases. The read will not match the sequence in these cases. . About 1-2% of reads show this behavior, and the behavior is clustered around certain locations. ; ; Below is a comparison of aligning two reads with Hisat(top), Kallisto(middle) and Salmon (bottom). . ![](https://i.imgur.com/9qOg6S3.png). **To Reproduce**. The following location contains the data. https://www.ialbert.me/static/down/pseudo_alignments/. We have aligned the file `reads.fq` containing two reads to the reference `chr1_g91.t2.fa` with three methods, Hisat, kallisto and salmon. There is a BAM file for each method. Command info json:. https://www.ialbert.me/static/down/pseudo_alignments/salmon_cmd_info.json. **Expected behavior**. The alignment should start in the correct position.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/475:489,down,down,489,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/475,2,['down'],['down']
Availability,"Untar salmon tarball:; ```; $ tar xzvf Salmon-0.9.1_linux_x86_64.tar.gz; ```; Verify binary file is executable:; ```; $ cd Salmon-latest_linux_x86_64/bin && ls -l; total 25336; -rwxr-xr-x 1 bgarchow staff 12971263 Nov 28 22:30 salmon; ```; Try to run salmon:; ```; bin $ ./salmon -h; -bash: ./salmon: cannot execute binary file: Exec format error; ```. BASH version:; ```; $ bash --version; GNU bash, version 4.4.18(1)-release (x86_64-apple-darwin16.7.0); Copyright (C) 2016 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/192:341,error,error,341,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/192,1,['error'],['error']
Availability,"Updated error model for ONT reads -- uses a markov model to model mismatches, indels, and homopolymer regions. Kmer size and step size for the markov model are set at 50 in ONTAlignmentModel.hpp, but could be adjusted (50 was found to be the best out of the values of k I tried).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/868:8,error,error,8,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/868,1,['error'],['error']
Availability,Use installed cereal and stadenio libraries if available.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/348:47,avail,available,47,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/348,1,['avail'],['available']
Availability,Version 1.5.2 downloaded binary for linux system from GitHub. Judging but the length of the log output I do not think this applies to all alignments but certainly some alignments give the example output:. ```; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891 - align length 4731) has no trained error model; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891) has no trained clipping model; [2021-09-08 15:37:54.395] [jointLog] [warning] read 88:4979|5fc1333a-4512-4baf-bc46-07f3b1a3ca5d (length 4891) has no trained clipping model; ```. Code to run salmon quant mode:; ```; salmon-1.5.2_linux_x86_64/bin/salmon quant -p 4 --ont -t Genome_files/gencode.v37.transcripts.fa -l SF -a /analysisdata/rawseq/fastq/SHARED/000081/Interactome_project_ONT-CAGE/iPSC_rep1/run1/alignment/Fantom6_iPSC_rep1_run1_pass_transcriptome.bam -o /analysisdata/rawseq/fastq/SHARED/000081/Interactome_project_ONT-CAGE/iPSC_rep1/run1/salmon_quant; ```. Was wondering if I can ignore these errors?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/701:14,down,downloaded,14,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/701,3,"['down', 'error']","['downloaded', 'error', 'errors']"
Availability,We just discovered that Salmon build removes/collapses identical transcripts. This is very problematic that Salmon does this as many genes are duplicated throughout the genome. By concatenating them in the build index one of these is arbitrary selected (the others removed) meaning all downstream analysis will assume all expression originate from one genomic region instead of many. In the most r[ecent Gencode mouse release](https://www.gencodegenes.org/mouse_releases/current.html) this problem affects 1563 sequences annotated as 13812 and covers all transcript types (incl 840 protein coding - although the major once are lincRNA (n=3658) and snoRNAs (n=2622)). We strongly believe that if one want to analyse these duplicated regions jointly this should be done just like one would sum all transcripts from a particular gene to get the gene expression.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/214:286,down,downstream,286,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/214,1,['down'],['downstream']
Availability,"We tried to run salmon with broken linked files (as in, we accidently linked to the wrong directory). This led to salmon getting to the kmer counting stage and then permanently pausing there (see output below). You can see a version of the broken protocol here: https://github.com/ngs-docs/2017-ucsc-metagenomics/blob/cd417dc4b384b668eda2a477fd805ebb3b30cd00/salmon_tutorial.rst. So, it would be nice if salmon could compensate for this misstep on our part and notify us if a broken linked file is given as input, rather than just pausing. . `tx160085@js-104-35:~/Salmon-0.7.2_linux_x86_64/data$ salmon index -t metagG.ffn -i transcript_index -; -type quasi -k 31; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; index [""transcript_index""] did not previously exist . . . creating it; [2017-04-23 17:02:32.614] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers`. Thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/134:712,avail,available,712,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/134,2,['avail'],['available']
Availability,"We use Salmon a lot in my lab. It's a great tool. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I am running salmon quant using dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"", i.e. salmon (selective-alignment-based) v1.4.0. **Describe the bug**; When I run salmon I exits with an error code of 137. any idea what this means? I also noticed that the output directory is not created. **To Reproduce**; I am running the container on app.terra.bio, unfortunately, I can not share the workspace because the data is from identifiable human subjects. Bellow, I include the log file showing how I ran salmon. I think the bug may have something to do with the run time environment. Know what salmon exit codes mean would really help me figure out where my bug is. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; dockerImg ""quay.io/biocontainers/salmon:1.4.0--hf69c8f4_0"",; * Which reference (e.g. transcriptome) was used?; we have a custom reference based on g35. ; * Which read files were used?; * Which which program options were used?; * . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:332,error,error,332,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,2,"['down', 'error']","['downloaded', 'error']"
Availability,"When I run salmon quantmerge I figure out the commands options only by errors, it would be useful to see the full list of options either in help or salmon docs",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/278:71,error,errors,71,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/278,1,['error'],['errors']
Availability,"When I tried to create a list with EdgeR, I encountered a error:""Error in DGEList(counts = cnt, group = group) : non-numeric values found in counts"" . I could not solve this error and I hope you can help me:. ![Captura desde 2023-04-09 18-28-31](https://user-images.githubusercontent.com/112660223/230804485-b6c306fa-71c5-40ba-b254-19498ee9764f.png). SessionInfo():. ![Captura desde 2023-04-09 18-06-19](https://user-images.githubusercontent.com/112660223/230804518-129da88b-02cc-4218-9651-18c3393fd385.png). Data base information:. ![Captura desde 2023-04-09 18-31-15](https://user-images.githubusercontent.com/112660223/230804542-9bb653f5-d798-4bc8-8e95-254a5b773011.png); ![Captura desde 2023-04-09 18-33-08](https://user-images.githubusercontent.com/112660223/230804551-64fb1aa9-992e-49cf-a9fc-9c6c104211eb.png). I hope you can help me to find out what the error is and how to solve it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/842:58,error,error,58,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/842,4,"['Error', 'error']","['Error', 'error']"
Availability,"When using the -z option to obtain a SAM file and using that same SAM file as an input for a quantification, the following error is thrown:. ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.1.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { ../../gencode.v32.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { sal.bam }; # [ output ] => { salsal }; Logs will be written to salsal/logs; [2019-12-20 16:29:27.435] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 4; [2019-12-20 16:29:27.723] [jointLog] [info] numQuantThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""sal.bam"", fasta = ""../../gencode.v32.transcripts.fa"" . . . SAM file says target ENST00000481276.1|ENSG00000189339.12|OTTHUMG00000078639.4|OTTHUMT00000171590.1|SLC35E2B-202|SLC35E2B|2199|retained_intron| has length 2184, but the FASTA file contains a sequence of length [2200 or 2199]; ```. For this transcript the correct length is indeed 2199. The same error occurs when using a RapMap-produced SAM. OS is Ubuntu 18.04, salmon version 1.1.0",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/465:123,error,error,123,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/465,2,['error'],['error']
Availability,Would separate bias corrections for separate samples introduce systematic error?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/165:74,error,error,74,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/165,1,['error'],['error']
Availability,Write non-error output to stdout,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/55:10,error,error,10,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/55,1,['error'],['error']
Availability,"[2018-07-19 18:26:18.301] [alevinLog] [info] Total Unique barcodes found: 978816; [2018-07-19 18:26:18.301] [alevinLog] [info] Used Barcodes except Whitelist: 26208; [2018-07-19 18:26:18.504] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-07-19 18:26:18.505] [alevinLog] [info] parsing read library format; [2018-07-19 18:26:18.632] [stderrLog] [info] Loading Suffix Array ; [2018-07-19 18:26:18.641] [stderrLog] [info] Loading Transcript Info ; [2018-07-19 18:26:18.647] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-07-19 18:26:18.648] [stderrLog] [info] There were 179 set bits in the bit array; [2018-07-19 18:26:18.648] [stderrLog] [info] Computing transcript lengths; [2018-07-19 18:26:18.648] [stderrLog] [info] Waiting to finish loading hash; [2018-07-19 18:26:18.720] [stderrLog] [info] Done loading index; [2018-07-19 18:26:18.506] [jointLog] [info] There is 1 library.; [2018-07-19 18:26:18.629] [jointLog] [info] Loading Quasi index; [2018-07-19 18:26:18.631] [jointLog] [info] Loading 32-bit quasi index; [2018-07-19 18:26:18.720] [jointLog] [info] done; [2018-07-19 18:26:18.720] [jointLog] [info] Index contained 179 targets; [2018-07-19 18:26:18.728] [alevinLog] [error] Barcode not found in frequency table. **Desktop (please complete the following information):**; - OS: Linux; - Version:; `$ uname -a; Linux login1 3.0.101-0.47.86.1.11753.0.PTF-default #1 SMP Wed Oct 19 14:11:00 UTC 2016 (56c73f1) x86_64 x86_64 x86_64 GNU/Linux`; `$ lsb_release -a; LSB Version:	core-2.0-noarch:core-3.2-noarch:core-4.0-noarch:core-2.0-x86_64:core-3.2-x86_64:core-4.0-x86_64:desktop-4.0-amd64:desktop-4.0-noarch:graphics-2.0-amd64:graphics-2.0-noarch:graphics-3.2-amd64:graphics-3.2-noarch:graphics-4.0-amd64:graphics-4.0-noarch; Distributor ID:	SUSE LINUX; Description:	SUSE Linux Enterprise Server 11 (x86_64); Release:	11; Codename:	n/a`. **Additional context**; I included a 10K subset of reads in the tarball, which leads to the same behavior by Alevin.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:5918,error,error,5918,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['error'],['error']
Availability,"[2021-07-20 01:35:45.238] [jointLog] [warning] Entry with header [chr7] was longer than 200000 nucleotides. Are you certain that we are indexing a transcriptome and not a genome?; [2021-07-20 01:35:48.224] [jointLog] [warning] Entry with header [chr8] was longer than 200000 nucleotides. Are you certain that we are indexing a transcriptome and not a genome?; [2021-07-20 01:35:51.077] [jointLog] [warning] Entry with header [chr9] was longer than 200000 nucleotides. Are you certain that we are indexing a transcriptome and not a genome?; Elapsed time: 56.3501s. Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!; Exception : [std::bad_alloc]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting. don't know why there is an error with the command ; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/689:898,error,error,898,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/689,1,['error'],['error']
Availability,[bns_restore_core] Parse error reading,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/12:25,error,error,25,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/12,1,['error'],['error']
Availability,[compile error] basic_string::_M_construct null not valid,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/606:9,error,error,9,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/606,1,['error'],['error']
Availability,[error] Can't find left Boundary.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/853:1,error,error,1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/853,1,['error'],['error']
Availability,[error] umi indexing of jellyfish failing. Please report on github,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/237:1,error,error,1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237,1,['error'],['error']
Availability,"\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Removal of --recoverOrphans leads to jobs finishing to completion. . Oddly enough, with --recoverOrphans dropped, I start seeing output into .err files I set in SLURM rather than in the .log file with each folder. .err files typically terminate after reporting hits for frags are finished unlike with salmon_output.log files without --recoverOrphans. As an aside, when googling ""recover orphans salmon crash"" this was the top result: https://ksltv.com/635908/tens-of-thousands-of-live-salmon-fell-off-a-truck-in-oregon-and-into-a-creek/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:2244,error,error,2244,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,5,"['error', 'recover']","['error', 'recover', 'recoverOrphans']"
Availability,"] Entry with header [ENSMUST00000196221.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-12-24 17:32:57.126] [puff::index::jointLog] [critical] The decoy file contained the names of 52 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [2021-12-24 17:32:57.224] [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **Expected behavior**; I followed the instructions, I don't think I should be getting this error?; I don't understand why I have only 52 decoys (basically the whole genome), and why zero were matched in the reference file provided. . If I look in `gentrome.fa` I do find the decoys; ```; zgrep ""chr8"" /no_backup/indexes/salmon/mm10/gentrome.fa ; >chr8; ```; I do not want to retain duplicated transcripts so the `--keepDuplicates` flag is something I would want to avoid. **Desktop (please complete the following information):**. ```; uname -a; Linux ant-login6.linux.crg.es 3.10.0-514.16.1.el7.x86_64 #1 SMP Wed Apr 12 07:10:20 CDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 7.2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731:3855,error,error,3855,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731,1,['error'],['error']
Availability,"] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, the error message:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. should be reported regardless of other arguments given.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:1931,error,error,1931,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,8,['error'],['error']
Availability,] [info] replaced 4 non-ACGT nucleotides with random nucleotides; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has n,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:3848,error,error,3848,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,1,['error'],['error']
Availability,"](https://github.com/COMBINE-lab/salmon/files/10999908/fastp_report.pdf). The log of `bowtie2`:; ```{shell}; $cat bowtie2.log ; 40535435 reads; of these:; 40535435 (100.00%) were paired; of these:; 38666766 (95.39%) aligned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a mod",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:6019,avail,available,6019,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['avail'],['available']
Availability,_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=yes; gl_cv_posix_shell=/bin/sh. ## ----------------- ##; ## Output variables. ##; ## ----------------- ##. ACLOCAL='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing aclocal-1.15'; AMDEPBACKSLASH='\'; AMDEP_FALSE='#'; AMDEP_TRUE=''; AMTAR='$${TAR-tar}'; AM_BACKSLASH='\'; AM_CFLAGS=''; AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'; AM_DEFAULT_VERBOSITY='1'; AM_V='$(V)'; AR=''; AS=''; AUTOCONF='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoconf'; AUTOHEADER='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoheader'; AUTOMAKE='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing automake-1.15'; AWK='awk'; CC='/Library/Developer/CommandLineTools/usr/bin/cc'; CCAS=''; CCASDEPMODE=''; CCASFLAGS=''; CCDEPMODE=''; CFLAGS=''; CFLAG_VISIBILITY=''; COND_ASM_X86_64_FALSE=''; COND_ASM_X86_64_TRUE='#'; COND_ASM_X86_FALSE=''; COND_ASM_X86_TRUE='#'; COND_CHECK_CRC32_FALSE='#'; COND_CHECK_CRC32_TRUE=''; COND_CHECK_CRC64_FALSE='#'; COND_CHECK_CRC64_TRUE=''; COND_CHECK_SHA256_FALSE='#'; COND_CHECK_SHA256_TRUE=''; COND_DECODER_ARMTHUMB_FALSE='#'; COND_DECODER_ARMTHUMB_TRUE=''; COND_DECODER_ARM_FALSE='#'; COND_DECODER_ARM_TRUE=''; COND_DECODER_DELTA_FALSE='#'; COND_DECODER_DELTA_TRUE=''; COND_DECODER_IA64_FALSE='#'; COND_DECODER_IA64_TRUE=''; COND_DECODER_LZMA1_FALSE='#'; COND_DECODER_LZMA1_TRUE=''; COND_DECODER_LZMA2_FALSE='#'; COND_DECODER_LZMA2_TRUE=''; COND_DECODER_LZ_FALSE='#'; CON,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:9550,Down,Downloads,9550,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Down'],['Downloads']
Availability,"_isrss 0; ru_minflt 21951; ru_majflt 282; ru_nswap 0; ru_inblock 56; ru_oublock 1066296; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:27201,echo,echo,27201,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['echo'],['echo']
Availability,"_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant }; Logs will be written to 4010760_5_mono_S58_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam.salmon_quant/logs; [2021-03-05 18:20:21.015] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-03-05 18:20:21.015] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:paired end, relative orientation:inward, strandedness:unstranded }; parseThreads = 5; [2021-03-05 18:20:21.314] [jointLog] [info] numQuantThreads = 5; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""/groups/inah/test_Salmon/4010760_5_mono_S58_L001_R1_001.fastq_AT_QT.fastq.gz.STAR_aligned.toTranscriptome.bam"", fasta = ""a; ll_transcripts.fa"" . . .done; [2021-03-05 18:20:24.846] [jointLog] [info] replaced 1216 non-ACGT nucleotides with random nucleotides; processed 0 reads in current round[2021-03-05 18:20:25.180] [jointLog] [info] Automatically detected most likely library type as ISR; processed 3000000 reads in current round[2021-03-05 18:20:39.705] [jointLog] [info]; The alignment group queue pool has been exhausted. 7187672 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated; processed 12000000 reads in current round; processed 21000000 reads in current round; processed 29000000 reads in current round; processed 38000000 reads in current round; processed 47000000 reads in current round; processed 56000000 reads in current round; processed 57000000 reads in current round/var/spool/slurmd/job599153/slurm_script: line 102: 17542 Segmentation fault singularity exec --bind $TMPDIR:/tmp,/groups:/groups,/work:/work /groups/arcsingularity/salmon_1.4.0.sif salmon quant -t all_transcripts.fa -l A -p 10 -a $in_FILES -o $outdir.salmon_quant. Salmon does not quantify transcript expression. I would appreciate any suggestions.; Thanks, Ina",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/638:2995,fault,fault,2995,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/638,1,['fault'],['fault']
Availability,_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=yes; gl_cv_posix_shell=/bin/sh. ## ----------------- ##; ## Output variables. ##; ## ----------------- ##. ACLOCAL='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing aclocal-1.15'; AMDEPBACKSLASH='\'; AMDEP_FALSE='#'; AMDEP_TRUE=''; AMTAR='$${TAR-tar}'; AM_BACKSLASH='\'; AM_CFLAGS=''; AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'; AM_DEFAULT_VERBOSITY='1'; AM_V='$(V)'; AR=''; AS=''; AUTOCONF='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoconf'; AUTOHEADER='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoheader'; AUTOMAKE='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing automake-1.15'; AWK='awk'; CC='/Library/Developer/CommandLineTools/usr/bin/cc'; CCAS=''; CCASDEPMODE=''; CCASFLAGS=''; CCDEPMODE=''; CFLAGS=''; CFLAG_VISIBILITY=''; COND_ASM_X86_64_FALSE=''; COND_ASM_X86_64_TRUE='#'; COND_ASM_X86_FALSE=''; COND_ASM_X86_TRUE='#'; COND_CHECK_CRC32_FALSE='#'; COND_CHECK_CRC32_TRUE=''; COND_CHECK_CRC64_FALSE='#'; COND_CHECK_CRC64_TRUE=''; COND_CHECK_SHA256_FALSE='#'; C,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:9130,Down,Downloads,9130,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Down'],['Downloads']
Availability,`Error: no such instruction: 'xtest'` when building salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/20:1,Error,Error,1,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20,1,['Error'],['Error']
Availability,"`Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffread to generate a new transcriptome fasta as follows:; `gffread -w salmon_fix.fa -g chm13v2.0.fa chm13v2.0_RefSeq_Liftoff_v5.1.gff3`. I reran the above salmon command using this new fasta file, but got the same error and warnings: there are transcripts in the BAM not in the fasta and vice versa. Again, the ""transcripts"" not in the fasta were chromosome names. I also tried with the short read SAM files, and still got the same error. I'm not sure how to fix either the warnings or the errors and would really appreciate your help. ### Software information; I used salmon v1.10.0 (though I also tried v1.10.1). In the case of v1.10.0, I had downloaded the pre-compiled binary, and in the case of v1.10.1, the admins of the HPC cluster I used installed it- not sure how. Regardless, all the runs were on HPC clusters, which run on Linux CentOS (I use two different HPC clusters, depending on their availability). Cluster1:; ```; $ uname -a; Linux rescomp1.hpc.in.bmrc.ox.ac.uk 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; -bash: lsb_release: command not found; ```. Cluster2:; ```; $ uname -a; Linux htc-login02 4.18.0-348.7.1.el8_5.x86_64 #1 SMP Wed Dec 22 13:25:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 8.5.2111; Release: 8.5.2111; Codename: n/a; ```. Please let me know if I need to provide any more information. Thank you so much!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/863:2641,down,downloaded,2641,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863,2,"['avail', 'down']","['availability', 'downloaded']"
Availability,"```. [rancher@rancher ~]$ docker pull combinelab/salmon; Using default tag: latest; latest: Pulling from combinelab/salmon; Digest: sha256:2d09e1113f5bf1aa6be9354b9c8be556a059bbb3cdc46067080894b6ebb2a983; Status: Image is up to date for combinelab/salmon:latest; [rancher@rancher ~]$ salmon; -bash: salmon: command not found; [rancher@rancher ~]$ docker run salmon; Unable to find image 'salmon:latest' locally; docker: Error response from daemon: repository salmon not found: does not exist or no pull access.; See 'docker run --help'.; [rancher@rancher ~]$ docker run combinelab/salmon; [rancher@rancher ~]$ docker run combinelab/salmon -h; container_linux.go:247: starting container process caused ""exec: \""-h\"": executable file not found in $PATH""; docker: Error response from daemon: oci runtime error: container_linux.go:247: starting container process caused ""exec: \""-h\"": executable file not found in $PATH"". ```. I've tried looking at the Docker documenation, but it's way over my head for just running a command line app. How do I use this thing?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/164:420,Error,Error,420,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/164,3,"['Error', 'error']","['Error', 'error']"
Availability,"```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:4099,down,download,4099,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,3,"['Error', 'down']","['Error', 'download']"
Availability,"`bioconda` but ... ```; $ conda search salmon; Loading channels: done; # Name Version Build Channel; salmon 0.5.1 0 bioconda; salmon 0.6.0 0 bioconda; salmon 0.6.0 1 bioconda; salmon 0.6.0 boost1.60_1 bioconda; salmon 0.6.0 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_2 bioconda; salmon 0.7.2 boost1.60_3 bioconda; salmon 0.7.2 boost1.61_3 bioconda; salmon 0.8.0 boost1.60_0 bioconda; salmon 0.8.0 boost1.61_0 bioconda; salmon 0.8.1 0 bioconda; salmon 0.8.2 0 bioconda; salmon 0.8.2 1 bioconda; salmon 0.9.0 0 bioconda; salmon 0.9.1 0 bioconda; salmon 0.9.1 1 bioconda; salmon 0.10.0 1 bioconda; salmon 0.10.1 1 bioconda; salmon 0.10.2 1 bioconda; salmon 0.11.0 h445c947_0 bioconda; salmon 0.11.1 h445c947_0 bioconda; salmon 0.11.2 h445c947_0 bioconda; salmon 0.11.3 h86b0361_1 bioconda; salmon 0.11.3 h86b0361_2 bioconda; ```. When I try to install, I get `PackageNotFoundError`.; ```; $ conda create -n salmon salmon=0.11.3; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon=0.11.3; - jemalloc[version='>=5.1.0']; - salmon=0.11.3; - libcxx. Current channels:. - https://conda.anaconda.org/bioconda/linux-64; - https://conda.anaconda.org/bioconda/noarch; - https://repo.anaconda.com/pkgs/main/linux-64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/free/linux-64; - https://repo.anaconda.com/pkgs/free/noarch; - https://repo.anaconda.com/pkgs/r/linux-64; - https://repo.anaconda.com/pkgs/r/noarch; - https://repo.anaconda.com/pkgs/pro/linux-64; - https://repo.anaconda.com/pkgs/pro/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page.; ```. It is weird because I am installing on `linux64`.; ```; $ lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-n",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/308:1034,avail,available,1034,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/308,1,['avail'],['available']
Availability,"ad_la-compression.o): In function `zlib_huff':; compression.c:(.text+0xc0): undefined reference to `deflateInit2_'; compression.c:(.text+0x13b): undefined reference to `deflate'; compression.c:(.text+0x181): undefined reference to `deflateEnd'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_dehuff':; compression.c:(.text+0x2f7): undefined reference to `inflateInit_'; compression.c:(.text+0x371): undefined reference to `inflate'; compression.c:(.text+0x3b4): undefined reference to `inflateEnd'; collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ub",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:1877,Error,Error,1877,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['Error'],['Error']
Availability,"adenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:2779,avail,available,2779,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['avail'],['available']
Availability,"akes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system ty",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:1958,avail,available,1958,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['avail'],['available']
Availability,"al/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; make[1]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2'; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/20:1180,Error,Error,1180,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20,12,['Error'],['Error']
Availability,"alevin (single-cell mode). **Describe the bug**; Getting error "" Size of the feature file doesn't match"" in the log file while starting to make feature Matrix. Latest version of Salmon was used",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/407:57,error,error,57,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/407,1,['error'],['error']
Availability,"alevin (single-cell mode). **Describe the bug**; I receive the following ERROR: Txp to Gene Map not found for 102926 transcripts. **To Reproduce**; /usr/local/bin/salmon alevin -lISR -1 cells_CTTGTA_L001_R1_001.fastq.gz -2 cells_CTTGTA_L001_R2_001.fastq.gz --celseq2 -i AlevinIndex/ -p 8 -o alevin_output --tgMap gencode.primary_assembly.tsv. Specifically, please provide at least the following information:. * v0.12.0, compiled ; * FASTA file labeled ""Transcript sequences"" from https://www.gencodegenes.org/human/ ; * GTF file labeled ""Comprehensive gene annotation - PRI"" from https://www.gencodegenes.org/human/. **Expected behavior**; To receive the following files in the output dir; quants_mat.gz – Compressed count matrix.; quants_mat_cols.txt – Column Header (Gene-ids) of the matrix.; quants_mat_rows.txt – Row Index (CB-ids) of the matrix. [alevin.log](https://github.com/COMBINE-lab/salmon/files/2638932/alevin.log); [salmon_quant.log](https://github.com/COMBINE-lab/salmon/files/2638934/salmon_quant.log). The tgMap was created using `tximport` in R; ```; library(tximport); gtf <- paste0(local_path, ""/gencode.v29.annotation.gtf""); txdb <- makeTxDbFromGFF(gtf); txdf <- select(txdb, keys(txdb, ""GENEID""), ""TXNAME"", ""GENEID"") . txdf_switch <- data.frame(txdf$TXNAME, txdf$GENEID) #in order to switch the order TXNAME and GENEID apppear. write_tsv(txdf_switch, paste0(local_path, ""/gencode_annot/gencode.primary_assembly.v29.tsv""), col_names = FALSE). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/326:73,ERROR,ERROR,73,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/326,1,['ERROR'],['ERROR']
Availability,"alevin (single-cell mode). I am trying to run alevin using a space separated list of (20) files as input. The fastq files we received from sequencing, were separated arbitrarily to keep them at about ~200 MB a file, but they are all the same sample and I wish to treat them as one library. There is no error produced, but it has been running for ~15 hours, and the log files are blank. As a side note, running each ""pair"" works just fine. . v0.12.1; compiled from source ; OS - Ubuntu Linux, x86_64 x86_64 x86_64 GNU/Linux. Alevin is supposed to be able to run with multiple read files, as specified here: https://github.com/COMBINE-lab/salmon/blob/master/doc/source/salmon.rst#providing-multiple-read-files-to-salmon. ```; Logs will be written to /alevin_outputSingleLibrary/quantSC/logs; ### alevin (dscRNA-seq quantification) v0.12.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ index ] => { AlevinIndex/ }; ### [ libType ] => { ISR }; ### [ mates1 ] => { 12_CTTGTA_L001_R1_001.fastq.gz 12_CTTGTA_L001_R1_002.fastq.gz 12_CTTGTA_L001_R1_003.fastq.gz 12_CTTGTA_L001_R1_004.fastq.gz 12_CTTGTA_L001_R1_005.fastq.gz 12_CTTGTA_L001_R1_006.fastq.gz 12_CTTGTA_L001_R1_007.fastq.gz 12_CTTGTA_L001_R1_008.fastq.gz 12_CTTGTA_L001_R1_009.fastq.gz 12_CTTGTA_L001_R1_010.fastq.gz 12_CTTGTA_L002_R1_001.fastq.gz 12_CTTGTA_L002_R1_002.fastq.gz 12_CTTGTA_L002_R1_003.fastq.gz 12_CTTGTA_L002_R1_004.fastq.gz 12_CTTGTA_L002_R1_005.fastq.gz 12_CTTGTA_L002_R1_006.fastq.gz 12_CTTGTA_L002_R1_007.fastq.gz 12_CTTGTA_L002_R1_008.fastq.gz 12_CTTGTA_L002_R1_009.fastq.gz 12_CTTGTA_L002_R1_010.fastq.gz }; ### [ mates2 ] => { 12_CTTGTA_L001_R2_001.fastq.gz 12_CTTGTA_L001_R2_002.fastq.gz 12_CTTGTA_L001_R2_003.fastq.gz 12_CTTGTA_L001_R2_004.fastq.gz 12_CTTGTA_L001_R2_005.fastq.gz 12_CTTGTA_L001_R2_006.fastq.gz 12_CTTGTA_L001_R2_007.fastq.gz 12_CTTGTA_L001_R2_008.fastq.gz 12_CTTGTA_L001_R2_009.fastq.gz 12_CTTGTA_L001_R2_010.fastq.gz 12_CTTGTA_L002_R2_001.fastq.gz 12_CTTGTA_L002_R2_002.fastq.gz 12_CTTGTA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/329:302,error,error,302,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/329,1,['error'],['error']
Availability,alevin tutorial setup ressources :: error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/584:36,error,error,36,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/584,1,['error'],['error']
Availability,alevin: correcting CB and dumpfq related error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/291:41,error,error,41,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/291,1,['error'],['error']
Availability,"almon. I am using the decoy making script to make the decoy, which the script makes but fails when creating the index!. Specifically, please provide at least the following information:. Which version of salmon was used?; Version: salmon 0.14.1; How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; Which reference (e.g. transcriptome) was used?; Pig transcriptome; Which read files were used?; None; Which which program options were used?; command line:. salmon index -t gentrome.fa -i ../salmon_index -decoys decoys.txt -k 31; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; index [""../salmon_index""] did not previously exist . . . creating it; [2019-06-27 16:02:56.612] [jLog] [info] building index; [2019-06-27 16:02:56.614] [jointLog] [error] The decoy file ecoys does not exist. I did use the SalmonTools to make the decoy file (few lines). INFO, skch::Sketch::computeFreqHist, With threshold 0.001%, ignore minimizers occurring >= 5124 times during lookup.; INFO, skch::main, Time spent computing the reference index: 727.737 sec; INFO, skch::Map::mapQuery, [count of mapped reads, reads qualified for mapping, total input reads] = [40777, 40831, 45898]; INFO, skch::main, Time spent mapping the query : 1912.34 sec; INFO, skch::main, mapping results saved in : mashmap.out; [4/10] Extracting intervals from mashmap alignments; [5/10] Merging the intervals; [6/10] Extracting sequences from the genome; index file reference.masked.genome.fa.fai not found, generating...; [7/10] Concatenating to get decoy sequences; [8/10] Making gentrome; [9/10] Extracting decoy sequence ids; [10/10] Removing temporary files; **********************************************; *** DONE Processing ...; *** You can use files `$outfolder/gentrome.fa` ; *** and $outfolder/decoys.txt` with ; *** `salmon index`; **********************************************. Thanks for all the help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/389:1629,mask,masked,1629,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/389,1,['mask'],['masked']
Availability,"almon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:1099,Down,Downloads,1099,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Down'],['Downloads']
Availability,"almon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_INSTALL_PREFIX:PATH=/gpfs/software/salmon/xeonmax/gcc13.2.0/1.10.3. make clean; make -j 25; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? **1.10.3**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **compiled**. **Expected behavior**; A successful build. **Desktop (please complete the following in",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:2846,Error,Error,2846,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,2,['Error'],['Error']
Availability,"almon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:977:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1210:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, r1ptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1213:99: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.matePos, r2ptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1224:93: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1234:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(), bu; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(single_parser*, ReadExperimentT&",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/254:2360,error,error,2360,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254,1,['error'],['error']
Availability,"apmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; uint32_t = unsigned int]’; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2553:83: required from here; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2074:97: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadPair>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<long int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<long int> > >*)’; if (isPairedEnd) {processFunctor(i, pairedParserPtr, sidx->quasiIndexPerfectHash64());}; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcri",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:4704,error,error,4704,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"arwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:6387,error,error,6387,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['error'],['error']
Availability,"ary format; [2018-11-29 22:28:18.184] [jointLog] [info] There is 1 library.; [2018-11-29 22:28:18.324] [jointLog] [info] Loading Quasi index; [2018-11-29 22:28:18.325] [jointLog] [info] Loading 32-bit quasi index; [2018-11-29 22:28:18.325] [stderrLog] [info] Loading Suffix Array; [2018-11-29 22:28:19.339] [stderrLog] [info] Loading Transcript Info; [2018-11-29 22:28:19.536] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-29 22:28:19.554] [stderrLog] [info] There were 64,431 set bits in the bit array; [2018-11-29 22:28:19.561] [stderrLog] [info] Computing transcript lengths; [2018-11-29 22:28:19.561] [stderrLog] [info] Waiting to finish loading hash; [2018-11-29 22:28:23.502] [stderrLog] [info] Done loading index; [2018-11-29 22:28:23.502] [jointLog] [info] done; [2018-11-29 22:28:23.502] [jointLog] [info] Index contained 64,431 targets. processed 178 Million fragments; hits: 212754413, hits per frag: 1.19535. [2018-11-29 22:40:56.510] [jointLog] [info] Computed 110,023 rich equivalence classes for further processing; [2018-11-29 22:40:56.510] [jointLog] [info] Counted 95,071,703 total reads in the equivalence classes; [2018-11-29 22:40:56.510] [jointLog] [info] Mapping rate = 53.3587%. [2018-11-29 22:40:56.510] [jointLog] [info] finished quantifyLibrary(); [2018-11-29 22:41:01.682] [alevinLog] [info] Starting optimizer. Analyzed 12346 cells (100% of all).; Skipped Barcodes are from High Confidence Region; Should not happen%. **Desktop (please complete the following information):**; - OS: macOS; - Version: 10.14.1. **Additional context**; This failure comes when analyzing data from the new 10X v3 chemistry. Initially, I thought that was the issue, but our analysis worked when using the 'neuron_1k' dataset (the read sequences that makes the program fail come from the 'neuron_10k' dataset), which was also produced with similar v3 chemistry but quasi-maps correctly. I can attach screenshots for either dataset for anyone still trying to figure out the problem.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/324:3584,failure,failure,3584,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324,1,['failure'],['failure']
Availability,"as the current; git master branch during the final linking of the salmon executable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/SalmonQuantMerge.cpp.o CMakeFiles/salmon.dir/ProgramOptionsGenerator",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/664:1164,Error,Error,1164,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664,1,['Error'],['Error']
Availability,attempts to switch to different downloaded tarball for jellyfish fail,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/11:32,down,downloaded,32,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11,1,['down'],['downloaded']
Availability,"ault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/268:1814,error,error,1814,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268,15,"['Error', 'error']","['Error', 'error']"
Availability,"auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: candidate expects 1 argument, 3 provided; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2077:86: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadPair>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >*)’; if (isPairedEnd) {processFunctor(i, pairedParserPtr, sidx->quasiIndex64());}; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: proces",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:9603,error,error,9603,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"ave successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the fastq files are as follows:; `$ zcat SRR6327122_1.fastq.gz |head -n 4`; @SRR6327122.1 1 length=36; CTGATCCTCGAGAGCACTCACAGAGTTTTTTGTTTT; +SRR6327122.1 1 length=36; AAFFFJJJJJJJJJJJJJJJJJJJJJ7-----A<-<; And; `$ zcat SRR6327122_2.fastq.gz |head -n 4`; @SRR6327122.1 1 length=88; CGGCCACAAGATCGCCTTTTTATCCCTCGCCCAGAGCACCCCCCGACCCCACATCCCCTGCTTCACGGCCCCCCTCGCGGCCTACCCG; +SRR6327122.1 1 length=88; --7-<7----7---77----77A-7--7-A7-7---7-A-A7<F-777-77-A---A<A----77--77------------7------. * Which which program options were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:2535,down,download,2535,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['down'],['download']
Availability,"b/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:40:21.543] [jointLog] [info] Usage of --vali",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:1677,avail,available,1677,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['avail'],['available']
Availability,boost math error during EM iteration: Evaluation of function at pole -nan,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/48:11,error,error,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/48,1,['error'],['error']
Availability,"bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; is been running like an order of magnitude slower than when I last used it ; **A clear and concise description of what the bug is.**; So I am aligning reads against Arabidopsis Thaliana, using Araport 11 annotation. I usually had 20 M reads aligned within an hour or 2. I am aligning a 46M reads library and it has been running for 20 hours using 4 threads of my humble i5-3210M and is barely on 38.5M, after 20 hours! Index was constructed with default kmer size and no decoys. I have had this problem with other libraries since upgraded from V1.0.0, . **To Reproduce**; I guess just try to align stuff against araport11, this particular problem comes with any fq.gz. It will take hours and hours and hours to align. **Specifically, please provide at least the following information:**. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon.embryo/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:986,down,downloaded,986,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,2,['down'],['downloaded']
Availability,"cessing barcodes files (if Present) . ; processed 31 Million barcodes. [2019-06-04 16:34:42.492] [alevinLog] [info] Done barcode density calculation.; [2019-06-04 16:34:42.492] [alevinLog] [info] # Barcodes Used: 31478936 / 31478936.; [2019-06-04 16:34:42.499] [alevinLog] [info] Total 247(has 200 low confidence) barcodes; [2019-06-04 16:34:42.499] [alevinLog] [info] Done True Barcode Sampling; [2019-06-04 16:34:42.501] [alevinLog] [info] Total 0% reads will be thrown away because of noisy Cellular barcodes.; [2019-06-04 16:34:42.503] [alevinLog] [info] Done populating Z matrix; [2019-06-04 16:34:42.503] [alevinLog] [info] Done indexing Barcodes; [2019-06-04 16:34:42.503] [alevinLog] [info] Total Unique barcodes found: 50; [2019-06-04 16:34:42.503] [alevinLog] [info] Used Barcodes except Whitelist: 0; [2019-06-04 16:34:43.373] [stderrLog] [info] Loading Suffix Array ; [2019-06-04 16:34:43.208] [jointLog] [info] There is 1 library.; [2019-06-04 16:34:43.372] [jointLog] [info] Loading Quasi index; [2019-06-04 16:34:43.372] [jointLog] [info] Loading 32-bit quasi index; [2019-06-04 16:34:43.208] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2019-06-04 16:34:43.208] [alevinLog] [info] parsing read library format; [2019-06-04 16:34:44.226] [stderrLog] [info] Loading Transcript Info ; [2019-06-04 16:34:44.464] [stderrLog] [info] Loading Rank-Select Bit Array; [2019-06-04 16:34:44.501] [stderrLog] [info] There were 136,011 set bits in the bit array; [2019-06-04 16:34:44.526] [stderrLog] [info] Computing transcript lengths; [2019-06-04 16:34:44.526] [stderrLog] [info] Waiting to finish loading hash; [2019-06-04 16:34:53.359] [stderrLog] [info] Done loading index; [2019-06-04 16:34:53.359] [jointLog] [info] done; [2019-06-04 16:34:53.359] [jointLog] [info] Index contained 136,011 targets; [2019-06-04 16:34:53.523] [alevinLog] [error] Barcode not found in frequency table; ```. Is there any way to avoid using barcodes, or to overcome this error. ; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/369:6617,error,error,6617,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/369,2,['error'],['error']
Availability,"ch appreciated. thank you. ; determining read length; Trimming reads; This is cutadapt 4.2 with Python 3.10.8; Command line parameters: -m 30 -u 18 -u -17 -o ./subset_SRR12820270_trimmed.fq subset_SRR12820270.fastq; Processing single-end reads on 1 core ...; Finished in 99.186 s (2.870 µs/read; 20.90 M reads/minute). === Summary ===. Total reads processed: 34,554,336. == Read fate breakdown ==; Reads that were too short: 778,286 (2.3%); Reads written (passing filters): 33,776,050 (97.7%). Total basepairs processed: 2,555,642,890 bp; Total written (filtered): 1,335,316,421 bp (52.2%); Salmon; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.10.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//default }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR12820270_trimmed.fq }; ### [ output ] => { salmonRes_SRR12820270 }; Logs will be written to salmonRes_SRR12820270/logs; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/waqasiqbal/opt/miniconda3/envs/salmon/bin/salmon quant --help; Exiting.; [2023-02-27 15:21:11.968] [jointLog] [info] setting maxHashResizeThreads to 5; [2023-02-27 15:21:11.968] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-27 15:21:11.969] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-27 15:21:11.970] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-27 15:21:11.970] [jointLog] [info] parsing read library format; [2023-02-27 15:21:11.971] [jointLog] [info] There is 1 library.; ./salmonRes_SRR12820270/quant.sf ; Error in geneIndexList[[i]] : subscript out of bounds",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/833:2082,Error,Error,2082,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/833,1,['Error'],['Error']
Availability,"cl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLog] [info] parsing read library format; [2017-03-08 11:37:32.893] [jointLog] [info",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:22837,avail,available,22837,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['avail'],['available']
Availability,cmake/TestSalmonQuasi.cmake: more verbose test failure messages.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/810:47,failure,failure,47,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/810,1,['failure'],['failure']
Availability,"collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""sal",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:2371,error,errors,2371,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['error'],['errors']
Availability,cram_io.c:66:18: fatal error: lzma.h: No such file or directory Make error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/357:23,error,error,23,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/357,2,['error'],['error']
Availability,creating index to file that doesn't exists does not output error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/105:59,error,error,59,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/105,1,['error'],['error']
Availability,"d quantifyLibrary(ReadExperimentT&, bool, SalmonOpts&, double, uint32_t) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; uint32_t = unsigned int]’; /opt/build/salmon/src/SalmonQuantify.cpp:2553:83: required from here; /usr/include/c++/4.8.2/bits/unique_ptr.h:262:16: error: no match for call to ‘(std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadSeq>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>::deleter_type {aka processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:47344,error,error,47344,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"d.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:06:31.580] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""apex_infe_t1_rep1_S29_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:06:34.583] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:06:35.068] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:06:35.443] [jointLog] [info] . The alignment group queue pool has been exhausted. 1955 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 26000000 reads in current roundSegmentation fault (core dumped); ```. Output for failure case - four files. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:52",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:7969,failure,failure,7969,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['failure'],['failure']
Availability,"dExperimentT&, bool, SalmonOpts&, double, uint32_t) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; uint32_t = unsigned int]’; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2553:83: required from here; /usr/include/c++/4.8.2/bits/unique_ptr.h:262:16: error: no match for call to ‘(std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadSeq>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>::deleter_type {aka processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:42097,error,error,42097,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,develop branch: g++: error: unrecognized command line option ‘-std=c++14’,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/275:21,error,error,21,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/275,1,['error'],['error']
Availability,df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3905) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626 - align length 3527) has no trained error model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:5942,error,error,5942,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,1,['error'],['error']
Availability,df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3905) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626 - align length 3527) has no trained error model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:5524,error,error,5524,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,1,['error'],['error']
Availability,df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3905) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626 - align length 3527) has no trained error model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has no trained clipping model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594 - align length 238) has no trained error model; [2024-04-09 18:22:15.590] [jointLog] [warning] read e225febf-502e-48ac-bb5d-924d0c397a2c (length 8594) has no,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:5105,error,error,5105,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,1,['error'],['error']
Availability,df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3905) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626 - align length 3527) has no trained error model; [2024-04-09 18:22:15.583] [jointLog] [warning] read 6205e5a5-8cf4-4f1e-b3cf-942e5fc8856e (length 3626) has n,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:4686,error,error,4686,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,1,['error'],['error']
Availability,df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3905) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has n,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:4267,error,error,4267,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,1,['error'],['error']
Availability,"dif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create -o CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -c /usr/share/cmake-3.7/Modules/CheckFunctionExists.c; Linking C executable cmTC_dd9f2; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dd9f2.dir/link.txt --verbose=1; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -o cmTC_dd9f2 -rdynamic -lpthreads ; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dd9f2.dir/build.make:97: recipe for target 'cmTC_dd9f2' failed; make[1]: *** [cmTC_dd9f2] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dd9f2/fast' failed; make: *** [cmTC_dd9f2/fast] Error 2. ```. Some search on the internet suggests me that sometimes `-lpthread` should be used instead of `-lpthreads`. And indeed, if I try to compile the following code:; ```; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }; ```. I observe a failure with `-lpthreads`:; ```; $ cc -lpthreads /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; ```. And a success with `-lpthread`:. ```; $ cc -lpthread /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; $ ; ```. However, I'm unable to find where I can fix this in the whole configuration and build process.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/207:2649,Error,Error,2649,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207,4,"['Error', 'error', 'failure']","['Error', 'error', 'failure']"
Availability,"ds and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-11-04 16:49:44.699] [jointLog] [info] numQ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/898:1107,avail,available,1107,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898,1,['avail'],['available']
Availability,"e = 0.590918%. ```. and then this after processing the cells:; ```; [2018-07-24 10:56:23.180] [alevinLog] [info] Total 21135 UMI after deduplicating.; [2018-07-24 10:56:23.180] [alevinLog] [warning] Skipped 4 barcodes due to No mapped read; [2018-07-24 10:56:23.213] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-07-24 10:56:23.230] [alevinLog] [info] Starting Import of the gene count matrix.; [2018-07-24 10:56:23.743] [alevinLog] [info] Done Importing gene count matrix for dimension 290x57964; [2018-07-24 10:56:23.743] [alevinLog] [info] Starting dumping cell v gene counts in csv format; [2018-07-24 10:56:29.089] [alevinLog] [info] Finished dumping csv counts; [2018-07-24 10:56:29.089] [alevinLog] [info] Starting white listing; [2018-07-24 10:56:29.090] [alevinLog] [info] Done importing order of barcodes ""quants_mat_rows.txt"" file.; [2018-07-24 10:56:29.090] [alevinLog] [info] Total 290 barcodes found; [2018-07-24 10:56:29.090] [alevinLog] [warning] mrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [warning] rrna file not provided; using is 1 less feature for whitelisting; [2018-07-24 10:56:29.090] [alevinLog] [info] Starting to make feature Matrix; [2018-07-24 10:56:29.354] [alevinLog] [info] Done making regular featues; [2018-07-24 10:56:29.354] [alevinLog] [info] Done making feature Matrix; [2018-07-24 10:56:29.359] [alevinLog] [info] Finished white listing; [2018-07-24 10:56:29.371] [alevinLog] [info] Finished optimizer; ```. Other info:; Salmon v0.11.0 - downloaded binary from Github; I used Gencode 28 for the transcriptome; read files: https://www.ncbi.nlm.nih.gov/sra/SRX2676721[accn]. OS: CentOS; version: 2.6.32-696.23.1.el6.centos.plus.x86_64; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	CentOS; Description:	CentOS release 6.9 (Final); Release:	6.9; Codename:	Final",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/258:6016,down,downloaded,6016,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/258,1,['down'],['downloaded']
Availability,"e HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #define HAVE_ENCODER_ARM 1; | #define HAVE_ENCODER_ARMTHUMB 1; | #define HAVE_ENCODER_SPARC 1; | #define HAVE_DECODER_LZMA1 1; | #define HAVE_DECODER_LZMA2 1; | #define HAVE_DECODER_DELTA 1; | #define HAVE_DECODER_X86 1; | #define HAVE_DECODER_POWERPC 1; | #define HAVE_DECODER_IA64 1; | #define HAVE_DECODER_ARM 1; | #define HAVE_DECODER_ARMTHUMB 1; | #define HAVE_DECODER_SPARC 1; | #define HAVE_MF_HC3 1; | #define HAVE_MF_HC4 1; | #define HAVE_MF_BT2 1; | #define HAVE_MF_BT3 1; | #define HAVE_MF_BT4 1; | #define HAVE_CHECK_CRC32 1; | #define HAVE_CHECK_CRC64 1; | #define HAVE_CHECK_SHA256 1; | #define ASSUME_RAM 128; | #define PACKAGE ""xz""; | #define VERSION ""5.2.2""; | /* end confdefs.h. */; | ; | int; | main (); | {; | ; | ;; | return 0;; | }; configure:5259: error: in `/Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2':; configure:5261: error: C compiler cannot create executables; See `config.log' for more details. ## ---------------- ##; ## Cache variables. ##; ## ---------------- ##. ac_cv_build=arm-apple-darwin22.6.0; ac_cv_env_CCASFLAGS_set=; ac_cv_env_CCASFLAGS_value=; ac_cv_env_CCAS_set=; ac_cv_env_CCAS_value=; ac_cv_env_CC_set=set; ac_cv_env_CC_value=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_env_CFLAGS_set=set; ac_cv_env_CFLAGS_value=; ac_cv_env_CPPFLAGS_set=set; ac_cv_env_CPPFLAGS_value=; ac_cv_env_CPP_set=; ac_cv_env_CPP_value=; ac_cv_env_LDFLAGS_set=set; ac_cv_env_LDFLAGS_value=; ac_cv_env_LIBS_set=; ac_cv_env_LIBS_value=; ac_cv_env_LT_SYS_LIBRARY_PATH_set=; ac_cv_env_LT_SYS_LIBRARY_PATH_value=; ac_cv_env_build_alias_set=; ac_cv_env_build_alias_value=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineToo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:7888,error,error,7888,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['error'],['error']
Availability,"e convert_trace.o ../io_lib/.libs/libstaden-read.a -lm -lpthread -llzma -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xf03): warning: the use of `tempnam' is dangerous, better use `mkstemp'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_huff':; compression.c:(.text+0xc0): undefined reference to `deflateInit2_'; compression.c:(.text+0x13b): undefined reference to `deflate'; compression.c:(.text+0x181): undefined reference to `deflateEnd'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_dehuff':; compression.c:(.text+0x2f7): undefined reference to `inflateInit_'; compression.c:(.text+0x371): undefined reference to `inflate'; compression.c:(.text+0x3b4): undefined reference to `inflateEnd'; collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRU",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:1377,error,error,1377,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,4,"['Error', 'error']","['Error', 'error']"
Availability,"e use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2022-01-26 11:52:30.149] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-26 11:52:30.149] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin. However, when i included the --expectCells 15000 in the command, as shown below i obtained over 20,000 cells with Mapping rate = 58.3421%; salmon alevin -l ISR -i Homo_sapiens.GRCh38.transcript_103_salmon_index -1 SRR12148226_1.fastq -2 SRR12148226_2.fastq -o alevin_SRR12148226 -p 16 --tgMap txp2gene_BM.tsv --chromium --dumpFeatures --expectCells 15000 . What is most noticeable is that the Mapping rate increased by over 50% by just adding --expectCells 15000 to the code. ; Could you please help me understand why these differences and if the quality of the these new identified cells (over 20000) can be trusted for downstream analysis considering that thy were initially not called. Thank you. <img width=""327"" alt=""alevin 2"" src=""https://user-images.githubusercontent.com/38905650/151187756-6fdd58fa-d30e-4a19-b951-cd25acde7f51.PNG"">. Log file; [2022-01-26 12:55:04.037] [jointLog] [info] setting maxHashResizeThreads to 16; [2022-01-26 12:55:04.037] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-26 12:55:04.037] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2022-01-26 12:55:04.037] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-26 12:55:04.037] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equiv",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/742:2518,down,downstream,2518,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/742,1,['down'],['downstream']
Availability,"ead with STAR, hence mapped to the genome.; While reading about getting TPM, I can't get them from the counts, so I decided to try salmon.; It needs a transcripts.fa, which I am not sure how to properly get it. The documentation says: ; _If you have reads that have already been aligned to the genome, there are currently 3 options for converting them for use with Salmon. First, you could convert the SAM/BAM file to a FAST{A/Q} file and then use the lightweight-alignment-based mode of Salmon described below._; But there is nothing below it. Then, it states:; _Second, given the converted FASTA{A/Q} file, you could re-align these converted reads directly to the transcripts with your favorite aligner and run Salmon in alignment-based mode as described above._; I can get the FastQ from the Bam created by STAR, then my question, is which mapper do you recommend? Can bwa-mem2 work well?; My question, is that I will nonetheless need a transcriptome file, and to index it.; I downloaded the genome from NCBI: https://ftp.ncbi.nlm.nih.gov/genomes/all/annotation_releases/207650/100/GCF_011952255.1_Bvos_JDL3184-5_v1.1/ ; and I don't know which file should I use as the transcriptome; there are cds_from_genomic, protein, and rna. In one forum, one mentioned download the human transcriptome from ensemble, but it is not there. Also, I found that one can generate it with gffread using the gtf file, so I wanted to confirm if that output file will work ; `gffread -w Bvostranscripts.fa -g BosVos.fasta GCF_011952255.1_Bvos_JDL3184-5_v1.1_genomic.gtf ; `; because I remember reading somewhere that the file must have transcript length, but it doesn't:; head Bvostranscripts.fa ; >XM_033511117.1 CDS=100-1053; ctCCAACGAGAAAGACGTGCTCAGAAGCGAGTCCCGCGTAGCGCCATGTAGAGGAGCAGGAAGAAGCGCA; GTCTTCCTCAGGCATTCCAGCGTCGAGTAATGCTGAAGCATATCCTGACGGGGCAACCGTCGTCAGCGGG; CTCCAGGCACCAGCACAATGACTACCAGGCGAGCTCGGGCTCGTTGCACGGcggccaccaccaccaccat; cattCTGGTCACCAACAGGATCAACAGCAACACCATCATTACAACCAAAACAGCAACGTTCGTGGAACGA; CAG",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/951:1133,down,downloaded,1133,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/951,1,['down'],['downloaded']
Availability,"ead1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:1609,error,error,1609,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,1,['error'],['error']
Availability,"ect src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:47: error: parameter declared ‘auto’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:62: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2011:38: error: overloaded function wit",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:1618,error,error,1618,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"ed a little in #104 , I keep running into:; `Transcript NM_032515.5 appears in the reference but did not appear in the BAM`; and; `Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffread to generate a new transcriptome fasta as follows:; `gffread -w salmon_fix.fa -g chm13v2.0.fa chm13v2.0_RefSeq_Liftoff_v5.1.gff3`. I reran the above salmon command using this new fasta file, but got the same error and warnings: there are transcripts in the BAM not in the fasta and vice versa. Again, the ""transcripts"" not in the fasta were chromosome names. I also tried with the short read SAM files, and still got the same error. I'm not sure how to fix either the warnings or the errors and would really appreciate your help. ### Software information; I used salmon v1.10.0 (though I also tried v1.10.1). In the case of v1.10.0, I had downloaded the pre-compiled binary, and in the case of v1.10.1, the admins of the HPC cluster I used installed it- not sure how. Regardless, all the runs were on HPC clusters, which run on Linux CentOS (I use two different HPC clusters, depending on their availability). Cluster1:; ```; $ uname -a; Linux rescomp1.hpc.in.bmrc.ox.ac.uk 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; -bash: lsb_release: command not found; ```. Cluster2:; ```; $ uname -a; Linux htc-login02 4.18.0-348.7.1.el8_5.x86_64 #1 SMP Wed Dec 22 13:25:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/863:2428,error,error,2428,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863,1,['error'],['error']
Availability,"ed more RAM? Or it is a bug.; ; More info as below:; [2018-10-24 11:14:15.505] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-24 11:14:15.505] [jointLog] [info] parsing read library format; [2018-10-24 11:14:15.505] [jointLog] [info] There is 1 library.; [2018-10-24 11:14:15.627] [jointLog] [info] Loading Quasi index; [2018-10-24 11:14:15.629] [jointLog] [info] Loading 32-bit quasi index; [2018-10-24 11:14:15.633] [stderrLog] [info] Loading Suffix Array; [2018-10-24 11:14:17.090] [stderrLog] [info] Loading Transcript Info; [2018-10-24 11:14:17.691] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-24 11:14:18.293] [stderrLog] [info] There were 309,566 set bits in the bit array; [2018-10-24 11:14:18.819] [stderrLog] [info] Computing transcript lengths; [2018-10-24 11:14:18.820] [stderrLog] [info] Waiting to finish loading hash; [2018-10-24 11:15:46.171] [jointLog] [info] done; [2018-10-24 11:15:46.171] [jointLog] [info] Index contained 309,566 targets; [2018-10-24 11:15:46.171] [stderrLog] [info] Done loading index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?. downloaded execitable. * Which reference (e.g. transcriptome) was used?; human; * Which read files were used?; * Which which program options were used?; All default. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/304:1884,down,downloaded,1884,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/304,2,['down'],['downloaded']
Availability,"eduplicated_umis"": 402386555,; ""mean_umis_per_cell"": 2954,; ""mean_genes_per_cell"": 896; }; ```. \* total reads have been corrected by adding 2^32. From my understanding of the numbers, this suggests a PCR duplication rate of either 8.95X (comparing ""used reads"" with ""deduplicated umis"") or 6.16X (comparing ""reads in eqclasses"" with ""deduplicated umis""). I had a go at trying to ""manually"" count (via awk/grep/sort/uniq/etc.) the cell barcodes and UMIs associated with the MT-ND1 gene:. ND1-matching reads with good cell barcode QC (barcodes linkable to expected cell barcodes), and good mapping (>60bp matching): 5292134; Unique cell/UMI pairs (subset from the above data): 1590232; => PCR duplication rate ~= 3.32 reads per unique molecule. So it seems like the duplication rate might be closer to the SevenBridges estimate than the Alevin estimate. The Alevin documentation seems to suggest that cell/transcript/UMI triplets are being used for UMI collapsing (""identify potential PCR/sequencing errors in the UMIs, and performs hybrid de-duplication while accounting for UMI collisions""), so I'm at a loss as to why the difference is this large. I'm not too worried about numbers being different, but the UMI proportion is a concern to me, because sequencing is expensive, and it'd be good to have an idea of whether we need to further improve our library prep (which would certainly be the case for 9X duplication, but less important with 3-5X duplication). Is anyone able to explain how the UMI deduplication is applied in Salmon Alevin, or why it might be different from other analysis platforms?. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? Binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v42; * Which read files were used? NovaSeq 6000 S2; * Which program options were used?. ```; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/808:2036,error,errors,2036,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808,1,['error'],['errors']
Availability,"eger width = 32; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] seqSize = 2,210,067,304; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] rankSize = 2,210,067,304; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] edgeVecSize = 0; [2023-03-15 20:35:37.482] [puff::index::jointLog] [info] num keys = 1,869,461,974; ^M[Building BooPHF] 0.194% elapsed: 0 min 0 sec remaining: 3 min 39 sec^M[Building BooPHF] 0.206% elapsed: 0 min 0 sec remaining: 3 min 33 sec^M[Building BooPHF] 0.394% elapsed: 0 min 1 sec remaining: 2 min 45 sec^M[Building BooPHF] 0.406% elapsed: 0 min 1 sec remaining: 2 min 44 sec^M[Building BooPHF] 0.594% elapsed: 0 min 1 sec remaining: 2 m; psed: 0 min 56 sec remaining: 1 min 16 sec^M[Building BooPHF] 42.4 % elapsed: 0 min 56 sec remaining: 1 min 16 sec^M[Building BooPHF] 42.6 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.6 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.8 % elapsed: 0 min 56 sec remaining: 1 min 15 sec^M[Building BooPHF] 42.; salmon index was invoked improperly.; For usage information, try salmon index --help; ````. **To Reproduce**; Steps and data to reproduce the behavior:. `salmon index -t input.fa -i input.index`. Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? - biconda; * Which reference (e.g. transcriptome) was used? - metagenome; * Which read files were used? ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux- HPC; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. Thanks.; Ugur",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/837:6072,down,downloaded,6072,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/837,1,['down'],['downloaded']
Availability,"elf, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:1260,avail,available,1260,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['avail'],['available']
Availability,"erPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: candidate expects 1 argument, 3 provided; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2085:87: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadPair>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >*)’; if (isPairedEnd) { processFunctor(i, pairedParserPtr, sidx->quasiIndex32()); }; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: processReadLi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:19698,error,error,19698,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"erge_files.cc (code 4); make[2]: *** [src/CMakeFiles/salmon_core.dir/merge_files.cc.o] Error 4; ```. This is weird, because the correct `include` directory is shown in the compiler command, and the file is there!. Here's my patch. Any idea what may be wrong with it, or which different approach I could try to get this to work?; I also tried using the `2.1.3.tar.gz` tarball from GitHub, but after adding `autoreconf -i` to the `CONFIGURE_COMMAND`, this leads to the same problem. ``` diff; --- salmon-0.4.2/CMakeLists.txt.orig 2015-06-15 02:31:09.000000000 +0200; +++ salmon-0.4.2/CMakeLists.txt 2015-08-18 21:13:29.684010359 +0200; @@ -357,14 +366,14 @@; message(""==================================================================""); ExternalProject_Add(libjellyfish; DOWNLOAD_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external; - URL ftp://ftp.genome.umd.edu/pub/jellyfish/jellyfish-2.1.3.tar.gz; - SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3; + URL https://github.com/gmarcais/Jellyfish/releases/download/v2.2.3/jellyfish-2.2.3.tar.gz; + SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3; INSTALL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/external/install; - CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.1.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; + CONFIGURE_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/external/jellyfish-2.2.3/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_COMMAND ${MAKE} CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} CXXFLAGS=${JELLYFISH_CXX_FLAGS}; BUILD_IN_SOURCE 1; INSTALL_COMMAND make install && ; - cp config.h <INSTALL_DIR>/include/jellyfish-2.1.3/jellyfish/ &&; + cp config.h <INSTALL_DIR>/include/jellyfish-2.2.3/jellyfish/ &&; cp config.h <INSTALL_DIR>/include/; ). --- salmon-0.4.2/src/CMakeLists.txt.orig 2015-08-18 21:21:14.892734948 +0200; +++ salmon-0.4.2/src/CMakeLists.txt 2015-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/11:1750,down,download,1750,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/11,1,['down'],['download']
Availability,error Installing: CMake fail line 94; RapMap not found (with workaround),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/42:0,error,error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42,1,['error'],['error']
Availability,error building,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:0,error,error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['error'],['error']
Availability,error in installation process,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/497:0,error,error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497,1,['error'],['error']
Availability,error in quant.sf file name column while using fasta input file corresponding to the stringtie GTF file,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/427:0,error,error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/427,1,['error'],['error']
Availability,error installing: CMake Error: Problem with archive_write_finish_entry(): Can't restore time,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/10:0,error,error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10,2,"['Error', 'error']","['Error', 'error']"
Availability,error when indexing transcroptome,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/730:0,error,error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/730,1,['error'],['error']
Availability,error when trying to follow tutorial,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/931:0,error,error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/931,1,['error'],['error']
Availability,error with alevin using long read transcriptome,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/540:0,error,error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/540,1,['error'],['error']
Availability,error: commlib error: got read error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/580:0,error,error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/580,3,['error'],['error']
Availability,error: segmentation fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/320:0,error,error,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/320,2,"['error', 'fault']","['error', 'fault']"
Availability,errors running salmon quant with 1.2.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/512:0,error,errors,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/512,1,['error'],['errors']
Availability,"es 4096 Dec 6 11:40 ..; drwxrwxr-x. 3 modules modules 4096 Dec 6 11:40 include; lrwxrwxrwx. 1 modules modules 5 Dec 6 11:48 lib -> lib64; drwxrwxr-x. 2 modules modules 4096 Dec 6 11:40 lib64. ```. Even after I had hacked up the CMakeLists.txt file to set some of these it still wouldn't build. For instance in that file:; ```; ## Try and find TBB first; if(DEFINED ENV{ROOT_LIBTBB}); message(""ROOT_LIBTBB in env""); set(ROOT_LIBTBB ); set(TBB_DIR $ENV{ROOT_LIBTBB}); set(TBB_INCLUDE_DIRS ${TBB_DIR}/include); set(TBB_INCLUDE_DIR ${TBB_DIR}/include); set(TBB_LIBRARY_DIRS ${TBB_DIR}/lib); set(TBB_LIBRARY ${TBB_DIR}/lib); set(TBB_LIB_DIR ${TBB_DIR}/lib); set(TBB_VERSION ""2019.6""); set(TBB_FOUND TRUE); else(); message(""ROOT_LIBTBB NOT in env""); find_package(TBB 2018.0 COMPONENTS tbb tbbmalloc tbbmalloc_proxy); endif(). if (${TBB_FOUND}); ```. But apparently that wasn't enough, because:. ```; cmake \; -DCMAKE_INSTALL_PREFIX:PATH=$TOPDIR \; .. ...; TBB_LIBRARIES = ; -- Configuring done; CMake Error at external/pufferfish/external/twopaco/CMakeLists.txt:11 (add_dependencies):; The dependency target ""tbb"" of target ""graphdump"" does not exist.; ```. This doesn't work obviously, but here are the mods to CMakeLists.txt that I tried:. ```; diff -au CMakeLists.txt.dist CMakeLists.txt; --- CMakeLists.txt.dist 2019-12-06 10:40:58.430641796 -0800; +++ CMakeLists.txt 2019-12-06 13:14:57.292041895 -0800; @@ -387,7 +387,10 @@; ##; set(Boost_ADDITIONAL_VERSIONS ""1.59.0"" ""1.60.0"" ""1.61.0"" ""1.62.0"" ""1.63.0"" ""1.64.0"" ""1.65.0"" ""1.66.0"" ""1.67.0"" ""1.68.0"" ""1.69.0"" ""1.70.0"" ""1.71.0""); if (NOT BOOST_RECONFIGURE); -find_package(Boost 1.59.0 COMPONENTS iostreams filesystem system timer chrono program_options); +set(BOOST_INCLUDEDIR ""/usr/include/boost169""); +set(BOOST_LIBRARYDIR ""/usr/lib64/boost169""); +set(Boost_FOUND 1); +; message(""BOOST_INCLUDEDIR = ${BOOST_INCLUDEDIR}""); message(""BOOST_LIBRARYDIR = ${BOOST_LIBRARYDIR}""); message(""Boost_FOUND = ${Boost_FOUND}""); @@ -571,7 +574,22 @@; endif(); ; ## ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/460:2597,Error,Error,2597,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/460,1,['Error'],['Error']
Availability,"ev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:2008,error,error,2008,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,1,['error'],['error']
Availability,"evin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/_rinterface_capi.py in serialize(cdata, cdata_env); 412 if error_occured[0]:; --> 413 raise embedded.RRuntimeError(_geterrmessage()); 414 return res. RRuntimeError: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:2276,error,error,2276,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,1,['error'],['error']
Availability,"f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be written to salmon.out/logs; [2021-03-29 16:21:11.395] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-03-29 16:21:11.395] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-03-29 16:21:11.395] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-03-29 16:21:11.395] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-03-29 16:21:11.395] [jointLog] [info] parsing read library format; [2021-03-29 16:21:11.399] [jointLog] [info] There is 1 library.; [2021-03-29 16:21:11.496] [jointLog] [info] Loading pufferfish index; [2021-03-29 16:21:11.509] [jointLog] [info] Loading dense pufferfish index.; -----------------------------------------; | Loading contig table | Time = 553.3",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:3069,recover,recoverOrphans,3069,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['recover'],['recoverOrphans']
Availability,"fastq.gz |head -n 4`; @SRR6327122.1 1 length=88; CGGCCACAAGATCGCCTTTTTATCCCTCGCCCAGAGCACCCCCCGACCCCACATCCCCTGCTTCACGGCCCCCCTCGCGGCCTACCCG; +SRR6327122.1 1 length=88; --7-<7----7---77----77A-7--7-A7-7---7-A-A7<F-777-77-A---A<A----77--77------------7------. * Which which program options were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { cell_barcode_seq.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 18:24:03.053] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-19 18:24:03.059] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:3272,avail,available,3272,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['avail'],['available']
Availability,"ference but did not appear in the BAM`; and; `Transcript chr19 appeared in the BAM header, but was not in the provided FASTA file`; (note here that it's an entire chromosome??? And these are the only ""transcripts"" that don't appear in the fasta- they're all just the chromosome names.); This happened regardless of whether I used the Stringtie fasta or the SQNATI-annotated fasta. This is the salmon command I had run:; `$salmon quant --ont -t $transcriptome -l SF -a $bam -o $outdir/$name`. As suggested, I used gffread to generate a new transcriptome fasta as follows:; `gffread -w salmon_fix.fa -g chm13v2.0.fa chm13v2.0_RefSeq_Liftoff_v5.1.gff3`. I reran the above salmon command using this new fasta file, but got the same error and warnings: there are transcripts in the BAM not in the fasta and vice versa. Again, the ""transcripts"" not in the fasta were chromosome names. I also tried with the short read SAM files, and still got the same error. I'm not sure how to fix either the warnings or the errors and would really appreciate your help. ### Software information; I used salmon v1.10.0 (though I also tried v1.10.1). In the case of v1.10.0, I had downloaded the pre-compiled binary, and in the case of v1.10.1, the admins of the HPC cluster I used installed it- not sure how. Regardless, all the runs were on HPC clusters, which run on Linux CentOS (I use two different HPC clusters, depending on their availability). Cluster1:; ```; $ uname -a; Linux rescomp1.hpc.in.bmrc.ox.ac.uk 3.10.0-1160.92.1.el7.x86_64 #1 SMP Tue Jun 20 11:48:01 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; -bash: lsb_release: command not found; ```. Cluster2:; ```; $ uname -a; Linux htc-login02 4.18.0-348.7.1.el8_5.x86_64 #1 SMP Wed Dec 22 13:25:12 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 8.5.2111; Release: 8.5.2111; Codename: n/a; ```. Please let me know if I need to prov",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/863:2486,error,errors,2486,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/863,1,['error'],['errors']
Availability,"fig --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the fastq files are as follows:; `$ zcat SRR6327122_1.fastq.gz |head -n 4`; @SRR6327122.1 1 length=36; CTGATCCTCGAGAGCACTCACAGAGTTTTTTGTTTT; +SRR6327122.1 1 length=36; AAFFFJJJJJJJJJJJJJJJJJJJJJ7-----A<-<; And; `$ zcat SRR6327122_2.fastq.gz |head -n 4`; @SRR6327122.1 1 length=88; CGGCCACAAGATCGCCTTTTTATCCCTCGCCCAGAGCACCCCCCGACCCCACATCCCCTGCTTCACGGCCCCCCTCGCGGCCTACCCG; +SRR6327122.1 1 length=88; --7-<7----7---77----77A-7--7-A7-7---7-A-A7<F-777-77-A---A<A----77--77------------7------. * Which which program options were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR63271",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:1854,down,downloaded,1854,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,1,['down'],['downloaded']
Availability,"file as input corresponding to the stringtie gtf file.; **To Reproduce**; Steps and data to reproduce the behavior:; Trasncript fasta file corres[onding to the stringtie generated gtf file used for salmon indexing with the following command.; `salmon index -t stringtie.fasta -i annotation_merged_index -p 20 -k 31`; THe index output used for salmon quantification with the following command; `salmon quant -i matchedtranscript_index/ -l ISR -1 ../../12_1_trimmed_R1.fastq -2 ../../12_1_trimmed_R2.fastq --gcBias --seqBias --posBias --dumpEqWeights -o salmon_output_rerun --writeMappings=salmon_output_rerun/mapping.sam -p 20`. Actual transcript IDs; ```; transcript	gene; 1 MSTRG.1.1	MSTRG.1; 2 MSTRG.1.2	MSTRG.1; 3 MSTRG.1.3	MSTRG.1; 4	BGIOSGA002578-TA	MSTRG.1; 5 MSTRG.1.5	MSTRG.1; 6 MSTRG.1.6	MSTRG.1; ```; Output quant.sf file:; ```; transcript count TPM; 1 BGIOSGA002568-TA 5692.000 5.840431; 2 MSTRG.3 1165.181 0.825116; 3 MSTRG.3 15240.169 10.700565; 4 MSTRG.3 5233.400 3.656954; 5 MSTRG.3 34.780 0.027226; 6 MSTRG.3 5219.345 3.916051; 7 MSTRG.3 4.277 0.003473; ```; Rscript used to read the quant.sf file. ```; library(dplyr); tmp <- read.delim(""quant.sf"", header = TRUE, as.is = TRUE); idx <- grep(""^STRG\\.|^CHS\\."", tmp$Name, invert = TRUE); tmp$Name[idx] <- gsub(""\\.[0-9]+$"", """", tmp$Name[idx]); tmp %>% dplyr::rename(transcript = Name, count = NumReads) %>%; dplyr::select(transcript, count, TPM); ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.14.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda; * Which reference (e.g. transcriptome) was used?; transcriptome; * Which read files were used?; paired-end illumina read files. **Expected behavior**; A clear and concise description of what you expected to happen.; Expected to retrieve the full name of transcript IDs. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Cluster with centOS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/427:1776,down,downloaded,1776,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/427,1,['down'],['downloaded']
Availability,"finery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq -p 20 -o /home/user/data_store/TEST/test_sample/processed/ --seqBias --gcBias --dumpEq --writeUnmappedNames; ```. **Expected behavior**; This happened while I was modifying the tests for running salmon. I'm guessing that my code isn't quite right yet so something going wrong isn't quite unexpected. However I would have expected an error to come out of Salmon rather than producing JSON which is invalid. **Desktop (please complete the following information):**. Our exact environment for running this is described here:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/dockerfiles/Dockerfile.salmon. The base image is `ubuntu:16.04`. **Additional context**; Here is the contents of `lib_format_counts.json` file (github won't let me upload it):; ```; {; ""read_files"": ""( /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq, /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fastq )"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 184,; ""num_assigned_fragments"": 184,; ""num_consistent_mappings"": 0,; ""num_inconsistent_mappings"": 255,; ""strand_mapping_bias"": NaN,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 126,; ""SR"": 129,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/279:2337,error,error,2337,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279,1,['error'],['error']
Availability,"fo] writing output ; ```; And the quality control report by `fastp` ; [fastp_report.pdf](https://github.com/COMBINE-lab/salmon/files/10999908/fastp_report.pdf). The log of `bowtie2`:; ```{shell}; $cat bowtie2.log ; 40535435 reads; of these:; 40535435 (100.00%) were paired; of these:; 38666766 (95.39%) aligned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:5977,avail,available,5977,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,1,['avail'],['available']
Availability,forge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; ------------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: lzma.h: No such file or directory; #include <lzma.h>; RESOLUTION:; sudo apt-get install -y liblzma-dev; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:5507,Error,Error,5507,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,6,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'error']"
Availability,"g Salmon v1.2.0 which was build from source and is run on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. In addition, I am only using trimmed paired-end reads of 100bp. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/523:1012,recover,recoverOrphans,1012,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/523,1,['recover'],['recoverOrphans']
Availability,"g; [2019-01-29 16:06:46.957] [alevinLog] [info] Finished optimizer; ```. ### no whitelist, expectCells 3000. ```; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-29 15:45:58.012] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-29 15:45:58.012] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-29 15:45:58.021] [alevinLog] [info] Processing barcodes files (if Present). processed 287 Million barcodes. [2019-01-29 15:51:37.144] [alevinLog] [info] Done barcode density calculation.; [2019-01-29 15:51:37.144] [alevinLog] [info] # Barcodes Used: 287883370 / 287983348.; [2019-01-29 15:51:38.549] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. ### whitelist forceCells 3000. The mapping rate was boost to 37%, but now the forceCells and expectCells seems not work, alevin still processed over 400,000 cells.; ```; cat logs/salmon_quant.log; [2019-01-28 21:02:08.487] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-01-28 21:02:08.487] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2019-01-28 21:02:08.487] [jointLog] [info] Using default value of 0.8 for minScoreFraction in Alevin; [2019-01-28 21:09:02.560] [jointLog] [info] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/340:5057,error,error,5057,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/340,1,['error'],['error']
Availability,"get 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.7.1908 (Core); Release:	7.7.1908; Codename:	Core. **Additional context**; I want to trace the code while running ""salmon index ......"", ""salmon quant ......"" with gdb, but it seems that both the downloaded executable and the compiled ""Release"" mode do not contain debug symbol, so I'd like to compile the code with debug mode (which maybe will enable ""-g"" flag in g++); Thanks for your help in advance.; Best, ; kai2june",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:4050,down,downloaded,4050,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,1,['down'],['downloaded']
Availability,"gned int]::__lambda34; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: candidate expects 1 argument, 3 provided; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2075:102: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadSeq>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<long int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<long int> > >*)’; else if (isSingleEnd) {processFunctor(i, singleParserPtr, sidx->quasiIndexPerfectHash64());}; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Trans",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:7152,error,error,7152,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"gnment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.matePos, r2ptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1224:93: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1234:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(), bu; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(single_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1557:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1682:91: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxReadScore, h.chainStatus.getLeft(), buf, a; ^; src/CMakeFiles/salmon.dir/build.make:566: recipe for target 'src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; CMakeFiles/Makefile2:594: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/254:3875,error,error,3875,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254,5,"['Error', 'error']","['Error', 'error']"
Availability,"gnment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173891_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173891 }; Logs will be written to salmonRes_SRR2173891/logs; [2021-07-16 11:47:01.649] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.649] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.649] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.649] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.649] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.649] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173892_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173892 }; Logs will be written to salmonRes_SRR2173892/logs; [2021-07-16 11:47:01.807] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.807] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.807] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [202",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:10138,Error,Error,10138,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['Error'],['Error']
Availability,"gth less than equal to the k-mer length of 28 (perhaps after poly-A clipping). # [omissis]. [2021-12-24 17:32:57.019] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178811.1], had length less than equal to the k-mer length of 28 (perhaps after poly-A clipping). [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] Removed 2279 transcripts that were sequence duplicates of indexed transcripts.; [2021-12-24 17:32:57.126] [puff::index::jointLog] [warning] If you wish to retain duplicate transcripts, please use the `--keepDuplicates` flag; [2021-12-24 17:32:57.126] [puff::index::jointLog] [critical] The decoy file contained the names of 52 decoy sequences, but 0 were matched by sequences in the reference file provided. To prevent unintentional errors downstream, please ensure that the decoy file exactly matches with the fasta file that is being indexed.; [2021-12-24 17:32:57.224] [puff::index::jointLog] [error] The fixFasta phase failed with exit code 1; ```. **Expected behavior**; I followed the instructions, I don't think I should be getting this error?; I don't understand why I have only 52 decoys (basically the whole genome), and why zero were matched in the reference file provided. . If I look in `gentrome.fa` I do find the decoys; ```; zgrep ""chr8"" /no_backup/indexes/salmon/mm10/gentrome.fa ; >chr8; ```; I do not want to retain duplicated transcripts so the `--keepDuplicates` flag is something I would want to avoid. **Desktop (please complete the following information):**. ```; uname -a; Linux ant-login6.linux.crg.es 3.10.0-514.16.1.el7.x86_64 #1 SMP Wed Apr 12 07:10:20 CDT 2017 x86_64 x86_64 x86_64 GNU/Linux; ```; ```; lsb_release -a; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 7.2 (Nitrogen); Release:	7.2; Codename:	Nitrogen; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/731:4002,error,error,4002,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/731,1,['error'],['error']
Availability,"gz""). else:; # paired end data; download both files, interleave, and then remove files; fastq_1 = fastqs[0]; fastq_2 = fastqs[1]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + ""_1.fastq.gz""):; shell(""wget -O {params.tmp_base}_1.fastq.gz ftp://{fastq_1}""). if not os.path.exists(params.tmp_base + ""_2.fastq.gz""):; shell(""wget -O {params.tmp_base}_2.fastq.gz ftp://{fastq_2}""). shell(""fastp -i {params.tmp_base}_1.fastq.gz -I {params.tmp_base}_2.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {output.reads}""). # check that the file exists, and if it does, remove raw fastq files; if os.path.exists(output.reads):; os.remove(params.tmp_base + ""_1.fastq.gz""); os.remove(params.tmp_base + ""_2.fastq.gz""); ```. However, I think it would be fine to reproduce from untrimmed files:; ```; wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR436/001/ERR4363141/ERR4363141.fastq.gz; ```. I generated the transcriptome by annotating all publicly available genomes for my species (*Faecalibacterium prausnitzii_C*). Using these annotations, I cut out coding domain sequences and nc/r/tRNAs and clustered the sequences at 95% identity. Then, I took the complement of these sequences (all the left over intergenic stuff) and designated these as decoys. . I indexed the transcriptome with:; ```; rule index_transcriptome:; input:; seqs=ancient(""outputs/gtdb_genomes_salmon_ref/{gtdb_species}.fa""),; decoys=ancient(""outputs/gtdb_genomes_intergenic_comb/{gtdb_species}_clustered_intergenic_seq_names.txt""); output: ""outputs/gtdb_genomes_salmon_index/{gtdb_species}/info.json""; threads: 1; params: index_dir = lambda wildcards: ""outputs/gtdb_genomes_salmon_index/"" + wildcards.gtdb_species; resources:; mem_mb=16000,; tmpdir=TMPDIR; conda: ""envs/salmon.yml""; benchmark:""benchmarks/salmon_index_{gtdb_species}.txt""; shell:'''; salmon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:2435,avail,available,2435,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['avail'],['available']
Availability,"gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HTTPerror . and by building from source and I don't understand how to do it from the website . How can I do it on macOS Monterey M1 Max chip ? . thanks a lot for you help in advance . Since it's the v 1.3.0 is it possible to update the brew formula to 1.9.0 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/787:1619,error,errors,1619,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787,2,['error'],"['error', 'errors']"
Availability,"h and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be remo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:3109,error,errors,3109,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['error'],['errors']
Availability,"h the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:3110,error,errors,3110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'errors']"
Availability,"h_sd: 25.001769513739427. Sample: Gam_3h_RT_rep2_RL5404_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_3h_RT_rep3_RL5405_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep1_RL5390_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep2_RL5391_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_37C_rep3_RL5410_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep1_RL5392_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep2_RL5393_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_4C_rep3_RL5411_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep1_RL5389_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep2_RL5408_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427. Sample: Gam_6h_RT_rep3_RL5409_quant; frag_length_mean: 250.0000097391447; frag_length_sd: 25.001769513739427```. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.10.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Binary; * Which reference (e.g. transcriptome) was used?; Moss (Physco) v6.1 that I had generated ; * Which read files were used?; ; * Which which program options were used?; `-l A -p 16 --validateMappings --numBootstraps 100 --seqBias --gcBias`. **Expected behavior**; A clear and concise description of what you expected to happen. **Desktop (please complete the following information):**; - OS: Linux server: Rocky Linux release 8.5 (Green Obsidian); - Version Rocky Linux release 8.5 (Green Obsidian)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/948:3044,down,downloaded,3044,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/948,1,['down'],['downloaded']
Availability,"hat contain ""GATAGACA"" in the 87-94 position to ""AACGTGAT"". I [wrote a script](https://github.com/jeremymsimon/SPLITseq) (in perl because I'm old-school) that does this and allows for mismatches within 1 hamming distance. I'm sure someone could port this to python, rust, or C/C++ and speed this step up substantially, but it seems to work fine. The next step is to run alevin. I've done so using salmon v1.5.2 with the following parameters (for a ParseBio run), reversing R1/R2 as per Avi's suggestion:; ```; salmon alevin -l ISR \; --expectCells 9000 \; --read-geometry 2[1-end] \; --umi-geometry 1[1-10] \; --bc-geometry 1[11-18,49-56,79-86] \; -2 R1.fastq.gz \; -1 R2_corrected.fastq.gz \; -i gencode_v36_transcripts_idx \; -p 8 \; -o SplitBio_SL2_alevin \; --tgMap gencode.v36.txt; ``` . I know that these libraries are stranded, but I doubt `ISR` is the correct architecture, especially given it's not true PE sequencing. Notably, running alevin this way gets me only a 4% mapping rate, and most of my cells get filtered out downstream due to having really low depth. . Below is my `salmon_quant.log`:; ```; [2021-08-20 12:29:32.343] [jointLog] [info] setting maxHashResizeThreads to 8; [2021-08-20 12:29:32.343] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-08-20 12:29:32.343] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-08-20 12:29:32.343] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-08-20 12:29:32.343] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-08-20 12:29:32.343] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-08-20 12:29:32.343] [join",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/699:2872,down,downstream,2872,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/699,1,['down'],['downstream']
Availability,"have a public 10xV2 sample that I am reprocessing ([SRR13313130](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR13313130)). More specifically, I believe that the sample should be **10X Genomics 5' v1**. I am using the following command:. ```; ID=5309-CT-2; R1=../Reads/5309-CT-2_S01_L005_R1_001.fastq.gz; R2=../Reads/5309-CT-2_S01_L005_R2_001.fastq.gz. TYPE=10xV2; #for MAP, download from UCSC Table Browser, and remove 1st line (and then manually add SARS-COV-2 genes); MAP=/path/to/SARS_COV_2-hg38_RefSeq_2column.txt; REF=/path/to/SARS_COV_2-hg38_salmon; CBWL=/path/to/737K-august-2016.txt. salmon alevin -l ISR --chromium -1 $R1 -2 $R2 -i $REF -p 4 -o $ID --tgMap $MAP --whitelist $CBWL; ```. If I use the V3 barcode list, then I _don't_ get an error message. However, I got more discordant cell counts between CellRanger and STARsolo. The Kallisto cell barcode recovery rate was also low (<10%). So, I thought there error was that different cell barcodes should be used for this sample. I think that matches, what I saw on this FAQ page from 10x Genomics:. https://kb.10xgenomics.com/hc/en-us/articles/115004506263-What-is-a-barcode-whitelist-. So, I downloaded the [737k-august-2016.txt](https://github.com/10XGenomics/cellranger/blob/master/lib/python/cellranger/barcodes/737K-august-2016.txt) file from 10x, and I am testing using that. However, I am now receiving the following error message:. ```; [2021-07-07 17:07:44.192] [alevinLog] [info] Done importing white-list Barcodes; [2021-07-07 17:07:44.192] [alevinLog] [error] Wrong whitelist provided; Please check https://salmon.readthedocs.io/en/develop/alevin.html#whitelist; ```. On the [website linked](https://salmon.readthedocs.io/en/develop/alevin.html#whitelist), I see a note saying ""**Not 10x 724k whitelist**"". However, I apologize that I don't think I understand this note (and the exact file name is different). Should I be doing some differently when running Alevin for this sample?. Thank you very much. Sincerely,; Charles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/682:1165,down,downloaded,1165,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/682,3,"['down', 'error']","['downloaded', 'error']"
Availability,"hed to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [info] done",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/54:1710,fault,fault,1710,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54,1,['fault'],['fault']
Availability,"hello,; i am trying to run salmon on windows subsystem linux.; i installed using conda.; when i tried to run it, i got the following error:; ```; salmon index -t Homo_sapiens.GRCh38.dna.primary_assembly.fa -i hg38_index; salmon: /home/najib/miniconda3/envs/rnaseq_salmon/bin/../lib/libstdc++.so.6: version `CXXABI_1.3.11' not found (required by salmon); salmon: /home/najib/miniconda3/envs/rnaseq_salmon/bin/../lib/libstdc++.so.6: version `GLIBCXX_3.4.22' not found (required by salmon); salmon: /home/najib/miniconda3/envs/rnaseq_salmon/bin/../lib/libstdc++.so.6: version `CXXABI_1.3.11' not found (required by /home/najib/miniconda3/envs/rnaseq_salmon/bin/../lib/libtbb.so.2); ```; what is the possible solution?; thank you for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/864:133,error,error,133,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/864,1,['error'],['error']
Availability,"hi, I am running Salmon-1.2.1 on my MacBook with Sierra 10.13.6. I try to run Salmon binary with terminal, and I get this error. How'd do solve this problem? . Last login: Sat May 2 23:14:08 on ttys007; /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; Maysons-MacBook-Air:~ maysonlin$ /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0\ 2/bin/salmon ; exit;; dyld: Library not loaded: @rpath/libtbbmalloc.dylib; Referenced from: /Users/maysonlin/Downloads/salmon-1.2.1-h2072146_0 2/bin/salmon; Reason: image not found; Abort trap: 6; logout; Saving session...; ...copying shared history...; ...saving history...truncating history files...; ...completed. [Process completed]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/517:122,error,error,122,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/517,4,"['Down', 'error']","['Downloads', 'error']"
Availability,"hon3.7/copy.py in deepcopy(x, memo, _nil); 168 if reductor:; --> 169 rv = reductor(4); 170 else:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/sexp.py in __getstate__(self); 123 self.__sexp__._cdata,; --> 124 globalenv.__sexp__._cdata); 125 ). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/_rinterface_capi.py in serialize(cdata, cdata_env); 412 if error_occured[0]:; --> 413 raise embedded.RRuntimeError(_geterrmessage()); 414 return res. RRuntimeError: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:1930,error,error,1930,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,1,['error'],['error']
Availability,"hree sections (CLS1, CLS2, CLS3) along each R1 read. Two common sequences (L1, L2) separate the three CLSs, and the presence of L1 and L2 relates to the way the capture oligonucleotide probes on the beads are constructed. By design, each CLS has one of 96 predefined sequences, which has a Hamming distance of at least four bases and an edit distance of at least two bases apart. A cell label is defined by the unique combination of predefined sequences in the three CLSs. Thus, the maximum possible number of cell labels is 96^3 (884,736). A cell label is represented by an index between 1–96^3. > Reads are first checked for perfect matches in all three pre-designed CLS sequences at the expected locations, CLS1:; position 1–9, CLS2: position 22–30, and CLS3: position 44–52. Reads with perfect matches are kept. In other words...; - Concatenate subsequences 1-9, 22-30, and 44-52 to form a 27-base cell label; - Extract subsequence 53-60 as the UMI . > **UMI** By design, the UMI is a string of eight randomers immediately downstream of CLS3. If the CLSs have perfect matches or base substitutions, the UMI sequence is at position 53–60. For reads with insertions or deletions within the CLSs, the UMI sequence is eight bases immediately following the end of the identified CLS3. R2 reads are transcript-only, and are expected to match a transcript's forward strand, with matches starting within the first five nucleotides (and not match PhiX174). **To Reproduce**. Using Salmon v1.4.0, installed via Debian / apt:. $ salmon alevin -l ISR -1 INDEXLIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [j",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/628:1687,down,downstream,1687,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628,1,['down'],['downstream']
Availability,"https://github.com/COMBINE-lab/salmon/issues/602#issuecomment-748729130. Having read this and also wanting to use salmon to quantify transcript abundances from direct RNA data I have been using the pipeline here: https://github.com/nanoporetech/pipeline-transcriptome-de . In this case --noErrorModel is used but not --NoLengthCorrection. The pipeline uses NumReads as the counts in downstream analysis but I was wondering if this estimation of transcript counts also tries to normalize the length bias typical of short-read RNA seq workflows? If not, I think NumReads is OK but if it does this also seems not useable like the default TPM output.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/651:383,down,downstream,383,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/651,1,['down'],['downstream']
Availability,https://travis-ci.org/Homebrew/homebrew-science/jobs/114404533#L1110-L1115. ```; /bin/sh ../libtool --tag=CC --mode=compile /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /usr/local/Library/ENV/4.3/clang -DHAVE_CONFIG_H -I. -I.. -I.. -I/usr/local/include -L/usr/local/lib -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10: fatal error: 'lzma.h' file not found; #include <lzma.h>; ^; 1 error generated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Error 2; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/45:365,echo,echo,365,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/45,9,"['Error', 'echo', 'error']","['Error', 'echo', 'error']"
Availability,"ies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filterin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:2272,error,error,2272,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,1,['error'],['error']
Availability,"iff. = 0.109768; [2021-06-08 03:45:01.617] [jointLog] [info] iteration = 800 | max rel diff. = 1.21662; [2021-06-08 03:45:03.120] [jointLog] [info] iteration = 900 | max rel diff. = 3.66627; [2021-06-08 03:45:04.608] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.588204; [2021-06-08 03:45:06.110] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.0684939; [2021-06-08 03:45:07.618] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.12848; [2021-06-08 03:45:09.127] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0314333; [2021-06-08 03:45:10.652] [jointLog] [info] iteration = 1,400 | max rel diff. = 1.66027; [2021-06-08 03:45:12.161] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.0215391; [2021-06-08 03:45:13.652] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0482054; [2021-06-08 03:45:15.168] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.10638; [2021-06-08 03:45:16.664] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.527726; [2021-06-08 03:45:16.709] [jointLog] [info] iteration = 1,804 | max rel diff. = 0.00520282; [2021-06-08 03:45:16.741] [jointLog] [info] finished optimizer; [2021-06-08 03:45:16.741] [jointLog] [info] writing output; [2021-06-08 03:45:17.047] [jointLog] [info] Staring Bootstrapping; [2021-06-08 03:45:17.157] [jointLog] [info] Will draw 30 bootstrap samples; [2021-06-08 03:45:17.157] [jointLog] [info] Optimizing over 430,882 equivalence classes; ```. I.e. `-l A` gives slightly more counts. When we excluded STAR from the process, and counted pseudoalignments, `-l A` again produced a bit more counts, so this effect is persistent for `-l A`:; - `-l A`: 36,310,400; - `-l ISF`: 36,309,800. (Here we are not comparing counts for pseudoalignments vs STAR aligments, just libtypes withing the same mode). While this difference in counts is not crucial and likely will not affect any downstream analyses, I would appreciate if you could share any insights on what could cause that difference!. Sergey",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/669:7760,down,downstream,7760,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/669,1,['down'],['downstream']
Availability,"ile describes the option '-t transcripts.fa' for this purpose:. > ./bin/salmon quant -t transcripts.fa -l <LIBTYPE> -a aln.bam -o salmon_quant. Also the command-line help 'salmon quant --help-alignment' names the same options:. alignment input options:. -l [ --libType ] arg Format string describing the library ; type; -a [ --alignments ] arg input alignment (BAM) file(s).; -t [ --targets ] arg FASTA format file containing target ; transcripts. The 'salmon quant' command doesn't recognize either the short or long form of this option and stops execution immediately. There is no difference if the full set of options for a quantification run are provided or only this option. . **To Reproduce**; salmon quant -t Homo_sapiens.GRCh37.87.cdna.all.fa; salmon quant --targets Homo_sapiens.GRCh37.87.cdna.all.fa. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.12.0 and 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable (salmon-0.12.0_linux_x86_64.tar.gz, salmon-0.11.3-linux_x86_64.tar.gz); * Which reference (e.g. transcriptome) was used?; any, independant of transcriptome; * Which read files were used?; not applicable; * Which which program options were used?; other options than '-t/--targets' were irrelevant for provoking the error . **Expected behavior**; Salmon should run and process the alignment file in BAM format. **Screenshots**; --- Error messages ------------------; Exception : [unrecognised option '-t']. Exiting.; Exception : [unrecognised option '--targets']. Exiting.; --------------------------------------. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version:; Linux nnn 4.15.0-36-generic #39~16.04.1-Ubuntu SMP Tue Sep 25 08:59:23 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial. **Additional context**; none",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/343:1672,error,error,1672,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/343,3,"['Error', 'avail', 'error']","['Error', 'available', 'error']"
Availability,"improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch and other protected branches — this keeps the analysis results on your repository’s *Security* tab up to date.; * Once a week at a fixed time — to make sure you benefit from the latest updated security analysis even when no code was committed or PRs were opened. #### What will this cost?; Nothing! The CodeQL engine will run inside GitHub Actions, making use of your [unlimited free compute minutes for public repositories](https://docs.github.com/en/actions/learn-github-act",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:1555,error,errors,1555,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['error'],['errors']
Availability,index error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/919:6,error,error,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/919,1,['error'],['error']
Availability,index runs but quant fails with memory error (std::bad_alloc),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/426:39,error,error,39,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/426,1,['error'],['error']
Availability,"information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.org/cloudman/), and my installation of Salmon is currently constrained to a conda install. . - I've fiddled with many different CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:2675,avail,avail,2675,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['avail'],['avail']
Availability,"ing the matrix combination step. I have downloaded edgeR to my home directory on my school's supercomputer, in addition to many other unsuccessful attempts at solving the issue. My main issue is that I've used the same code before without this issue, so I don't know exactly what is wrong now. I'm fairly new to bioinformatics and find it confusing, so any help is appreciated!. Here is my job script:. #!/bin/bash; #SBATCH --partition=debug; #SBATCH --account=PAS1725; #SBATCH --job-name=salmon_part2_cd-hit; #SBATCH --time=01:00:00; #SBATCH --nodes=1; #SBATCH --ntasks-per-node=48. module load python; module load trinityrnaseq/2.15.1; module load samtools; module load salmon/1.4.0; module load R/4.1.0-gnu9.1; R. /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl --est_method salmon --gene_trans_map /fs/scratch/PAS1725/transcriptomics/trinity_cd-hit_fasta.gene_trans_map --name_sample_by_basedir --out_prefix transcript_counts /fs/scratch/PAS1725/transcriptomics/salmon_part1_cd-hit_output_files/A1/quant.sf ... [other files omitted for space]. Here is my error message:. /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrixCMD: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 ; > library(edgeR); Error in library(edgeR) : there is no package called ‘edgeR’; Execution halted; Error, cmd: R --no-save --no-restore --no-site-file --no-init-file -q < transcript_counts.isoform.TPM.not_cross_norm.runTMM.R 1>&2 died with ret (256) at /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl line 105.; Error, CMD: /apps/trinityrnaseq/2.15.1/util/support_scripts/run_TMM_scale_matrix.pl --matrix transcript_counts.isoform.TPM.not_cross_norm > transcript_counts.isoform.TMM.EXPR.matrix died with ret 6400 at /apps/trinityrnaseq/2.15.1/util/abundance_estimates_to_matrix.pl line 386.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/855:1341,error,error,1341,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/855,4,"['Error', 'error']","['Error', 'error']"
Availability,"initial_whitelist"": 28000,; ""low_conf_cbs"": 997,; ""num_features"": 5,; ""final_num_cbs"": 19134,; ""deduplicated_umis"": 127624221,; ""mean_umis_per_cell"": 6670,; ""mean_genes_per_cell"": 2229; }. ==> salmon_1.9_OG_2022-Oct-13_S3/aux_info/alevin_meta_info.json <==; {; ""total_reads"": 1657137137,; ""reads_with_N"": 59329,; ""noisy_cb_reads"": 447471964,; ""noisy_umi_reads"": 3629,; ""used_reads"": 1209602215,; ""mapping_rate"": 55.061293216313938,; ""reads_in_eqclasses"": 912441138,; ""total_cbs"": 33411349,; ""used_cbs"": 1567701,; ""initial_whitelist"": 28000,; ""low_conf_cbs"": 997,; ""num_features"": 5,; ""final_num_cbs"": 18395,; ""deduplicated_umis"": 125889439,; ""mean_umis_per_cell"": 6843,; ""mean_genes_per_cell"": 2248; }; ```. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Run `salmon alevin` on more than 2^32 sequenced reads. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v41 + CHM13 v2.0 assembly; * Which read files were used? BD Rhapsody + NovaSeq; * Which which program options were used?. ```; [cell barcodes were pre-corrected and merged using my own [custom script](https://gitlab.com/gringer/bioinfscripts/-/blob/master/synthSquish.pl)]; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} \; -p 10 -o salmon_1.9_cbc_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**; ```; {; ""total_reads"": 4579183639,; ""reads_with_N"": 165542,; ""noisy_cb_reads"": 1240522569,; ""noisy_umi_reads"": 6297,; ""used_reads"": 3338489231,; ""mapping_rate"": 52.32744469106451,; ""reads_in_eq",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/806:2636,down,downloaded,2636,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/806,2,['down'],"['download', 'downloaded']"
Availability,"installed (compiled, downloaded executable, through bioconda)? **package installation via Debian**; * Which reference (e.g. transcriptome) was used? **transcriptome**; * Which read files were used? **NovaSeq X Plus; read length 150bp x 2; untrimmed **; * Which which program options were used?. ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_${sampleName};; done; ```. Making Salmon less stringent:; ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --minScoreFraction 0.33 --recoverOrphans \; --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_MS0.33_${sampleName};; done; ```. **Expected behavior**. Documentation that has a good explanation of the parameters in the metadata file, sufficient to explain why Salmon mapping rates are different from other programs, and why it's common to see mapping rates below 80% (e.g. [here](https://github.com/COMBINE-lab/salmon/issues/661#issuecomment-850540604), where a mapping rate of 63% is apparently acceptable). Consider the following statistics (in `meta_info.json`):. ```; $ grep -A 7 'num_processed' mapped/salmon_MS*001_*/aux_info/meta*.json; ""num_processed"": 39191989,; ""num_mapped"": 16720284,; ""num_decoy_fragments"": 3376529,; ""num_dovetail_fragments"": 5188759,; ""num_fragments_filtered_vm"": 3487789,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 3046512,; ""percent_mapped"": 42.6625043194414,; ""call"": ""quant"",; ```. The numbers from `unmapped_names.txt` are as follows:. ```; $ awk '{print $2}' mapped/salmon_MS0.33_AG1232_001_MR1/aux_info/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/925:5881,recover,recoverOrphans,5881,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925,1,['recover'],['recoverOrphans']
Availability,"int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:977:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1210:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, r1ptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1213:99: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.matePos, r2ptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1224:93: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1234:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(), bu; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(single_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1557:6: error: 'class rapmap::utils",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/254:2854,error,error,2854,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254,1,['error'],['error']
Availability,"ions^M^Mprocessed 281000000 positions^M^Mprocessed 282000000 positions^M^Mprocessed 283000000 positions^M^Mprocessed 284000000 positions^M^Mprocessed 285000000 positions^M^Mprocessed 286000000 positions^M^Mprocessed 287000000 positions^M^Mprocessed 288000000 positions^M^Mprocessed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 12.6069s; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. It would be more interesting to see what filename is used for the index. Showing the ""basename"" of the index file is not very helpful. I would prefer to see the filename(s) on the beginning and end lines:. ```; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; ...; [2018-06-25 19:29:02.297] [jLog] [info] done building index; ```. 5. The duplicates have same sequence or ID or both? The message should be clearer. I wonder what are these duplicates in a human cdna predicted, as available from `ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna`; :. ```; [2018-06-25 19:26:07.480] [jointLog] [warning] Removed 11768 transcripts that were sequence duplicates of indexed transcripts.; ```. 6. For the bwa-based index again, the logs are too verbose on one hand and on the second, they do not say what files were created. I doubt any file with *prefix* `Homo_sapiens.GRCh38.cdna.all/bwaidx` was created. ```; + salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type fmd; outputPrefix = ""Homo_sapiens.GRCh38.cdna.all/bwaidx""; [2018-06-25 19:29:02.497] [jLog] [info] building index; [bwa_index] Pack FASTA... 2.87 sec; [bwa_index] Construct BWT for the packed sequence...; [BWTIncCreate] textLength=609536484, availableWord=54888760; [BWTIncConstructFromPacked] 10 iterations done. 87569268 characters processed.; [BWTIncConstructFromPacked] 20 iterations done. 164630980 characters processed.; [BWTIncConstructFromPacked",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:13276,avail,available,13276,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['avail'],['available']
Availability,"ise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. ```; + mkdir -p salmon.out; + salmon quant -i sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx --libType A -1 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz -2 /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz -p 8 --recoverOrphans --validateMappings --gcBias --seqBias --rangeFactorizationBins 4 --output salmon.out; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.4.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { sel.align.gencode.v35.ucsc.rmsk.salmon.v1.3.0.sidx }; ### [ libType ] => { A }; ### [ mates1 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.2.fastq.gz }; ### [ mates2 ] => { /cromwell_root/fc-secure-519db2bc-049f-43a0-ab75-a2eb9c2cb059/6a6c9b92-3026-47d3-8944-60f0842c566e/samToFastqTest/5f578d2f-7e74-4402-955a-4d4623b83ead/call-samToFastq/GTEX-111CU-0526-SM-5EGHK.1.fastq.gz }; ### [ threads ] => { 8 }; ### [ recoverOrphans ] => { }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.out }; Logs will be writte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:2225,recover,recoverOrphans,2225,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['recover'],['recoverOrphans']
Availability,item: 512; Inventory entries filled: 1; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] Done wrapping the rank vector with a rank9sel structure.; [2020-07-04 15:34:24.273] [puff::index::jointLog] [info] contig count for validation: 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info]; Total # of segments we have position for : 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] total contig vec entries 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] bits per offset entry 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] there were 0 equivalence classes; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249': File exists; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v1.1.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/jl2e19/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_1.fq }; ### [ mates2 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_2.fq }; ### [ validateMappings ] => { }; ### [ output ] => { /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/ }; Logs will be written to /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/logs; [2020-07-04 15:51:46.138] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:17546,fault,fault,17546,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,1,['fault'],['fault']
Availability,"k/pub/databases/gencode/Gencode_human/release_36/gencode.v36.transcripts.fa.gz; ```; 2. unzip:; ```; gunzip gencode.v36.transcripts.fa.gz; gunzip GRCh38.primary_assembly.genome.fa.gz; ```; 3. following the instruction for building a SAF salmon index (https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ https://salmon.readthedocs.io/en/latest/salmon.html#what-s-this-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa | cut -d "" "" -f 1 > GRCh38.decoys.txt; sed -i 's/>//g' GRCh38.decoys.txt; cat gencode.v36.transcripts.fa GRCh38.primary_assembly.genome.fa | gzip > GRCh38.gentrome.fa.gz; salmon index -t GRCh38.gentrome.fa.gz -d GRCh38.decoys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/""; for fn in /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR{2557119..2557121}; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i $IDX -l A -1 ${fn}_1.fastq.gz -2 ${fn}_2.fastq.gz -p 8 \; --validateMappings \; -o quants/${samp}_quant \; --gcBias; done; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; 1.3.0 salmon was installed by miniconda, then updated to 1.4.0 via miniconda ; * Which reference (e.g. transcriptome) was used?; Gencode_human/release_36/gencode.v36.transcripts.fa.gz; * Which read files were used?; fastq.gz file with 150 paired reads ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; On a cluster with Ubuntu Linux. **Additional context**; I was running the default method of building index wit",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/603:3099,echo,echo,3099,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603,1,['echo'],['echo']
Availability,"ke-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:2226,Error,Error,2226,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,1,['Error'],['Error']
Availability,kefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; sudo apt install zlib1g-dev; --------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:63:10: fatal error: bzlib.h: No such file or directory; #include <bzlib.h>; ^~~~~~~~~; compilation terminated.; RESOLUTION:; sudo apt-get install libbz2-dev; ------------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:10,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:5367,Error,Error,5367,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['Error'],['Error']
Availability,"lative orientation:none, strandedness:unstranded }; [2024-04-09 18:22:04.563] [jointLog] [info] numQuantThreads = 18; parseThreads = 6; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""007_D14_transcript.bam"", fasta = ""/scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa"" . . .done. processed 0 reads in current round[2024-04-09 18:22:15.424] [jointLog] [info] replaced 4 non-ACGT nucleotides with random nucleotides; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has no trained clipping model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039 - align length 3921) has no trained error model; [2024-04-09 18:22:15.581] [jointLog] [warning] read 3f6dc3db-5e41-45df-bca2-b781f076857f (length 4039) has n",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:3429,error,error,3429,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,1,['error'],['error']
Availability,"ld like to know your opinions in the matter. . These runs were all performed with this 'default' run: ; ```; salmon quant -i index -l A -1 reads_1.fq -2 reads_2.fq --validateMappings -p 20 --numPreAuxModelSamples 250 --numAuxModelSamples 1000 -o output ; ```; I changes the ```AuxModelSamples``` to low values as I was generally only mapping 6000 reads to the two transcripts in total, so I didn't think they were working at the default settings. Below is also a small chart of some of my runs (which included quasi-mapping and selective-alignment), but what you can get is that there is a large variance between parameters. Particularly ```--seqBias``` showed a dramatic drop in predicted T - 2 transcripts. ![image](https://user-images.githubusercontent.com/29610303/61421680-5899aa00-a8c5-11e9-8349-bd708316599d.png). Any suggestions onto parameters settings to help me with this narrow question?. Now onto some questions regarding some outputs. 1. I run into a segmentation fault (core dumped) when I try to run the experimental ```--posBias```. I am new to RNAseq, but I thought this might help with this particular RNAseq set as it was a PolyA tail selection and when mapping to the full genome there is an observed heavy mapping to exon 1 with decreased mapping over exon 2, 3 and 4. . 2. During my runs I have been using ```-l A``` as I will be using this method in my script so that Salmon can just select the best libtype based on the given sequence to help make my script less complex. However, I found something strange when I used ```-l A``` on my test sequence. I got a warning of >1% strand bias on the command line and in the lib_format_counts.json I see that Salmon selected ""IU"" which I believe to be the correct libtype as well, but got this:; ```; {; ""read_files"": [; ""/data/wyka/vamsi/SRR1174205_1_paired.fastq"",; ""/data/wyka/vamsi/SRR1174205_2_paired.fastq""; ],; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 5549,; ""num_assigned_fragm",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/401:3224,fault,fault,3224,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401,1,['fault'],['fault']
Availability,"le is still a staggering 0 bytes large). I also read that this will take quite a lot of memory, but there should be some TB left on the hard drive. I created a 21 GiB swap partition which works fine (I've already seen it at 60%, so it is active and recognized and everything despite being on another physical hard drive ; (the 1. hard drive has a dual installation of win 10 and ubuntu 20.4 and the swap from the installation (2 GiB, because I thought that would be enough at the time and tried to save some space ^^) and the 2. hard drive has a swap partition of 20 GiB (with the highest priority of all swaps), which results in a total of 21.4 GiB in the System Monitor Resources Tab). . The system is still responding, and the System Monitor seems to be working fine (salmon is an active process using 12% CPU, 6.9 GiB memory, 13.5 GiB Disk read total, N/A Disk write total, Disk read 1.2 MiB/s (sometimes 1.1 or 1.3), Disk write N/A, Priority normal); and the Resources Tab shows that ; * out of 8 available CPUs, one is working at 100% (the others 5% at max) and ; * Memory 99.3% (which is only 7.7 GiB); * swap 9.5% (which is only 2 GiB of 21.4 GiB available). So here are (finally) my questions:. 1. How can I get Salmon to use the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ""visible"" happening during Round0?; 3. How can I see or check if it is still working (and it might be worthwhile to wait longer)? ; 4. Is what I'm doing correct to create an index file for running Salmon on human RNA-seq data that is supposed to ""end up"" in sleuth?; 5. Is there another way to create an index file that I can use as an index file to create input data for sleuth from RNA-seq data using Salmon (that might need less computational power)?. The last lines of the output are:. [2021-04-02 08:46:48.282] [puff::index::jointLog] [warning] Entry with header [ENST00000634174.1|ENSG00000282732.1|OTTHUMG00000191398.1|OTTHUMT00000487",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/643:4110,avail,available,4110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643,1,['avail'],['available']
Availability,"le | Time = 6.1119 s; -----------------------------------------; size = 25107960; -----------------------------------------; | Loading contig offsets | Time = 29.509 ms; -----------------------------------------; -----------------------------------------; | Loading reference lengths | Time = 163.13 us; -----------------------------------------; -----------------------------------------; | Loading mphf table | Time = 358.06 ms; -----------------------------------------; size = 3025374818; Number of ones: 25107959; Number of ones per inventory item: 512; Inventory entries filled: 49039; -----------------------------------------; | Loading contig boundaries | Time = 3.1166 s; -----------------------------------------; size = 3025374818; -----------------------------------------; | Loading sequence | Time = 237.3 ms; -----------------------------------------; size = 2272136048; -----------------------------------------; | Loading positions | Time = 2.8327 s; -----------------------------------------; size = 2977516968; -----------------------------------------; | Loading reference sequence | Time = 228.26 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 320.51 us; -----------------------------------------; [2024-05-03 15:10:04.136] [jointLog] [info] done; [2024-05-03 15:10:04.170] [jointLog] [info] Index contained 147554 targets. [2024-05-03 15:10:05.131] [jointLog] [info] Number of decoys : 61 ; processed 21000000 fragmentsointLog] [info] First decoy index : 147456; hits: 25885546, hits per frag: 1.2683(base) [**no further output**]; ```. **Desktop (please complete the following information):**; - OS: Ubuntu linux. ```; $ uname -a; Linux big-bird 5.15.0-102-generic #112-Ubuntu SMP Tue Mar 5 16:50:32 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Ubuntu; Description: Ubuntu 22.04.4 LTS; Release: 22.04; Codename: jammy; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:7838,avail,available,7838,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['avail'],['available']
Availability,"le) to Salmon Index. Then I found this script; https://github.com/COMBINE-lab/SalmonTools/blob/master/scripts/generateDecoyTranscriptome.sh; where the gentrome FASTA is actually built by concatenating the transcriptome FASTA and the decoy FASTA, which is different than the main genome FASTA as in the first approach.; This script also demonstrates how to generate this decoy FASTA, which is more in line with what's written in your paper!. Finally, the SalmonTools page; https://github.com/COMBINE-lab/SalmonTools; says (near the bottom) that the generateDecoyTranscriptome.sh is not needed anymore. ; I suppose this means that the first approach is how to go on about this? ; To just concatenate the transcriptome FASTA and the genome FASTA? . Salmon Index accepts the gentrome FASTA as an input, and the decoys file, which should now be just the contig names from the genome FASTA, correct?. After trying this exact approach, with the Ensembl's genome FASTA and GTF, with added ERCC contigs and the transcriptome FASTA built from these files with RSEM Prepare Reference tool, I get the following error:. `[puff::index::jointLog] [critical] Observed a non-decoy sequence [LF1.1] after having already observed a decoy. However, it is required that any decoy target records appear, consecutively, at the end of the input fasta file. Please re-format your input file so that all decoy records appear contiguously at the end of the file, after all valid (non-decoy) records`. The LF1.1 is a transcript present in Ensembl's GTF, and it is therefore also present in the transcriptome FASTA that I generate with RSEM Prepare Reference. ; I am not sure if these ERCC contigs that I am adding are causing troubles, but these are essentially one transcript per one gene per one contig type of additions, i.e.; `ERCC-00002	ERCC	exon	1	1061	0.000000	+	.	gene_id ""ERCC-00002""; transcript_id ""ERCC-00002"";`. And since RSEM Prepare Reference sorts transcripts alphabetically in the transcriptome FASTA file, the L",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/481:2032,error,error,2032,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/481,1,['error'],['error']
Availability,"lease; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/677:1890,echo,echo,1890,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677,2,"['ERROR', 'echo']","['ERROR', 'echo']"
Availability,"les.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [joi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:2299,avail,available,2299,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['avail'],['available']
Availability,libboost shared library error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/565:24,error,error,24,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565,1,['error'],['error']
Availability,"ligned to the genome, there are currently 3 options for converting them for use with Salmon. First, you could convert the SAM/BAM file to a FAST{A/Q} file and then use the lightweight-alignment-based mode of Salmon described below._; But there is nothing below it. Then, it states:; _Second, given the converted FASTA{A/Q} file, you could re-align these converted reads directly to the transcripts with your favorite aligner and run Salmon in alignment-based mode as described above._; I can get the FastQ from the Bam created by STAR, then my question, is which mapper do you recommend? Can bwa-mem2 work well?; My question, is that I will nonetheless need a transcriptome file, and to index it.; I downloaded the genome from NCBI: https://ftp.ncbi.nlm.nih.gov/genomes/all/annotation_releases/207650/100/GCF_011952255.1_Bvos_JDL3184-5_v1.1/ ; and I don't know which file should I use as the transcriptome; there are cds_from_genomic, protein, and rna. In one forum, one mentioned download the human transcriptome from ensemble, but it is not there. Also, I found that one can generate it with gffread using the gtf file, so I wanted to confirm if that output file will work ; `gffread -w Bvostranscripts.fa -g BosVos.fasta GCF_011952255.1_Bvos_JDL3184-5_v1.1_genomic.gtf ; `; because I remember reading somewhere that the file must have transcript length, but it doesn't:; head Bvostranscripts.fa ; >XM_033511117.1 CDS=100-1053; ctCCAACGAGAAAGACGTGCTCAGAAGCGAGTCCCGCGTAGCGCCATGTAGAGGAGCAGGAAGAAGCGCA; GTCTTCCTCAGGCATTCCAGCGTCGAGTAATGCTGAAGCATATCCTGACGGGGCAACCGTCGTCAGCGGG; CTCCAGGCACCAGCACAATGACTACCAGGCGAGCTCGGGCTCGTTGCACGGcggccaccaccaccaccat; cattCTGGTCACCAACAGGATCAACAGCAACACCATCATTACAACCAAAACAGCAACGTTCGTGGAACGA; CAGAGGGGAGCCAAGGACGGGGAGTCGACGTTTACGACTCGGTGGTCCATCAAAGAGCCAACGTGCATCA; GGCTGCCACCACGCCATCTTCCACTCACAGACACCCTTTGAATCATTCTCAGTTGAGCGTGAACAATCTT; TCTCAACGATTGAATCACTCGCACGCTCTTAATCTGTCCACGTTGTCCACGTCGAAGCATTCTGTGAACA; GCGTCAGTCCTGTTGCCGGTgggaataacaataacaataataataatctgtcgACTACATTGGGGGT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/951:1414,down,download,1414,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/951,1,['down'],['download']
Availability,"ling on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 35",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:1178,Down,Downloads,1178,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Down'],['Downloads']
Availability,link time error building Salmon 1.0.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/455:10,error,error,10,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/455,1,['error'],['error']
Availability,"llocate multimapped reads in dual RNA-seq data. What this means is we combine a host and pathogen genome (bacterial genome + host transcriptome) and also use a combined annotation file as well.; Basically, we can then find out which reads uniquely map to each gene/transcript from both organisms. . The issue we are having is when using Salmon in alignment-based mode (using STAR), we are observing quite substantial variations in how ambiguous (multimapping) reads are being assigned. We use the same quant command/params and the same input files - and we run the same data twice in different output locations.; The correlations between quant files are generally really good ~ 99.9x (spearman). . However, the number of allocated reads to a small proportion of transcripts varies quite a lot. For example:; ```; ENST00000383869.1 goes from 7699.89 reads to 4871.19 between runs; ENST00000374675.7 goes from 1326.02 reads to 0 between runs; ```. We initially noticed this when examining differentially expressed genes downstream, which were a bit unusual. These two transcripts in particular have a high number of ambiguous counts (generally >1000) when examining the `ambig_info.tsv` file (the number of ambig reads does remain the same though). I tried additional params and runs including:; Accounting for biases: `--seqBias --gcBias --posBias`; Including bootstrap information: `--numBootstraps 100 --bootstrapReproject`. Both params reduced the variation between runs slightly, but not enough to reduce the disparity. We don't see this difference when running in selective alignment mode. We are using `v.1.3.0` and `single end` reads. ```; STAR --runThreadN 30 --runMode genomeGenerate --genomeDir index/ --genomeFastaFiles $fasta --sjdbGTFfile $gff --sjdbGTFfeatureExon exon --sjdbGTFtagExonParentTranscript Parent --sjdbOverhang $sjdbOverhang. STAR --runThreadN 30 --genomeDir . --sjdbGTFfile $gff $readFilesCommand --readFilesIn $reads --outSAMtype BAM Unsorted --outSAMunmapped ""Within"" --o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/600:1047,down,downstream,1047,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/600,1,['down'],['downstream']
Availability,"lmon quant --threads 1 --libType=U -i index -r SRR493367.fastq.gz -o SRR493367; ```. I get the following error(s) even though the same version of kallisto was used for the indexing & quantifiation:; ```; Encountered exception [JSON Parsing failed - provided NVP (SeqHash512) not found] when loading index.; The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version.; ```. ## To Reproduce; - Install docker ; - Download transcriptome:; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.transcripts.fa.gz; ```; - Run docker container (warning 2GB):; ```; docker run -v $PWD -w $PWD:$PWD -it lifebitai/rnaseq-nf-dseq2 bash; ```; - Download reads (warning reads are 2.3GB:; ```; fastq-dump SRR493367; ```; - Index transcriptome:; ```; salmon index --threads 1 -t gencode.v27.transcripts.fa.gz -i index; ```; - Run quantification cmd above. <br />; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.12.0; * How was salmon installed? Download precompliied binary and made Dockerfile with the following:; ```Dockerfile; COPY ./salmon-0.12.0_linux_x86_64/bin /usr/local/bin; COPY ./salmon-0.12.0_linux_x86_64/lib /usr/local/lib. RUN chmod -R u+x /usr/local/bin. ENV PATH=""$PATH:/usr/local/bin""; ```; * Which reference (e.g. transcriptome) was used? gencode.v27.transcripts.fa.gz; * Which read files were used? SRR493367.fastq.gz; * Which which program options were used? See above. I encountered this error when running this [Nextflow pipeline](https://github.com/PhilPalmer/RNASeq-nf-dseq2). More details can be found [here](https://deploit.lifebit.ai/public/jobs/5c6eca93758e8300a8740a59) . Any ideas what the problem may be? I am not sure if it is a problem with my installation of Salmon, the [data](https://www.ncbi.nlm.nih.gov/sra/?term=SRR493367), the command or something else. Any help would be much appreciated. ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/345:1158,Down,Download,1158,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345,2,"['Down', 'error']","['Download', 'error']"
Availability,"lowing settings:. `salmon index -k 21 -p 24 -t ${txome_reference} -i ${index_path}`. but upon running quant with the following command:. `salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; `. I get a segmentation fault error midway through running:. ```hits: 122146249, hits per frag: 2.10747; processed 58500001 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm'",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/268:1224,error,error,1224,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268,1,['error'],['error']
Availability,"lping my adviser with this as a side project so I have limited knowledge on the topic and I also have limited knowledge on RNAseq as I mostly deal with full genomes. Lastly, I also do know that this research question is very narrow and I believe the concept can be done by Salmon, but this is where I would need your feedback. . The idea is to look for the number of reads that map to two versions of a gene. The gene is split into two version by exon skipping and is not alternatively spliced. I also want to make this process fast as the idea would be to look for differences in the proportions of gene versions that are created based on a large databases of RNAseq data (easily 200+ different RNAseq experiments). So to make it quick I am only passing two transcripts to Salmon (T - 1, and T - 2) for version 1 and 2 of the transcript, where version 2 has the 2nd exon (of 4 total exons) removed. . Now I know Salmon was created to map reads to a large number of transcripts across the whole genome, but I believe it still should be possible to narrow down the view to only 1 gene with 2 versions. I believe I just need to set the parameters right, but I also want to set the parameters in a general way so that my script can work across different species with different input RNAseq data. The other problem is that we currently do not have an idea of what proportion of these two versions of the gene should actually exist in the RNAseq data I have (which we didn't perform but just grabbed a random sample from GenBank to test with). My adviser wants to first try and test it computationally first and then verify it in the lab (which is somewhat backwards in my mind, as it's really just a shot in the dark and from my preliminary analysis of Salmon, different parameters can drastically change the proportions of the two versions). . As you can see below, I have tried some parameter settings that I thought would be helpful (particularly ```--quasiCoverage```). But again I could be wrong and ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/401:1297,down,down,1297,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/401,1,['down'],['down']
Availability,lue=; ac_cv_env_host_alias_set=; ac_cv_env_host_alias_value=; ac_cv_env_target_alias_set=; ac_cv_env_target_alias_value=; ac_cv_host=arm-apple-darwin22.6.0; ac_cv_path_install='/usr/bin/install -c'; ac_cv_prog_AWK=awk; ac_cv_prog_ac_ct_CC=/Library/Developer/CommandLineTools/usr/bin/cc; ac_cv_prog_make_make_set=yes; am_cv_make_support_nested_variables=yes; gl_cv_posix_shell=/bin/sh. ## ----------------- ##; ## Output variables. ##; ## ----------------- ##. ACLOCAL='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing aclocal-1.15'; AMDEPBACKSLASH='\'; AMDEP_FALSE='#'; AMDEP_TRUE=''; AMTAR='$${TAR-tar}'; AM_BACKSLASH='\'; AM_CFLAGS=''; AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'; AM_DEFAULT_VERBOSITY='1'; AM_V='$(V)'; AR=''; AS=''; AUTOCONF='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoconf'; AUTOHEADER='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing autoheader'; AUTOMAKE='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing automake-1.15'; AWK='awk'; CC='/Library/Developer/CommandLineTools/usr/bin/cc'; CCAS=''; CCASDEPMODE=''; CCASFLAGS=''; CCDEPMODE=''; CFLAGS=''; CFLAG_VISIBILITY=''; COND_ASM_X86_64_FALSE=''; COND_ASM_X86_64_TRUE='#'; COND_ASM_X86_FALSE=''; COND_ASM_X86_TRUE='#'; COND_CHECK_CRC32_FALSE='#'; COND_CHECK_CRC32_TRUE=''; COND_CHECK_CRC64_FALSE='#'; COND_CHECK_CRC64_TRUE=''; COND_CHECK_SHA256_FALSE='#'; COND_CHECK_SHA256_TRUE=''; COND_DECODER_ARMTHUMB_FALSE='#'; COND_DECODER_ARMTHUMB_TRUE=''; COND_DECODER_ARM_FALSE='#'; COND_DECODER_ARM_TRUE=''; COND_DECODER_DELTA_FALSE='#'; COND_DECODER_DELTA_TRUE=''; COND_DECODER_IA64_FALSE='#'; COND_DECODER_IA64_TRUE=''; COND_DECODER_LZMA1_FALSE='#'; COND_DECODER_LZMA1_TRUE=''; COND_DECODER_LZMA2_FALSE='#'; COND_DECODER_LZMA2_TRUE=''; COND_DECODER_LZ_FALSE='#'; COND_DECODER_LZ_TRUE=''; COND_DECODER_POWERPC_FALSE='#'; COND_DECODER_POWERPC_TRUE=''; COND_DECODER_SIMPLE_FALSE=,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:9660,Down,Downloads,9660,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Down'],['Downloads']
Availability,"lzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/R10003_D19KGACXX/logs; [1m[2017-03-07 03:00:05.319] [jointLog] [info] parsing read library format; [00m[1m[2017-03-07 03:00:05.337] [joi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:2341,avail,available,2341,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['avail'],['available']
Availability,"m github. **Describe the bug**; A clear and concise description of what the bug is. core dumped crash on building index process. **To Reproduce**; Steps and data to reproduce the behavior:. wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/cdna/Mus_musculus.GRCm39.cdna.all.fa.gz ; wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; grep ""^>"" <(gunzip -c Mus_musculus.GRCm39.dna.primary_assembly.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Mus_musculus.GRCm39.cdna.all.fa.gz Mus_musculus.GRCm39.dna.primary_assembly.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.8.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable. * Which reference (e.g. transcriptome) was used?; downloaded executable; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. salmon-1.8.0_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index; Version Info: This is the most recent version of salmon.; index [""Mus_musculus.GRCm39_v1.8.0_decoy.index""] did not previously exist . . . creating it; [2022-06-01 18:13:38.986] [jLog] [info] building index; out : Mus_musculus.GRCm39_v1.8.0_decoy.index; [2022-06-01 18:13:38.986] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178537.2], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178862.2], ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783:1117,down,downloaded,1117,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783,2,['down'],['downloaded']
Availability,"mates2 ] => { /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR2557119_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ output ] => { quants/SRR2557119_quant }; ### [ gcBias ] => { }; Logs will be written to quants/SRR2557119_quant/logs; [2020-12-13 19:07:51.508] [jointLog] [info] setting maxHashResizeThreads to 8; [2020-12-13 19:07:51.508] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-12-13 19:07:51.508] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-12-13 19:07:51.508] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2020-12-13 19:07:51.508] [jointLog] [info] parsing read library format; [2020-12-13 19:07:51.508] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/gencode_v36_decoy_salmon-1.4.0/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; ```. **To Reproduce**; Steps and data to reproduce the behavior:; Building the index:; 1. Download the transcript and the genome sequence of human, latest version; ```; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_36/GRCh38.primary_assembly.genome.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_36/gencode.v36.transcripts.fa.gz; ```; 2. unzip:; ```; gunzip gencode.v36.transcripts.fa.gz; gunzip GRCh38.primary_assembly.genome.fa.gz; ```; 3. following the instruction for building a SAF salmon index (https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ https://salmon.readthedocs.io/en/latest/salmon.html#what-s-this-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/603:1499,Error,Error,1499,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603,1,['Error'],['Error']
Availability,"ment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501367_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501367 }; Logs will be written to salmonRes_SRR1501367/logs; [2021-07-16 11:47:01.372] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.372] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.372] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.372] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.372] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.372] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.380] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:1117,Error,Error,1117,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['Error'],['Error']
Availability,"ment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501368_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501368 }; Logs will be written to salmonRes_SRR1501368/logs; [2021-07-16 11:47:01.380] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.380] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.380] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.380] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.380] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.380] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501370_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501370 }; Logs will be written to salmonRes_SRR1501370/logs; [2021-07-16 11:47:01.393] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.393] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.393] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:2406,Error,Error,2406,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['Error'],['Error']
Availability,"ment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501369_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501369 }; Logs will be written to salmonRes_SRR1501369/logs; [2021-07-16 11:47:01.387] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.387] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.387] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.387] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.387] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.387] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501372_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501372 }; Logs will be written to salmonRes_SRR1501372/logs; [2021-07-16 11:47:01.614] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.614] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.614] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:4984,Error,Error,4984,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['Error'],['Error']
Availability,"ment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501370_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501370 }; Logs will be written to salmonRes_SRR1501370/logs; [2021-07-16 11:47:01.393] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.393] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.393] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.393] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.393] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.393] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501369_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501369 }; Logs will be written to salmonRes_SRR1501369/logs; [2021-07-16 11:47:01.387] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.387] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.387] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:3695,Error,Error,3695,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['Error'],['Error']
Availability,"ment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501371_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501371 }; Logs will be written to salmonRes_SRR1501371/logs; [2021-07-16 11:47:01.610] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.610] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.610] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.610] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.610] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.610] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501373_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501373 }; Logs will be written to salmonRes_SRR1501373/logs; [2021-07-16 11:47:01.638] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.638] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.638] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:7562,Error,Error,7562,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['Error'],['Error']
Availability,"ment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501372_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501372 }; Logs will be written to salmonRes_SRR1501372/logs; [2021-07-16 11:47:01.614] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.614] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.614] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.614] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.614] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.614] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501371_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501371 }; Logs will be written to salmonRes_SRR1501371/logs; [2021-07-16 11:47:01.610] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.610] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.610] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:6273,Error,Error,6273,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['Error'],['Error']
Availability,"ment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR1501373_1_trimmed.fq }; ### [ output ] => { salmonRes_SRR1501373 }; Logs will be written to salmonRes_SRR1501373/logs; [2021-07-16 11:47:01.638] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.638] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.638] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-07-16 11:47:01.638] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-07-16 11:47:01.638] [jointLog] [info] parsing read library format; [2021-07-16 11:47:01.638] [jointLog] [info] There is 1 library.; Exception : [Error: This version of salmon does not support indexing using the RapMap index.]; /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try /Users/jcm161/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; Version Server Response: Not Found; ### salmon (selective-alignment-based) v1.5.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ref//salmon.index.human.122116 }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2173891_trimmed.fq }; ### [ output ] => { salmonRes_SRR2173891 }; Logs will be written to salmonRes_SRR2173891/logs; [2021-07-16 11:47:01.649] [jointLog] [info] setting maxHashResizeThreads to 5; [2021-07-16 11:47:01.649] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-07-16 11:47:01.649] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [202",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/685:8851,Error,Error,8851,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/685,1,['Error'],['Error']
Availability,"mmand line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-darwin22.6.0; configure:2993: checking host system type; configure:3006: resu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:2104,avail,available,2104,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['avail'],['available']
Availability,"mon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:62: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2011:38: error: overloaded function with no contextual type information; rapmap::utils::writeSAMHeader(*index, salmonOpts.qmLog);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2014:25: error: ‘parserPtr’ was not declared in this scope; processReadsQuasi(parserPtr.get(), readExp, rl, structureVec[i],; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In instantiation of ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vect",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:2389,error,error,2389,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"mplemented type 'char' in 'eval'. R[write to console]: In addition: ; R[write to console]: Warning message:. R[write to console]: call dbDisconnect() when finished working with a connection . ---------------------------------------------------------------------------; RRuntimeError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 168 if reductor:; --> 169 rv = reductor(4); 170 else:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/sexp.py in __getstate__(self); 123 self.__sexp__._cdata,; --> 124 globalenv.__sexp__._cdata); 125 ). /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/rpy2/rinterface_lib/_rinterface_capi.py in serialize(cdata, cdata_env); 412 if error_occured[0]:; --> 413 raise embedded.RRuntimeError(_geterrmessage()); 414 return res. RRuntimeError: Error in (function (object, connection, ascii = FALSE, xdr = TRUE, version = NULL, : ; unimplemented type 'char' in 'eval'. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d = id(x); 142 y = memo.get(d, _nil). SystemError: <built-in function id> returned a result with an error set. The above exception was the direct cause of the following exception:. SystemError Traceback (most recent call last); /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 140 ; --> 141 d =",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:1471,Error,Error,1471,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,1,['Error'],['Error']
Availability,"mum of 0.90% zero probability fragments; [2018-05-31 17:08:09.572] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2018-05-31 17:08:09.634] [jointLog] [info] Thread saw mini-batch with a maximum of 0.90% zero probability fragments; [2018-05-31 17:08:09.641] [jointLog] [info] Thread saw mini-batch with a maximum of 1.00% zero probability fragments; [2018-05-31 17:08:09.649] [jointLog] [info] Thread saw mini-batch with a maximum of 0.88% zero probability fragments; [2018-05-31 17:08:09.690] [jointLog] [info] Thread saw mini-batch with a maximum of 0.96% zero probability fragments; [2018-05-31 17:08:09.702] [jointLog] [info] Thread saw mini-batch with a maximum of 0.92% zero probability fragments; [2018-05-31 17:08:09.721] [jointLog] [info] Thread saw mini-batch with a maximum of 0.88% zero probability fragments; [2018-05-31 17:08:09.728] [jointLog] [info] Thread saw mini-batch with a maximum of 0.90% zero probability fragments; [2018-05-31 17:08:09.782] [jointLog] [info] Thread saw mini-batch with a maximum of 0.86% zero probability fragments; [2018-05-31 17:08:09.786] [jointLog] [info] Thread saw mini-batch with a maximum of 0.90% zero probability fragments. [2018-05-31 17:08:10.483] [jointLog] [info] Computed 582392 rich equivalence classes for further processing; [2018-05-31 17:08:10.483] [jointLog] [info] Counted 59985194 total reads in the equivalence classes; [2018-05-31 17:08:10.551] [jointLog] [info] Mapping rate = 88.2723%. [2018-05-31 17:08:10.551] [jointLog] [info] finished quantifyLibrary(); [2018-05-31 17:08:10.551] [jointLog] [info] Starting optimizer; [2018-05-31 17:08:11.488] [jointLog] [info] Marked 1 weighted equivalence classes as degenerate; [2018-05-31 17:08:11.523] [jointLog] [info] iteration = 0 | max rel diff. = 127.399; Exception : [Error in function boost::math::digamma<double>(double): numeric overflow]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/229:7377,Error,Error,7377,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/229,1,['Error'],['Error']
Availability,"n is a concern to me, because sequencing is expensive, and it'd be good to have an idea of whether we need to further improve our library prep (which would certainly be the case for 9X duplication, but less important with 3-5X duplication). Is anyone able to explain how the UMI deduplication is applied in Salmon Alevin, or why it might be different from other analysis platforms?. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? Binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v42; * Which read files were used? NovaSeq 6000 S2; * Which program options were used?. ```; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; --mrna ${indexDir}/mt_genes.txt --rrna ${indexDir}/rRNA_genes.txt \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} --whitelist goodSampleTagCells.txt \; -p 10 -o salmon_1.9_cbc_whitelist_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**. I would expect the Salmon Alevin PCR duplication estimate to be similar to that of SevenBridges, or my semi-manual attempt (e.g. 3-5X). **Desktop OS/Version:**. `Linux musculus 5.18.0-4-amd64 #1 SMP PREEMPT_DYNAMIC Debian 5.18.16-1 (2022-08-10) x86_64 GNU/Linux`. ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bookworm/sid; Release: unstable; Codename: sid; ```. **Additional Information**; The SevenBridges Rhapsody pipeline uses STAR v2.5.2b for annotating R2 reads, which are combined with R1 reads using custom python scripts (possibly involving calling HTSeq and Picard), then collapsed down to molecules using custom python scripts (apparently ""apply rsec and dbec correction to the (sorted) valid annotation dataset"").",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/808:3778,avail,available,3778,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808,2,"['avail', 'down']","['available', 'down']"
Availability,"n on Ubuntu Linux . My objective is to obtain the proportions of different alternative spliced transcripts, which I am doing via `quant` and using the TPMs to get the proportions of 'primary' transcript versus 'spliced' transcript. I am currently working with 5 genes (Genes A-E) from Soybean (Glycine max Wm82.a2.v1), to which I also created decoys using `DecoyTranscriptome.sh` and the soybean genome and gtf. An example of a concern (See Table below) I have is that when I run Genes A, B, C, and D I get a certain set a results. However, when I run all the genes together (Genes A-E), the results from Gene C and Gene D are drastically different, but this is only under certain parameters (red highlight). If I alter the parameters and compare the results of the 4 gene run and the 5 gene run the results are comparable. . Param 1 = `-- validateMappings --gcBias --recoverOrphans --softclipOverhangs --allowDovetail --posBias --scoreExp 0.0 --consensusSlack 0.95 --rangeFactorizationBins 5 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.9`. Param 2 = `-- validateMappings --gcBias --scoreExp 1.0 --consensusSlack 0.2 --rangeFactorizationBins 4 --numBootstraps 1000 --bootstrapReproject --minScoreFraction 0.85`. I am a trying to understand how the addition of one gene into the run would affect the results of other genes so much and causes concern to me as results can differ so much with the removal or addition of even one gene. It almost appears that the proportions are just switched for first run, except the V1 trifolate dataset of Gene C which showed at least similar proportions between runs with Param 1 (yellow highlight). . ![Capture](https://user-images.githubusercontent.com/29610303/82713697-1a89b700-9c49-11ea-8038-8cc2d65c7f02.PNG). Please let me know if you need to see additional files, I just wanted to summarize what I was seeing here. I didn't receive any errors during these runs, just the results of Gene C and Gene D varying for a reason I cannot pinpoint.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/524:1977,error,errors,1977,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/524,1,['error'],['errors']
Availability,"n/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; [root@fsutil02 build]#; [root@fsutil02 build]# vim salmon^C; [root@fsutil02 build]# cd ..; [root@fsutil02 salmon]# vim salmon.build.error; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; In file included from /usr/include/c++/4.8.2/memory:81:0,; from /usr/include/c++/4.8.2/thread:40,; from /opt/build/salmon/src/SalmonQuantify.cpp:35:; /usr/include/c++/4.8.2/bits/unique_ptr.h: In instantiation of ‘void std::unique_ptr<_Tp, _Dp>::reset(std::unique_ptr<_Tp, _Dp>::pointer) [with _Tp = fastx_parser::FastxParser<fastx_parser::ReadSeq>; _Dp = processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:44415,Error,Error,44415,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['Error'],['Error']
Availability,"nally Salmon (via Bioconda) on my PC. However, when I run any order (making index or do quant), I get this error message:. salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). I checked what this means and thought this is because this Ubuntu may not have GLIBC C++ library, so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda, official install order code; * Which reference (e.g. transcriptome) was used?; Arabidopsis (not important for the issue); * Which read files were used?; Arabidopsis (not important for the issue); * Which which",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/927:1229,error,error,1229,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927,1,['error'],['error']
Availability,"nce to `deflateEnd'; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-compression.o): In function `zlib_dehuff':; compression.c:(.text+0x2f7): undefined reference to `inflateInit_'; compression.c:(.text+0x371): undefined reference to `inflate'; compression.c:(.text+0x3b4): undefined reference to `inflateEnd'; collect2: error: ld returned 1 exit status; Makefile:606: recipe for target 'convert_trace' failed; make[5]: *** [convert_trace] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; ```. The internet tells me it's probably an issue with the order that the libraries are specified to gcc in or that gcc needs a `-lz` flag. However I don't even know where that gcc command is coming from. **To Reproduce**. This is difficult, because I would assume that the errors I'm seeing are specific to my machine. However I can say that I ran; ```; ./cmake-3.14.5-Linux-x86_64/bin/cmake -DFETCH_BOOST=TRUE; ```. and then. ```; make; ```. **Expected behavior**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. *",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:2017,Error,Error,2017,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,2,['Error'],['Error']
Availability,"nclude/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_INSTALL_PREFIX:PATH=/gpfs/software/salmon/xeonmax/gcc13.2.0/1.10.3. make clean; make -j 25; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? **1.10.3**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **compiled**. **Expected behav",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:2761,Error,Error,2761,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['Error'],['Error']
Availability,"nd failed at ; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:1242,down,download,1242,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,1,['down'],['download']
Availability,"nda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:40:21.543] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:40:21.543] [jointLog] [info] Fragment incompatibility pri",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:1635,avail,available,1635,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['avail'],['available']
Availability,"ndefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xd13f): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::processQuantOptions(SalmonOpts&, boost::program_options::variables_map&, int)':; SalmonUtils.cpp:(.text+0xeb97): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0xec0a): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xf846): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. I have the following environment variables set:. INCLUDE=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; C_INDLUE_PATH=/opt/boost-1.67.0/include; LD_LIBRARY_PATH=/opt/boost-1.67.0/lib:/opt/gcc-8.2.0/lib64:/opt/gcc-8.2.0/lib/gcc/x86_64-pc-linux-gnu/8.2.0; CPLUS_INCLUDE_PATH=/opt/boost-1.67.0/include:/opt/gcc-8.2.0/include; CXX=/opt/gcc-8.2.0/bin/g++; CC=/opt/gcc-8.2.0/bin/gcc. My cmake command was simply cmake -DCMAKE_INSTALL_PREFIX:PATH=/opt/salmon ../. Thanks!. -Nate",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/309:2151,error,error,2151,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309,4,"['Error', 'error']","['Error', 'error']"
Availability,"ned_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-11-04 16:49:44.699] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""combined_BC01_aligned.bam"", fasta = ""/scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa"" . . .done. processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2152693 Bus error (core dumped); ```. Any advice on this would be highly appreciated!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/898:2460,error,error,2460,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898,1,['error'],['error']
Availability,nfo] Thread saw mini-batch with a maximum of 9.94% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.26% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.30% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.56% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.48% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.16% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 10.02% zero probability fragments; [2018-06-30 22:12:13.116] [jointLog] [info] Thread saw mini-batch with a maximum of 9.84% zero probability fragments; [2018-06-30 22:12:13.117] [jointLog] [info] Thread saw mini-batch with a maximum of 10.24% zero probability fragments; [2018-06-30 22:12:13.120] [jointLog] [info] Thread saw mini-batch with a maximum of 10.88% zero probability fragments; [2018-06-30 22:12:13.141] [jointLog] [info] Thread saw mini-batch with a maximum of 10.26% zero probability fragments; [2018-06-30 22:12:13.146] [jointLog] [info] Thread saw mini-batch with a maximum of 10.14% zero probability fragments; [2018-06-30 22:12:13.160] [jointLog] [info] Thread saw mini-batch with a maximum of 10.24% zero probability fragments. [2018-06-30 22:12:13.224] [jointLog] [info] Computed 22103 rich equivalence classes for further processing; [2018-06-30 22:12:13.224] [jointLog] [info] Counted 12658995 total reads in the equivalence classes; [2018-06-30 22:12:13.224] [jointLog] [info] Mapping rate = 71.4689%. [2018-06-30 22:12:13.224] [jointLog] [info] finished quantifyLibrary(); [2018-06-30 22:12:13.424] [alevinLog] [info] Starting optimizer. Analyzed 1137 cells (11% of all).; ERROR: cell doesn't have any read count; ```,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/245:5946,ERROR,ERROR,5946,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/245,1,['ERROR'],['ERROR']
Availability,"ng unsigned int]::__lambda34; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: candidate expects 1 argument, 3 provided; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2082:98: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadPair>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >*)’; if (isPairedEnd) { processFunctor(i, pairedParserPtr, sidx->quasiIndexPerfectHash32()); }; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:14815,error,error,14815,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"ng:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an error. Note I did not delete the output between tests). Not a huge issue, but figured it could affect others in the future as well (took me quite a while to figure out the issue due to the lack of error message) so should report it. ## Expected behavior. When -l comes before -1/-2, the error message:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to su",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:1660,error,error,1660,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,1,['error'],['error']
Availability,"ng] Only 268744 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2023-11-30 09:38:33.436] [jointLog] [info] Mapping rate = 53.7596%. [2023-11-30 09:38:33.436] [jointLog] [info] finished quantifyLibrary(); [2023-11-30 09:38:33.440] [jointLog] [info] Starting optimizer; [2023-11-30 09:38:33.498] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2023-11-30 09:38:33.511] [jointLog] [info] iteration = 0 | max rel diff. = 101.852; [2023-11-30 09:38:34.853] [jointLog] [info] iteration = 100 | max rel diff. = 0.263537; [2023-11-30 09:38:36.144] [jointLog] [info] iteration = 200 | max rel diff. = 0.0414157; [2023-11-30 09:38:37.438] [jointLog] [info] iteration = 300 | max rel diff. = 1.17048; [2023-11-30 09:38:38.135] [jointLog] [info] iteration = 355 | max rel diff. = 0.00351135; [2023-11-30 09:38:38.148] [jointLog] [info] Finished optimizer; [2023-11-30 09:38:38.148] [jointLog] [info] writing output ; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - Linux r640c10 4.18.0-372.16.1.el8_6.x86_64 #1 SMP Tue Jun 28 03:02:21 EDT 2022 x86_64 GNU/Linux. **Additional context**; Add any other context about the problem here.; The issue is definitely not insufficient memory (>300 GB available). ; Interestingly, the same salmon index was working perfectly until now. I re-created the index to make sure the files were not corrupted somehow but it resulted in the same error. I doubt that this is due to an update in salmon itself, because we have been using the same singularity container for this process for a while, so the same salmon version, same index now producing the error. . For my use case, not using the `--skipQuant` doesn't really cause any problem. I just wanted to report the bug.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:10398,avail,available,10398,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,3,"['avail', 'error']","['available', 'error']"
Availability,"nst&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/551:2617,down,downloaded,2617,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551,1,['down'],['downloaded']
Availability,nstall libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; CMakeFiles/Makefile2:257: recipe for target 'CMakeFiles/libstadenio.dir/all' failed; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; Makefile:1,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:4530,ERROR,ERROR,4530,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,1,['ERROR'],['ERROR']
Availability,"nstall the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - $ lsb_release -a; ba",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/677:1984,echo,echo,1984,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677,1,['echo'],['echo']
Availability,"nt; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadSeq>*&)’; get_deleter()(__p);; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2`. * Which version of salmon was used?; Salmon 0.3.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Cloned from git as latest source and attempted to cmake + make && make install . **Expected behavior**; A clear and concise description of what you expected to happen.; Expecting the makefile to use c++14 correctly to process the ""auto p"" variable the way it is intended within the template functions. See SalmonQuantify.cpp:1964 with errors regarding ""p was not declared in this scope"". . **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Centos 7 ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; 7.4",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:49620,Error,Error,49620,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,5,"['Error', 'down', 'error']","['Error', 'downloaded', 'errors']"
Availability,"ntLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2023-10-11 16:03:44.490] [jointLog] [info] parsing read library format; [2023-10-11 16:03:44.491] [jointLog] [info] There is 1 library.; [2023-10-11 16:03:45.109] [jointLog] [info] Loading Quasi index; [2023-10-11 16:03:45.111] [jointLog] [info] Loading 32-bit quasi index; [2023-10-11 16:03:45.173] [stderrLog] [info] Loading Suffix Array ; [2023-10-11 16:03:46.096] [stderrLog] [info] Loading Transcript Info ; [2023-10-11 16:03:46.382] [stderrLog] [info] Loading Rank-Select Bit Array; [2023-10-11 16:03:46.474] [stderrLog] [info] There were 6195946 set bits in the bit array; [2023-10-11 16:03:46.481] [stderrLog] [info] Computing transcript lengths; [2023-10-11 16:03:46.481] [stderrLog] [info] Waiting to finish loading hash; [2023-10-11 16:03:56.007] [jointLog] [info] done; [2023-10-11 16:03:56.007] [jointLog] [info] Index contained 3744 targets; [2023-10-11 16:03:56.006] [stderrLog] [info] Done loading index; ; qemu: uncaught target signal 11 (Segmentation fault) - core dumped; .command.sh: line 9: 64 Segmentation fault salmon quant --validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1; ```. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux 0f0e43816679 6.4.16-linuxkit. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:3800,fault,fault,3800,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,2,['fault'],['fault']
Availability,"o ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/Salmon_tx/${ID}. echo ""**** Job ends ****""; date; ```. The important part is that we are requesting 1 single core with 80 GB of free memory and setting the limit at 90 GB. We are also using the `-p 1` option. . Here is the log file for one of them (task 3):. ```; **** Job starts ****; Mon Mar 6 23:19:13 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9958683; Job name: step6-txQuant-alzheimer.gsk_phaseII; Hostname: compute-068; Task id: ; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:1818,echo,echo,1818,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['echo'],['echo']
Availability,o probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.399] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.432] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.469] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.513] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.582] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.605] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.631] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.678] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.679] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.739] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments; [2018-07-30 16:26:22.771] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.807] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.828] [jointLog] [info] Thread saw mini-batch with a maximum of 0.08% zero probability fragments; [2018-07-30 16:26:22.896] [jointLog] [info] Thread saw mini-batch with a maximum of 0.06% zero probability fragments. Segmentation fault (core dumped); ```. The environment is Linux Elmo 3.16.0-77-generic #99~14.04.1-Ubuntu SMP Tue Jun 28 19:17:10 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux. Any help would be much appreciated,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/261:4735,fault,fault,4735,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/261,1,['fault'],['fault']
Availability,"o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.7.1908 (Core); Release:	7.7.1908; Codename:	Core. **Additional context**; I want to trace the code while running ""salmon index ......"", ""salmon qu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:3004,error,error,3004,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,1,['error'],['error']
Availability,"oading Suffix Array; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Transcript Info; [2017-10-25 10:57:26.004] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-10-25 10:57:26.005] [stderrLog] [info] There were 28 set bits in the bit array; [2017-10-25 10:57:26.005] [stderrLog] [info] Computing transcript lengths; [2017-10-25 10:57:26.005] [stderrLog] [info] Waiting to finish loading hash; [2017-10-25 10:57:26.012] [stderrLog] [info] Done loading index. processed 81500000 fragments; hits: 0; hits per frag: 0. [2017-10-25 10:58:22.290] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-10-25 10:58:22.290] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-10-25 10:58:22.293] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-10-25 10:58:22.293] [jointLog] [info] Mapping rate = 0%. [2017-10-25 10:58:22.293] [jointLog] [info] finished quantifyLibrary(); [2017-10-25 10:58:22.295] [jointLog] [info] Starting optimizer; [2017-10-25 10:58:22.308] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 0 | max rel diff. = 0.455425; [2017-10-25 10:58:22.308] [jointLog] [info] iteration = 50 | max rel diff. = -1.79769e+308; [2017-10-25 10:58:22.308] [jointLog] [error] Total alpha weight was too small! Make sure you ran salmon correclty.; [2017-10-25 10:58:22.308] [jointLog] [error] The optimization algorithm failed. This is likely the result of bad input (or a bug). If you cannot track down the cause, please report this issue on GitHub. I had a look at my fastq and all seems normal (?):. @HF1_23952:5:1101:9161:20709/1; CTCACAAGAGTGTGATCCAAGTCGGCCGTCGTCTTCTGCA; +; AAFFFJJJFJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ; @HF1_23952:5:1101:9343:20814/1; CTCACAAGAGTGTGATCCAAGTCGGCCGTCGTCTTCTGCA; +. Thank you for your help,; Rute",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/167:2465,error,error,2465,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/167,3,"['down', 'error']","['down', 'error']"
Availability,"oading positions | Time = 171.81 s; -----------------------------------------; size = 3221360466; -----------------------------------------; | Loading reference sequence | Time = 7.9564 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 35.741 ms; -----------------------------------------; Index requested greater than vector's size: 6442720932>6442720932; Index requested greater than vector's size: 6442720996>6442720932; Index requested greater than vector's size: 6442721060>6442720932; Index requested greater than vector's size: 6442721124>6442720932; Index requested greater than vector's size: 6442721188>6442720932; Index requested greater than vector's size: 6442721252>6442720932; Index requested greater than vector's size: 6442721316>6442720932; Index requested greater than vector's size: 6442721380>6442720932; Index requested greater than vector's size: 6442721444>6442720932; ...; ```. The index does not finish loading, and so salmon does not enter read quantification routines. **To Reproduce**. * Which version of salmon was used? 1.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Github release tarball; * Which reference (e.g. transcriptome) was used?; Gencode v32, with additional elements representing genic introns and intergenic spaces.; * Which read files were used?; NCBI SRA run accession GSM2392582; * Which which program options were used?; --no-version-check --libType ISR --threads 4 --seqBias --gcBias --useVBOpt. **Expected behavior**; I expected index loading to complete successfully.; **Desktop (please complete the following information):**; - OS: CentOS6. **Additional context**; I've uploaded the index file archive [here](https://www.icloud.com/iclouddrive/00DWWhkSucg2BTWLuFswSHwvQ#rapmap_issue_8_index) and the transcripts fasta file [here](https://www.icloud.com/iclouddrive/0oCdFG64TJe0IlvkYyIUZRfSQ#rapmap_issue_8_transcripts).",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/463:2748,down,downloaded,2748,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/463,1,['down'],['downloaded']
Availability,"ocal/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/268:1666,error,error,1666,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268,1,['error'],['error']
Availability,"ocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const' follow; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/551:2221,Error,Error,2221,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551,2,['Error'],['Error']
Availability,"ode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz; * Which read files were used? not quantifying yet, I'm at the indexing step.; * Which which program options were used? salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Expected behavior**; A clear and concise description of what you expected to happen.; Producing directory that contains indexed files to be applied to ""salmon quant"" command. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 2 pictures: a segmentation fault screenshot and a gdb backtrack screenshot in ""**To Reproduce**"" section. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] : CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; - ""lsb_release -a""; LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.7.1908 (Core); Release: 7.7.1908; Codename: Core; ; **Additional context**; Thanks for your help in advance.; Best,; kai2june",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:3219,fault,fault,3219,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,1,['fault'],['fault']
Availability,"oduce**; First, I put the UMI in front of the barcode.; `zcat R2.fastq.gz | paste - - - - | awk '{print $1"" ""$2""\n""substr($3,9,8)substr($3,1,8)substr($3,17)""\n""$4""\n""$5}' | pigz -p8 > R2_Alevin.fq.gz`. then, I run Alevin with:; `salmon alevin -lA -i ref_genome/index/ --barcodeLength 8 --umiLength 8 --end 5 -1 fq/R2_Alevin.fq.gz -2 fq/R1.fastq.gz -p 8 --tgMap ref_genome/gencode.vM20.tx2gene.tsv -o alevin_out --dumpUmiGraph --dumpFeatures --dumpCsvCounts --whitelist BC.whitelist`. This seems to work: the library is 47M and the _filtered_cb_frequency.txt_ contains 43M assigned barcodes in total. The _MappedUmi.txt_ contains 18.5M UMIs, fitting perfectly with the reported alignment rate of ~40% (which is relatively low, but OK for this library). Also if I use the `--dumpfq` option, the barcodes and UMIs are nicely attached to the sequencing reads. Strangely, if I sum the entries in the CSV or binary quant matrix, I get ~3.75M reads. ; ; I was able to run the 10x PBMC4k example and there, the sum of the count matrix entries indeed fitted the reported UMI counts and mapping rate. . Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable and bioconda give the same result. * Which reference (e.g. transcriptome) was used?; mouse gencode vM20 (mm10). * Which read files were used?; adapted celseq2 protocol. * Which program options were used?; See above. **Expected behavior**; I expected a total of 18.5M counts in the quant matrix, where the sums per barcode fit those reported in the _MappedUmi.txt_ Is my assumption that the quant matrix should only contain integers correct?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; Ubuntu 18.04.1 LTS. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/361:1709,down,downloaded,1709,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/361,2,['down'],['downloaded']
Availability,"of processes to two. Thanks!. ```; (gdb) run alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 11:55:47.378] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffd797e8700 (LWP 27869)]; [New Thread 0x7ffcf97e7700 (LWP 27870)]; [2018-06-08 11:55:47.387] [alevinLog] [info] Proces",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:1434,avail,available,1434,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,1,['avail'],['available']
Availability,"of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I only got that error after changing up the arguments I used (for whatever reason the original arguments did not allow for the error to be reported correctly to the user) and updating the name of the output I used (ran the exact same command that gave me the error with the old output name (res) and it did not give an e",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:1306,error,errors,1306,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,1,['error'],['errors']
Availability,"oid)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create -o CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -c /usr/share/cmake-3.7/Modules/CheckFunctionExists.c; Linking C executable cmTC_dd9f2; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dd9f2.dir/link.txt --verbose=1; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -o cmTC_dd9f2 -rdynamic -lpthreads ; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dd9f2.dir/build.make:97: recipe for target 'cmTC_dd9f2' failed; make[1]: *** [cmTC_dd9f2] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dd9f2/fast' failed; make: *** [cmTC_dd9f2/fast] Error 2. ```. Some search on the internet suggests me that sometimes `-lpthread` should be used instead of `-lpthreads`. And indeed, if I try to compile the following code:; ```; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }; ```. I observe a failure with `-lpthreads`:; ```; $ cc -lpthreads /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; /usr/bin/ld: cannot find -lpthreads; collect2: error: ld returned 1 exit status; ```. And a success with `-lpthread`:. ```; $ cc -lpthread /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/207:2509,error,error,2509,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207,1,['error'],['error']
Availability,"ok, this is not really a bug but I think it needs attention. i am using anaconda environment for many tools and keep it updated as much as possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/286:362,down,downgrade,362,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286,2,['down'],"['downgrade', 'downloaded']"
Availability,"om [this study](https://www.ncbi.nlm.nih.gov/Traces/study/?acc=PRJNA590042&o=acc_s%3Aa), and tried to map them using `Alevin`. following `fastq-dump` I generated the barcode fastq files using `umi-tools`, this is a 3' PE Chromium scRNASeq, so I used; ```; umi_tools extract \; --stdin=GSE140511/fastq_files/SRR10480618_1.fastq.gz \; --stdout GSE140511/fastq_files/SRR10480618_BC_1.fastq.gz \; --read2-in GSE140511/fastq_files/SRR10480618_2.fastq.gz \; --read2-out GSE140511/fastq_files/SRR10480618_BC_2.fastq.gz \; --bc-pattern=CCCCCCCCCCCCCCCCNNNNNNNNNN \; --log=processed_SRR10480618.log; ```. following this step I then ran it on Alevin with ; ```; salmon alevin \; -l ISR \; -1 GSE140511/fastq_files/SRR10480618_BC_1.fastq.gz GSE140511/fastq_files/SRR10480618_BC_2.fastq.gz \; -2 GSE140511/fastq_files/SRR10480618_1.fastq.gz GSE140511/fastq_files/SRR10480618_2.fastq.gz \; --chromium \; -i /data/shared/seb_temp/Mm_index \; -p 32 \; -o /home/seb/shared/seb_temp/GSE140511/salmon_alevin_output/SRR10480618 \; --tgMap /home/seb/shared/seb_temp/txp2gene_SB.tsv; ```. my `txp2gene` file looks like this; ```; ENSMUST00000178537.2 ENSMUSG00000095668.2; ENSMUST00000178862.2 ENSMUSG00000094569.2; ENSMUST00000196221.2 ENSMUSG00000096749.3; ENSMUST00000179664.2 ENSMUSG00000096749.3; ENSMUST00000177564.2 ENSMUSG00000096176.2; ENSMUST00000179520.2 ENSMUSG00000094028.2; ENSMUST00000179883.2 ENSMUSG00000094552.2; ENSMUST00000195858.2 ENSMUSG00000096420.3; ENSMUST00000179932.2 ENSMUSG00000096420.3; ENSMUST00000180001.2 ENSMUSG00000095656.2; ```; and I generated it using the gtf file created by indexing the genome. however, when `salmon alevin` finishes its run, I get a mapping rate of 3% or less, and no errors are generated. I then tried to pass the barcodes that are published in GEO for this sample as `whitelist` adding the following argument; `--whitelist GSM4173504_WT_1_barcodes.tsv`; but here the mapping rate goes down to 0%!!. I am not sure what's going on...any suggestion would be great.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/763:1760,error,errors,1760,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/763,2,"['down', 'error']","['down', 'errors']"
Availability,"ompute minutes for public repositories](https://docs.github.com/en/actions/learn-github-actions/usage-limits-billing-and-administration#about-billing-for-github-actions). #### What types of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:3447,error,error,3447,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['error'],['error']
Availability,"on fails without warning when using --recoverOrphans as part of quasi mapping. Dropping --recoverOrphans allows for job to be completed. Salmon exits with a nonzero exit code: 9 otherwise (shows as 9:0 with squeue). This also may be related to #929 . **To Reproduce**; Steps and data to reproduce the behavior:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:1207,recover,recoverOrphans,1207,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,2,['recover'],['recoverOrphans']
Availability,"on linux, binary download of salmon: salmon-0.11.2-linux_x86_64. Trying to process some Drop-seq data. Command:. ./salmon-0.11.2-linux_x86_64/bin/salmon alevin -l A -1 data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq -2 data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq --dropseq -p 10 -o mSpT3 -i mouse_cdna --tgMap biomart.csv. Where I have downloaded the cdna as FASTA from biomart, and also generated a ENSMUST to ENSMUSG biomart.csv mapping file. Log is below. Since this is our first attempt at dropseq I also pulled out the first R1 and R2 sequences, in case these are somehow informative:. R1:; CAGGAGTGGATTTAGTCCTT; CGCGGAAGATGAGCATTATG; TTTCGTGCCGCCCTCCCTCG; ACAGCGACAAGGCTACCTCA; AATAGGGTCAACGATTAGAG; CGGATGGTTCCCAGCTGCCT; ACATTTCCGCGGTAGGGGGG; GTGGCAAGATTTAATATCCG. R2:; GAATANNNNNNNNNNNNNNNNNNNNAAGGATAACAGTTTCCAGTAC; GGACATTGGTCANCNNGCAGACACGGGTCAATGCGGCAAAAAACAA; GCAACNNNNNNNNNNNNNNNNNNNNGACNAGCGGGCTCACCATAAT; GNGTGNNNNNNNNNNNNNNNNNNNNCGANGTGATTTCTGCCCAGTG; CCCGACTGTNCTNNNNAAGGTCAGCAGTTCAAATCCCAGCAACCAC no hits found; GAGTGNNNNNNNNNNNNNNNCNNNGGCGGTTAGTGCTGAGAGTGCG; GCATACTGGTTGNCNNGCTGAAGTTTAAGGGCCTGGTTTTTTGAAA Cdv3 or Ncoa; GCACCCNANNNCNNNNCCGNAGNTCTGAAGATCAAATCACAGCAAA. ============================; ============================; ============================. Version Info: This is the most recent version of Salmon.; Logs will be written to mSpT3/logs; ### salmon (single-cell-based) v0.11.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ mates1 ] => { data/mSpT3_S2_L001_R1_001.fastq data/mSpT3_S2_L002_R1_001.fastq }; ### [ mates2 ] => { data/mSpT3_S2_L001_R2_001.fastq data/mSpT3_S2_L002_R2_001.fastq }; ### [ dropseq ] => { }; ### [ threads ] => { 10 }; ### [ output ] => { mSpT3 }; ### [ index ] => { mouse_cdna }; ### [ tgMap ] => { biomart.csv }. [2018-08-29 11:26:45.317] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-29 11:26",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:17,down,download,17,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,2,['down'],"['download', 'downloaded']"
Availability,"on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can send you the salmon_quant.log or any other file that would be useful. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; OS CentOS 7.8; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/668:1328,down,downloaded,1328,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668,1,['down'],['downloaded']
Availability,"on/src/SalmonQuantify.cpp:977:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1210:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, r1ptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1213:99: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.matePos, r2ptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1224:93: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1234:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(), bu; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(single_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1557:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1682:91: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(al",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/254:3101,error,error,3101,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254,1,['error'],['error']
Availability,"one building index; for info, total work write each : 2.331 total work inram from level 3 : 4.322 total work raw : 25.000 ; Bitarray 528992256 bits (100.00 %) (array + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which which program options were used? see above. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. I am thinking this is an issue w/ building the index. If there is a pre-made index w/ or w/o decoys for mouse that you can direct me to I would appreciate it. Following the link posted in the salmon documentation about pre-made index's is not helpful and I am not sure how to download them from there. A ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:7867,down,downloaded,7867,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['down'],['downloaded']
Availability,"ong unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:62: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2011:38: error: overloaded function with no contextual type information; rapmap::utils::writeSAMHeader(*index, salmonOpts.qmLog);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2014:25: error: ‘parserPtr’ was not declared in this scope; processReadsQuasi(parserPtr.get(), readExp, rl, structureVec[i],; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In instantiation of ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2290:71: required from ‘quantifyLibrary(ReadExperimentT&, bool, SalmonOpts&, double, uint32_t) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; uint32_t = unsigned i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:2902,error,error,2902,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"or**; I expected the project to build and produce a binary I could use to test my changes. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version:. ```; lsb_release -a; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.2 LTS; Release:	18.04; Codename:	bionic; kurt@kurtputer:~/Development/refinebio-collab$ uname -a; Linux kurtputer 4.15.0-51-generic #55-Ubuntu SMP Wed May 15 14:27:21 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux; ```. **Additional context**; I was able to fix the following errors with these resolutions:; ```; ERROR:; CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; Please set them or make sure they are set and tested correctly in the CMake files:; CURL_LIBRARY; linked by target ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /us",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:3590,ERROR,ERROR,3590,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,2,"['ERROR', 'down']","['ERROR', 'download']"
Availability,"ore than 1 field. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * 1.4.0; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * conda create -n salmon -c conda-forge -c bioconda salmon; conda activate salmon. * Which reference (e.g. transcriptome) was used?; * generated index via ""Protein-coding transcript sequences"" here : https://www.gencodegenes.org/human/ ; * generated the txp2gene.tsv file via ""Comprehensive Gene Annotation, Region: PRI"" here: ; https://www.gencodegenes.org/human/release_37lift37.html. * Which read files were used?; * 5k_pbmc FASTQ file from 10x: https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_v3; ; * Which program options were used?; `salmon alevin -l ISR -1 5k_pbmc_v3_S1_L001_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz -2 5k_pbmc_v3_S1_L001_R2_001.fastq.gz 5k_pbmc_v3_S1_L002_R2_001.fastq.gz 5k_pbmc_v3_S1_L003_R2_001.fastq.gz --chromiumV3 -i index -p 10 -o alevin_output --tgMap txp2gene.tsv --dumpBfh --noDedup --dumpBarcodeEq; `. **Expected behavior**; The bfh.txt file should be parsed. In other words, the line `parser.read_bfh(""<PATH to alevin output folder>"", ""<PATH to t2g file>"")` should work without error, according to the tutorial below:; [https://combine-lab.github.io/alevin-tutorial/2018/output-format/](url). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Screenshot of error:; ![image](https://user-images.githubusercontent.com/65479405/115109114-7f0edc80-9fa6-11eb-93f5-d0d5524f7d56.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Ubuntu Linux; ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu 20.04.2 LTS (64 bit). **Additional context**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/650:2316,error,error,2316,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650,2,['error'],['error']
Availability,"ot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential security problems for you to investigate before merging a PR.; * On every push to your default branch ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:1043,error,errors,1043,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['error'],['errors']
Availability,"outputs/rnaseq_fastp/{sra}.fq.gz"",; json = ""outputs/rnaseq_fastp/{sra}.fastp.json"",; html = ""outputs/rnaseq_fastp/{sra}.fastp.html""; params: tmp_base = lambda wildcards: ""inputs/tmp_raw/"" + wildcards.sra; threads: 1; resources:; mem_mb=8000; run:; row = m.loc[m['experiment_accession'] == wildcards.sra]; fastqs = row['fastq_ftp'].values[0]; fastqs = fastqs.split("";""); if len(fastqs) == 1:; # single end data; download and stream directly to fastp for trimming.; fastq = fastqs[0]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + "".fastq.gz""):; shell(""wget -O {params.tmp_base}.fastq.gz ftp://{fastq}""). shell(""fastp -i {params.tmp_base}.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {output.reads}""). # check that the file exists, and if it does, remove raw fastq files; if os.path.exists(output.reads):; os.remove(params.tmp_base + "".fastq.gz""). else:; # paired end data; download both files, interleave, and then remove files; fastq_1 = fastqs[0]; fastq_2 = fastqs[1]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + ""_1.fastq.gz""):; shell(""wget -O {params.tmp_base}_1.fastq.gz ftp://{fastq_1}""). if not os.path.exists(params.tmp_base + ""_2.fastq.gz""):; shell(""wget -O {params.tmp_base}_2.fastq.gz ftp://{fastq_2}""). shell(""fastp -i {params.tmp_base}_1.fastq.gz -I {params.tmp_base}_2.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {output.reads}""). # check that the file exists, and if it does, remove raw fastq files; if os.path.exists(output.reads):; os.remove(params.tmp_base + ""_1.fastq.gz""); os.remove(params.tmp_base + ""_2.fastq.gz""); ```. However, I think it would be fine to reproduce from untrimmed files:; ```; wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR436/001/ERR4363141/ERR4363141.fastq.gz; ```. I generated the transcriptome by annotating all publicly available genomes for my species (*Faecalibacterium prausnitzii_C*). Using these annotations, I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:1472,down,download,1472,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['down'],['download']
Availability,"o’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:45: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:62: error: parameter declared ‘auto’; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2011:38: error: overloaded function with no contextual type information; rapmap::utils::writeSAMHeader(*index, salmonOpts.qmLog);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2014:25: error: ‘parserPtr’ was not declared in this scope; processReadsQuasi(parserPtr.get(), readExp, rl, structureVec[i],; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In instantiation of ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:2219,error,error,2219,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"p:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481dac12ac8cffd6d5d924699c5ad7e04.). Adjusting the fetchRapMap.sh script to use the SVER and EXPECTED_SHA256SUM variables back to their values in commit COMBINE-lab/salmon@cf07385f2164698eda5b9869dd4865fec747840d, then re-running the script, and recompiling produces no errors, and the tests all run. Hope that helps, and thanks for all your work in developing Salmon!. Best regards,; Patrick Reilly",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/418:1433,down,downloaded,1433,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418,2,"['down', 'error']","['downloaded', 'errors']"
Availability,"possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of downgrading of its dependencies. Linux nscc04 2.6.32-696.30.1.el6.x86_64 #1 SMP Fri May 18 11:50:44 EDT 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/286:1341,DOWN,DOWNGRADED,1341,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286,2,"['DOWN', 'down']","['DOWNGRADED', 'downgrading']"
Availability,"priority 0; qsub_time Mon Mar 6 23:18:58 2017; start_time Mon Mar 6 23:19:12 2017; end_time Tue Mar 7 17:27:45 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 65313; ru_utime 25600.565; ru_stime 29552.966; ru_maxrss 6548296; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 1662027; ru_majflt 369; ru_nswap 0; ru_inblock 0; ru_oublock 56256; ru_msgsnd 0; ru_msgrcv 0; ru_nsignals 0; ru_nvcsw 801190; ru_nivcsw 2880329; cpu 55153.531; mem 403295.295; io 17.447; iow 0.000; maxvmem 9.065G; arid undefined; ```. For task 1 the maxvmem was 9.072G and for task 2 9.061G. I then ran a test requesting a minimum of 10 GB of free RAM and a max of 11 GB, which in theory should work unless `salmon` uses variable amounts of memory with the same data. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends *",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:21459,echo,echo,21459,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['echo'],['echo']
Availability,"quences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during index ing. Further details can be found at https://salmon.readthedocs.io/en/latest/sal mon.html#preparing-transcriptome-indices-mapping-based-mode.; [2022-08-22 15:07:03.860] [jLog] [info] building index; out : transcripts_index; [2022-08-22 15:07:03.860] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers. [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Replaced 0 non-ATCG nuc leotides; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Clipped poly-A tails fr om 0 transcripts; wrote 0 cleaned references; [2022-08-22 15:07:03.865] [puff::index::jointLog] [info] Filter size not provide d; estimating from number of distinct k-mers; [2022-08-22 15:07:03.866] [puff::index::jointLog] [info] ntHll estimated 47270 d istinct k-mers, setting filter size to 2^20; Threads = 2; Vertex length = 31; Hash functions = 5; Filter size = 1048576; Capacity = 2; Files:; transcripts_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:1048576; Pass Filling Filtering; terminate called without an active exception; Aborted (core dumped). **To Reproduce**; Steps and data to reproduce the behavior:; salmon index -t contigs_for_salmon -i transcripts_index -k 31; my reads are paired end RNA-reads (rRNA REMOVED); My transcriptome is a 90 contigs resulted from reads assembly; Specifically, please provide at least the following information:. * Which version of salmon was used?; * ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?; 1.9.0 (latest). **Expected behavior**; use salmon index for Preparing transcriptome indices. **Desktop (please complete the following information):**; - OS: ubuntu 20.04.4 LTS",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/795:1980,down,downloaded,1980,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/795,1,['down'],['downloaded']
Availability,"r: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dc0cd/fast""; /usr/bin/make -f CMakeFiles/cmTC_dc0cd.dir/build.make CMakeFiles/cmTC_dc0cd.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o; /usr/bin/cc -o CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o -c /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; Linking C executable cmTC_dc0cd; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dc0cd.dir/link.txt --verbose=1; /usr/bin/cc CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o -o cmTC_dc0cd -rdynamic ; CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o: In function `main':; CheckSymbolExists.c:(.text+0x1b): undefined reference to `pthread_create'; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dc0cd.dir/build.make:97: recipe for target 'cmTC_dc0cd' failed; make[1]: *** [cmTC_dc0cd] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dc0cd/fast' failed; make: *** [cmTC_dc0cd/fast] Error 2. File /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c:; /* */; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o; /usr/bin/cc -DCHECK_FUNCTION_EXISTS=pthread_create -o CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExists.c.o -c /usr/share/cmake-3.7/Modules/CheckFunctionExists.c; Linking C executable cmTC_d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/207:1184,Error,Error,1184,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207,2,['Error'],['Error']
Availability,rapidjson internal assertion failure: IsObject(),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/251:29,failure,failure,29,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/251,2,['failure'],['failure']
Availability,"rary.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2017-02-09 13:51:48.488] [jointLog] [info] Counted 0 total reads in the equivalence classes; [2017-02-09 13:51:48.502] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2017-02-09 13:51:48.502] [jointLog] [info] Mapping rate = 0%. [2017-02-09 13:51:48.502] [jointLog] [info] finished quantifyLibrary(); [2017-02-09 13:51:48.512] [jointLog] [info] Starting optimizer; [2017-02-09 13:51:48.514] [jointLog] [info] Marked 0 weighted equivalence classes as degenerate; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 0 | max rel diff. = 0.548; [2017-02-09 13:51:48.514] [jointLog] [info] iteration = 100 | max rel diff. = -1.79769e+308; [2017-02-09 13:51:48.514] [jointLog] [error] Total alpha weight was too small! Make sure you ran salmon correclty.; [2017-02-09 13:51:48.514] [jointLog] [error] The optimization algorithm failed. This is likely the result of bad input (or a bug). If you cannot track down the cause, please report this issue on GitHub.`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119:2886,error,error,2886,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119,3,"['down', 'error']","['down', 'error']"
Availability,"rded fragments. The difference is that every fragment can have many potential mappings. The number you are looking at is the total number of attempted alignments that failed to achieve the threshold score. Luckily, salmon reports both numbers. The number of fragments for which all alignments failed to reach the score threshold is 4,196,417; given in aux_info.json by ""num_fragments_filtered_vm"": 4196417. One point to note is that these are all fragments for which mapping is attempted (they had at least one k-mer match the reference), but no alignment was valid up to the threshold. You could try running the quantification again with --softclip to allow softclipping of the reads and see if any considerable fraction of these 4196417 failed to align because they overhang the annotated transcripts or contain adapters etc. Nonetheless, even if all of these mapped, the rate would still be ~72%. The remainder of the reads didn't even have a matching k-mer in common with the reference transcriptome, which means they are exceedingly unlikely to have come from the transcripts that were indexed. Further explanation of what these metadata numbers mean would be very helpful to me. Also useful would be a statistic (or more than one statistic) that fully categorises the read alignments or non-alignments. **Desktop (please complete the following information):**; - OS: Debian; - `uname-a`: Linux musculus 6.7.9-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.7.9-2 (2024-03-13) x86_64 GNU/Linux; - `lsb_release -a`; ```; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux trixie/sid; Release: n/a; Codename: trixie; ```. **Additional context**. I'm not really after an explanation of why read mapping rates are low in my specific case, I'm after an explanation *in the documentation* of why read mapping rates from Salmon are generally low. Update: I've just confirmed that trimming doesn't have any substantial impact on the results for our first sample [AG1232_001_MR1].",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/925:9461,avail,available,9461,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925,1,['avail'],['available']
Availability,"reenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-09-28 04:51:02.450] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-09-28 04:51:02.450] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-09-28 04:51:02.450] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-09-28 04:51:02.450] [jointLog] [info] parsing read library format; [2023-09-28 04:51:02.450] [jointLog] [info] There is 1 library.; [2023-09-28 04:51:02.450] [jointLog] [info] Loading pufferfish index; [2023-09-28 04:51:02.451] [jointLog] [info] Loading dense pufferfish index.; -------------",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:2052,recover,recoverOrphans,2052,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['recover'],['recoverOrphans']
Availability,refgenie index returns error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/722:23,error,error,23,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722,1,['error'],['error']
Availability,"rget ""salmon"" in directory /home/kurt/Development/salmon/src; linked by target ""unitTests"" in directory /home/kurt/Development/salmon/src; RESOLUTION:; sudo apt-get install libcurl4-openssl-dev; ----------------------------------; ERROR:; Performing download step for 'libbz2'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 227 100 227 0 0 1013 0 --:--:-- --:--:-- --:--:-- 1013; 100 16207 0 16207 0 0 34336 0 --:--:-- --:--:-- --:--:-- 166k; bzip2-1.0.6.tar.gz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; bzip2-1.0.6.tar.gz did not match expected SHA256! Exiting.; CMakeFiles/libbz2.dir/build.make:89: recipe for target 'libbz2-prefix/src/libbz2-stamp/libbz2-download' failed; make[2]: *** [libbz2-prefix/src/libbz2-stamp/libbz2-download] Error 1; CMakeFiles/Makefile2:183: recipe for target 'CMakeFiles/libbz2.dir/all' failed; make[1]: *** [CMakeFiles/libbz2.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2; RESOLUTION:; modifying build.make to pull from sourceforge instead of bzip.org; -----------------------------------------------------------; ERROR:; libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-compression.lo -MD -MP -MF .deps/libstaden_read_la-compression.Tpo -c compression.c -o libstaden_read_la-compression.o; compression.c:77:10: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^~~~~~~~; compilation terminated.; Makefile:663: recipe for target 'libstaden_read_la-compression.lo' failed; make[5]: *** [libstaden_read_la-compression.lo] Error 1; Makefile:734: recipe for target 'all-recursive' failed; make[4]: *** [all-recursive] Error 1; Makefile:478: recipe for target 'all' failed; make[3]: *** [all] Error 2; CMakeFiles/libstadenio.dir/build.make:111: recipe for target 'libstadenio-prefix/src/libstadenio-stamp/libstadenio-build' failed; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/383:4309,Error,Error,4309,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/383,2,['Error'],['Error']
Availability,"rgets. processed 185 Million fragments; hits: 690426925, hits per frag: 3.72226. [2018-12-05 16:57:31.421] [jointLog] [info] Computed 215,739 rich equivalence classes for further processing; [2018-12-05 16:57:31.421] [jointLog] [info] Counted 131,957,987 total reads in the equivalence classes ; [2018-12-05 16:57:31.421] [jointLog] [warning] 0.000112378% of fragments were shorter than the k used to build the index (31).; If this fraction is too large, consider re-building the index with a smaller k.; The minimum read size found was 24. [2018-12-05 16:57:31.421] [jointLog] [warning] Found 539897 reads with `N` in the UMI sequence and ignored the reads.; Please report on github if this number is too large; [2018-12-05 16:57:31.421] [jointLog] [info] Mapping rate = 70.9532%. [2018-12-05 16:57:31.421] [jointLog] [info] finished quantifyLibrary(); [2018-12-05 16:57:35.529] [alevinLog] [info] Starting optimizer. Analyzed 3856 cells (100% of all).; [2018-12-05 17:04:51.878] [alevinLog] [info] Total 47125847 UMI after deduplicating.; [2018-12-05 17:04:51.928] [alevinLog] [info] Clearing EqMap; Might take some time.; [2018-12-05 17:05:04.064] [alevinLog] [info] Starting Import of the gene count matrix.; Exception : [std::bad_alloc]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **Desktop (please complete the following information):**; Ubuntu 14.04 LTS; 3.13.0-143-generic #192-Ubuntu SMP Tue Feb 27 10:45:36 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty. **Additional context**; If I include only a subset of the fastq files, the command completes with no error. I have succeeded in running up to 3 of the files (3 *I1*, 3 *I2* and 3 *RA* files), but got the above-mentioned error when running it on 4 or more fastq files. I read that std::bad_alloc was usually caused by memory issues. The system I am using has 128Gb of RAM available. Thank you for your help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:14986,error,error,14986,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,3,"['avail', 'error']","['available', 'error']"
Availability,"rior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:06:31.580] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""apex_infe_t1_rep1_S29_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:06:34.583] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:06:35.068] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:06:35.443] [jointLog] [info] . The alignment group queue pool has been exhausted. 1955 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 26000000 reads in current roundSegmentation fault (core dumped); ```. Output for failure case - four files. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:7932,fault,fault,7932,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['fault'],['fault']
Availability,"ritten to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? Encountered compile error, so not to index/quant step yet; * Which read files were used? same as above; * Which which program options were used? same as above. **Expected behavior**; A clear and concise description of what you expected to happen.; I expect to finish ""make"" command without encountering compile error while using debug mode(""-DCMAKE_BUILD_TYPE=Debug"" ). **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/24876498/103148237-98daa880-4798-11eb-9944-a104c41f75cf.png). **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86_64 #1 SMP Tue Mar 17 23:49:17 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. ""lsb_release -a""; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:print",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:2713,error,error,2713,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,1,['error'],['error']
Availability,"rmation:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { SRR14506785.salmon.rmsk.out }; ### [ writeUnmappedNames ] => { }; Logs will be written to SRR14506785.salmon.rmsk.out/logs; [2023-09-28 04:51:02.450] [jointLog] [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:1302,avail,available,1302,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['avail'],['available']
Availability,"roduce**; Steps and data to reproduce the behavior:. salmon 1.4.0 ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. $ cat /etc/redhat-release; CentOS Linux release 7.5.1804 (Core) . I think when I installed salmon I could not install the 1.5.x version. I forgot why; ```; function runSalmon() {; # runs salmon on one sample and outputs to that directory ; salmonIndexDir=""$1""; rightReads=""$2""; leftReads=""$3""; outputDir=""$4"". #set -x # turn debug on ; # set +x # turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/677:1703,recover,recoverOrphans,1703,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677,1,['recover'],['recoverOrphans']
Availability,"rray + ranks ); final hash 0 bits (0.00 %) (nb in final hash 0). My script to build the above index:. ~/salmon/bin/salmon index \; -t mouse_cDNA_ref/mus_cdna.fa.gz \; -i indexs/alt_long_index \; -k 31. My HPCC run on CentOS. . My script to run salmon quant:. ~/salmon/bin/salmon quant -i mnt/home/oconn341/salmon/indexs/alt_long_index -l A -1 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R1_001.fastq.gz -2 preprocs_fastq/ERAP1_EAE_2270_S4/ERAP1_EAE_2270_S4_R2_001.fastq.gz -o preprocs_fastq/ERAP1_EAE_2270_S4 --validateMappings --rangeFactorizationBins 4 --gcBias --seqBias. ; **To Reproduce**; Steps and data to reproduce the behavior:. Reproduces every time . Specifically, please provide at least the following information:. * Which version of salmon was used? V1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Pre-compiled binary ; * Which reference (e.g. transcriptome) was used? Mus_musculus.GRCm39.cdna.all.fa.gz; * Which read files were used? see above; * Which which program options were used? see above. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS ; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here. I am thinking this is an issue w/ building the index. If there is a pre-made index w/ or w/o decoys for mouse that you can direct me to I would appreciate it. Following the link posted in the salmon documentation about pre-made index's is not helpful and I am not sure how to download them from there. A simpler option would be appreciated. . Thanks!. UPDATE: This was solved by using an index generated by a friend So apparently the issue is w/ building the index.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/696:8861,down,download,8861,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/696,1,['down'],['download']
Availability,"rrespond to multiple sequences. **To Reproduce**; Steps and data to reproduce the behavior:; 1. Merging quantifications with Salmon:; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; 2. Searching for a specific gene ID in the quantification file:; grep ""k141_1346622_1"" temp/salmon/L1EHI0900465--Q_S1_N6.quant/quant.sf; # Multiple lines are found for this gene ID; 3. Searching for the same gene ID in the resulting TPM file:; grep ""k141_1346622_1"" result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM; #No results are found, which is unexpected. <img width=""1166"" alt=""截屏2024-01-30 21 56 23"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/b77e5aa4-aadc-4a17-bdde-b998ce14d72c"">; <img width=""1056"" alt=""截屏2024-01-30 21 55 28"" src=""https://github.com/COMBINE-lab/salmon/assets/19604271/877cfa9b-0484-4937-87b2-e987679e09e3"">. Specifically, please provide at least the following information:. * Which version of salmon was used? salmon 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon -y; * Which reference (e.g. transcriptome) was used? metagenome data; * Which read files were used? L1EHI0900465--Q_S1_N6.quant/; * Which which program options were used?; salmon quantmerge \; --quants temp/salmon/L1EHI0900465--Q_S1_N6.quant \; -o result/salmon/gene_L1EHI0900465--Q_S1_N6.TPM. **Expected behavior**; A clear and concise description of what you expected to happen.; I hope to keep all the gene IDs and for those who contains more than one line, take average values for each gene ID. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/910:1365,down,downloaded,1365,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/910,1,['down'],['downloaded']
Availability,"rt_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS; - Version [ If you are on OSX, the output of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/290:1603,Error,Error,1603,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290,3,"['Error', 'failure']","['Error', 'failure']"
Availability,"ruct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_INSTALL_PREFIX:PATH=/gpfs/software/salmon/xeonmax/gcc13.2.0/1.10.3. make clean; make -j 25; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? **1.10.3**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **compiled**. **Expected behavior**; A successful build. **Desktop (please complete the following information):**; - OS: **Rocky Linux 9.4**; - Version: **Linux xm013 5.14.0-427.26.1.el9_4.x86_64 #1 SMP PREEMPT_DYNAMIC Tue Jul 23 16:00:21 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux**. **Additional context**; std err file attached.; [build.err.gz](https://github.com/user-attachments/files/16677963/build.err.gz)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:3726,down,downloaded,3726,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['down'],['downloaded']
Availability,"s Prediction 12274 Too far from knee prediction skipping it; [2018-06-12 21:08:55.712] [alevinLog] [info] Learned InvCov: 255.229 normfactor: 12656.9; [2018-06-12 21:08:55.712] [alevinLog] [info] Total 327(has 200 low confidence) barcodes; [2018-06-12 21:08:55.895] [alevinLog] [info] Done True Barcode Sampling; [2018-06-12 21:08:56.092] [alevinLog] [info] Done populating Z matrix; [2018-06-12 21:08:56.093] [alevinLog] [info] Done indexing Barcodes; [2018-06-12 21:08:56.094] [alevinLog] [info] Total Unique barcodes found: 1530568; [2018-06-12 21:08:56.094] [alevinLog] [info] Used Barcodes except Whitelist: 4828; [2018-06-12 21:08:56.124] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-06-12 21:08:56.124] [alevinLog] [info] parsing read library format; [2018-06-12 21:08:56.124] [jointLog] [info] There is 1 library.; [2018-06-12 21:08:56.183] [jointLog] [info] Loading Quasi index; [2018-06-12 21:08:56.184] [jointLog] [info] Loading 32-bit quasi index; [2018-06-12 21:08:56.184] [stderrLog] [info] Loading Suffix Array ; [2018-06-12 21:08:56.530] [stderrLog] [info] Loading Transcript Info ; [2018-06-12 21:08:56.675] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-06-12 21:08:56.724] [stderrLog] [info] There were 36191 set bits in the bit array; [2018-06-12 21:08:56.729] [stderrLog] [info] Computing transcript lengths; [2018-06-12 21:08:56.729] [stderrLog] [info] Waiting to finish loading hash; [2018-06-12 21:08:58.508] [jointLog] [info] done; [2018-06-12 21:08:58.508] [jointLog] [info] Index contained 36191 targets; [2018-06-12 21:08:58.508] [stderrLog] [info] Done loading index. processed 0 Million fragments; processed 1 Million fragments; processed 1 Million fragments; processed 2 Million fragments; processed 2 Million fragments; processed 3 Million fragments; processed 3 Million fragments; hits: 169917, hits per frag: 0.0489674[2018-06-12 21:09:22.500] [jointLog] [error] umi indexing of jellyfish failing.; Please report on github; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/237:4433,error,error,4433,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237,1,['error'],['error']
Availability,"s configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically available.; Processor type: arm64e (ARM64E); Processors active: 0 1 2 3 4 5 6 7 8 9 10 11; Primary memory available: 64.00 gigabytes; Default processor set: 650 tasks, 3562 threads, 12 processors; Load average: 1.14, Mach factor: 10.84; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /Users/jeremybono/miniforge3/bin; PATH: /Users/jeremybono/miniforge3/condabin; PATH: /opt/homebrew/bin; PATH: /opt/homebrew/sbin; PATH: /usr/local/bin; PATH: /System/Cryptexes/App/usr/bin; PATH: /usr/bin; PATH: /bin; PATH: /usr/sbin; PATH: /sbin; PATH: /Users/jeremybono/Downloads/bbmap; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin; PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin. ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2959: checking build system type; configure:2973: result: arm-apple-da",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:1998,avail,available,1998,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['avail'],['available']
Availability,"s of problems does CodeQL find?; The CodeQL engine that powers GitHub code scanning is the exact same engine that powers LGTM.com. The exact set of rules has been tweaked slightly, but you should see almost exactly the same types of alerts as you were used to on LGTM.com: we’ve enabled the [`security-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:3682,error,errors,3682,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,1,['error'],['errors']
Availability,"s the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (buik mode). **Describe the bug**; A clear and concise description of what the bug is.; I compiled the code (salmon v1.4.0) and produced the executable. Then when I try to ""salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode"" (transcriptome and genome from your tutorial: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/), a segmentation fault occurs. (gdb backtrack is provided below.). **To Reproduce**; Steps and data to reproduce the behavior:. 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /cmake version 3.13.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoys.t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:1011,down,download,1011,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,1,['down'],['download']
Availability,"s to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; ; Output of `uname -a`:; ```; Linux amc-bodhi 3.10.0-514.21.1.el7.x86_64 #1 SMP Thu May 25 17:04:51 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux; ```. Output of `lsb_release -a`:; ```; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	CentOS; Description:	CentOS Linux release 7.4.1708 (Core) ; Release:	7.4.1708; Codename:	Core; ```. **Additional context**; Add any other context about the problem here. I have attached subsampled fastq files for one of my samples as an example:; [sub_R1.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331798/sub_R1.fastq.gz); [sub_R2.fastq.gz](https://github.com/COMBINE-lab/salmon/files/7331799/sub_R2.fastq.gz). This is the error log after attempting to run the map reads step, which indicates an issue with the index build:; [B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331816/B13_MeOH_cells_Jurkat_Cas9_EGR1_1_stimulated.out.err.txt). This is the error log after building the index, which seems to have run successfully (though maybe I am missing something):; [build_idx.out.err.txt](https://github.com/COMBINE-lab/salmon/files/7331817/build_idx.out.err.txt). This is the versionInfo.json file that is successfully generated after building the index, but that can't be found when mapping reads:; [versionInfo.txt](https://github.com/COMBINE-lab/salmon/files/7331818/versionInfo.txt). Thank you so much for any help/insight you might have! I appreciate it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:6587,error,error,6587,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,2,['error'],['error']
Availability,"s would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] There is 1 library.; [2018-10-23 20:11:13.513] [stderrLog] [info] Loading Suffix Array ; [2018-10-23 20:11:13.513] [jointLog] [info] Loading Quasi index; [2018-10-23 20:11:13.513] [jointLog] [info] Loading 32-bit quasi index; [2018-10-23 20:11:14.645] [stderrLog] [info] Loading Transcript Info ; [2018-10-23 20:11:14.975] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-10-23 20:11:15.031] [stderrLog] [info] There were 199,612 set bits in the bit array; [2018-10-23 20:11:15.042] [stderrLog] [info] Com",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:1600,Down,Downloads,1600,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,1,['Down'],['Downloads']
Availability,"s/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam -p 8 -o ../SalmonQuantFiles; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam leaf_mock_t6_rep1_S40_R1_001Aligned.out.bam leaf_mock_t5_rep3_S63_R1_001Aligned.out.bam leaf_mock_t5_rep1_S39_R1_001Aligned.out.bam }; # [ threads ] => { 8 }; # [ output ] => { ../SalmonQuantFiles }; Logs will be written to ../SalmonQuantFiles/logs; [2023-01-29 16:52:41.666] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:52:41.666] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-01-29 16:52:41.668] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam"", fasta = ""/rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas"" . . .done. processed 0 reads in current round[2023-01-29 16:52:42.565] [jointLog] [info] replaced 186,207 non-ACGT nucleotides with random nucleotides; processed 2000000 reads in current round[2023-01-29 16:52:43.137] [jointLog] [info] Automatically detected most likely library type as U. [2023-01-29 16:52:43.276] [jointLog] [info] . The alignment group queue pool has been exhausted. 1759 extra fragments were allocated on the heap to saturate the pool. No new fragments will be allocated. processed 25000000 reads in current roundSegmentation fault (core dumped). ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:10044,fault,fault,10044,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,1,['fault'],['fault']
Availability,salmon alevin error: cell doesn't have any read count,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/281:14,error,error,14,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/281,1,['error'],['error']
Availability,salmon index error with decoy file,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/389:13,error,error,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/389,1,['error'],['error']
Availability,salmon quant error: Segmentation fault (core dumped),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/414:13,error,error,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/414,2,"['error', 'fault']","['error', 'fault']"
Availability,salmon quant segmentation fault (core dumped),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/419:26,fault,fault,26,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419,1,['fault'],['fault']
Availability,salmon quantmerge Error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/940:18,Error,Error,18,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/940,1,['Error'],['Error']
Availability,salmon v1.4.0 -DCMAKE_BUILD_TYPE=Debug produce compile error: -pg and -fomit-frame-pointer are incompatible,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:55,error,error,55,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,1,['error'],['error']
Availability,salmon v1.4.0 executable compiled using release mode(-DCMAKE_BUILD_TYPE=Release) produce segmentation fault,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:102,fault,fault,102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,1,['fault'],['fault']
Availability,"salmon version 1.5.1; Running with the following keystrokes:; salmon quant -i contig_index -l A -1 R1.fastq -2 R2.fastq -o salmonoutput (screenshot attached as ""command""). It keeps throwing the attached error message (as log).; Ive verified the R1 and R2 have the same number of entries using grep to count the number of ""@"" symbols. These match. The lines of each file are the same as well. (screenshot also attached as ""size""); ![Command](https://user-images.githubusercontent.com/50889111/134416661-77de22d1-5fc4-4b89-a21d-940948fdc4b8.png); ![Size](https://user-images.githubusercontent.com/50889111/134416664-21c6373f-57be-4c8d-b917-68aa16262f57.png); <img width=""1314"" alt=""Log"" src=""https://user-images.githubusercontent.com/50889111/134416666-5dcf3843-ef06-45b1-bb77-6c2dbae9e6e4.png"">. I'm not sure what to do from here; Please help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/709:203,error,error,203,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/709,1,['error'],['error']
Availability,salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/lib/libboost_system.a /opt/boost/boost_1_57_0/lib/libboost_thread.a /opt/boost/boost_1_57_0/lib/libboost_timer.a /opt/boost/boost_1_57_0/lib/libboost_chrono.a /opt/boost/boost_1_57_0/lib/libboost_program_options.a /opt/boost/boost_1_57_0/lib/libboost_serialization.a ../../external/install/lib/libstaden-read.a -lz ../../external/install/lib/libdivsufsort.a ../../external/install/lib/libdivsufsort64.a ../../external/install/lib/libjellyfish-2.0.a ../../external/install/lib/libbwa.a -lm ../../external/install/lib/liblzma.a -lbz2 -ltbb -ltbbmalloc -lgomp -lrt ../../external/install/lib/libje,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:1891,Error,ErrorModel,1891,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['Error'],['ErrorModel']
Availability,salmon: symbol lookup error: salmon: undefined symbol: _ZN5boost15program_options3argE,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/639:22,error,error,22,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/639,1,['error'],['error']
Availability,salmon: symbol lookup error: salmon: undefined symbol: _ZNSt6locale10_S_classicE,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/256:22,error,error,22,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/256,1,['error'],['error']
Availability,segmentation fault 11 on salmon tutorial,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/317:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317,1,['fault'],['fault']
Availability,segmentation fault when skipQuant flag is set,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:13,fault,fault,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['fault'],['fault']
Availability,"sgrcv 0; ru_nsignals 0; ru_nvcsw 1230; ru_nivcsw 53; cpu 4.048; mem 27.889; io 0.002; iow 0.000; maxvmem 10.736G; arid undefined; ```. I'm sure that the job got terminated because the memory reached the limit of 11 GB. . I previously did several tests where for a file the max memory reported was about 9 GB when requesting about 100G of RAM, and the same job kept failing even if I requested 10G, 20G, 30G, 40G... I didn't save the info then to report the problem. . Back on these tests, I then increased the memory requested a bit more (and used the `-m e` SGE option to get an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts *",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:27236,echo,echo,27236,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,6,['echo'],['echo']
Availability,"sh quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] Loading Transcript Info; [2018-11-24 15:08:10.423] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-11-24 15:08:10.432] [stderrLog] [info] There were 40,812 set bits in the bit array; [2018-11-24 15:08:10.435] [stderrLog] [info] Computing transcript lengths; [2018-11-24 15:08:10.435] [stderrLog] [info] Waiting to finish loading hash. quant_tut_samples.sh: line 2: 914 Segmentation fault: 11 salmon quant -i athal_index -l A -1 ${fn}/${samp}_1.fastq.gz -2 ${fn}/${samp}_2.fastq.gz -p 8 -o quants/${samp}_quant; (salmon) MacBook-Pro-2:salmon-tutorial brent$ `. Desktop (please complete the following information):. MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. Additional context; I appreciate any help you can offer and I apologize in advance if there's something obvious I should have read or known about. (it seems like the lines below that are preceded by ### are coming out in fold face. They are not meant to.)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/318:2617,fault,fault,2617,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318,1,['fault'],['fault']
Availability,"single-cell mode)?**. Alevin. **Describe the bug**. Maybe more of a support request than a bug. . I've got some of what I suspect is lower-quality drop-seq data. Running Alevin with default parameters yields very low mapping rates, presumably because elbow-finding is failing. Here's the barcode rank plot, you can see why it's having trouble, you might see an elbow if you squint a bit. . ![Drop-seq](https://user-images.githubusercontent.com/5775915/57308423-3d006f00-70de-11e9-8c59-47e55d060035.png). I know from the source publication that we expect 278 cells in this case. . Supplying --expectCells yields the boundary error above. For this to work I need to break out the big guns and use --forceCells, yes? What I would really like is to try --expectCells first to allow Alevin to be a little bit intelligent, and if that fails to use --forceCells. Is that a sensible approach?. If so, could we a) have an informative error code on the boundary error above such that I can easily detect that error and re-submit with --forceCells, or b) if this is generically useful have a flag in Alevin to do it directly?. **To Reproduce**; Steps and data to reproduce the behavior:. - cDNA reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R2.fastq.gz; - barcode reads in ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/MTAB/E-MTAB-7142/Control_6_R1.fastq.gz; - transcript/ gene mapping as: [transcript_to_gene.txt](https://github.com/COMBINE-lab/salmon/files/3153221/transcript_to_gene.txt); - Run Alevin in drop-seq mode, salmon 0.13.1. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**. ```; ### alevin (dscRNA-seq quantification) v0.13.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { barcodes.fastq.gz }; ### [ mates2 ] => { cdna.fastq.gz }; ### [ dropseq ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 12 }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362:989,error,error,989,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362,3,['error'],['error']
Availability,"so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda, official install order code; * Which reference (e.g. transcriptome) was used?; Arabidopsis (not important for the issue); * Which read files were used?; Arabidopsis (not important for the issue); * Which which program options were used?; Default. **Expected behavior**; I just want it work. **Screenshots**; <img width=""868"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/83922432/3913fbea-a0a7-4fb4-8aa1-4efef8b0990b"">. **Desktop (please complete the following information):**; - OS: Windows 11 => WSL => Ubuntu 22.04.4 LTS (GNU/Linux 5.10.16.3-microsoft-standard-WSL2 x86_64)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/927:1664,error,error,1664,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927,3,"['down', 'error']","['downloaded', 'error']"
Availability,soft masked decoy,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/934:5,mask,masked,5,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/934,1,['mask'],['masked']
Availability,"son HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/main/osx-arm64/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/noarch/current_repodata.json HTTP/1.1"" 304 0; done; Solving environment: unsuccessful attempt using repodata from current_repodata.json, retrying with next repodata source.; Collecting package metadata (repodata.json): - DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; / DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/osx-arm64/repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/noarch/repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/main/osx-arm64/repodata.json HTTP/1.1"" 304 0; - DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/main/noarch/repodata.json HTTP/1.1"" 304 0; done; Solving environment: failed. PackagesNotFoundError: The following packages are not available from current channels:. - salmon. Current channels:. - https://conda.anaconda.org/bioconda/osx-arm64; - https://conda.anaconda.org/bioconda/noarch; - https://conda.anaconda.org/conda-forge/osx-arm64; - https://conda.anaconda.org/conda-forge/noarch; - https://repo.anaconda.com/pkgs/main/osx-arm64; - https://repo.anaconda.com/pkgs/main/noarch; - https://repo.anaconda.com/pkgs/r/osx-arm64; - https://repo.anaconda.com/pkgs/r/noarch. To search for alternate channels that may provide the conda package you're; looking for, navigate to. https://anaconda.org. and use the search bar at the top of the page. Any help would be greatly appreciated!. Thanks,. Nordin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/871:2333,avail,available,2333,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/871,1,['avail'],['available']
Availability,"specially appreciated!. I was wondering what the reason for setting an upper limit on the barcode length in alevin is - would longer barcodes affect the computation in some manner? We are working with barcodes of length 27, which are incompatible with the hardcoded upper barcode length limit [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). I manually raised the limit on a modified alevin version, and the final output looks as expected, so if there is no risk that I am unaware of, would you consider raising or removing the barcode length limit altogether?. Thank you for you help!. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Using the manual barcode and UMI specification with `--end`, `--barcodeLength`, and `--umiLength` fails for barcodes longer than 20 with the error message:; ```; Barcode length (27) was not in the required length range [1, 20].; ```; The barcode length upper limit is hardcoded [here](https://github.com/COMBINE-lab/salmon/blob/2ebc89c3fa744b8fc8794c9ab538ae50e41c1adc/src/AlevinUtils.cpp#L578). **To Reproduce**; In Salmon 1.0.0, run `salmon alevin [...] --end 5 --barcodeLength 27 --umiLength 8` (or any `barcodeLength` value above 20). * Which version of salmon was used? 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? not relevant; * Which read files were used? not relevant; * Which which program options were used? `--end 5 --barcodeLength 27 --umiLength 8`. **Expected behavior**; Ideally, barcode longer than 20 would be processed as normal. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Mac OS X; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`] 10.14.6 (18G103). **Additional context**; See top of post",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/445:1483,down,downloaded,1483,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/445,1,['down'],['downloaded']
Availability,"ss RapMapSAIndex<long int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<long int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481dac12ac8cffd6d5d924699c5ad7e04.). Adjusting the fetchRapMap.sh script to use the SVER and EXPECTED_SHA256SUM variables back to their values in commit COMBINE-lab/salmon@cf07385f2164698",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/418:1020,error,error,1020,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418,1,['error'],['error']
Availability,"ssed 265000000 positions. processed 266000000 positions. processed 267000000 positions. processed 268000000 positions. processed 269000000 positions. processed 270000000 positions. processed 271000000 positions. processed 272000000 positions. processed 273000000 positions. processed 274000000 positions. processed 275000000 positions. processed 276000000 positions. processed 277000000 positions. processed 278000000 positions. processed 279000000 positions. processed 280000000 positions. processed 281000000 positions. processed 282000000 positions. processed 283000000 positions. processed 284000000 positions. processed 285000000 positions. processed 286000000 positions. processed 287000000 positions. processed 288000000 positions. processed 289000000 positions; khash had 109134690 keys; saving hash to disk . . . done; Elapsed time: 7.61947s; [2018-08-16 19:47:14.359] [jLog] [info] done building index; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./index }; ### [ libType ] => { U }; ### [ unmatedReads ] => { ./single.fastq }; ### [ output ] => { ./output }; ### [ allowOrphansFMD ] => { }; ### [ threads ] => { 16 }; ### [ incompatPrior ] => { 1e-20 }; ### [ biasSpeedSamp ] => { 1 }; ### [ fldMax ] => { 1000 }; ### [ fldMean ] => { 200 }; ### [ fldSD ] => { 80 }; ### [ forgettingFactor ] => { 0.65 }; ### [ maxOcc ] => { 200 }; ### [ maxReadOcc ] => { 100 }; ### [ numBiasSamples ] => { 2000000 }; ### [ numAuxModelSamples ] => { 5000000 }; ### [ numPreAuxModelSamples ] => { 1000000 }; ### [ numGibbsSamples ] => { 0 }; ### [ numBootstraps ] => { 0 }; ### [ vbPrior ] => { 0.001 }; Logs will be written to ./output/logs; [2018-08-16 19:47:14.418] [jointLog] [info] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:22910,avail,available,22910,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['avail'],['available']
Availability,"st the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ skipQuant ] => { }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:1343,fault,fault,1343,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['fault'],['fault']
Availability,"st.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/SalmonQuantMerge.cpp.o CMakeFiles/salmon.dir/ProgramOptionsGenerator.cpp.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/ONTAlignmentModel.cpp.o CMakeFiles/salmon.dir/AlignmentCommon.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o CMakeFiles/salmon.dir/BAMUtils.cpp.o -o salmon -L/vol/mgx-sw/src/tools/salmon/lib -L/vol/mgx-sw/lib -L/vol/mgx-sw/src/tools/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" ../external/pufferfish/src/libpuffer.a libsalmon_core.a ../external/pufferfish/external/twopaco/graphconstructor/libtwopaco.a ../external/pufferfish/external/twopaco/graphdump/libgraphdump.a ../external/pufferfish/external/ntcard/libntcard.a -lgff /usr/lib/x86_64-linux-gnu/libboost_iostreams.a /usr/lib/x86_64-linux-gnu/libboost_filesystem.a /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_timer.a /usr/lib/x86_64-linux-gnu/libboost_chrono.a /usr/lib/x86_64-linux-gnu/libboost_program_options.a /usr/lib/x86_64-linux-gnu/libboost_locale.a ../../external/install/lib/libstaden-read.a /usr/lib/x86_64-linux-gnu/libcurl.a /usr/lib/x86_64-linux-gnu/libz.a -lm /usr/lib/x86_64-linux-gnu/liblzma.a /usr/lib/x86_64-linux-gnu/libbz2.a -lgomp ../external/pufferfish/src/libksw2pp.a libalevin_core.a ../../external/install/lib/libjemalloc.a -ltbbmalloc_proxy -ltbbmalloc -ltbb -lrt -ldl /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_chrono.a /usr/lib/x86_64-linux-gnu/libboost_thread.a -pthread /usr/lib/x86_64-linux-gnu/libboost_atomic.a ; ```. I also tried compiling without `-DFETCH_BOOST=TRUE`, i.e. boost packages installed via apt-get, but the same error occurs.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/664:3878,error,error,3878,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664,1,['error'],['error']
Availability,stl_vector.h error,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/965:13,error,error,13,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965,1,['error'],['error']
Availability,"surprisingly, after building a salmon conda env, when building an index I got the following error:. `exception : [unrecognised option '--decoys']. Exiting.`. I then ran salmon index --help , and there was no -d/--decoys option. and; `salmon -v ` returned ; salmon 0.13.1. the tag on https://anaconda.org/bioconda/salmon , last uploaded a few months ago suggests it is for 1.10.2 , which is clearly not the case. not sure if this was done by someone other than any of the salmon developers, but it definitely creates headaches for groups trying to automate expression analysis workflows using snakemake/conda",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/895:92,error,error,92,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/895,1,['error'],['error']
Availability,"t to 0.65; [2021-05-19 18:46:25.303] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-05-19 18:46:25.303] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-05-19 18:46:25.303] [jointLog] [info] parsing read library format; [2021-05-19 18:46:25.303] [jointLog] [info] There is 1 library.; [2021-05-19 18:46:25.429] [jointLog] [info] Loading pufferfish index; [2021-05-19 18:46:25.429] [jointLog] [info] Loading dense pufferfish index.; [2021-05-19 18:46:27.087] [jointLog] [info] done; [2021-05-19 18:46:27.087] [jointLog] [info] Index contained 141,069 targets; [2021-05-19 18:46:32.618] [jointLog] [info] Number of decoys : 0; [2021-05-19 18:46:33.428] [jointLog] [info] Automatically detected most likely library type as IU. [2021-05-19 18:49:27.444] [jointLog] [error] . [2021-05-19 18:49:27.506] [jointLog] [error] Processing reads : Error reading from the FASTA/Q stream. Minimum return code for left and right read was (-2). Make sure the file is valid. ```; For rabbitQC's log; ```; Detecting adapter sequence for read1...; CCCAGCCATAACACAGTATCAAACTCCACTATTTGTCTGATCCGTACTTATTACAGCCGT. Detecting adapter sequence for read2...; CCAACTTGGTCTACAAGACGCCACATCCCCTATTATAGAAGAGCTAATAAATTTCCATGA. Read1 before filtering:; total reads: 44178187; total bases: 2140649565; Q20 bases: 1899503304(88.7349%); Q30 bases: 1839878933(85.9496%). Read1 after filtering:; total reads: 34172299; total bases: 1775386278; Q20 bases: 1762557969(99.2774%); Q30 bases: 1737891531(97.8881%). Read2 before filtering:; total reads: 44178187; total bases: 2233386484; Q20 bases: 2180294210(97.6228%); Q30 bases: 2141791820(95.8988%). Read2 aftering filtering:; total reads: 34172299; total bases: 1749324083; Q20 bases: 1731172028(98.9623%); Q30 bases: 1700577336(97.2134%). Filtering result:; reads passed filter: 68344598; reads failed due to low quality: ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/660:2319,error,error,2319,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/660,2,"['Error', 'error']","['Error', 'error']"
Availability,"tLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.080] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.080] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2019-07-24 13:33:30.080] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.080] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lig",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:14164,Error,Error,14164,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['Error'],['Error']
Availability,"t_mapped"": 55.82249021745959,; mapped/salmon_MS0.33_AG1232_015_FI3/aux_info/meta_info.json: ""percent_mapped"": 55.80153947588767,; mapped/salmon_MS0.33_AG1232_016_FG1/aux_info/meta_info.json: ""percent_mapped"": 49.49543448190936,; mapped/salmon_MS0.33_AG1232_017_FG2/aux_info/meta_info.json: ""percent_mapped"": 55.19039678416574,; mapped/salmon_MS0.33_AG1232_018_FG3/aux_info/meta_info.json: ""percent_mapped"": 50.730150343757518,; ```. The [readthedocs](https://salmon.readthedocs.io/en/latest/file_formats.html#meta-information) link for Salmon suggests, ""Most of the information recorded in this file should be self-descriptive"", but this is not the case for me. **To Reproduce**; Steps and data to reproduce the behavior:. 1. Map reads; 2. Observe consistent mapping rates below 80%. Specifically, please provide at least the following information:. * Which version of salmon was used? **salmon (selective-alignment-based) v1.10.2**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **package installation via Debian**; * Which reference (e.g. transcriptome) was used? **transcriptome**; * Which read files were used? **NovaSeq X Plus; read length 150bp x 2; untrimmed **; * Which which program options were used?. ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_${sampleName};; done; ```. Making Salmon less stringent:; ```; for sampleName in $(ls -d ag1232/AG* | perl -pe 's/^ag1232.//'); do; salmon quant -p 12 --index reference/salmon_index -l ISR -1 ag1232/${sampleName}/*_1.fq.gz -2 ag1232/${sampleName}/*_2.fq.gz \; --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --minScoreFraction 0.33 --recoverOrphans \; --numBootstraps 10 --writeUnmappedNames -o mapped/salmon_MS0.33_${sam",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/925:4939,down,downloaded,4939,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/925,1,['down'],['downloaded']
Availability,"this is the error I am getting. . ```; The package ""salmon"" has no matches.; There are these packages and versions available:. NULL. Error in install_CondaTools(tools = ""salmon"", env = ""RNAseq_analysis"", :; The package and/or version are not available in conda. Check above for details.; In addition: Warning message:; In system(paste(pathToConda, ""search --quiet --json"", package_input, :; running command '/Users/vittoriobontempi/Library/r-miniconda/bin/conda search --quiet --json ""salmon"" -c bioconda -c defaults -c conda-forge 2>/dev/null' had status 1; ```. any help will be greatly appreciated. thank you!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/724:12,error,error,12,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/724,4,"['Error', 'avail', 'error']","['Error', 'available', 'error']"
Availability,"tion 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:977:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1210:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, r1ptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1213:99: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.matePos, r2ptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1224:93: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1234:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(), bu; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(single_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/254:2607,error,error,2607,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254,1,['error'],['error']
Availability,"tion fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (first use in this function); cram_io.c:1421: error: 'LZMA_STREAM_END' undeclared (first use in this function); cram_io.c:1434: error: 'LZMA_FINISH' undeclared (first use in this function); make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[4]: *** [all-recursive] Error 1; make[3]: *** [all] Error 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make: *** [all] Erro",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/268:1740,error,error,1740,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268,1,['error'],['error']
Availability,"to* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: candidate expects 1 argument, 3 provided; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2078:91: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadSeq>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >*)’; else if (isSingleEnd) {processFunctor(i, singleParserPtr, sidx->quasiIndex64());}; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: proc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:12207,error,error,12207,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"ts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; make[2]: *** [src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o] Error 1; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; make: *** [all] Error 2; [root@fsutil02 build]#; [root@fsutil02 build]# vim salmon^C; [root@fsutil02 build]# cd ..; [root@fsutil02 salmon]# vim salmon.build.error; ^; /opt/build/salmon/src/SalmonQuantify.cpp:1964:53: note: candidate expects 0 arguments, 1 provided; In file included from /usr/include/c++/4.8.2/memory:81:0,; from /usr/include/c++/4.8.2/thread:40,; from /opt/build/salmon/src/SalmonQuantify.cpp:35:; /usr/include/c++/4.8.2/bits/unique_ptr.h: In instantiation of ‘void std::unique_ptr<_Tp, _Dp>::reset(std::unique_ptr<_Tp, _Dp>::pointer) [with _Tp = fastx_parser::FastxParser<fastx_parser::ReadSeq>; _Dp = processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::uti",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:44469,Error,Error,44469,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,2,['Error'],['Error']
Availability,"turn debug off . if [[ ! -f ""$outputDir""/quant.sf ]]; then. 	mkdir -p ""$outputDir"". # printf ""##############\n"" ; # printf ""warning --minAssignedFrags is set to $minNumFrags to enable test data set\n"" ; # minNumFrags=1 ; # --minAssignedFrags=$minNumFrags \ ; # printf ""##############\n"" . #if [[ -f ""$inputDir""/output_single_end.fq.gz ]]; then . numThr=12; salmon quant \; -i $salmonIndexDir \; --libType A \; -1 ""${rightReads}"" \; -2 ""${leftReads}"" \; -p $numThr \; --recoverOrphans \; --validateMappings \; --gcBias \; --seqBias \; --rangeFactorizationBins 4 \; --writeUnmappedNames \; --output ${outputDir}. salmonRet=$?; if [ $salmonRet -ne 0 ]; then; echo ERROR salmon ""$rightReads"" returned exit status ""$exitStatus""; continue; fi. #fi ; else; echo ""[INFO] skipping ${outputDir}/quant.sf it already exists""; fi; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; * salmon 1.4.0 . * How was salmon installed (compiled, downloaded executable, through bioconda)?; * compiled locally salmon-1.4.0_linux_x86_64.tar.gz; * ; * Which reference (e.g. transcriptome) was used?; * we have custom human ref with additional annotations; * ; * Which read files were used?; paired reads. * Which which program options were used?; * see above. **Expected behavior**; A clear and concise description of what you expected to happen. I think this is a potential documentation issue?. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - $ lsb_release -a; bash: lsb_release: command not found...; (base) [aedavids@mustard bin]$ uname -a ; Linux mustard 3.10.0-862.6.3.el7.x86_64 #1 SMP Tue Jun 26 16:32:21 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Add any other context a",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/677:2218,down,downloaded,2218,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/677,1,['down'],['downloaded']
Availability,"unsigned int]::__lambda34; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: candidate expects 1 argument, 3 provided; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2083:103: error: no match for call to ‘(processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda34) (size_t&, std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadSeq>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>&, RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >*)’; else if (isSingleEnd) { processFunctor(i, singleParserPtr, sidx->quasiIndexPerfectHash32()); }; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:27: note: candidate is:; auto processFunctor = [&](size_t i, auto& parserPtr, auto* index) {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2009:67: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcrip",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:17255,error,error,17255,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,upgrade CMakeLists.txt to use external copies of dependencies & no downloading,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/19:67,down,downloading,67,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19,1,['down'],['downloading']
Availability,"upon running quant with the following command:. `salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; `. I get a segmentation fault error midway through running:. ```hits: 122146249, hits per frag: 2.10747; processed 58500001 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: error: 'lzma_stream' undeclared (first use in this function); cram_io.c:1399: error: expected ';' before 'strm'; cram_io.c:1405: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1405: error: 'strm' undeclared (first use in this function); cram_io.c:1420: error: 'LZMA_RUN' undeclared (f",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/268:1270,down,downloading,1270,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268,2,"['down', 'error']","['downloading', 'error']"
Availability,"utable:. ```; git clone https://github.com/COMBINE-lab/salmon.git; mkdir salmon/build; cd salmon/build ; cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=${PREFIX} ..; make; ```. ```; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:456: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:689: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2; ```. With VERBOSE=1, this is the final command that fails:; ```; /usr/bin/c++ -O3 -DNDEBUG -flto -fno-fat-lto-objects CMakeFiles/salmon.dir/EMUtils.cpp.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedCellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/SalmonQuantMerge.cpp.o CMakeFiles/salmon.dir/ProgramOptionsGenerator.cpp.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/Alignmen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/664:1244,Error,Error,1244,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664,2,['Error'],['Error']
Availability,"ux 17, and I suspect this is related to pthreads. ```; $ cat /home/bli/src/salmon/CMakeFiles/CMakeError.log ; Determining if the pthread_create exist failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dc0cd/fast""; /usr/bin/make -f CMakeFiles/cmTC_dc0cd.dir/build.make CMakeFiles/cmTC_dc0cd.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o; /usr/bin/cc -o CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o -c /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c; Linking C executable cmTC_dc0cd; /usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dc0cd.dir/link.txt --verbose=1; /usr/bin/cc CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o -o cmTC_dc0cd -rdynamic ; CMakeFiles/cmTC_dc0cd.dir/CheckSymbolExists.c.o: In function `main':; CheckSymbolExists.c:(.text+0x1b): undefined reference to `pthread_create'; collect2: error: ld returned 1 exit status; CMakeFiles/cmTC_dc0cd.dir/build.make:97: recipe for target 'cmTC_dc0cd' failed; make[1]: *** [cmTC_dc0cd] Error 1; make[1]: Leaving directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Makefile:126: recipe for target 'cmTC_dc0cd/fast' failed; make: *** [cmTC_dc0cd/fast] Error 2. File /home/bli/src/salmon/CMakeFiles/CMakeTmp/CheckSymbolExists.c:; /* */; #include <pthread.h>. int main(int argc, char** argv); {; (void)argv;; #ifndef pthread_create; return ((int*)(&pthread_create))[argc];; #else; (void)argc;; return 0;; #endif; }. Determining if the function pthread_create exists in the pthreads failed with the following output:; Change Dir: /home/bli/src/salmon/CMakeFiles/CMakeTmp. Run Build Command:""/usr/bin/make"" ""cmTC_dd9f2/fast""; /usr/bin/make -f CMakeFiles/cmTC_dd9f2.dir/build.make CMakeFiles/cmTC_dd9f2.dir/build; make[1]: Entering directory '/home/bli/src/salmon/CMakeFiles/CMakeTmp'; Building C object CMakeFiles/cmTC_dd9f2.dir/CheckFunctionExist",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/207:1044,error,error,1044,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/207,1,['error'],['error']
Availability,"ve didn't seem to work, and this tutorial was recommended in the documentation (https://salmon.readthedocs.io/en/latest/salmon.html ) for preparing transcriptome indices (mapping-based mode) ). Since my samples are from humans, I replaced the mouse-files with the (still) current Gencode files for human (v37), and everything seemed to work well until the last step:. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. I left my machine alone for almost 8 h (no other programs, nothing to disturb it). When I finally had a look at it, the terminal was still in Round0, the system monitor still showed some action, and the system was still responsive (no freeze or anything). When I had a look at the index directory, there were no changes in any files after the sub-directory ""twopaco_tmp"" was created, and this directory only contains a file called bifurcations.bin, which was 0 byes (after 8h of computing time). Therefore, I rebooted my system (if there went anything wrong that I couldn't see) and tried changing the parameters. . 1. I changed the number of threads to -p 6 since my machine is rather old, and maybe -p 12 was too much. 2. Since someone seemed to have a similar problem and would have tried changing the filter size next, I tried to change the filter size by adding --filterSize 2^39 (at the same time, I also added --keepDuplicates because I want to use the data to find differentially expressed isoforms later on). salmon index -t gentrome.fa.gz -d decoys.txt -p 6 --keepDuplicates --filterSize 2^39 -i salmon_index --gencode. However, this didn't work and got killed. . I thought it might be due to the --filterSize argument and changed it to 39 (because maybe the 2^ is assumed automatically and it needs only the number after ^ ). And this got killed, too:. salmon index -t gentrome.fa.gz -d decoys.txt -p 6 --filterSize 39 -i salmon_index --gencode. [2021-04-02 08:34:22.664] [puff::index::jointLog] [info] Replaced 151,122,967 non-ATCG nucleotide",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/643:1231,reboot,rebooted,1231,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643,1,['reboot'],['rebooted']
Availability,"vin (single-cell mode)?**; Alevin; **Describe the bug**; A clear and concise description of what the bug is.; Reanalyzing published Drop-Seq data the alevin analysis results in drastically fewer barcodes accepted than the published dataset. Published dataset contains 3000 CBs for the specific sample (authors report that 70% of [these] putative cells from WT mice met QC criteria), alevin result contains 459 CBs.; A similar highly abbreviated CB result was obtained with reanalysis of SRR8889412. **To Reproduce**; Steps and data to reproduce the behavior:. Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; Publication: https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6925218/#; Specific Sample: https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM3720936. Alevin was run using no special parameters with the --dropseq flags. The only significant protocol deviation was in index construction (see below). Specifically, please provide at least the following information:. * Which version of salmon was used?; v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Salmon was run in stock docker container; * Which reference (e.g. transcriptome) was used?; Full decoy Index generated on Gencode M25 per Alevin Velocity tutorial with a k=17 (dataset has 50bp R2 Reads); Introns were extracted with 49bp flanking sequence. ; ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.annotation.gtf.gz. * Which read files were used?; Data used from Sample: https://www.ebi.ac.uk/ena/browser/view/SRR8889411; * Which which program options were used?; --dropseq -l ISR. **Expected behavior**; A clear and concise description of what you expected to happen.; Cell calls should be ballpark similar to published result (3000 original vs. 459 alevin). **Tar of Alevin Output directory**; [WT01_P7_WT_Cerebellum_alevin.output.tar.gz](https://github.com/COMBINE-lab/salmon/files/5953855/WT01_P7_WT_Cerebellum_alevin.output.tar.gz)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/625:1139,down,downloaded,1139,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/625,1,['down'],['downloaded']
Availability,"vin-tutorial/2018/output-format/](url) . It's the ""Reading Alevin’s bfh (big freaking hash) file"" section, where there are just 2 lines I should run. The problem is on the second line, ""parser.read_bfh()"" function. It throws me a `pandas.errors.ParserError: Error tokenizing data. C error: Expected 1 fields in line 110446, saw 20` . I tried diagnosing the problem and looked into the input bfh.txt file. The problem wasn't just line 110447, but many other lines that had more than 1 field. So the real question breaks down into: should the bfh.txt file have only 1 field per row (line)? If this is the case, then the input bfh.txt file is problematic. If not, then the parser function is problematic, as it should account for more than 1 field. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * 1.4.0; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * conda create -n salmon -c conda-forge -c bioconda salmon; conda activate salmon. * Which reference (e.g. transcriptome) was used?; * generated index via ""Protein-coding transcript sequences"" here : https://www.gencodegenes.org/human/ ; * generated the txp2gene.tsv file via ""Comprehensive Gene Annotation, Region: PRI"" here: ; https://www.gencodegenes.org/human/release_37lift37.html. * Which read files were used?; * 5k_pbmc FASTQ file from 10x: https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_v3; ; * Which program options were used?; `salmon alevin -l ISR -1 5k_pbmc_v3_S1_L001_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz 5k_pbmc_v3_S1_L002_R1_001.fastq.gz -2 5k_pbmc_v3_S1_L001_R2_001.fastq.gz 5k_pbmc_v3_S1_L002_R2_001.fastq.gz 5k_pbmc_v3_S1_L003_R2_001.fastq.gz --chromiumV3 -i index -p 10 -o alevin_output --tgMap txp2gene.tsv --dumpBfh --noDedup --dumpBarcodeEq; `. **Expected behavior**; The bfh.txt file should be parsed. In other words, the li",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/650:1178,down,downloaded,1178,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/650,1,['down'],['downloaded']
Availability,"vin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""logs/map_reads/{sample}.out""; threads:; 16; shell:; """"""; salmon alevin \; -l {params.library_type} \; -1 {input.R1} \; -2 {input.R2} \; -i {input.idx} \; -p {threads} \; -o {params.out_dir} \; --tgMap {input.tgmap} \; --end {params.end} \; --barcodeLength {params.barcodeLength} \; --umiLength {params.umiLength} \; --keepCBFraction 1 \; --sketch; """"""; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? Downloaded [this](https://github.com/COMBINE-lab/salmon/releases/tag/v1.5.2) binary; * Which reference (e.g. transcriptome) was used? Human reference (GRCh38) (from the alevin-fry tutorial [here](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz)); * Which read files were used? See attached subsampled sub_R1.fastq.gz and sub_R2.fastq.gz from one sample as representative reads.; * Which which program options were used? See above snakemake rule code for program options, which closely follow the options used in the alevin-fry tutorial. **Expected behavior**; A clear and concise description of what you expected to happen. I expected my reads to be mapped and a RAD file to be generated. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Linux (university cluster); - Version [ If you are on OSX, the output of `",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:4669,down,downloaded,4669,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,2,"['Down', 'down']","['Downloaded', 'downloaded']"
Availability,weird error when running quant command,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/746:6,error,error,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/746,1,['error'],['error']
Availability,what does error code 137 mean?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/641:10,error,error,10,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/641,1,['error'],['error']
Availability,"when I run cmake I get: . Cannot find source file:; [...]salmon-0.9.1/external/install/src/rapmap/RapMapFileSystem.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx; CMake Error at src/CMakeLists.txt:120 (add_executable):; Cannot find source file:; [...]/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp; Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp .hxx .in .txx. Apart from that the build tries to download libgff, although libgf-dev is installed - it fails because it requires curl, which is not installed - i.e. that should also be tested for. System: Debian GNU/Linux (unstable), amd64 . Best, ; Gert",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/181:214,Error,Error,214,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/181,2,"['Error', 'down']","['Error', 'download']"
Availability,"wing errors in some of my samples but not all and I cannot figure out what is happening. I am using salmon to see if specific genes are present (apart from a general quantification). I. In order to do that I run the following code:; Code (example):; `salmon quant -l A -i /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/spikein/Flox5YFP0_B07_R/index -p 6 -o /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/bcbiotx/tmpTest2/quant -1 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R1_Flox5YFP0_B07_R.trimmed.fastq.gz) -2 <(gzip -cd /n/data1/cores/bcbio/ej_rnaseq/tCells_KO/work/trimmed/Flox5YFP0_B07.R2_Flox5YFP0_B07_R.trimmed.fastq.gz); `; Some samples finish the quantification while others return the error. Some samples should have the genes while others not. The reads are 25 long and there is variability in the total number of reads among all the samples. . Please, indicate me what other information you may need. Thank you in advance,. Best,. Victor. ERROR:; `[2017-02-09 13:51:38.119] [jointLog] [info] parsing read library format; [2017-02-09 13:51:38.119] [jointLog] [info] There is 1 library.; [2017-02-09 13:51:38.559] [stderrLog] [info] Loading Suffix Array; [2017-02-09 13:51:38.560] [stderrLog] [info] Loading Transcript Info; [2017-02-09 13:51:38.561] [stderrLog] [info] Loading Rank-Select Bit Array; [2017-02-09 13:51:38.562] [stderrLog] [info] There were 2 set bits in the bit array; [2017-02-09 13:51:38.562] [stderrLog] [info] Computing transcript lengths; [2017-02-09 13:51:38.562] [stderrLog] [info] Waiting to finish loading hash; [2017-02-09 13:51:38.562] [stderrLog] [info] Done loading index; [2017-02-09 13:51:38.557] [jointLog] [info] Loading Quasi index; [2017-02-09 13:51:38.558] [jointLog] [info] Loading 32-bit quasi index; [2017-02-09 13:51:38.562] [jointLog] [info] done; processed 3500000 fragmentsjointLog] [info] Index contained 2 targets; hits: 0, hits per frag: 0; [2017-02-09 13:51:48.488] [jointLog] [info] Computed 0 rich equivale",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/119:1027,ERROR,ERROR,1027,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/119,1,['ERROR'],['ERROR']
Availability,"ww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentLengthDistribution&, BiasParams&, mem_opt_t*, SalmonOpts&, double, std::mutex&, bool, std::atomic<bool>&, volatile bool&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:977:6: error: 'class rapmap::utils::MappingConfig' has no member named 'maxSlack'; mc.maxSlack = salmonOpts.consensusSlack;; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1210:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, r1ptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1213:99: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.matePos, r2ptr, l2, tseq, tlen, a, b, maxRightScore, h.chainStatus.getRight(; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1224:93: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, rptr, l1, tseq, tlen, a, b, maxLeftScore, h.chainStatus.getLeft(), buf,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:1234:94: error: 'struct rapmap::utils::QuasiAlignment' has no member named 'chainStatus'; getAlnScore(aligner, ez, h.pos, r",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/254:2181,error,error,2181,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254,1,['error'],['error']
Availability,"xperimentT&, bool, SalmonOpts&, double, uint32_t) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; uint32_t = unsigned int]’; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:2553:83: required from here; /usr/include/c++/4.8.2/bits/unique_ptr.h:184:16: error: no match for call to ‘(std::unique_ptr<fastx_parser::FastxParser<fastx_parser::ReadPair>, processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33>::deleter_type {aka processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&) [with AlnT = rapmap::utils::QuasiAlignment; ReadExperimentT = ReadExperiment<EquivalenceClassBuilder<TGValue> >; size_t = long unsigned int]::__lambda33}) (fastx_parser::FastxParser<fastx_parser::ReadPair>*&)’; get_deleter()(__ptr);; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:39: note: candidate is:; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:53: note: processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::ato",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:27386,error,error,27386,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['error'],['error']
Availability,"xz-5.2.0 is no longer available on tukaani.org. More generally, this is the source of future issues (next one with the next release of xz, since no archiving of previous releases on tukaani.org)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/23:22,avail,available,22,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/23,1,['avail'],['available']
Availability,"y [Galaxy Cloudman](https://galaxyproject.org/cloudman/), and my installation of Salmon is currently constrained to a conda install. . - I've fiddled with many different CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000415118.1], had length less than the k-mer length of 31 (perhaps after poly-A cli",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:2956,ping,ping,2956,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['ping'],['ping']
Availability,"y had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000415118.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000632684.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST000006",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:3208,avail,available,3208,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['avail'],['available']
Availability,"y related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; The alignments to two partially overlapping transcripts suggest that only one of the transcripts is expressed, but salmon is assigning the majority of these reads to the other transcript. Even ignoring coverage differences that suggest that transcript ENST00000364953.1 is the source of these reads, this transcript is the only one of the two with unambiguous alignments, and so I would expect salmon to count the rest of the reads for this transcript. I tried quantifying this same bam with eXpress, and it produces the expected result of counting all the reads for transcript ENST00000364953.1. The alignments were generated with STAR, aligning to the GRCh38 genome and using STAR's transcriptome bam output (using gencode v35 main annotations). I'm happy to provide the small bam containing these alignments in transcriptome space, but I don't seem to be able to upload this here. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? GRCh38/gencode v35; * Which read files were used?; * Which which program options were used? -l 'U'. **Expected behavior**; salmon counting all the reads for transcript ENST00000364953.1. **Screenshots**; <img width=""998"" alt=""salmon_unexpected_counts"" src=""https://user-images.githubusercontent.com/17803131/102898647-cf7e8f00-4437-11eb-90bb-37b8498ba333.png"">. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - Version ; Linux 4.15.0-88-generic #88-Ubuntu SMP Tue Feb 11 20:11:34 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/605:1208,down,downloaded,1208,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/605,1,['down'],['downloaded']
Availability,"z --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 23 files; ```. Not working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --recoverOrphans --numBootstraps 10 -o mapped/salmon_${id}. Not working produced the following file structure:. ```; salmon_03_withRecover; ├── aux_info; ├── libParams; └── logs; └── salmon_quant.log. 4 directories, 1 file; ```. The file `mapped/salmon_03_withRecover/logs/salmon_quant.log` has nothing inside it. **Expected behavior**. Properly-mapped reads, as demonstrated by the following metadata:. ```; {; ""salmon_version"": ""1.10.0"",; ""samp_type"": ""bootstrap"",; ""opt_type"": ""vb"",; ""quant_errors"": [],; ""num_libraries"": 1,; ""library_types"": [; ""ISR""; ],; ""frag_dist_length"": 1001,; ""frag_length_mean"": 158.48833607498765,; ""frag_length_sd"": 54.34014977759742,; ""seq_bias_correct"": true,; ""gc_bias_correct"": true,; ""num_bias_bins"": 4096,; ""mapping_type"": ""mapping"",; ""keep_duplicates"": false,; ""num_valid_targets"": 147493,; ""num_decoy_targets"": 61,; ""num_eq_classes"": 179681,; ""serialized_eq_classes"": false,; ""eq_class_properties"": [; ""range_factorized"",; ""gzipped""; ],; ""length_classes",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:2242,recover,recoverOrphans,2242,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,1,['recover'],['recoverOrphans']
Availability,"ze = 2665509853; -----------------------------------------; | Loading positions | Time = 4.3613 s; -----------------------------------------; size = 3516045923; -----------------------------------------; | Loading reference sequence | Time = 360.88 ms; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 985.04 us; -----------------------------------------; [2023-02-23 09:40:13.935] [jointLog] [info] done; ```; (taken from the terminal as the logfile is empty, and the current time is 12:54 pm = >3 hr run time so far). **To Reproduce**; I ran the following command:. ```; salmon quant \; --geneMap Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: via singularity; while running manually to troubleshoot: conda.; * Which reference (e.g. transcriptome) was used? Homo_sapiens.GRCh38 transcriptome + genome as a 'gentrome'; * Which read files were used? newly sequenced bulk RNAseq reads. **Expected behavior**; All samples with similar numbers of reads using the same index to finish in roughly the same amount of time. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Pop!_OS 22.04 LTS x86_64 [Linux]; - Version: ; ``` ; $ uname -a; Linux pop-os 6.0.2-76060002-generic #202210150739~1666289067~22.04~fe0ce53 SMP PREEMPT_DYNAMIC Thu O x86_64 x86_64 x86_64 GNU/Linux. $lsb_release -a; No LSB modules are available.; Distributor ID:	Pop; Description:	Pop!_OS 22.04 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; - I can't share these reads publicly but might be able to share personally (but I'd have",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:11198,down,downloaded,11198,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['down'],['downloaded']
Deployability," * `ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/009/SRR1039509/SRR1039509_1.fastq.gz`; * Which program options were used?; ```; {; ""salmon_version"": ""0.9.1"",; ""index"": ""./index"",; ""libType"": ""U"",; ""unmatedReads"": ""./single.fastq"",; ""output"": ""./output"",; ""allowOrphansFMD"": [],; ""threads"": ""8"",; ""incompatPrior"": ""1e-20"",; ""biasSpeedSamp"": ""1"",; ""fldMax"": ""1000"",; ""fldMean"": ""200"",; ""fldSD"": ""80"",; ""forgettingFactor"": ""0.65"",; ""maxOcc"": ""200"",; ""maxReadOcc"": ""100"",; ""numBiasSamples"": ""2000000"",; ""numAuxModelSamples"": ""5000000"",; ""numPreAuxModelSamples"": ""1000000"",; ""numGibbsSamples"": ""0"",; ""numBootstraps"": ""0"",; ""vbPrior"": ""0.001"",; ""auxDir"": ""aux_info""; }; ``` . **Expected behavior**; For `salmon quant` to run to completion. **Desktop (please complete the following information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.org/cloudman/), and my installation of Salmon is currently constrained to a conda install. . - I've fiddled with many different CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:1863,Release,Release,1863,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['Release'],['Release']
Deployability," -1 ~/data/raw-data/BLB/${line}1.fastq.gz \; -2 ~/data/raw-data/BLB/${line}2.fastq.gz --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_BLB/${line} --seqBias --gcBias --validateMappings. #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.12.0-IGB-gcc-8.2.0. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7new_transcript.index -l A \; -1 ~/results/trimmingSheng/${line}1.paired.fastq \; -2 ~/results/trimmingSheng/${line}2.paired.fastq --numBootstraps=30 \; -p 12 -o ~/results/salmon_quant_Sheng_new/${line} --seqBias --gcBias --validateMappings. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13 Salmon/0.11.3-IGB-gcc-4.9.4; Salmon/0.9.1-IGB-gcc-4.9.4 Salmon/0.12.0-IGB-gcc-8.2.0 (D). * How was salmon installed (compiled, downloaded executable, through bioconda)?; through the biocluster in the University. * Which reference (e.g. transcriptome) was used?; converted the genomic fasta file to transcriptomic fasta file (described above); ; * Which read files were used?; the raw sequencing reads and the trimmed reads from the paired-end data. * Which which program options were used?; described above. **Expected behavior**; A clear and concise description of what you expected to happen. I've used the quassi mapping of Salmon using different versions several times and I expect to get different mapping rate per sample. I also expect to get different values of the parameters in the quant.sf parameters across all genes and across samples.; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ### For version 0.8. This is similar across all samples:; Name Length EffectiveLength TPM NumReads; LOC_Os01g01010.1 3017 250 28.8836 527.392; LOC_Os01g01010.2 2218 250 1.84062 33.6083; LOC_Os01g01019.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:4360,install,installed,4360,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['install'],['installed']
Deployability," /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10003_D19KGACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/R10003_D19KGACXX/logs; [2017-03-08 11:37:32.888] [jointLog] [info] parsing read library format; [2017-03-08 11:37:32.893] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:22888,release,releases,22888,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability," 11 when running on the salmon tutorial on the provided arabidopsis data set. To Reproduce. Which version of salmon was used?; salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda. Which reference (e.g. transcriptome) was used?; To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. Which read files were used?; See above. Which which program options were used?; I used the bash script from; https://combine-lab.github.io/salmon/getting_started/. Expected behavior. I expected an output indicating successful quantification. Screenshots. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array; [2018-11-24 15:08:10.319] [stderrLog] [info] L",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/318:1240,upgrade,upgrade,1240,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318,1,['upgrade'],['upgrade']
Deployability," 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.org/cloudman/), and my installation of Salmon is currently constrained to a conda install. . - I've fiddled with many different CPU/Memory requirements for each of these `salmon` jobs I've run and have only had successful runs while using a single thread on a single node (`--ntasks=1 --nodes=1`), but even then there were segfaults observed intermittently. - The current Galaxy Tool wrapper for Salmon runs `salmon index ... && salmon quant ...` for every input fastq by default, but I've also generated and pointed `salmon quant` to a common index and have observed the same segfault behavior. I've also tried out the `--perfectHash` flag in both of these scenarios to no avail. - I have the ability to specify/wrap another version of Salmon to be compatible with Galaxy if the thought is that a more recent release could help. - I'm happy to provide any context past this that could help solve the issue!. - Also, I lack any biological insight so I'll ping my colleague @gmnelson for backup in that space. **Terminal Output**; <details>; <summary>Example Output</summary>; <br>. ```; Fatal error: Exit code 139 (); Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [2018-08-16 19:42:27.806] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-08-16 19:42:27.811] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-me",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:2811,release,release,2811,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,1,['release'],['release']
Deployability," 400 | max rel diff. = 8.91734; [2021-09-20 16:24:56.130] [jointLog] [info] iteration = 500 | max rel diff. = 1.26201; [2021-09-20 16:24:57.628] [jointLog] [info] iteration = 600 | max rel diff. = 0.155034; [2021-09-20 16:24:59.130] [jointLog] [info] iteration = 700 | max rel diff. = 16.1436; [2021-09-20 16:25:00.660] [jointLog] [info] iteration = 800 | max rel diff. = 2.09965; [2021-09-20 16:25:02.202] [jointLog] [info] iteration = 900 | max rel diff. = 0.122996; [2021-09-20 16:25:03.751] [jointLog] [info] iteration = 1,000 | max rel diff. = 0.156404; [2021-09-20 16:25:05.306] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.103478; [2021-09-20 16:25:06.868] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.03942; [2021-09-20 16:25:08.404] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.0699512; [2021-09-20 16:25:09.961] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.109145; [2021-09-20 16:25:11.518] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.135139; [2021-09-20 16:25:13.091] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0545934; [2021-09-20 16:25:14.668] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.0287732; [2021-09-20 16:25:16.226] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.0201942; [2021-09-20 16:25:17.780] [jointLog] [info] iteration = 1,900 | max rel diff. = 1.83806; [2021-09-20 16:25:19.333] [jointLog] [info] iteration = 2,000 | max rel diff. = 0.0251548; [2021-09-20 16:25:19.842] [jointLog] [info] iteration = 2,034 | max rel diff. = 0.00913859; [2021-09-20 16:25:19.858] [jointLog] [info] Finished optimizer; [2021-09-20 16:25:19.858] [jointLog] [info] writing output ; ```. VM running Ubuntu ; Linux ubuntu 5.11.0-34-generic #36~20.04.1-Ubuntu SMP Fri Aug 27 08:06:32 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 20.04.3 LTS; Release:	20.04; Codename:	focal. Transcriptome index for mouse mm10 downloaded from RefGenie.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/708:9644,Release,Release,9644,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/708,1,['Release'],['Release']
Deployability," ; # Feature counts on genome BAM, without umi_tools dedup: ; ENSMUSG00000029657.15 [...] 7266 415; # Feature counts on deduplicated genome BAM:; ENSMUSG00000029657.15 [...] 7266 289; ```. Here's a scatterplot of log1p(counts) of the salmon quant results for a single sample with and without umi_tools dedup; ![image](https://user-images.githubusercontent.com/7051479/125756098-5aff12af-a75f-4bd3-9c5d-30ce7890a2ba.png). **To Reproduce**; Run Salmon quant on the aligned transcriptome BAM file. I provide subsampled versions of both the deduplicated and non-deduplicated BAM files. If you need the full BAM files, LMK and we can arrange a transfer. . * [POOLAM1-40.Aligned.toTranscriptome.out.subsample.bam.gz](https://github.com/COMBINE-lab/salmon/files/6821654/POOLAM1-40.Aligned.toTranscriptome.out.subsample.bam.gz); * [POOLAM1-40.umi_dedup.transcriptome.sorted.subsample.bam.gz](https://github.com/COMBINE-lab/salmon/files/6821657/POOLAM1-40.umi_dedup.transcriptome.sorted.subsample.bam.gz); * [salmon_featurecounts_results.tar.gz](https://github.com/COMBINE-lab/salmon/files/6821561/salmon_featurecounts_results.tar.gz). Specifically, please provide at least the following information:. * Which version of salmon was used? **1.5.1**; * How was salmon installed (compiled, downloaded executable, through bioconda)? **bioconda**; * Which reference (e.g. transcriptome) was used? **gencode.vM25.primary_assembly.annotation.gtf**; * Which read files were used? **Lexogen QuantSeq 3' UMI**; * Which which program options were used? **--noLengthCorrection**. **Expected behavior**; Correctly quantify results on deduplicated BAM. . **Desktop (please complete the following information):**; - OS: CentOS 7; - Version `3.10.0-1160.11.1.el7.x86_64 #1 SMP Fri Dec 18 16:34:56 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`. **Additional context**; There's already an issue with RSEM described in the UMI-tools repository (https://github.com/CGATOxford/UMI-tools/issues/465), maybe that's related. . CC @chripla",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/684:2249,install,installed,2249,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/684,1,['install'],['installed']
Deployability," = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:58.680] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-11-30 09:36:58.680] [jointLog",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:5070,update,updates,5070,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['update'],['updates']
Deployability," > ""seq_length"": 93512911756,; > ""have_ref_seq"": true,; > ""have_edge_vec"": false,; > ""SeqHash"": ""34c8b30e5d42a0d4459fb24e44ecef46af39893984bf9613001e925a7b1308b7"",; > ""NameHash"": ""b503f6a369add974e996e5f42942882b50c2bf1419400420255d32a88fb61a18"",; > ""SeqHash512"": ""4b94376c390dd8e917d39dfbaed1092d9a661dbdb67635863f9a14b129948f1244929faf60f5b7c1d6fae142d87fb2c66455f49d0d3663f7498b275efad4ed93"",; > ""NameHash512"": ""46c31c9178b3290b2f57e9b682ea8eebe885ba9037e48cb6b385a0c70ce13e2b259400bc9bda4aca912c3b857edde7de41d11b1a7b9ccbe8b24df77808c22e59"",; > ""DecoySeqHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""DecoyNameHash"": ""e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"",; > ""num_decoys"": 0,; > ""first_decoy_index"": 18446744073709551607,; > ""keep_duplicates"": false; > }. And the command I used:. `/home/bayegy/pipelines/metagenome/softwares/salmon-latest_linux_x86_64/bin/salmon quant --validateMappings -i /media/bayegy/disk1/Projects/qianquan-zhangke/result/Assembly_out//salmon_index -l A -p 90 --meta -1 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_1.fastq.gz -2 /media/bayegy/disk1/Projects/qianquan-zhangke/result/kneaddata_out//YGSC11_R1_kneaddata_paired_2.fastq.gz -o /media/bayegy/disk1/Projects/qianquan-zhangke/result/salmon_out//YGSC11.quant`. Sometimes, salmon would stay at the step of ""Starting optimizer"" for hours(10 hours at least). The CPU utilization is 100%, but the procedure never move forward. > [2020-06-04 12:06:12.254] [jointLog] [info] Mapping rate = 91.8009%; > ; > [2020-06-04 12:06:12.254] [jointLog] [info] finished quantifyLibrary(); > [2020-06-04 12:06:12.254] [jointLog] [info] Starting optimizer. The funny thing is that salmon would pass this step in no time if I restart the procedure with same command. It is annoying that I have to check the log time to time to restart salmon when it get blocked. I wonder what is the possible reason for this and how can i st",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/532:1272,pipeline,pipelines,1272,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/532,1,['pipeline'],['pipelines']
Deployability," I tried loading all of the entry names into a computing language, and check that the number of unique names was identical to the total number (suggesting that this wasn't the case). **To Reproduce**; I required to re-run some RNA seq mapping from someone who left the lab, and gave me this script (I've asked them, they did not really know what got wrong). ```; conda create --name rnaseq -c bioconda salmon; conda activate rnaseq; conda install -c conda-forge -c bioconda salmon=1.4.0; mkdir -p reference . # reference genome; wget -O reference/genome.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_genomic.fna.gz. # reference Transcriptome; wget -O reference/transcripts.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_cds_from_genomic.fna.gz. # prepare file with ""decoy"" sequences; zcat reference/genome.fa.gz | grep ""^>"" | cut -d "" "" -f 1 | sed -e 's/>//g' > reference/decoys.txt. # concatenate the two; cat reference/transcripts.fa.gz reference/genome.fa.gz > reference/gentrome.fa.gz. # Try to create index, this gives problems; salmon index -t reference/gentrome.fa.gz -d reference/decoys.txt -p 12 -i salmon_index --gencode -k 31; ```. The last one gives an error:; ```; Version Info: This is the most recent version of salmon.; [2021-03-30 14:29:34.652] [jLog] [info] building index; out : salmon_index; [2021-03-30 14:29:34.653] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2021-03-30 14:29:34.670] [puff::index::jointLog] [error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character.; ```. **Desktop (please complete the following information):**; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.5 LTS; Release:	18.04; Codename:	bionic",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/642:2501,Release,Release,2501,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642,1,['Release'],['Release']
Deployability," an email with the max vmem, which matches the `qacct` output). Here is the bash script:. ```bash; #!/bin/bash; #$ -cwd; #$ -l mem_free=14G,h_vmem=15G,h_fsize=100G; #$ -N step6-salmon_test2.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test2.$TASK_ID.txt; #$ -e ./logs/salmon_test2.$TASK_ID.txt; #$ -m e; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/A",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:27897,pipeline,pipeline,27897,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['pipeline'],['pipeline']
Deployability," annotation and assembly available here : https://data.jgi.doe.gov/refine-download/phytozome?q=Chlamydomonas+reinhardtii+CC-4532; Reads available here : https://www.ncbi.nlm.nih.gov/sra/SRR10737773. Gentrome and Transcriptome indexes where generate as follows : ; ```; grep ""^>"" <(gunzip -c CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt. cat CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz CreinhardtiiCC_4532_707_v6.0.hardmasked.fa.gz > gentrome.fa.gz. salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i index_gentrome; salmon index -t CreinhardtiiCC_4532_707_v6.1.transcript_primaryTranscriptOnly.fa.gz -p 12 -i index_transcriptome; ```; Salmon quant was run as follows:; ```; salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; salmon quant -i index_transcriptome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_transcriptome; ```; I get this error when quantifying on gentrome and not transcriptome (full log : [salmon.log](https://github.com/user-attachments/files/17371227/salmon.log)). ```; /usr/include/c++/14.1.1/bits/stl_vector.h:1130: std::vector<_Tp, _Alloc>::reference std::vector<_Tp, _Alloc>::operator[](size_type) [with _Tp = Transcript; _Alloc = std::allocator<Transcript>; reference = Transcript&; size_type = long unsigned int]: Assertion '__n < this->size()' failed.; salmon.sh: line 3: 54621 Aborted (core dumped) salmon quant -i index_gentrome -l A -1 SRR10737773_1.fastq -2 SRR10737773_2.fastq -p 12 -o quant_gentrome; ```. **Detail**; OS : Arch Linux x86_64; Kernel : 6.9.7-arch1-1; gcc: 14.1.1 20240522; Salmon version : 1.10.3; Salmon was installed through **Arch AUR** (https://aur.archlinux.org/packages/salmon) because conda triggers another bug.; I suspect that this is the cause of the bug. I tried to clean up my dependencies/packages but could not fix the bug. . Thank you for this great program! Cheers!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/965:1945,install,installed,1945,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/965,1,['install'],['installed']
Deployability," attached the output from the indexing run). The memory allocation was as below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz. * Which read files were used?; Files used for salmon quant are attached (*fq.gz). * Which which program options were used?; None specifically was invoked to run salmon.; I am running salmon on a cluster (Linux 3.10.0-957.el7.x86_64 x86_64). **Expected behavior**; A clear and concise description of what you expected to happen. I expect the salmon quant to align and quantify the reads. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 1) Attaching the",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/561:1622,install,installed,1622,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561,1,['install'],['installed']
Deployability," below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcripts.fa.gz; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/GRCm38.primary_assembly.genome.fa.gz. * Which read files were used?; Files used for salmon quant are attached (*fq.gz). * Which which program options were used?; None specifically was invoked to run salmon.; I am running salmon on a cluster (Linux 3.10.0-957.el7.x86_64 x86_64). **Expected behavior**; A clear and concise description of what you expected to happen. I expect the salmon quant to align and quantify the reads. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 1) Attaching the screenshot in the zipped folder.; 2) Attaching the screenshot of the con",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/561:1729,release,releases,1729,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561,1,['release'],['releases']
Deployability," bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is in alevin, single-cell mode. **Describe the bug**; The log shows that there are at least 50% percent reads has been thrown away, and the mapping rate was between 18.7%-19.1%. **To Reproduce**; Steps and data to reproduce the behavior:; Reference was indexed using transcripts without decoy, and command line parameters are described below; The genome was not published so I can't share with you that, and I'm sorry with that. Specifically, please provide at least the following information:; * Which version of salmon was used? ; salmon 1.4.0. * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Bioconda. * Which reference (e.g. transcriptome) was used? ; The reference genome is sequenced by ourselves, and it's a plant. Reference was indexed using transcripts without decoy. * Which read files were used?; my reads layout is paired end 150bp; Will the 150bp reads affect the pipeline, and if it will, how can I make it to 28bp R1 and 91bp R2, which is identical to cellranger makefastq output.; > R1: ; @A00582:424:HJYLGDSXY:3:1101:1090:1000 1:N:0:ACCGGCTC; TAACCAGGTCGAGTGAGTATTTAAGGCGCGCGGCGCACCAACGCACTCCCAACAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; > +; FFFFFFFFFFFFFFFFFFFFFFFFFFFF,,:,,FF:,,,::FF,,:F,,,,,,F:,,,:,::FF::::::,FFF:F:FF:FFFFFFF::FF::FF,F:F:FF:F,FFFF,:FF,FFFFF:,FF:::FF:FFF:FF:FF:FFFFFFFFFF:; > R2:; @A00582:424:HJYLGDSXY:3:1101:1090:1000 2:N:0:ACCGGCTC; NCCTAGAAGCAGCCACCCTTGAAAGAGTGCGTAATAGCTCACTGATCGAGCGCTCTTGCGCCGAAGATGAACGGGGCTAAGCGATCTGCCGAAGCTGTGGGATGTAAAAATACATCGGTAGGGGAGCGTTCCGCCTTAGAGAGAAGCCTC; > +; #FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFF::FFFFFFFFFF:FFFFFFFFFFFFF:FFFFFF:FFFFFFF:. * Which which program options were used?; `salmon alevin -l ISR -1 ../clean/sample_S1_L001_R1_001.fastq -2 ../clean/sample_S1_L001_R2_001.fastq --",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/620:1000,pipeline,pipeline,1000,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620,1,['pipeline'],['pipeline']
Deployability," concise description of what the bug is.; The new updates to the `cmd_info.json` file result in an extra `:` at the end of `""salmon_version:""` inside the quotes. This results in the json file being read in with the header of that entry being `salmon_version:` when it should be `salmon_version`. . Note that this was found when running `salmon alevin` in the `--rad` or `--justAlign` mode and we have not tested if this is also the case when running only `salmon alevin`. . **To Reproduce**; Steps and data to reproduce the behavior:; We ran alevin-fry v0.4.1 starting with `salmon alevin` using `--rad` on single-cell data in the salmon biocontainer and that led to the `cmd_info.json` file being output with the extra `:` on salmon_version. . The biocontainer that we used was: quay.io/biocontainers/salmon:1.5.2--h84f40af_0 . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; used the biocontainer ; * Which reference (e.g. transcriptome) was used?; used the splici index following the alevin-fry tutorial ; * Which read files were used?; * Which which program options were used?; ```; salmon alevin -l ISR --chromiumV3 --dumpFeatures --rad; ```. **Expected behavior**; A clear and concise description of what you expected to happen.; We would expect that the extra `:` would not be included to be consistent with previous versions of salmon. ; <img width=""325"" alt=""Screen Shot 2021-07-29 at 12 35 38 PM"" src=""https://user-images.githubusercontent.com/54039191/127538599-206d5e71-cb7a-4a82-8064-4e92e12ee892.png"">. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add an",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/691:1087,install,installed,1087,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/691,1,['install'],['installed']
Deployability," configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checking for C compiler version; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc --version >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -v >&5; Apple clang version 15.0.0 (clang-1500.0.40.1); Target: arm64-apple-darwin22.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; configure:5170: $? = 0; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -V >&5; clang: error: argument to '-V' is missing (expected 1 value); clang: error: no input files; configure:5170: $? = 1; configure:5159: /Library/Developer/CommandLineTools/usr/bin/cc -qversion >&5; clang: error: unknown argument '-qversion'; did you mean '--version'?; clang: error: no input files; configure:5170: $? = 1; configure:5190: checking whether the C compiler works; configure:5212: /Library/Developer/CommandLineTools/usr/bin/cc conftest.c >&5; ld: library 'System' not found; clang: error: linker command failed with exit code 1 (use -v to see invocation); configure:5216: $? = 1; configure:5254: result: no; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""XZ Utils""; | #define PACKAGE_TARNAME ""xz""; | #define PACKAGE_VERSION ""5.2.2""; | #define PACKAGE_STRING ""XZ Utils 5.2.2""; | #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; | #define PACKAGE_URL ""http://tukaani.org/xz/""; | #define NDEBUG 1; | #define HAVE_ENCODER_LZMA1 1; | #define HAVE_ENCODER_LZMA2 1; | #define HAVE_ENCODER_DELTA 1; | #define HAVE_ENCODER_X86 1; | #define HAVE_ENCODER_POWERPC 1; | #define HAVE_ENCODER_IA64 1; | #d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:5741,Install,InstalledDir,5741,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['Install'],['InstalledDir']
Deployability," it needs attention. i am using anaconda environment for many tools and keep it updated as much as possible with the `conda update --all` command. but the bottleneck is salmon, which has very old dependencies, and it's a dilemma either to update salmon from 0.8.1 (pretty old buggy version) to the latest one (0.11.3) and downgrade a bunch of other important packages, or vice versa. **Describe the bug**; a bug is a species of animal kingdom, a small insect (just kidding). **To Reproduce**; Steps and data to reproduce the behavior:; ```; $ conda update salmon; Solving environment: done. ## Package Plan ##. environment location: /home/software/anaconda2. added / updated specs: ; - salmon. The following packages will be downloaded:. package | build; ---------------------------|-----------------; salmon-0.11.3 | h86b0361_2 2.9 MB bioconda; blas-1.0 | mkl 6 KB; numpy-1.14.3 | py27h28100ab_1 41 KB; ------------------------------------------------------------; Total: 3.0 MB. The following packages will be UPDATED:. jemalloc: 4.5.0-0 bioconda --> 5.1.0-hfc679d8_0 conda-forge; libgcc-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; libstdcxx-ng: 7.2.0-hdf63c60_3 conda-forge --> 8.2.0-hdf63c60_1 ; salmon: 0.8.1-0 bioconda --> 0.11.3-h86b0361_2 bioconda . The following packages will be DOWNGRADED:. blas: 1.1-openblas conda-forge --> 1.0-mkl ; fastqc: 0.11.7-5 bioconda --> 0.11.6-2 bioconda ; gsl: 2.4-blas_openblash47a8a8e_1 conda-forge [blas_openblas] --> 2.1-2 conda-forge; numpy: 1.15.1-py27_blas_openblashd3ea46f_1 conda-forge [blas_openblas] --> 1.14.3-py27h28100ab_1 ; openjdk: 8.0.144-zulu8.23.0.3_2 conda-forge --> 8.0.121-1 ; scikit-learn: 0.19.2-py27_blas_openblasha84fab4_201 conda-forge [blas_openblas] --> 0.19.1-py27hedc7406_0 ; scipy: 1.1.0-py27_blas_openblash7943236_201 conda-forge [blas_openblas] --> 1.1.0-py27hd20e5f9_0; ```. **Expected behavior**; salmon should be updated to the latest version without the requirement of downgrading of its dependencies. Linux ns",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/286:1052,UPDATE,UPDATED,1052,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/286,1,['UPDATE'],['UPDATED']
Deployability," mm10, Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; * Which read files were used? 125-bases PE RNA-seq samples; * Which which program options were used? `-l A` and `-g`. **Expected behavior**; Transcript ID should be found, translated into GeneSymbol and used for gene-level abundance.; Instead the program fails to find transcript ID even though it exists exactly as expected. **Screenshots**; etc. For all genes.; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082416.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082417.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082418.1] in transcript <-> gene map; returning transcript as it's own gene`. **Desktop (please complete the following information):**; - OS: CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; `Linux 3.10.0-1160.6.1.el7.x86_64 #1 SMP Tue Nov 17 13:59:11 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux`; LSB Version: :core-4.1-amd64:core-4.1-noarch ; Distributor ID: CentOS ; Description: CentOS Linux release 7.9.2009 (Core) ; Release: 7.9.2009 ; Codename: Core. **Additional context**; This is a wonderful feature, and makes the need for downstream analysis with `tximoprt` redundant. PLEASE HELP :); Attaching `head` of `quant.sf`, `quant.gene.sf`, `transcript_to_id_mm10` files. Identical transcript ID can be easily seen in both files.; THANK YOU; [transcript_to_id_mm10.head.txt](https://github.com/COMBINE-lab/salmon/files/5739701/transcript_to_id_mm10.head.txt); [quant.genes.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739703/quant.genes.head.sf.txt); [quant.head.sf.txt](https://github.com/COMBINE-lab/salmon/files/5739704/quant.head.sf.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/607:2371,release,release,2371,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/607,2,"['Release', 'release']","['Release', 'release']"
Deployability," needs to be run in alignment mode for accurate counting. My main question then concerns the optimal parameters for the upstream alignment step. The ONT community seems to have settled on using minimap2 for this, but beyond that the guidance gets a bit murky... The [minimap2](https://github.com/lh3/minimap2/#map-long-splice) documentation suggests the following command for mapping long RNA reads:. `minimap2 -ax splice:hq -uf ref.fa reads.fq > aln.sam`. This approach seems to employ a splicing aware algorithm against a genomic reference, using canonical splicing signals to help map the transcripts. However, this method doesn't seem to be applicable to Salmon given the requirement that the reads are aligned directly to the transcriptome (hence the need to account for splicing with '_-ac splice_' is lost). An alternative approach I've seen (i.e., the one used in ONT's own DGE [pipeline](https://github.com/nanoporetech/pipeline-transcriptome-de)) is to use minimap2 to align to the transcriptome reference but to retain a large number of secondary mappings (-N 100 in minimap2):. `minimap2 -ax map-ont -N 100 transcriptome.fa reads.fq`. This makes more sense in terms of the _-ax_ preset used, but I guess I'm just wondering then what the optimal input for Salmon would be in order to get the most accurate count data? I know secondary mappings are important for the algorithm to calculate uncertainty / maximum likelihood, but is there an recommend number of these to retain? The logic behind allowing for a high number of secondary alignments when using a transcriptome reference is to account for the high similarity among isoforms. From a high-level view I could see how this might be problematic though, depending on how Salmon actually uses the alternate mappings (i.e., is it just for the statistics or does it affect the counts as well?). . I've also seen groups toying with adjusting the _-p_ setting in minimap2 which sets the minimal ratio of the secondary to primary alignment sc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/790:1203,pipeline,pipeline-transcriptome-de,1203,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/790,1,['pipeline'],['pipeline-transcriptome-de']
Deployability," powerpc ia64 arm armthumb sparc; configure:3213: checking which decoders to build; configure:3305: result: lzma1 lzma2 delta x86 powerpc ia64 arm armthumb sparc; configure:3644: checking which match finders to build; configure:3695: result: hc3 hc4 bt2 bt3 bt4; configure:3713: checking which integrity checks to build; configure:3755: result: crc32 crc64 sha256; configure:3792: checking if assembler optimizations should be used; configure:3816: result: no; configure:3847: checking if small size is preferred over speed; configure:3865: result: no; configure:3881: checking if threading support is wanted; configure:3907: result: yes, posix; configure:3940: checking how much RAM to assume if the real amount is unknown; configure:3955: result: 128 MiB; configure:4085: checking if library symbol versioning should be used; configure:4108: result: no; configure:4126: checking for a shell that conforms to POSIX; configure:4167: result: /bin/sh; configure:4208: checking for a BSD-compatible install; configure:4276: result: /usr/bin/install -c; configure:4287: checking whether build environment is sane; configure:4342: result: yes; configure:4493: checking for a thread-safe mkdir -p; configure:4532: result: build-aux/install-sh -c -d; configure:4539: checking for gawk; configure:4569: result: no; configure:4539: checking for mawk; configure:4569: result: no; configure:4539: checking for nawk; configure:4569: result: no; configure:4539: checking for awk; configure:4555: found /usr/bin/awk; configure:4566: result: awk; configure:4577: checking whether make sets $(MAKE); configure:4599: result: yes; configure:4628: checking whether make supports nested variables; configure:4645: result: yes; configure:4771: checking whether ln -s works; configure:4775: result: yes; configure:4795: checking for style of include used by make; configure:4823: result: GNU; configure:4894: checking for gcc; configure:4921: result: /Library/Developer/CommandLineTools/usr/bin/cc; configure:5150: checkin",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:4273,install,install,4273,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['install'],['install']
Deployability," salmon (bulk mode) or alevin (single-cell mode)?**; This is relevant to salmon.; **Describe the bug**; I have been trying to run the salmon quant commando and have kept running into the following error:; Exception : [Error: The index version file salmon_index_gencode_vM25/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; bad ; After going through some of the previous complaints, I figured that there was a bad memory allocation while creating the index. I increased the memory allocation which seems to have solved the indexing problem (please see attached the output from the indexing run). The memory allocation was as below:; qrsh -l mem_free=30G,h_vmem=35G,h_stack=256M; I had tried 24G but did not work. So increased to 30G and that seem to have worked for indexing. Although I can see the versionInfo.json file in the index folder, I still get the above error. I used the method described in the following link to create the index, except that I used mouse gencode release vM25.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. Output of the indexing run is attached (indexing_output.sh). I highly appreciate any help in troubleshooting this issue. Thank you. **To Reproduce**; Steps and data to reproduce the behavior:; I can send the read files I am trying to align/quantify (*.fq.gz files). I am not able to attach them here because of the size. Specifically, please provide at least the following information:. * Which version of salmon was used?; salmon 1.3.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.3.0/salmon-1.3.0_linux_x86_64.tar.gz; tar xzvf salmon-1.3.0_linux_x86_64.tar.gz; Directory was relabeled as salmon. * Which reference (e.g. transcriptome) was used?; Mouse Gencode vM25; wget http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M25/gencode.vM25.transcript",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/561:1079,release,release,1079,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/561,1,['release'],['release']
Deployability," salmon tutorial on the provided arabidopsis data set. **To Reproduce**. * Which version of salmon was used?. salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. * How was salmon installed (compiled, downloaded executable, through bioconda)?. bioconda. * Which reference (e.g. transcriptome) was used?. To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. * Which read files were used?. See above. * Which which program options were used?. I used the bash script from ; https://combine-lab.github.io/salmon/getting_started/. **Expected behavior**. I expected an output indicating successful quantification. **Screenshots**. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jointLog] [info] Loading Quasi index; [2018-11-24 15:08:09.877] [jointLog] [info] Loading 32-bit quasi index; [2018-11-24 15:08:09.877] [stderrLog] [info] Loading Suffix Array ; [2018-1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/317:1196,upgrade,upgrade,1196,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317,1,['upgrade'],['upgrade']
Deployability," to generate our index . SLURM script; ```bash; #!/bin/bash; #SBATCH --chdir=/path/to/working/dir/; #SBATCH --partition=short; #SBATCH --job-name=Salmon; #SBATCH --error=/path/to/logs/%x_%j.err; #SBATCH --output=/path/to/logs/%x_%j.out; #SBATCH --ntasks=6; #SBATCH --time=02:00:00; #SBATCH --cpus-per-task=2; #SBATCH --mem-per-cpu=30G; module load parallel # parallel/20150822-GCC-4.9.2; module load Anaconda3/2022.05; conda activate Salmon. parallel --jobs 6 --header : --colsep ',' \; 'salmon quant -I /path/to/index/folder/ \; -l A\; -1 /path/to/""{fastq_1}"" \; -2 /path/to/""{fastq_2}""\; --writeUnmappedNames \; --validateMappings \; --recoverOrphans\; --gcBias \; --seqBias \; --recoverOrphans\; -o /path/to/output/{Samples} \; --threads 2' :::: /path/to/sheet_with_sample_and_fastq_names.csv; ```; Specifically, please provide at least the following information:. * Which version of salmon was used?; Both 1.10.2 and 1.10.3 were tested. ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Used bioconda; * Which reference (e.g. transcriptome) was used?; GRCh38 ; * Which read files were used?; Illumina NovaSeq. Merged fastq based on direction (fastq split across lanes and had to add top off data) with zcat, used cutadapt for adapter trimming. . * Which which program options were used?; Ribodetector was used to get rid of rRNA contamination. Used output of non rRNA files with Salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon Quant outputting of .sf files. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; From SLURM generated error file. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; HPCS: Red Hat Server 7.9. **Additional context**; Add any other context about the problem here.; Re",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/961:1529,install,installed,1529,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/961,1,['install'],['installed']
Deployability," upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spool/compute-060/job_scripts/9987283: line 31: 1629 Aborted (core dumped) /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Softw; are/Salmon-0.7.2_linux_x86_64/bin/salmon quant -i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}; **** Job ends ****; Wed Mar 8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gd",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:29772,pipeline,pipeline,29772,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['pipeline'],['pipeline']
Deployability,"!/bin/bash; #$ -cwd; #$ -l mem_free=10G,h_vmem=11G,h_fsize=100G; #$ -N step6-salmon_test.gsk_phaseII; #$ -pe local 1; #$ -o ./logs/salmon_test.$TASK_ID.txt; #$ -e ./logs/salmon_test.$TASK_ID.txt; #$ -m a; echo ""**** Job starts ****""; date. echo ""**** JHPCE info ****""; echo ""User: ${USER}""; echo ""Job id: ${JOB_ID}""; echo ""Job name: ${JOB_NAME}""; echo ""Hostname: ${HOSTNAME}""; echo ""Task id: ${TASK_ID}"". FILE1=$(awk 'BEGIN {FS=""\t""} {print $1}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); FILE2=$(awk 'BEGIN {FS=""\t""} {print $3}' /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk ""NR==${SGE_TASK_ID}""); ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test/${ID}. echo ""**** Job ends ****""; date; ```. The log file for the same file (task 3) now shows that there was a problem:. ```; **** Job starts ****; Wed Mar 8 11:37:31 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987275; Job name: step6-salmon_test.gsk_phaseII; Hostname: compute-051; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:22253,pipeline,pipeline,22253,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['pipeline'],['pipeline']
Deployability,"# tl;dr; - `salmon alevin` returns an error if the cell barcode length is > 31 base pairs; - This blocks me from using `salmon alevin` for a novel scRNA-seq chemistry that has a 34 base pair cell barcode.; - Previously the `salmon alevin` maximum cell barcode length was increased from 20 base pairs to 31 base pairs. https://github.com/COMBINE-lab/salmon/discussions/629; - Could you please increase the maximum cell barcode length again?; - Or provide guidance on how I should do this in my own fork of salmon?. # Summary. This bug primarily related to alevin (single-cell mode). **Describe the bug**. **To Reproduce**; ```; salmon alevin; -i /path/to/salmon_index ; -p 16 ; -l ISR; --read-geometry 2[1-100] ; --bc-geometry 1[1-34] ; --umi-geometry 1[35-44] ; --sketch ; -1 /path/to/r1.fastq ; -2 /path/to/r2.fastqs; -o /output/path ; --tgMap /path/to/t2g.tsv; ```. Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Salmon version`v1.10.1`; * How was salmon installed? -> Compiled; * Encountered this error when running a feature barcoding analysis following this tutorial https://combine-lab.github.io/alevin-fry-tutorials/2021/af-feature-bc/. **Expected behavior**; Salmon alevin does not error out when the cell barcode length is 34 base pairs. **Screenshots**; Error log; `[2024-06-17 22:00:25.466] [alevinLog] [error] Barcode length (34) was not in the required length range [1, 31].`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/943:1021,install,installed,1021,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/943,1,['install'],['installed']
Deployability,"## Describe the bug; When I run the following command:; ```; salmon quant --threads 1 --libType=U -i index -r SRR493367.fastq.gz -o SRR493367; ```. I get the following error(s) even though the same version of kallisto was used for the indexing & quantifiation:; ```; Encountered exception [JSON Parsing failed - provided NVP (SeqHash512) not found] when loading index.; The index was likely build with an older (and incompatible) version of RapMap. Please re-build the index with a compatible version.; ```. ## To Reproduce; - Install docker ; - Download transcriptome:; ```; wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_27/gencode.v27.transcripts.fa.gz; ```; - Run docker container (warning 2GB):; ```; docker run -v $PWD -w $PWD:$PWD -it lifebitai/rnaseq-nf-dseq2 bash; ```; - Download reads (warning reads are 2.3GB:; ```; fastq-dump SRR493367; ```; - Index transcriptome:; ```; salmon index --threads 1 -t gencode.v27.transcripts.fa.gz -i index; ```; - Run quantification cmd above. <br />; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.12.0; * How was salmon installed? Download precompliied binary and made Dockerfile with the following:; ```Dockerfile; COPY ./salmon-0.12.0_linux_x86_64/bin /usr/local/bin; COPY ./salmon-0.12.0_linux_x86_64/lib /usr/local/lib. RUN chmod -R u+x /usr/local/bin. ENV PATH=""$PATH:/usr/local/bin""; ```; * Which reference (e.g. transcriptome) was used? gencode.v27.transcripts.fa.gz; * Which read files were used? SRR493367.fastq.gz; * Which which program options were used? See above. I encountered this error when running this [Nextflow pipeline](https://github.com/PhilPalmer/RNASeq-nf-dseq2). More details can be found [here](https://deploit.lifebit.ai/public/jobs/5c6eca93758e8300a8740a59) . Any ideas what the problem may be? I am not sure if it is a problem with my installation of Salmon, the [data](https://www.ncbi.nlm.nih.gov/sra/?term=SRR493367), the command or something",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/345:527,Install,Install,527,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/345,1,['Install'],['Install']
Deployability,"## Description of bug and how to reproduce. Short version: the error message telling users that -l has to go before -1 and -2 doesn’t always seem to work. I think I found an issue with the error messages from Salmon (in particular, I think a certain error message isn’t always reported when it should be). Long version of the story: I ran salmon (v1.6.0, installed with conda on linux, run on bulk data, mm10 data, both my own reference and a precomputed one) with the command:. ```; salmon quant -i $index -1 $read1 -2 $read2 –o res -l A --posBias –-validateMapping; ```. Where $index is the index, $read1 and $read2 are the reads. And it crashed without throwing an error, outputting:. ```; Logs will be written to Salmon_out/res/logs; [2022-01-20 13:56:19.915] [jointLog] [info] setting maxHashResizeThreads to 52; [2022-01-20 13:56:19.915] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2022-01-20 13:56:19.915] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2022-01-20 13:56:19.915] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2022-01-20 13:56:19.915] [jointLog] [info] parsing read library format; ```. But no errors/no other outputs after that. I reran many times with slightly different settings, including different set of reads and a different reference with the same results, but only got an error when I ran: . ```; salmon quant -p 1 -i $index -1 $read1 -2 $read2 –o res_new -l OSR; ```. Which returned the error:. ```; [2022-01-20 14:39:44.578] [jointLog] [error] Failed to successfully parse any complete read libraries. Please make sure you provided arguments properly to -1, -2 (for paired-end libraries) or -r (for single-end libraries), and that the library format option (-l) *comes before* the read libraries.; ```. This error allowed me to fix the original command (running now, yay!) but I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/736:355,install,installed,355,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/736,1,['install'],['installed']
Deployability,"(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; Starting program: ./salmon/build-debug/src/salmon alevin -l ISR --chromium -p 1 -o 85948/alevin -1 <(gunzip -c ./85948/run1/85948_S18_L001_R1_001.fastq.gz) -2 <(gunzip -c ./85948/run1/85948_S18_L001_R2_001.fastq.gz) -i ./salmon/transcripts_index --tgMap tx2gene.txt; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/lib/x86_64-linux-gnu/libthread_db.so.1"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [New Thread 0x7fff7e0f4700 (LWP 27861)]; [Thread 0x7fff7e0f4700 (LWP 27861) exited]; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; [New Thread 0x7fff7d273700 (LWP 27862)]; Logs will be written to 85948/alevin/logs; [New Thread 0x7ffefc3f1700 (LWP 27865)]; [New Thread 0x7ffe7b56f700 (LWP 27866)]; [New Thread 0x7ffdfa6ed700 (LWP 27867)]; ### salmon (single-cell-based) v0.10.1; ### [ program ] => salmon; ### [ command ] => alevin; ### [ libType ] => { ISR }; ### [ chromium ] => { }; ### [ threads ] => { 1 }; ### [ output ] => { 85948/alevin }; ### [ mates1 ] => { /dev/fd/63 }; ### [ mates2 ] => { /dev/fd/62 }; ### [ index ] => { ./salmon/transcripts_index }; ### [ tgMap ] => { tx2gene.txt }. [2018-06-08 11:55:47.378] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [New Thread 0x7ffd797e8700 (LWP 27869)]; [New Thread 0x7ffcf97e7700 (LWP 27870)]; [2018-06-08 11:55:47.387] [alevinLog] [info] Processing barcodes files (if Present). processed 6 Million barcodes[New Thread 0x7ffc77265700 (LWP 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/234:1485,release,releases,1485,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/234,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,")?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon 1.1.0 and 1.0.0 core-dump when attempting to build an index under Ubuntu 18.04 LTS; **To Reproduce**; Steps and data to reproduce the behavior:; ```; root@firefly:/usr/local/src/salmon# salmon-1.1.0_linux_x86_6/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: This is the most recent version of salmon.; [2020-04-07 21:11:41.237] [jLog] [info] building index; out : index; [2020-04-07 21:11:41.240] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; Illegal instruction (core dumped). root@firefly:/usr/local/src/salmon# salmon-0.14.1_linux_x86_64/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; [2020-04-07 21:12:14.575] [jLog] [info] building index; [2020-04-07 21:12:14.580] [jointLog] [info] [Step 1 of 4] : counting k-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [j",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/500:1038,release,releases,1038,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,"**Describe the bug**; Build problem. . Centos 6.9's boost is too old for salmon. There are RPMs for 1.5.7 installed. The library files are in /usr/lib64 and the include files are in /usr/include/boost157. These all work and are employed by numerous other packages without issues. Using devtoolset-4 (for a recent enough compiler) and a freshly built cmake 3.1.3 this command:. `scl enable devtoolset-4 '~/bin/cmake -DBOOST_ROOT=/usr/lib64 ../CMakeLists.txt'; `; fails with . ```; -- Could NOT find Boost; BOOST_INCLUDEDIR = ; BOOST_LIBRARYDIR = ; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This:; `scl enable devtoolset-4 '~/bin/cmake -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt; `; fails with:. ```; BOOST_INCLUDEDIR = /usr/include/boost157; BOOST_LIBRARYDIR = /usr/lib64; Boost_FOUND = 0; CMake Error at CMakeLists.txt:346 (message):; Salmon cannot be compiled without Boost. ```; This::; `scl enable devtoolset-4 '~/bin/cmake -DBoost_NO_BOOST_CMAKE=BOOL:ON -DBOOST_LIBRARYDIR=/usr/lib64 -DBOOST_INCLUDEDIR=/usr/include/boost157 ../CMakeLists.txt'; `; fails the exact same way. Examined the CMakeLists.txt file, found the list of acceptable versions starts with 1.59.0. Crud. ; Tried modifying one line to:; ` find_package(Boost 1.57.0 COMPONENTS iostreams filesystem system thread timer chrono program_options); `; but it still failed. I am out of tricks. Is it really the case that Salmon cannot use 1.57.0?. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/236:106,install,installed,106,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/236,1,['install'],['installed']
Deployability,"**Describe the bug**; I am trying to quantify long reads mapped using minimap2 and I am getting a large number of the following messages:. ```; [2018-09-10 12:42:32.972] [jointLog] [warning] CIGAR = 106c16M1D7M1D8M1D26M1D55M3D8M1D32M2I14M1I8M1I52M1D14M1I2M1I19M1I1M1I7M11D28M1D5M3I40M1D5M1I5M1I6M1I13M147c; [2018-09-10 12:42:32.972] [jointLog] [warning] (in update()) CIGAR string for read [e6b69e2f-1bf2-4fd5-bace-d4d213164026] seems inconsistent. It refers to non-existant positions in the read!. ```. **To Reproduce**; * Which version of salmon was used?; salmon version: salmon 0.11.3, minimap2 version: 2.9-r720; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed through bioconda.; * Which reference (e.g. transcriptome) was used?; Ensembl [cDNA collection](http://ftp.ensembl.org/pub/release-93/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz).; * Which read files were used?; Nanopore reads.; * Which which program options were used?; salmon quant -p {threads} -t {input.trs} -l SF -a {input.bam} -o {output.tsv_dir}. **Desktop (please complete the following information):**; Ubuntu 14.04.5 LTS. **Additional context**; I am wondering whether the issue is caused by the fact that minimap2 does not include sequences in the secondary alignments. The errors disappear if I filter for primary alignments only.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/289:358,update,update,358,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/289,4,"['Install', 'install', 'release', 'update']","['Installed', 'installed', 'release-', 'update']"
Deployability,"**Describe the bug**; I followed every step of this tutorial to generate the index.; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; Instead of using the mouse genomic data, I used the human data (https://www.gencodegenes.org/human/release_33lift37.html).; I invoked the indexing with the following command: ; **salmon index -t gentrome.fa.gz -d decoys.txt -p 8 -i salmon_index --gencode**; In the beginning everything seems to run smoothly, but a couple minutes in different error messages appear:; **error: Cant write to a temporary file**; **error: Cant read the input file**; followed by **Segmentation fault** and then the algorithm exits. ; Nonetheless a directory with different files regarding the indexing is beeing created.; However when I run; **salmon quant -i salmon_index/ -l A -1 ../../patients/patient001/fastq/S0012_1.fastq.gz -2 ../../patients/patient001/fastq/S0012_2.fastq.gz --validateMappings -o transcripts_quant**. it tells me that **The index version file salmon_index/versionInfo.json doesn't seem to exist**. **To Reproduce**; I installed salmon via bioconda, version 1.1.0. **Desktop (please complete the following information):**; Its running on CentOS 7",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/503:1081,install,installed,1081,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/503,1,['install'],['installed']
Deployability,"**Describe the bug**; I tried to compile salmon following instructions. I downloaded the latest release (v1.10.1), and I also cloned the master branch at commit 1c3f6c014ce77ec593d5b37ee2bb0cf9feddf123 with the same result. In the newly created ""build"" folder, I run ""cmake .."" either with or without the flag specifying the location of the boost library (-DBOOST_ROOT=/usr/lib/x86_64-linux-gnu, as that's where I see several libboost_<something>.so files). I didn't use any other flag. In all cases, cmake ends without complaining. Then, I run ""make"", which proceeds for several minutes until it ends up printing the following final lines:. [ 99%] Building CXX object src/CMakeFiles/salmon.dir/BAMUtils.cpp.o; [100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xfef): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; 0x7f0fa367051f ???; 	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0; 0x7f0fa3657d8f __libc_start_call_main; 	../sysdeps/nptl/libc_start_call_main.h:58; 0x7f0fa3657e3f __libc_start_main_impl; 	../csu/libc-start.c:392; Please submit a full bug report,; with preprocessed source if appropriate.; Please include the complete backtrace with any bug report.; See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:487: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:603: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:166: all] Error 2. **To Reproduce**; That happened in an Ubuntu 22.04.2 LTS, with cmake version 3.22.1, GNU make 4.3, gcc 11.3.0, etc.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/860:96,release,release,96,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/860,2,"['install', 'release']","['install', 'release']"
Deployability,"**Describe the bug**; The compilation fails when prerequisite external sources are downloaded from ; the GitHub and the downloaded file sha256 signature is compared to what is ; stored in salmon distribution files. The relevant portion of log:. make[6]: Entering directory `/export/repositories/biotools-admix/BUILD/salmon_1.1.0-1.1.0/salmon-1.1.0/build'; [ 7%] Performing download step for 'libtbb'; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 125 100 125 0 0 976 0 --:--:-- --:--:-- --:--:-- 976; 100 126 100 126 0 0 787 0 --:--:-- --:--:-- --:--:-- 787; 100 2519k 0 2519k 0 0 3504k 0 --:--:-- --:--:-- --:--:-- 4772k; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match. **To Reproduce**; Compiling with all needed prerequisites (outside of salmon) loaded via modules. ; Using Centos 7.7 with gcc 8.4.0, boost 1.66.9. mkdir build; cd build; cmake -DBOOST_ROOT=$BOOST_HOME -DCMAKE_INSTALL_PREFIX=/opt/apps/salmon/1.1.0 .. ; make . * Which version of salmon was used?; salmon 1.1.9 (fails to download tbb-2019-U8.tgz); salmon 0.14.0 (fails to download tbb-2018-U3.tgz); ; The problem lies in the repository for tbb. At some recent point after March 5; ( I have successfully built salmon 0.14.0 on March 5 with above tbb just fine), the tar balls; in tbb repo have changed and so changed their sha256sum signatures. ; The distro contents (comparing old vs. new) appear to be the same with the exception ; of renaming of the top most directory from tbb-VERSION/ to oneTBB-VERSION/. ; When a tar ball is download its signature is different from what salmon expects in its files. . **Additional context**; The fix would be to update salmon source distributions to have new sha256 signatures and; and other changes (top dir name) in Cmakefiles",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/496:1712,update,update,1712,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/496,1,['update'],['update']
Deployability,"**Hi there,**. **So I'm trying to install Salmon-0.8.2 but I'm having a few issues. I should note upfront that I'm working on a cluster and therefore I do not have root privileges.** . **Anyway, when going through the build process I wasn't able to install boost using salmons flags, so I installed it independently. I was then able to make it to the 'make' stage, but the got to this point:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target liberal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; utils.c:33:18: fatal error: zlib.h: No such file or directory; #include <zlib.h>; ^; compilation terminated.; make[3]: *** [utils.o] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I resolved this by making a custom script which told make where to look for zlib:**. export C_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; export CPLUS_INCLUDE_PATH=/users/work/jake/bin/zlib-1.2.11/; make. **Executing that script allowed me to progress a little but I'm now receiving the following error message:**. [ 7%] Built target liblzma; [ 14%] Built target libbz2; [ 21%] Built target libdivsufsort; [ 29%] Built target libcereal; [ 37%] Built target libgff; [ 38%] Performing build step for 'libbwa'; /bin/ld: cannot find -lz; collect2: error: ld returned 1 exit status; make[3]: *** [bwa] Error 1; make[2]: *** [libbwa-prefix/src/libbwa-stamp/libbwa-build] Error 2; make[1]: *** [CMakeFiles/libbwa.dir/all] Error 2; make: *** [all] Error 2. **I'm not the best command line user so my 'fixes' might not be the best approach. Still I'm not really sure how to approach this new error message. Google doesn't turn up much so any advice you could give it would be greatly appreciated.**",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/141:34,install,install,34,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/141,3,['install'],"['install', 'installed']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)? Salmon. **Describe the bug**; I downloaded salmon-0.11.3-linux_x86_64.tar.gz file and extracted it. There is no makefile or install.sh files, just the bin. lib, sample_data. Therefore no any installation steps. The bin and lib were put in environment paths PATH and LD_LIBRARY_PATH.; When I run trinity command i get following error:. Trinity version: Trinity-v2.6.6; -ERROR: couldn't run the network check to confirm latest Trinity software version. Tuesday, September 11, 2018: 14:29:38	CMD: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0; Error: dl failure on line 893; Error: failed /path/to/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /path/to/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/290:207,install,install,207,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290,2,['install'],"['install', 'installation']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/320:341,install,installed,341,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/320,3,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.4; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; ensembl releases 103 and 87; * Which read files were used?; fastq files; * Which which program options were used?; quant --validateMappings --numBootstraps 50 --gcBias --seqBias. **Expected behavior**; A clear and concise description of what you expected to happen.; We expected to get the similar TPMs for a recalculation of a cohort of RNAseq data with a newer ensembl fasta release, but they were far off. **Desktop (please complete the following information):**; - RHEL7. **Additional context**; We also attempted to create our own fasta files using stringtie and scallop, but ran into the same issue as stated above.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/653:353,install,installed,353,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/653,3,"['install', 'release']","['installed', 'release', 'releases']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I am getting this error : Two references with the same name but different sequences: XR_001465382.2_LOC4; 21118_-. We require that all input records have a unique name up to the first whitespace character. But when I try to create a histogram of that reference it only shows 1 sequence with that name: ; grep 'XR_001465383.2_LOC421108' galGal6.gene+cluster+repBase+tRNA.fa.nodup | sort | uniq -c | awk '{printf(""%s\t%s\n"", $1, $2)}'; 1 >XR_001465383.2_LOC421108_-. **To Reproduce**; This is the code I used ; salmon index -t galGal6.gene+cluster+repBase+tRNA.fa.nodup -i SalmonIndexNodup -k 31. Specifically, please provide at least the following information:. * Which version of salmon was used?; I used v1.5.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Yes; * Which reference (e.g. transcriptome) was used?; Mouse (mm10); * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/683:838,install,installed,838,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/683,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I am getting this error when I try to update my index using salmon v1.4.0 or 1.5.1; Version Server Response: Not Found; Exception : [Error: RapMap-based indexing is not supported in this version of salmon.]; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting.; However the index is working with salmon version 0.8.2 . **To Reproduce**; This is how I ran it:; salmon index -t galGal6.gene+cluster+repBase+tRNA.fa -i SalmonIndex --type quasi -k 31; ; This is the dropbox link to the galGal6.gene+cluster+repBase+tRNA.fa https://www.dropbox.com/s/nb39rpydanlxr3p/galGal6.gene%2Bcluster%2BrepBase%2BtRNA.fa?dl=0 file",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/694:146,update,update,146,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/694,1,['update'],['update']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I can't run ""Quantifying in mapping-based mode"" in Salmon 1.8.0 for reads single-end.; Im not sure if the ""--libType"" (-l) argument is right...; The menssage that appear is ""Segmentation fault"" and the run finish. (following Screenshots). **To Reproduce**; Im executing the following command: salmon quant -i index -l A -r ../fastq_zip/SRR16620521.fastq.gz -o ../salmon_quant/. The ""index"" is my directory with my transciptome data and ""SRR16620521.fastq.gz"" is my file single-end. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.8.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? conda install salmon=1.8.0; * Which reference (e.g. transcriptome) was used? Sviridis_500_v2.1.transcript_primaryTranscriptOnly.fa.gz (Setaria viridis transciptome from Phytozome); * Which read files were used? SRR16620521.fastq.gz; * Which which program options were used? . **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/87829929/236075390-07846634-fa21-4146-8a21-673947510a84.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/847:716,install,installed,716,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/847,2,['install'],"['install', 'installed']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed latest version of salmon through git clone for trinityrnaseq. When i run trinity using a command ""perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G' I am getting a message to install salmon. kindly give me a solution for this. **To Reproduce**; Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ perl Trinity --seqType fq --left reads_1.fq --right reads_2.fq --CPU 6 --max_memory 20G. ______ ____ ____ ____ ____ ______ __ __; | || \ | || \ | || || | |; | || D ) | | | _ | | | | || | |; |_| |_|| / | | | | | | | |_| |_|| ~ |; | | | \ | | | | | | | | | |___, |; | | | . \ | | | | | | | | | | |; |__| |__|\_||____||__|__||____| |__| |____/. Trinity-v2.8.5. Left read files: $VAR1 = [; 'reads_1.fq'; ];; Right read files: $VAR1 = [; 'reads_2.fq'; ];; Trinity version: Trinity-v2.8.5; ** NOTE: Latest version of Trinity is v2.8.6, and can be obtained at:; 	https://github.com/trinityrnaseq/trinityrnaseq/releases. Trinity Trinity-v2.8.5 requires salmon to be installed. Get it here: https://combine-lab.github.io/salmon/ at Trinity line 3870.; iipr@iipr-ubuntu:~/trinityrnaseq-Trinity-v2.8.5$ ^C. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version18.04. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/452:110,install,installed,110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/452,6,"['install', 'release']","['install', 'installed', 'releases']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; I installed salmon using cmake command. i.e mkdir build/.. cd build... cmake and i encountered these; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * latest version 1.0. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; -- fetch PUFFERFISH exit code 0; -- Found ZLIB: /usr/lib/x86_64-linux-gnu/libz.a (found version ""1.2.11""); CMake Error at CMakeLists.txt:319 (find_package):; By not providing ""FindIconv.cmake"" in CMAKE_MODULE_PATH this project has; asked CMake to find a package configuration file provided by ""Iconv"", but; CMake did not find one. Could not find a package configuration file provided by ""Iconv"" with any of; the following names:. IconvConfig.cmake; iconv-config.cmake. Add the installation prefix of ""Iconv"" to CMAKE_PREFIX_PATH or set; ""Iconv_DIR"" to a directory containing one of the above files. If ""Iconv""; provides a separate development package or SDK, be sure it has been; installed. -- Configuring incomplete, errors occurred!; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/iipr/trinityrnaseq-Trinity-v2.8.5/salmon/build/CMakeFiles/CMakeError.log""; **Desktop (please complete the following information):**; - OS: Ubuntu; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/453:110,install,installed,110,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/453,5,"['configurat', 'install']","['configuration', 'installation', 'installed']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. Salmon (bulk mode). **Describe the bug**. For one of our 41 samples, salmon fails (quits, without any substantial output) when using the orphan recovery option (where Salmon attempts to try harder to pair up read alignments when one of the reads in a read pair fails to map properly). Given that it's only related to the orphan recovery option, and only one sample out of 41, I don't expect it'll affect our results in any substantial way, but I'm reporting this bug just in case it exposes other software issues that are more concerning. **To Reproduce**; Steps and data to reproduce the behavior:. * Which version of salmon was used?; * v1.10.0 (the latest release that had a compiled executable); * How was salmon installed (compiled, downloaded executable, through bioconda)?; * downloaded executable; * Which reference (e.g. transcriptome) was used?; * Gencode M34 (GRCm39) ; * Which read files were used?; * Illumina HiSeq, trimmed using Trimmomatic ; * Which which program options were used?. Working:. ./salmon/bin/salmon quant -p 64 --index reference/salmon_index -l ISR -1 merged/1791-${id}_1P.fastq.gz -2 merged/1791-${id}_2P.fastq.gz --validateMappings --seqBias --gcBias --posBias --softclip --allowDovetail --numBootstraps 10 -o mapped/salmon_${id}. Working produced the following file structure:. ```; salmon_03; ├── aux_info; │   ├── ambig_info.tsv; │   ├── bootstrap; │   │   ├── bootstraps.gz; │   │   └── names.tsv.gz; │   ├── exp3_pos.gz; │   ├── exp3_seq.gz; │   ├── exp5_pos.gz; │   ├── exp5_seq.gz; │   ├── expected_bias.gz; │   ├── exp_gc.gz; │   ├── fld.gz; │   ├── meta_info.json; │   ├── obs3_pos.gz; │   ├── obs3_seq.gz; │   ├── obs5_pos.gz; │   ├── obs5_seq.gz; │   ├── observed_bias_3p.gz; │   ├── observed_bias.gz; │   └── obs_gc.gz; ├── cmd_info.json; ├── lib_format_counts.json; ├── libParams; │   └── flenDist.txt; ├── logs; │   └── salmon_quant.log; └── quant.sf. 5 directories, 2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/929:745,release,release,745,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/929,2,"['install', 'release']","['installed', 'release']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. The bug is primarily related to salmon, but I am using salmon to build an index for use with alevin-fry per the [alevin-fry tutorial](https://combine-lab.github.io/alevin-fry-tutorials/2021/improving-txome-specificity/). . **Describe the bug**; A clear and concise description of what the bug is. I have previously followed the steps outlined in the alevin-fry tutorial for a single sample and everything worked as expected. Now I am following the same steps but wrapped in a snakemake pipeline to process several samples and am running into issues building the index. Specifically, I am receiving the following error when my pipeline moves on the mapping reads step:. ```; Exception : [Error: The index version file /beevol/home/winklerc/projects/scifi_pipeline/scifi/ref/idx/complete_ref_lens.bin/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; alevin (sc-align) was invoked improperly.; ```. I have tried re-building the index, and have also tried reusing the index that I had previously built for the single sample run that previously worked. However, neither of those approaches fixed the above error. When I build the index I am able to generate all of the expected files and the file sizes match those of my previous (successful) index build, so I am not sure why I am getting an error that the `versionInfo.json` file is missing. **To Reproduce**; Steps and data to reproduce the behavior:. I followed the alevin-fry tutorial to generate a splici transcriptome, using the same [Human reference (GRCh38) dataset](https://cf.10xgenomics.com/supp/cell-exp/refdata-gex-GRCh38-2020-A.tar.gz) provided by the tutorial. My snakemake rule to build the index uses the same commands outlined in the alevin-fry tutorial, and looks like this:. ```; rule build_idx: ; # build a splici (spliced + intron) index for alevin-fry; input:; fasta = ""{out_data}/ref/transcriptome/transcriptome",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:572,pipeline,pipeline,572,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,2,['pipeline'],['pipeline']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. This issue is with salmon (bulk mode). **Describe the bug**. The grch38 transcriptome has transcripts that are identical in sequence, but annotated differently. Salmon is collapsing the duplicate transcripts to one transcript (as it should).; The problem is that (at least for some transcripts) we're getting abundance estimates for the copy of a transcript that's on a contig, but not estimates for the copy on the regular chromosome.; In short, it's picking the wrong duplicate. What we're after is a way to get it to prioritize the copies on chromosomes over the copies on contigs. **To Reproduce**. * Salmon version 0.10.2; * Salmon installed through bioconda.; * Reference grch38. All cdnas and ncrnas.; * Reads were single-end; * Program options: salmon quant -p 48 --seqBias --gcBias --biasSpeedSamp 5 -l A . **Expected behavior**; That the selected duplicate reference transcript would be the one on the chromosome, rather than the contig.; In particular, the LTA gene is of interest to us. In grch38, the two ids are [ENSG00000226979](https://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=ENSG00000226979;r=6:31572054-31574324) (on chr6) and [ENSG00000231408](https://useast.ensembl.org/Homo_sapiens/Gene/Summary?g=ENSG00000231408;r=CHR_HSCHR6_MHC_MANN_CTG1:31611502-31613772) (on CHR_HSCHR6_MHC_MANN_CTG1). Each of the transcripts of these two genes has an identical copy in the other gene. The transcripts for both genes appear in the duplicate_clusters.tsv file in the salmon index directory. ; When we quant, only transcripts of ENSG00000231408 appear in the output. We would rather that ENSG00000226979 be the one to appear. What is the best way forward to accomplish this? Should we just remove the contig transcripts from the reference?. **Desktop:**; - OS: Centos Linux; - `uname -a`: 3.10.0-862.2.3.el7.x86_64 #1 SMP Wed May 9 18:05:47 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; - `lsb_release -a`:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/249:723,install,installed,723,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/249,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. alevin. **Describe the bug**; salmon alevin fails to output quants_mat.mtx.gz file when invoked with flags `-dumpMtx --keepCBFraction 1 --maxNumBarcodes 4294967295`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.14.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; human_GENCODEv29.tar.gz with decoys from README. **Expected behavior**. Save a quants_mat.mtx.gz file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/15719520/59559081-16730500-8fb5-11e9-8bbd-faf2b99a02e7.png). **Desktop (please complete the following information):**; - OS: Ubuntu 16.04; - Version; ```; uname -a; Linux desktop 4.15.0-51-generic #55~16.04.1-Ubuntu SMP Thu May 16 09:24:37 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; Distributor ID: Ubuntu; Description: Ubuntu 16.04.6 LTS; Release: 16.04; Codename: xenial. ```; Related to #377",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/379:380,install,installed,380,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/379,2,"['Release', 'install']","['Release', 'installed']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon (bulk mode) latest binary (1.8.0) from github. **Describe the bug**; A clear and concise description of what the bug is. core dumped crash on building index process. **To Reproduce**; Steps and data to reproduce the behavior:. wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/cdna/Mus_musculus.GRCm39.cdna.all.fa.gz ; wget http://ftp.ensembl.org/pub/current_fasta/mus_musculus/dna/Mus_musculus.GRCm39.dna.primary_assembly.fa.gz; wget https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; grep ""^>"" <(gunzip -c Mus_musculus.GRCm39.dna.primary_assembly.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Mus_musculus.GRCm39.cdna.all.fa.gz Mus_musculus.GRCm39.dna.primary_assembly.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.8.0. * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable. * Which reference (e.g. transcriptome) was used?; downloaded executable; . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. salmon-1.8.0_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 60 -i Mus_musculus.GRCm39_v1.8.0_decoy.index; Version Info: This is the most recent version of salmon.; index [""Mus_musculus.GRCm39_v1.8.0_decoy.index""] did not previously exist . . . creating it; [2022-06-01 18:13:38.986] [jLog] [info] building index; out : Mus_musculus.GRCm39_v1.8.0_decoy.index; [2022-06-01 18:13:38.986] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2022-06-01 18:13:38.994] [puff::index::jointLog] [warning] Entry with header [ENSMUST00000178537.2], had length less than equal to the k-mer length of 31 (perha",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/783:575,release,releases,575,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/783,1,['release'],['releases']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; A clear and concise description of what the bug is. Running `salmon index` on a HPC cluster (called from a trinity perl script). After a while salmon is only idling. In the stderr I see:. ```; Encountered FastxParser destructor while parser was still marked active (or while parsing threads were still active). Be sure to call stop() before letting FastxParser leave scope!; ```. The problem seems to be the available memory. On HPC systems one usually needs to specify a max amount of memory which is enforced (e.g. with ulimit). . If I give more memory to the job salmon finishes. . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. Salmon 1.1 installed through conda. I guess any data will do to reproduce as long as the memory limitations ar small enough. **Expected behavior**; A clear and concise description of what you expected to happen. Would be good if salmon would exit with a better error message and a non-zero exit code in such a case. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. CentOS 7. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/484:882,install,installed,882,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/484,2,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. salmon. **Describe the bug**; I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. **To Reproduce**. * Which version of salmon was used?. salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. * How was salmon installed (compiled, downloaded executable, through bioconda)?. bioconda. * Which reference (e.g. transcriptome) was used?. To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. * Which read files were used?. See above. * Which which program options were used?. I used the bash script from ; https://combine-lab.github.io/salmon/getting_started/. **Expected behavior**. I expected an output indicating successful quantification. **Screenshots**. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { athal_index }; ### [ libType ] => { A }; ### [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; ### [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; ### [ threads ] => { 8 }; ### [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.877] [jo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/317:378,install,installed,378,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/317,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; - Alevin. **Describe the bug**; I got the error copied below, it said to report on GitHub so I'm doing that. **To Reproduce**; Steps and data to reproduce the behavior:; - The Jupyter notebook I was using is in the attached zip file; [alevin-default-eduardo.zip](https://github.com/COMBINE-lab/salmon/files/2096615/alevin-default-eduardo.zip). Specifically, please provide at least the following information:. * Which version of salmon was used? ; Salmon 0.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed with bioconda; * Which reference (e.g. transcriptome) was used? ; This transcriptome: https://drive.google.com/open?id=1XcsFUxJM6XaYEKh9BYdUoAyJSlWJLIiW. ; It's a mouse transcriptome with 3 additional transcripts at the end; * Which read files were used?; * Which which program options were used?; `salmon alevin -lISR -1 ./H2_S5_L003_R1_001.fastq.gz -2 H2_S5_L003_R2_001.fastq.gz --chromium -i salmon_index -p 8 -o alevin_output --tgMap txp2gene.tsv`. **Desktop (please complete the following information):**; - OS: CentOS; - Version:; Linux login1 3.10.0-514.2.2.el7.x86_64 #1 SMP Tue Dec 6 23:06:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.3.1611 (Core); Release: 7.3.1611; Codename: Core. **Additional context**; ```; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fra",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/237:566,install,installed,566,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237,2,"['Install', 'install']","['Installed', 'installed']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Affects salmon (bulk mode) for sure. I don't know alevin. **Describe the bug**; totalCount_ is not initialized in Transcript constructors. In the vast majority of the cases it doesn't matter because the memory is initialized to 0 anyway, but for a very small fraction of the transcripts the totalCount gest initialized to some random value, which can lead to missed invocations of projectToPolytope in normalizeAlphas and writeAbundances. **To Reproduce**. Systematic. Effect might be more difficult to detect as you'd need a truth set. Dumping a trace of the totalCount_ might be easier. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.11.3 ans 0.13.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. N/A. compiled from scratch. * Which reference (e.g. transcriptome) was used?. * Which read files were used?. BAM input, generated by STAR, from proprietary data produced with Illumina instruments. * Which which program options were used?. --no-version-check --threads 1 --dumpEq --useEM --noErrorModel --noRichEqClasses --gcBias -l isr. **Expected behavior**. Accurate values for totalCount for all transcripts. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu 18.10, CentOs 7.5.1804. **Additional context**; Add any other context about the problem here. Attached patch for 0.13.1:. [Transcript.hpp.patch-0.13.1.txt](https://github.com/COMBINE-lab/salmon/files/3044728/Transcript.hpp.patch-0.13.1.txt)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/355:814,install,installed,814,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/355,4,"['install', 'patch']","['installed', 'patch', 'patch-']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin-fry. **Describe the bug**; A clear and concise description of what the bug is.; The new updates to the `cmd_info.json` file result in an extra `:` at the end of `""salmon_version:""` inside the quotes. This results in the json file being read in with the header of that entry being `salmon_version:` when it should be `salmon_version`. . Note that this was found when running `salmon alevin` in the `--rad` or `--justAlign` mode and we have not tested if this is also the case when running only `salmon alevin`. . **To Reproduce**; Steps and data to reproduce the behavior:; We ran alevin-fry v0.4.1 starting with `salmon alevin` using `--rad` on single-cell data in the salmon biocontainer and that led to the `cmd_info.json` file being output with the extra `:` on salmon_version. . The biocontainer that we used was: quay.io/biocontainers/salmon:1.5.2--h84f40af_0 . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.5.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; used the biocontainer ; * Which reference (e.g. transcriptome) was used?; used the splici index following the alevin-fry tutorial ; * Which read files were used?; * Which which program options were used?; ```; salmon alevin -l ISR --chromiumV3 --dumpFeatures --rad; ```. **Expected behavior**; A clear and concise description of what you expected to happen.; We would expect that the extra `:` would not be included to be consistent with previous versions of salmon. ; <img width=""325"" alt=""Screen Shot 2021-07-29 at 12 35 38 PM"" src=""https://user-images.githubusercontent.com/54039191/127538599-206d5e71-cb7a-4a82-8064-4e92e12ee892.png"">. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/691:181,update,updates,181,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/691,1,['update'],['updates']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin. **Describe the bug**; Some datasets are incompatible with Alevin processing from deduplication onwards, failing immediately after initial analysis. **To Reproduce**; Using salmon v0.11.3, installed via conda; Reference index obtained from GENCODE mm10 assembly. Steps and data to reproduce the behavior:; salmon alevin -l ISR -1 neuron_10k_v3_S1_L001_R1_001.fastq.gz neuron_10k_v3_S1_L002_R1_001.fastq.gz -2 neuron_10k_v3_S1_L001_R2_001.fastq.gz neuron_10k_v3_S1_L002_R2_001.fastq.gz --chromium -i map_index -p 8 -o output_10 --tgMap txp2gene.tsv --dumpCsvCounts. **Shell output** ; [2018-11-29 22:24:41.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-29 22:24:41.283] [alevinLog] [info] Processing barcodes files (if Present). processed 178 Million barcodes. [2018-11-29 22:28:03.040] [alevinLog] [info] Done barcode density calculation.; [2018-11-29 22:28:03.040] [alevinLog] [info] # Barcodes Used: 178139795 / 178174830.; [2018-11-29 22:28:08.333] [alevinLog] [info] Knee found left boundary at 11347; [2018-11-29 22:28:16.264] [alevinLog] [warning] Gauss Prediction 11502 Too far from knee prediction skipping it; [2018-11-29 22:28:16.264] [alevinLog] [info] Learned InvCov: 180.957 normfactor: 13235.2; [2018-11-29 22:28:16.264] [alevinLog] [info] Total 12346(has 999 low confidence) barcodes; [2018-11-29 22:28:16.397] [alevinLog] [info] Done True Barcode Sampling; [2018-11-29 22:28:17.414] [alevinLog] [info] Done populating Z matrix; [2018-11-29 22:28:17.434] [alevinLog] [info] Done indexing Barcodes; [2018-11-29 22:28:17.434] [alevinLog] [info] Total Unique barcodes found: 3773873; [2018-11-29 22:28:17.434] [alevinLog] [info] Used Barcodes except Whitelist: 49866; [2018-11-29 22:28:18.184] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify. [2018-11-29 22:28:18.184] [alevinLog] [info] parsing read l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/324:282,install,installed,282,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/324,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Alevin. **Describe the bug**; `Wrong barcode-end parameters`; `[2019-01-17 15:50:10.269] [jointLog] [error] wrong barcode-end parameters.; Please report this bug on Github`. **To Reproduce**; Steps and data to reproduce the behavior:; `./Software/salmon-0.12.0_linux_x86_64/bin/salmon alevin -l ISR ; -1 Data/Fastq/PBMC6_PolyTTrimmed.R2.fq.gz; -2 Data/Fastq/PBMC6_PolyTTrimmed.R1.fq.gz; --chromiumV3; --barcodeLength 11; --umiLength 12; --end 3; --debug; --validateMapping; --minScoreFraction 0.8; -p 10; -i Reference/GENCODE_v29_Human_SalmonIndex_0_12_0/; --tgMap Reference/GENCODE_v29_Human.genemap.txt; -o Quantifications/pbmc6_alevin_onecell_UMI12_3Prime/`. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.12.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloadable executable; * Which reference (e.g. transcriptome) was used? GENCODE V29; * Which read files were used? in house from 1CellBio data ; * Which which program options were used? see above command, but I suspect it's the `--end 3` causing issues. **Expected behavior**; No error to be thrown. **Screenshots**; NA. **Desktop (please complete the following information):**; - OS: RHEL ; - Version 7.3. **Additional context**; NA",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/334:875,install,installed,875,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/334,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both likely.; **Describe the bug**; Trying to build the new pufferfish index format, I receive a memory allocation error near the end of the index build process. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; v0.99.0 beta1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded from Github release; * Which reference (e.g. transcriptome) was used?; gencode v25 with some ""extra"" stuff added - mainly introns for each unprocessed transcript.; * Which read files were used?; None; * Which which program options were used?; -p 8 (though I've used the default as well). **Expected behavior**; I expected the indexing process to complete. **Screenshots**; [pisces_bug.log](https://github.com/COMBINE-lab/salmon/files/3692191/pisces_bug.log). **Desktop (please complete the following information):**; - OS: Linux; - Version RHEL7; **Additional context**. I'm attempting to build an index that's quite large, and am very excited to try the new pufferfish graph-based index. Please let me know how I can help out - if it would be useful I can try to build the index using your standalone library as well.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/432:444,install,installed,444,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/432,2,"['install', 'release']","['installed', 'release']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both. **Describe the bug**; When viewing http://salmon.readthedocs.io/en/latest/index.html, the page header described Salmon 0.8.1. Is the documentation out of date, or is that simply not an updated version number?. **To Reproduce**; View http://salmon.readthedocs.io/en/latest/index.html. **Expected behavior**; Salmon 0.11.0 is the latest release, thus I expected the latest version of the documentation to reflect that.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/259:277,update,updated,277,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/259,2,"['release', 'update']","['release', 'updated']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Both.; salmon index. **Describe the bug**; I want to build a murine index fo use Alevin later with a Chromium dataset. I downloaded the relevant files from Gencode, and followed the instructions at https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; It runs fine until:. index_decoys/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Round 0, 0:68719476736; Pass Filling Filtering; 1 208; Error: Found an invalid character 'I' in sequence chr9; Segmentation fault. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Salmon 1.2.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?; Downloaded the executable. * Which reference (e.g. transcriptome) was used?; gencode.vM25.transcripts.fa.gz; GRCm38.primary_assembly.genome.fa.gz. grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat gencode.vM25.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. Ubuntu 20.04 LTS. **Additional context**; I understand that the problem seems to come from the genome. However, salmon should perhaps have a way to handle that.; In any case, seg fault are not ideal. Thank you for your great piece of kit though. Life saver for me since I cannot use Cellranger.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/521:817,install,installed,817,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/521,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Bulk mode. **Describe the bug**; We uses salmon with ver 0.8 in the beginning, later on we found that it could updated to the latest version. Then after we updated it through conda, the quantify amount was reduced from 200+ to 39. **To Reproduce**; `salmon index -t test.transcripts.fa -i test_index --type puff -k 31 ; salmon quant -l A -i test_index -g annotation.gtf -r test.ccs.fq.gz -z -o test > test.sam`. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.8.1 to 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; through bioconda ; * Which reference (e.g. transcriptome) was used?; transcriptome. **Expected behavior**; what is the different between these two versions? We expected that the result would not have such different like this. And we don't know which one is more accurate. . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ![image](https://user-images.githubusercontent.com/47863838/85987901-de542e00-ba20-11ea-916a-fe90ca18586f.png). ![image](https://user-images.githubusercontent.com/47863838/85986442-d4c9c680-ba1e-11ea-9b98-140559ee0149.png). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Ubuntu Linux.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/542:197,update,updated,197,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/542,3,"['install', 'update']","['installed', 'updated']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is in alevin, single-cell mode. **Describe the bug**; The log shows that there are at least 50% percent reads has been thrown away, and the mapping rate was between 18.7%-19.1%. **To Reproduce**; Steps and data to reproduce the behavior:; Reference was indexed using transcripts without decoy, and command line parameters are described below; The genome was not published so I can't share with you that, and I'm sorry with that. Specifically, please provide at least the following information:; * Which version of salmon was used? ; salmon 1.4.0. * How was salmon installed (compiled, downloaded executable, through bioconda)? ; Bioconda. * Which reference (e.g. transcriptome) was used? ; The reference genome is sequenced by ourselves, and it's a plant. Reference was indexed using transcripts without decoy. * Which read files were used?; my reads layout is paired end 150bp; Will the 150bp reads affect the pipeline, and if it will, how can I make it to 28bp R1 and 91bp R2, which is identical to cellranger makefastq output.; > R1: ; @A00582:424:HJYLGDSXY:3:1101:1090:1000 1:N:0:ACCGGCTC; TAACCAGGTCGAGTGAGTATTTAAGGCGCGCGGCGCACCAACGCACTCCCAACAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA; > +; FFFFFFFFFFFFFFFFFFFFFFFFFFFF,,:,,FF:,,,::FF,,:F,,,,,,F:,,,:,::FF::::::,FFF:F:FF:FFFFFFF::FF::FF,F:F:FF:F,FFFF,:FF,FFFFF:,FF:::FF:FFF:FF:FF:FFFFFFFFFF:; > R2:; @A00582:424:HJYLGDSXY:3:1101:1090:1000 2:N:0:ACCGGCTC; NCCTAGAAGCAGCCACCCTTGAAAGAGTGCGTAATAGCTCACTGATCGAGCGCTCTTGCGCCGAAGATGAACGGGGCTAAGCGATCTGCCGAAGCTGTGGGATGTAAAAATACATCGGTAGGGGAGCGTTCCGCCTTAGAGAGAAGCCTC; > +; #FF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF:FFFFFFFFFFFF::FFFFFFFFFF:FFFFFFFFFFFFF:FFFFFF:FFFFFFF:. * Which which program options were used?; `salmon alevin -l ISR -1 ../clean/sample_S1_L001_R1_001.fastq -2 ../clean/sample_S1_L001_R2_001.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/620:653,install,installed,653,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It is related to salmon when used after umi tools deduplication. **Describe the bug**; Once deduplicated the bams with umi_tools (and previously sorted by coordinates) salmon gives the following warning: WARNING: Detected suspicious pair ---; The names are different:; read1 : XXXXXXXXX-YYYY:YYYY; read2 : XXXXXXXXX-ZZZZ:ZZZZ. **To Reproduce**; The used code is the following:. ""salmon_version"": ""1.10.1"",; ""targets"": ""../index/hg38/salmon/gencode.v45.transcripts.fa"",; ""libType"": ""A"",; ""seqBias"": [],; ""gcBias"": [],; ""posBias"": [],; ""threads"": ""16"",; ""dumpEq"": [],; ""numBootstraps"": ""50"",; ""alignments"": ""/media/storage/work/iiglesia/rnaseq/RESULTS/BAM_STAR_dedup/17932763_S28_Aligned_dedup.sorted.bam"",; ""output"": ""./aligned_salmon/17932763_S28"",; ""geneMap"": ""../index/hg38/salmon/mart_export.txt"",; ""gencode"": [],. When I have treid to use the same sample without deduplication and sorting salmon works good. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.v45.transcripts.fa; * Which read files were used? BAM files; * Which which program options were used? it can be seen above. **What I expect**; I want to know how could I use salmon after umi_tools or to account for UMI deduplication. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version: 22.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/930:1126,install,installed,1126,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/930,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; It occurs when I run Salmon. **Describe the bug**; When I try to index I get an error; ```; [2021-03-30 14:29:34.670] [puff::index::jointLog] [error] In FixFasta, two references with the same name but different sequences: lcl. We require that all input records have a unique name up to the first whitespace (or user-provided separator) character.; ```; I asked for advice, and it was suggested that two entries in the fasta file had the same name. I tried loading all of the entry names into a computing language, and check that the number of unique names was identical to the total number (suggesting that this wasn't the case). **To Reproduce**; I required to re-run some RNA seq mapping from someone who left the lab, and gave me this script (I've asked them, they did not really know what got wrong). ```; conda create --name rnaseq -c bioconda salmon; conda activate rnaseq; conda install -c conda-forge -c bioconda salmon=1.4.0; mkdir -p reference . # reference genome; wget -O reference/genome.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_genomic.fna.gz. # reference Transcriptome; wget -O reference/transcripts.fa.gz https://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/497/485/GCA_000497485.1_ASM49748v1/GCA_000497485.1_ASM49748v1_cds_from_genomic.fna.gz. # prepare file with ""decoy"" sequences; zcat reference/genome.fa.gz | grep ""^>"" | cut -d "" "" -f 1 | sed -e 's/>//g' > reference/decoys.txt. # concatenate the two; cat reference/transcripts.fa.gz reference/genome.fa.gz > reference/gentrome.fa.gz. # Try to create index, this gives problems; salmon index -t reference/gentrome.fa.gz -d reference/decoys.txt -p 12 -i salmon_index --gencode -k 31; ```. The last one gives an error:; ```; Version Info: This is the most recent version of salmon.; [2021-03-30 14:29:34.652] [jLog] [info] building index; out : salmon_index; [2021-03-30 14:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/642:972,install,install,972,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/642,1,['install'],['install']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; No. **Describe the bug**; I ran `salmon quant` and the `lib_format_counts.json` file that was produced contained a `NaN` value which is not valid JSON. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?. 0.9.1. * How was salmon installed (compiled, downloaded executable, through bioconda)?. From our dockerfile:; ```; # Install Salmon; ENV SALMON_VERSION 0.9.1; RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; RUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # Create soft link `/usr/local/bin/salmon` that points to the actual program; RUN ln -sf `pwd`/Salmon-latest_linux_x86_64/bin/salmon /usr/local/bin/; RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz; # End Salmon installation.; ```. * Which reference (e.g. transcriptome) was used?. One we prepared. We got the raw transcriptome from ensembl, then prepared it with:; https://github.com/AlexsLemonade/refinebio/blob/dev/workers/data_refinery_workers/processors/transcriptome_index.py. Which produced:; https://s3.amazonaws.com/data-refinery-test-assets/Caenorhabditis_elegans_short_1527089586.tar.gz. * Which read files were used?. Two read files out of:; https://s3.amazonaws.com/data-refinery-test-assets/salmon_tests.tar.gz. found within that archive at:; `test_experiment/raw/reads_1.fastq`; and ; `test_experiment/raw/reads_2.fastq`. Unfortunately I am not entirely sure where these were found. * Which which program options were used?. The exact invocation of salmon was:; ```; salmon --no-version-check quant -l A --biasSpeedSamp 5 -i /home/user/data_store/processed/TEST/TRANSCRIPTOME_INDEX/index -1 /home/user/data_store/salmon_tests/test_experiment/raw/reads_1.fastq -2 /home/user/data_store/salmon_tests/test_experiment/raw/reads_2.fas",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/279:426,install,installed,426,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/279,4,"['Install', 'install', 'release']","['Install', 'installation', 'installed', 'releases']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Related to Salmon. **Describe the bug**; my transcript file has a total of 119032 records:. [gao@bio reference]$ grep -c "">"" GRCm38.vM11.transcripts.ercc.Tg.fa; 119032. However, my salmon output has 117509 records:; [gao@bio KM25_salmon_quant.originalData.k21]$ wc -l quant.sf; 117509 quant.sf. How should I explain this?; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? ; I used salmon 0.13.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed on HPC; * Which reference (e.g. transcriptome) was used?; Mouse transcriptome; * Which read files were used?; RNAseq files; * Which which program options were used?; command line:. salmon quant -p 8 -i /data/Re-analysis/SalmonRun/reference/GRCm38.vM11.transcripts.ercc.Tg.fa.k21.index -g /data/Re-analysis/Salmon-Run/reference/tx2gene.gencode.v27.tabbed.csv --seqBias --gcBias -l A -1 read1.fastq.gz -2 read2.fastq.gz -o /data/Re-analysis/Salmon-Run/quant-output-co; rrected/KM25_salmon_quant.originalData.k21. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; HPC computing cluster; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/378:613,install,installed,613,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/378,2,"['Install', 'install']","['Installed', 'installed']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Running make inside build after doing ""cmake"" against the source directory. . **Describe the bug**; A clear and concise description of what the bug is.; Unable to compile this file with gcc-4.9.2 and cmake 3.11.1; **To Reproduce**; Steps and data to reproduce the behavior:; Following steps as specified in guide. Assigning prefix to point to different installation directory and have tried passing in boost location and telling cmake to fetch boost but both result with the same error. . Specifically, please provide at least the following information:; `[ 91%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalculator&, FragmentLengthDistribution&, SalmonOpts&, double, bool, std::mutex&, size_t, std::vector<std::vector<AlignmentGroup<AlnT> > >&, volatile bool&)’:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1964:47: error: parameter declared ‘auto’; auto parserPtrDeleter = [&salmonOpts](auto* p) -> void {; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In lambda function:; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1966:7: error: ‘p’ was not declared in this scope; p->stop();; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp:1974:12: error: ‘p’ was not declared in this scope; delete p;; ^; /nfs/sw/src/rescomp-6993/salmon/src/SalmonQuantify.cpp: In function ‘void processReadLibrary(ReadExperimentT&, ReadLibrary&, SalmonIndex*, std::vector<Transcript>&, ClusterForest&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, bool, std::atomic<bool>&, ForgettingMassCalcul",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/296:439,install,installation,439,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/296,1,['install'],['installation']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (build mode). **Describe the bug**; A clear and concise description of what the bug is. From salmon output: ""validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35"". When passing the --validateMappings flag without an explicit consensus slack, the program says that a 0.2 value is implied for the consensus salck, but then proceeds to set a different value. **To Reproduce**; Steps and data to reproduce the behavior:; Pass --validateMappigngs without explicit consensusSlack; Specifically, please provide at least the following information:. * Which version of salmon was used? - 1.3.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda; * Which reference (e.g. transcriptome) was used? Mouse gencode M25; * Which read files were used? Internal experiment; * Which which program options were used?. salmon quant \; --index=$index \; --threads=12 \; --validateMappings \; --gcBias \; --posBias \; --seqBias \; --libType=A \ (ISR was detected, which is correct); -1 ""${R1[$i]}"" \; -2 ""${R2[$i]}"" \; --numBootstraps=30 \; --output=$outdir ;. **Expected behavior**; A clear and concise description of what you expected to happen. The default consensusSlack and the value that is set when it is not explicitly provided should be the same value. **Desktop (please complete the following information):**; ProductName:	Mac OS X; ProductVersion:	10.15.7; BuildVersion:	19H2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/587:733,install,installed,733,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/587,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon (bulk); **Describe the bug**; I have a Illumina TruSeq Stranded Ribozero library and when I use salmon with -l A, it detects the libraries as either ISF or IU (for different indexes). The mapping rate is about 50-75% per index. However, as I understand it, Illumina TruSeq stranded libraries are supposed to be ISR? When I use -l ISR, i get much lower mapping rates so I'm a bit confused. Am I wrong about the library type for TruSeq Stranded, or is there a mistake in the Salmon docs? . **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; Latest (0.14.1); * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda, using a Snakemake workflow (ARMOR, from Mark Robinson's lab); * Which reference (e.g. transcriptome) was used?; Arabidopsis thaliana, from ensembl; * Which read files were used?; * Which which program options were used?; salmon (mapping-based) v0.14.1; [ program ] => salmon; [ command ] => quant; [ index ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/reference/SalmonIndex/Arabidopsis_thaliana }; [ libType ] => { ISR }; [ mates1 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R1.fastq.gz }; [ mates2 ] => { /mnt/EPHEMERAL/sabineRNASEQ/trimmedfastq/12-0-rve-30-3_R2.fastq.gz }; [ output ] => { /mnt/EPHEMERAL/sabineRNASEQ/ARMOR/output/salmon/12-0-rve-30-3 }; [ numBootstraps ] => { 100 }; [ seqBias ] => { }; [ gcBias ] => { }; [ validateMappings ] => { }; [ ] => { o--fldMean }; [ ] => { 250 }; [ fldSD ] => { 25 }; [ threads ] => { 7 }. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Ubuntu; - Version ; **Additional context**; Add any o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/393:779,install,installed,779,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/393,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Only `u` (unmapped) reads are labelled in the `aux_info/unmapped.txt` file, even when the log file indicates that many fragments were discarded because they are best-mapped to decoys. . **To Reproduce**. This GitHub repository details the motivation and full workflow of my pipeline: https://github.com/greenelab/2022-microberna/. To get the read files, I ran:; ```; rule rnaseq_sample_download:; output:; reads=""outputs/rnaseq_fastp/{sra}.fq.gz"",; json = ""outputs/rnaseq_fastp/{sra}.fastp.json"",; html = ""outputs/rnaseq_fastp/{sra}.fastp.html""; params: tmp_base = lambda wildcards: ""inputs/tmp_raw/"" + wildcards.sra; threads: 1; resources:; mem_mb=8000; run:; row = m.loc[m['experiment_accession'] == wildcards.sra]; fastqs = row['fastq_ftp'].values[0]; fastqs = fastqs.split("";""); if len(fastqs) == 1:; # single end data; download and stream directly to fastp for trimming.; fastq = fastqs[0]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + "".fastq.gz""):; shell(""wget -O {params.tmp_base}.fastq.gz ftp://{fastq}""). shell(""fastp -i {params.tmp_base}.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {output.reads}""). # check that the file exists, and if it does, remove raw fastq files; if os.path.exists(output.reads):; os.remove(params.tmp_base + "".fastq.gz""). else:; # paired end data; download both files, interleave, and then remove files; fastq_1 = fastqs[0]; fastq_2 = fastqs[1]; shell(""mkdir -p inputs/tmp_raw""); if not os.path.exists(params.tmp_base + ""_1.fastq.gz""):; shell(""wget -O {params.tmp_base}_1.fastq.gz ftp://{fastq_1}""). if not os.path.exists(params.tmp_base + ""_2.fastq.gz""):; shell(""wget -O {params.tmp_base}_2.fastq.gz ftp://{fastq_2}""). shell(""fastp -i {params.tmp_base}_1.fastq.gz -I {params.tmp_base}_2.fastq.gz --json {output.json} --html {output.html} -R {wildcards.sra} --stdout | gzip > {",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:390,pipeline,pipeline,390,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['pipeline'],['pipeline']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon. **Describe the bug**; Unit test failure during `make test`. **To Reproduce**; Building this Dockerfile is enough to reproduce the error; ```; # Use Ubuntu as the base image; FROM ubuntu:latest. WORKDIR /pipeline. RUN apt-get update && \; apt-get install -y --no-install-recommends \; git ca-certificates make cmake libboost-all-dev build-essential \; libcurl4-openssl-dev libbz2-dev liblzma-dev unzip curl && \; git clone --branch v1.10.1 https://github.com/COMBINE-lab/salmon.git && \; cd salmon && mkdir build && cd build && \; cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr -DTBB_INSTALL_DIR=/usr \; -DCMAKE_INSTALL_PREFIX=/usr/local .. && \; make && make install && \; make test || true; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v0.10.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? none; * Which read files were used? none; * Which which program options were used? It was the unit test. **Expected behavior**; I expect the tests to pass. This seems like it might be related to #229 but maybe not.; I did try `./src/unitTests` and that passes. . **Desktop (please complete the following information):**; - I built the Dockerfile on MacOS. **Additional context**; The error log file says; ```; -- For unit tests, will set working directory to /pipeline/salmon/tests; ./unitTests: error while loading shared libraries: libtbb.so.12: cannot open shared object file: No such file or directory; CMake Error at /pipeline/salmon/cmake/UnitTests.cmake:8 (message):; Error running 127; ```; This is strange because the other tests (which pass) must need this `libtbb.so.12` too right?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/845:297,pipeline,pipeline,297,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/845,8,"['install', 'pipeline', 'update']","['install', 'install-recommends', 'installed', 'pipeline', 'update']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; Salmon; **Describe the bug**; `419663 Segmentation fault (core dumped) `; **To Reproduce**; Steps and data to reproduce the behavior:; Code ran:; `salmon quant --ont -p 24 -t ${ref} -l U -a ""007_D14_transcript.bam"" ""007_D1_transcript.bam"" ""014_D14_transcript.bam"" ""014_D1_transcript.bam"" ""069_D14_transcript.bam"" ""069_D1_transcript.bam"" ""127_D14_transcript.bam"" ""127_D1_transcript.bam"" ""36S_D14_transcript.bam"" ""36S_D1_transcript.bam"" ""SCTI_D14_transcript.bam"" ""SCTI_D1_transcript.bam"" ""SCTI_D1_2000ng_transcript.bam"" ""ioGLUT_D7_transcript.bam"" ""ioMGL_D10_transcript.bam"" -o ${output}/transcripts_quant`. Specifically, please provide at least the following information:; * Which version of salmon was used? 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? module installed on HPC; * Which reference (e.g. transcriptome) was used? gencode.v44.transcriptome (Human); * Which read files were used? bam; * Which program options were used? salmon quant. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant output.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Server Response: Not Found; # salmon (alignment-based) v1.10.2; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ threads ] => { 24 }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { U }; # [ alignments ] => { 007_D14_transcript.bam 007_D1_transcript.bam 014_D14_transcript.bam 014_D1_transcript.bam 069_D14_transcript.bam 069_D1_transcript.bam 127_D14_transcript.bam 127_D1_transcript.bam 36S_D14_transcript.bam 36S_D1_transcript.bam SCTI_D14_transcript.bam SCTI_D1_transcript.bam SCTI_D1_2000ng_transcript.bam ioGLUT_D7_transcript.bam ioMGL_D10_transcript.bam }; # [ output ] => { /scratch/prj/ppn_microglia_m",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/923:818,install,installed,818,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/923,2,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; The bug is related to building the index by combining genome and transcriptome reference. **Describe the bug**; [salmon_index.err.log](https://github.com/COMBINE-lab/salmon/files/3801633/salmon_index.err.log). **To Reproduce**; Steps and data to reproduce the behavior: Reproducing the [Selective Alignment](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) tutorial. * Which version of salmon was used?; 1.0.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded Linux executable from GitHub; * Which reference (e.g. transcriptome) was used?; gencode.vM23.transcripts.fa.gz and GRCm38.primary_assembly.genome.fa.gz; * Which which program options were used?; `salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index`. **Desktop (please complete the following information):**; - OS: Linux; - Version: Ubuntu 16.04. **Additional context**; When installed via bioconda the salmon index command finishes with no error.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/441:538,install,installed,538,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/441,2,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This bug is generated from Salmon. **Describe the bug**; To use Salmon, I installed windows subsystem for Linux (WLS), then newest Ubuntu, Anaconda, bioconda, and finally Salmon (via Bioconda) on my PC. However, when I run any order (making index or do quant), I get this error message:. salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). I checked what this means and thought this is because this Ubuntu may not have GLIBC C++ library, so I followed some tutorial to (1) update my Ubuntu, and (2) install the newest GBLIC library, but the problem still persist. . However, if I use the exact same code on a HPCC, it actually works. **To Reproduce**; Steps and data to reproduce the behavior:; Totally following your index preparation tutorial like this:. grep ""^>"" <(gunzip -c TAIR10_chr_all.fas.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Araport11_cdna_20240409.gz TAIR10_chr_all.fas.gz > gentrome.fasta.gz; salmon index -t gentrome.fasta.gz -d decoys.txt -p 12 -i salmon_index --gencode. Then the error pops:; salmon: /lib/x86_64-linux-gnu/libpthread.so.0: version `GLIBC_PRIVATE' not found (required by /home/plyric/anaconda3/share/salmon-0.8.1-0/bin/../lib/librt.so.1). If I manage to get the index using an HPCC and run local quant like this:; salmon quant -i Arabidopsis_index -l A -1 filtered_a234-f1_S10_L002_R1_001.fastq.gz -2 filtered_a234-f1_S10_L002_R2_001.fastq.gz --validateMappings -o test_transcripts_quant; Then same error pops. Specifically, please provide at least the following information:. * Which version of salmon was used?; It is very strange. I am supposed to get v1.10.3 by bioconda default, but -v order get the same error. So I don't know how to get my version. The conda list says ""0.8.1"" ; * How was salmon installed (compiled, downloaded e",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/927:160,install,installed,160,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/927,3,"['install', 'update']","['install', 'installed', 'update']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; This is related to salmon. **Describe the bug**; When building Salmon 1.10.3 from source, I'm seeing the following error.; ```; [ 63%] Building CXX object src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o; In file included from /usr/include/pthread.h:33,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr-default.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr.h:148,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ext/atomicity.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/ios_base.h:39,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:839,install,install,839,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,2,['install'],['install']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; `salmon`. **Describe the bug**; Running `salmon quant` through my SLURM cluster consistently segfaults. I've attempted runs on `m4.2xlarge` & `m4.8xlarge` worker nodes. `Aug 16 19:38:23 ip-172-31-30-93 kernel: [ 681.083866] salmon[4167]: segfault at 2641a ip 00007fe2fcdc2dca sp 00007fff27128b90 error 4 in libtbb.so.2[7fe2fcda0000+37000]`. **To Reproduce**; * Which version of salmon was used?; * `salmon 0.9.1`; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Installed through conda; * `conda create -y --name salmon@0.9.1 bzip2=1.0.6 salmon=0.9.1 seqtk=1.2`; * Which reference (e.g. transcriptome) was used?; * `ftp://ftp.ensembl.org/pub/release-81/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz`; * Which read files were used?; * `ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR103/009/SRR1039509/SRR1039509_1.fastq.gz`; * Which program options were used?; ```; {; ""salmon_version"": ""0.9.1"",; ""index"": ""./index"",; ""libType"": ""U"",; ""unmatedReads"": ""./single.fastq"",; ""output"": ""./output"",; ""allowOrphansFMD"": [],; ""threads"": ""8"",; ""incompatPrior"": ""1e-20"",; ""biasSpeedSamp"": ""1"",; ""fldMax"": ""1000"",; ""fldMean"": ""200"",; ""fldSD"": ""80"",; ""forgettingFactor"": ""0.65"",; ""maxOcc"": ""200"",; ""maxReadOcc"": ""100"",; ""numBiasSamples"": ""2000000"",; ""numAuxModelSamples"": ""5000000"",; ""numPreAuxModelSamples"": ""1000000"",; ""numGibbsSamples"": ""0"",; ""numBootstraps"": ""0"",; ""vbPrior"": ""0.001"",; ""auxDir"": ""aux_info""; }; ``` . **Expected behavior**; For `salmon quant` to run to completion. **Desktop (please complete the following information):**; ```; Ubuntu Linux; Linux ip-172-31-24-127.ec2.internal 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; Distributor ID:	Ubuntu; Description:	Ubuntu 14.04.5 LTS; Release:	14.04; Codename:	trusty; ```. **Additional context**; - This SLURM cluster is managed by [Galaxy Cloudman](https://galaxyproject.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/271:517,install,installed,517,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/271,3,"['Install', 'install', 'release']","['Installed', 'installed', 'release-']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; I am trying to use Alevin to quantify a single cell RNA-Seq 10x Genomics CHROMIUM dataset. I am using Salmon 0.10.2, and it does not produce the count matrix. The output folder contains nothing but the log files. Specifically, I get the following error:; `[2018-07-19 16:27:46.916] [alevinLog] [error] Barcode not found in frequency table`; The full messages are bellow. **To Reproduce**; Steps and data to reproduce the behavior:; I explain how to download the data and reproduce the issue in the following. Specifically, please provide at least the following information:; * Which version of salmon was used?; 0.10.2. * How was salmon installed (compiled, downloaded executable, through bioconda)?; conda config --append channels conda-forge; conda config --append channels bioconda; conda install salmon=0.10.2. * Which reference (e.g. transcriptome) was used?; I am interested only in the transposons. Therefore, I am using the ""canonical DNA sequences of the transposable elements from species in the genus Drosophila"", which are available from the [Bergman](https://github.com/bergmanlab/transposons) Lab. Specifically, I use [this](https://github.com/bergmanlab/transposons/blob/master/current/transposon_sequence_set.fa) fasta file. The first 3 lines are:; >FBte0000104; GTGACATATCCATAAGTCCCTAAGACTTAAGCATATGCCTACATACTAATACACTTACAA; CACATACACCCCAATACAACATACACTACTCCGGATGTACCCAACAGATACCAGATAAGA; In another study, I have successfully used Salmon to quantify transposon expression from bulk RNA-Seq data with a mapping rate of 2%, which is enough for the kind of analysis that I am interested in. * Which read files were used?; The [SRR6327122](https://trace.ncbi.nlm.nih.gov/Traces/sra/?run=SRR6327122) run. The fastq files can be downloaded in a couple of hours using the SRA Toolkit, e.g.,; `fastq-dump --split-files --gzip --outdir ./ SRR6327122`; The first few lines of the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:753,install,installed,753,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,2,['install'],"['install', 'installed']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin; **Describe the bug**; I got reasonable cell barcode when I worked with 10X cellranger, I just got very few cell barcode when I use alevin. I don't have problem with 10X V3 data when I use alevin. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; ![image](https://github.com/user-attachments/assets/287e4955-ca55-4767-99a8-299c100b667f). **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/949:471,install,installed,471,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/949,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; both. **Describe the bug**; I have Ubuntu 22.04.4 LTS. The conda version I have is 23.3.1. After I followed ""Get Started"", I installed salmon by the command ""conda create -n salmon salmon"". Everything looks fine so far. conda activate salmon. salmon -h; salmon: error while loading shared libraries: libboost_iostreams.so.1.60.0: cannot open shared object file: No such file or directory. Any help with this problem will be highly appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/915:211,install,installed,211,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/915,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; A clear and concise description of what the bug is.; Running salmon quant in 276 samples on HPC, most of them run smoothly while 7 samples end with ""Segmentation fault (core dumped)"". **To Reproduce**; Steps and data to reproduce the behavior:; run salmon quant in 276 samples on HPC, 7 failed with ""Segmentation fault (core dumped)"". But by changing the p from 16 to 64, 2 of them won't be stopped by this error. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda ; * Which reference (e.g. transcriptome) was used? GRCh38 transcripts from gencode v44; * Which read files were used? paired-end bulk RNA seq file in fastq.gz format; * Which which program options were used? ; …/miniconda3/envs/salmon1/bin/salmon quant -i …/share/references/gencode/salmon_index --libType A ; -1 $read1 \; -2 $read2 \; -p 16 \; --validateMappings \; --gcBias \; --seqBias \; --recoverOrphans \; --rangeFactorizationBins 4 \; --output $outdir. **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```shell; Version Info Exception: server did not respond before timeout; ### salmon (selective-alignment-based) v1.10.2; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/references/gencode/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { RNA_1.fastq.gz }; ### [ mates2 ] => { RNA_2.fastq.gz }; ### [ threads ] => { 16 }; ### [ validateMappings ] => { }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ recoverOrphans ] => { }; ### [ rangeFactorizationBins ] => { 4 }; ### [ output ] => { salmon.standard/sample }; Logs will be writte",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/971:661,install,installed,661,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/971,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk mode. **Describe the bug**; We have 60 samples made from very low RNA inputs (cell captures) so the libraries were made with Ovation Solo RNAseq kit from Tecan. 150 PE. One of the sample finished fine (but mapping rate 21%) but our nextflow pipeline crashed on the second one and on another one I tested with a segfault but no other information to why that we can see:; ```; salmon quant -i ../data/references/salmon-1.4.0-ncbi-GRCm39_AND_egfp_Annot109 -l ISF \; -1 trimmomatic/AAV_204M_TCCTGGTA_L001_R1_001.fastq.qualtrim.paired.fastq \; -2 trimmomatic/AAV_204M_TCCTGGTA_L001_R2_001.fastq.qualtrim.paired.fastq \; --numBootstraps=30 \; --validateMappings --recoverOrphans \; -o salmon/AAV_204M_TCCTGGTA_L001 \; --seqBias --gcBias --writeUnmappedNames -p 8. #it ran for a while and then did:; processed 3,000,000 fragmentsintLog] [info] First decoy index : 129,698; hits: 760,262, hits per frag: 0.254757Segmentation fault; ```. I tried running just the R1 fastq file and it finished fine without a segfault. Mapping rates were ~15%. **To Reproduce**; Specific to particular fastq files . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; compiled using CMake with gcc version 8.2.0 (not by me); easybuild config file is at https://github.com/IGBIllinois/easybuild/blob/master/easyconfigs/s/Salmon/Salmon-1.4.0-IGB-gcc-8.2.0.eb. * Which reference (e.g. transcriptome) was used?; Custom reference of NCBI GRCm39 + egfp protein, although same segfault occurs when using plain GRCm39 that has worked for many other SE and PE projects; * Which read files were used?; Owned by PI; I may or may not be able to send a pair to you; * Which which program options were used?; See above example. **Expected behavior**; Finishing without segfault like the first sample did. I can s",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/668:332,pipeline,pipeline,332,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/668,1,['pipeline'],['pipeline']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; bulk. **Describe the bug**; I am working with UMI-tagged Lexogen QuantSeq data. Since salmon does not (yet?) support handling UMIs with bulk RNA-seq directly (see https://github.com/COMBINE-lab/salmon/issues/306), I am using [umi_tools](https://github.com/CGATOxford/UMI-tools) + STAR to generate a deduplicated transcriptome BAM file and run Salmon in alignment mode as implemented in the [nf-core/rnaseq](nf-co.re/rnaseq) pipeline. . Unfortunately, Salmon does not seem to handle the deduplicated BAM well. A lot of genes have zero reads which shouldn't. . For instance, for `ENSMUSG00000029657` I get the following results (last column denotes counts in all cases); ```; # Salmon on transcriptome BAM, without umit_tools dedup: quant.genes.no_umi.sf; ENSMUSG00000029657.15 3803.74 3650.23 17.3078 438; # Salmon on deduplicated transcriptome BAM: quant.genes.sf; ENSMUSG00000029657.15 1947.36 1614.62 0 0 ; # Feature counts on genome BAM, without umi_tools dedup: ; ENSMUSG00000029657.15 [...] 7266 415; # Feature counts on deduplicated genome BAM:; ENSMUSG00000029657.15 [...] 7266 289; ```. Here's a scatterplot of log1p(counts) of the salmon quant results for a single sample with and without umi_tools dedup; ![image](https://user-images.githubusercontent.com/7051479/125756098-5aff12af-a75f-4bd3-9c5d-30ce7890a2ba.png). **To Reproduce**; Run Salmon quant on the aligned transcriptome BAM file. I provide subsampled versions of both the deduplicated and non-deduplicated BAM files. If you need the full BAM files, LMK and we can arrange a transfer. . * [POOLAM1-40.Aligned.toTranscriptome.out.subsample.bam.gz](https://github.com/COMBINE-lab/salmon/files/6821654/POOLAM1-40.Aligned.toTranscriptome.out.subsample.bam.gz); * [POOLAM1-40.umi_dedup.transcriptome.sorted.subsample.bam.gz](https://github.com/COMBINE-lab/salmon/files/6821657/POOLAM1-40.umi_dedup.transcriptome.sorted.subsample.bam.gz); * [salmon_fe",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/684:510,pipeline,pipeline,510,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/684,1,['pipeline'],['pipeline']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; in Salmon bulk mode, while using the following commands to create an index:; A. Ingredients preparation:; grep ""^>"" genome.fa | cut -d "" "" -f 1 > ./decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat Gencode_transcripts.fa genome.fa > ./gentrome.fa; B. index building:; salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode; **Describe the bug**; I got the following bug/error message:; Version Info: This is the most recent version of salmon.; salmon.sh: line 23: 37339 Illegal instruction (core dumped) salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode. Specifically, I was using the following version and files/options:. * Salmon 1.0.0; * through bioconda?; conda update salmon; * gencode.v27.transcripts.fa; * default. Any help to fix this bug would be appreciated!. Kind regards,; Jamal.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/458:796,update,update,796,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/458,1,['update'],['update']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; related to salmon. **Describe the bug**; I've been using the Salmon-tximport-DESEq2 pipeline for quite a while now but it's the first time I got similar results from Salmon across samples. I've got 24 samples in total (4 rice genotypes, 2-time point for bacterial blight infection, and 3 replications). However, this from the raw sequencing data and even the trimmed reads that I used, I've got similar mapping rates across all samples. Similar length, TPM, and NumReads across all genes for all genes. Though the value for each gene differs in the abovementioned parameters. The EffectiveLength though is 250 for all genes across all samples. I've used all four different versions of Salmon as listed below but I'm still getting the same similar mapping rate and the parameters at quant.sf though the values differ a bit from each Salmon version. **To Reproduce**; ### Steps and data to reproduce the behavior: for version 0.8. **First I took the genome fasta file and the gff3 file and made a transcriptome fasta file using Salmon:**; module load Cufflinks/2.2.1; gffread all.gff3 -g all.chrs.fasta -w MSU7_transcript.fasta. **I then indexed the transcript fasta file.**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=50G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J index_Salmon. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. salmon index -t ~/data/genome/MSU7_transcript.fasta -i ~/data/genome/MSU7_transcript.index --type quasi -k 31. **I then run transcript abundance estimate pipeline for the raw-reads and the trimmed reads as follows:**; #!/bin/bash; #SBATCH -N 1; #SBATCH -c 8; #SBATCH --mem=10G; #SBATCH --mail-use=tarun2@illinois.edu; #SBATCH -J Salmon; #SBATCH -a 1-24. module load Salmon/0.8.2-IGB-gcc-4.9.4-Python-2.7.13. line=$(sed -n -e ""$SLURM_ARRAY_TASK_ID p"" ~/source/BLBnew.txt). salmon quant -i ~/data/genome/MSU7_transcript.index -l A \; -1 ~/data/raw-data/BLB/${line}",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/346:170,pipeline,pipeline,170,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/346,1,['pipeline'],['pipeline']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (buik mode). **Describe the bug**; A clear and concise description of what the bug is.; I compiled the code (salmon v1.4.0) and produced the executable. Then when I try to ""salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode"" (transcriptome and genome from your tutorial: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/), a segmentation fault occurs. (gdb backtrack is provided below.). **To Reproduce**; Steps and data to reproduce the behavior:. 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu118.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /cmake version 3.13.4/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; > cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../stage ..; > make; > make install. 5. following your tutorial https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoy",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:660,install,installed,660,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,2,['install'],"['install', 'installed']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode) . **Describe the bug**; salmon fails to map gene to transcript id despite given GTF or tx2id file as properly required.; I also used `grep` on both tx2id file and quant.sf file and both contain the transcript IDs tested. **To Reproduce**; 1. Create index decoys; Followed the steps in [tutorial](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment) ; 2. Create index; `salmon1.4.0/salmon-latest_linux_x86_64/bin/salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode -p 40`; 3. Run ; `salmon1.4.0/salmon-latest_linux_x86_64/bin/salmon quant -l A -1 <(zcat S1_1.fastq) -2 <(zcat S1_2.fastq) -o output -i salmon_index -g transcript_to_id_mm10`. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary; * Which reference (e.g. transcriptome) was used? mm10, Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; * Which read files were used? 125-bases PE RNA-seq samples; * Which which program options were used? `-l A` and `-g`. **Expected behavior**; Transcript ID should be found, translated into GeneSymbol and used for gene-level abundance.; Instead the program fails to find transcript ID even though it exists exactly as expected. **Screenshots**; etc. For all genes.; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082416.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082417.1] in transcript <-> gene map; returning transcript as it's own gene`; `[2020-12-24 14:59:10.623] [jointLog] [warning] couldn't find transcript named [ENSMUST00000082418.1] in transcript <-> gene map; returning transcript as it's own gene`. **Desktop (please complete t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/607:915,install,installed,915,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/607,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; Segmentation fault error when running salmon quant. **To Reproduce**; Steps and data to reproduce the behavior:; Inconsistent behaviour, sometimes quant.sf files are generated, sometimes not. Specifically, please provide at least the following information:. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:539,install,installed,539,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,2,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode). **Describe the bug**; after following tutorial step by step from the following website:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/. with the following files ; GRCm39.primary_assembly.genome.fa.gz; gencode.vM28.transcripts.fa.gz. I get the following error . Exception : [Device or resource busy: 'salmon_index/twopaco_tmp']; salmon index was invoked improperly.; For usage information, try salmon index --help; Exiting. **To Reproduce**; Steps and data to reproduce the behavior:; create the files:; decoys.txt; gentrome.fa.gz. and put them in salmonDecoy directory ; and run:; salmon index -t salmonDecoy/gentrome.fa.gz -d salmonDecoy/decoys.txt -p 12 -i salmon_index --gencode. Specifically, please provide at least the following information:; * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?; I used a linux machine with conda salmon env ; salmon version: salmon 1.8.0. **Expected behavior**; create index for salmon . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/767:935,install,installed,935,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/767,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon (bulk mode); **Describe the bug**; The contents of the quant.genes.sf file and the quant.sf file are identical. The file quant.genes.sf should have been the results of genes quantification, but now it is all transcript quantification. I.e., the file quant.genes.sf is exactly the same as quant.sf (only the transcript names corresponding to the Name column are in a different order). **To Reproduce**; * Which version of salmon was used?; * 1.10.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * bioconda; * Which reference (e.g. transcriptome) was used?; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.109.gtf \; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.dna.primary_assembly.fa \; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.cdna.all.fa. * My options ：; * generate decoys.txt:; grep ""^>"" < /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.dna.primary_assembly.fa | cut -d "" "" -f 1 > \; /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt; sed -i.bak -e 's/>//g' /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt; cat /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.cdna.all.fa \; /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.dna.primary_assembly.fa > \; /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa. * salmon index; /home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon index \; --transcripts /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa \; --kmerLen 31 \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --decoy /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt \; --keepDuplicates \; --threads 50. */home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon quant \; --libType A \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --unmatedReads /cold_data/zhaojiaxin/long_read/GRM/upstream-analysis/trim_polya/GRM/ONT_GRM_R01/ONT_GRM_R01.full_length.trim_polyA.filter.fasta \; --output /c",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/962:559,install,installed,559,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/962,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon . **Describe the bug**; I'm working with 15 samples, with ~5Gb total reads per sample (90,000,000 to 100,000,000 reads, ~75 bp reads). I've tried running these samples through the `nf-core/rnaseq` pipeline, but the pipeline took an age to run before dying at the `salmon quant` steps. Some samples finished in about 12 minutes. Others timed out after 8+ hours. - Successful log:. ```; [2023-02-22 16:33:49.782] [jointLog] [info] setting maxHashResizeThreads to 6; [2023-02-22 16:33:49.782] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-02-22 16:33:49.782] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-02-22 16:33:49.782] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2023-02-22 16:33:49.782] [jointLog] [info] parsing read library format; [2023-02-22 16:33:49.783] [jointLog] [info] There is 1 library.; [2023-02-22 16:33:49.784] [jointLog] [info] Loading pufferfish index; [2023-02-22 16:33:49.784] [jointLog] [info] Loading dense pufferfish index.; [2023-02-22 16:34:17.987] [jointLog] [info] done; [2023-02-22 16:34:18.037] [jointLog] [info] Index contained 245549 targets; [2023-02-22 16:34:19.908] [jointLog] [info] Number of decoys : 194; [2023-02-22 16:34:19.908] [jointLog] [info] First decoy index : 245314 ; [2023-02-22 16:39:30.638] [jointLog] [info] Thread saw mini-batch with a maximum of 1.10% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.02% zero probability fragments; [2023-02-22 16:39:30.653] [jointLog] [info] Thread saw mini-batch with a maximum of 1.04% zero probability fragments; [2023-02-22 16:39:30.654] [jointLog] [info] Thread saw mini-batch with a maximum of 1.12% zero probability fragments; [2023-02-22 16:39",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:290,pipeline,pipeline,290,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,2,['pipeline'],['pipeline']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon quant. **Describe the bug**; --gencode used with salmon quant does not result in correct handling of of multi-label headers in gencode reference files. Resulting in errors and failure to estimate counts when using gencode transcriptome for alignment. Now for every reference header error is output: ; ```; [2021-06-15 00:15:36.623] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment; ```. **To Reproduce**; Steps and data to reproduce the behavior:. align reads to transcriptome using minimap2 to generate BAM file. Use of salmon to estimate transcript counts using ONT specific flags. ```; salmon-1.5.1_linux_x86_64/bin/salmon quant --ont --gencode -p 4 -t Genome_files/gencode.vM24.transcripts.fa -l U -a Documents/Day2_03_DRS_pass.bam -o Documents/counts/Day2_03_DRS_pass; ```. Specifically, please provide at least the following information:. * Which version of salmon was used? v1.5; * How was salmon installed (compiled, downloaded executable, through bioconda)? binary downloaded from github; * Which reference (e.g. transcriptome) was used? gencode.M24.transcriptome.fa; * Which read files were used? direct RNA sequences from MinION platform ; * Which which program options were used? see above. **Expected behavior**; Expect that salmon splits the header from gencode reference and takes first part of the header and uses in output files for transcript estimatation. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/671:1127,install,installed,1127,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/671,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon(bulk mode). **Describe the bug**; A clear and concise description of what the bug is.; While setting -DCMAKE_BUILD_TYPE=Debug, ; ""make"" command failed at ; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o; c++: error: -pg and -fomit-frame-pointer are incompatible; src/CMakeFiles/salmon.dir/build.make:62: recipe for target 'src/CMakeFiles/salmon.dir/EMUtils.cpp.o' failed; make[2]: *** [src/CMakeFiles/salmon.dir/EMUtils.cpp.o] Error 1; CMakeFiles/Makefile2:790: recipe for target 'src/CMakeFiles/salmon.dir/all' failed; make[1]: *** [src/CMakeFiles/salmon.dir/all] Error 2; Makefile:162: recipe for target 'all' failed; make: *** [all] Error 2. **To Reproduce**; Steps and data to reproduce the behavior:; 1. run a docker container using ubuntu:18.04 as image. 2. (packages I installed); apt-get install -y gcc g++ make wget git curl libtbb2-dbg libtbb-dev unzip zlib1g-dev libcurl4-openssl-dev liblzma-dev libbz2-dev libcereal-dev libgff-dev libpkgconfig-perl libjemalloc-dev; /*; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; g++ (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; GNU Make 4.1; */; wget https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.sh /*cmake version 3.13.4*/. 3. git clone https://github.com/COMBINE-lab/salmon.git; I'm at the top commit: commit 0813a0a287c2bd80071511830befe5d786a59ad1 (HEAD -> master, tag: v1.4.0, origin/master, origin/HEAD). 4. In directory salmon/build, I type; cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR=/usr/include -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=../stage .. =============At last, getting these:; -- Configuring done; -- Generating done; -- Build files have been written to: /root/salmon/build. 5. In directory salmon/build, I type; make. ===========Then crashed here; [ 86%] Built target unitTests; Scanning dependencies of target salmon; [ 86%] Building CXX object src/CMakeFiles/salmon.dir/EMUtils.cpp.o",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/608:889,install,installed,889,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/608,2,['install'],"['install', 'installed']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; A clear and concise description of what the bug is. I had an older version of salmon that works (v0.8.2) that I believe was not compiled with Bioconda. I am now trying to get the latest version through Bioconda and with the same ""salmon quant"" command (See below) that works on the old version, I get a ""segmentation fault 11"" error and it never actually quantifies any reads. Do you know why this would happen?. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; * Which reference (e.g. transcriptome) was used?; gencode.v27.transcripts.fa; * Which read files were used?; fastq; * Which which program options were used?; -l A, single end . **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; salmon quant -i ~/Reference_indexes/humangencodev27_transcripts_index_20181023 -l A -r ~/Downloads/ENCFF600FYP.fastq.gz -o ./salmon_test/ENCFF600FYP_quant; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.11.3; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ~/Reference_indexes/humangencodev27_transcripts_index_20181023 }; ### [ libType ] => { A }; ### [ unmatedReads ] => { ~/Downloads/ENCFF600FYP.fastq.gz }; ### [ output ] => { ./salmon_test/ENCFF600FYP_quant }; Logs will be written to ./salmon_test/ENCFF600FYP_quant/logs; [2018-10-23 20:11:13.424] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-10-23 20:11:13.425] [jointLog] [info] parsing read library format; [2018-10-23 20:11:13.425] [jointLog] [info] ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/303:718,install,installed,718,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/303,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; Errors compiling salmon in spack with cmake. **To Reproduce**; `spack install salmon`. Specifically, please provide at least the following information:. * Which version of salmon was used?: 1.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?: through spack, that downloads source; * Which reference (e.g. transcriptome) was used?: none, the error is during compilation; * Which read files were used?: none; * Which which program options were used? `RELEASE`. **Expected behavior**; Program would compile correctly. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]: linux x86_64; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]:; ```; Linux pablo-ThinkPad-T14-Gen-3 5.19.0-50-generic #50-Ubuntu SMP PREEMPT_DYNAMIC Mon Jul 10 18:24:29 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 22.04.2 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; During the update of the spack package for salmon we found `hts` is needed, and cmake could not find the module. We are wondering if you want/plan to use this by default. https://github.com/spack/spack/pull/39202/commits/c3357a64a9697be4058feb555a2c4e4138793f17",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/866:186,install,install,186,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/866,5,"['RELEASE', 'Release', 'install', 'update']","['RELEASE', 'Release', 'install', 'installed', 'update']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon. **Describe the bug**; I installed Salmon 1.5.2 from binaries, and load it via the module environment (alter or set shell variables such as `PATH` to make the installation visible). The problem is that Salmon overrides the link to the C math standard library. . ```; # without Salmon in my PATH; ldd /home/eboileau/.miniconda3/envs/scNapBar-dev/bin/python3 ; libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f1d2bd45000). # with Salmon in my PATH (loaded via module load salmon/1.5.2); libm.so.6 => /biosw/salmon/1.5.2/lib/libm.so.6 (0x00007f1fa67c0000) ; ```. The latter seem to be incompatible with the Python installation, and results in. ```; import numpy; ImportError: /biosw/salmon/1.5.2/lib/libm.so.6: symbol __get_cpu_features version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; ```. I do not understand why this is happening, and the question is why Salmon has it's own copy of *libm.so.6*?; Is this library different? . **To Reproduce**; Load salmon/1.5.2 via module environment. I am able to run both my python script and Salmon after deleting Salmon's own copy of *libm.so.6*.; Is this expected to alter Salmon's results in any way?. **Expected behavior**; Salmon does not modify the link to *libm.so.6*. **Desktop (please complete the following information):**; - Linux atlas 4.19.0-17-amd64 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux; - salmon 1.5.2; - Python 3.7.6; - conda 4.9.2; - Modules Release 4.2.2 (2019-02-17). **Questions**; - Why Salmon has it's own copy of *libm.so.6*? Is it safe to delete it, and is this expected to alter Salmon's results in any way?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/710:118,install,installed,118,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/710,4,"['Release', 'install']","['Release', 'installation', 'installed']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; It appears that when I run the quant command it gets up to the ""loading dense pufferfish index"" but stop after loading positions. So I think that it isn't even getting to the quantification step because it doesn't finish loading the index. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; *v.1.5.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * through bioconda; * Which reference (e.g. transcriptome) was used?; * ; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen.; I would expect it to continue to ""loading reference sequence"" etc., then display done and continue with the quantification; **Screenshots**; ![image](https://user-images.githubusercontent.com/85455566/120937098-82d2fb80-c6d9-11eb-9aea-a2935ccc1e50.png). **Desktop (please complete the following information):**; Ubuntu Linux; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; I'm pretty new to linux and salmono it is likely that my problem is due to some simple misunderstanding of how the program works, but any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/667:600,install,installed,600,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/667,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; The cDNA fasta file contains 176241 ENSTs,but the result file only contains 166667 ENSTs.; **To Reproduce**; Steps and data to reproduce the behavior:; The steps and data are as follows. ; Specifically, please provide at least the following information:. * Which version of salmon was used? v0.9.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used? ; Homo_sapiens.GRCh38.cdna.all.fa obtained from Ensembl release 83; * Which read files were used? ; GSE41009; * Which which program options were used? ; Building index: salmon index -t filepath/Homo_sapiens.GRCh38.cdna.all.fa -i V83-homo_index --type quasi -k 31; Quantification: salmon quant -p 50 -i filepath/V83-homo_index -l IU -1 ESC-SRR574820_1.fastq ESC-SRR574821_1.fastq -2 ESC-SRR574820_2.fastq ESC-SRR574821_2.fastq -o ESC-quantification. **Expected behavior**; A clear and concise description of what you expected to happen.; The result file should contain all the ENSTs existed in cDNA fasta file.; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; uname -a; Linux mn1 2.6.32-431.29.2.2.ky3.1.x86_64 #1 SMP Thu Sep 25 10:15:09 CST 2014 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	NeoKylin; Description:	NeoKylin release 3.2 (Carambola); Release:	3.2; Codename:	Carambola; **Additional context**; Add any other context about the prob",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/255:485,install,installed,485,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/255,2,"['install', 'release']","['installed', 'release']"
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon 1.1.0 and 1.0.0 core-dump when attempting to build an index under Ubuntu 18.04 LTS; **To Reproduce**; Steps and data to reproduce the behavior:; ```; root@firefly:/usr/local/src/salmon# salmon-1.1.0_linux_x86_6/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: This is the most recent version of salmon.; [2020-04-07 21:11:41.237] [jLog] [info] building index; out : index; [2020-04-07 21:11:41.240] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; Illegal instruction (core dumped). root@firefly:/usr/local/src/salmon# salmon-0.14.1_linux_x86_64/bin/salmon index -k 31 -i index -t sample_data/transcripts.fasta; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; [2020-04-07 21:12:14.575] [jLog] [info] building index; [2020-04-07 21:12:14.580] [jointLog] [info] [Step 1 of 4] : counting k-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit su",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/500:877,UPGRADE,UPGRADE,877,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500,1,['UPGRADE'],['UPGRADE']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; A clear and concise description of what the bug is.; salmon quant is leading to segmentation fault when `--skipQuant` flag is set. The behavior may be annotation dependent.; **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? :; * v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? ; * bioconda; * Which reference (e.g. transcriptome) was used?; * human hg38 [gencode v43 comprehensive](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.primary_assembly.annotation.gtf.gz) produces the error; * human hg38 [gencode v43 basic](https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_43/gencode.v43.basic.annotation.gtf.gz) works fine.; * Which read files were used?; * The issue is reproducible with multiple independent read files. Logs attached are from reads subsampled from [GSM7099349](https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM7099349); * Which which program options were used?; * --skipQuant -l A. **Expected behavior**; A clear and concise description of what you expected to happen.; salmon quant finishes without seg fault with `--skipQuant`; **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; Terminal output when `--skipQuant` is on:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:483,install,installed,483,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I used the default parameters to run salmon on mouse sample. But I got the warning:. `Detected a *potential* strand bias > 1% in an unstranded protocol check the file:`. **To Reproduce**; `""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 10869138,; ""num_assigned_fragments"": 10869138,; ""num_frags_with_concordant_consistent_mappings"": 10212463,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1088473,; ""strand_mapping_bias"": 0.5258466052704426,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 4842274,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 5370189,; ""SF"": 593930,; ""SR"": 494543,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0`. Specifically, please provide at least the following information:. * Which version of salmon was used? ; ""salmon_version"": ""0.14.1"". * How was salmon installed (compiled, downloaded executable, through bioconda)? bioconda. * Which reference (e.g. transcriptome) was used?; gencode mouse VM22. * Which read files were used?. Downloaded from sra（Just ordinary Illumina reads). * Which which program options were used?. ```; salmon quant -i $mm10_whole_index -l A \; -1 $fastq1 \; -2 $fastq2 \; -p 20 --validateMappings -o $output_whole; ```. **Expected behavior**; Why Strand bias is very high?. **Desktop (please complete the following information):**; Linux localhost.localdomain 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/422:902,install,installed,902,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/422,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; I was trying to do salmon quant on multiple bam files together but got the error.; <img width=""1209"" alt=""image"" src=""https://github.com/COMBINE-lab/salmon/assets/30546732/45cad092-de37-4e00-a873-6ea46254efbd"">. **To Reproduce**; Steps and data to reproduce the behavior:; `salmon quant -t /Reference/GRCm39_Gencode/GRCm39.fa --libType A --ont -a ./bamfiles/*.bam -o ./salmon_bulk`; Specifically, please provide at least the following information:. * Which version of salmon was used?; ; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/920:621,install,installed,621,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/920,1,['install'],['installed']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; is been running like an order of magnitude slower than when I last used it ; **A clear and concise description of what the bug is.**; So I am aligning reads against Arabidopsis Thaliana, using Araport 11 annotation. I usually had 20 M reads aligned within an hour or 2. I am aligning a 46M reads library and it has been running for 20 hours using 4 threads of my humble i5-3210M and is barely on 38.5M, after 20 hours! Index was constructed with default kmer size and no decoys. I have had this problem with other libraries since upgraded from V1.0.0, . **To Reproduce**; I guess just try to align stuff against araport11, this particular problem comes with any fq.gz. It will take hours and hours and hours to align. **Specifically, please provide at least the following information:**. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable; * Which reference (e.g. transcriptome) was used?; Araport 11, from A. thaliana; * Which read files were used?; regular fastq.gz ( SRR7985407); * Which which program options were used?; --validateMappings; -p 4; --seqBias; --gcBias ; --posBias. **Expected behavior**; Much faster alignment, it is Salmon !!; **Screenshots**; this is the run info so far:. Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/jaimealaniz/Documents/indexes/salmon/ara11/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR7985407_1.fq.gz }; ### [ mates2 ] => { SRR7985407_2.fq.gz }; ### [ validateMappings ] => { }; ### [ threads ] => { 4 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ posBias ] => { }; ### [ output ] => { /home/jaimealaniz/Documents/salmon.embryo/SRR7985407/ }; Logs will be written to /home/jaimealaniz/Documents/salmon",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/527:646,upgrade,upgraded,646,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/527,1,['upgrade'],['upgraded']
Deployability,"**Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; salmon; **Describe the bug**; salmon takes days to process through 16 samples. **To Reproduce**; Tried running on a different computer, same issue. . Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.2.1; * How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda; * Which reference (e.g. transcriptome) was used?; mouse Mus_musculus.GRCm38.cdna.all.fa; * Which read files were used?; fastq; * Which which program options were used?; Various ; the --hitfilterpolicy BOTH was just added following reading another user query to see if that would help. (https://github.com/COMBINE-lab/salmon/issues/527). ```; ### salmon (mapping-based) v1.2.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { mouse_index1 }; ### [ libType ] => { IU }; ### [ mates1 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_1.trimmed.fastq.gz }; ### [ mates2 ] => { /Volumes/FIle_backup/Genewiz_Fastq_June_2020/qc/13_2.trimmed.fastq.gz }; ### [ threads ] => { 4 }; ### [ hitFilterPolicy ] => { BOTH }; ### [ biasSpeedSamp ] => { 10 }; ### [ output ] => { quants/13_quant }; ```. **Expected behavior**; Not to be so slow.... I've used salmon previously with some SRR datasets and it was very fast, this seems very strange to me . **Screenshots**; ```; [2020-06-13 02:34:43.686] [jointLog] [info] setting maxHashResizeThreads to 4; [2020-06-13 02:34:43.686] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-06-13 02:34:43.686] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-06-13 02:34:43.686] [jointLog] [info] parsing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/537:363,install,installed,363,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/537,1,['install'],['installed']
Deployability,"**Question: How to generate a Salmon output with both FPKM and TPM?**. Hello guys! I really enjoy using Salmon, but I recently encounter a problem regarding the output unit. . I'm currently using Salmon version 1.2.0 for processing metagenomic data but I can only generate .sf file with 5 columns (Name, Length, EffectiveLength, TPM & NumReads). From the information of the following website, Salmon seems to be capable to write the output as FPKM and TPM.; https://sailfish.readthedocs.io/en/master/salmon.html. I've tried to install the latest version of Salmon (1.3.0), but the output is still the same. So, does anyone know how to make such output?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/566:527,install,install,527,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/566,1,['install'],['install']
Deployability,**The bug is primarily related to salmon (bulk mode)**. **Describe the bug**; After building salmon it segfaults with the example file shipped with the source tarball. The problem is described in detail in the [Debian bug tracking system](https://bugs.debian.org/1028713). While the Debian bug is against version 1.9.0 I can perfectly reproduce the issue with a recent download of version 1.10.0. **To Reproduce**; Steps and data to reproduce the behavior:. Download [your release tarball](https://github.com/COMBINE-lab/salmon/archive/refs/tags/v1.10.0.tar.gz). $ tar xaf v1.10.0.tar.gz; $ cd salmon-1.10.0; # build on Debian testing system; $ cmake -DCMAKE_BUILD_TYPE=Release -DUSE_SHARED_LIBS=TRUE -DBZIP2_LIBRARIES=-lbz2 -DBZIP2_INCLUDE_DIR=/usr/include -DLIBLZMA_INCLUDE_DIR=/usr/include/ -DLIBLZMA_LIBRARY=lzma -DCMAKE_MODULE_PATH=/usr/share/cmake/Modules -DTBB_WILL_RECONFIGURE=FALSE -DBOOST_WILL_RECONFIGURE=FALSE; $ make; $ tar xaf sample_data.tgz; $ src/salmon index -t sample_data/transcripts.fasta -i sample_salmon_quasi_index; Version Info: This is the most recent version of salmon.; [2023-03-08 17:30:38.873] [jLog] [warning] The salmon index is being built without any decoy sequences. It is recommended that decoy sequence (either computed auxiliary decoy sequence or the genome of the organism) be provided during indexing. Further details can be found at https://salmon.readthedocs.io/en/latest/salmon.html#preparing-transcriptome-indices-mapping-based-mode.; [2023-03-08 17:30:38.873] [jLog] [info] building index; out : sample_salmon_quasi_index; [2023-03-08 17:30:38.873] [puff::index::jointLog] [info] Running fixFasta; ; [Step 1 of 4] : counting k-mers; ; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Replaced 0 non-ATCG nucleotides; [2023-03-08 17:30:38.879] [puff::index::jointLog] [info] Clipped poly-A tails from 0 transcripts; wrote 15 cleaned references; Segmentation fault. * Version 1.9.0 as well as version 1.10.0 are affected. Unfortunately we did not man,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/835:473,release,release,473,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/835,2,"['Release', 'release']","['Release', 'release']"
Deployability,"**The bug is primarily related to salmon (bulk mode)**; **Describe the bug**; ```; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v0.14.1; # [ program ] => salmon ; # [ command ] => quant ; # [ libType ] => { U }; # [ alignments ] => { Analysis/Quantification/OJ33.sam }; # [ targets ] => { Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas }; # [ output ] => { Analysis/Quantification/OJ33 }; # [ noErrorModel ] => { }; # [ writeUnmappedNames ] => { }; Logs will be written to Analysis/Quantification/OJ33/logs; [2019-08-13 11:13:43.563] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2019-08-13 11:13:43.563] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""Analysis/Quantification/OJ33.sam"", fasta = ""Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas"" . . .done; [2019-08-13 11:13:46.239] [jointLog] [info] replaced 1 non-ACGT nucleotides with random nucleotides. processed 2000000 reads in current roundSegmentation fault (core dumped); ```; # To Reproduce; **Which version of salmon was used?**; salmon 0.14.1; **How was salmon installed (compiled, downloaded executable, through bioconda)?**; downloaded executable; **Which reference was used?**; custom, transcriptom derived from nanopore long-reads using Pinfish pipeline; **Which read files were used?**; SAM file returned by minimap2 (nanopore long reads); **Which which program options were used?**; `salmon quant -l U -a Analysis/Quantification/OJ33.sam -t Analysis/Pinfish/corrected_transcriptome_polished_collapsed.fas -o Analysis/Quantification/OJ33 --noErrorModel --writeUnmappedNames > Analysis/Quantification/OJ33.log`; **Desktop (please complete the following information):**; x86_64 GNU/Linux",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/414:1362,install,installed,1362,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/414,2,"['install', 'pipeline']","['installed', 'pipeline']"
Deployability,"**To Reproduce**; Steps and data to reproduce the behavior:; 1. The command to build index:; threads=24; genome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_genomic.fna; transcriptome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_cds_from_genomic.rename.fna; index=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/index/salmon/RefSeq_index; grep ""^>"" ${genome} | cut -d "" "" -f 1 > ${index}/decoys.txt; sed -i.bak -e 's/>//g' ${index}/decoys.txt; cut -d ""_"" -f 1 ${transcriptome} > ${index}/salmon.cdna.fa; cat ${index}/salmon.cdna.fa ${genome} > ${index}/gentrome.fa.gz; salmon index -t ${index}/gentrome.fa.gz -d ${index}/decoys.txt -i ${index} -p $threads. 3. The command to get gene quantification:; salmon quant -p 30 -i /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/index/salmon/RefSeq_index -l IU -1 /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Quartet_RNAseq/Salmon/tmp/trimmed/D5_1_R1_trimmed.fq.gz -2 /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Quartet_RNAseq/Salmon/tmp/trimmed/D5_1_R2_trimmed.fq.gz --validateMappings --gcBias --seqBias -g /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_genomic.gtf -o /cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Quartet_RNAseq/Salmon/results/salmon/D5_1. Specifically, please provide at least the following information:; salmon = 1.10.1; Installed through bioconda; genome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_genomic.fna; transcriptome=/cpfs01/projects-HDD/cfff-e44ef5cf7aa5_HDD/dsm_23110700129/Reference/RNAseq_reference/ref/RefSeq_ref/GCF_000001405.40_GRCh38.p14_cds_from_genomic.rename.fna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/937:2819,Install,Installed,2819,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/937,1,['Install'],['Installed']
Deployability,"**salmon (bulk mode)**. **Describe the bug**; During salmon quant call, there is a segmentation fault . **To Reproduce**; Steps and data to reproduce the behavior:; * I am hardly able to recreate it myself, I ran 230 samples and 3 seg faulted. Specifically, please provide at least the following information:; * Which version of salmon was used?: 1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: quay.io docker container; * Which reference (e.g. transcriptome) was used?: A combination of the GRCh38.p13 transcripts and the repeatmasker annotation from UCSC, with the GRCh38.p13 primary assembly as decoys.; * Which read files were used?: Paired forward and reverse reads (trimmed by Trimmomatic); * Which which program options were used?:; - [--libType A, --validateMappings, --seqBias, --gcBias, --recoverOrphans, --writeUnmappedNames, -p 8, --rangeFactorizationBins 4]. **Expected behavior**; A clear and concise description of what you expected to happen. Salmon quant to produce quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { references/salmon/sel.align.gencode.v39.ucsc.rmsk.salmon.v1.9.0.sidx/ }; ### [ libType ] => { A }; ### [ mates1 ] => { SRR14506785_output_forward_paired.fq.gz }; ### [ mates2 ] => { SRR14506785_output_reverse_paired.fq.gz }; ### [ threads ] => { 8 }; ### [ validateMappings ] => { }; ##",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/876:371,install,installed,371,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/876,1,['install'],['installed']
Deployability,"---------------------------------------------------------------; Killed. After that, I stopped experimenting and used the original code with only 6 threads. . salmon index -t gentrome.fa.gz -d decoys.txt -p 6 -i salmon_index --gencode. This seemed to be working fine and got to Round 0 without any problems.; It created the ""twopaco_tmp"" directory about 5 minutes after starting and created a ""bifurcations.bin"" inside this directory. However, 4 hours have passed, and neither the file nor the directory have any new modifications (and the file is still a staggering 0 bytes large). I also read that this will take quite a lot of memory, but there should be some TB left on the hard drive. I created a 21 GiB swap partition which works fine (I've already seen it at 60%, so it is active and recognized and everything despite being on another physical hard drive ; (the 1. hard drive has a dual installation of win 10 and ubuntu 20.4 and the swap from the installation (2 GiB, because I thought that would be enough at the time and tried to save some space ^^) and the 2. hard drive has a swap partition of 20 GiB (with the highest priority of all swaps), which results in a total of 21.4 GiB in the System Monitor Resources Tab). . The system is still responding, and the System Monitor seems to be working fine (salmon is an active process using 12% CPU, 6.9 GiB memory, 13.5 GiB Disk read total, N/A Disk write total, Disk read 1.2 MiB/s (sometimes 1.1 or 1.3), Disk write N/A, Priority normal); and the Resources Tab shows that ; * out of 8 available CPUs, one is working at 100% (the others 5% at max) and ; * Memory 99.3% (which is only 7.7 GiB); * swap 9.5% (which is only 2 GiB of 21.4 GiB available). So here are (finally) my questions:. 1. How can I get Salmon to use the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ""visible"" happening during Round0?; 3. How can I see or check if it is still working (and it might b",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/643:3521,install,installation,3521,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643,1,['install'],['installation']
Deployability,"-----------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-11-30 09:36:58.680] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2023-11-30 09:36:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:4879,release,releases,4879,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,"----------------; size = 3781978516; Number of ones: 37303069; Number of ones per inventory item: 512; Inventory entries filled: 72858; -----------------------------------------; | Loading contig boundaries | Time = 5.1701 s; -----------------------------------------; size = 3781978516; -----------------------------------------; | Loading sequence | Time = 1.3226 s; -----------------------------------------; size = 2662886446; -----------------------------------------; | Loading positions | Time = 18.788 s; -----------------------------------------; size = 3537474813; -----------------------------------------; | Loading reference sequence | Time = 1.6833 s; -----------------------------------------; -----------------------------------------; | Loading reference accumulative lengths | Time = 3.3385 ms; -----------------------------------------. Segmentation fault (core dumped); ```. Output when the flag is off and the process finishes without the seg fault:; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /share/genomes/human/hg38/gencode_v43/primary_comprehensive/SalmonIndex }; ### [ libType ] => { A }; ### [ mates1 ] => { GSM7099349.R1.fastq }; ### [ mates2 ] => { GSM7099349.R2.fastq }; ### [ output ] => { salmon_out }; ### [ threads ] => { 1 }; Logs will be written to salmon_out/logs; [2023-11-30 09:36:58.680] [jointLog] [info] setting maxHashResizeThreads to 1; [2023-11-30 09:36:58.680] [jointLog] [info] Fragment incompatibility prior below t",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/902:4691,UPGRADE,UPGRADE,4691,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/902,1,['UPGRADE'],['UPGRADE']
Deployability,"--77----77A-7--7-A7-7---7-A-A7<F-777-77-A---A<A----77--77------------7------. * Which which program options were used?; One can download the data and results tarball; [bcNotFound-2018-07-19.tar.gz](https://github.com/COMBINE-lab/salmon/files/2211985/bcNotFound-2018-07-19.tar.gz).; First, I indexed the reference using:; `salmon index -k 31 -t transposon_sequence_set.fa -i index`; Then, I ran Alevin using the following command:; `salmon alevin -l ISR -1 SRR6327122_1.fastq.gz -2 SRR6327122_2.fastq.gz --chromium -i index -p 2 -o alevin_output --tgMap transposon_sequence_set.fa.tsv --whitelist cell_barcode_seq.txt --dumpCsvCounts`. **Expected behavior**; A clear and concise description of what you expected to happen.; The count matrix be saved when Alevin is done. **Screenshots**; The full output messages are:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { SRR6327122_1.fastq.gz }; ### [ mates2 ] => { SRR6327122_2.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { index }; ### [ threads ] => { 2 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { transposon_sequence_set.fa.tsv }; ### [ whitelist ] => { cell_barcode_seq.txt }; ### [ dumpCsvCounts ] => { }. [2018-07-19 18:24:03.053] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-07-19 18:24:03.059] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 87 Million barcodes. [2018-07-19 18:26:13.307] [alevinLog] [info] Done barcode density calculation.; [2018-07-19 18:26:13.307] [alevinLog] [info] # Barcodes Used: 86885223 / 87959276.; [2018-07",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/253:3365,release,releases,3365,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/253,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,"-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-11-04 16:49:44.699] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent headers . . . done; Populating targets from aln = ""combined_BC01_aligned.bam"", fasta = ""/scratch/users/k19022845/refgenome/gencode",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/898:1349,update,updates,1349,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898,1,['update'],['updates']
Deployability,"-alignment/ https://salmon.readthedocs.io/en/latest/salmon.html#what-s-this-libtype):; ```; grep ""^>"" GRCh38.primary_assembly.genome.fa | cut -d "" "" -f 1 > GRCh38.decoys.txt; sed -i 's/>//g' GRCh38.decoys.txt; cat gencode.v36.transcripts.fa GRCh38.primary_assembly.genome.fa | gzip > GRCh38.gentrome.fa.gz; salmon index -t GRCh38.gentrome.fa.gz -d GRCh38.decoys.txt -p 12 -i salmon_index --gencode; ```; 4. Run salmon ; ```; IDX=""/scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/salmon_index/""; for fn in /scratch/scratch/skgtjzw/workspace/middle_aged_microglia/salmon_quantification_SAF/SRR{2557119..2557121}; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i $IDX -l A -1 ${fn}_1.fastq.gz -2 ${fn}_2.fastq.gz -p 8 \; --validateMappings \; -o quants/${samp}_quant \; --gcBias; done; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; 1.3.0 salmon was installed by miniconda, then updated to 1.4.0 via miniconda ; * Which reference (e.g. transcriptome) was used?; Gencode_human/release_36/gencode.v36.transcripts.fa.gz; * Which read files were used?; fastq.gz file with 150 paired reads ; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; On a cluster with Ubuntu Linux. **Additional context**; I was running the default method of building index with only the gencode.v36.transcripts.fa.gz, and the mapping rate for my fastq files were 42-55%, which i think is quite low (based on what i read, it is expected to be around 70%). Then, I thought i might give a go with building decoy-aware transcriptome index, and this did not go well as i presented above. . I ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/603:3404,install,installed,3404,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/603,1,['install'],['installed']
Deployability,"-cell RNA-seq experiment because map to introns. <img width=""400"" alt=""image"" src=""https://user-images.githubusercontent.com/5101911/69015737-65272f80-0997-11ea-87ab-9237e105622a.png"">. ### Loss of reads by using exonic references. Both Alevin and Cell ranger count only reads aligned to exons by default, thus losing some 35% of the reads. Large intronic proportions are a general feature of single-cell RNA-seq, for example the 10X PBMCs has ~20-25%, and nuclear data sets have 46% intronic reads in [[source](https://kb.10xgenomics.com/hc/en-us/articles/360000087552-Why-do-I-have-a-high-percentage-of-reads-mapping-to-intronic-regions-)]. . **So the best way to increase library 'quality' / counting statistics (which is my prime concern) seem to be including reads mapped to introns – leading to hopefully a large increase in UMIs.**. ### Considerations: separate, additive signals. Since exons and introns contain different biological signal, ideally I would like to count as:. 1. Exon only 		(current)* ; 2. Intron only 		(as control / comparison to 1.) ; 3. Exon + intron 	(finally, for boosting statistics) . Where 2 would be a complementary set to 1, so that no read is counted as both intron and exon, and thus 1+2 =~ 3. . \* _I am not sure what happens to a read that maps to an exon/intron junction using the default Alevin and 10x Cell Ranger pipelines, but I assume both count it as exonic._. ### Solution by counting programs. - There is a way to build a ""pre-mRNA"" reference for 10X Cell ranger as described [here](https://support.10xgenomics.com/single-cell-gene-expression/software/pipelines/latest/advanced/references#premrna). . - I wondered if Alevin can be adapted to this aim? I guess besides all complete transcript models, you need to add one more: the pre-mRNA. (While some complexity can theoretically arise by the serial nature of splicing, I would ignore it at first). Would that be a good idea, or the advantage of Alevin would evaporate if we include introns?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/450:1504,pipeline,pipelines,1504,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/450,2,['pipeline'],['pipelines']
Deployability,"-mers; Elapsed time: 0.00677775s. [2020-04-07 21:12:14.596] [jointLog] [info] Replaced 0 non-ATCG nucleotides; [2020-04-07 21:12:14.596] [jointLog] [info] Clipped poly-A tails from 0 transcripts; [2020-04-07 21:12:14.599] [jointLog] [info] Building rank-select dictionary and saving to disk; [2020-04-07 21:12:14.599] [jointLog] [info] done; Elapsed time: 5.7764e-05s; [2020-04-07 21:12:14.606] [jointLog] [info] Writing sequence data to file . . . ; [2020-04-07 21:12:14.607] [jointLog] [info] done; Elapsed time: 0.000590993s; [2020-04-07 21:12:14.614] [jointLog] [info] Building 32-bit suffix array (length of generalized text is 28,577); [2020-04-07 21:12:14.616] [jointLog] [info] Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 0.000716831s; done; Elapsed time: 0.0107059s; ```; Specifically, please provide at least the following information:. * Which version of salmon was used? 1.1.0, 1.0.0 and 0.14.1; * How was salmon installed (compiled, downloaded executable, through bioconda)? GitHub binary; * Which reference (e.g. transcriptome) was used? sample data from GitHub release; * Which read files were used? none; * Which which program options were used? -k 31 -i index -t sample_data/transcripts.fasta. **Expected behavior**; A clear and concise description of what you expected to happen.; I expected salmon 1.1.0 to run without a core-dump and produce similar results to 0.14.1. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] Ubuntu 18.04.4 LTS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; Linux firefly 5.3.0-40-generic #32~18.04.1-Ubuntu SMP Mon Feb 3 14:05:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. **Additional context**; Using ""bcbio-nextgen"", with ""salmon 1.1.0"" installed by Anaconda: Removed this version because of core-dumps",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/500:2371,install,installed,2371,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/500,1,['install'],['installed']
Deployability,". thaliana). For the entire analysis, I am using the nf-core/rnaseq pipeline (default parameters) which gives me Alignment (STAR) based counts from Salmon at the end and additional counts from FeatureCounts. The whole pipeline runs without problems and the mapping looks good. When I compare the number of reads between Salmon and FeatureCounts, the results are pretty much the same for the nucleus, but for the chloroplast they differ dramatically (e.g. psbI or ATCG00080: Salmon: 24; FeatureCounts: 9277). Looking at the mapping, I would say that FeatureCounts is definitely closer to reality here. ; When I dig deeper, it seems that the genes with the biggest difference between the two analyses are very small genes (e.g. psbI is only 111bp) or tRNAs (which should be removed by the prep method; these would be excluded from the analysis anyway). ; I have now tried several things: I used the nf-core/rnaseq pipeline, skipping the alignment part (--skip_alignment) and using Salmon as a pseudo-aligner (--pseudo_aligner: salmon), which gave results for the chloroplast reads that are quite close to the alignment-based determination by Salmon (e.g. psbI: 372).; I also tried using the pseudo-alignment without the pipeline (indexing: salmon index -t input.fa -r transcripts_index -k 31 pseudomapping: salmon quant -i transcripts_index -l A -1 sequencingdata_R1.fastq.gz -2 sequencingdata_R2.fastq.gz --validate mapping - o transcripts.quant). The result was that the chloroplast numbers were now roughly between the salmon counts from the pipeline and the counts from the pipeline with FeatureCounts. I skipped the trimming part here, so differences are to be expected, but they still seem very high (e.g. psbI 2677).; First, I have no idea where the difference between counts with and without pipelines comes from. I tried to find out what parameters the pipeline uses for Salmon, but I didn't find anything special there.; And secondly, I wonder if Salmon has somehow problems with the chloropl",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/798:1052,pipeline,pipeline,1052,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798,1,['pipeline'],['pipeline']
Deployability,".fq.gz \; > --dropseq \; > -i mm10SalmonIndex \; > -p 1 \; > -o SRR1853178_out \; > --tgMap mm10tgMap; Version Server Response: Not Found; Logs will be written to SRR1853178_out/logs; [2021-11-14 21:21:46.623] [jointLog] [info] setting maxHashResizeThreads to 1; [2021-11-14 21:21:46.623] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-11-14 21:21:46.623] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-11-14 21:21:46.623] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-11-14 21:21:46.623] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-11-14 21:21:46.623] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-11-14 21:21:46.623] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2021-11-14 21:21:46.821] [alevinLog] [info] Found 116507 transcripts(+66 decoys, +39 short and +0 duplicate names in the index); [2021-11-14 21:21:46.932] [alevinLog] [info] Filled with 116545 txp to gene entries ; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Can't find gene mapping for : ENSMUST00000196221.1 w/ index 0; [2021-11-14 21:21:46.937] [alevinLog] [error] ERROR: Txp to Gene Map not found for 18446744073709551551 transcripts. Exiting; ```. I had also tried building the index myself using the Gencode mm10 transcripts downloaded [here](https://www.gencodegenes.org/mouse/), but it seems unclear how one could make the `tgMap` from that exact same genome version/patch. Is there a recommended way to extract `tgMap` from, for example, the GTF file provided on that same webpage?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/722:2697,patch,patch,2697,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/722,1,['patch'],['patch']
Deployability,".tr; anscripts -p 1 -l ISR -1 ${FILE1} -2 ${FILE2} -o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}; **** Job ends ****; Wed Mar 8 11:53:40 EST 2017; ```. as well as the `gdb` output for it's core dump file:. ```bash; $ gdb core.1629; GNU gdb (GDB) Red Hat Enterprise Linux (7.2-60.el6_4.1); Copyright (C) 2010 Free Software Foundation, Inc.; License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>; This is free software: you are free to change and redistribute it.; There is NO WARRANTY, to the extent permitted by law. Type ""show copying""; and ""show warranty"" for details.; This GDB was configured as ""x86_64-redhat-linux-gnu"".; For bug reporting instructions, please see:; <http://www.gnu.org/software/gdb/bugs/>...; Missing separate debuginfo for the main executable file; Try: yum --disablerepo='*' --enablerepo='*-debug*' install /usr/lib/debug/.build-id/f2/3c99ed06abf17dd0ee1073eac092487ac62314; [New Thread 1629]; [New Thread 1707]; [New Thread 1708]; [New Thread 1709]; Core was generated by `/dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/b'.; Program terminated with signal 6, Aborted.; #0 0x00000037e2032625 in ?? (); ""/dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/core.1629"" is a core file.; Please specify an executable to debug.; (gdb) q; ```. and the SGE info:. ```bash; $ qacct -j 9987283 -t 2; ==============================================================; qname shared.q; hostname compute-060.cm.cluster; group lieber_jaffe; owner lcollado; project NONE; department defaultdepartment; jobname step6-salmon_test2.gsk_phaseII; jobnumber 9987283; taskid 2; account sge; priority 0; qsub_time Wed Mar 8 11:53:12 2017; start_time Wed Mar 8 11:53:16 2017; end_time Wed Mar 8 11:53:40 2017; granted_pe local; slots 1; failed 0; exit_status 0; ru_wallclock 24; ru_utime 0.302; ru_stime 21.395; ru_maxrss 533908; ru_ixrss 0; ru_ismrss 0; ru_idrss 0; ru_isrss 0; ru_minflt 22035; ru_majflt 285; ru_nswap 0; ru_inbloc",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:31027,pipeline,pipeline,31027,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,1,['pipeline'],['pipeline']
Deployability,"/Homo_sapiens.GRCh38.dna.primary_assembly.fa > \; /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa. * salmon index; /home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon index \; --transcripts /cold_data/zhaojiaxin/ensembl/salmon/salmon_gentrome.fa \; --kmerLen 31 \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --decoy /cold_data/zhaojiaxin/ensembl/salmon/decoys.txt \; --keepDuplicates \; --threads 50. */home/zhaojiaxin/anaconda3/envs/salmon/bin/salmon quant \; --libType A \; --index /cold_data/zhaojiaxin/ensembl/salmon/transcripts_index \; --unmatedReads /cold_data/zhaojiaxin/long_read/GRM/upstream-analysis/trim_polya/GRM/ONT_GRM_R01/ONT_GRM_R01.full_length.trim_polyA.filter.fasta \; --output /cold_data/zhaojiaxin/ensembl/salmon/transcripts_quant \; --seqBias \; --gcBias \; --posBias \; --geneMap /hot_warm_data/wangduo/reference/Homo_sapiens.GRCh38.109.gtf \; --auxDir aux_info \; --incompatPrior 0 \; --threads 50. **Expected behavior**; I want the genes quantization results to appear normally in the file quant.genes.sf. **Desktop (please complete the following information):**; - OS : Ubuntu Linux; - Version ; uname -a：; Linux 1302ubuntu 6.8.0-40-generic #40~22.04.3-Ubuntu SMP PREEMPT_DYNAMIC Tue Jul 30 17:30:19 UTC 2 x86_64 x86_64 x86_64 GNU/Linux. lsb_release -a：; No LSB modules are available.; Distributor ID: Ubuntu; Description: Ubuntu 22.04.4 LTS; Release: 22.04; Codename: jammy. **Additional context**; I've already found a similar question, but it didn't solve my problem very well, the link to this question is as follows: https://github.com/COMBINE-lab/salmon/issues/569. As I understand it, one of the two questioners solved the problem by updating the salmon version, the other by tximport solved the problem. But first of all my salmon version is the latest 1.10.3, and secondly, I understand that tximport is an R package that handles salmon output files, which may not solve my problem. Looking forward to your professional reply and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/962:2671,Release,Release,2671,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/962,1,['Release'],['Release']
Deployability,"/anndata.py in __getitem__(self, index); 1048 """"""Returns a sliced view of the object.""""""; 1049 oidx, vidx = self._normalize_indices(index); -> 1050 return AnnData(self, oidx=oidx, vidx=vidx, asview=True); 1051 ; 1052 def _remove_unused_categories(self, df_full, df_sub, uns):. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in __init__(self, X, obs, var, uns, obsm, varm, layers, raw, dtype, shape, filename, filemode, asview, obsp, varp, oidx, vidx); 280 if not isinstance(X, AnnData):; 281 raise ValueError(""`X` has to be an AnnData object.""); --> 282 self._init_as_view(X, oidx, vidx); 283 else:; 284 self._init_as_actual(. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/site-packages/anndata/_core/anndata.py in _init_as_view(self, adata_ref, oidx, vidx); 328 self._varp = adata_ref.varp._view(self, vidx); 329 # hackish solution here, no copy should be necessary; --> 330 uns_new = deepcopy(self._adata_ref._uns); 331 # need to do the slicing before setting the updated self._n_obs, self._n_vars; 332 self._n_obs = self._adata_ref.n_obs # use the original n_obs here. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 148 copier = _deepcopy_dispatch.get(cls); 149 if copier:; --> 150 y = copier(x, memo); 151 else:; 152 try:. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in _deepcopy_dict(x, memo, deepcopy); 239 memo[id(x)] = y; 240 for key, value in x.items():; --> 241 y[deepcopy(key, memo)] = deepcopy(value, memo); 242 return y; 243 d[dict] = _deepcopy_dict. /primary/projects/mnp/tools/anaconda3/envs/alevin_env/lib/python3.7/copy.py in deepcopy(x, memo, _nil); 159 copier = getattr(x, ""__deepcopy__"", None); 160 if copier:; --> 161 y = copier(memo); 162 else:; 163 reductor = dispatch_table.get(cls). SystemError: <built-in method __deepcopy__ of numpy.ndarray object at 0x2aab0b27cc60> returned a result with an error set",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/526:6842,update,updated,6842,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/526,1,['update'],['updated']
Deployability,"/bin/salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference; Error, cmd: java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to/trinity/2.6.6/x86_64/util/support_scripts/ExitTester.jar 0 died with ret 1536 at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2581.; 	main::process_cmd('java -Xmx64m -XX:ParallelGCThreads=2 -jar /path/to...') called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2666; 	eval {...} called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 2665; 	main::test_java_failure_capture() called at /path/to/bin/core/../..//trinity/2.6.6/x86_64/bin/Trinity line 1159. I get similar error while just checking for java version; $ java -version. Error: dl failure on line 893; Error: failed /tsl/software/testing/java/8u131/x86_64/jre/lib/amd64/server/libjvm.so, because /tsl/software/testing/bin/core/../..//salmon/0.11.3/x86_64/lib/libm.so.6: symbol __get_cpu_features, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used? 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)? downloaded executables; * Which reference (e.g. transcriptome) was used? no reference; * Which read files were used? fastq; * Which program options were used? Trinity options. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] CentOS; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/290:2095,install,installed,2095,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/290,1,['install'],['installed']
Deployability,"/duplicate_clusters.tsv"",; ""{out_data}/ref/idx/info.json"",; ""{out_data}/ref/idx/mphf.bin"",; ""{out_data}/ref/idx/pos.bin"",; ""{out_data}/ref/idx/pre_indexing.log"",; ""{out_data}/ref/idx/rank.bin"",; ""{out_data}/ref/idx/refAccumLengths.bin"",; ""{out_data}/ref/idx/ref_indexing.log"",; ""{out_data}/ref/idx/reflengths.bin"",; ""{out_data}/ref/idx/refseq.bin"",; ""{out_data}/ref/idx/seq.bin"",; ""{out_data}/ref/idx/versionInfo.json""; params:; job_name = ""build_idx"",; memory = ""select[mem>64] rusage[mem=64]"",; out_dir = ""{out_data}/ref/idx""; log:; ""logs/build_idx.out""; threads:; 16; shell:; """"""; salmon index \; -t {input.fasta} \; -i {params.out_dir} \; -p {threads}; """"""; ```. Running this rule does generate all the expected output files, including `versionInfo.json`. My pipeline crashes during the next step, where I am attempting to map reads. Again, I followed the code as outlined by the alevin-fry tutorial (tweaked slightly) and my snakemake rule is as follows (apologies that I am still using the deprecated --end, --barcodeLength and --umiLength options; my intention was to update those once I had my pipeline working, but I've gotten stuck on the index build):. ```; rule map_reads: ; # map reads and generate a RAD (Reduced Alignment Data) file; input:; R1 = ""{out_data}/preprocessed_fastqs/{sample}_R1.fastq.gz"",; R2 = ""{out_data}/preprocessed_fastqs/{sample}_R2.fastq.gz"",; idx = rules.build_idx.output,; tgmap = ""{out_data}/ref/transcriptome/transcriptome_splici_fl86_t2g.tsv""; output:; ""{out_data}/{sample}/map/alevin/alevin.log"",; ""{out_data}/{sample}/map/aux_info/meta_info.json"",; ""{out_data}/{sample}/map/cmd_info.json"",; ""{out_data}/{sample}/map/libParams"",; ""{out_data}/{sample}/map/logs/salmon_quant.log"",; ""{out_data}/{sample}/map/map.rad"",; ""{out_data}/{sample}/map/unmapped_bc_count.bin"",; params:; job_name = ""map_reads"",; memory = ""select[mem>64] rusage[mem=64]"",; library_type = ""ISR"",; end = 5,; barcodeLength = 16,; umiLength = 8,; out_dir = ""{out_data}/{sample}/map""; log:; ""lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/713:3240,update,update,3240,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/713,2,"['pipeline', 'update']","['pipeline', 'update']"
Deployability,"/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:1788,install,install,1788,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['install'],['install']
Deployability,"000.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-CGAAGTTG_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-GAGCACGC_lane-004-chunk-002.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-001-chunk-001.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-002-chunk-000.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-003-chunk-003.fastq.gz; ./fastqs/flowcell1/read-I1_si-TTCGTGAA_lane-004-chunk-002.fastq.gz]; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-12-05 15:10:07.252] [alevinLog] [info] A custom protocol (END, BC length, UMI length) = (5, 14, 5) is being used. Updating UMI k-mer length accordingly.; Logs will be written to ./fastq/test/logs; ### alevin (dscRNA-seq quantification) v0.11.3; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ gemcode ] => { }; ### [ index ] => { ../transcripts_index_salmon/ }; ### [ threads ] => { 8 }; ### [ output ] => { ./fastq/test/ }; ### [ tgMap ] => { ../hg_transcriptome/tx2tx.tsv }; ### [ end ] => { 5 }; ### [ umiLength ] => { 5 }; ### [ barcodeLength ] => { 14 }; ### [ dumpCsvCounts ] => { }; ### [ dumpFeatures ] => { }; ### [ mates1 ] => { /tmp/tmp.lLLibfwH4G/p1.fa }; ### [ mates2 ] => { /tmp/tmp.lLLibfwH4G/p2.fa }; ### [ unmatedReads ] => { ./fastqs/flowcell1/read-I1_si-ACTTCACT_lane-001-chunk-001.fastq.gz ./fastqs/flowcell1/read-I1_si-ACT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:3452,upgrade,upgrade,3452,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,1,['upgrade'],['upgrade']
Deployability,"1-23 11:07:56.200] [alevinLog] [info] Total **49.0191% reads will be thrown away** because of noisy Cellular barcodes.; [2021-01-23 11:07:57.144] [alevinLog] [info] Done populating Z matrix; [2021-01-23 11:07:57.172] [alevinLog] [info] Total 35787 CB got sequence corrected; [2021-01-23 11:07:57.177] [alevinLog] [info] Done indexing Barcodes; [2021-01-23 11:07:57.177] [alevinLog] [info] Total Unique barcodes found: 3896665; [2021-01-23 11:07:57.177] [alevinLog] [info] Used Barcodes except Whitelist: 35219; [2021-01-23 11:07:57.360] [alevinLog] [info] Done with Barcode Processing; Moving to Quantify; .... > {; ""total_reads"": 188934609,; ""reads_with_N"": 0,; ""noisy_cb_reads"": 92614076,; ""noisy_umi_reads"": 17028,; ""used_reads"": 96303505,; ""mapping_rate"": 19.451325087824434,; ""reads_in_eqclasses"": 36750285,; ""total_cbs"": 3896665,; ""used_cbs"": 47725,; ""initial_whitelist"": 11511,; ""low_conf_cbs"": 995,; ""num_features"": 5,; ""no_read_mapping_cbs"": 70,; ""final_num_cbs"": 8324,; ""deduplicated_umis"": 19613485,; ""mean_umis_per_cell"": 2356,; ""mean_genes_per_cell"": 1120; }. By the way, the cellranger result shows that reads map to Transcriptome is low, but reads mapped to Genome is 85%. ![image](https://user-images.githubusercontent.com/29651981/106248111-7df1cd00-624b-11eb-9cde-4c610047f193.png). ![image](https://user-images.githubusercontent.com/29651981/106248036-60246800-624b-11eb-9221-4d8a1f08d9a3.png). **Desktop (please complete the following information):**; - OS: CentOS 7; - Version; `uname -a`; Linux taxus 3.10.0-327.el7.x86_64 #1 SMP Thu Nov 19 22:10:57 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux; `lsb_release -a`; LSB Version: :core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.2.1511 (Core); Release: 7.2.1511; Codename: Core. Thanks for considering my questions. Best Regards,; Matthew Hawking",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/620:10327,release,release,10327,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/620,2,"['Release', 'release']","['Release', 'release']"
Deployability,"13:52:29.407] [jointLog] [info] computeBiasFeatures( {[/labseq/Genomes/introns/hg19.introns.fasta] , /labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/bias_feats.txt, 1, 24). readFile: /labseq/Genomes/introns/hg19.introns.fasta, ; file /labseq/Genomes/introns/hg19.introns.fasta: ; processed 659300 transcripts (4515) transcripts/snscripts/sipts/s transcripts/sts/s; [2016-03-28 13:54:55.658] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 650000 transcriptsElapsed time: 128.964s. Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 5.40482s; Writing sequence data to file . . . done; Elapsed time: 40.1748s; [info] Building 64-bit suffix array (length of generalized text is 4128215243 ); Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 358.792s; done; Elapsed time: 3065.92s; processed 3810000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::clear_to_size(google::dense_hashtable<Value, Key, HashFcn, ExtractKey, SetKey, EqualKey, Alloc>::size_type) [with Value = std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> >; Key = long unsigned int; HashFcn = rapmap::utils::KmerKeyHasher; ExtractKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SelectKey; SetKey = google::dense_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, google::libc_allocator_with_realloc<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > >::SetKey; EqualKey = std::equal_to<lo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/53:1907,install,install,1907,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53,1,['install'],['install']
Deployability,"1600 | max rel diff. = 0.073492; [2023-02-22 16:42:26.203] [jointLog] [info] iteration = 1700 | max rel diff. = 0.201421; [2023-02-22 16:42:29.533] [jointLog] [info] iteration = 1800 | max rel diff. = 0.127739; [2023-02-22 16:42:32.868] [jointLog] [info] iteration = 1900 | max rel diff. = 0.042789; [2023-02-22 16:42:36.215] [jointLog] [info] iteration = 2000 | max rel diff. = 0.0303234; [2023-02-22 16:42:39.544] [jointLog] [info] iteration = 2100 | max rel diff. = 0.0413186; [2023-02-22 16:42:40.309] [jointLog] [info] iteration = 2124 | max rel diff. = 0.00863591; [2023-02-22 16:42:40.317] [jointLog] [info] Finished optimizer; [2023-02-22 16:42:40.317] [jointLog] [info] writing output . [2023-02-22 16:42:40.556] [jointLog] [info] Computing gene-level abundance estimates; [2023-02-22 16:45:41.884] [jointLog] [info] There were 246511 transcripts mapping to 61552 genes; [2023-02-22 16:45:41.884] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2023-02-22 16:45:42.113] [jointLog] [info] Aggregating expressions to gene level; [2023-02-22 16:45:42.215] [jointLog] [info] done; ```. - Unsuccessful log:. ```; Version Info: This is the most recent version of salmon.; ### salmon (selective-alignment-based) v1.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ geneMap ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/Homo_sapiens.GRCh38.106.gtf }; ### [ threads ] => { 6 }; ### [ libType ] => { ISR }; ### [ index ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/salmon }; ### [ mates1 ] => { /home/cfos/Documents/Collaboration/Ece/2023_Bulk/work/5d/a1220b107b2450d88e8e92fa0f3c06/ACV_REP2_1_val_1.fq.gz }; ### [ mates2",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:7267,release,release,7267,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['release'],['release']
Deployability,"2018-09-11 16:34:00.784] [jointLog] [info] There are 2 libraries.; [2018-09-11 16:34:00.868] [jointLog] [info] Loading Quasi index; [2018-09-11 16:34:00.876] [jointLog] [info] Loading 32-bit quasi index; [2018-09-11 16:34:00.876] [stderrLog] [info] Loading Suffix Array ; [2018-09-11 16:34:18.777] [stderrLog] [info] Loading Transcript Info ; [2018-09-11 16:34:27.531] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-09-11 16:34:27.735] [stderrLog] [info] There were 97465 set bits in the bit array; [2018-09-11 16:34:27.776] [stderrLog] [info] Computing transcript lengths; [2018-09-11 16:34:27.776] [stderrLog] [info] Waiting to finish loading hash; [2018-09-11 16:34:29.276] [stderrLog] [info] Done loading index; [2018-09-11 16:34:29.276] [jointLog] [info] done; [2018-09-11 16:34:29.276] [jointLog] [info] Index contained 97465 targets. [2018-09-11 16:34:30.109] [jointLog] [info] Computed 0 rich equivalence classes for further processing; [2018-09-11 16:34:30.109] [jointLog] [info] Counted 0 total reads in the equivalence classes ; [2018-09-11 16:34:30.116] [jointLog] [warning] Only 0 fragments were mapped, but the number of burn-in fragments was set to 5000000.; The effective lengths have been computed using the observed mappings. [2018-09-11 16:34:30.116] [jointLog] [warning] Something seems to be wrong with the calculation of the mapping rate. The recorded ratio is likely wrong. Please file this as a bug report. [2018-09-11 16:34:30.116] [jointLog] [info] Mapping rate = 0%. [2018-09-11 16:34:30.116] [jointLog] [info] finished quantifyLibrary(); [2018-09-11 16:34:30.156] [alevinLog] [info] Starting optimizer; ```. **Desktop (please complete the following information):**; - OS: CentOS; - x86_64 x86_64 x86_64 GNU/Linux; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	CentOS; Description:	CentOS release 6.9 (Final); Release:	6.9; Codename:	Final",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:12815,release,release,12815,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,2,"['Release', 'release']","['Release', 'release']"
Deployability,"2g.tsv"",; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R1_alldata.fastq.gz, Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz]"",; ""expected_format"": ""ISR"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 351484244,; ""num_assigned_fragments"": 351484244,; ""num_frags_with_concordant_consistent_mappings"": 0,; ""num_frags_with_inconsistent_or_orphan_mappings"": 1727876200,; ""strand_mapping_bias"": 0.0,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 0,; ""SR"": 0,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. For the selective alignment - Salmon quant. ```console; cat cmd_info.json ; {; ""salmon_version"": ""1.4.0"",; ""index"": ""/home/egonie/dato-activo/reference.genomes_kike/GRCh38/gencode/transcriptome_selective_alignment_index_salmon"",; ""libType"": ""ISR"",; ""threads"": ""32"",; ""unmatedReads"": ""Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz"",; ""output"": ""salmon_quant"",; ""validateMappings"": [],; ""writeMappings"": [],; ""auxDir"": ""aux_info""; }. cat lib_format_counts.json ; {; ""read_files"": ""[ Parent_NGSC3_DI_PBMC_R2_alldata.fastq.gz ]"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 387129150,; ""num_assigned_fragments"": 387129150,; ""num_frags_with_concordant_consistent_mappings"": 399519815,; ""num_frags_with_inconsistent_or_orphan_mappings"": 0,; ""strand_mapping_bias"": 0.9389489029474045,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 375128692,; ""SR"": 24391123,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. Specifically, please provide at least the following information:. * Which version of salmon was used?; 1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Download executable; * Which reference (e.g. transcriptome) was used?; GENCODE hg38; * Which read files were used?; 10x scRNA-seq files. Any insight about why are these differences in the mapped fragments happening would be much appreciated. . Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/702:5135,install,installed,5135,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/702,1,['install'],['installed']
Deployability,"3.32 reads per unique molecule. So it seems like the duplication rate might be closer to the SevenBridges estimate than the Alevin estimate. The Alevin documentation seems to suggest that cell/transcript/UMI triplets are being used for UMI collapsing (""identify potential PCR/sequencing errors in the UMIs, and performs hybrid de-duplication while accounting for UMI collisions""), so I'm at a loss as to why the difference is this large. I'm not too worried about numbers being different, but the UMI proportion is a concern to me, because sequencing is expensive, and it'd be good to have an idea of whether we need to further improve our library prep (which would certainly be the case for 9X duplication, but less important with 3-5X duplication). Is anyone able to explain how the UMI deduplication is applied in Salmon Alevin, or why it might be different from other analysis platforms?. * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? Binary download from github; * Which reference (e.g. transcriptome) was used? Gencode Human v42; * Which read files were used? NovaSeq 6000 S2; * Which program options were used?. ```; salmon alevin -l ISR \; -1 $(ls demultiplexed/squished_${machineID}*_R1_001.fastq.gz | sort) \; -2 $(ls demultiplexed/${machineID}*_R2_001.fastq.gz | sort) \; --mrna ${indexDir}/mt_genes.txt --rrna ${indexDir}/rRNA_genes.txt \; -i ${indexDir}/${indexName} --expectCells ${expectCellCount} --whitelist goodSampleTagCells.txt \; -p 10 -o salmon_1.9_cbc_whitelist_${projectID}_combined --tgMap ${indexDir}/txp2gene_${targetName}.txt \; --umi-geometry '1[28-35]' --bc-geometry '1[1-27]' --read-geometry '2[1-end]'; ```. **Expected behavior**. I would expect the Salmon Alevin PCR duplication estimate to be similar to that of SevenBridges, or my semi-manual attempt (e.g. 3-5X). **Desktop OS/Version:**. `Linux musculus 5.18.0-4-amd64 #1 SMP PREEMPT_DYNAMIC Debian 5.18.16-1 (2022-08-10) x86_64 GNU/Linu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/808:2703,install,installed,2703,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/808,1,['install'],['installed']
Deployability,"333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end, relative orientation:none, strandedness:unstranded }; [2023-11-04 16:49:44.699] [jointLog] [info] numQuantThreads = 4; parseThreads = 4; Checking that provided alignment files have consistent heade",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/898:1158,release,releases,1158,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,"4 15:34:24.274] [puff::index::jointLog] [info] Total # of numerical Contigs : 0; [2020-07-04 15:34:24.274] [puff::index::jointLog] [info]; Total # of segments we have position for : 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] total contig vec entries 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] bits per offset entry 0; [2020-07-04 15:34:24.277] [puff::index::jointLog] [info] there were 0 equivalence classes; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] # segments = 0; [2020-07-04 15:34:24.278] [puff::index::jointLog] [info] total length = 0; /var/spool/torque/mom_priv/jobs/9244742.blue101.SC: line 23: 23870 Segmentation fault /home/jl2e19/.conda/envs/SALMON/bin/salmon index -t ./gentrome.fa.gz -d ./decoys.txt -p 12 -i /scratch/jl2e19/salmon_index; mkdir: cannot create directory `/scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249': File exists; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v1.1.0; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/jl2e19/salmon_index }; ### [ libType ] => { A }; ### [ mates1 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_1.fq }; ### [ mates2 ] => { /scratch/jl2e19/rnaseq/rawdata/A2_NB_2249_2.fq }; ### [ validateMappings ] => { }; ### [ output ] => { /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/ }; Logs will be written to /scratch/jl2e19/analysed/2020_06_09/salmon/A2_NB_2249/logs; [2020-07-04 15:51:46.138] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2020-07-04 15:51:46.138] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.35.; [2020-07-04 15",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:17861,upgrade,upgrades,17861,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,1,['upgrade'],['upgrades']
Deployability,"5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and . > g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. On another tutorial, I found that I should open a bash instead while installing gcc/g++, with the instruction:. `scl enable devtoolset-7 bash`. When I run . > gcc --version; > g++ --version. By root and user, this time the proper version is recognised!. > gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and. > g++ (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. As you can see, this time the latest version is recognised. I'm quite sure the bash was open even when I rebuilt Boost... But even though I re-open the bash before cmaking Salmon, it will always complain about an outdated version, having it opened or not won't make any difference. I'm also attaching the log files generated by Salmon:. CMakeCache.txt => https://pastebin.com/shdCpDde; CMakeLists.txt => https://pastebin.com/16AeRnyL. Also, while installing Boost, I got this:. > ; > The following directory should be added to linker library paths:; > ; > /mnt/d8e73111-db5e-4011-87aa-e4d64fb8c1e9/DATA/Software/boost/boost_1_70_0/stage/lib. What could the problem be? Why can't it recognise the right version? Did I mess up with anything? Thanks in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/388:2281,install,installing,2281,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/388,1,['install'],['installing']
Deployability,"500] [jointLog] [info] Usage of --validateMappings, without --hardFilter implies use of range factorization. rangeFactorizationBins is being set to 4; [2019-05-07 14:40:36.500] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 0.2. Setting consensusSlack to 0.2.; [2019-05-07 14:40:36.500] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; [2019-05-07 14:40:36.511] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 8 Million barcodes; processed 17 Million barcodes; processed 25 Million barcodes; processed 34 Million barcodes; processed 42 Million barcodes; processed 51 Million barcodes; processed 59 Million barcodes; processed 67 Million barcodes; processed 76 Million barcodes; processed 84 Million barcodes; processed 93 Million barcodes; processed 101 Million barcodesdes; processed 109 Million barcodes; processed 118 Million barcodes; processed 126 Million barcodes; processed 134 Million barcodes; processed 143 Million barcodesodes; processed 148 Million barcodes. [2019-05-07 14:42:18.567] [alevinLog] [info] Done barcode density calculation.; [2019-05-07 14:42:18.567] [alevinLog] [info] # Barcodes Used: 147999216 / 148515763.; [2019-05-07 14:42:19.496] [alevinLog] [error] Can't find right Boundary.; Please Report this issue on github.; ```. **Desktop (please complete the following information):**; - OS: Linux; - Version . Linux ebi6-054.ebi.ac.uk 3.10.0-514.16.1.el7.x86_64 #1 SMP Fri Mar 10 13:12:32 EST 2017 x86_64 x86_64 x86_64 GNU/Linux; LSB Version:	:core-4.1-amd64:core-4.1-noarch:cxx-4.1-amd64:cxx-4.1-noarch:desktop-4.1-amd64:desktop-4.1-noarch:languages-4.1-amd64:languages-4.1-noarch:printing-4.1-amd64:printing-4.1-noarch; Distributor ID:	RedHatEnterpriseServer; Description:	Red Hat Enterprise Linux Server release 7.3 (Maipo); Release:	7.3; Codename:	Maipo. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/362:4268,release,release,4268,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/362,2,"['Release', 'release']","['Release', 'release']"
Deployability,"7-24 13:33:30.175] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; basename: extra operand ‘lightreceptor-1_S114_L005_R1_001.qc.fq.gz’; Try 'basename --help' for more information.; Version Info: This is the most recent version of salmon.; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { abalone_index }; ### [ libType ] => { A }; ### [ mates1 ] => { .R1_001.qc.fq.gz }; ### [ mates2 ] => { .R2_001.qc.fq.gz }; ### [ output ] => { .quant }; Logs will be written to .quant/logs; [2019-07-24 13:33:30.269] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2019-07-24 13:33:30.269] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. Exception : [Error: The index version file abalone_index/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2019-07-24 13:33:30.269] [jointLog] [info] parsing read library format; [2019-07-24 13:33:30.269] [jointLog] [info] There is 1 library.; /var/spool/slurmd/job12930414/slurm_script: line 14: --validateMappings: command not found; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/408:17760,release,release,17760,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/408,1,['release'],['release']
Deployability,"95% identity. Then, I took the complement of these sequences (all the left over intergenic stuff) and designated these as decoys. . I indexed the transcriptome with:; ```; rule index_transcriptome:; input:; seqs=ancient(""outputs/gtdb_genomes_salmon_ref/{gtdb_species}.fa""),; decoys=ancient(""outputs/gtdb_genomes_intergenic_comb/{gtdb_species}_clustered_intergenic_seq_names.txt""); output: ""outputs/gtdb_genomes_salmon_index/{gtdb_species}/info.json""; threads: 1; params: index_dir = lambda wildcards: ""outputs/gtdb_genomes_salmon_index/"" + wildcards.gtdb_species; resources:; mem_mb=16000,; tmpdir=TMPDIR; conda: ""envs/salmon.yml""; benchmark:""benchmarks/salmon_index_{gtdb_species}.txt""; shell:'''; salmon index -t {input.seqs} -i {params.index_dir} --decoys {input.decoys} -k 31; '''; ```. I've attached my reference transcriptome and my file of decoy names at the bottom of this issue. Details -- . * Which version of salmon was used?: 1.6.0; * How was salmon installed (compiled, downloaded executable, through bioconda)?: Miniconda; * Which reference (e.g. transcriptome) was used?: Self-generated; * Which read files were used?: ERX4307280, SRX10245671, SRX3847835; * Which which program options were used?. ```; salmon quant -i {params.index_dir} -l A -r {input.reads} -o {params.out_dir} --validateMappings --writeUnmappedNames; ```. **Expected behavior**; I expected the reads that were counted in the log file as ""discarded because they are best-mapped to decoys"" to be labelled in the `aux_info/unmapped_names.txt` file with `d`, but all reads were marked as `u`. **Screenshots**; ```; $grep ""Number of fragments discarded because they are best-mapped to decoys"" */logs/*. ERX4307280_quant/logs/salmon_quant.log:[2022-02-02 15:51:25.854] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 948,850; SRX10245671_quant/logs/salmon_quant.log:[2022-02-02 15:57:10.321] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys :",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/748:3571,install,installed,3571,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/748,1,['install'],['installed']
Deployability,": 26; [2021-04-09 12:16:42.803] [jointLog] [info] Mapping rate = 3.375%. Analyzed 184 cells (95% of all).Log] [info] finished quantifyLibrary(); [2021-04-09 12:16:43.532] [alevinLog] [warning] 37 mitorna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.532] [alevinLog] [info] Total 0 usable mRna genes; [2021-04-09 12:16:43.533] [alevinLog] [warning] 529 ribosomal rna gene(s) does not have transcript in the reference; [2021-04-09 12:16:43.533] [alevinLog] [info] Total 22 usable rRna genes; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 135.00 UMI after deduplicating.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 BiDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [info] Total 0 UniDirected Edges.; [2021-04-09 12:16:43.582] [alevinLog] [warning] Skipped 113 barcodes due to No mapped read; [2021-04-09 12:16:43.584] [alevinLog] [info] Clearing EqMap; Might take some time.; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting white listing of 81 cells; [2021-04-09 12:16:43.589] [alevinLog] [info] Starting to make feature Matrix; [2021-04-09 12:16:43.589] [alevinLog] [info] Done making feature Matrix; Exception : [vector]; alevin was invoked improperly.; For usage information, try alevin --help; Exiting.; ```. **To Reproduce**. I have uploaded the files used and a script to run a reproducible example:. https://www.dropbox.com/sh/ksn45n73bazp0rc/AABlsbkG-SLyKJN4DBO7zQ-va?dl=0. * Which version of salmon was used? 1.4.0; * How was salmon installed? bioconda. **Expected behavior**. Alevin should run to completion, with no errors. **Desktop :**; - OS: OSX; - Version: ProductName=Mac OS X, ProductVersion=10.15.7, BuildVersion=19H524. **Additional context**. The files are from a small test dataset - the reads have been subsampled and the genome reference sequence and annotation was filtered for the X chromosome. The index file was generated using the method describe here: https://combine-lab.github.io/alevin-tutorial/2020/alevin-velocity/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/647:7707,install,installed,7707,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/647,1,['install'],['installed']
Deployability,":. * Which version of salmon was used? 1.10.2 (also occurred using 1.10.1 and 0.14).; * How was salmon installed (compiled, downloaded executable, through bioconda)? installed through bioconda (defined in conda environment).; * Which reference (e.g. transcriptome) was used? BY4742 transcriptome generated using gffread (command used: ""gffread -g BY4742.fa -o wt-syn-transcriptome.gff -w wt-syn-transcriptome.fa -v -C BY4742.gff"").; * Which read files were used? Paired end fastq files (trimmed by fastp).; * Which which program options were used? ""--validateMappings --threads 1 --libType A --index transcriptome-index --mates1 sample1_R1_001.trimmed.fastq.gz --mates2 sample1_R2_001.trimmed.fastq.gz --output sample1"". **Expected behavior**; A clear and concise description of what you expected to happen.; Salmon quant to generate quant.sf file. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ validateMappings ] => { }; ### [ threads ] => { 1 }; ### [ libType ] => { A }; ### [ index ] => { transcriptome-index }; ### [ mates1 ] => { sample1_R1_001.trimmed.fastq.gz }; ### [ mates2 ] => { sample1_R2_001.trimmed.fastq.gz }; ### [ output ] => { sample1 }; Logs will be written to sample1/logs; [2023-10-11 16:03:44.489] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-10-11 16:03:44.490] [jointLog] [info] Usage of --validateMappings implies use of",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/881:1413,UPGRADE,UPGRADE,1413,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/881,1,['UPGRADE'],['UPGRADE']
Deployability,"://github.com/COMBINE-lab/salmon/files/2096615/alevin-default-eduardo.zip). Specifically, please provide at least the following information:. * Which version of salmon was used? ; Salmon 0.10.2; * How was salmon installed (compiled, downloaded executable, through bioconda)?; Installed with bioconda; * Which reference (e.g. transcriptome) was used? ; This transcriptome: https://drive.google.com/open?id=1XcsFUxJM6XaYEKh9BYdUoAyJSlWJLIiW. ; It's a mouse transcriptome with 3 additional transcripts at the end; * Which read files were used?; * Which which program options were used?; `salmon alevin -lISR -1 ./H2_S5_L003_R1_001.fastq.gz -2 H2_S5_L003_R2_001.fastq.gz --chromium -i salmon_index -p 8 -o alevin_output --tgMap txp2gene.tsv`. **Desktop (please complete the following information):**; - OS: CentOS; - Version:; Linux login1 3.10.0-514.2.2.el7.x86_64 #1 SMP Tue Dec 6 23:06:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux; LSB Version: :core-4.1-amd64:core-4.1-noarch; Distributor ID: CentOS; Description: CentOS Linux release 7.3.1611 (Core); Release: 7.3.1611; Codename: Core. **Additional context**; ```; Version Info: This is the most recent version of Salmon.; Logs will be written to alevin_output/logs; ### salmon (single-cell-based) v0.10.2; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { ISR }; ### [ mates1 ] => { ./H2_S5_L003_R1_001.fastq.gz }; ### [ mates2 ] => { H2_S5_L003_R2_001.fastq.gz }; ### [ chromium ] => { }; ### [ index ] => { salmon_index }; ### [ threads ] => { 8 }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { txp2gene.tsv }. [2018-06-12 21:01:31.327] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-06-12 21:01:31.330] [alevinLog] [info] Processing barcodes files (if Present) . ; processed 141 Million barcodes. [2018-06-12 21:08:38.126] [alevinLog] [info] Done barcode density calculation.; [2018-06-12 21:08:38.126] [alevinLog] [info] # Barcodes Used: 14011",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/237:1379,release,release,1379,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/237,1,['release'],['release']
Deployability,":25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated-declarations]; 130 | struct hash_base : std::unary_function<T, std::size_t> {};; | ^~~~~~~~~~~~~~; In file included from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/string:49,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:20:; /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/stl_function.h:117:12: note: declared here; 117 | struct unary_function; | ^~~~~~~~~~~~~~; make[2]: *** [src/CMakeFiles/salmon_core.dir/build.make:160: src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o] Error 1; make[1]: *** [CMakeFiles/Makefile2:568: src/CMakeFiles/salmon_core.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. **To Reproduce**; ```; #!/usr/bin/env bash. module load cmake Bzip2/1.0.8 curl; module load oneTBB/gcc13.2/2021.13.0; module load boost/gcc13.2/1.86.0 . rm -rf CMake*. cmake .. \; -DCMAKE_C_COMPILER=gcc \; -DBOOST_ROOT=/gpfs/software/boost/xeonmax/gcc13.2/1.86.0/ \; -DTBB_INSTALL_DIR=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DTBB_ROOT=/gpfs/software/oneTBB/xeonmax/gcc13.2.0/2021.13.0 \; -DCMAKE_CXX_COMPILER=g++ \; -DCMAKE_C_FLAGS=""-O3 -march=sapphirerapids -mtune=sapphirerapids"" \; -DCMAKE_CXX_FLAGS=""-O3 -march=sapphirerapids -mt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:2457,install,install,2457,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['install'],['install']
Deployability,"; [2021-04-20 10:11:46.842] [jointLog] [info] iteration = 1,000 | max rel diff. = 2.40606; [2021-04-20 10:11:47.548] [jointLog] [info] iteration = 1,100 | max rel diff. = 0.715333; [2021-04-20 10:11:48.250] [jointLog] [info] iteration = 1,200 | max rel diff. = 0.181266; [2021-04-20 10:11:48.938] [jointLog] [info] iteration = 1,300 | max rel diff. = 0.152511; [2021-04-20 10:11:49.636] [jointLog] [info] iteration = 1,400 | max rel diff. = 0.11611; [2021-04-20 10:11:50.315] [jointLog] [info] iteration = 1,500 | max rel diff. = 0.482892; [2021-04-20 10:11:51.013] [jointLog] [info] iteration = 1,600 | max rel diff. = 0.0388567; [2021-04-20 10:11:51.673] [jointLog] [info] iteration = 1,700 | max rel diff. = 0.518366; [2021-04-20 10:11:52.333] [jointLog] [info] iteration = 1,800 | max rel diff. = 0.117083; [2021-04-20 10:11:53.007] [jointLog] [info] iteration = 1,900 | max rel diff. = 0.306961; [2021-04-20 10:11:53.694] [jointLog] [info] iteration = 2,000 | max rel diff. = 0.078216; [2021-04-20 10:11:54.354] [jointLog] [info] iteration = 2,100 | max rel diff. = 1.17575; [2021-04-20 10:11:54.521] [jointLog] [info] iteration = 2,125 | max rel diff. = 0.00514978; [2021-04-20 10:11:54.541] [jointLog] [info] Finished optimizer; [2021-04-20 10:11:54.541] [jointLog] [info] writing output. [2021-04-20 10:11:54.750] [jointLog] [info] Computing gene-level abundance estimates; [2021-04-20 10:11:54.845] [jointLog] [info] There were 77689 transcripts mapping to 26673 genes; [2021-04-20 10:11:54.846] [jointLog] [info] NOTE: We recommend using tximport (https://bioconductor.org/packages/release/bioc/html/tximport.html) for aggregating transcript-level salmon abundance estimates to the gene level. It is more versatile, exposes more features, and allows considering multi-sample information during aggregation.; [2021-04-20 10:11:55.040] [jointLog] [info] Aggregating expressions to gene level; [2021-04-20 10:11:55.126] [jointLog] [info] done; ````. So, are there some bugs in version 0.14.1 ?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/652:9147,release,release,9147,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/652,1,['release'],['release']
Deployability,"; ```{shell}; $cat bowtie2.log ; 40535435 reads; of these:; 40535435 (100.00%) were paired; of these:; 38666766 (95.39%) aligned concordantly 0 times; 313581 (0.77%) aligned concordantly exactly 1 time; 1555088 (3.84%) aligned concordantly >1 times; ----; 38666766 pairs aligned concordantly 0 times; of these:; 808295 (2.09%) aligned discordantly 1 time; ----; 37858471 pairs aligned 0 times concordantly or discordantly; of these:; 75716942 mates make up the pairs; of these:; 11008379 (14.54%) aligned 0 times; 9748641 (12.88%) aligned exactly 1 time; 54959922 (72.59%) aligned >1 times; 86.42% overall alignment rate; ```. The output of Single-End reads(just read1):; ```{shell}; salmon quant -i assembly_index -l A -r 9998_1.fastq.gz --meta -p 100 -o 9998.quant_se2; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with bug fixes is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; ### salmon (mapping-based) v0.14.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { assembly_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { 9998_1.fastq.gz }; ### [ meta ] => { }; ### [ threads ] => { 100 }; ### [ output ] => { 9998.quant_se2 }; Logs will be written to 9998.quant_se2/logs; [2023-03-17 07:40:15.733] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2023-03-17 07:40:15.733] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a d",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/838:6070,release,releases,6070,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/838,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,"@COMBINE-lab. Generate gene level summary count:. Got the following files: ; `wget ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz`. `wget ftp://ftp.ensembl.org/pub/release-87/fasta/homo_sapiens/ncrna/Homo_sapiens.GRCh38.ncrna.fa.gz`. `zcat Homo_sapiens.GRCh38.cdna.all.fa.gz Homo_sapiens.GRCh38.ncrna.fa.gz >Homo_sapiens.GRCh38.87.cdna.ncrna.fa`. `salmon index -t Homo_sapiens.GRCh38.87.cdna.ncrna.fa -i Homo_sapiens.GRCh38.cdna.ncrna.quasi.index` . `salmon quant -i /data1/genome/hg38_r87/Homo_sapiens.GRCh38.cdna.ncrna.quasi.index -l ISR -1 1013_S7_R1_001.fastq.gz -2 1013_S7_R2_001.fastq.gz -p 8 -o 1013_quant -g /data1/genome/hg38_r87/Homo_sapiens.GRCh38.87.chr.gtf`. `[2017-02-22 17:28:03.310] [jointLog] [warning] couldn't find transcript named [ENST00000384587.1] in transcript <-> gene map; returning transcript as it's own gene`. I see the fasta file has a transcript name as ""ENST00000448914.1"", but the gtf has in the form of ""ENST00000448914"", any idea how salmon resolve this? There is no ""."" after transcript name in gtf file. Thanks; @demis001",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/122:109,release,release-,109,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/122,2,['release'],['release-']
Deployability,"@k3yavi @rob-p Thanks for work pertaining to new Salmon indexing methods as mentioned in this preprint: https://www.biorxiv.org/content/10.1101/657874v2. Some questions on salmon index building with salmon/v1.0 (as I am confused following the documentation at https://salmon.readthedocs.io/en/latest/salmon.html) - let me know if my understanding is correct. 1. Is this how to create SAF indices - https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ - with these steps, I assume I do not have to separately download mashmap and bedtools software. 2. If one has to use SA method, does one still use the generateDecoyTranscriptome.sh method as listed here - https://github.com/COMBINE-lab/SalmonTools/blob/master/scripts/generateDecoyTranscriptome.sh (and this requires the gff file, mashmap and bedtools software). 3. SA and SAF both require genome. Can I still use `salmon index` on the transcriptome file without using genome files? Based on the release notes quoted (copy/pasted) below, I am worried about the phrase `""mapping without selective alignment is disabled""`). . Salmon v1.0 release notes state: . > changes since v.014.1; > In this release of salmon, selective-alignment is enabled by default (and, in fact, mapping without selective-alignemnt is disabled). We may explore, in the future, ways to allow disabling selecive-alignment under the new mapping approach, but at this point, it is always enabled.; > ; ; 4. Page 18 of your preprint pdf states that you used ""salmon v0.15.0 for quasi-mapping"" - so I am assuming I have to keep 2 versions of salmon in my system if I have to do both quasi-mapping and SA/SAF?. 5. Page 19 of your preprint pdf states you used `--mimicBT2 and --useEM for SA and SAF` quantification methods. Is this the recommendation while using SA and SAF methods? ; From salmon v01.4.1 with SA method, I have all along used the default `VBEM `and `--validateMappings` based on info in [SalmonReadTheDocs](https://salmon.readthedocs.io/en/latest/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/442:967,release,release,967,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/442,1,['release'],['release']
Deployability,"A couple of operations in Salmon are determined by random numbers. For the purpose repeatability (in research or in automatic tests for packages using Salmon) it would be very useful to be able to set a seed for the random number generators. For example, we are using Salmon in a pipeline that generates HTML reports. In our tests we want to be sure that we control all sources of non-determinism and produce the very same report twice. This requires access to the seed. Would you be willing to accept a patch that changes all random number generation instances to first `getenv(""SALMON_RANDOM_SEED"")` and use that as the seed if provided? When `SALMON_RANDOM_SEED` is not provided the behaviour would be unchanged. (This relates to issue #102)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/185:280,pipeline,pipeline,280,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/185,2,"['patch', 'pipeline']","['patch', 'pipeline']"
Deployability,"A lot of the times when we are assessing our samples before we move on to fragmenting cDNA in to fragments, we look at the distribution of full length cDNA using a Bioanalyzer. See for example panel **a** of [this figure](http://www.nature.com/nprot/journal/v9/n1/fig_tab/nprot.2014.006_F2.html); ![](http://www.nature.com/nprot/journal/v9/n1/images/nprot.2014.006-F2.jpg). With the reference transcriptome, we know the distribution of transcripts with given lengths. We can view the reference transcript length distribution as unweighted distribution of lengths, and the electropherogram as the distribution when weighing transcript lengths by their relative abundances. Thus it seems the distribution of full length cDNA could be informative when inferring the TPMs (relative abundances) in a sample. Do you think it could be possible to integrate with the quantification model?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/56:840,integrat,integrate,840,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/56,1,['integrat'],['integrate']
Deployability,APMAP_SALMON_SUPPORT -DHAVE_ANSI_TERM -DHAVE_SSTREAM -Wall -Wno-reorder -Wno-unused-variable -std=c++11 -Wreturn-type -Werror=return-type -static-libstdc++ -Wno-deprecated-register -Wno-unused-local-typedefs -L/opt/rh/devtoolset-2/root/usr/lib64 -L/opt/rh/devtoolset-2/root/usr/lib CMakeFiles/salmon.dir/QSufSort.c.o CMakeFiles/salmon.dir/is.c.o CMakeFiles/salmon.dir/bwt_gen.c.o CMakeFiles/salmon.dir/bwtindex.c.o CMakeFiles/salmon.dir/xxhash.c.o CMakeFiles/salmon.dir/CollapsedEMOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/SequenceBiasModel.cpp.o CMakeFiles/salmon.dir/StadenUtils.cpp.o CMakeFiles/salmon.dir/TranscriptGroup.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapFileSystem.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndexer.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAIndex.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapSAMapper.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/RapMapUtils.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/HitManager.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/rank9b.cpp.o CMakeFiles/salmon.dir/__/external/install/src/rapmap/bit_array.c.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/ErrorModel.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o -o salmon -L/root/soft/salmon/salmon-0.6.0/lib -L/root/soft/salmon/salmon-0.6.0/external/install/lib -L/opt/boost/boost_1_57_0/lib -rdynamic libsalmon_core.a -lgff -lpthread /opt/boost/boost_1_57_0/lib/libboost_iostreams.a /opt/boost/boost_1_57_0/lib/libboost_filesystem.a /opt/boost/boost_1_57_0/,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/43:1291,install,install,1291,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/43,1,['install'],['install']
Deployability,"After cloning the develop branch and following the initial installation steps, cmake worked with no errors but make didn't. I'm working on a remote server. ```; cmake .. -DCMAKE_CXX_COMPILER=/data/apps/gcc/4.9.3/bin/c++ -DCMAKE_C_COMPILER=/data/apps/gcc/4.9.3/bin/gcc; make; ...; make[5]: Entering directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; /bin/sh ../libtool --tag=CC --mode=compile /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c -o libstaden_read_la-cram_io.lo `test -f 'cram_io.c' || echo './'`cram_io.c; libtool: compile: /data/apps/gcc/4.9.3/bin/gcc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: fatal error: lzma.h: No such file or directory; #include <lzma.h>; ^; compilation terminated.; make[5]: *** [libstaden_read_la-cram_io.lo] Error 1; make[5]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib/io_lib'; make[4]: *** [all-recursive] Error 1; make[4]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[3]: *** [all] Error 2; make[3]: Leaving directory `/lustre/projects/staton/software/salmon/external/staden-io_lib'; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Error 2; make[2]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make[1]: *** [CMakeFiles/libstadenio.dir/all] Error 2; make[1]: Leaving directory `/lustre/projects/staton/software/salmon/build'; make: *** [all] Error 2; ```. [make.log.txt](https://github.com/COMBINE-lab/salmon/files/554165/make.log.txt). From the salmon directory, I find lzma.h in two locations:; ./external/xz-5.2.2/src/liblzma/api/lzma.h; ./external/install/include/lzma.h",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/99:59,install,installation,59,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/99,2,['install'],"['install', 'installation']"
Deployability,"After starting a blank Ubuntu machine, and then executing:. ```; sudo apt-get update && \; sudo apt-get -y install screen git curl gcc make g++ python-dev unzip \; default-jre pkg-config libncurses5-dev r-base-core r-cran-gplots \; python-matplotlib python-pip python-virtualenv sysstat fastqc \; trimmomatic bowtie samtools blast2; sudo apt-get -y install cmake libboost-all-dev liblzma-dev. curl -O -L https://github.com/COMBINE-lab/salmon/archive/v0.5.0.tar.gz. tar xzf v0.5.0.tar.gz; cd salmon-0.5.0; cmake .; make; ```. gives. ```; In file included from /home/ubuntu/salmon-0.5.0/include/BAMQueue.hpp:146:0,; from /home/ubuntu/salmon-0.5.0/include/AlignmentLibrary.hpp:14,; from /home/ubuntu/salmon-0.5.0/src/SalmonUtils.cpp:13:; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp: In function 'bool checkProperPairedNames_(const char*, const char*, uint32_t)':; /home/ubuntu/salmon-0.5.0/include/BAMQueue.tpp:247:33: error: 'BOOST_LIKELY' was not declared in this scope; if (BOOST_LIKELY(nameLen > 1)) {; ^; ```. I'm not sure if this is a Boost version requirement, or what -- looks like I have boost 1.54 installed. Suggestions welcome!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/24:78,update,update,78,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/24,4,"['install', 'update']","['install', 'installed', 'update']"
Deployability,"Alevin (single-cell mode):. After compiling from source, --celseq2 is still not recognized as a valid flag. . * salmon v0.11.3; * compiled from source ; * reference: gencode.v28.transcripts.fa ; * Default Mode. **Expected behavior**; Following compiling from source, the --celseq2 flag should work (see https://github.com/COMBINE-lab/salmon/issues/311) . - Ubuntu Linux; - Version: `uname -a`; Linux yaellab-rina 4.15.0-39-generic #42-Ubuntu SMP Tue Oct 23 15:48:01 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; `lsb_release -a`; LSB Version:	core-9.20170808ubuntu1-noarch:printing-9.20170808ubuntu1-noarch:security-9.20170808ubuntu1-noarch; Distributor ID:	Ubuntu; Description:	Ubuntu 18.04.1 LTS; Release:	18.04; Codename:	bionic",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/325:694,Release,Release,694,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/325,1,['Release'],['Release']
Deployability,Alevin: Updates on How to Run 10x for v1 chemistry.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/294:8,Update,Updates,8,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/294,1,['Update'],['Updates']
Deployability,"Apologies for the previous empty post. I think I know how to do this now!. Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?. salmon. Describe the bug; I am getting a consistent segmentation fault 11 when running on the salmon tutorial on the provided arabidopsis data set. To Reproduce. Which version of salmon was used?; salmon v0.11.3 on MacBook Pro (15-inch, 2016) macOS Sierra 10.12.6. How was salmon installed (compiled, downloaded executable, through bioconda)?; bioconda. Which reference (e.g. transcriptome) was used?; To the best of my knowledge I followed the instructions in the tutorial at:; https://combine-lab.github.io/salmon/getting_started/. This describes where the data come from and how I invoked salmon. Which read files were used?; See above. Which which program options were used?; I used the bash script from; https://combine-lab.github.io/salmon/getting_started/. Expected behavior. I expected an output indicating successful quantification. Screenshots. I couldn't figure out how to insert a picture, but here is the text from ""terminal"" window.; `(salmon) MacBook-Pro-2:salmon-tutorial brent$ bash quant_tut_samples.sh; Processing sample DRR016125; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. salmon (mapping-based) v0.11.3; [ program ] => salmon; [ command ] => quant; [ index ] => { athal_index }; [ libType ] => { A }; [ mates1 ] => { data/DRR016125/DRR016125_1.fastq.gz }; [ mates2 ] => { data/DRR016125/DRR016125_2.fastq.gz }; [ threads ] => { 8 }; [ output ] => { quants/DRR016125_quant }; Logs will be written to quants/DRR016125_quant/logs; [2018-11-24 15:08:09.785] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-11-24 15:08:09.785] [jointLog] [info] parsing read library format; [2018-11-24 15:08:09.785] [jointLog] [info] There is 1 library.; [2018-11-24 15:08:09.87",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/318:437,install,installed,437,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/318,1,['install'],['installed']
Deployability,"As per https://gcc.gnu.org/gcc-13/porting_to.html, `gcc13` changes the way it handles includes. These three files needed patching to allow the build to work.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/856:121,patch,patching,121,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/856,1,['patch'],['patching']
Deployability,"BAM format file describes the option '-t transcripts.fa' for this purpose:. > ./bin/salmon quant -t transcripts.fa -l <LIBTYPE> -a aln.bam -o salmon_quant. Also the command-line help 'salmon quant --help-alignment' names the same options:. alignment input options:. -l [ --libType ] arg Format string describing the library ; type; -a [ --alignments ] arg input alignment (BAM) file(s).; -t [ --targets ] arg FASTA format file containing target ; transcripts. The 'salmon quant' command doesn't recognize either the short or long form of this option and stops execution immediately. There is no difference if the full set of options for a quantification run are provided or only this option. . **To Reproduce**; salmon quant -t Homo_sapiens.GRCh37.87.cdna.all.fa; salmon quant --targets Homo_sapiens.GRCh37.87.cdna.all.fa. Specifically, please provide at least the following information:. * Which version of salmon was used?; 0.12.0 and 0.11.3; * How was salmon installed (compiled, downloaded executable, through bioconda)?; downloaded executable (salmon-0.12.0_linux_x86_64.tar.gz, salmon-0.11.3-linux_x86_64.tar.gz); * Which reference (e.g. transcriptome) was used?; any, independant of transcriptome; * Which read files were used?; not applicable; * Which which program options were used?; other options than '-t/--targets' were irrelevant for provoking the error . **Expected behavior**; Salmon should run and process the alignment file in BAM format. **Screenshots**; --- Error messages ------------------; Exception : [unrecognised option '-t']. Exiting.; Exception : [unrecognised option '--targets']. Exiting.; --------------------------------------. **Desktop (please complete the following information):**; - OS: Ubuntu Linux; - Version:; Linux nnn 4.15.0-36-generic #39~16.04.1-Ubuntu SMP Tue Sep 25 08:59:23 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial. **Additional con",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/343:1272,install,installed,1272,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/343,1,['install'],['installed']
Deployability,Bioconda install of salmon breaks existing R installation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/147:9,install,install,9,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/147,2,['install'],"['install', 'installation']"
Deployability,Bioconda update to 0.8.1?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/128:9,update,update,9,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/128,1,['update'],['update']
Deployability,"COND_SYMVERS_TRUE='#'; COND_THREADS_FALSE=''; COND_THREADS_TRUE=''; COND_W32_FALSE=''; COND_W32_TRUE='#'; COND_XZDEC_FALSE='#'; COND_XZDEC_TRUE=''; COND_XZ_FALSE='#'; COND_XZ_TRUE=''; CPP=''; CPPFLAGS=''; CYGPATH_W='echo'; DEFS=''; DEPDIR='.deps'; DLLTOOL=''; DSYMUTIL=''; DUMPBIN=''; ECHO_C='\c'; ECHO_N=''; ECHO_T=''; EGREP=''; EXEEXT=''; FGREP=''; GETOPT_H=''; GETTEXT_MACRO_VERSION=''; GMSGFMT=''; GMSGFMT_015=''; GREP=''; HAVE_VISIBILITY=''; INSTALL_DATA='${INSTALL} -m 644'; INSTALL_PROGRAM='${INSTALL}'; INSTALL_SCRIPT='${INSTALL}'; INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'; INTLLIBS=''; INTL_MACOSX_LIBS=''; LD=''; LDFLAGS=''; LIBICONV=''; LIBINTL=''; LIBOBJS=''; LIBS=''; LIBTOOL=''; LIPO=''; LN_EXEEXT='$(EXEEXT)'; LN_S='ln -s'; LTLIBICONV=''; LTLIBINTL=''; LTLIBOBJS=''; LT_SYS_LIBRARY_PATH=''; MAKEINFO='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/missing makeinfo'; MANIFEST_TOOL=''; MKDIR_P='build-aux/install-sh -c -d'; MSGFMT=''; MSGFMT_015=''; MSGMERGE=''; NM=''; NMEDIT=''; OBJDUMP=''; OBJEXT=''; OTOOL64=''; OTOOL=''; PACKAGE='xz'; PACKAGE_BUGREPORT='lasse.collin@tukaani.org'; PACKAGE_NAME='XZ Utils'; PACKAGE_STRING='XZ Utils 5.2.2'; PACKAGE_TARNAME='xz'; PACKAGE_URL='http://tukaani.org/xz/'; PACKAGE_VERSION='5.2.2'; PATH_SEPARATOR=':'; POSIX_SHELL='/bin/sh'; POSUB=''; PREFERABLY_POSIX_SHELL='/bin/sh'; PTHREAD_CC=''; PTHREAD_CFLAGS=''; PTHREAD_LIBS=''; RANLIB=''; RC=''; SED=''; SET_MAKE=''; SHELL='/bin/sh'; STRIP=''; USE_NLS=''; VERSION='5.2.2'; XGETTEXT=''; XGETTEXT_015=''; XGETTEXT_EXTRA_OPTIONS=''; ac_ct_AR=''; ac_ct_CC='/Library/Developer/CommandLineTools/usr/bin/cc'; ac_ct_DUMPBIN=''; am__EXEEXT_FALSE=''; am__EXEEXT_TRUE=''; am__fastdepCCAS_FALSE=''; am__fastdepCCAS_TRUE=''; am__fastdepCC_FALSE=''; am__fastdepCC_TRUE=''; am__include='include'; am__isrc=''; am__leading_dot='.'; am__nodep='_no'; am__quote=''; am__tar='$${TAR-tar} chof - ""$$tardir""'; am__untar='$${TAR-tar} xf -'; ax_pthread_config=''; bindir='${exec_prefix}",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:13533,install,install-sh,13533,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['install'],['install-sh']
Deployability,"CXX object src/CMakeFiles/salmon_core.dir/GenomicFeature.cpp.o; In file included from /usr/include/pthread.h:33,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr-default.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/x86_64-pc-linux-gnu/bits/gthr.h:148,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ext/atomicity.h:35,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/bits/ios_base.h:39,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ios:44,; from /gpfs/software/gcc/13.2.0/include/c++/13.2.0/ostream:40,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/error_code.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/system/system_error.hpp:11,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/exceptions.hpp:22,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:10,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:17,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread.hpp:12,; from /gpfs/projects/hpc_support/salmon/include/GenomicFeature.hpp:25,; from /gpfs/projects/hpc_support/salmon/src/GenomicFeature.cpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/pthread/thread_data.hpp:60:5: error: missing binary operator before token ""(""; 60 | #if PTHREAD_STACK_MIN > 0; | ^~~~~~~~~~~~~~~~~; In file included from /gpfs/projects/hpc_support/salmon/external/install/include/boost/functional/hash.hpp:6,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/detail/thread.hpp:41,; from /gpfs/projects/hpc_support/salmon/external/install/include/boost/thread/thread_only.hpp:22:; /gpfs/projects/hpc_support/salmon/external/install/include/boost/container_hash/hash.hpp:130:33: warning: ‘template<class _Arg, class _Result> struct std::unary_function’ is deprecated [-Wdeprecated",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/953:1238,install,install,1238,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/953,1,['install'],['install']
Deployability,"CellOptimizer.cpp.o CMakeFiles/salmon.dir/CollapsedGibbsSampler.cpp.o CMakeFiles/salmon.dir/Salmon.cpp.o CMakeFiles/salmon.dir/BuildSalmonIndex.cpp.o CMakeFiles/salmon.dir/Graph.cpp.o CMakeFiles/salmon.dir/DedupUMI.cpp.o CMakeFiles/salmon.dir/Alevin.cpp.o CMakeFiles/salmon.dir/AlevinHash.cpp.o CMakeFiles/salmon.dir/SalmonAlevin.cpp.o CMakeFiles/salmon.dir/WhiteList.cpp.o CMakeFiles/salmon.dir/SalmonQuantify.cpp.o CMakeFiles/salmon.dir/FragmentLengthDistribution.cpp.o CMakeFiles/salmon.dir/FragmentStartPositionDistribution.cpp.o CMakeFiles/salmon.dir/GZipWriter.cpp.o CMakeFiles/salmon.dir/SalmonQuantMerge.cpp.o CMakeFiles/salmon.dir/ProgramOptionsGenerator.cpp.o CMakeFiles/salmon.dir/FASTAParser.cpp.o CMakeFiles/salmon.dir/AlignmentModel.cpp.o CMakeFiles/salmon.dir/ONTAlignmentModel.cpp.o CMakeFiles/salmon.dir/AlignmentCommon.cpp.o CMakeFiles/salmon.dir/SalmonQuantifyAlignments.cpp.o CMakeFiles/salmon.dir/BAMUtils.cpp.o -o salmon -L/vol/mgx-sw/src/tools/salmon/lib -L/vol/mgx-sw/lib -L/vol/mgx-sw/src/tools/salmon/external/install/lib -Wl,-rpath,""\$ORIGIN/../lib:\$ORIGIN/../../lib:\$ORIGIN/:\$ORIGIN/../../external/install/lib"" ../external/pufferfish/src/libpuffer.a libsalmon_core.a ../external/pufferfish/external/twopaco/graphconstructor/libtwopaco.a ../external/pufferfish/external/twopaco/graphdump/libgraphdump.a ../external/pufferfish/external/ntcard/libntcard.a -lgff /usr/lib/x86_64-linux-gnu/libboost_iostreams.a /usr/lib/x86_64-linux-gnu/libboost_filesystem.a /usr/lib/x86_64-linux-gnu/libboost_system.a /usr/lib/x86_64-linux-gnu/libboost_timer.a /usr/lib/x86_64-linux-gnu/libboost_chrono.a /usr/lib/x86_64-linux-gnu/libboost_program_options.a /usr/lib/x86_64-linux-gnu/libboost_locale.a ../../external/install/lib/libstaden-read.a /usr/lib/x86_64-linux-gnu/libcurl.a /usr/lib/x86_64-linux-gnu/libz.a -lm /usr/lib/x86_64-linux-gnu/liblzma.a /usr/lib/x86_64-linux-gnu/libbz2.a -lgomp ../external/pufferfish/src/libksw2pp.a libalevin_core.a ../../external/install/lib/libjemallo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/664:2562,install,install,2562,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/664,1,['install'],['install']
Deployability,Compilation of newest release crashes with many undefined reference errors:; ```; [ 72%] Linking CXX executable unitTests; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o): In function `Curl_disconnect':; (.text+0xb3c): undefined reference to `idn2_free'; (.text+0xb58): undefined reference to `idn2_free'; (.text+0xb74): undefined reference to `idn2_free'; (.text+0xb90): undefined reference to `idn2_free'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o): In function `Curl_connect':; (.text+0x4e9e): undefined reference to `idn2_free'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o):(.text+0x4eba): more undefined references to `idn2_free' follow; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-url.o): In function `fix_hostname.isra.7':; (.text.unlikely+0x2e4): undefined reference to `idn2_check_version'; (.text.unlikely+0x301): undefined reference to `idn2_lookup_ul'; (.text.unlikely+0x34b): undefined reference to `idn2_strerror'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-cookie.o): In function `Curl_cookie_add':; (.text+0xbb1): undefined reference to `psl_builtin'; (.text+0xbca): undefined reference to `psl_is_cookie_domain_acceptable'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-version.o): In function `curl_version':; (.text+0xd6): undefined reference to `idn2_check_version'; (.text+0xe2): undefined reference to `idn2_check_version'; (.text+0x106): undefined reference to `psl_get_version'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-version.o): In function `curl_version_info':; (.text+0x1e9): undefined reference to `idn2_check_version'; /usr/lib/x86_64-linux-gnu/libcurl.a(libcurl_la-socks_gssapi.o): In function `check_gss_err.part.0':; (.text+0x57): undefined reference to `gss_release_buffer'; (.text+0x77): undefined reference to `gss_display_status'; (.text+0x9b): undefined reference to `gss_release_buffer'; (.text+0xcf): undefined reference to `gss_release_buffer'; (.text+0xef): undefined reference to `gss_display_status'; (.text+0x10e): ,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/425:22,release,release,22,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/425,1,['release'],['release']
Deployability,Conda install,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/461:6,install,install,6,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/461,1,['install'],['install']
Deployability,Configure error installing salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:16,install,installing,16,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['install'],['installing']
Deployability,"Contrary to earlier versions, e.g. ```sh; $ curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v1.7.0/salmon-1.7.0_linux_x86_64.tar.gz; $ tar zxf salmon-1.7.0_linux_x86_64.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 669 100 669 0 0 2676 0 --:--:-- --:--:-- --:--:-- 2676; 100 52.5M 100 52.5M 0 0 26.0M 0 0:00:02 0:00:02 --:--:-- 33.2M; 20220314-W11-1 (d073) 12:51:34 hb-x1:~/tmp/salmon; ○ $ ls -la salmon-1.7.0_linux_x86_64/; total 1184; drwxr-xr-x 4 hb hb 4096 Feb 16 10:01 .; drwxrwxr-x 4 hb hb 4096 Mar 14 12:51 ..; drwxr-xr-x 2 hb hb 4096 Feb 15 21:05 bin # <===; drwxr-xr-x 2 hb hb 4096 Feb 15 21:05 lib # <===; -rw-r--r-- 1 hb hb 1193382 Feb 15 21:05 sample_data.tgz; ```. the binaries for the recent salmon 1.8.0 release does not share any of the files or subfolders with ""group"" and ""other"";. ```sh; $ curl -L -O https://github.com/COMBINE-lab/salmon/releases/download/v1.8.0/salmon-1.8.0_linux_x86_64.tar.gz; tar zxf salmon-1.8.0_linux_x86_64.tar.gz; % Total % Received % Xferd Average Speed Time Time Time Current; Dload Upload Total Spent Left Speed; 100 669 100 669 0 0 7689 0 --:--:-- --:--:-- --:--:-- 7689; 100 91.9M 100 91.9M 0 0 33.4M 0 0:00:02 0:00:02 --:--:-- 35.9M; 20220314-W11-1 (d073) 12:51:14 hb-x1:~/tmp/salmon; ○ $ ls -la salmon-1.8.0_linux_x86_64/; total 1184; drwx------ 4 hb hb 4096 Mar 10 09:57 .; drwxrwxr-x 3 hb hb 4096 Mar 14 12:51 ..; drwx------ 2 hb hb 4096 Mar 14 12:51 bin # <===; drwx------ 2 hb hb 4096 Mar 8 06:57 lib # <===; -rw------- 1 hb hb 1193382 Mar 8 06:57 sample_data.tgz # <===. $ ls -la salmon-1.8.0_linux_x86_64/bin; total 442304; drwx------ 2 hb hb 4096 Mar 14 12:51 .; drwx------ 4 hb hb 4096 Mar 10 09:57 ..; -rw------- 1 hb hb 452905776 Mar 8 06:57 salmon # <===; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/761:93,release,releases,93,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/761,3,['release'],"['release', 'releases']"
Deployability,Could not fetch RapMap during installation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/331:30,install,installation,30,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331,1,['install'],['installation']
Deployability,"Could someone help me with errors I'm getting while trying to run Salmon index?. The full error output is given below. Here a few lines from that output:. Pass Filling Filtering; 1 1186 error: Can't write to a temporary file; error: Can't read the input file. Segmentation fault. I'm working on a Linux system and Salmon v1.2.0. While Salmon is running it does create the temp index files which are deleted after completing the script. However, it does not seem to create all the files e.g. versionInfo.json is missing. These files are created:. ![image](https://user-images.githubusercontent.com/61871236/86531929-79d01d80-bebd-11ea-882b-2a7cab39fdd4.png). **Full error output:**. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2020-07-04 15:08:27.992] [jLog] [info] building index; out : /scratch/jl2e19/salmon_index; [2020-07-04 15:08:27.992] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2020-07-04 15:08:47.186] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482.1|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:47.348] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300.1|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:49.395] [puff::index::jointLog] [warning] Entry with header [ENST00000632684.1|ENSG00000282431.1|OTTHUMG00000190602.2|OTTHUMT00000485301.2|TRBD1-202|TRBD1|12|TR_D_gene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping); [2020-07-04 15:08:51.746] [puff::index::jointLog] [warning] Entry with header [ENST00000626826.1|ENSG00000281",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/543:714,upgrade,upgrade,714,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/543,2,['upgrade'],"['upgrade', 'upgrades']"
Deployability,Could you please provide the newest salmon ; version for installation via e.g. 'sudo apt install salmon' (rather than the cmake source code approach)?; Thanks!,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/716:57,install,installation,57,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/716,2,['install'],"['install', 'installation']"
Deployability,"Currently on develop branch, there is a build error. https://travis-ci.org/COMBINE-lab/salmon/builds/418288039; https://api.travis-ci.org/v3/job/415232259/log.txt. ```; cd /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0 && CC=/usr/bin/gcc-7 CXX=/usr/bin/g++-7 /home/travis/build/COMBINE-lab/salmon/external/boost_1_66_0/b2 -d0 -j2 --with-iostreams --with-atomic --with-chrono --with-container --with-date_time --with-exception --with-filesystem --with-graph --with-graph_parallel --with-math --with-program_options --with-system --with-locale --with-timer toolset=gcc toolset=gcc cxxflags=-std=c++14 ""cxxflags= -std=c++14 -I/home/travis/build/COMBINE-lab/salmon/external/install/include -L/home/travis/build/COMBINE-lab/salmon/external/install/lib"" link=static install. g++: error: unrecognized command line option ‘-std=c++14’; ```. I suspect the `g++` (Not `g++-N`) is wrongly used for to build boost.; As a result, the old version `g++` version 4.8 does not support `-std=c++14`. Maybe. https://www.boost.org/doc/libs/1_66_0/more/getting_started/unix-variants.html; https://stackoverflow.com/questions/5346454/building-boost-with-different-gcc-version. Maybe below kind of process is necessary if CC=gcc-N. ```; $ echo ""using gcc : 7 : /usr/bin/g++-7 ; "" >> tools/build/src/user-config.jam; $ ./bootstrap.sh ...; $ ./b2 --toolset=gcc-7 ...; ```. Here is my work to fix the issue.; Still working in progress.; But you can imagine how I am trying to fix it. I am not familiar with the `cmake`.; https://github.com/junaruga/salmon/commit/6cb73098155f0e776d4eb68bc639f3d761dd8963. If possible, I want you to fix this issue :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/275:683,install,install,683,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/275,3,['install'],['install']
Deployability,"Dear COMBINE-lab team,. I am using **Alevin** pipeline from the **salmon-1.4.0 release** to preprocess some Drop-Seq data. . From what I understood, Alevin is using sets of low quality, ambiguous and high quality barcodes for the final whitelisting. Ambiguous and high quality ones are sets of barcodes of equal sizes above the knee/threshold used for the initial whitelisting. Ambiguous barcodes get classified as either high or low quality. Correct me if I'm wrong, but I think this means that the final whitelisted barcodes (those of high quality) should all be above the knee/threshold.; However I observed that **some of the barcodes dumped in the whitelist.txt file from the intelligent whitelisting were not above the knee/threshold used for initial whitelisting.** . I was wondering if you could reproduce my observation, or tell me if I misunderstood something. Here's the code I used :. ```; with open(f""./aux_info/alevin_meta_info.json"") as f:; alevin_meta_info = json.load(f). knee_or_threshold = alevin_meta_info[""initial_whitelist""]; whitelist = pd.read_table(f""./alevin/whitelist.txt"", header=None)[0].values; quants_mat_rows = pd.read_table(f""./alevin/quants_mat_rows.txt"", header=None).values.ravel(); raw_cb_frequency = pd.read_table(f""./alevin/raw_cb_frequency.txt"", header=None, index_col=0). print(alevin_meta_info) >>. {'total_reads': 145095156,; 'reads_with_N': 0,; 'noisy_cb_reads': 66182273,; 'noisy_umi_reads': 3866,; 'used_reads': 78909017,; 'mapping_rate': 44.93378883027631,; 'reads_in_eqclasses': 65196751,; 'total_cbs': 3146561,; 'used_cbs': 92693,; 'initial_whitelist': 3000,; 'low_conf_cbs': 1000,; 'num_features': 7,; 'no_read_mapping_cbs': 1,; 'final_num_cbs': 2597,; 'deduplicated_umis': 6871590,; 'mean_umis_per_cell': 2645,; 'mean_genes_per_cell': 1370}. print(len(quants_mat_rows)) >> 3999; print(knee_or_threshold) >> 3000. print(len(whitelist)) >> 2597; print(len(np.intersect1d(raw_cb_frequency[:knee_or_threshold].index, whitelist))) >> 2513; ```. The thresh",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/733:46,pipeline,pipeline,46,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/733,2,"['pipeline', 'release']","['pipeline', 'release']"
Deployability,"Dear Dr. Patro,. First of all, my apologies as I want to make it clear that I have just posted this same question on Bioconductor community as well in a hope to get a quick reply. . I have put great amount of effort to find out answer to this question on internet. Couldn't find it anywhere (bioconductor, biostars, seqanswers, github etc.). I have 3 replicates for each sample and one of the replicates from each sample is single-end and other two are paired-end as SE and PE were processed at different facilities (I know I have to do batch correction in downstream analysis). Now I want to use transcript level abundance from quant.sf file which I derived for each replicates using Salmon's quasi-mapping pipeline (used appropriate flags for SE and PE reads). All these (SE & PE) reads are strand specific. . My question is, can I use quant.sf directly from these replicates for downstream DE analysis using tximport or do SE or PE requires separate kind of processing before I can use them together as replicates for downstream analysis. I am planning to use limma-voom for my DE analysis. Thank you so much for your time and apologies if the question was answered already.; Sandip Darji",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/156:708,pipeline,pipeline,708,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/156,1,['pipeline'],['pipeline']
Deployability,"Dear Salmon Dev team,; I recently upgraded salmon 0.8.3 to 1.1.0.; I run the sample using libtype -IU.; For the new1.1.0, I used --validateMappings together with index built with genome decoys.; I noticed unusual amount of dovetail mapping being discarded. Here is the meta_info from the new version:; ```; ""num_processed"": 107275750,; ""num_mapped"": 50376830,; ""num_decoy_fragments"": 381872,; ""num_dovetail_fragments"": 55224702,; ""num_fragments_filtered_vm"": 47824323,; ""num_alignments_below_threshold_for_mapped_fragments_vm"": 1540436314,; ""percent_mapped"": 46.960128454007548,; ```; Meta info from v0.8.3:; ```; ""num_processed"": 107275750,; ""num_mapped"": 89940471,; ""percent_mapped"": 83.8404494958087,; ```; Again, they were ran on the same sample.; Please let me know if there is something wrong in my parameters. Or do you think this is a poor sample quality issue.; Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/485:34,upgrade,upgraded,34,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/485,1,['upgrade'],['upgraded']
Deployability,"Dear Salmon team,. It would be good if the SA decoy files provided in refgenie had gencode annotation with the ensemble release number also specified. Thanks and best wishes,; Rich; Richard Friedman, ; Columbia University Cancer Center; Biomedical Informatics Shared Resource",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/904:120,release,release,120,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/904,1,['release'],['release']
Deployability,"Dear Salmon team,. We have previously been using salmon 0.8.1 for our RNA sequencing analysis pipeline and wanted to upgrade to the latest version (1.3.0). Upon comparing the quant.sf output from salmon 0.8.1 to 1.3.0 (see command below), we noticed that we had far less transcripts with a TPM of unequal 0 in the quant.sf file generated by salmon 1.3.0 compared to the quant.sf output from salmon 0.8.1. . cmd1 = (""{salmon} --no-version-check quant --libType {libType} ""; "" --targets {salmon_ref} --useVBOpt --numBootstraps 50 ""; "" --seqBias --gcBias --geneMap {salmon_gtf}""; "" --sampleOut --sampleUnaligned --threads {threads}""; "" --alignments {input_files[1]} --output {output_dir}/salmon""). I have downsampled the bam file on which we tested the two salmon versions, which can be found here: https://drive.google.com/file/d/1-3ZCXlYkBsu4wyYBgbgQQUbqRwICsyLB/view?usp=sharing . As the error model was not used in salmon 0.8.1, and is now run if the flag –noErrorModel is not set, I furthermore ran salmon 1.3.0 without the error model and performed another run with the error model and range factorization (set to 4 as recommended) enabled. . For this particular downsampled bam file, salmon 0.8.1 got 36.9% of TPM’s unequal 0 but for all three differently configured salmon 1.3.0 runs that number drops to 7.3%. . Is this drastic reduction in detected transcripts in the newer version the result of fewer false positives compared to the old salmon version?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/562:94,pipeline,pipeline,94,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/562,2,"['pipeline', 'upgrade']","['pipeline', 'upgrade']"
Deployability,"Dear `salmon` developers,. We are using salmon at ONT for quantifying transcripts from alignments of cDNA reads to transcriptomes on a regular basis and in [some](https://github.com/nanoporetech/pipeline-transcriptome-de) of our pipelines.; Transcriptomic aligments of long reads generate less multimapping reads than short reads (depeneding on the structure of the transcriptome), however we would prefer not to ignore them during quantification in order to make maximal use of the data.; However, since the error model was built for short reads, until now we have used the tool with the error model turned off (`--noErrorModel`), which is not optimal. Would it be possible to add a simple error model suitable for long read alignments? We propose something like the following for calculating the likelihood of an alignment:. - The likelihood of the aligment would be calculated based on the empirical distributions (or a normal fit) of edit distances conditioned on the length of the alignment. We could provide you with this information if needed.; - The likelihood of left and right soft or hard clipped sequences would be calculated as a function of their length (such as (1/x)^z, where the parameter z can be tuned based on real datasets). A more complicated model could be build taking into account the error profile of the long reads. It might be overkill though. I had a look at the source code and it seems to me that it might not be hard to implement it, however I am lacking the intimate knowledge of the codebase to do it easily.; Let me know if you would be interested in adding this feature. If yes, we could evaluate the change in the quality of estimates on real datasets. Best regards,; Botond Sipos",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/519:195,pipeline,pipeline-transcriptome-de,195,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/519,2,['pipeline'],"['pipeline-transcriptome-de', 'pipelines']"
Deployability,"Dear developers,. I noticed that salmon introduced the ""--ont"" option in version 1.5+ but this option is not valid anymore for the latest v1.6.0. So I was wondering the reason behind this. Also, say if I want to use v1.6.0 to analyze my ONT direct-RNA sequencing data, which options would you recommend regarding the following options: `--noErrorModel`,` --noLengthCorrection`, and `--libType`? Thanks!. ```; $ ./salmon-1.6.0_linux_x86_64/bin/salmon quant --ont ; Version Info: This is the most recent version of salmon.; (mapping-based mode) Exception : [unrecognised option '--ont'].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting. $ ./salmon-1.5.2_linux_x86_64/bin/salmon quant --ont ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###exception : [the option '--libType' is required but missing]. Exiting. ```; Best,; Jia-Xing",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/735:836,UPGRADE,UPGRADE,836,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/735,4,"['UPGRADE', 'release', 'update', 'upgrade']","['UPGRADE', 'releases', 'updates', 'upgrade']"
Deployability,"Due to a current default in the boost library (https://github.com/boostorg/math/issues/1211) in boost::math::digamma, there is a performance hit on aarch64. This happens on v1.10.3 of Salmon, with GNU compiler 13 on Linux aarch64. A 4-thread quantization of one of the Salmon tutorials DRR0* series files spends ~15% of time in this routine (called within CollapsedEMOptimizer). On a larger example, we see 7% performance hit over a run that takes 1300 seconds on 4 cores. On x86 this time is small enough to be lost in the noise. `salmon quant -i athal_index -l A ; -1 DRR016125/DRR016125_1.fastq.gz; -2 DRR016125/DRR016125_2.fastq.gz ; -p $threads --validateMappings -o quants/DRR016125_quant`. There is a simple fix which is to ensure the CMake/Makefiles ensure salmon compiles with: ; `-DBOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS`; or to add that to any file that brings in boost::math via adding `#define BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS` at the start. With that change, a 1300 second runtime drops to 1212 for the larger test case, and for the tutorial case is 48 seconds down to 40 on a 4-core r8g.xlarge (Graviton4). Whilst Boost may fix the issue soon - it's likely that older versions of the library will be found installed for some time. It would be helpful to add this define to cmake settings, or the sources.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/966:1231,install,installed,1231,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/966,1,['install'],['installed']
Deployability,"During the installation of salmon v1.10.2 and leidenalg with mamba, mamba continously report that . salmon 1.10.2** is not installable because it requires; └─ icu >=70.1,<71.0a0 , which conflicts with any installable versions previously reported. It was due to the libboost version. ├─ libboost is installable with the potential options; │ ├─ libboost 1.82.0 would require; │ │ └─ icu >=72.1,<73.0a0 , which can be installed;; │ └─ libboost [1.82.0|1.83.0|1.84.0] would require; │ └─ icu >=73.2,<74.0a0 , which can be installed;. leidenalg required latest version of libboost but salmon only accepted 70.1 version of icu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/909:11,install,installation,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/909,6,['install'],"['installable', 'installation', 'installed']"
Deployability,"EEXT_TRUE=''; am__fastdepCCAS_FALSE=''; am__fastdepCCAS_TRUE=''; am__fastdepCC_FALSE=''; am__fastdepCC_TRUE=''; am__include='include'; am__isrc=''; am__leading_dot='.'; am__nodep='_no'; am__quote=''; am__tar='$${TAR-tar} chof - ""$$tardir""'; am__untar='$${TAR-tar} xf -'; ax_pthread_config=''; bindir='${exec_prefix}/bin'; build='arm-apple-darwin22.6.0'; build_alias=''; build_cpu='arm'; build_os='darwin22.6.0'; build_vendor='apple'; datadir='${datarootdir}'; datarootdir='${prefix}/share'; docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'; dvidir='${docdir}'; exec_prefix='NONE'; host='arm-apple-darwin22.6.0'; host_alias=''; host_cpu='arm'; host_os='darwin22.6.0'; host_vendor='apple'; htmldir='${docdir}'; includedir='${prefix}/include'; infodir='${datarootdir}/info'; install_sh='${SHELL} /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/build-aux/install-sh'; libdir='${exec_prefix}/lib'; libexecdir='${exec_prefix}/libexec'; localedir='${datarootdir}/locale'; localstatedir='${prefix}/var'; mandir='${datarootdir}/man'; mkdir_p='$(MKDIR_P)'; oldincludedir='/usr/include'; pdfdir='${docdir}'; prefix='/Users/jeremybono/Downloads/salmon-1.10.1/external/install'; program_transform_name='s,x,x,'; psdir='${docdir}'; sbindir='${exec_prefix}/sbin'; sharedstatedir='${prefix}/com'; sysconfdir='${prefix}/etc'; target_alias=''; xz=''. ## ----------- ##; ## confdefs.h. ##; ## ----------- ##. /* confdefs.h */; #define PACKAGE_NAME ""XZ Utils""; #define PACKAGE_TARNAME ""xz""; #define PACKAGE_VERSION ""5.2.2""; #define PACKAGE_STRING ""XZ Utils 5.2.2""; #define PACKAGE_BUGREPORT ""lasse.collin@tukaani.org""; #define PACKAGE_URL ""http://tukaani.org/xz/""; #define NDEBUG 1; #define HAVE_ENCODER_LZMA1 1; #define HAVE_ENCODER_LZMA2 1; #define HAVE_ENCODER_DELTA 1; #define HAVE_ENCODER_X86 1; #define HAVE_ENCODER_POWERPC 1; #define HAVE_ENCODER_IA64 1; #define HAVE_ENCODER_ARM 1; #define HAVE_ENCODER_ARMTHUMB 1; #define HAVE_ENCODER_SPARC 1; #define HAVE_DECODER_LZMA1 1; #define HAVE_DECODER_LZMA2 1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:15125,install,install-sh,15125,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,1,['install'],['install-sh']
Deployability,Error during Salmon installation,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/235:20,install,installation,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235,1,['install'],['installation']
Deployability,Error with installing Salmon v0.7.2,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/112:11,install,installing,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112,1,['install'],['installing']
Deployability,Errors when installing from source,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/139:12,install,installing,12,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139,1,['install'],['installing']
Deployability,"FYI, contrary to previous versions/tags, <https://github.com/COMBINE-lab/salmon/releases/tag/v1.10.1> lacks a `; salmon-1.10.1_linux_x86_64.tar.gz` binary.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/841:80,release,releases,80,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/841,1,['release'],['releases']
Deployability,Feature request: Aid installation via package managers,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/502:21,install,installation,21,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/502,1,['install'],['installation']
Deployability,"Filter size = 549755813888; Capacity = 2; Files: ; salmon_index/ref_k31_fixed.fa; --------------------------------------------------------------------------------; Killed. After that, I stopped experimenting and used the original code with only 6 threads. . salmon index -t gentrome.fa.gz -d decoys.txt -p 6 -i salmon_index --gencode. This seemed to be working fine and got to Round 0 without any problems.; It created the ""twopaco_tmp"" directory about 5 minutes after starting and created a ""bifurcations.bin"" inside this directory. However, 4 hours have passed, and neither the file nor the directory have any new modifications (and the file is still a staggering 0 bytes large). I also read that this will take quite a lot of memory, but there should be some TB left on the hard drive. I created a 21 GiB swap partition which works fine (I've already seen it at 60%, so it is active and recognized and everything despite being on another physical hard drive ; (the 1. hard drive has a dual installation of win 10 and ubuntu 20.4 and the swap from the installation (2 GiB, because I thought that would be enough at the time and tried to save some space ^^) and the 2. hard drive has a swap partition of 20 GiB (with the highest priority of all swaps), which results in a total of 21.4 GiB in the System Monitor Resources Tab). . The system is still responding, and the System Monitor seems to be working fine (salmon is an active process using 12% CPU, 6.9 GiB memory, 13.5 GiB Disk read total, N/A Disk write total, Disk read 1.2 MiB/s (sometimes 1.1 or 1.3), Disk write N/A, Priority normal); and the Resources Tab shows that ; * out of 8 available CPUs, one is working at 100% (the others 5% at max) and ; * Memory 99.3% (which is only 7.7 GiB); * swap 9.5% (which is only 2 GiB of 21.4 GiB available). So here are (finally) my questions:. 1. How can I get Salmon to use the swap (I set swappiness to 100, and it still doesn't seem to care about the swap); 2. Is it normal that there is nothing ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/643:3460,install,installation,3460,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/643,1,['install'],['installation']
Deployability,"From Salmon 0.13.1 release notes:. > This version adds the `--allowDovetail` flag which overrides the newly-default behavior of discarding dovetail mappings of paired-end reads. If passed this flag, salmon will not consider dovetailing mappings as discordant, and will consider them. I am trying to understand why the default behavior is to discard dovetail mappings. In my personal experience, most of the dovetail mappings are due to short fragments, so both mates of the pair end up completely overlapping. In that case, I would think that dovetailed reads should be retained. Are there are other factors that contribute to discarding dovetails by default?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/352:19,release,release,19,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/352,1,['release'],['release']
Deployability,"Gencode_mouse/release_M23/gencode.vM23.transcripts.fa.gz; > wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M23/GRCm38.primary_assembly.genome.fa.gz; > grep ""^>"" <(gunzip -c GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; > sed -i.bak -e 's/>//g' decoys.txt; > cat gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz > gentrome.fa.gz; > salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. ===========Then I get segmentation fault; ![image](https://user-images.githubusercontent.com/24876498/103153659-191b0100-47cd-11eb-942e-fcd99b3cf2e2.png). 6. gdb salmon <corefile>; It seemed to crash at these functions: fixFasta(), fixFastaMain() ; ![image](https://user-images.githubusercontent.com/24876498/103153694-554e6180-47cd-11eb-9e4e-dc4bfdf7f731.png). Specifically, please provide at least the following information:. * Which version of salmon was used? v1.4.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? compiled; * Which reference (e.g. transcriptome) was used? gencode.vM23.transcripts.fa.gz GRCm38.primary_assembly.genome.fa.gz; * Which read files were used? not quantifying yet, I'm at the indexing step.; * Which which program options were used? salmon index -t gentrome.fa.gz -d decoys.txt -p 12 -i salmon_index --gencode. **Expected behavior**; A clear and concise description of what you expected to happen.; Producing directory that contains indexed files to be applied to ""salmon quant"" command. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem.; 2 pictures: a segmentation fault screenshot and a gdb backtrack screenshot in ""**To Reproduce**"" section. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX] : CentOS7; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]; - ""uname -a""; Linux 3.10.0-1062.18.1.el7.x86",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/609:2529,install,installed,2529,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/609,1,['install'],['installed']
Deployability,"Good morning,. I'm a *nix developer with a lot of experience porting software to various platforms. My preferred method for deployment is build-from-source package managers such as FreeBSD ports, Gentoo Portage, MacPorts, pkgsrc (which I use extensively on CentOS), etc. Package managers in-general minimize problems for end users (and hence reduce PRs for you guys). Build-from-source package managers also allow customizing build options (e.g. adding -march=native), which can sometimes offer significantly better performance than you can get from a generic binary package that has to support older CPUs. Currently, developing such packages for salmon is a challenge due to the way the build system works. I've been looking through the build system and the main barrier to packaging is the unconditional bundling of some dependencies, such as seqlib and htslib. If you were to update the cmake systems so that they first look for *all* dependencies installed externally, as they already do for jemalloc and tbb, then it would be easier for developers to package salmon. Best,. Jason",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/502:124,deploy,deployment,124,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/502,3,"['deploy', 'install', 'update']","['deployment', 'installed', 'update']"
Deployability,"Greetings. Under Centos 6.9, using cmake-3.13.2, gcc 7.3 and 1.68.0, the salmon-1.30 build fails at the make step.; The command make -j8 fails with:. ```; [100%] Linking CXX executable salmon; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd32): warning: the use of `tempnam' is dangerous, better use `mkstemp'; ../external/pufferfish/src/libpuffer.a(PufferfishIndexer.cpp.o): In function `std::shared_ptr<spdlog::logger> spdlog::details::registry_t<std::mutex>::create<__gnu_cxx::__normal_iterat; or<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::allocator<std::shared_ptr<spdlog::sinks::sink> > > > >(std::__cxx11::basic_string<char,; std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&, __gnu_cxx::__normal_iterator<std::shared_ptr<spdlog::sinks::sink>*, std::vector<std::shared_ptr<spdlog::sinks::sink>, std::alloc; ator<std::shared_ptr<spdlog::sinks::sink> > > > const&)':; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEERKN; St7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_[_ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_S; aISA_EEEEEES7_INS_6loggerEERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKT_SS_]+0x73): undefined reference to `vtable for std::_Sp_counted_ptr_inplace<spdlog::logger, std::al; locator<spdlog::logger>, (__gnu_cxx::_Lock_policy)2>'; PufferfishIndexer.cpp:(.text._ZN6spdlog7details10registry_tISt5mutexE6createIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrINS_5sinks4sinkEESt6vectorISA_SaISA_EEEEEES7_INS_6loggerEER",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/570:208,install,install,208,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/570,1,['install'],['install']
Deployability,Handling counts dispersed across many alternate haplotype/patches for a single gene,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/544:58,patch,patches,58,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/544,1,['patch'],['patches']
Deployability,"Hello @rob-p @k3yavi . I'm contacting you because I'm getting different number of genes quantified based on the tool that I'm using to quantify my RNA-Seq samples. I'm running it using nf-core/rnaseq 3.8.1 version.; The point is if I use STAR/SALMON I get 61860 genes quantified, same number as unique genes IDs in GTF file, if I run in pseudo-mapping mode SALMON I get 61466 genes quantified. ## This is the way that I'm generating the index:; `; ### Get files from ensembl; wget http://ftp.ensembl.org/pub/release-107/fasta/homo_sapiens/dna/Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz; gunzip Homo_sapiens.GRCh38.dna.primary_assembly.fa.gz; wget http://ftp.ensembl.org/pub/release-107/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz; gunzip Homo_sapiens.GRCh38.cdna.all.fa.gz; wget http://ftp.ensembl.org/pub/release-107/gtf/homo_sapiens/Homo_sapiens.GRCh38.107.gtf.gz; gunzip Homo_sapiens.GRCh38.107.gtf.gz; ; ### Get files from ERCC92 (Spike-in); wget https://assets.thermofisher.com/TFS-Assets/LSG/manuals/ERCC92.zip; unzip ERCC92.zip; rm -rf ERCC92.zip; ; ### Add ERCC92 to FASTA file and to GTF file; cat ERCC92.fa Homo_sapiens.GRCh38.dna.primary_assembly.fa > Homo_sapiens.GRCh38.dna.primary_assembly_ERCC92.fa; cat ERCC92.gtf Homo_sapiens.GRCh38.107.gtf > Homo_sapiens.GRCh38.107_ERCC92.gtf; ; ### Regenerate a new transcript fasta; gffread -w regenerate_transcriptome.fa -g Homo_sapiens.GRCh38.dna.primary_assembly_ERCC92.fa Homo_sapiens.GRCh38.107_ERCC92.gtf; ; ### Create the decoys; grep ""^>"" Homo_sapiens.GRCh38.dna.primary_assembly_ERCC92.fa | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; ; ### Generate gentrome; cat regenerate_transcriptome.fa Homo_sapiens.GRCh38.dna.primary_assembly_ERCC92.fa > gentrome.fa; ; ### Create salmon index; salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index; `. ## Parameters pass to nf-core. `; STAR nf-params.json; {; ""input"": ""/localdata/samples_to_test/samplesheet_test_samples.csv"",; ""outdir"": ""/locald",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/803:508,release,release-,508,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/803,3,['release'],['release-']
Deployability,"Hello Salmon team,. I've recently been exploring the alignment mode of salmon quant and noticed that the --eqclasses option is mentioned in the help manual. Based on my understanding of the documentation, I initially thought that the --eqclasses option is used when input files are in alignment (BAM/SAM format). However, when I tried to use it, I encountered the following error: ""Conflicting options 'alignments' and 'eqclasses'."". Is the --eqclasses option applicable in alignment mode?; If not, when should it be used?; Does using the --eqclasses option in the context of alignment mode imply starting the quantification with a pre-computed equivalence class file and a reference transcriptome, thus bypassing the need for an alignment file (BAM)?. Thank you for your continuous efforts in developing and maintaining Salmon. I'm looking forward to any clarifications you can provide on this matter.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/877:772,continuous,continuous,772,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/877,1,['continuous'],['continuous']
Deployability,"Hello all, . I really wish Salmon was easier to install. . When running: . _cmake -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX='/home/.../salmon-master/'_. I get the following message: . _Making Release build; running /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh 2>&1; /home/Documents/apps/salmon-master/scripts/fetchRapMap.sh: line 33: curl: command not found; -- fetch RAPMAP exit code 127. CMake Error at CMakeLists.txt:265 (message):; Could not fetch RapMap source [fetchRapMap.sh returned exit code 127]. -- Configuring incomplete, errors occurred!; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeOutput.log"".; See also ""/home/krablab/Documents/apps/salmon-master/CMakeFiles/CMakeError.log""._. This seems to be an issue that keeps coming up. What is the proper way to solve it? ; Thanks in advance",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/331:48,install,install,48,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/331,2,"['Release', 'install']","['Release', 'install']"
Deployability,"Hello all, we are trying to use salmon quant on environmental samples using a big index but the quant step keeps crashing. While trying to quant different samples all crashed at the same step with the error message: `Exception : [Failed to read 130159192 bytes from input stream! Read 65079596]`. The system is part of a cluster and we have requested 500gb of RAM and disk available for the job and I kept track of the memory and disk usage which never exceeded 254gb. lsb_release -a; ```; LSB Version:	:base-4.0-amd64:base-4.0-noarch:core-4.0-amd64:core-4.0-noarch:graphics-4.0-amd64:graphics-4.0-noarch:printing-4.0-amd64:printing-4.0-noarch; Distributor ID:	Scientific; Description:	Scientific Linux release 6.4 (Carbon); Release:	6.4; Codename:	Carbon; ```. Do you have any idea what can be the causing the error?. Thanks. We are using the precompiled salmon bin and running it with:. `salmon quant -i $index -1 $f1 -2 $f2 -o $output_folder --meta --incompatPrior 0.0 --libType A -p 8 --gcBias --seqBias --numBootstraps 30`. ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.8.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { ./storage/tmm.idx }; ### [ mates1 ] => { DNA_1.fastq.gz }; ### [ mates2 ] => {DNA_2.fastq.gz }; ### [ output ] => { /DNA_tmm }; ### [ meta ] => { }; ### [ incompatPrior ] => { 0.0 }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ gcBias ] => { }; ### [ seqBias ] => { }; ### [ numBootstraps ] => { 30 }; Logs will be written to ./storage/logs; [2017-03-15 11:53:20.568] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2017-03-15 11:53:20.568] [jointLog] [info] parsing read library format; [2017-03-15 11:53:20.568] [jointLog] [info] There is 1 library.; [2017-03-15 11:53:20.653] [jointLog] [info] Loading Quasi index; [2017-03-15 11:53:20.683] [jointLog] [info] Loading 64-bit quasi index; [2017-03-15 11:53:20.684] [stderrLog]",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/129:703,release,release,703,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/129,2,"['Release', 'release']","['Release', 'release']"
Deployability,"Hello dear Salmon developers,; First of all - thank you very much for your effort in supporting Oxford Nanopore reads! I've been Salmon for quantification of ONT sequencing experiments, and recently I decided to dive deeper into how it produces counts for ONT data. The release with initial ONT support (v1.5.1) states that counts should be 100 for all transcripts because at that time it was not clear how EffectiveLength should be computed. However, now (when using release v1.10.1) Salmon produces some meaningful count estimates. I tried to figure out the algorithm by looking at the code, but failed... ; Is there a place where you have the said algorithm documented, or if not, could you please explain how is it implemented?; Thank you in advance!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/924:270,release,release,270,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/924,2,['release'],['release']
Deployability,"Hello!. I am trying to install Salmon on a M1-mac using bioconda. I have made a fresh install of conda 23.7.2. I have generated a specific channel for bioconda and I am following the instructions from the anaconda website for installation. . This is the bug I get when running: conda install -c bioconda salmon. nordin@Nordins-MacBook-Air ~ % conda create -n salmon salmon; Collecting package metadata (current_repodata.json): | DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; / DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; - DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/main/noarch/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/osx-arm64/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/main/osx-arm64/current_repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/noarch/current_repodata.json HTTP/1.1"" 304 0; done; Solving environment: unsuccessful attempt using repodata from current_repodata.json, retrying with next repodata source.; Collecting package metadata (repodata.json): - DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; DEBUG:urllib3.connectionpool:Starting new HTTPS connection (1): repo.anaconda.com:443; / DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/osx-arm64/repodata.json HTTP/1.1"" 304 0; DEBUG:urllib3.connectionpool:https://repo.anaconda.com:443 ""GET /pkgs/r/noarch/repodata.json HTTP/",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/871:23,install,install,23,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/871,4,['install'],"['install', 'installation']"
Deployability,"Hello!. I am very new to using Salmon and apologise if this issue has arisen elsewhere! I'm just looking to ensure I'm not doing anything sketchy before progressing with some RNASeq analysis following transcript quantification... Salmon version: v1.2.1; Index: Hg38 salmon_sa_index sourced from https://refgenomes.databio.org/#hg38. I have run Salmon on whole transcriptome RNASeq data as follows:; `salmon quant -i ${index} -l ISR -1 ${sampleR1} -2 ${sampleR2} \; --gcBias \; --validateMappings \; --writeMappings \; --writeUnmappedNames \; -o ${quants}/${rundate}_Salmon/${rundate}_${runid}_${indexpair}_quant`. Upon importing `quant.sf`files into R with `tximeta` and executing the function `summarizeToGene()` for` DESeq2` analysis I've been checking the validity of my top hits and have run into some confusion surrounding how to best handle counts assigned to an excessive number of alternate haplotypes/patches for some genes. These features have differing Ensembl gene IDs (but identical gene names) and are evidently not duplicate sequences as they have not been collapsed by salmon and differ in length. Gene counts are dispersed across different combinations of these haplotypes across samples, which isn't very amenable to gene level differential expression analysis. The KIR locus (which is notoriously confusing and full of differing gene content haplotypes) is of particular interest to us and influenced precisely by this issue. As shown below, there are 34 versions of _KIR3DL2_ assigned gene counts across our samples:. `> rowRanges(gse)[grep(""KIR3DL2"", rowRanges(gse)$gene_name)]`; [KIR3DL2.txt](https://github.com/COMBINE-lab/salmon/files/4883051/KIR3DL2.txt). The salmon counts look like this:; `assays(gse)$counts[grep(""KIR3DL2"", rowRanges(gse)$symbol),][,1:5]`; [counts.txt](https://github.com/COMBINE-lab/salmon/files/4883045/counts.txt). There are around 500 other genes in which this occurs also (including all KIRs and HLAs), with no clear ""dominant"" haplotype to which the ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/544:910,patch,patches,910,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/544,1,['patch'],['patches']
Deployability,"Hello!. I'm packaging salmon and many of its dependencies for Debian in support of https://github.com/Blahah/transrate/issues/160. I have a messy patch to enable the use of external libraries instead of bundled or downloaded copies at http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/dependency-fix. As I'm not a CMake expert I was only able to make it work for Debian instead of a generic solution that would fall back to the shipped copies or downloading as it is now. Perhaps you all are better with CMake than I am? A generic solution would be best so I don't have to adjust the patch with every change to the CMakeLists.txt. Specifically it would be great to support; - [ ] external copy of spdlog headers and the cereal serialization headers; - linking to external dynamic libraries for; - [ ] boost; - Headers: https://packages.debian.org/sid/amd64/libboost1.58-dev/filelist; - Sample library layout: https://packages.debian.org/sid/amd64/libboost-filesystem1.58-dev/filelist; - [ ] bwa; - Headers & library: https://ftp-master.debian.org/new/bwa_0.7.12-5.html; - [ ] jellyfish; - Headers & library: https://packages.debian.org/sid/amd64/libjellyfish-2.0-dev/filelist; - [ ] tbb; - Headers & library: https://packages.debian.org/sid/amd64/libtbb-dev/filelist; - [ ] libgff; - Headers & library: https://ftp-master.debian.org/new/libgff_1.0-1.html; - [ ] staden IOLib; - Headers & library: https://packages.debian.org/sid/amd64/libstaden-read-dev/filelist. I also have a patch to support the latest release of jellyfish that I can turn into a pull request, should you want it: http://anonscm.debian.org/cgit/debian-med/salmon.git/plain/debian/patches/jellyfish-update. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/19:146,patch,patch,146,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/19,7,"['patch', 'release', 'update']","['patch', 'patches', 'release', 'update']"
Deployability,"Hello!. We are currently using Salmon as part of a very large data processing system. We need to continuously test the end-to-end functionality of our system, which includes a Salmon execution. Unfortunately, this increases our build time from 5 minutes to an hour and a half. It'd be really, really excellent if we could have a way to _simulate_ a Salmon run to verify the correct installation of Salmon and the Salmon-compatible collection of our input data without actually having to do the full Salmon run. Is there any chance you'd consider adding a `--dry-run` argument to run Salmon without actually running the big crunch? Ideally this could also output some dummy results files, but it doesn't have to if you don't like that. Thoughts?. Related: https://github.com/data-refinery/data-refinery/issues/106",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/189:97,continuous,continuously,97,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/189,2,"['continuous', 'install']","['continuously', 'installation']"
Deployability,"Hello, . while setting ressources for alevin test using: https://combine-lab.github.io/alevin-tutorial/2018/setting-up-resources/. generation of mapping file txp2gene.tsv using given instruction is broken:. ```; c6builder:salmon/1.3.0 > wget -q ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_31/gencode.v31.primary_assembly.annotation.gtf.gz; c6builder:salmon/1.3.0 > bioawk -c gff '$feature==""transcript"" {print $group}' <(gunzip -c gencode.v31.primary_assembly.annotation.gtf.gz) | awk -F ' ' '{print substr($4,2,length($4)-3) ""\t"" substr($2,2,length($2)-3)}' - > txp2gene.tsv; /mount/gensoft2/exe/bioawk/1.0/bin/bioawk: illegal field $(), name ""group""; input record number 7, file /proc/self/fd/14; source line number 1; ```. https://github.com/COMBINE-lab/salmon/issues/336#issuecomment-496251814 point to bioawk modification that allows to generate `txp2gene.tsv`. please update docs !. regards. Eric",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/584:894,update,update,894,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/584,1,['update'],['update']
Deployability,"Hello, I am trying to install this Salmon 0.11.3 from source but I am running into the following error when running make:. [ 80%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd2c): warning: the use of `tempnam' is dangerous, better use `mkstemp'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::conflicting_options(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x5318): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x53b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xd13f): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::processQuantOptions(SalmonOpts&, boost::program_options::variables_map&, int)':; SalmonUtils.cpp:(.text+0xeb97): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0xec0a): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xf846): more undefined references to `boost::program_options",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/309:22,install,install,22,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/309,2,['install'],['install']
Deployability,"Hello, I'm debugging a salmon install problem with conda. I don't have time to double check, but it looks something like:. * if you install salmon 1.1.0, you get a version of tbb, 2021.1.1, from conda-forge ; * if you then try to upgrade to salmon 1.4.0, you actually want to get a different version of tbb from defaults, but the version pinning doesn't require it so it sticks with conda-forge; * if you force `tbb==2020.3` for salmon 1.4.0, things work; * if you don't, you get `salmon: error while loading shared libraries: libtbb.so.2: cannot open shared object file: No such file or directory`. The error shows up with:; `tbb 2021.1.1 h4bd325d_0 conda-forge`. and the functioning version of tbb seems to be:; `tbb 2020.3 hfd86e86_0 defaults`. I don't have time to chase this down further at the moment, but hopefully this will be sufficiently clear for me to figure it out later :)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/637:30,install,install,30,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/637,3,"['install', 'upgrade']","['install', 'upgrade']"
Deployability,"Hello, I'm trying to generate an index from a transcriptome, that was generated by StringTie, with salmon, but I'm getting the following error. What could be the problem?. # salmon index -t /home/...out.gtf -i /home/...salmon-index. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; [2018-05-23 10:37:53.715] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; Elapsed time: 0.0602932s. Replaced 0 non-ATCG nucleotides; Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 3.7924e-05s; Writing sequence data to file . . . done; Elapsed time: 1.7461e-05s; [info] Building 32-bit suffix array (length of generalized text is 0); Building suffix array . . . FAILURE: return code from libdivsufsort() was -1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/224:265,upgrade,upgrade,265,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/224,2,['upgrade'],"['upgrade', 'upgrades']"
Deployability,"Hello, I'm trying to install Salmon on my CentOS 7 system, as suggested here:; https://salmon.readthedocs.io/en/latest/building.html#installation. I decided to get the cmake `-DFETCH_BOOST=TRUE` option, in spite of having installed Boost. ; I get this error (here is the full log):. `cmake -DFETCH_BOOST=TRUE`. > Salmon requires g++ 5.2 or greater. https://pastebin.com/UmVJw0Ae. This is particularly odd.; I have installed a recent GCC version and even rebuilt Boost after it... As you can see, if I type . > gcc --version; > g++ --version. By root and user, I always get... > gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and . > g++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-36); Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. On another tutorial, I found that I should open a bash instead while installing gcc/g++, with the instruction:. `scl enable devtoolset-7 bash`. When I run . > gcc --version; > g++ --version. By root and user, this time the proper version is recognised!. > gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. and. > g++ (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5); Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. As you can see, this time the latest version is recognised. I'm quite sure the bash was open even when I rebuilt Boost... But even though I re-open the bash before cma",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/388:21,install,install,21,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/388,4,['install'],"['install', 'installation', 'installed']"
Deployability,"Hello,. Hoping you can help troubleshoot a salmon quant failure. We're running V0.9.1. BAM files are transcriptome aligned using OSA aligner. The program is calling out a malformed key:pair? The salmon_quant.log is blank. > ./bin/salmon quant -t transcripts.fa -l A -a A549_S1_001.bam -o A549_S1_quant &; [1] 10291; us1salxngst01> Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (alignment-based) v0.9.1; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { A549_S1_001.bam }; # [ output ] => { A549_S1_quant }; Logs will be written to A549_S1_quant/logs; Malformed key:value pair at line 44017: ""@PG ID:OSA IsCdna:True ; ReferenceLibraryID:Human.B37.3_RefGene20121217 VN:7.2""; ============; Exception : [ERROR: Failed to open file A549_S1.bam, exiting!]; ============; ./bin/salmon alignment-quant was invoked improperly.; For usage information, try ./bin/salmon quant --help-alignments; Exiting.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/222:363,upgrade,upgrade,363,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/222,2,['upgrade'],"['upgrade', 'upgrades']"
Deployability,"Hello,. I am doing my best to get the pigx-rnaseq workflow to install locally. Sadly, pigx' test routines bail out with a complaint on a missing sa.bin file as part of the files that are created by `salmon index`. I had tried salmon 1.2 and salmon 1.3 - no sa.bin, also not in your source tree. I placed this as an issue [here](https://github.com/BIMSBbioinfo/pigx_rnaseq/issues/78) and besides grepping through your source tree did some reading also on https://salmon.readthedocs.io . Still, I have no indiation about a missing option or so or if that file was only created in an earlier version. Did I miss this somewhere? Otherwise please kindly consider to explain as part of your documentation what files are to be expected in the index folder. Many thanks and regards,; Steffen",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/553:62,install,install,62,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/553,1,['install'],['install']
Deployability,"Hello,. I am having a problem with an inconsistent segmentation fault: 11. Please see below. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; I've only worked in salmon mode. **Describe the bug**; Following the tutorial procedure exactly, I'm experiencing seemingly random segmentation fault: 11 warnings on some alignments but not others. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. Salmon was installed yesterday through the getting started tutorial using the conda install method. The sample data downloaded fine using the provided scripts, and the index creation seemed normal. When I went to run the program (with the options given in the tutorial), 10 of the 16 alignments failed with a segmentation fault: 11 warning. Attached is a screen shot of the warning on one of the failed alignments. the quant.sf files of the successful alignments seem normal, and the files do not exist in the faulted samples. . To test repeatability, I deleted all of the quant files, and ran the program again. Again, most samples failed, and the samples that did not we different from the first run. **Expected behavior**; I expected all of the tutorial samples to produce quant.sf files successfully. **Desktop (please complete the following information):**; - OSX 10.13.3. Thank you,; Matt",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/295:515,install,installed,515,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/295,2,['install'],"['install', 'installed']"
Deployability,"Hello,. I recently updated to 1.3.1 and I have been trying to set minScoreFraction to 0.7. However when i try to set this value I get an error stating it is an unknown option. Anyone else have this issue?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/549:19,update,updated,19,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/549,1,['update'],['updated']
Deployability,"Hello,. I was using Salmon 1.10 for quantifying some of my RNA-seq datasets, against a custom transcriptome. The transcriptome has 89109 transcripts, but the final quant.sf file has 88119. I am wondering how some of the transcripts(990) are missing from the quant.sf. Does this mean that, they are not fully mapping against the transcriptome? In that case, shouldn't they be reported with a zero TPM?; Do you recommend I upgrade the version?. Thank you in advance.; Gayathri",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/800:421,upgrade,upgrade,421,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/800,1,['upgrade'],['upgrade']
Deployability,"Hello,. Thanks for creating this efficient and rapid tool. I have earlier used Salmon in alignment based-mode and now trying the mapping based mode. I get a ""Version Server Response:Not found"" message on quantification of fast read. I suspect the problem is with my index but I am not entirely sure what exactly. I installed salmon version 1.10.1 from Bioconda, and built the index, which appeared to have executed successfully. Below is the trail of commands:. (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % conda install -c bioconda salmon. Building decoy aware index; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % grep ""^>"" ../rna_seq_trial/GRCh38.primary_assembly.genome.fa | cut -d "" "" -f -1 > decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % less decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % sed -i.bak -e 's/>//g' decoys.txt; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % cat ../rna_seq_trial/gencode.v43.transcripts.fa ../rna_seq_trial/GRCh38.primary_assembly.genome.fa > gentrome.fa; (salmonenv) nanaaffoh@kenneths-mbp-2 salmon % salmon index -t gentrome.fa -d decoys.txt -p 12 -i salmon_index --gencode. This results in successful building of the index. Then when I attempt a mapping based quantification for a paired end reads FW and RV, as below, I get therefor mentioned. salmon -i salmon_index -l A -1 $FW -2 $RV --validateMappings -o /Volumes/Ultra_Touch/malaria/Salmon/$FILEBASE/. The info.json file from the index folder has these contents:. {; ""index_version"": 4,; ""reference_gfa"": [; ""salmon_index""; ],; ""sampling_type"": ""dense"",; ""k"": 31,; ""num_kmers"": 2662886061,; ""num_contigs"": 37302977,; ""seq_length"": 3781975371,; ""have_ref_seq"": true,; ""have_edge_vec"": false,; ""SeqHash"": ""39d9ea9f308ee7e18cdb034c1d064c3a9722df115147533a2ec237fb7cecfca9"",; ""NameHash"": ""29a75bc06784c090e5e015d4a5a7e895b7b3d91c9855a10528ee0130377edf3d"",; ""SeqHash512"": ""4e84aa54ec0cb1dad420c66197d8a9485e913b0a60805f2d7e44ce71ad0521b8103cf94dad72e1530b05dc0d08f39e5d4b9225345d8e7ffc60cb5",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/851:315,install,installed,315,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/851,2,['install'],"['install', 'installed']"
Deployability,"Hello,; I come back to Salmon after a few months, and meet an issue I did not before. First of all, I upgraded from version 1.2 to 1.3; Salmon refuse to index, and I am not quite sure why. I followed the ""selective alignment tutorial"", which worked before (although with different genomes). Here are the commands (I checked the md5sum of both assembly and transcripts and they are fine). grep ""^>"" <(gunzip -c ../../../Genomes/GRCm38.primary_assembly.genome.fa.gz) | cut -d "" "" -f 1 > decoys.txt; sed -i.bak -e 's/>//g' decoys.txt; cat ../../../Genomes/gencode.v35.transcripts.fa.gz ../../../Genomes/GRCh38.primary_assembly.genome.fa.gz > gentrome.fa.gz; salmon index -t gentrome.fa.gz -d decoys.txt -p 4 -i salmon_index --gencode. All I get is a long list of warning:. Version Info: This is the most recent version of salmon.; [2020-10-14 18:04:19.244] [jLog] [info] building index; out : salmon_index; [2020-10-14 18:04:19.244] [puff::index::jointLog] [info] Running fixFasta. [Step 1 of 4] : counting k-mers; [2020-10-14 18:04:21.116] [puff::index::jointLog] [warning] Entry with header [ENST00000473810.1|ENSG00000239255.1|OTTHUMG00000157482.1|OTTHUMT00000348942.1|AC007620.1-201|AC007620.1|25|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping) ; [2020-10-14 18:04:21.247] [puff::index::jointLog] [warning] Entry with header [ENST00000603775.1|ENSG00000271544.1|OTTHUMG00000184300.1|OTTHUMT00000468575.1|AC006499.8-201|AC006499.8|23|processed_pseudogene|], had length less than equal to the k-mer length of 31 (perhaps after poly-A clipping) . and also (this is normal for long ncRNA I guess). [2020-10-14 18:19:30.936] [puff::index::jointLog] [warning] Entry with header [ENST00000674361.1|ENSG00000241743.4|OTTHUMG00000022220.5|OTTHUMT00000530527.1|XACT-203|XACT|347561|lncRNA|] was longer than 200000 nucleotides. This is probably a chromosome instead of a transcript. And then it all breaks. [2020-10-14 18:20:34.751] [puff::index::joi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/572:102,upgrade,upgraded,102,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/572,1,['upgrade'],['upgraded']
Deployability,"Hello,; I would like to use alevin for quantification of 10x 5' PE. 10x 5' PE contains cDNA in read1 as well as read2. Could you tell me how to specify the --read-geometry to use both read1 and read2 for quantification. The configuration of the library is as follows; read1 BC16bp-UMI10bp-TSO13bp-cDNA5'; read2 cDNA3'. I tried the following library options, but I got ""Total 0.00 UMI after deduplicating.; `-l ISF --bc-geometry 1[1-16] --umi-geometry 1[17-26] --read-geometry ""1[40-end]2[1-end]""`. I also tried `""1[40-end] 2[1-end]""` and `""1[40-end],2[1-end]""` by changing the delimiter, but they were not quantified in the same way. On the other hand, ""1[40-end]"" and ""2[1-end]"" were quantified well. Best,; Yoshi",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/886:224,configurat,configuration,224,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/886,1,['configurat'],['configuration']
Deployability,"Hello,; I'm running in to problems trying to run salmon quant. I've installed the latest version 0.11.2 via bioconda, and successfully constructed an index of the C. elegans Wormbase WS265 transcriptome with the following settings:. `salmon index -k 21 -p 24 -t ${txome_reference} -i ${index_path}`. but upon running quant with the following command:. `salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; `. I get a segmentation fault error midway through running:. ```hits: 122146249, hits per frag: 2.10747; processed 58500001 fragments; hits: 123209453, hits per frag: 2.11344; processed 59000000 fragments; hits: 124280773, hits per frag: 2.10932. /cm/local/apps/slurm/var/spool/job28571481/slurm_script: line 39: 1187 Segmentation fault salmon quant -i ${index_path} -o ${out_prefix} -l IU -1 ${mate1_reads} -2 ${mate2_reads}; ```. If it helps I'm running this on the following SRA data:; > SRR016679; > SRR016680; > SRR016681. This is running on a CentOS release 6.9 cluster. The script in which salmon is being called is being run through SLURM 17.11.7 workload management software. I tried installing a older version of salmon ( 0.9.1 ) through conda and ended up with the same error running that version. ; I've also tried downloading the source and compiling, but am running in to an error upon calling make:. ```libtool: compile: /usr/bin/cc -DHAVE_CONFIG_H -I. -I.. -I.. -MT libstaden_read_la-cram_io.lo -MD -MP -MF .deps/libstaden_read_la-cram_io.Tpo -c cram_io.c -o libstaden_read_la-cram_io.o; cram_io.c:66:18: error: lzma.h: No such file or directory; cram_io.c: In function 'lzma_mem_deflate':; cram_io.c:1389: error: 'LZMA_OK' undeclared (first use in this function); cram_io.c:1389: error: (Each undeclared identifier is reported only once; cram_io.c:1389: error: for each function it appears in.); cram_io.c:1389: error: 'LZMA_CHECK_CRC32' undeclared (first use in this function); cram_io.c: In function 'lzma_mem_inflate':; cram_io.c:1399: er",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/268:68,install,installed,68,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/268,2,"['install', 'release']","['installed', 'release']"
Deployability,"Hello,; We have fastq files from an Illumina stranded human mRNA library (QC ok), sequenced on novaseq X in paired end (QC ok). But when we align with salmon, we only have 50% of reads aligned. Illumina certifies that they manage to align them with their tools at 72%, but we cannot reproduce with salmon1.10.2 installed with bioconda. We used the code:; salmon quant -i human_index -l ISR -1 Fastq/R1 -2 Fastq/R2 -p 8 --validateMappings -o SALMON_OUT. If anyone can help us increase this alignment %.; Thank you for your help.; Cecile",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/905:311,install,installed,311,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/905,1,['install'],['installed']
Deployability,"Hello,; salmon 0.11.1, on CentOS 7.; Tested with install from precompiled binaires, and from bioconda/conda 4.5.9. (1) salmon -h is fine, but salmon [command] -h takes lots of time, and ends up with; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon. It could be related to any bad local proxy settings. Is there any way to skip the upgrade information lookup as a command-line option ?. (2) segmentation error with alevin; ### salmon (single-cell-based) v0.11.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ threads ] => { 10 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /path/to/sample_S1_L001_R1_001.fastq.gz }; ### [ mates2 ] => { /path/to/sample_S1_L001_R2_001.fastq.gz }; ### [ index ] => { /path/to/salmonIndex }; ### [ output ] => { alevin_output }; ### [ tgMap ] => { tx2gene.tsv }. [2018-08-03 14:31:41.793] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2018-08-03 14:31:41.810] [alevinLog] [info] Processing barcodes files (if Present) ; processed 109 Million barcodes; segmentation error (core dumped). No any other logs available, programs stopped. Best,; juugii.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/264:49,install,install,49,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/264,4,"['install', 'upgrade']","['install', 'upgrade', 'upgrades']"
Deployability,"Hey all,. I'm currently attempting to install Salmon from source on a machine running Ubuntu 16.04. I'm following along with the installation instructions (http://salmon.readthedocs.io/en/latest/building.html#installation); however, I am running into errors when running cmake:. michael@thinkpad:/opt/salmon/salmon-0.8.2/build$ cmake -DFETCH_BOOST=TRUE; CMake Error: The source directory ""/opt/salmon/salmon-0.8.2/build"" does not appear to contain CMakeLists.txt.; Specify --help for usage, or press the help button on the CMake GUI. I tried to fix the issue by moving CMakeLists.rxt from the parent directory into the build directory, but I was met with even more errors, I've attached the created CMakeError.log and CMakeOutput.log file. [CMakeOutput.txt](https://github.com/COMBINE-lab/salmon/files/1109023/CMakeOutput.txt); [CMakeError.txt](https://github.com/COMBINE-lab/salmon/files/1109022/CMakeError.txt). I'm thinking that this may be a simple issue that I've overlooked as I'm new to Linux, and installation using CMake is new to me.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/139:38,install,install,38,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/139,4,['install'],"['install', 'installation']"
Deployability,"Hey, . First, thanks a lot for implementing Alevin for the analysis of scRNA-seq, it is super useful. I would like to open the file ```alevin/quants_tier_mat.gz``` but I am not being able to do it. . When I try to follow the parser instructions [here](https://github.com/k3yavi/vpolo/blob/242b519ea47eae1cce14bb3bafb736a1f3ad7d40/vpolo/alevin/parser.py) I am facing this error when importing sce:; ```; ImportError: cannot import name 'sce' from partially initialized module 'sce' (most likely due to a circular import) (/home/egonie/.local/lib/python3.8/site-packages/sce/__init__.py); ```. I have already imported```vpolo``` which I have installed with: ; ```; pip3 install vpolo; ```. Also I have tested the R library ```fishpond```with the function; ```; fishpond::readEDS(numOfGenes = num.genes, numOfOriginalCells = num.cells, countMatFilename = tier.file, tierImport = T); ```; Which outputs this message:; ```; Error in validObject(x) : ; invalid class ""dgCMatrix"" object: all row indices must be between 0 and nrow-1; ```. Any insight that helps in reading Alevin tiers file would be much appreciated. Thanks in advance and sorry for the inconveniences. Best,. Kike",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/596:640,install,installed,640,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/596,2,['install'],"['install', 'installed']"
Deployability,"Hey,. I'm pretty new to RNA-seq so hope this question is formatted okay! . I've carried out my RNA-seq analysis using STAR into feature counts but wanted to redo the analysis using Salmon as everything I'm reading says its the way forward! I've tried to create a genome index using the following files. ``; wget http://ftp.ensembl.org/pub/release-103/fasta/cricetulus_griseus_picr/cdna/Cricetulus_griseus_picr.CriGri-PICR.cdna.all.fa.gz; wget http://ftp.ensembl.org/pub/release-103/fasta/cricetulus_griseus_picr/dna/Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz; ``; Then I created the decoy file and the combined file them using the following. ; `; grep ""^>"" <(zcat Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz) | cut -d "" "" -f 1 > decoys.txt; cat Cricetulus_griseus_picr.CriGri-PICR.cdna.all.fa.gz Cricetulus_griseus_picr.CriGri-PICR.dna.nonchromosomal.fa.gz > gentrome.fa.gz; `; And finally ran the index using ; `./salmon index -t /data/fcr18ab/Refrence/New_Refrence_Files/gentrome.fa.gz -d /data/fcr18ab/Refrence/New_Refrence_Files/decoys.txt -p 1 -i /fastdata/fcr18ab/Adrian_salmon_index/salmon_index `. The error I get is shown below in the file. It says it can't find any of the decoy sequences in the combined file, but I have searched through them and they are there?. [Super_Low.txt](https://github.com/COMBINE-lab/salmon/files/6254711/Super_Low.txt). Sorry if this is a super simple issue. The cell line is a cancer cell which has not got defined chromosomes. I'm sure its me messing up somewhere but I can't figure out where!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/644:339,release,release-,339,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/644,2,['release'],['release-']
Deployability,"Hi ,. I am getting following error while installing salmon:. [ 86%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd30): warning: the use of `tempnam' is dangerous, better use `mkstemp'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::conflicting_options(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x355e): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x35fc): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::option_dependency(boost::program_options::variables_map const&, char const*, char const*)':; SalmonUtils.cpp:(.text+0x3911): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; SalmonUtils.cpp:(.text+0x39b7): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o): In function `salmon::utils::validateOptionsMapping_(SalmonOpts&, boost::program_options::variables_map&)':; SalmonUtils.cpp:(.text+0xec56): undefined reference to `boost::program_options::abstract_variables_map::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const'; libsalmon_core.a(SalmonUtils.cpp.o):SalmonUtils.cpp:(.text+0xec92): more undefined references to `boost::program_options::abstract_variables_map::operator[](std::__cxx11:",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/551:41,install,installing,41,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/551,2,['install'],"['install', 'installing']"
Deployability,"Hi :). I was already successfully using Salmon before, but unfortunately a storage node of the computing cluster I am using crashed and now I am running into trouble re-installing it. . I downloaded ""salmon-master.zip"", unzipped it and changed into the salmon-master folder. Further, I ran the following command:. > cmake -DCMAKE_INSTALL_PREFIX=/scratch/hpc-prf-ptma2/ptma2001/salmon-master -DFETCH_BOOST=TRUE. The configuration starts, but finally runs into the following error:. > -- Configuring done; > CMake Error: The following variables are used in this project, but they are set to NOTFOUND.; > Please set them or make sure they are set and tested correctly in the CMake files:; > CURL_LIBRARY; > linked by target ""salmon"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > linked by target ""unitTests"" in directory /scratch/hpc-prf-ptma2/ptma2001/salmon-master/src; > ; > -- Generating done; > CMake Generate step failed. Build files cannot be regenerated correctly. Would you have an idea how I could circumnavigate that issue?. Thanks a lot in advance for your time and help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/729:169,install,installing,169,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/729,2,"['configurat', 'install']","['configuration', 'installing']"
Deployability,"Hi @rob-p ! I try to install Salmon on macOS M1 Max with hombrew (brewsci) ; but I guess the formula is the UNIX one on it. I got :. ```; Benjamin@macbook-pro ~ % brew install salmon ; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v1.3.0.tar.gz; Already downloaded: /Users/Benjamin/Library/Caches/Homebrew/downloads/b27a343a5c5128c674be4986b6c0bb348bc77d521662866976898bd4768fd8bb--salmon-1.3.0.tar.gz; ==> Installing salmon from brewsci/bio; ==> cmake .; Last 15 lines from /Users/Benjamin/Library/Logs/Homebrew/salmon/01.cmake:; Build system will fetch and use JEMalloc; ==================================================================; CPACK_SOURCE_IGNORE_FILES = /src/PCA.cpp;/src/PCAUtils.cpp;/build/;/scripts/AggregateToGeneLevel.py;/scripts/ExpressionTools.py;/scripts/GenerateExpressionFiles.sh;/scripts/ParseSoftFile.py;/scripts/PlotCorrelation.py;/scripts/junk;/scripts/sfstrace.log;/scripts/SFPipeline.py;/bin/;/lib/;/sample_data/;PublishREADMEToWebsite.sh;/external/;/src/obsolete/;/include/obsolete/;WebsiteHeader.txt;/experimental_configs/;.git/; CC: /opt/homebrew/Library/Homebrew/shims/mac/super/clang; CC version: ; version: 1.0.0; Building basic pufferfish components for salmon; setting -DHAVE_NUMERIC_LIMITS128; -- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) ; -- Could NOT find Jemalloc (missing: JEMALLOC_LIBRARY JEMALLOC_INCLUDE_DIR) ; NO_IPO = FALSE; TBB_LIBRARIES = /tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbb.dylib;/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/external/install/lib/libtbbmalloc.dylib; -- Configuring incomplete, errors occurred!; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeOutput.log"".; See also ""/tmp/salmon-20220630-57321-j1f2iv/salmon-1.3.0/CMakeFiles/CMakeError.log"". Do not report this issue to Homebrew/brew or Homebrew/core!. Benjamin@macbook-pro ~ % salmon ; zsh: exec format error: salmon; Benjamin@macbook-pro ~ % ; ```; I try via bioconda but I got a HT",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/787:21,install,install,21,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787,3,"['Install', 'install']","['Installing', 'install']"
Deployability,"Hi @rob-p @k3yavi . A question (or feature enhancement); When I am doing salmon indexing, is there a metadata file that will capture info about the salmon version used for indexing. Why am I asking this: I am developing a high throughput pipeline (with bbmap, bbduk, etc and then salmon) where I use salmon 1.1.0 for quantification - in this scenario, independent users have to build their own salmon indices and I want to trap/capture the situation where the user has used a different salmon version of indexing. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/498:238,pipeline,pipeline,238,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/498,1,['pipeline'],['pipeline']
Deployability,"Hi Rob, ; After successfully finishing my DE analysis on gene expression, I want to use the package IsoformSwitchAnalyzeR which as mentioned here [https://github.com/COMBINE-lab/salmon/issues/214](url) must utilize the `--keepDupicates ` argument when indexing the transcriptome with gencode annotations. As I read this only after, I need to re-run my analysis, but would *really* like to use the initial version 10.1 which I have installed as well as which is on the cluster. When I enter the conda environment, I receive an update that the newest version is available and I should update.. is there any way to force salmon to index the transcriptome with the current (10.1) version? . ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; salmon v0.10.1; ```; Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/262:431,install,installed,431,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/262,5,"['install', 'release', 'update', 'upgrade']","['installed', 'releases', 'update', 'upgrade']"
Deployability,"Hi Rob,. I've been trying to update the bioconda package, but I can't get it to build. The bioconda package pulls in gperftools so Salmon gets built with tcmalloc, to fix some problems over NFS on CentOS < 6: https://github.com/chapmanb/bcbio-nextgen/issues/1376 I can get that to work by pulling in libunwind, but I end up with a bunch of linking errors I don't know how to fix. I could use a hand debugging it. Alternatively, and maybe easier, we could use the Linux binary if it was built with tcmalloc. Is there any chance the Linux binary could get built with tcmalloc?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/89:29,update,update,29,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/89,1,['update'],['update']
Deployability,"Hi Salmon Support,. If I am only interested in the express level of some isoforms of a given gene, may I just run salmon pipeline on those transcripts? For example, there are 5 such isoforms, and I plan to just index a transcriptome file containing those 5 isoform transcript sequences and then run the salmon. Is it legitimate?. Thanks a lot. C.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/773:121,pipeline,pipeline,121,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/773,1,['pipeline'],['pipeline']
Deployability,"Hi Salmon team!; It's been a while since I've upgraded to the latest version (from 0.9.1), so I'm just trying to catch with all the new features.; Specifically, I have just one questions regarding generating the Salmon Index with versions 1.0.0+. I want to run Salmon as described in your latest paper, with Selective Alignment and with decoy sequences in mind. I am using Ensembl's genome FASTA and GTF, with added ERCC contigs. The transcriptome FASTA that I'm using is built from the previous two files using RSEM Prepare Reference tool. . To run Salmon Index with decoys in mind, I first ran into this page:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; where it's described that decoys are just contig names from the genome FASTA, and the gentrome FASTA is obtained by concatenating the transcriptome FASTA with the genome FASTA. ; And then I provide these two files (gentrome FASTA and the decoys file) to Salmon Index. Then I found this script; https://github.com/COMBINE-lab/SalmonTools/blob/master/scripts/generateDecoyTranscriptome.sh; where the gentrome FASTA is actually built by concatenating the transcriptome FASTA and the decoy FASTA, which is different than the main genome FASTA as in the first approach.; This script also demonstrates how to generate this decoy FASTA, which is more in line with what's written in your paper!. Finally, the SalmonTools page; https://github.com/COMBINE-lab/SalmonTools; says (near the bottom) that the generateDecoyTranscriptome.sh is not needed anymore. ; I suppose this means that the first approach is how to go on about this? ; To just concatenate the transcriptome FASTA and the genome FASTA? . Salmon Index accepts the gentrome FASTA as an input, and the decoys file, which should now be just the contig names from the genome FASTA, correct?. After trying this exact approach, with the Ensembl's genome FASTA and GTF, with added ERCC contigs and the transcriptome FASTA built from these files with RSEM Prepare Refer",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/481:46,upgrade,upgraded,46,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/481,1,['upgrade'],['upgraded']
Deployability,"Hi Salmon team. Are there plans afoot to support quantification of scRNA-seq data with unique molecular identifiers (UMIs)? UMIs are very commonly used in scRNA-seq data now, and correct quantification requires ""de-duplication"" of the reads so that each UMI is only counted once for expression quantification. Doing this is not entirely trivial, as a quick survey of tools available shows (e.g. [UMI-tools](https://github.com/CGATOxford/UMI-tools), [umitools](https://github.com/brwnj/umitools), [umis](https://github.com/vals/umis), [umi](https://github.com/aryeelab/umi/wiki)). . Nevertheless, it would be _very_ convenient for those Salmon fans amongst us dealing with scRNA-seq data to be able to process scRNA-seq data with UMIs directly with Salmon. Selfishly, this would be awesome for the Salmon integration with the scater package (now fully implemented). . Not to make a thing of it, but kallisto is now providing some support for UMI quantification (https://pachterlab.github.io/kallisto/singlecell.html) ;P. Best; Davis",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/93:804,integrat,integration,804,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/93,1,['integrat'],['integration']
Deployability,"Hi `COMBINE-lab/salmon`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! Whilst we've attempted to make use of the existing configuration that you had on LGTM.com, there may be some differences in environment used to build the project. We hope that in most cases it will not require significant changes to achieve a successful analysis. Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation on how to configure a CodeQL workflow. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request — to flag up potential secu",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/815:136,integrat,integrated,136,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/815,2,['integrat'],['integrated']
Deployability,"Hi all,. I'm working on setting up alevin as part of a single-cell RNA-seq analysis pipeline, and I'm running into problems with the gene-transcript mapping. . The issue is basically the same as in a previous thread [here](https://github.com/COMBINE-lab/salmon/issues/122#issuecomment-283473242), in which the Ensembl cDNA fasta file contains some noncoding transcripts that are not present in the corresponding GTF file. I am using Ensembl release 95 (ftp://ftp.ensembl.org/pub/release-95/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh38.cdna.all.fa.gz and ftp://ftp.ensembl.org/pub/release-95/gtf/homo_sapiens/Homo_sapiens.GRCh38.95.gtf.gz). In the case of Salmon it was suggested to just filter the gene-level quantification file after the fact; however, this isn't possible with Alevin, because it appears to enforce a complete mapping and to crash if it is incomplete. The only solution I can come up with is to manually identify which transcripts are not present in the GTF and filter them out of the fasta file before indexing, but this is really a pain and not a very reproducible solution (it would have to be re-done for every new version, etc.). I would suggest enabling the option to just not include transcripts that don't have a gene-level mapping; however, I'm also open to other suggestions. Thanks for your help and for working on such a great tool!; Sarah",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/336:84,pipeline,pipeline,84,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/336,4,"['pipeline', 'release']","['pipeline', 'release', 'release-']"
Deployability,"Hi all,. My group is developing a pipeline and we frequently encounter standard ribo-depleted RNA sequencing panels, as well as IDT targeted panels. To that end, how does salmon handle on and off target quantifications? Would it be best to assume that any off target transcripts are ""low quality"" calls and we should remove them from analysis? . Is there any incoming updates or features you all may be thinking of to account for targeted captures of RNA?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/839:34,pipeline,pipeline,34,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/839,2,"['pipeline', 'update']","['pipeline', 'updates']"
Deployability,"Hi all,. So I'm having a similar problem to whats found in issue https://github.com/COMBINE-lab/salmon/issues/49. I'm want to see how much intron RNA is quantified in my experiment, but it seems like the number of ""transcripts"" (i.e. introns) from the fasta is too many. Any ideas as to how to approach this?. Best. ```; /labseq/tools/SalmonBeta-0.5.0_DebianSqueeze/bin/salmon index -t /labseq/Genomes/introns/hg19.introns.fasta -i /labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/ --type quasi ; ```. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains **important bug fixes**; please upgrade at your; earliest convenience.; ###; index [""/labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/""] did not previously exist . . . creating it; [2016-03-28 13:52:29.407] [jointLog] [info] computeBiasFeatures( {[/labseq/Genomes/introns/hg19.introns.fasta] , /labseq/Genomes/salmon/SalmonBeta-0.5.0_DebianSqueeze.quasi.intron/bias_feats.txt, 1, 24). readFile: /labseq/Genomes/introns/hg19.introns.fasta, ; file /labseq/Genomes/introns/hg19.introns.fasta: ; processed 659300 transcripts (4515) transcripts/snscripts/sipts/s transcripts/sts/s; [2016-03-28 13:54:55.658] [jointLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; counted k-mers for 650000 transcriptsElapsed time: 128.964s. Clipped poly-A tails from 0 transcripts; Building rank-select dictionary and saving to disk done; Elapsed time: 5.40482s; Writing sequence data to file . . . done; Elapsed time: 40.1748s; [info] Building 64-bit suffix array (length of generalized text is 4128215243 ); Building suffix array . . . ; success; saving to disk . . . done; Elapsed time: 358.792s; done; Elapsed time: 3065.92s; processed 3810000000 positionssalmon: /home/vagrant/salmon/external/install/include/sparsehash/internal/densehashtable.h:782: void google::dense_hashtable<Value, ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/53:665,release,releases,665,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/53,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,"Hi all. I'm doing a fairly simple RNA Seq experiment right now, but ran into a problem when trying to quantify reads from the chloroplast (A. thaliana). For the entire analysis, I am using the nf-core/rnaseq pipeline (default parameters) which gives me Alignment (STAR) based counts from Salmon at the end and additional counts from FeatureCounts. The whole pipeline runs without problems and the mapping looks good. When I compare the number of reads between Salmon and FeatureCounts, the results are pretty much the same for the nucleus, but for the chloroplast they differ dramatically (e.g. psbI or ATCG00080: Salmon: 24; FeatureCounts: 9277). Looking at the mapping, I would say that FeatureCounts is definitely closer to reality here. ; When I dig deeper, it seems that the genes with the biggest difference between the two analyses are very small genes (e.g. psbI is only 111bp) or tRNAs (which should be removed by the prep method; these would be excluded from the analysis anyway). ; I have now tried several things: I used the nf-core/rnaseq pipeline, skipping the alignment part (--skip_alignment) and using Salmon as a pseudo-aligner (--pseudo_aligner: salmon), which gave results for the chloroplast reads that are quite close to the alignment-based determination by Salmon (e.g. psbI: 372).; I also tried using the pseudo-alignment without the pipeline (indexing: salmon index -t input.fa -r transcripts_index -k 31 pseudomapping: salmon quant -i transcripts_index -l A -1 sequencingdata_R1.fastq.gz -2 sequencingdata_R2.fastq.gz --validate mapping - o transcripts.quant). The result was that the chloroplast numbers were now roughly between the salmon counts from the pipeline and the counts from the pipeline with FeatureCounts. I skipped the trimming part here, so differences are to be expected, but they still seem very high (e.g. psbI 2677).; First, I have no idea where the difference between counts with and without pipelines comes from. I tried to find out what parameters the p",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/798:208,pipeline,pipeline,208,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/798,2,['pipeline'],['pipeline']
Deployability,"Hi and thank you for helping,. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; alevin. **Describe the bug**; Running alevin on 10x v1 data results in the following error:; > [alevinLog] [info] Starting Import of the gene count matrix.; > Exception : [std::bad_alloc]; > alevin was invoked improperly. **To Reproduce**. * Salmon version: Release v0.11.3; * Installed from: Compiled. I also followed the instructions from the [alevin tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/) to compile the `scripts/v1_10x/wrapper.cpp` file; * Reference transcriptome: [Homo_sapiens.GRCh37.cdna.all.fa](ftp://ftp.ensembl.org/pub/grch37/release-83/fasta/homo_sapiens/cdna/Homo_sapiens.GRCh37.cdna.all.fa.gz); * Which read files were used? Either the [CD14+ Monocytes from the 10x v1 paper](http://s3-us-west-2.amazonaws.com/10x.files/samples/cell-exp/1.1.0/cd14_monocytes/cd14_monocytes_fastqs.tar) or the [PBMC 3k from the same paper](http://cf.10xgenomics.com/samples/cell-exp/1.0.0/pbmc3k/pbmc3k_fastqs.tar); * Which program options were used?; I ran the following command for the CD14 Monocytes dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon salmon alevin -l ISR -b ./fastq/fastqs/flowcell1/ --gemcode -i ./transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ./hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpCsvCounts; `; and the following one for the PBMC_3K dataset:; `~/software/salmon/scripts/v1_10x/run.sh ~/software/salmon/bin/salmon alevin -l ISR -b pbmc3k_fastqs/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o alevin_output --tgMap ../hg_transcriptome/tx2gene.tsv --dumpCsvCounts; `. **Screenshots**; CD14+ Monocytes shell log:; ```~/software/salmon/scripts/v1_10x/run.sh salmon alevin -l ISR -b ./fastqs/flowcell1/ --gemcode -i ../transcripts_index_salmon/ -p 8 -o ./fastq/test/ --tgMap ../hg_transcriptome/tx2tx.tsv --end 5 --umiLength 5 --barcodeLength 14 --dumpC",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/328:375,Release,Release,375,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/328,3,"['Install', 'Release', 'release']","['Installed', 'Release', 'release-']"
Deployability,"Hi everyone. As always, thanks for the great tools. . I have some split-seq data (from Parse Bio) that ran through the Parse Bio pipeline already (1 moving part at a time). I am trying to run it through Alevin and it keeps failing with printing to the screen:. > [2023-08-17 22:13:22.207] [alevinLog] [info] Done barcode density calculation.; > [2023-08-17 22:13:22.207] [alevinLog] [info] # Barcodes Used: 15722231 / 15722593.; > [2023-08-17 22:13:22.910] [alevinLog] [info] Total 545(has 201 low confidence) barcodes; > [2023-08-17 22:13:23.660] [alevinLog] [info] Done True Barcode Sampling; (some lines later); > [2023-08-17 22:14:04.046] [jointLog] [info] Computed 0 rich equivalence classes for further processing; > [2023-08-17 22:14:04.046] [jointLog] [info] Counted 0 total reads in the equivalence classes; > [2023-08-17 22:14:04.047] [jointLog] [info] Number of fragments discarded because they are best-mapped to decoys : 0; > [2023-08-17 22:14:04.083] [jointLog] [info] Mapping rate = 0%. It ultimately dies with a floating point error, probably for dividing by 0 somewhere. . The command I'm running is (and note that I have r1 and r2 swapped, per some other guidance. It dies earlier during barcode processing otherwise):. > salmon alevin -i /ref/gencode.v43.transcripts/ -l ISR -1 r2.fastq.gz -2 r1.fastq.gz -p 30 --splitseqV2 --tgMap /ref/gencode.v43_full.txMap -o salmon_output --expectCells 400. I tried to make it simpler and simpler, so that's a salmon index I made myself with no decoys, just the gencode transcript fasta with the software version I'm trying to run (salmon 1.10.2, from the combinelab/salmon docker hub), gencode v43 (I know, it's a version behind, but it's what I'm using elsewhere...) and hg38. It's handling the barcodes fine and recovering approximately the right amount (it's a sub-library with a few hundred cells to check the quality of the library before sequencing the full experiment). But it's failing to quantitate any of the reads. Oddly, just quant",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/867:129,pipeline,pipeline,129,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/867,1,['pipeline'],['pipeline']
Deployability,"Hi there,. I'm a newcomer here.; Salmon source was downloaded and extracted, new folder ""build"" has created, 'cmake ..' has also be done to confirm the feasibility of installation.; However, When I run the code ""sudo make"", it returns a error regarding downloading the package tbb-2019_U8, here is the report. ```; tbb-2019_U8.tgz: FAILED; sha256sum: WARNING: 1 computed checksum did NOT match; tbb-2019_U8.tgz did not match expected SHA256! Exiting.; CMakeFiles/libtbb.dir/build.make:107: recipe for target 'libtbb-prefix/src/libtbb-stamp/libtbb-download' failed; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-download] Error 1; CMakeFiles/Makefile2:253: recipe for target 'CMakeFiles/libtbb.dir/all' failed; make[1]: *** [CMakeFiles/libtbb.dir/all] Error 2; Makefile:179: recipe for target 'all' failed; make: *** [all] Error 2; ```; it seems the requirement isn't met and the threshold should be modified?; appreciate any help!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/497:167,install,installation,167,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/497,1,['install'],['installation']
Deployability,"Hi! I tried to update **_salmon_** by conda, but after update, **_salmon_** version was still 1.3.0. ```; (R40) [ymwang @ ~]$ salmon -v; salmon 1.3.0; (R40) [ymwang @ ~]$ conda install -c bioconda salmon; Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.8.4; latest version: 4.9.2. Please update conda by running. $ conda update -n base conda. # All requested packages already installed. (R40) [ymwang @ ~]$ salmon -v; salmon 1.3.0; ```; Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/604:15,update,update,15,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/604,6,"['install', 'update']","['install', 'installed', 'update']"
Deployability,"Hi, . I am using **salmon (v0.13.1)** to quantity RNA-seq data from two biological replicates. After running some exploratory data analyses, I observed a large discrepancy between the two replicates regarding the gene-wise distribution of read counts. The scatterplot below shows the log-read counts from these two biological replicates:. ![salmon v0.13.1 - Scatterplot](https://user-images.githubusercontent.com/26856909/58559326-dcea7d80-81f0-11e9-851a-db28b96b981e.png). After looking at these results, I checked the salmon log output and saw that the number of uniquely mapped reads for the second replicate had several trailing zeros added to it:. <img width=""358"" alt=""salmon v0.13.1 - Output"" src=""https://user-images.githubusercontent.com/26856909/58560225-b1689280-81f2-11e9-9d69-513a93fa47c5.png"">. *I have reproduced this analysis with both versions of salmon v0.12.0 and v0.9.1 and got pretty much the same results*. I would not expect to see such a huge difference between these two biological replicates and the number of uniquely mapped reads being greater than the total number of reads seemed odd to me. I have used the same pipeline to process other RNA-seq data and never had any issues like this so far. Any help would be appreciated.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/368:1142,pipeline,pipeline,1142,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/368,1,['pipeline'],['pipeline']
Deployability,"Hi, . [bulk mode] salmon 1.10.3; the error was reported in partial jobs when I used salmon to quantify the LR-RNA-seq data (It works normally on some samples). ; ; `singularity exec /public/home/b20223040336/Workspace/long_read_rna/02code/singularity_images/salmon:1.10.3--h6dccd9a_2 salmon quant --ont -p 10 -t /public/home/b20223040336/Workspace/long_read_rna/01data/references/GCF_002263795.3_ARS-UCD2.0_rna.fna -l U -a mammary.cistern_4_tran.all.bam -o /public/home/b20223040336/Workspace/long_read_rna/03Results/mammary.cistern/LR/mammary.cistern_4/02_expression/UCD_based`. ![image](https://github.com/user-attachments/assets/b5f2348d-1bbf-4a6b-8902-e72bf065e0ae). I don't know how to solve this problem. I tried to install salmon using different methods, But it still doesn't work.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/950:722,install,install,722,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/950,1,['install'],['install']
Deployability,"Hi, ; I am having an issue with quantifying my salmon quantify using the following script:. #!/bin/bash; # get input data; F=$(cat file_names.txt); for i in ${F}; do; F1=../processed_fastq/${i}_R1_001_val_1.fastq.gz; F2=../processed_fastq/${i}_R2_001_val_2.fastq.gz; echo ""performing salmon quant on ${i}""; salmon quant -i gencode_v43_index -l A -1 ${F1} -2 ${F2} -p 64 /; --validateMappings --writeUnmappedNames -o ${i}; echo ""finish quantifying ${i}""; done. And I got this error message :; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; (mapping-based mode) Exception : [the option '--output' is required but missing].; Please be sure you are passing correct options, and that you are running in the intended mode.; alignment-based mode is detected and enabled via the '-a' flag. Exiting.; quantify.sh: line 19: --validateMappings: command not found; finish quantifying . could you please assist me with that. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/854:517,UPGRADE,UPGRADE,517,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/854,4,"['UPGRADE', 'release', 'update', 'upgrade']","['UPGRADE', 'releases', 'updates', 'upgrade']"
Deployability,"Hi, ; I just downloaded the salmon.10.0 version and indexed my transcriptome using the https://www.gencodegenes.org/releases/current.html --> FASTA files --> trasnscript sequences. When I try to run Salmon I receive the above error message. The last time I ran Salmon I used 9.1 and this trasncriptome from ensembl ftp://ftp.ensembl.org/pub/release-92/fasta/homo_sapiens/cdna/...; What is going on here? . The header.json file looks like this: ; {; ""value0"": {; ""IndexType"": 1,; ""IndexVersion"": ""q3"",; ""UsesKmers"": true,; ""KmerLen"": 31,; ""BigSA"": false,; ""PerfectHash"": false; }; }",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/232:116,release,releases,116,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/232,2,['release'],"['release-', 'releases']"
Deployability,"Hi, ; I've been trying to run alevin for single cell data. I've been using test data and the salmon alevin command seems to work right until the end, and then the core is dumped just as counts are in the csv format. I've also tried running it without --dumpCsvCounts and this also results in a segmentation fault. . What I was running:; salmon alevin -l ISR -1 ./hgmm_100_S1_L002_001.fastq.1.gz -2 ./hgmm_100_S1_L002_001.fastq.2.gz --chromium -i geneset.dir/geneset_coding_exons.salmon.index -p 10 -o salmon.dir/hgmm_100_S1_L002_001 --tgMap transcript2geneMap.tsv --dumpCsvCounts. Final part of output:; Analyzed 287 cells (100% of all).; [2019-01-25 11:14:44.509] [alevinLog] [info] Total 46729.00 UMI after deduplicating.; [2019-01-25 11:14:44.509] [alevinLog] [warning] Skipped 63 barcodes due to No mapped read; [2019-01-25 11:14:44.529] [alevinLog] [info] Clearing EqMap; Might take some time.; [2019-01-25 11:14:44.561] [alevinLog] [info] Starting Import of the gene count matrix of size 224x19879.; [2019-01-25 11:14:44.576] [alevinLog] [info] Done initializing the empty matrix.; [2019-01-25 11:14:45.067] [alevinLog] [info] Done Importing gene count matrix for dimension 224x19879; [2019-01-25 11:14:45.770] [alevinLog] [info] Starting dumping cell v gene counts in csv format; Segmentation fault (core dumped) . I am running version 0.12.0 of salmon, installed via bioconda. I have also allocated 30GB of memory for the job, so this isn't a memory issue.; I have seen other users having similar issues using salmon quant having installed salmon through conda and the suggestions have been to install from binaries. This is not an option as salmon needs to be run easily using a conda environment. ; Has any headway been made into fixing the bioconda build?. Thanks,; Anna",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/337:1361,install,installed,1361,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/337,3,['install'],"['install', 'installed']"
Deployability,"Hi, ; This is my first time posting here. I have been trying to get Salmon to work for the past few days but kept running into the same issue (shown below). Any help or tips would be greatly appreciated!. **This bug/issue is primarily related to salmon in bulk mode.**. **Bug/issue Description**; I'm trying to use Salmon with precomputed indecies that I downloaded from the refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)), but when I pass in the index and my `.fastq.gz` files into Salmon I am encountering an error (shown below). . **To Reproduce**. - Used Salmon version 1.2.1; - Downloaded the index (aka the reference transcriptome from refgenie website (located [here](http://refgenomes.databio.org/v3/genomes/splash/2230c535660fb4774114bfa966a62f823fdb6d21acf138d4)).; - Attempted to pass in trimmed .fastq.gz files (the files were trimmed using the FASTQC quality control pipeline) using the following command. > `salmon quant -i default -l A -1 <(gunzip -c <path to .fastq.gz file>) -2 <(gunzip -c <path to .fastq.gz file>) --validateMappings -o salmon_output`. - Received error shown below. ![image](https://user-images.githubusercontent.com/67990244/126880016-0c556d6f-a4f6-4a4b-9906-29d9fc06e00d.png). **Expected behavior**; I expected this program to run normally and generate the quantification output files. . **Desktop (please complete the following information):**; - OS: RedHat Linux Enterprise; - More information in screenshot below; ![image](https://user-images.githubusercontent.com/67990244/126880058-d03a8247-7eea-4108-b2c2-0566ff2c975f.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/690:964,pipeline,pipeline,964,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/690,1,['pipeline'],['pipeline']
Deployability,"Hi, I am currently trying to update the version of Salmon in Debian to the latest version (0.7.x) and it seems that it now embeds a copy of the RapMap code that is mixed with the salmon code and compiled together. Unfortunately Debian policy discourages embedded code copies, and the preferred way of solving this would be to have RapMap build a shared library (and/or the necessary C++ headers) that can then be used by other tools like salmon to build against. This would allow for better separation and also probably allow other interested parties to make use of RapMap's functionality. Currently RapMap only builds an executable binary for the RapMap tool itself, which -- correct me if I'm wrong -- is not used in salmon.; I was wondering what your thoughts are on this. It would help tremendously IMHO. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/87:29,update,update,29,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/87,1,['update'],['update']
Deployability,"Hi, I follow the instructions for conda - mediated installation, it installs v 0.8.2 not v 0.9.1",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/194:51,install,installation,51,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/194,2,['install'],"['installation', 'installs']"
Deployability,"Hi, I'm just starting with RNA-Seq and tryed to install salmon on the HPC of my university. However I get following error message when recompiling with ""$ make"". . ```; [ 6%] Built target libbz2; [ 13%] Built target libgff; [ 19%] Built target libbwa; [ 26%] Built target libjellyfish; [ 27%] Performing build step for 'libstadenio'; Making all in io_lib; Making all in progs; libtool: link: /usr/bin/cc -o convert_trace convert_trace.o ../io_lib/.libs/libstaden-read.a -lz -lm -lpthread -llzma -lbz2; /usr/bin/ld: cannot find -lbz2; ../io_lib/.libs/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd26): warning: the use of `tempnam' is dangerous, better use `mkstemp'; collect2: error: ld returned 1 exit status; make[5]: *** [convert_trace] Fehler 1; make[4]: *** [all-recursive] Fehler 1; make[3]: *** [all] Fehler 2; make[2]: *** [libstadenio-prefix/src/libstadenio-stamp/libstadenio-build] Fehler 2; make[1]: *** [CMakeFiles/libstadenio.dir/all] Fehler 2; make: *** [all] Fehler 2. ```. Does this have anything to do with ""bzip2"" or ""libbz2"" and how would I provide missing paths to cmake?; I have bzip2 but not libbz2 availible on my system. I would be gratefull for any help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/216:48,install,install,48,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/216,1,['install'],['install']
Deployability,"Hi, I'm trying to install Salmon on a local server, but I get the following error:. ```[ 81%] Building CXX object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/rank9b.cpp.o; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp: In constructor ‘rank9b::rank9b(const uint64_t*, uint64_t)’:; /usr/local/salmon-0.9.1/external/install/src/rapmap/rank9b.cpp:41:53: warning: suggest parentheses around ‘-’ inside ‘<<’ [-Wparentheses]; counts[ pos + 1 ] |= ( c - counts[ pos ] ) << 63 - 9 * j;; ^; [ 82%] Building C object src/CMakeFiles/unitTests.dir/__/external/install/src/rapmap/bit_array.c.o; Linking CXX executable unitTests; /bin/ld: cannot find -lstdc++; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What can I do?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/235:18,install,install,18,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/235,5,['install'],['install']
Deployability,"Hi, such a fantastic RNA-seq analyze tool Salmon! Recently, I used Salmon to analyze transcript level expression and the information of my analyze tool:. - Salmon: v1.6.0 (install from bioconda); - STAR: 2.7.9a (install from bioconda). And the detailed commands:. - Salmon:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/da6f0253-4dea-4566-aca6-749d4532ccc4); and the transcript index is constructed with hg38 transcripts fasta download from GENCODE:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/a839ba99-d731-45e4-bdc4-85c37419cd9e). - STAR:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/f657043b-c16b-4629-8b41-71acf14fb768). All commands were evaluated with Centos system. After get the result file of Salmon, I tried to check the result in genome browser using BAM only with unique mapping reads produced by STAR. But I am confused with the following result:. According to salmon transript level TPM value, PPIE gene is tend to use longer isoform (the labelled value is TPM):; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/daea059a-f0eb-4ecd-bbe3-3d4714564bc8); But when I visualized this gene in genome browser, I found that their are few reads aligned to specific region of the longest transcript:; ![image](https://github.com/COMBINE-lab/salmon/assets/92142596/b4f6443f-319d-4e2c-8245-56941497ee2f). So, I'm confused about this result and search form some possible reasons. There are some people saying that because Salmon uses transcript index rather than genome index like STAR, so it can rescue more reads. But I would like to ask you for more advices, great thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/918:172,install,install,172,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/918,2,['install'],['install']
Deployability,"Hi, thanks for a great tool. I just noticed that contrary to previous releases, v1.8.0 does _not_ have a binary asset, cf. https://github.com/COMBINE-lab/salmon/releases. Was this forgotten, or a switch to releasing only source tarballs?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/760:70,release,releases,70,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/760,2,['release'],['releases']
Deployability,"Hi, this is following on from our discussion in Bioconductor Slack (channel `#singlecell-queries`) from a few weeks ago. Thanks again for the update to propagate cellular barcode and UMI tags in the alevin generated BAM/SAM (with the `--writeMappings` flag). We have been testing this out, and have been able to access all this information by parsing through the SAM file. However in the end our plan to use this with [Vireo](https://vireosnp.readthedocs.io/en/latest/index.html) and [cellSNP](https://github.com/single-cell-genetics/cellSNP) for genetic demultiplexing of samples didn't really work out, mainly because `alevin` generates a transcriptomic BAM, and `cellSNP` expects a genomic BAM and VCF. I tried a few different options for getting this to work, including (i) attempting to convert to a genomic BAM using [sam-xlate](https://github.com/mozack/ubu/wiki) (which didn't seem to work because `sam-xlate` is designed to convert in the other direction), and (ii) converting the VCF to transcriptomic coordinates, as suggested [here](https://github.com/single-cell-genetics/cellSNP/issues/14) by the `Vireo`/`cellSNP` authors (the VCF conversion seemed to work, but `cellSNP` still didn't match it to the BAM properly). For now, I think we are going to go back to using `Cell Ranger` in our pipeline, since this did work with `Vireo`/`cellSNP`, although was of course much slower than `alevin` and has issues with multi-mapping reads. If you have any other ideas please let me know too. However I also wanted to suggest that if there is any interest on your end in developing some sort of conversion tool (transcriptomic BAM -> genomic BAM) for `alevin` outputs, then I think this would be super useful for people, especially if these genetic demultiplexing tools become more widely used. (We have been getting very good demultiplexing performance with `Cell Ranger` + `Vireo`/`cellSNP`, and are planning to release some of our code as a small `Snakemake` pipeline for others to use, so if ",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/550:142,update,update,142,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/550,1,['update'],['update']
Deployability,"Hi,. First of all, thank you very much for this tool! I'm excited to try it after reading your bioRxiv paper and your blog post. Following your installation instructions, I got to the step where I run `CMake [flags] ..`, and it failed with the following error:. ```; CMake Error at src/CMakeLists.txt:94 (add_executable):; Cannot find source file:. /home/wulab2015linux/warren/Software/salmon/external/install/src/rapmap/RapMapFileSystem.cpp. Tried extensions .c .C .c++ .cc .cpp .cxx .m .M .mm .h .hh .h++ .hm .hpp; .hxx .in .txx; ```. I realized that I did not have curl installed (I use `wget` all of the time, on a Ubuntu 14.04.4 system), so the `fetchRapMap.sh` script failed. I tried rerunning the `Cmake` command after installing `curl` with `apt-get`, and it still failed. However, the script worked after I manually ran `fetchRapMap.sh`, and the build was fine after that. . I'm a complete noob when it comes to CMake files, so I don't know what happened, but I wanted to bring this to your attention and provide users that might have the same issue with a workaround.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/42:144,install,installation,144,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/42,4,['install'],"['install', 'installation', 'installed', 'installing']"
Deployability,"Hi,. I am getting the following when building Salmon (gcc/g++ 4.8.2, and boost from `-DFETCH_BOOST=TRUE` when calling cmake). ```; (...); [ 64%] Performing build step for 'libtbb'; cd /opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss && make ""CXXFLAGS= -UDO_ITT_NOTIFY"" lambdas=1 compiler=gcc cfg=release tbb_build_prefix=LIBS; make[3]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; Created ./build/LIBS_release and ..._debug directories; make -C ""./build/LIBS_debug"" -r -f ../../build/Makefile.tbb cfg=debug; make[4]: Entering directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; ../../build/Makefile.tbb:31: CONFIG: cfg=debug arch=intel64 compiler=gcc target=linux runtime=cc4.8_libc2.15_kernel4.0.9; g++ -o x86_rtm_rw_mutex.o -c -MMD -DTBB_USE_DEBUG -DDO_ITT_NOTIFY -g -O0 -DUSE_PTHREAD -m64 -mrtm -fPIC -D__TBB_BUILD=1 -Wall -Wno-parentheses -Wno-non-virtual-dtor -UDO_ITT_NOTIFY -std=c++0x -D_TBB_CPP0X -I../../src -I../../src/rml/include -I../../include ../../src/tbb/x86_rtm_rw_mutex.cpp; /tmp/ccgalJzL.s: Assembler messages:; /tmp/ccgalJzL.s:628: Error: no such instruction: `xtest'; /tmp/ccgalJzL.s:656: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:665: Error: no such instruction: `xabort $255'; /tmp/ccgalJzL.s:671: Error: no such instruction: `xend'; /tmp/ccgalJzL.s:840: Error: no such instruction: `xbegin .L56'; /tmp/ccgalJzL.s:1012: Error: no such instruction: `xbegin .L73'; /tmp/ccgalJzL.s:1269: Error: no such instruction: `xabort $255'; make[4]: *** [x86_rtm_rw_mutex.o] Error 1; make[4]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss/build/LIBS_debug'; make[3]: *** [tbb] Error 2; make[3]: Leaving directory `/opt/local/salmon-index/resources/salmon-0.4.2/external/tbb43_20140724oss'; make[2]: *** [libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[2]: Leaving directory `/opt/local/sa",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/20:321,release,release,321,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/20,1,['release'],['release']
Deployability,"Hi,. I am testing Alevin, and would like to compare against Cell Ranger on my data set. While primary mapping statistics indicate more reads mapped, I would like to compare the results in the final analysis, in Seurat. Many steps rely on HGNC Gene symbols as opposed to Ensemble IDs. ### What is the best way to convert ensembl IDs to gene symbol in Alevin?. Alevin (aligned as in this [gist](https://gist.github.com/k3yavi/c501705ed2d29b12b0d10cf78b3ed001#file-alevin-default-ipynb), imported to R in this [tutorial](https://combine-lab.github.io/alevin-tutorial/2018/running-alevin/)) returns ensembl IDs in format like ""ENSG00000215910.7"". ```R; require(""fishpond""); require(""tximport""); ; files <- file.path(""[...]/alevin/quants_mat.gz""); file.exists(files); txi <- tximport(files, type=""alevin"");; rownames( txi$counts); ``` . I am currently converting these using biomart with suboptimal adaptations:. ```R; BiocManager::install(""biomaRt""); require('biomaRt'); mart <- useDataset(""hsapiens_gene_ensembl"", useMart(""ensembl"")); genes <- rownames(txi$counts); df$id <- NA; meta.genes <- getBM(attributes = c(""ensembl_gene_id"",""external_gene_name"", ""description""), ; values = genes, mart = mart ); ```; Manual adaptations:. 1. I trim IDs after dot (""ENSG00000215910.7"" → ""ENSG00000215910”); 2. I remove NA values (not all trimmed gene IDs are found in biomaRt); 3. I add up counts of genes (per ENS.ID) with the same gene symbol, e.g. “Y_RNA” or “HSPA14”. ```R; g.LookUp = meta.genes[,2]; names(g.LookUp) = meta.genes[,1]; ; # 1. Trim; ensembl_ID.simple =str_split_fixed(genes,pattern = '\\.', n=2)[,1]; ; genes.converted = g.LookUp[ensembl_ID.simple]; any.duplicated(genes.converted); ; # ...etc; ```. Is there a better way to convert IDs, possibly implemented in Alevin / Salmon?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/448:927,install,install,927,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/448,1,['install'],['install']
Deployability,"Hi,. I am using salmon quant v0.91 to map some reads against ce11 genome. . But the run fails with a cryptic error message, maybe you can help me sort this out.; ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_index }; ### [ libType ] => { A }; ### [ threads ] => { 8 }; ### [ mates1 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R1.fastq.gz }; ### [ mates2 ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/trimmed_reads/rluc_2_R2.fastq.gz }; ### [ output ] => { /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ geneMap ] => { /data/akalin/Base/Annotation/ce11/ENSEMBL91/Caenorhabditis_elegans.WBcel235.91.gtf }; Logs will be written to /scratch/AG_Akalin/agosdsc/projects/mrg1_rnaseq/analysis_v2/salmon_output/rluc_2/logs; [2018-03-21 10:00:03.272] [jointLog] [info] parsing read library format; [2018-03-21 10:00:03.272] [jointLog] [info] There is 1 library.; [2018-03-21 10:00:03.517] [stderrLog] [info] Loading Suffix Array; [2018-03-21 10:00:03.501] [jointLog] [info] Loading Quasi index; [2018-03-21 10:00:03.506] [jointLog] [info] Loading 32-bit quasi index; [2018-03-21 10:00:03.846] [stderrLog] [info] Loading Transcript Info; [2018-03-21 10:00:03.980] [stderrLog] [info] Loading Rank-Select Bit Array; [2018-03-21 10:00:03.995] [stderrLog] [info] There were 35448 set bits in the bit array; [2018-03-21 10:00:04.001] [stderrLog] [info] Computing transcript lengths; [2018-03-21 10:00:04.001] [stderrLog] [info] Waiting to finish loading hash; [2018-03-21 10:00:40.560] [stderrLog] [info] Done loading index; [2018-03-21 10:00:40.560] [jointLog] [info] done; [2018-03-21",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/210:199,upgrade,upgrade,199,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/210,2,['upgrade'],"['upgrade', 'upgrades']"
Deployability,"Hi,. I have been trying to run the installed salmon version on our HPC cluster on minimap aligned ONT reads and got the following error:. `processed 0 reads in current round/var/lib/slurm/slurmd/job10333001/slurm_script: line 25: 2153273 Bus error (core dumped)`. My script was as follows:. ```; module load salmon/1.9.0-gcc-10.3.0; cd /scratch/prj/ppn_microglia_mod/targeted/transcriptome/clean/transcriptome. for bc in {01..54}; do. salmon quant --ont -t /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa -l A -a ""combined_BC""$bc""_aligned.bam"" -o ""BC""$bc""_transcripts_quant"". done; ```; Salmon version was `1.9.0`; Transcriptome ref: Homo Sapiens Gencode v.44. The directories were generated for the barcodes and contain `aux info`, `cmd_info.json`, `libParams` and `logs` but the directories/files are empty. The command was run through `slurm` scheduler on HPC cluster. The output log looks like (repeated for `for` loop):; ```; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ ont ] => { }; # [ targets ] => { /scratch/users/k19022845/refgenome/gencode.v44.transcripts.fa }; # [ libType ] => { A }; # [ alignments ] => { combined_BC01_aligned.bam }; # [ output ] => { BC01_trascripts_quant }; Logs will be written to BC01_trascripts_quant/logs; [2023-11-04 16:49:44.093] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-11-04 16:49:44.093] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; Library format { type:single end",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/898:35,install,installed,35,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/898,2,"['UPGRADE', 'install']","['UPGRADE', 'installed']"
Deployability,"Hi,. I have had success using Salmon and Alevin after the hash-resize-hotfix issues. However, when I try to compile the latest commit I get an error for an undeclared error. I have tried searching through the external dependencies for the definition of `rapmap::utils::ChainStatus` but I cannot find it. Thanks!. ```; [ 6%] Built target libbwa; [ 12%] Built target libtbb; [ 19%] Built target libcereal; [ 26%] Built target libdivsufsort; [ 32%] Built target libstadenio; [ 38%] Built target libspdlog; [ 45%] Built target libgff; [ 47%] Built target ksw2pp_sse4; [ 49%] Built target alevin_core; [ 54%] Built target ksw2pp_basic; [ 56%] Built target ksw2pp_sse2; [ 57%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 76%] Built target unitTests; [ 77%] Building CXX object src/CMakeFiles/salmon.dir/SalmonQuantify.cpp.o; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:790:43: error: 'rapmap::utils::ChainStatus' has not been declared; rapmap::utils::ChainStatus chainStat,; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'int32_t getAlnScore(ksw2pp::KSW2Aligner&, ksw_extz_t&, int32_t, const char*, int32_t, char*, int32_t, int8_t, int8_t, int32_t, int, uint32_t, AlnCacheMap&)':; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:794:35: error: 'rapmap::utils::ChainStatus' has not been declared; if (chainStat == rapmap::utils::ChainStatus::PERFECT) {; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp:813:70: error: 'rapmap::utils::ChainStatus' has not been declared; bool doUngapped{(!invalidStart) and (chainStat == rapmap::utils::ChainStatus::UNGAPPED)};; ^; /u/gww/tmp/salmon2/salmon/src/SalmonQuantify.cpp: In function 'void processReadsQuasi(paired_parser*, ReadExperimentT&, ReadLibrary&, AlnGroupVec<rapmap::utils::QuasiAlignment>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, std::atomic<long unsigned int>&, RapMapIndexT*, std::vector<Transcript>&, ForgettingMassCalculator&, ClusterForest&, FragmentL",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/254:70,hotfix,hotfix,70,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/254,1,['hotfix'],['hotfix']
Deployability,"Hi,. I installed Salmon 1.1.0 and try to build an index with current released mice transcriptome. ; Here is my code:; salmon index -t gencode.vM24.transcripts.fa.gz -i gencode.vM24.salmon_1.1.0 --keepFixedFasta. However, it stays here forever, as showing:; Round 0, 0:2147483648; Pass	Filling	Filtering; 1	34	1231. Is there anyone can help me with this?. Thank you very much!. Fang",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/476:7,install,installed,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/476,2,"['install', 'release']","['installed', 'released']"
Deployability,"Hi,. I just encountered an unexpected behaviour of alevin when unmated reads are provided. Are unmated reads supported by alevin at all? I did not find anything in the alevin documentation, but the parameter is there. I tried to quantify some public Illumina SureCell data. Apparently the number of threads is set to 0 (because there are no file pairs?), which is of course not a good idea. The behaviour consists if I specify the number of threads manually (e.g. -p 1). Side note: There is a typo in the threads warning message (I think). ---; Salmon v1.2.1, installed from conda. #### Error message:. ```; ## alevin (dscRNA-seq quantification) v1.2.1; ### [ program ] => salmon ; ### [ command ] => alevin ; ### [ libType ] => { A }; ### [ index ] => { ../salmon/index/ }; ### [ unmatedReads ] => { ../samples/sc.fastq.gz }; ### [ output ] => { sc/ }; ### [ tgMap ] => { tx2gene.tsv }; ### [ end ] => { 3 }; ### [ umiLength ] => { 8 }; ### [ barcodeLength ] => { 6 }. Can't make user of more parsing threads than file (pairs); setting # of parsing threads to 0. Segmentation fault (core dumped); ```; ---. **To Reproduce**. The index is based on a gencode reference and works fine for bulk data (salmon quant). Command:; ```; salmon alevin -l A -i ../salmon/index/ --unmatedReads ../samples/sc.fastq.gz -o sc/ --tgMap tx2gene.tsv --end 3 --umiLength 8 --barcodeLength 6; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/522:560,install,installed,560,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/522,1,['install'],['installed']
Deployability,"Hi,. I was able to build and install salmon on my mac, but it's giving me this error when I try to run it:. salmon; dyld: Symbol not found: __ZNSs4_Rep20_S_empty_rep_storageE; Referenced from: /usr/local/bin/salmon; Expected in: flat namespace; in /usr/local/bin/salmon; Trace/BPT trap: 5. I have the env vars set:; DYLD_FALLBACK_LIBRARY_PATH=/usr/local/lib; DYLD_LIBRARY_PATH=/usr/local/lib. but it's still not finding something it needs. Thanks in advance for any help!. Note, I tried using the pre-packaged binary and had a similar issue:. salmon; wme18-ed2:bin bhaas$ ; wme18-ed2:bin bhaas$ ./salmon ; dyld: lazy symbol binding failed: Symbol not found: _os_unfair_lock_lock; Referenced from: /Users/bhaas/BioIfx/SALMON/Salmon-v0.8.0_macOS_10.12/bin/./salmon (which was built for Mac OS X 10.12); Expected in: /usr/lib/libSystem.B.dylib. dyld: Symbol not found: _os_unfair_lock_lock; Referenced from: /Users/bhaas/BioIfx/SALMON/Salmon-v0.8.0_macOS_10.12/bin/./salmon (which was built for Mac OS X 10.12); Expected in: /usr/lib/libSystem.B.dylib. Trace/BPT trap: 5. I",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/117:29,install,install,29,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/117,1,['install'],['install']
Deployability,"Hi,. I'm running into an issue with quant and hope you could help. Get this error message saying my index/versionInfo.json does not seem to exist (screenshot attached). I have single end reads spread across 5 fastq files per sample. Just trying to run one sample as a test before looping it. . I have tried building an index both with Salmon v 0.8.1 using a conda install as well as salmon v0.9.1 installing directly the binary on a linux computing cluster. . I've attached a screenshot of the indexing process (it boots me out at the end but I cant tell from the outputs if it was cut short, last thing it notes is writing sequence data to the file). I've also attached a screenshot of the generated index folder contents. The index is the most recent Ensembl FASTA cDNA download for mouse. I tried indexing a transcripts FASTA file from Gencode as well and am running into the same issue, so dont think its the specific reference. The reference transcript files are 54 and 56mb respectively, so no issues downloading and transferring to our cluster. . Any thoughts are much appreciated! Thanks!. Paul. ![screen shot 2018-02-12 at 15 37 54](https://user-images.githubusercontent.com/23369975/36214991-d3b453ec-1178-11e8-8331-d641a334c47b.png); ![screen shot 2018-02-12 at 12 41 33](https://user-images.githubusercontent.com/23369975/36214993-d3bf729a-1178-11e8-9c78-38158e423b9b.png); ![screen shot 2018-02-12 at 15 33 53](https://user-images.githubusercontent.com/23369975/36214994-d3cb52cc-1178-11e8-9f74-6cfd554ccb0a.png); ![screen shot 2018-02-12 at 15 35 16](https://user-images.githubusercontent.com/23369975/36214995-d3d50376-1178-11e8-81c3-90de0a347763.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/197:364,install,install,364,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/197,2,['install'],"['install', 'installing']"
Deployability,"Hi,. I'm trying to compile Salmon like this:; `cmake -DTBB_INSTALL_DIR=/home/fc464/software/tbb -DFETCH_BOOST=TRUE -DCMAKE_INSTALL_PREFIX=/home/fc464/software/salmon ..`. but during; `make`. I get this error:. ```; [ 50%] Built target alevin_core; [ 55%] Built target ksw2pp_basic; [ 57%] Built target ksw2pp_sse2; [ 58%] Built target ksw2pp; [ 72%] Built target salmon_core; [ 73%] Linking CXX executable unitTests; ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): In function `find_file_url':; open_trace_file.c:(.text+0xd30): warning: the use of `tempnam' is dangerous, better use `mkstemp'; /usr/bin/ld: /usr/local/software/spack/spack-0.11.2/opt/spack/linux-rhel7-x86_64/gcc-5.4.0/bzip2-1.0.6-xsgsccpkklxd745bl2gbgyhube56o6w4/lib/libbz2.a(bzlib.o): unrecognized relocation (0x2a) in section `.text'; /usr/bin/ld: final link failed: Bad value; collect2: error: ld returned 1 exit status; make[2]: *** [src/unitTests] Error 1; make[1]: *** [src/CMakeFiles/unitTests.dir/all] Error 2; make: *** [all] Error 2; ```. What's wrong?; Best; F",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/231:432,install,install,432,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/231,1,['install'],['install']
Deployability,"Hi,. This is not an issue, but I'm just looking advice on this problem I've been trying (with limited success) to tackle on my own for a while. First, I've been using salmon for years and I love all the updates that have come about recently. The new selective alignment mode is an amazing upgrade!. My general question here is how to quantify various truncated isoforms of the same transcript. I'm working in S. cerevisiae and I am not referring to isoform switching via alternative splicing, but various isoforms that are fully contained as a subset of a larger transcript sequence. Imagine a standard gene that gives rise to a 1000 bp transcript. Through alternative promoter usage or post-transcriptional processing, it can give rise a truncated form that is identical to the parent transcript, except only has sequence from bases 400 to 1000. I know this scenario is similar to detecting differential splice forms, and indeed when I see overlapping genes that nonetheless have some unique sequence, salmon does an excellent job at fractionally apportioning the reads. In this particular case, however, it seems that because all mappings to the truncated isoform also give perfect mappings to the longer isoform, even a single few reads mapping uniquely to the longer isoform is enough evidence for the salmon EM algorithm (I assume that's the relevant part?) to give *all* of the reads to the long isoform. To visualize the problem, I'm attaching an image of alignments over a transcript that is only expressed as a portion of the annotated parent transcript. If i encode the short and long forms as separate transcripts in salmon fasta index, all of the reads get assigned to the longer form with the options I've tried. My question then is whether there's a combination of salmon quant options that would optimize apportioning the reads better for this class of transcript, or whether it's simply not going to work given the underlying assumptions in the software?. Thanks a ton for any help,; J",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/514:203,update,updates,203,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/514,2,"['update', 'upgrade']","['updates', 'upgrade']"
Deployability,"Hi,. after salmon installation (from source, on Ubuntu 16), 'make test' is failing all 3 tests. So I will go through them one by one. *Test 1*: fails with the `No file or directory` message. ; As I can see from the logs, the executed command `/usr/bin/cmake -DTOPLEVEL_DIR=/usr/local -P /home/rad/packages/salmon-0.10.2/cmake/UnitTests.cmake` sets the toplevel directory to `/usr/local` and fails to find the `tests/UnitTests.cpp` in there. When I set the `-DTOPLEVEL_DIR` to salmons root folder everything works just fine. ; So, is there something missing? If so, how can I fix it?. *Test 2 and 3*: fail with no output but ` Error running ` . When I execute the respective command from the log file ; `salmon index -t transcripts.fasta -i sample_salmon_fmd_index --type fmd`; (and also `salmon index ...` on different data) the error is `Segmentation fault (core dumped)`. Any idea what goes wrong here? . *Aditional info*; * Which version of salmon was used? 0.10.2; * How was salmon installed? Compiled; * Which reference (e.g. transcriptome) was used? samples provided in the sample_data folder ; * Which read files were used? samples provided in the sample_data folder ; * OS: Ubuntu 16 (have to stick to the old version due to group policy) ; * output of `uname -a` : Linux AGRadWS1 4.15.0-24-generic #26~16.04.1-Ubuntu SMP Fri Jun 15 14:35:08 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux; * and `lsb_release -a`: ; No LSB modules are available.; Distributor ID:	Ubuntu; Description:	Ubuntu 16.04.4 LTS; Release:	16.04; Codename:	xenial",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/250:18,install,installation,18,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/250,3,"['Release', 'install']","['Release', 'installation', 'installed']"
Deployability,"Hi,. this is the error i get, when making a transcript index using salmon. I am using the decoy making script to make the decoy, which the script makes but fails when creating the index!. Specifically, please provide at least the following information:. Which version of salmon was used?; Version: salmon 0.14.1; How was salmon installed (compiled, downloaded executable, through bioconda)?; Bioconda; Which reference (e.g. transcriptome) was used?; Pig transcriptome; Which read files were used?; None; Which which program options were used?; command line:. salmon index -t gentrome.fa -i ../salmon_index -decoys decoys.txt -k 31; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; index [""../salmon_index""] did not previously exist . . . creating it; [2019-06-27 16:02:56.612] [jLog] [info] building index; [2019-06-27 16:02:56.614] [jointLog] [error] The decoy file ecoys does not exist. I did use the SalmonTools to make the decoy file (few lines). INFO, skch::Sketch::computeFreqHist, With threshold 0.001%, ignore minimizers occurring >= 5124 times during lookup.; INFO, skch::main, Time spent computing the reference index: 727.737 sec; INFO, skch::Map::mapQuery, [count of mapped reads, reads qualified for mapping, total input reads] = [40777, 40831, 45898]; INFO, skch::main, Time spent mapping the query : 1912.34 sec; INFO, skch::main, mapping results saved in : mashmap.out; [4/10] Extracting intervals from mashmap alignments; [5/10] Merging the intervals; [6/10] Extracting sequences from the genome; index file reference.masked.genome.fa.fai not found, generating...; [7/10] Concatenating to get decoy sequences; [8/10] Making gentrome; [9/10] Extracting decoy sequence ids; [10/10] Removing temporary files; **********************************************; *** DONE Processing ...; *** You can use files `$outfolder/gentrome.fa` ; *** and $outfolder/decoys.txt` with ; *** `salmon index`; ****",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/389:328,install,installed,328,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/389,3,"['install', 'upgrade']","['installed', 'upgrade', 'upgrades']"
Deployability,"Hi,; I am processing canine data (replicates SRR636842 and SRR636843) and Salmon segfaults with no (?) useful information in the log that would help me to identify the problem. Other data from the same study are processed fine (mouse, cow and pig; all 51nt reads). ```; # salmon (mapping-based) v0.6.0; # [ program ] => salmon ; # [ command ] => quant ; # [ index ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_norm.k19.idx }; # [ threads ] => { 16 }; # [ libType ] => { IU }; # [ mates1 ] => { /dev/fd/63 }; # [ mates2 ] => { /dev/fd/62 }; # [ biasCorrect ] => { }; # [ output ] => { /[...path...]/tmp/SRX211583 }; # [ forgettingFactor ] => { 0.8 }; # [ useVBOpt ] => { }; # [ sensitive ] => { }; # [ geneMap ] => { /[...path...]/genemodel/cfa_canFam3_ensembl_vN.pctr_map.tsv }; Logs will be written to /[...path...]/tmp/SRX211583/logs; there is 1 lib; [2016-07-19 09:35:23.827] [jointLog] [info] parsing read library format; Loading 32-bit quasi index[2016-07-19 09:35:23.895] [jointLog] [info] Loading Quasi index; [2016-07-19 09:35:23.898] [stderrLog] [info] Loading Suffix Array ; [2016-07-19 09:35:23.899] [stderrLog] [info] Loading Position Hash; [2016-07-19 09:35:29.545] [stderrLog] [info] Loading Transcript Info ; [2016-07-19 09:35:30.913] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-07-19 09:35:31.452] [stderrLog] [info] There were 24526 set bits in the bit array; [2016-07-19 09:35:31.737] [stderrLog] [info] Computing transcript lengths; [2016-07-19 09:35:31.737] [stderrLog] [info] Waiting to finish loading hash; Index contained 24526 targets; [2016-07-19 09:36:30.462] [jointLog] [info] done; [2016-07-19 09:36:30.462] [stderrLog] [info] Done loading index; ```. All data are processed in the same pipeline, so I guess there is something particular about this dataset - but given this information, I have no clue where to start looking.; I have seen ticket #64, but I am not using the `--useFSPD` parameter, so I assume it's a different problem. +Peter",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/66:1740,pipeline,pipeline,1740,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/66,1,['pipeline'],['pipeline']
Deployability,"Hi,; I don't want to report a bug, but rather have 2 (unrelated) questions:; Because we don't generate that many RNA-seq data sets, I am using Salmon every now and then. I really like the program (speed!) and the obtained results. - Since I don't use Salmon on a daily basis, I usually have (would like) to update Salmon to its latest release. For these the binaries you (used to) provide are very convenient. I noticed that these are not explicitly linked to anymore on the page `https://github.com/COMBINE-lab/salmon/releases`, although these still are available through [this link](https://github.com/COMBINE-lab/salmon/files/2099291/salmon-latest_linux_x86_64.tar.gz) that is regularly posted on this Github 'forum'. Please note that I learned you favor the Bioconda route for keeping Salmon up to date. Nevertheless, provided it doesn't take too much effort, I would appreciate it very much if you could still make the binaries available. - My 2nd question has to do with some basic QC-ing: I am currently analyzing a set of 96 mouse samples. While running Salmon, I noticed most samples do have a nice percentage of mapped reads (>80%), but I also noticed that for samples this percentage was much lower (<50%).; Q: Is there an easy way of obtaining these numbers (""percent_mapped"") for all samples that were mapped in a Salmon run (without manually reviewing all 96 samples the 'meta_info.json' file)? In other words, how to obtain an 'overall log file'?. Thanks,; Guido",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/252:307,update,update,307,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/252,3,"['release', 'update']","['release', 'releases', 'update']"
Deployability,"Hi,; I just installed salmon using conda. I tried to execute the sample test that comes on the main page: https://combine-lab.github.io/salmon/getting_started/. When I try to run the quantification code; #!/bin/bash; for fn in data/DRR0161{25..40};; do; samp=`basename ${fn}`; echo ""Processing sample ${samp}""; salmon quant -i athal_index -l A \; -1 ${fn}/${samp}_1.fastq.gz \; -2 ${fn}/${samp}_2.fastq.gz \; -p 8 --validateMappings -o quants/${samp}_quant; done ; even though the files are there, in the data directory, the tool seems to not recognize the fastq files and pops the following error for every DRR0161xx_x.fastq.gz file:; ERROR: file [DRR016140_2.fastq.gz] does not appear to exist!. ]; salmon quant was invoked improperly. Is this some common error or is it a new bug?; Thanks in advance for any response/suggestion on how to proceed here",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/963:12,install,installed,12,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/963,1,['install'],['installed']
Deployability,"Hi,; I seem to be having problems with installing Salmon on my mac.; I've tried doing this using ; **1. brew install salmon:**; brew install salmon; Updating Homebrew...; ==> Auto-updated Homebrew!; Updated 2 taps (homebrew/core, homebrew/science).; ==> Updated Formulae; homebrew/science/seqan. ==> Installing salmon from homebrew/science; ==> Downloading https://github.com/COMBINE-lab/salmon/archive/v0.7.2.tar.gz; Already downloaded: /Users/sangrim/Library/Caches/Homebrew/salmon-0.7.2.tar.gz; ==> cmake . -DCMAKE_C_FLAGS_RELEASE=-DNDEBUG -DCMAKE_CXX_FLAGS_RELEASE=-DNDEBUG -DCMAKE_INSTALL_PREFIX=/usr/local/Cellar/salmon/0.7.2 -DCMA; ==> make install; 🍺 /usr/local/Cellar/salmon/0.7.2: 6 files, 8.5M, built in 7 minutes 8 seconds; sangrim@C02Q7CT1G8WN:~/bin$> salmon; **salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000**. and also,; **2. compiling from the osx tarball; the installation seemingly succeeds,**; Install the project...; /usr/local/Cellar/cmake/3.7.1/bin/cmake -P cmake_install.cmake; -- Install configuration: """"; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib; -- Up-to-date: /Users/../bin/salmon-0.7.2/lib/pkgconfig; -- Installing: /Users/../bin/salmon-0.7.2/bin/salmon; -- Installing: /Users/../bin/salmon-0.7.2/lib/libsalmon_core.a. Installation complete. Please ensure the following paths are set properly. Please add /Users/../bin/salmon-0.7.2/bin to your PATH; Please add /Users/../bin/salmon-0.7.2/lib to your DYLD_FALLBACK_LIBRARY_PATH. ...and then make test, hangs...; Running tests...; /usr/local/Cellar/cmake/3.7.1/bin/ctest --force-new-ctest-process ; Test project /Users/maheshsangrithi/bin/salmon-0.7.2/build; Start 1: unit_tests; ........Ctrl+C to cancel...; then if ./salmon is run, I get the same error...; salmon(2034,0x7fffbc21a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffbc210000. Thanks in advance for your help.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/112:39,install,installing,39,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/112,15,"['Install', 'Update', 'configurat', 'install', 'update']","['Install', 'Installation', 'Installing', 'Updated', 'configuration', 'install', 'installation', 'installing', 'updated']"
Deployability,"Hi,; I was just trying to update my installation of Salmon last night, and encountered a series of errors in compilation:; ```; .../salmon/include/SalmonIndex.hpp:254:43: error: ‘class RapMapSAIndex<long int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<long int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:256:32: error: ‘class RapMapSAIndex<long int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<long int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<long int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex64_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:260:43: error: ‘class RapMapSAIndex<int, FrugalBooMap<long unsigned int, rapmap::utils::SAInterval<int> > >’ has no member named ‘isDecoy’; decoy = quasiIndexPerfectHash32_->isDecoy(tid);; .../salmon/include/SalmonIndex.hpp:262:32: error: ‘class RapMapSAIndex<int, spp::sparse_hash_map<long unsigned int, rapmap::utils::SAInterval<int>, rapmap::utils::KmerKeyHasher, std::equal_to<long unsigned int>, spp::libc_allocator<std::pair<const long unsigned int, rapmap::utils::SAInterval<int> > > > >’ has no member named ‘isDecoy’; decoy = quasiIndex32_->isDecoy(tid);; ```. In investigating this further, it appears that the version of RapMap being downloaded and compiled (release salmon-v0.14.1, according to scripts/fetchRapMap.sh) is missing the commit that introduced the isDecoy() function for the RapMapSAIndex class (what appears to be commit COMBINE-lab/RapMap@152ed9026005f4a823988c4893386079aa663a53, with changes in COMBINE-lab/RapMap@55ef430ec8c3b130666c8f3855073a79c6236fb4 on the develop-salmon branch). (Also, was it intentional that two releases of RapMap were made on the same commit? Both salmon-v0.14.0 and salmon-v0.14.1 releases appear to have been made on commit COMBINE-lab/RapMap@89dbe45481da",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/418:26,update,update,26,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/418,2,"['install', 'update']","['installation', 'update']"
Deployability,"Hi,; I'm coming back to salmon after a ""long"" time not using it. I'm a little bit confused with an error message from the last version (0.14.1) when trying to create an index.; The message complains about a non existing file, but the file does exists; and in fact, with old versions of salmon (0.7.2), it does build an index with the exact same command:. ```; [curis@info124 __Index]$ ls; génome.rat_084.fa.gz@ génôme_rat.v_6-0__Ensemble_084/ test/ test.fa. [curis@info124 __Index]$ salmon_0.14.1 index -t test.fa -i test; Version Info: This is the most recent version of salmon.; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.9.1 index -t test.fa -i test; Version Info: ### PLEASE UPGRADE SALMON ###; [...]; The file [test.fa] provided for the transcriptome does not appear to exist.[curis@info124 __Index]$ . [curis@info124 __Index]$ salmon_0.7.2 index -t test.fa -i test; Version Info: ### A newer version of Salmon is available. ####; [...]; [2019-08-22 18:11:33.022] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; ```; I guess I'm missing something obvious, due to some change in a previous version of salmon (around 0.9.1 ?), but I do not understand why salmon does not find the file when it is present...; Thanks in advance for any help",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/420:772,UPGRADE,UPGRADE,772,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/420,1,['UPGRADE'],['UPGRADE']
Deployability,"Hi,; When generating an index for the latest human gencode transcriptome (release 35) I noticed this message:; `[2020-11-25 09:42:04.534] [puff::index::jointLog] [warning] Entry with header [ENST00000674361.1|ENSG00000241743.4|OTTHUMG00000022220.5|OTTHUMT00000530527.1|XACT-203|XACT|347561|lncRNA|] was longer than 200000 nucleotides. This is probably a chromosome instead of a transcript.`. Since I don't recall that I have seen this notification before when doing previous analyses, I had a look at this particular transcript. It turns out it indeed has been annotated as a (very long!), but apparently true transcript (a lncRNA):; `Transcript: XACT-203 ENST00000674361.1, Exons: 2, Coding exons: 0, Transcript length: 347,561 bps. Manual annotation (determined on a case-by-case basis) from the Havana project.`; See [here](http://www.ensembl.org/Homo_sapiens/Transcript/Summary?db=core;g=ENSG00000241743;r=X:113616300-114059289;t=ENST00000674361).; ; I realize that this is not really a bug (you have to set such cutoff at some (likely arbitrary??) value), and it applies to only a single human transcript, but considering this case, would it also be OK to set the cutoff to e.g. 400k (instead of 200k)?. Thanks for addressing my curiosity!; Guido. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**; - salmon 1.3.0; **To Reproduce**; - I followed [this workflow](https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/) but using the latest human gencode files.; **Desktop (please complete the following information):**; - OS: Linux Fedora",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/591:74,release,release,74,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/591,1,['release'],['release']
Deployability,"Hi,; i met a problem when installing the index for salmon. The feedback suggests that ""server did not respond before timeout"". This problem is shown in the following picture.; I've already given it enough space for running, while it seems that it was stuck in the first step. And the index file only contains ""pre_indexing.log ref_indexing.log""; So could you please help me to solve this problem?; Thanks; ![image](https://user-images.githubusercontent.com/100278952/155299114-10a7e3b7-bf08-49aa-824d-48dcbaa1fd71.png)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/755:26,install,installing,26,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/755,1,['install'],['installing']
Deployability,"Hi,; would you mind cleaning up the STDOUT and STDERR output from `salmon quant` and `salmon index`? Commonly `STDOUT` should be used for normal output messages and `STDERR` for errors or at worst warnings. Salmon writes most of the messages to `STDERR`. 1. `Version Info: This is the most recent version of Salmon.` is output to `STDOUT`. I find it useless. If salmon run some network connection to figure out its version it is `a)` prone to errors, `b)` I would expect a fat warning in the documentation a `phone home` feature is builtin, `c)` it is likely to fail on more network-restricted installations. Or, `d)`, the message is incorrect. I suggest drop the message altogether. 2. `salmon quant` writes a lot of normal messages to `STDERR`. Please use `STDOUT` instead. If a program exits with a non-zero exit code it is common to read its `STDERR` output to learn what was the cause for the error. It is awkward to realize there is lots of unrelated text. Please follow common rules on Unix. 3. The docs at http://salmon.readthedocs.io/en/latest/salmon.html did not mention the `fmd` index is just a plain index from `bwa`. Why don't you instruct users to use `bwa index` instead? It would be clearer (if that is the type of index you employ). 4. `salmon index` behavior. ```; salmon index -t Homo_sapiens.GRCh38.cdna.all.fa -i Homo_sapiens.GRCh38.cdna.all --type quasi -k 31; index [""Homo_sapiens.GRCh38.cdna.all""] did not previously exist . . . creating it; [2018-06-25 19:25:57.122] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers; [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000434970.2], had length less than the k-mer length of 31 (perhaps after poly-A clipping); [2018-06-25 19:25:57.176] [jointLog] [warning] Entry with header [ENST00000448914.1], had length less than the k-mer length of 31 (perhaps after poly-A clipping); ...; [2018-06-25 19:26:07.297] [jointLog] [warning] Entry with header [ENST00000579054.1], had length l",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/242:594,install,installations,594,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/242,1,['install'],['installations']
Deployability,"Hi. I am using salmon 1.2.0 to build a Salmon-SAF index on Rat data from Ensembl -- using full genome as decoy. ```; wget ftp://ftp.ensembl.org/pub/release-96/fasta/rattus_norvegicus/cdna/Rattus_norvegicus.Rnor_6.0.cdna.all.fa.gz. wget ftp://ftp.ensembl.org/pub/release-96/fasta/rattus_norvegicus/dna_index/Rattus_norvegicus.Rnor_6.0.dna.toplevel.fa.gz. Other steps as listed at:; https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/; ```. **_After I build the SA index, the directory size is 45 GB_**. The same with v1.1.0 on the RefGenomes site is about 15GB - http://refgenomes.databio.org/v2/asset/rn6/salmon_sa_index/splash?tag=default . Is this expected?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/505:148,release,release-,148,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/505,2,['release'],['release-']
Deployability,"Hi. I would like to know where I can get detailed info for different fields that get listed in meta_info.json. I can see some information listed in the section ""New information available in meta_info.json:"" in this page https://github.com/COMBINE-lab/salmon/releases. Thanks",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/446:258,release,releases,258,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/446,1,['release'],['releases']
Deployability,"Homo_sapiens.GRCh38.106.gtf \; --threads 6 \; --libType=ISR \; --index salmon_index \; -1 ACV_REP2_1_val_1.fq.gz -2 CV_REP2_2_val_2.fq.gz \; --seqBias --gcBias --posBias \; -o ACV_REP2; ```; * Which version of salmon was used? v1.9.0; * How was salmon installed (compiled, downloaded executable, through bioconda)? `nf-core/rnaseq`: via singularity; while running manually to troubleshoot: conda.; * Which reference (e.g. transcriptome) was used? Homo_sapiens.GRCh38 transcriptome + genome as a 'gentrome'; * Which read files were used? newly sequenced bulk RNAseq reads. **Expected behavior**; All samples with similar numbers of reads using the same index to finish in roughly the same amount of time. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: Pop!_OS 22.04 LTS x86_64 [Linux]; - Version: ; ``` ; $ uname -a; Linux pop-os 6.0.2-76060002-generic #202210150739~1666289067~22.04~fe0ce53 SMP PREEMPT_DYNAMIC Thu O x86_64 x86_64 x86_64 GNU/Linux. $lsb_release -a; No LSB modules are available.; Distributor ID:	Pop; Description:	Pop!_OS 22.04 LTS; Release:	22.04; Codename:	jammy; ```. **Additional context**; - I can't share these reads publicly but might be able to share personally (but I'd have to ask first). - I tried using the suggestion from previous issues (e.g. [--hitFilterPolicy BOTH](https://github.com/COMBINE-lab/salmon/issues/527)) to use `--hitFilterPolicy BOTH` but it didn't seem to help. - I tried trimming polyX tails with `fastp` but that didn't help either. - To try and see if `salmon` was causing the issues, I thought I'd try `kallisto` as a similar-ish comparison. `kallisto` mapped the reads with 100 EM bootstraps in about 25 minutes. Commands:. ```; kallisto index -i transcripts.idx genome.transcripts.fa; kallisto quant -i transcripts.idx -o output -b 100 <(zcat ${R1}) <(zcat ${R2}) -t 6; ```. Thanks for the tool - hopefully this is easy to sort out!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/830:12089,Release,Release,12089,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/830,1,['Release'],['Release']
Deployability,How can I install salmon latest version via Conda?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/592:10,install,install,10,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/592,1,['install'],['install']
Deployability,"I am encountering two issues when I follow the instructions for installing salmon 1.10.1:https://salmon.readthedocs.io/en/latest/building.html#installation; I am installing on a mac studio (M2 max) running Ventura. . The first issue I run into is that my understanding of the instructions suggests that I should be in the ""build"" directory when I run cmake. However, if I do that it returns an error about CMakeLists.txt not being in that location. I noticed that is in the salmon directory so I ran cmake from there and it seemed to work fine. But, I'm not sure if that is leading to the problems I am having downstream. . The second issue is when I run make I get an error associated with configuring liblzma (error 77). I have pasted the console log below. I appreciate any suggestions and apologize if I missed something obvious. . This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by XZ Utils configure 5.2.2, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ /Users/jeremybono/Downloads/salmon-1.10.1/external/xz-5.2.2/configure --prefix=/Users/jeremybono/Downloads/salmon-1.10.1/external/install CC=/Library/Developer/CommandLineTools/usr/bin/cc CXX=/Library/Developer/CommandLineTools/usr/bin/c++ CFLAGS= CPPFLAGS= LDFLAGS=. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = Jeremys-Mac-Studio.local; uname -m = arm64; uname -r = 22.6.0; uname -s = Darwin; uname -v = Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020. /usr/bin/uname -p = arm; /bin/uname -X = unknown. /bin/arch = unknown; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = Mach kernel version:; 	 Darwin Kernel Version 22.6.0: Wed Jul 5 22:21:53 PDT 2023; root:xnu-8796.141.3~6/RELEASE_ARM64_T6020; Kernel configured for up to 12 processors.; 12 processors are physically available.; 12 processors are logically ava",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/912:64,install,installing,64,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/912,3,['install'],"['installation', 'installing']"
Deployability,"I am interested to run your tool: Salmon. It is a great and easy tool to use. I encounter this error by using:; ```; ./bin/salmon quant -t output.fa -g hgTables.gtf -l IU -a ../../pipeline/rna_seq/all_chr1/merged.bam -p 20 -o salmon_quant; ```. Error:; ```; [2017-04-11 12:33:40.420] [jointLog] [critical] Transcript chr1 appeared in the BAM header, but was not in the provided FASTA file; [2017-04-11 12:33:40.420] [jointLog] [critical] Please provide a reference FASTA file that includes all targets present in the BAM header; If you have access to the genome FASTA and GTF used for alignment ; consider generating a transcriptome fasta using a command like: ; gffread -w output.fa -g genome.fa genome.gtf; you can find the gffread utility at (http://ccb.jhu.edu/software/stringtie/gff.shtml); ```. I generated output.fa using gffreads from hg19.fa and gtf . In the output.fa, it is annotated in terms of gene ids, but there is chr1 in BAM. I am not sure how can I make them to talk to each other?. Could you please tell me how can I fix it?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/131:180,pipeline,pipeline,180,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/131,1,['pipeline'],['pipeline']
Deployability,"I am running salmon and I am getting this error. . ### salmon (mapping-based) v0.13.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ threads ] => { 5 }; ### [ index ] => { ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz }; ### [ libType ] => { U }; ### [ unmatedReads ] => { subset_SRR2070946_trimmed.fq }; ### [ output ] => { salmonRes_SRR2070946 }; Logs will be written to salmonRes_SRR2070946/logs; [2024-02-28 02:07:19.419] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-28 02:07:19.419] [jointLog] [warning] . NOTE: It appears you are running salmon without the `--validateMappings` option.; Mapping validation can generally improve both the sensitivity and specificity of mapping,; with only a moderate increase in use of computational resources. ; Mapping validation is planned to become a default option (i.e. turned on by default) in; the next release of salmon.; Unless there is a specific reason to do this (e.g. testing on clean simulated data),; `--validateMappings` is generally recommended. [2024-02-28 02:07:19.419] [jointLog] [info] parsing read library format; [2024-02-28 02:07:19.419] [jointLog] [info] There is 1 library.; Exception : [Error: The index version file ~/CellNet/CellNetLocal/ref/salmon.index.mouse.052617.tgz/versionInfo.json doesn't seem to exist. Please try re-building the salmon index.]; ~/anaconda3/envs/salmon/bin/salmon quant was invoked improperly.; For usage information, try ~/anaconda3/envs/salmon/bin/salmon quant --help; Exiting.; ./salmonRes_SRR2070926/quant.sf ; Error in file(file, ""rt"") : cannot open the connection; In addition: Warning message:; In file(file, ""rt"") :; cannot open file './salmonRes_SRR2070926/quant.sf': No such file or directory. I can see versionInfo.json in the salmon.index.mouse.052617.tgz. I am not sure why it can not see it.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/914:946,release,release,946,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/914,1,['release'],['release']
Deployability,"I am running salmon as part of a pipeline and this error message is being displayed:. running salmon quant...; Version Server Response: Not Found; exception : [unrecognised option '--biasCorrect']. Exiting.; pipeline failed at expression quantification!. Here are the options which the script uses: ; salmon quant -t ${transcript_fa} ${ltype} -a ${rna_bam} -o ${sm_odir} -p $nproc --biasCorrect; check_file ${sm_out} ""pipeline failed at expression quantification!"". I have the latest version of salmon installed.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/873:33,pipeline,pipeline,33,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/873,4,"['install', 'pipeline']","['installed', 'pipeline']"
Deployability,"I am trying to do transcript isoform quantification after mapping ONT long reads to transcripts. I have a transcriptome made up of gencode and novel transcripts identified by following the TALON pipeline. Due to some strangeness when combining the two sets of transcripts, if I run minimap2 with default parameters I get a very large number of unmapped reads that would normally map well to either gencode or TALON transcripts when alone. To combat this, I was advised to change the -f parameter to 1000. In doing so I get a similar amount of mapped reads, but around 6 times as many non-primary alignments as when I map with default parameters to gencode transcripts alone. Is it still okay to use salmon quantification with data that has been mapped in this way, or will the ONT model not give accurate quantification?. How I have been quantifying:; `salmon quant -p 1 --ont -t transcripts.fa -l SF -a transcriptome.bam -o salmon`",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/796:195,pipeline,pipeline,195,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/796,1,['pipeline'],['pipeline']
Deployability,"I am using Metawrap`https://github.com/bxlab/metaWRAP/blob/master/Usage_tutorial.md` to analyze bins abundance to the fwd and rev paired reads. MetaWrap uses Salmon and its telling me to upgrade Salmon but since it is within Metawrap, I am unsure how to do this. This is the error I receive: ; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; salmon v0.13.1; ===============. I downloaded the tar file for salmon but because it is used within MetaWrap I'm unsure the linux terminal line to update the salmon. Thanks,; Katie",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/423:187,upgrade,upgrade,187,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/423,6,"['UPGRADE', 'release', 'update', 'upgrade']","['UPGRADE', 'releases', 'update', 'updates', 'upgrade']"
Deployability,"I am using Salmon (Salmon 1.3 installed through homebrew on mac ventura 13.5.2) for quantification in alignment mode. I have bam files (aligned to transcriptome) for nanopore data from Minimap2, which has primary and secondary alignments both (50% of total mapped reads are primary and other 50% are secondary alignments). Salmon is only performing quantification for primary alignments, but I also want to include the secondary alignments. . 1. Is there any argument I could use to include secondary alignments for quantification in Salmon Alignment mode? ; 2. Is it a good practice to include secondary alignments? 3. Are there any other important flags I should use which might be specific to ""Nanopore"" or ""Splicing Analysis"". . This is the code I am using at the moment: . salmon quant -t gencode.vM33.transcripts.fa -l A -g gencode.vM32.annotation.gtf -a barcode07.bam -o barcode_07_salmon_quant",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/903:30,install,installed,30,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/903,1,['install'],['installed']
Deployability,"I am using Ubuntu on my laptop.; I installed salmon by the command:-; conda install --channel bioconda salmon; I downloaded the SalmonTools scripts from; git clone https://github.com/COMBINE-lab/SalmonTools.git; But I am unable to run salmon or the salmon index.; I can even run :- salmon --version; it gives the above-said error.; I made the generateDecoyTranscritome.sh executable as well but still it did not work.; At first, it said that it needed libboost_filesystem.so.1.60.0 so I installed the entire boost 1.60.0. But it still shows this error.; Please help!!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/639:35,install,installed,35,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/639,3,['install'],"['install', 'installed']"
Deployability,"I am working with C. griseus bulk RNAseq, and when using quant mode, the aux_info folder is empty. My understanding was that this folder shouldn't be empty. However, it is empty for every sample. I am using GCF_000223135.1 genome downloaded using NCBI datasets like this:; `datasets download genome accession GCF_000223135.1 --include gff3,rna,cds,protein,genome,seq-report`; I have tried indexing with and without decoy with similar results.; Is this normal?; EDIT: ; I tried using a different genome from here (https://ftp.ensembl.org/pub/release-112/fasta/cricetulus_griseus_picr/dna/Cricetulus_griseus_picr.CriGri-PICRH-1.0.dna_sm.toplevel.fa.gz) and it produces a non-empty aux_info folder.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/955:541,release,release-,541,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/955,1,['release'],['release-']
Deployability,"I built Salmon 0.7.2 on OSX 10.13.3 and received an error when it was making libjemalloc: autogen.sh: autoconf not found. I installed ""autoconf"" program and tried it again and it succeeded. The documentation should say that autoconf must be installed in order to make salmon.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/203:124,install,installed,124,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/203,2,['install'],['installed']
Deployability,"I cloned salmon v1.8.0 and tried to install it on my server. However, when I run make I receive an error at the final step ""Linking CXX executable salmon"". The error. `[100%] Linking CXX executable salmon; /usr/bin/ld: ../../external/install/lib/libstaden-read.a(libstaden_read_la-open_trace_file.o): in function `find_file_url':; open_trace_file.c:(.text+0xf4e): warning: the use of `tempnam' is dangerous, better use `mkstemp'; during IPA pass: icf; lto1: internal compiler error: Segmentation fault; Please submit a full bug report,; with preprocessed source if appropriate.; See <file:///usr/share/doc/gcc-9/README.Bugs> for instructions.; lto-wrapper: fatal error: /usr/bin/c++ returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[2]: *** [src/CMakeFiles/salmon.dir/build.make:454: src/salmon] Error 1; make[1]: *** [CMakeFiles/Makefile2:663: src/CMakeFiles/salmon.dir/all] Error 2; make: *** [Makefile:163: all] Error 2`. Prior to this step, I ran cmake as follows:. `cmake -DFETCH_BOOST=TRUE -DTBB_INSTALL_DIR= ~/anaconda3/pkgs/tbb-2021.5.0-hd09550d_0/ -DCMAKE_INSTALL_PREFIX= ~/salmon/`. OS: Ubuntu Linux 20.04",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/778:36,install,install,36,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/778,2,['install'],['install']
Deployability,I get the following error when installing `salmon`:. ```; cd /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external && /gsc/btl/linuxbrew/Cellar/cmake/3.3.0/bin/cmake -P /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake; -- extracting...; src='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; dst='/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-1.0.0'; -- extracting... [tar xfz]; CMake Error: Problem with archive_write_finish_entry(): Can't restore time; CMake Error: Problem extracting tar: /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz; -- extracting... [error clean up]; CMake Error at /var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/libcereal-prefix/src/libcereal-stamp/extract-libcereal.cmake:33 (message):; error: extract of; '/var/tmp/sjackman/salmon20150803-27338-1qoka2g/salmon-0.4.2/external/cereal-v1.0.0.tgz'; failed; ```. Is it possible to compile `salmon` with its external dependencies provided externally rather than vendored into `salmon`? What is `cereal`?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/10:31,install,installing,31,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/10,1,['install'],['installing']
Deployability,"I have a salmon index which fails silently when used:. ```; Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; # salmon (mapping-based) v0.5.1; # [ program ] => salmon; # [ command ] => quant; # [ index ] => { ... }; # [ libType ] => { IU }; # [ mates1 ] => { ... }; # [ mates2 ] => { ... }; # [ output ] => { ... }; # [ threads ] => { 16 }; Logs will be written to ...; [2016-01-22 16:54:55.564] [jointLog] [info] parsing read library format; there is 1 lib; Loading 32-bit quasi index; [2016-01-22 16:54:56.303] [jointLog] [info] Loading Quasi index; [2016-01-22 16:54:56.320] [stderrLog] [info] Loading Suffix Array; [2016-01-22 16:54:56.321] [stderrLog] [info] Loading Position Hash; [2016-01-22 16:56:17.595] [stderrLog] [info] Loading Transcript Info; [2016-01-22 16:56:36.767] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-01-22 16:56:40.858] [stderrLog] [info] There were 552702 set bits in the bit array; [2016-01-22 16:56:41.758] [stderrLog] [info] Computing transcript lengths; [2016-01-22 16:56:41.761] [stderrLog] [info] Waiting to finish loading hash; Index contained 552702 targets; [2016-01-22 17:00:40.648] [stderrLog] [info] Done loading index; [2016-01-22 17:00:40.648] [jointLog] [info] done; ```. Then the process exits and nothing but the `cmd_info.json` and log file are written to disk. The sequencing library is not an issue, as I can use several other index files successfully. This is reproducible with ~600 sequencing libraries as well. I believe this also occurs using v0.6.0, but will confirm. Since there is no core dump, is there any way for me to debug this?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/37:92,upgrade,upgrade,92,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/37,2,['upgrade'],"['upgrade', 'upgrades']"
Deployability,"I have been trying to use the salmon docker container available on docker hub. When I run salmon quant I am able to load all of the files and start the program, but I get a killed message while loading hash. I get an empty log file and empty folders created after the container is killed. **To Reproduce**; I run the following command to run the container:; `docker run -v /Users/caz3so/workspaces/salmon_docker:/temp -w /temp -ti combinelab/salmon`. The following is the output:; <img width=""1389"" alt=""screenshot 2018-06-27 11 15 56"" src=""https://user-images.githubusercontent.com/31480706/41983246-8296bb76-79fb-11e8-9710-c38ec051b7e7.png"">. **Expected behavior**; I have salmon installed on my machine and was able to run these files with no problem. It is only when I am using the docker container, so it could be a docker related problem. . **Desktop (please complete the following information):**; I am using a 2017 Macbook pro with 16 GB 2133 MHz LPDDR3 memory and a 2.8 GHz Intel Core i7 processor.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/243:682,install,installed,682,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/243,1,['install'],['installed']
Deployability,"I have been using salmon index command as: ; `salmon index --type quasi -k 31 --perfectHash `. If I am interested in using the SA method, my understanding from the command line help text `salmon index -h ` is that _perfectHash is only for the quasi method_ and cannot be used if I am using the SA method. Is my understanding correct?. Also, [the online documentation](https://salmon.readthedocs.io/en/latest/salmon.html) does not pull out any mention of the `--perfectHash` argument. Another question/suggestion for the online documentation page - [as referenced in this issue](https://github.com/COMBINE-lab/salmon/issues/399), on first glance, it is confusing as to whether one has to combine ""--validateMappings"" with ""--mimicBT2"" or ""--mimicStrictBT2"". I know @rob-p has addressed it in the github issue tracker, but it would be better to update the online documentation to clarify this **and also give scenarios** in which mimicBT2 or mimicStictBT2 should be used,. https://github.com/COMBINE-lab/salmon/issues/399",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/405:843,update,update,843,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/405,1,['update'],['update']
Deployability,"I have mapped Oxford Nanopore Reads to transcriptome using Graphmap. When I tried to run salmon quant on the BAM file, it shows that error below:. ```; salmon quant -t GRCh37.67.cdna.all.fa -l A -a in.bam -o out.count -p 15 --incompatPrior 1 --noErrorModel; # salmon (alignment-based) v0.11.3; # [ program ] => salmon; # [ command ] => quant; # [ targets ] => { /mnt/projects/kokep/kokep/reference/GRCh37.67.cdna.all.fa }; # [ libType ] => { A }; # [ alignments ] => { in.bam }; # [ output ] => { out.count }; # [ threads ] => { 15 }; # [ incompatPrior ] => { 1 }; # [ noErrorModel ] => { }; Version Info: ### PLEASE UPGRADE SALMON ###; ### A newer version of salmon with important bug fixes and improvements is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and bug fixes; please upgrade at your; earliest convenience.; ###; Sign up for the salmon mailing list to hear about new versions, features and updates at:; https://oceangenomics.com/subscribe; ###; Logs will be written to out.count/logs; Malformed key:value pair at line 1: ""@HD VN:1.0 SO:coordinate ""; ============; Exception : [ERROR: Failed to open file in.bam, exiting!; ]; ============; /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon alignment-quant was invoked improperly.; For usage information, try /mnt/projects/kokep/kokep/devel/miniconda3/envs/salmon/bin/salmon quant --help-alignments; Exiting. ```; How do I fix the error? Thanks in advance.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/387:617,UPGRADE,UPGRADE,617,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/387,4,"['UPGRADE', 'release', 'update', 'upgrade']","['UPGRADE', 'releases', 'updates', 'upgrade']"
Deployability,"I have misterious ""hits: 17435551, hits per frag: 1.34457 Cannot combine distributions that live in a different space!"" error for the paired reads.; Here are the parameters:; ```bash; salmon quant -i /pipelines/indexes/GRAY_WHALE/salmon/graywhale_anton --threads 8 -l A -r /pipelines/results/graywhale/transcriptome/trinity_out_dir/Trinity-GG.fasta -1 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz -2 /pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz -o transcripts_quant; ```; All the files and folders are avaluabe for download, just add reads_1: http://pipelines1.westeurope.cloudapp.azure.com/ before /pipelines. Like this:. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R1_001_trimmed.fastq.gz. http://pipelines1.westeurope.cloudapp.azure.com/pipelines/results/graywhale/transcriptome/ours/kidney/trimmed/GWkidneymother_S1_L001_R2_001_trimmed.fastq.gz",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/175:201,pipeline,pipelines,201,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/175,7,['pipeline'],['pipelines']
Deployability,"I have updated my homebrew index and installed Salmon on my Macbook (0S X Sierra). However, when I run `salmon` or `salmon -h` on the command line I get the following error message. ```; salmon(41538,0x7fffc4f5a3c0) malloc: *** malloc_zone_unregister() failed for 0x7fffc4f50000; ```. `brew doctor` doesn't show any unexpected issues. Any ideas what might be going on?. Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/142:7,update,updated,7,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/142,2,"['install', 'update']","['installed', 'updated']"
Deployability,I installed latest version of salmon through git clone for trinityrnaseq but unable to run trinity,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/452:2,install,installed,2,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/452,1,['install'],['installed']
Deployability,"I installed salmon from conda environment using python3 and got the below error:. ```; $ salmon. salmon: error while loading shared libraries: libboost_thread.so.1.60.0: cannot open shared object file: No such file or directory; ```. I am using Ubuntu 16.04 Xenial for which the latest Boost version is [1.58](https://launchpad.net/ubuntu/xenial/+package/libboost-dev). Since it was originally compiled under a later version of Boost (1.60), it gives the above error. I found this post to fix the issue temporarily:; https://www.biostars.org/p/389360/. It would be nice to fix it to search for the latest version of boost available though. Thanks.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/565:2,install,installed,2,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/565,1,['install'],['installed']
Deployability,"I installed salmon yesterday on my mac (macOS Sierra 10.12.6) using bioconda, and have been getting the following memory allocation warning:; salmon(15761,0x7fffb57993c0) malloc: *** malloc_zone_unregister() failed for 0x7fffb578f000. Salmon seems to be running OK, but I wanted to at least note this problem.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/188:2,install,installed,2,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/188,1,['install'],['installed']
Deployability,"I just now installed Salmon 0.12.0-alpha by compiling it on Ubuntu 18.04 successfully and ran the make and make install commands. While running the make test command I get the following output...; ----------------------------------------------------------------------------------------; Running tests...; Test project /scratch/Programes/salmon-0.12.0-alpha; Start 1: unit_tests; 1/2 Test #1: unit_tests .......................***Failed 0.01 sec; Start 2: salmon_read_test_quasi; 2/2 Test #2: salmon_read_test_quasi ........... Passed 1.06 sec. 50% tests passed, 1 tests failed out of 2. Total Test time (real) = 1.07 sec. The following tests FAILED:; 	 1 - unit_tests (Failed); Errors while running CTest; Makefile:151: recipe for target 'test' failed; make: *** [test] Error 8; ----------------------------------------------------------------------------------------; Why is this test failing?; It is OK.; I am new to Salmon. with best regards,; Baradwaj",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/315:11,install,installed,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/315,2,['install'],"['install', 'installed']"
Deployability,I noticed that for some reason salmon does not convert transcript ids to gene ids.; Here is the command that I run:; ```; salmon --no-version-check quant -i /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/446511232/GRCh38.p13_ensembl_101 --geneMap /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-2062771642/Homo_sapiens.GRCh38.101.gtf --numBootstraps 128 --threads 3 -l A --seqBias --gcBias --validateMappings --writeUnmappedNames -o quant_GSE113798_GSE113801_GSM3119577_SRR7075087 \; -1 /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-11815/SRR7075087_1.fastq_cleaned.fastq.gz -2 /cromwell-executions/quant_sample/04b46951-bd0b-4dd2-adf8-c16c57a86695/call-quant_run/shard-0/quant_run/e5d5f98a-bcee-4249-ba3b-bf6b63571f5d/call-salmon/inputs/-11815/SRR7075087_2.fastq_cleaned.fastq.gz; ```; I also enclose the results. Even though I use Ensembl Human GTF ( i.e. ftp://ftp.ensembl.org/pub/release-101/gtf/homo_sapiens/Homo_sapiens.GRCh38.101.gtf.gz ) it gives me transcript ids in quant.genes.sf output; [quant.zip](https://github.com/COMBINE-lab/salmon/files/5632824/quant.zip); [Downloads.tar.gz](https://github.com/COMBINE-lab/salmon/files/5632828/Downloads.tar.gz),MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/598:1225,release,release-,1225,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/598,1,['release'],['release-']
Deployability,"I ran salmon quant -p 6 -i refs/Homo_sapiens_GRCh38_91_quasi_index -l ISF -1 <(zcat RD1_R1_001.fastq.gz) -2 <(zcat RD1_R2_001.fastq.gz) -o test_salmon_quant -g refs/Homo_sapiens.GRCh38.91.gtf; (...); I am getting a bunch of warnings like:; [warning] couldn't find transcript named [ENST00000619185.1] in transcript <-> gene map; returning transcript as it's own gene. And in the end, there isn't a single ENSGxxxx Ensembl gene id in the quant.gene.sf file.; The gtf file was downloaded from Ensembl ftp site ftp://ftp.ensembl.org/pub/release-91/gtf/homo_sapiens. . I noticed the format of the gtf files from Ensembl v.75 and 91 are different; they have added gene_version between gene_id and transcript_id, and transcript_version. Homo_sapiens.GRCh37.75.gtf:8	protein_coding	transcript	26247878	26268564	.	+	.	gene_id ""ENSG00000104765""; transcript_id ""ENST00000518611""; gene_name ""BNIP3L""; gene_source ""ensembl_havana""; gene_biotype ""protein_coding""; transcript_name ""BNIP3L-004""; transcript_source ""ensembl_havana"";. Homo_sapiens.GRCh38.91.gtf:8	havana	transcript	26390362	26411048	.	+	.	gene_id ""ENSG00000104765""; gene_version ""15""; transcript_id ""ENST00000518611""; transcript_version ""5""; gene_name ""BNIP3L""; gene_source ""ensembl_havana""; gene_biotype ""protein_coding""; transcript_name ""BNIP3L-202""; transcript_source ""havana""; transcript_biotype ""protein_coding""; tag ""CCDS""; ccds_id ""CCDS83267""; tag ""basic""; transcript_support_level ""2"";",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/198:534,release,release-,534,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/198,1,['release'],['release-']
Deployability,"I recently quantified a set of RNA-seq samples using both Salmon and RSEM to eventually do differential isoform analysis. When the overlap of significant isoforms was rather low -- even though the only difference was whether the TPM values were from Salmon or RSEM -- I started comparing the TPM values and saw something strange. After taking the log2 of the TPM values, I generated [these](https://drive.google.com/drive/folders/1eLDVPoNS_pRaOkFqQHY9l1DDDUovIho3?usp=sharing) plots. TPM values for salmon are from `quant.sf` files and for RSEM, `*.isoforms.results` files. . The there three very consistent commonalities between these plots:. 1. There seems to be a large number of transcripts with zero expression in one but not the other.; 2. There seems to be a set of isoforms that is more highly expressed in Salmon across all plots. ; 3. The bulk of reads that are close to the diagonal line are mostly concentrated on the RSEM side. And the details of the runs:. **RSEM v1.3.2 commands:**. indexing:. - rsem-prepare-reference --gtf gencode.vM25.annotation.gtf --star --star-path /appl/soft/bio/star/gcc_9.1.0/2.7.2a/bin -p 8 --star-sjdboverhang 83 GRCm38.primary_assembly.genome.fa rsem_indx_gencode/rsem_ref. quant:. - rsem-calculate-expression -p 8 --strandedness forward --star --star-path /appl/soft/bio/star/gcc_9.1.0/2.7.2a/bin --star-gzipped-read-file input_file.fq.gz rsem_indx_gencode/rsem_ref output/path. **salmon v1.4.0 commands:**. indexing:. - used entire genome as decoy sequence, decoy file made following instructions from: https://combine-lab.github.io/alevin-tutorial/2019/selective-alignment/ (except that latest M25 release was used). - salmon index -t gentrome.fa.gz -d decoys.txt -i salmon_index --keepDuplicates --gencode -p 12. quant:. - salmon quant -i salmon_index -l A -r /path/to/input.fq.gz -g gencode.vM25.annotation.gtf -p 4 --validateMappings -o path/to/output. Any idea what could be going on here?",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/612:1645,release,release,1645,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/612,1,['release'],['release']
Deployability,"I recently upgraded to v0.9.1 and am analyzing 2x75 total RNA. The kit is stranded with the first read originating from the reverse strand, thus I specified the libType as ISR. Command used to invoke salmon quant:. ```; salmon quant -i /home/benjohnson/Documents/references/hg19/salmon/salmon_hg19 -1 $pair1 -2 $pair2 -o $SAMPLE --seqBias --gcBias -p 28 --useVBOpt --numBootstraps 100 -l ISR; ```. Output following invocation:. ```; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/benjohnson/Documents/references/hg19/salmon/salmon_hg19 }; ### [ mates1 ] => { GO537F1_L000_R1_001.fastq.gz }; ### [ mates2 ] => { GO537F1_L000_R2_001.fastq.gz }; ### [ output ] => { GO537F1 }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ threads ] => { 28 }; ### [ useVBOpt ] => { }; ### [ numBootstraps ] => { 100 }; ### [ libType ] => { ISR }; ```. Warning received about strand bias in library:. ```; Detected a *potential* strand bias > 1% in an unstranded protocol check the file: GO537F1/lib_format_counts.json for details; ```. lib_format_counts.json output:. ```; {; ""read_files"": ""( GO537F1_L000_R1_001.fastq.gz, GO537F1_L000_R2_001.fastq.gz )"",; ""expected_format"": ""IU"",; ""compatible_fragment_ratio"": 0.997983099568402,; ""num_compatible_fragments"": 18521739,; ""num_assigned_fragments"": 18559171,; ""num_consistent_mappings"": 44944769,; ""num_inconsistent_mappings"": 16315669,; ""strand_mapping_bias"": 0.97668914484798,; ""MSF"": 0,; ""OSF"": 3095,; ""ISF"": 1047701,; ""MSR"": 0,; ""OSR"": 139809,; ""ISR"": 43897068,; ""SF"": 3206477,; ""SR"": 12956987,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. I'm a bit confused as to whether this is normal behavior and not impacting output (I haven't necessarily investigated if this is the case) or if it is ignoring my ISR option. I've tried using -l as ISR; ""ISR"" and also with --libType ISR; ""ISR"" with the same output. . Thanks for your time!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/187:11,upgrade,upgraded,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/187,1,['upgrade'],['upgraded']
Deployability,"I see existing open issues with no workaround listed. Filing new one in the hopes of at getting a workaround. I have 48 files in all and could quantify one by one but not sure how to collate the results from all of them. Help is much appreciated. I am very happy to help reproduce the problem and gather whatever information is needed to fix this problem. Bulk mode was used with aligned files. I do plan to try this with fastq files (instead of already aligned files). Core is dumped if I use more than one file. Here is how I used it. I tried this while letting it pick the number of thread automatically (no change) and specifying the number of threads as 8 (went a little farther with that). 1.; v 1.9.0. 2.; Salmon was installed using the command conda install -c bioconda salmon; Arabidopsis Thaliana reference genome was used - TAIR10_chr_all.fas - from here: https://www.arabidopsis.org/download/index-auto.jsp?dir=%2Fdownload_files%2FGenes%2FTAIR10_genome_release%2FTAIR10_chromosome_files. 3.; Alignment was done using STAR. 4.; See command below for options used. 5.; Linux login01 3.10.0-1160.el7.x86_64 #1 SMP Mon Oct 19 16:18:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux. 6. Output, for success case, one file only. ```; salmon quant -t /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas -l A -a leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam -o salmonquant; Version Info: This is the most recent version of salmon.; # salmon (alignment-based) v1.9.0; # [ program ] => salmon ; # [ command ] => quant ; # [ targets ] => { /rsstu/users/c/cjdohert/NSF_Tomato/AT_RefGenomeFiles/TAIR10_chr_all.fas }; # [ libType ] => { A }; # [ alignments ] => { leaf_mock_t6_rep3_S64_R1_001Aligned.out.bam }; # [ output ] => { salmonquant }; Logs will be written to salmonquant/logs; [2023-01-29 16:02:11.267] [jointLog] [info] setting maxHashResizeThreads to 8; [2023-01-29 16:02:11.267] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be igno",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/825:724,install,installed,724,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/825,2,['install'],"['install', 'installed']"
Deployability,I tried to install salmon via conda:; conda install -c bioconda/label/main salmon . but it seems not the latest version:; The following packages will be UPDATED:; salmon bioconda::salmon-0.14.1-heb0d2e1_1 --> bioconda/label/main::salmon-0.14.2-ha956f45_0. https://anaconda.org/bioconda/salmon/labels. Thanks,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/592:11,install,install,11,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/592,3,"['UPDATE', 'install']","['UPDATED', 'install']"
Deployability,"I understand that salmon does not use read quality scores when performing alignment/quantitation but, as it stands, running with `--writeMappings` it also doesn't output the qualities in its SAM-format output. That may not impact most downstream applications of the data but it does limit some. I'd be particularly interested in using reads that have been aligned and assigned to transcripts with an EM algorithm to investigate RNA editing. The most advanced methods of doing this integrate the quality of base calls from the sequencer into the models and, as such, cannot currently run on the data output. Although it may save a few CPU cycles in not reading and outputting the qualities - I can understand the choice when running with default settings - when running with `--writeMappings` that nominal difference in speed needs to be weighed up against downstream utility. Could this be looked into?. Cheers! George",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/756:481,integrat,integrate,481,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/756,1,['integrat'],['integrate']
Deployability,"I used salmon 0.9.1 successfully a few weeks ago. I am using the latest update according to miniconda. Now after typing in this script in the command line in my Terminal on my Mac, I get the following error message. I have tried to trouble shoot but I have not been able to solve the problem. . salmon quant -i cs_index -l A -r fastqtrimd/BOD19_5R1trimd.fastq.gz -o quant/BOD19_5R1_quant —seqBias --gcBias --writeUnmappedNames. Here is the error message in the command line:. Version Info: Could not resolve upgrade information in the alotted time.; Check for upgrades manually at https://combine-lab.github.io/salmon; ### salmon (mapping-based) v0.9.1; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { cs_index }; ### [ libType ] => { A }; ### [ unmatedReads ] => { BOD19_5R1trimd.fastq.gz }; ### [ output ] => { BOD19_5R1_quant }; ### [ seqBias ] => { }; ### [ gcBias ] => { }; ### [ writeUnmappedNames ] => { }; Logs will be written to BOD19_5R1_quant/logs; [2018-03-19 12:13:21.295] [jointLog] [info] parsing read library format; [2018-03-19 12:13:21.295] [jointLog] [info] There is 1 library.; [2018-03-19 12:13:21.402] [jointLog] [info] Loading Quasi index; [2018-03-19 12:13:21.403] [jointLog] [info] Loading 32-bit quasi index; Exception : [Failed to read 8 bytes from input stream! Read 0]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting.; [2018-03-19 12:13:21.403] [stderrLog] [info] Loading Suffix Array . Does anyone have any ideas what is wrong? Sorry I am a novice!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/209:72,update,update,72,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/209,3,"['update', 'upgrade']","['update', 'upgrade', 'upgrades']"
Deployability,I'm having problems installing salmon from source. . When running `make` I get the following error. ```Consolidate compiler generated dependencies of target tbb; [ 73%] Built target tbb; Consolidate compiler generated dependencies of target tbbmalloc; [ 75%] Linking C shared library ../../gnu_11.4_cxx14_64_release/libtbbmalloc.so; lto1: fatal error: bytecode stream in file ‘CMakeFiles/tbbmalloc.dir/backend.cpp.o’ generated with LTO version 11.3 instead of the expected 12.0; compilation terminated.; lto-wrapper: fatal error: /usr/bin/cc returned 1 exit status; compilation terminated.; /usr/bin/ld: error: lto-wrapper failed; collect2: error: ld returned 1 exit status; make[5]: *** [src/tbbmalloc/CMakeFiles/tbbmalloc.dir/build.make:178: gnu_11.4_cxx14_64_release/libtbbmalloc.so.2.11] Error 1; make[4]: *** [CMakeFiles/Makefile2:196: src/tbbmalloc/CMakeFiles/tbbmalloc.dir/all] Error 2; make[3]: *** [Makefile:156: all] Error 2; make[2]: *** [CMakeFiles/libtbb.dir/build.make:87: libtbb-prefix/src/libtbb-stamp/libtbb-build] Error 2; make[1]: *** [CMakeFiles/Makefile2:253: CMakeFiles/libtbb.dir/all] Error 2; make: *** [Makefile:166: all] Error 2; ```. For cmake I used the following command:; `sudo cmake -DNO_IPO=TRUE -DBOOST_ROOT=/usr/include/boost/ -DCMAKE_INSTALL_PREFIX=/usr/local/bin/ ..`. **Desktop (please complete the following information):**; - OS: Ubuntu 22.04; - Version: 6.5.0-35-generic # 35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Tue May 7 09:00:52 UTC 2 x86_64 x86_64 x86_64 GNU/Linux; - gcc (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/936:20,install,installing,20,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/936,1,['install'],['installing']
Deployability,"I'm quantifying reads from a Lexogen QuantSeq experiment, using `-l SF and --noLengthCorrection`. I just downloaded the latest release 0.9.0. Full command (using nu parallel); `salmon quant -i path_to_index -r {} -l SF --noLengthCorrection -o {.} -p 5`. Which gives the following settings information:; ```; Version Info: This is the most recent version of Salmon.; ### salmon (mapping-based) v0.9.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { /home/wdecoster/databases/Homo_sapiens/hg38/transcriptome/GRCh38-full-transcriptome-index }; ### [ unmatedReads ] => { pt_d10046-11.fastq.gz }; ### [ libType ] => { SF }; ### [ noLengthCorrection ] => { }; ### [ output ] => { pt_d10046-11.fastq }; ### [ threads ] => { 5 }; ```. But I get the following warning for each sample:; `Detected a *potential* strand bias > 1% in an unstranded protocol check the file: samplename/lib_format_counts.json for details`. That file looks as below:. ```; {; ""read_files"": ""pt_d10040-14.fastq.gz"",; ""expected_format"": ""U"",; ""compatible_fragment_ratio"": 1.0,; ""num_compatible_fragments"": 2836170,; ""num_assigned_fragments"": 2836170,; ""num_consistent_mappings"": 10375916,; ""num_inconsistent_mappings"": 0,; ""strand_mapping_bias"": 0.9229587055253724,; ""MSF"": 0,; ""OSF"": 0,; ""ISF"": 0,; ""MSR"": 0,; ""OSR"": 0,; ""ISR"": 0,; ""SF"": 9576542,; ""SR"": 799374,; ""MU"": 0,; ""OU"": 0,; ""IU"": 0,; ""U"": 0; }; ```. This suggests my libType SF is ignored?. (Less important: If you could make --libtype an alias for --libType that would be great, random internal capitalization is quite annoying imho)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/177:127,release,release,127,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/177,1,['release'],['release']
Deployability,"I'm trying to build salmon on FreeBSD. . First issue, fetchRapMap.sh fails because it calls /bin/bash. Bash on FreeBSD is in /usr/local/bin/bash.; This is easily worked around with a symlink. Second issue: libbwa fails to build. . ```; [ 34%] Performing build step for 'libbwa'; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 17: Missing dependency operator; make[3]: ""/usr/home/esiefker/salmon/salmon/external/bwa-master/Makefile"" line 19: Need an operator; make[3]: Fatal errors encountered -- cannot continue; make[3]: stopped in /usr/home/esiefker/salmon/salmon/external/bwa-master; *** Error code 1; ```; In addition to failing to build bwa, bwa is present in ports and already installed on this machine. Cmake should check for this.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/162:714,install,installed,714,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/162,1,['install'],['installed']
Deployability,"I'm trying to update the 0.9.1 brew/conda package to 1.0; What version of `openssl` does it need?; I've tried `curl-openssl/lib/libcurl.a (found version ""7.66.0"")` without luck too.; Nothing stated at https://salmon.readthedocs.io/en/latest/building.html#. ```; /home/linuxbrew/.linuxbrew/bin/ld: /home/linuxbrew/.linuxbrew/lib/libcurl.a(libcurl_la-openssl.o): in function `Curl_ossl_sha256sum':; openssl.c:(.text+0x11c): undefined reference to `EVP_MD_CTX_create'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x124): undefined reference to `EVP_sha256'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x131): undefined reference to `EVP_DigestInit_ex'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x13f): undefined reference to `EVP_DigestUpdate'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x14f): undefined reference to `EVP_DigestFinal_ex'; /home/linuxbrew/.linuxbrew/bin/ld: openssl.c:(.text+0x157): undefined reference to `EVP_MD_CTX_destroy'; /home/linuxbrew/.linuxbrew/bin/ld: /home/linuxbrew/.linuxbrew/lib/libcurl.a(libcurl_la-openssl.o): in function `Curl_ossl_md5sum':; ```. Also this:; ```; CMake Warning at /home/linuxbrew/.linuxbrew/lib/cmake/boost_iostreams-1.71.0/libboost_iostreams-variant-static.cmake:59 (message):; Target Boost::iostreams already has an imported location; '/home/linuxbrew/.linuxbrew/lib/libboost_iostreams-mt.a', which will be; overwritten with '/home/linuxbrew/.linuxbrew/lib/libboost_iostreams.a'; ```",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/443:14,update,update,14,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/443,1,['update'],['update']
Deployability,"I've been using 0.7.1 without problems until today.; I'm trying to index the transcriptome (made with gffread) of human GRCh37 from archived Ensembl 60. The process has been running for hours, with no messages beyond this:. ```; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases ; contains some new features and minor bug fixes; please upgrade at your; earliest convenience.; ###; [2016-11-04 13:45:38.583] [jLog] [info] building index; RapMap Indexer. [Step 1 of 4] : counting k-mers. ```. This is all there is in the index.log. `[2016-11-04 13:45:38.583] [jLog] [info] building index`. None of me previous indexes have taken so long, especially not in total silence. So I'm guessing it gets stuck somewhere, but where? Why?. I know there is a newer version, but getting our busy sysadmin to install things takes time and I didn;t see anything critical for my usage case listed in the release notes.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/100:369,release,releases,369,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/100,4,"['install', 'release', 'upgrade']","['install', 'release', 'releases', 'upgrade']"
Deployability,"I've installed Salmon and made the index, but once I run the analysis, I've got this error:. (salmon) andrea@Precision-7920-Tower:/hdd_a/andrea/Salmon$ sudo salmon quant -i GRCh38_salmon_index/ -l A -r /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz --validateMappings -o /Output/; ### salmon (mapping-based) v0.12.0; ### [ program ] => salmon ; ### [ command ] => quant ; ### [ index ] => { GRCh38_salmon_index/ }; ### [ libType ] => { A }; ### [ unmatedReads ] => { /hdd_a/andrea/Salmon/Fastq/1_vehicle_R1.fastq.gz }; ### [ validateMappings ] => { }; ### [ output ] => { /Output/ }; Logs will be written to /Output/logs; [2024-02-21 09:49:04.094] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies use of range factorization. rangeFactorizationBins is being set to 4; [2024-02-21 09:49:04.094] [jointLog] [info] Usage of --validateMappings implies a default consensus slack of 1. Setting consensusSlack to 1.; [2024-02-21 09:49:04.094] [jointLog] [info] parsing read library format; [2024-02-21 09:49:04.094] [jointLog] [info] There is 1 library.; [2024-02-21 09:49:04.207] [jointLog] [info] Loading Quasi index; Exception : [rapidjson internal assertion failure: IsObject()]; salmon quant was invoked improperly.; For usage information, try salmon quant --help; Exiting. Any suggestion? ; Thank you",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/913:5,install,installed,5,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/913,1,['install'],['installed']
Deployability,"I've switched to using precompiled binaries, version 0.6.0. Now working on a new server running CentOS Linux release 7.1.1503. I was able to successfully generate my index, then started running the quantification step. Here is my command:. `$ /home/jorvis/salmon/bin/salmon quant -p 24 -i transcripts_index -l IU -1 R1.trimmed.PE.fastq -2 R2.trimmed.PE.fastq -o transcripts_quan`. This host has 48 cores and 128GB RAM. . And here is the STDOUT. ```; Version Info: This is the most recent version of Salmon.; # salmon (mapping-based) v0.6.0; # [ program ] => salmon; # [ command ] => quant; # [ threads ] => { 24 }; # [ index ] => { transcripts_index }; # [ libType ] => { IU }; # [ mates1 ] => { R1.trimmed.PE.fastq }; # [ mates2 ] => { R2.trimmed.PE.fastq }; # [ output ] => { transcripts_quan }; Logs will be written to transcripts_quan/logs; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; there is 1 lib; Loading 64-bit quasi index[2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Suffix Array; [2016-03-30 15:50:48.544] [stderrLog] [info] Loading Position Hash; [2016-03-30 15:50:58.359] [stderrLog] [info] Loading Transcript Info; [2016-03-30 15:50:59.932] [stderrLog] [info] Loading Rank-Select Bit Array; [2016-03-30 15:51:00.610] [stderrLog] [info] There were 2027284 set bits in the bit array; [2016-03-30 15:51:00.917] [stderrLog] [info] Computing transcript lengths; [2016-03-30 15:51:00.925] [stderrLog] [info] Waiting to finish loading hash; Index contained 2027284 targets; [2016-03-30 15:51:08.499] [jointLog] [info] done; [2016-03-30 15:51:08.499] [stderrLog] [info] Done loading index. Segmentation fault; ```. The only log file I see is this one: transcripts_quan/logs/salmon_quant.log. $ cat salmon_quant.log ; [2016-03-30 15:50:48.489] [jointLog] [info] parsing read library format; [2016-03-30 15:50:48.543] [jointLog] [info] Loading Quasi index; [2016-03-30 15:51:08.499] [jointLog] [i",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/54:109,release,release,109,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/54,1,['release'],['release']
Deployability,"ID=$(cat /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/samples.manifest | awk '{print $NF}' | awk ""NR==${SGE_TASK_ID}""). mkdir -p /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Software/Salmon-0.7.2_linux_x86_64/bin/salmon quant 	-i /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts -p 1 -l ISR 	-1 ${FILE1} -2 ${FILE2} 	-o /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/${ID}. echo ""**** Job ends ****""; date; ```. and the log file for task 2:. ```bash; $ more logs/salmon_test2.2.txt; **** Job starts ****; Wed Mar 8 11:53:17 EST 2017; **** JHPCE info ****; User: lcollado; Job id: 9987283; Job name: step6-salmon_test2.gsk_phaseII; Hostname: compute-060; Task id:; Version Info: ### A newer version of Salmon is available. ####; ###; The newest version, available at https://github.com/COMBINE-lab/salmon/releases; contains new features, improvements, and minor bug fixes; please upgrade at your; earliest convenience.; ###; ### salmon (mapping-based) v0.7.2; ### [ program ] => salmon; ### [ command ] => quant; ### [ index ] => { /dcl01/lieber/ajaffe/Emily/RNAseq-pipeline/Annotation/GENCODE/GRCh38_hg38/transcripts/salmon_index_gencode.v25.transcripts }; ### [ threads ] => { 1 }; ### [ libType ] => { ISR }; ### [ mates1 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX.fastq.gz }; ### [ mates2 ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/merged_fastq/R10002_C29P7ACXX_read2.fastq.gz }; ### [ output ] => { /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX }; Logs will be written to /dcl01/lieber/ajaffe/lab/libd_alzheimers/hg38/salmon_test2/R10002_C29P7ACXX/logs; [2017-03-08 11:53:36.762] [jointLog] [info] parsing read library format; [2017-03-08 11:53:36.763] [jointLog] [info] There is 1 library.; terminate called without an active exception; /cm/local/apps/sge/var/spoo",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/126:28622,release,releases,28622,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/126,2,"['release', 'upgrade']","['releases', 'upgrade']"
Deployability,"In contrast to version 1.10.0, [version 1.10.1](https://github.com/COMBINE-lab/salmon/releases/tag/v1.10.1) only provides the source code and no precompiled binary archive.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/911:86,release,releases,86,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/911,1,['release'],['releases']
Deployability,Install problem: autoconf not found,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/203:0,Install,Install,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/203,1,['Install'],['Install']
Deployability,Installation of Salmon on M1 Mac,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/871:0,Install,Installation,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/871,1,['Install'],['Installation']
Deployability,Installing Salmon,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/172:0,Install,Installing,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/172,3,['Install'],['Installing']
Deployability,Installing on macOS,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/787:0,Install,Installing,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/787,1,['Install'],['Installing']
Deployability,Installing salmon with this command; ```; conda install -c bioconda salmon. ```; ```; kokyriakidis@Konstantinos:/mnt/36642bae-9ec9-4100-88a2-ac173a20ea16/CLL_PROJECT/CLL_TEST1/work$ conda install -c bioconda salmon. Collecting package metadata (current_repodata.json): done; Solving environment: done. ==> WARNING: A newer version of conda exists. <==; current version: 4.7.12; latest version: 4.8.0. Please update conda by running. $ conda update -n base conda. # All requested packages already installed.; ```; seem to not update to 1.0.0 and stuck with v0.14.1; ```; salmon v0.14.1. Usage: salmon -h|--help or ; salmon -v|--version or ; salmon -c|--cite or ; salmon [--no-version-check] <COMMAND> [-h | options]. Commands:; index Create a salmon index; quant Quantify a sample; alevin single cell analysis; swim Perform super-secret operation; quantmerge Merge multiple quantifications into a single file; ```. Any thoughts?,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/461:0,Install,Installing,0,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/461,7,"['Install', 'install', 'update']","['Installing', 'install', 'installed', 'update']"
Deployability,"Is it possible to use alevin with cell barcodes that have constant regions within them (see example below)?. bbbbbbccccccccccccbbbbbbcccccccccccc bbbbbb. **Is the bug primarily related to salmon (bulk mode) or alevin (single-cell mode)?**. **Describe the bug**; A clear and concise description of what the bug is. **To Reproduce**; Steps and data to reproduce the behavior:. Specifically, please provide at least the following information:. * Which version of salmon was used?; * How was salmon installed (compiled, downloaded executable, through bioconda)?; * Which reference (e.g. transcriptome) was used?; * Which read files were used?; * Which which program options were used?. **Expected behavior**; A clear and concise description of what you expected to happen. **Screenshots**; If applicable, add screenshots or terminal output to help explain your problem. **Desktop (please complete the following information):**; - OS: [e.g. Ubuntu Linux, OSX]; - Version [ If you are on OSX, the output of `sw_vers`. If you are on linux the output of `uname -a` and `lsb_release -a`]. **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/654:495,install,installed,495,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/654,1,['install'],['installed']
Deployability,"Is this a user error or a programming error?. FreeBSD 12.0-RELEASE FreeBSD 12.0-RELEASE r341666 GENERIC amd64 ; 8G memory, 2T disc.; Salmon installed as Linux binary. The command I issued was; salmon quant -i salmonIndexMouse -l IU -1 SRR1818187_2.fastq.gz -2 SRR1818187_1.fastq.gz --validateMappings -o Salmontranscripts_quant; nuc11.2 wayne@dideoxy2:~/rnaseq > sh salmonQuant.sh; Version Info: This is the most recent version of salmon. [ 0.14.1 ]. ......; It was going well, until:; ....; [2019-08-17 11:51:58.943] [stderrLog] [info] There were 134,473,138 set bits in the bit array; [2019-08-17 11:51:58.995] [stderrLog] [info] Computing transcript lengths; [2019-08-17 11:51:58.995] [stderrLog] [info] Waiting to finish loading hash. [2019-08-17 11:52:03.223] [stderrLog] [info] Done loading index; [2019-08-17 11:52:03.223] [jointLog] [info] done; [2019-08-17 11:52:03.223] [jointLog] [info] Index contained 106,434 targets; Segmentation fault (core dumped)",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/419:59,RELEASE,RELEASE,59,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/419,3,"['RELEASE', 'install']","['RELEASE', 'installed']"
Deployability,"It doesn't seem like the documentation has been updated for Salmon 1.0.0, despite the fact that the it says it's the latest version. For example, it still says to build a decoy-aware transcriptome with generateDecoyTranscriptome.sh, and the README points to SalmonTools. This page does have a NOTE at the end pointing to the new tutorial for adding the entire genome as the decoy, as does Salmon's main github README.md. Also, the documentation still says you have to enable SA with particular flags, even though in 1.0.0 it is enabled by default and you'd have to add the flag --noSA to not do it. I'm just wondering if there are other differences I need to know that aren't evident in the release notes for 1.0.0.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/456:48,update,updated,48,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/456,2,"['release', 'update']","['release', 'updated']"
Deployability,"LIBNOVASEQ_M001_R1.fastq.gz -2 INDEXLIBNOVASEQ_M001_R2.fastq.gz --rhapsody -i /mnt/ufds/salmon/gencode_M23/salmon_1.4.0_decoy_M23 -p 10 -o alevin_output --tgMap /mnt/ufds/salmon/gencode_M23/txp2gene_gencode.vM23.tsv; Exception : [unrecognised option '--rhapsody']. Exiting. **Expected behavior**. Logs will be written to alevin_output/logs; [2021-02-10 12:57:59.773] [jointLog] [info] setting maxHashResizeThreads to 10; [2021-02-10 12:57:59.773] [jointLog] [info] Fragment incompatibility prior below threshold. Incompatible fragments will be ignored.; [2021-02-10 12:57:59.773] [jointLog] [info] The --mimicBT2, --mimicStrictBT2 and --hardFilter flags imply mapping validation (--validateMappings). Enabling mapping validation.; [2021-02-10 12:57:59.774] [jointLog] [info] Usage of --validateMappings implies use of minScoreFraction. Since not explicitly specified, it is being set to 0.65; [2021-02-10 12:57:59.774] [jointLog] [info] The use of range-factorized equivalence classes does not make sense in conjunction with --hardFilter. Disabling range-factorized equivalence classes. ; [2021-02-10 12:57:59.774] [jointLog] [info] Setting consensusSlack to selective-alignment default of 0.35.; [2021-02-10 12:57:59.774] [jointLog] [info] Using default value of 0.87 for minScoreFraction in Alevin; Using default value of 0.6 for consensusSlack in Alevin; ...; [etc.]. **Desktop**. - OS: Debian Linux; - Version: Linux elegans 5.6.0-1-amd64 #1 SMP Debian 5.6.7-1 (2020-04-29) x86_64 GNU/Linux; $ lsb_release -a; No LSB modules are available.; Distributor ID: Debian; Description: Debian GNU/Linux bullseye/sid; Release: unstable; Codename: sid. **Additional context**. This is my first run with BD Rhapsody data (and our own single cell data, for that matter). We're currently using SevenBridges for generating gene count tables, but I don't like the black-box nature of that service. I'm much more comfortable when I know what's going on under the hood, and can tweak things when I notice oddness.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/628:3824,Release,Release,3824,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/628,1,['Release'],['Release']
Deployability,Merge develop into main for 1.10.2 release.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/857:35,release,release,35,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/857,1,['release'],['release']
Deployability,Merge develop into master with patch to enable linux-ARM build on bioconda.,MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/pull/917:31,patch,patch,31,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/pull/917,1,['patch'],['patch']
Deployability,"My current version of salmon is 0.14.1 and I need to upgrade to version 1.1.0, I'v tried the command; ""conda update salmon"" but the version remains 0.14.1.",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/483:53,upgrade,upgrade,53,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/483,2,"['update', 'upgrade']","['update', 'upgrade']"
Deployability,"NO BUG! I am presenting bulk RNA seq to non-bioinformaticians and wanted to go over how Salmon works in simple terms. . I tried understanding all the algorithms and models underlying the tool, but need help in explaining it more simply to a crowd of non-mathematicians. How would you explain the quasi mapping and quantification broadly and in simple terms? No need to get into deeper details. Just want an overview of a complicated mathematical pipeline. Presentation is on Monday so would really appreciate a timely response.; Thanks!",MatchSource.ISSUE,COMBINE-lab,salmon,v1.10.1,https://github.com/COMBINE-lab/salmon/issues/926:446,pipeline,pipeline,446,https://combine-lab.github.io/salmon,https://github.com/COMBINE-lab/salmon/issues/926,1,['pipeline'],['pipeline']
