quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,filename,wiki,url,total_similar,target_keywords,target_matched_words
Availability," "" << id2 << "" "" << name1 << "" "" << name2 << endl;; }; }. 4. Working with date/time parameters. The current implementation supports date, time, date&time and timestamp; data (all time intervals are not supported yet). To set or get date/time values,; the following methods should be used:; SetTime()/GetTime() - only time (hour:min:sec),; SetDate()/GetDate() - only date (year-month-day),; SetDatime()/GetDatime() - date and time; SetTimestamp()/GetTimestamp() - timestamp with seconds fraction; For some of these methods TDatime type can be used as parameter / return value.; Be aware that TDatime supports only dates after 1995-01-01.; There are also methods to get year, month, day, hour, minutes and seconds separately. Note that different SQL databases treat date/time types differently.; For instance, MySQL has all correspondent types (TIME, DATE, DATETIME and TIMESTAMP),; Oracle native driver supports only DATE (which is actually date and time) and TIMESTAMP; ODBC interface provides access for time, date and timestamps,; for PostgreSQL, TIMESTAMP is available and can be retrieved via all methods,; the implementation for SQLite interprets the column content as; a timestamp with second fraction.; Due to these differences, one should use correct methods to access such data.; For instance, in MySQL SQL type 'DATE' is only date (one should use GetDate() to; access such data), while in Oracle it is date and time. Therefore,; to get complete data from a 'DATE' column in Oracle, one should use the GetDatime() method. The only difference between timestamp and date/time is that timestamp has a fractional; seconds part. Be aware that the fractional part has different meanings; (actual value) in different SQL plugins.; For PostgreSQL, it is given back as microseconds, while for SQLite3,; milliseconds correspond to the fraction (similar to the DATETIME-functions; implemented in the SQLite3 language). 5. Binary data. Most modern data bases support just binary data, which is; typicall",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSQLStatement.html:8782,avail,available,8782,root/html534/TSQLStatement.html,https://root.cern,https://root.cern/root/html534/TSQLStatement.html,2,['avail'],['available']
Availability," """") const; THnBase*THnBase::RebinBase(Int_t group) const; THnBase*THnBase::RebinBase(const Int_t* group) const; virtual voidTHnBase::Reserve(Long64_t); voidTHnBase::ResetBase(Option_t* option = """"); virtual voidTHnBase::SetFilledBins(Long64_t); voidTHnBase::UpdateXStat(const Double_t* x, Double_t w = 1.). Data Members; public:. enum THnBase::[unnamed] { kNoInt; kValidInt; kInvalidInt; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TNDArrayT<unsigned short>fArraybin content; TObjArrayTHnBase::fAxesaxes of the histogram; TObjArrayTHnBase::fBrowsables! browser-helpers for each axis; Int_t*THn::fCoordBuf! Temporary buffer; Double_tTHnBase::fEntriesnumber of entries, spread over chunks; Double_t*THnBase::fIntegral! array with bin weight sums; enum THnBase::THnBase::fIntegralStatus! status of integral; TStringTNamed::fNameobject identifier; Int_tTHnBase::fNdimensionsnumber of dimensions; TNDArrayT<Double_t>THn::fSumw2bin error, lazy allocation happens in TNDArrayT; TStringTNamed::fTitleobject title; Double_tTHnBase::fTsumwtotal sum of weights; Double_tTHnBase::fTsumw2total sum of weights squared; -1 if no errors are calculated; TArrayDTHnBase::fTsumwxtotal sum of weight*X for each dimension; TArrayDTHnBase::fTsumwx2total sum of weight*X*X for each dimension. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GetArray(); Increment the bin content of ""bin"" by ""w"",; return the bin index. return GetArray(). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THnT_unsigned_short_.html:12321,error,error,12321,root/html534/THnT_unsigned_short_.html,https://root.cern,https://root.cern/root/html534/THnT_unsigned_short_.html,4,['error'],"['error', 'errors']"
Availability," """") const; virtual Int_tTObject::Compare(const TObject* obj) const; TMVA::ConfigurableTMVA::Configurable::Configurable(const TString& theOption = """"); virtual voidTObject::Copy(TObject& object) const; virtual const TMVA::Ranking*CreateRanking(); TMVA::DataSet*TMVA::MethodBase::Data() const; TMVA::DataSetInfo&TMVA::MethodBase::DataInfo() const; virtual voidDeclareOptions(); virtual voidTObject::Delete(Option_t* option = """")MENU ; voidTMVA::MethodBase::DisableWriting(Bool_t setter); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tTMVA::MethodBase::DoMulticlass() const; Bool_tTMVA::MethodBase::DoRegression() const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TMVA::Types::EAnalysisTypeTMVA::MethodBase::GetAnalysisType() const; const vector<double>&GetBoostWeights() const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTMVA::MethodBase::GetEfficiency(const TString&, TMVA::Types::ETreeType, Double_t& err); const TMVA::Event*TMVA::MethodBase::GetEvent() const; const TMVA::Event*TMVA::MethodBase::GetEvent(const TMVA::Event* ev) const; const TMVA::Event*TMVA::MethodBase::GetEvent(Long64_t ievt) const; const TMVA::Event*TMVA::M",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MethodBDT.html:5865,error,error,5865,root/html528/TMVA__MethodBDT.html,https://root.cern,https://root.cern/root/html528/TMVA__MethodBDT.html,6,['error'],['error']
Availability," """") const; virtual TObject*CloneObject(const TObject* obj, Bool_t autoadd = kTRUE); virtual voidClose(Option_t* option = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject&) const; static TDirectory*&CurrentDirectory(); static voidDecodeNameCycle(const char* namecycle, char* name, Short_t& cycle); virtual voidDelete(const char* namecycle = """"); virtual voidDeleteAll(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; static voidEncodeNameCycle(char* buffer, const char* name, Short_t cycle); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TKey*FindKey(const char*) const; virtual TKey*FindKeyAny(const char*) const; virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; virtual TObject*FindObjectAny(const char* name) const; virtual TObject*FindObjectAnyFile(const char*) const; virtual TObject*Get(const char* namecycle); virtual Int_tGetBufferSize() const; virtual TDirectory*GetDirectory(const char* namecycle, Bool_t printError = false, const char* funcname = ""GetDirectory""); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TFile*GetFile() const; virtual const char*TObject::GetIconName() const; virtual TKey*GetKey(const char*, Short_t = 9999) const; virtual TList*GetList() const; virtual TList*GetListOfKeys() const; virtual TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDirectory.html:2143,error,error,2143,root/html532/TDirectory.html,https://root.cern,https://root.cern/root/html532/TDirectory.html,2,['error'],['error']
Availability," """"); set columns headers. void SetViewMode(EListViewMode viewMode); Set list view mode for container. void SetColumns(Int_t* cpos, Int_t* jmode); Set column information for list items. TGDimension GetMaxItemSize() const; Get size of largest item in container. Int_t GetMaxSubnameWidth(Int_t idx) const; Get width of largest subname in container. void RemoveItemWithData(void* userData); Remove item with fUserData == userData from container. void ActivateItem(TGFrameElement* el); Select/activate item. void DeActivateItem(TGFrameElement* el); Unselect/deactivate item. Bool_t HandleButton(Event_t* event); Handle mouse button event in container. TList * GetSelectedItems(); Get list of selected items in container. void LineLeft(Bool_t select = kFALSE); Move current position one column left. void LineRight(Bool_t select = kFALSE); Move current position one column right. void LineUp(Bool_t select = kFALSE); Make current position first line in window by scrolling up. void LineDown(Bool_t select = kFALSE); Move one line down. TGDimension GetPageDimension() const; Returns page dimension. void SavePrimitive(ostream& out, Option_t* option = """"); Save a list view container as a C++ statement(s) on output stream out. TGLVEntry& operator=(const TGLVContainer& ). EListViewMode GetViewMode() const; { return fViewMode; }. void SetHeaders(Int_t ncolumns). void SetHeader(const char* s, Int_t hmode, Int_t cmode, Int_t idx). void SetDefaultHeaders(). const char * GetHeader(Int_t idx) const. TGLVContainer(const TGLVContainer& ). TGListView * GetListView() const; { return fListView; }. void AddItem(TGLVEntry* item); { AddFrame(item, fItemLayout); item->SetColumns(fCpos, fJmode); fTotal++; }. void SetListView(TGListView* lv); { fListView = lv; }. Bool_t GetMultipleSelection() const; { return fMultiSelect; }. void SetMultipleSelection(Bool_t multi = kTRUE); { fMultiSelect = multi; }. » Author: Fons Rademakers 17/01/98 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLVContainer.html:26820,down,down,26820,root/html528/TGLVContainer.html,https://root.cern,https://root.cern/root/html528/TGLVContainer.html,6,['down'],['down']
Availability," """"); static Long64_tBinarySearch(Long64_t n, const TGeoBranchArray** array, TGeoBranchArray* value); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; voidCleanMatrix(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tCompare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; voidCopyTo(TGeoBranchArray* dest); size_tDataSize() const; void*DataStart() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TGeoNode**GetArray() const; TGeoNode*GetCurrentNode() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; size_tGetLevel() const; const TGeoHMatrix*GetMatrix() const; size_tGetMaxLevel() const; virtual const char*TObject::GetName() const; TGeoNode*GetNode(Int_t level) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; voidGetPath(TString& path) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoBranchArray.html:1908,error,error,1908,root/html534/TGeoBranchArray.html,https://root.cern,https://root.cern/root/html534/TGeoBranchArray.html,4,['error'],['error']
Availability," """"); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual voidClose(Option_t* option = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual TObject*Convert1D(Int_t id); virtual TObject*Convert2D(Int_t id); virtual TFile*Convert2root(const char* rootname = """", Int_t lrecl = 0, Option_t* option = """")MENU ; virtual TObject*ConvertCWN(Int_t id); virtual TObject*ConvertProfile(Int_t id); virtual TObject*ConvertRWN(Int_t id); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; voidDeleteID(Int_t id); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; TObject*Get(Int_t id); const char*GetCurDir() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetEntry(Int_t entry, Int_t id, Int_t atype, Float_t* x); Int_tGetEntryBranch(Int_t entry, Int_t id); virtual const char*TObject::GetIconName() const; TList*GetList() const; TList*GetListOfKeys() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THbookFile.html:2225,Error,Error,2225,root/html532/THbookFile.html,https://root.cern,https://root.cern/root/html532/THbookFile.html,4,['Error'],['Error']
Availability," """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual TObject*CloneObject(const TObject* obj, Bool_t autoadd = kTRUE); virtual voidClose(Option_t* option = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidCopy(TObject&) const; static TDirectory*&CurrentDirectory(); static voidDecodeNameCycle(const char* namecycle, char* name, Short_t& cycle, const size_t namesize = 0); virtual voidDelete(const char* namecycle = """"); virtual voidDeleteAll(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; static voidEncodeNameCycle(char* buffer, const char* name, Short_t cycle); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TKey*FindKey(const char*) const; virtual TKey*FindKeyAny(const char*) const; virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; virtual TObject*FindObjectAny(const char* name) const; virtual TObject*FindObjectAnyFile(const char*) const; virtual TObject*Get(const char* namecycle); virtual Int_tGetBufferSize() const; virtual TDirectory*GetDirectory(const char* namecycle, Bool_t printError = false, const char* funcname = ""GetDirectory""); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TFile*GetFile() const; virtual const char*TObject::GetIconName() const; virtual TKey*GetKey(const char*, Short_t = 9999) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDirectory.html:2086,error,error,2086,root/html534/TDirectory.html,https://root.cern,https://root.cern/root/html534/TDirectory.html,6,['error'],['error']
Availability," """"); virtual voidTObject::Browse(TBrowser* b); voidTMVA::Configurable::CheckForUnusedOptions() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; TMVA::ConfigurableTMVA::Configurable::Configurable(const TString& theOption = """"); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; Double_tEstimatorFunction(vector<Double_t>& pars); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*TMVA::Configurable::GetConfigDescription() const; const char*TMVA::Configurable::GetConfigName() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TMVA::IFitterTarget&TMVA::FitterBase::GetFitterTarget() const; virtual const char*TObject::GetIconName() const; virtual const char*TMVA::FitterBase::GetName() const; Int_tTMVA::FitterBase::GetNpars() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TString&TMVA::Configurable::GetOptions() const; virtual const char*TObject::GetT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MinuitFitter.html:1719,error,error,1719,root/html528/TMVA__MinuitFitter.html,https://root.cern,https://root.cern/root/html528/TMVA__MinuitFitter.html,6,['error'],['error']
Availability," """"); voidAsString(TString& out, const char* options = """") const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tConflicts(const ROOT::TSchemaRule* rule) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetAttributes() const; const char*GetCode() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Bool_tGetEmbed() const; virtual const char*TObject::GetIconName() const; const TObjArray*GetInclude() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; ROOT::TSchemaRule::ReadFuncPtr_tGetReadFunctionPointer() const; ROOT::TSchemaRule::ReadRawFuncPtr_tGetReadRawFunctionPointer() const; ROOT::TSchemaRule::RuleType_tGetRuleType() const; const TObjArray*GetSource() const; const char*GetSourceClass() const; const TObjArray*GetTar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__TSchemaRule.html:1473,error,error,1473,root/html528/ROOT__TSchemaRule.html,https://root.cern,https://root.cern/root/html528/ROOT__TSchemaRule.html,10,['error'],['error']
Availability," """")MENU ; virtual voidTH1::DirectoryAutoAdd(TDirectory*); Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTH1::DistancetoPrimitive(Int_t px, Int_t py); virtual Bool_tDivide(const TH1* h1); virtual Bool_tDivide(TF1* h1, Double_t c1 = 1); virtual Bool_tDivide(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """")MENU ; virtual voidTH1::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TH1*DrawCopy(Option_t* option = """") const; virtual TH1*TH1::DrawNormalized(Option_t* option = """", Double_t norm = 1) const; virtual voidTH1::DrawPanel()MENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTH1::Eval(TF1* f1, Option_t* option = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTH1::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TH1*TH1::FFT(TH1* h_output, Option_t* option); virtual Int_tFill(Double_t x, Double_t y); virtual Int_tFill(const char* namex, Double_t y); virtual Int_tFill(Double_t x, Double_t y, Double_t w); virtual Int_tFill(const char* namex, Double_t y, Double_t w); virtual voidTNamed::FillBuffer(char*& buffer); virtual voidFillN(Int_t ntimes, const Double_t* x, const Double_t* y, const Double_t* w, Int_t stride = 1); virtual voidTH1::FillRandom(const char* fname, Int_t ntimes = 5000); virtual voidTH1::FillRandom(TH1* h, Int_t ntimes = 5000); virtual Int_tTH1::FindBin(Double_t x, Double_t y = 0, Double_t z = 0); virtual Int_tTH1::FindFirstBinAbove(Double_t threshold = 0, Int_t axis = 1) const; virtual Int_tTH1::FindFixBin(Double_t x, Double_t y = 0, Double_t z ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProfile.html:5821,error,error,5821,root/html534/TProfile.html,https://root.cern,https://root.cern/root/html534/TProfile.html,2,['error'],['error']
Availability," """")MENU ; virtual voidTH1::DirectoryAutoAdd(TDirectory*); Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTH1::DistancetoPrimitive(Int_t px, Int_t py); virtual Bool_tDivide(const TH1* h1); virtual Bool_tDivide(TF1* h1, Double_t c1 = 1); virtual Bool_tDivide(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """")MENU ; virtual voidTH1::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TH1*DrawCopy(Option_t* option = """") const; virtual TH1*TH1::DrawNormalized(Option_t* option = """", Double_t norm = 1) const; virtual voidTH1::DrawPanel()MENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTH1::Eval(TF1* f1, Option_t* option = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTH1::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TH1*TH1::FFT(TH1* h_output, Option_t* option); virtual Int_tFill(Double_t x, Double_t y, Double_t z); virtual Int_tFill(Double_t x, const char* namey, Double_t z); virtual Int_tFill(const char* namex, Double_t y, Double_t z); virtual Int_tFill(const char* namex, const char* namey, Double_t z); virtual Int_tFill(Double_t x, Double_t y, Double_t z, Double_t w); virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTH2::FillN(Int_t, const Double_t*, const Double_t*, Int_t); virtual voidTH2::FillN(Int_t ntimes, const Double_t* x, const Double_t* y, const Double_t* w, Int_t stride = 1); virtual voidTH2::FillRandom(const char* fname, Int_t ntimes = 5000); virtual voidTH2::FillRandom(TH1* h, Int_t ntimes = 5000); virtual Int_tTH1::FindBin(Double_t x, Do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProfile2D.html:5563,error,error,5563,root/html534/TProfile2D.html,https://root.cern,https://root.cern/root/html534/TProfile2D.html,2,['error'],['error']
Availability," """")MENU ; virtual voidTH1::DirectoryAutoAdd(TDirectory*); Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTH1::DistancetoPrimitive(Int_t px, Int_t py); virtual Bool_tDivide(const TH1* h1); virtual Bool_tDivide(TF1* h1, Double_t c1 = 1); virtual Bool_tDivide(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """")MENU ; virtual voidTH1::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TH1*DrawCopy(Option_t* option = """") const; virtual TH1*TH1::DrawNormalized(Option_t* option = """", Double_t norm = 1) const; virtual voidTH1::DrawPanel()MENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTH1::Eval(TF1* f1, Option_t* option = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTH1::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TH1*TH1::FFT(TH1* h_output, Option_t* option); virtual Int_tFill(Double_t x, Double_t y, Double_t z, Double_t t); virtual Int_tFill(Double_t x, Double_t y, Double_t z, Double_t t, Double_t w); virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTH1::FillN(Int_t ntimes, const Double_t* x, const Double_t* w, Int_t stride = 1); virtual voidTH1::FillN(Int_t, const Double_t*, const Double_t*, const Double_t*, Int_t); virtual voidTH3::FillRandom(const char* fname, Int_t ntimes = 5000); virtual voidTH3::FillRandom(TH1* h, Int_t ntimes = 5000); virtual Int_tTH1::FindBin(Double_t x, Double_t y = 0, Double_t z = 0); virtual Int_tTH3::FindFirstBinAbove(Double_t threshold = 0, Int_t axis = 1) const; virtual Int_tTH1::FindFixBin(Double_t x, Double_t y = 0, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProfile3D.html:5222,error,error,5222,root/html534/TProfile3D.html,https://root.cern,https://root.cern/root/html534/TProfile3D.html,2,['error'],['error']
Availability," ""(h)bar1""; 20% for option ""(h)bar2""; 30% for option ""(h)bar3""; 40% for option ""(h)bar4"". Picture; Source. // Example of bar charts with 1-d histograms; // Author: Rene Brun; TCanvas *hbars() {; cout << gSystem->DirName(__FILE__) << endl;; // try to open first the file cernstaff.root in tutorials/tree directory; TString filedir = gSystem->DirName(__FILE__);; filedir += TString(""/../tree/"");; TString filename = ""cernstaff.root"";; bool fileNotFound = gSystem->AccessPathName(filename); // note opposite return code; // if file is not found try to generate it uing the macro tree/cernbuild.C; if (fileNotFound) {; TString macroName = filedir + ""cernbuild.C"";; if (!gInterpreter->IsLoaded(macroName)) gInterpreter->LoadMacro(macroName);; gROOT->ProcessLineFast(""cernbuild()"");; }; TFile * f = TFile::Open(filename);; if (!f) {; Error(""hbars"",""file cernstaff.root not found"");; return 0;; }; TTree *T = (TTree*)f->Get(""T"");; if (!T) {; Error(""hbars"",""Tree T is not present in file %s"",f->GetName() );; return 0;; }; T->SetFillColor(45);; TCanvas *c1 = new TCanvas(""c1"",""histograms with bars"",700,800);; c1->SetFillColor(42);; c1->Divide(1,2);. //horizontal bar chart; c1->cd(1); gPad->SetGrid(); gPad->SetLogx(); gPad->SetFrameFillColor(33);; T->Draw(""Nation"","""",""hbar2"");. //vertical bar chart; c1->cd(2); gPad->SetGrid(); gPad->SetFrameFillColor(33);; T->Draw(""Division>>hDiv"","""",""goff"");; TH1F *hDiv = (TH1F*)gDirectory->Get(""hDiv"");; hDiv->SetStats(0);; TH1F *hDivFR = (TH1F*)hDiv->Clone(""hDivFR"");; T->Draw(""Division>>hDivFR"",""Nation==\""FR\"""",""goff"");; hDiv->SetBarWidth(0.45);; hDiv->SetBarOffset(0.1);; hDiv->SetFillColor(49);; TH1 *h1 = hDiv->DrawCopy(""bar2"");; hDivFR->SetBarWidth(0.4);; hDivFR->SetBarOffset(0.55);; hDivFR->SetFillColor(50);; TH1 *h2 = hDivFR->DrawCopy(""bar2,same"");. TLegend *legend = new TLegend(0.55,0.65,0.76,0.82);; legend->AddEntry(h1,""All nations"",""f"");; legend->AddEntry(h2,""French only"",""f"");; legend->Draw();. c1->cd();; delete f;; return c1;; }; To control the ba",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/THistPainter.html:24545,Error,Error,24545,root/html604/THistPainter.html,https://root.cern,https://root.cern/root/html604/THistPainter.html,1,['Error'],['Error']
Availability," ""Function dimension is larger than one"");; 1247 }; 1248 ; 1249 ROOT::Math::RichardsonDerivator rd;; 1250 double xmin, xmax;; 1251 GetRange(xmin, xmax);; 1252 // this is not optimal (should be used the average x instead of the range); 1253 double h = eps * std::abs(xmax - xmin);; 1254 if (h <= 0) h = 0.001;; 1255 double der = 0;; 1256 if (params) {; 1257 ROOT::Math::WrappedTF1 wtf(*(const_cast<TF1 *>(this)));; 1258 wtf.SetParameters(params);; 1259 der = rd.Derivative3(wtf, x, h);; 1260 } else {; 1261 // no need to set parameters used a non-parametric wrapper to avoid allocating; 1262 // an array with parameter values; 1263 ROOT::Math::WrappedFunction<const TF1 & > wf(*this);; 1264 der = rd.Derivative3(wf, x, h);; 1265 }; 1266 ; 1267 gErrorTF1 = rd.Error();; 1268 return der;; 1269 ; 1270}; 1271 ; 1272 ; 1273////////////////////////////////////////////////////////////////////////////////; 1274/// Static function returning the error of the last call to the of Derivative's; 1275/// functions; 1276 ; 1277Double_t TF1::DerivativeError(); 1278{; 1279 return gErrorTF1;; 1280}; 1281 ; 1282 ; 1283////////////////////////////////////////////////////////////////////////////////; 1284/// Compute distance from point px,py to a function.; 1285///; 1286/// Compute the closest distance of approach from point px,py to this; 1287/// function. The distance is computed in pixels units.; 1288///; 1289/// Note that px is called with a negative value when the TF1 is in; 1290/// TGraph or TH1 list of functions. In this case there is no point; 1291/// looking at the histogram axis.; 1292 ; 1293Int_t TF1::DistancetoPrimitive(Int_t px, Int_t py); 1294{; 1295 if (!fHistogram) return 9999;; 1296 Int_t distance = 9999;; 1297 if (px >= 0) {; 1298 distance = fHistogram->DistancetoPrimitive(px, py);; 1299 if (distance <= 1) return distance;; 1300 } else {; 1301 px = -px;; 1302 }; 1303 ; 1304 Double_t xx[1];; 1305 Double_t x = gPad->AbsPixeltoX(px);; 1306 xx[0] = gPad->PadtoX(x);; 1307 if (xx[0] < fX",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:45960,error,error,45960,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['error'],['error']
Availability," ""ND"" . ). Constructor. ; Argument is number of variables in the sample of data Options are:; N Normalize the covariance matrix (default); D Store input data (default). The created object is named ""principal"" by default. ; Definition at line 253 of file TPrincipal.cxx. Member Function Documentation. ◆ AddRow(). void TPrincipal::AddRow ; (; const Double_t * ; p). virtual . Add a data point and update the covariance matrix. ; The input array must be fNumberOfVariables long.; The Covariance matrix and mean values of the input data is calculated on the fly by the following equations:. \[; \left<x_i\right>^{(0)} = x_{i0}; \]. \[; \left<x_i\right>^{(n)} = \left<x_i\right>^{(n-1)}; + \frac1n \left(x_{in} - \left<x_i\right>^{(n-1)}\right); \]. \[; C_{ij}^{(0)} = 0; \]. \[; C_{ij}^{(n)} = C_{ij}^{(n-1)}; + \frac1{n-1}\left[\left(x_{in} - \left<x_i\right>^{(n)}\right); \left(x_{jn} - \left<x_j\right>^{(n)}\right)\right]; - \frac1n C_{ij}^{(n-1)}; \]. since this is a really fast method, with no rounding errors (please refer to CERN 72-21 pp. 54-106).; The data is stored internally in a TVectorD, in the following way:. \[; \mathbf{x} = \left[\left(x_{0_0},\ldots,x_{{P-1}_0}\right),\ldots,; \left(x_{0_i},\ldots,x_{{P-1}_i}\right), \ldots\right]; \]. With \(P\) as defined in the class description. ; Definition at line 414 of file TPrincipal.cxx. ◆ Browse(). void TPrincipal::Browse ; (; TBrowser * ; b). overridevirtual . Browse the TPrincipal object in the TBrowser. ; Reimplemented from TObject.; Definition at line 471 of file TPrincipal.cxx. ◆ Class(). static TClass * TPrincipal::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TPrincipal::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TPrincipal::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 79 of file TPrincipal.h. ◆ Clear(). void TPrincipal::Clear ; (; Option_t * ; opt = """"). ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPrincipal.html:23269,error,errors,23269,doc/master/classTPrincipal.html,https://root.cern,https://root.cern/doc/master/classTPrincipal.html,1,['error'],['errors']
Availability," ""X"", ""Y"" or ""Z""; TH1::LabelsDeflatevirtual void LabelsDeflate(Option_t *axis=""X"")Reduce the number of bins for the axis passed in the option to the number of bins having a label.Definition TH1.cxx:5245; This operation is automatic when using TTree::Draw. Once bin labels have been created, they become persistent if the histogram is written to a file or when generating the C++ code via SavePrimitive. Histograms with automatic bins; When a histogram is created with an axis lower limit greater or equal to its upper limit, the SetBuffer is automatically called with an argument fBufferSize equal to fgBufferSize (default value=1000). fgBufferSize may be reset via the static function TH1::SetDefaultBufferSize. The axis limits will be automatically computed when the buffer will be full or when the function BufferEmpty is called. Rebinning; At any time, a histogram can be rebinned via TH1::Rebin. This function returns a new histogram with the rebinned contents. If bin errors were stored, they are recomputed during the rebinning. Filling histograms; A histogram is typically filled with statements like: h1->Fill(x);; h1->Fill(x, w); //fill with weight; h2->Fill(x, y); h2->Fill(x, y, w); h3->Fill(x, y, z); h3->Fill(x, y, z, w); wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; TH1::Fillvirtual Int_t Fill(Double_t x)Increment bin with abscissa X by 1.Definition TH1.cxx:3344; or via one of the Fill functions accepting names described above. The Fill functions compute the bin number corresponding to the given x, y or z argument and increment this bin by the given weight. The Fill functions return the bin number for 1-D histograms or global bin number for 2-D and 3-D histograms. If TH1::Sumw2 has been called before filling, the sum of squares of weights is also stored. One can also increment directly a bin number via TH1::AddBinContent or replace the existing content via TH1::SetBinContent. Passing an out-of-range bin to TH1::AddBinContent leads to undefined behavior. To access the b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:10943,error,errors,10943,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['error'],['errors']
Availability," ""cannot create socket (entry %i)"",; 15023 portsTotal);; 15024 continue;; 15025 }; 15026 ; 15027#if defined(_WIN32); 15028 /* Windows SO_REUSEADDR lets many procs binds to a; 15029 * socket, SO_EXCLUSIVEADDRUSE makes the bind fail; 15030 * if someone already has the socket -- DTL */; 15031 /* NOTE: If SO_EXCLUSIVEADDRUSE is used,; 15032 * Windows might need a few seconds before; 15033 * the same port can be used again in the; 15034 * same process, so a short Sleep may be; 15035 * required between mg_stop and mg_start.; 15036 */; 15037 if (setsockopt(so.sock,; 15038 SOL_SOCKET,; 15039 SO_EXCLUSIVEADDRUSE,; 15040 (SOCK_OPT_TYPE)&on,; 15041 sizeof(on)); 15042 != 0) {; 15043 ; 15044 /* Set reuse option, but don't abort on errors. */; 15045 mg_cry_ctx_internal(; 15046 phys_ctx,; 15047 ""cannot set socket option SO_EXCLUSIVEADDRUSE (entry %i)"",; 15048 portsTotal);; 15049 }; 15050#else; 15051 if (setsockopt(so.sock,; 15052 SOL_SOCKET,; 15053 SO_REUSEADDR,; 15054 (SOCK_OPT_TYPE)&on,; 15055 sizeof(on)); 15056 != 0) {; 15057 ; 15058 /* Set reuse option, but don't abort on errors. */; 15059 mg_cry_ctx_internal(; 15060 phys_ctx,; 15061 ""cannot set socket option SO_REUSEADDR (entry %i)"",; 15062 portsTotal);; 15063 }; 15064#endif; 15065 ; 15066#if defined(USE_X_DOM_SOCKET); 15067 if (ip_version == 99) {; 15068 /* Unix domain socket */; 15069 } else; 15070#endif; 15071 ; 15072 if (ip_version > 4) {; 15073 /* Could be 6 for IPv6 onlyor 10 (4+6) for IPv4+IPv6 */; 15074#if defined(USE_IPV6); 15075 if (ip_version > 6) {; 15076 if (so.lsa.sa.sa_family == AF_INET6; 15077 && setsockopt(so.sock,; 15078 IPPROTO_IPV6,; 15079 IPV6_V6ONLY,; 15080 (void *)&off,; 15081 sizeof(off)); 15082 != 0) {; 15083 ; 15084 /* Set IPv6 only option, but don't abort on errors. */; 15085 mg_cry_ctx_internal(phys_ctx,; 15086 ""cannot set socket option ""; 15087 ""IPV6_V6ONLY=off (entry %i)"",; 15088 portsTotal);; 15089 }; 15090 } else {; 15091 if (so.lsa.sa.sa_family == AF_INET6; 15092 && setsockopt(so.sock,; 15093 I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:445633,error,errors,445633,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['errors']
Availability," ""cannot create socket (entry %i)"",; 15024 portsTotal);; 15025 continue;; 15026 }; 15027 ; 15028#if defined(_WIN32); 15029 /* Windows SO_REUSEADDR lets many procs binds to a; 15030 * socket, SO_EXCLUSIVEADDRUSE makes the bind fail; 15031 * if someone already has the socket -- DTL */; 15032 /* NOTE: If SO_EXCLUSIVEADDRUSE is used,; 15033 * Windows might need a few seconds before; 15034 * the same port can be used again in the; 15035 * same process, so a short Sleep may be; 15036 * required between mg_stop and mg_start.; 15037 */; 15038 if (setsockopt(so.sock,; 15039 SOL_SOCKET,; 15040 SO_EXCLUSIVEADDRUSE,; 15041 (SOCK_OPT_TYPE)&on,; 15042 sizeof(on)); 15043 != 0) {; 15044 ; 15045 /* Set reuse option, but don't abort on errors. */; 15046 mg_cry_ctx_internal(; 15047 phys_ctx,; 15048 ""cannot set socket option SO_EXCLUSIVEADDRUSE (entry %i)"",; 15049 portsTotal);; 15050 }; 15051#else; 15052 if (setsockopt(so.sock,; 15053 SOL_SOCKET,; 15054 SO_REUSEADDR,; 15055 (SOCK_OPT_TYPE)&on,; 15056 sizeof(on)); 15057 != 0) {; 15058 ; 15059 /* Set reuse option, but don't abort on errors. */; 15060 mg_cry_ctx_internal(; 15061 phys_ctx,; 15062 ""cannot set socket option SO_REUSEADDR (entry %i)"",; 15063 portsTotal);; 15064 }; 15065#endif; 15066 ; 15067#if defined(USE_X_DOM_SOCKET); 15068 if (ip_version == 99) {; 15069 /* Unix domain socket */; 15070 } else; 15071#endif; 15072 ; 15073 if (ip_version > 4) {; 15074 /* Could be 6 for IPv6 onlyor 10 (4+6) for IPv4+IPv6 */; 15075#if defined(USE_IPV6); 15076 if (ip_version > 6) {; 15077 if (so.lsa.sa.sa_family == AF_INET6; 15078 && setsockopt(so.sock,; 15079 IPPROTO_IPV6,; 15080 IPV6_V6ONLY,; 15081 (void *)&off,; 15082 sizeof(off)); 15083 != 0) {; 15084 ; 15085 /* Set IPv6 only option, but don't abort on errors. */; 15086 mg_cry_ctx_internal(phys_ctx,; 15087 ""cannot set socket option ""; 15088 ""IPV6_V6ONLY=off (entry %i)"",; 15089 portsTotal);; 15090 }; 15091 } else {; 15092 if (so.lsa.sa.sa_family == AF_INET6; 15093 && setsockopt(so.sock,; 15094 I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:445666,error,errors,445666,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['errors']
Availability," ""centered"" is treated in a special way; 778 // to ensure a better spacing between lines.; 779 if (valign == 2) {; 780 Float_t tsizepad = textsize;; 781 if (tfont%10 == 3) tsizepad = (gPad->AbsPixeltoY(0) - gPad->AbsPixeltoY(textsize))/(gPad->GetY2() - gPad->GetY1());; 782 if (yspace2 < tsizepad) {; 783 entry->SetTextAlign(10*halign+1);; 784 y = ytext - (1. - fEntrySeparation)* yspace2/2.;; 785 } else {; 786 y = ytext;; 787 }; 788 }; 789 ; 790 TLatex entrytex( x, y, entry->GetLabel() );; 791 entrytex.SetNDC();; 792 entry->TAttText::Copy(entrytex);; 793 entrytex.Paint();; 794 ; 795 // reset attributes back to their original values; 796 entry->SetTextAlign(talign);; 797 entry->SetTextAngle(tangle);; 798 entry->SetTextColor(tcolor);; 799 entry->SetTextFont(tfont);; 800 entry->SetTextSize(tsize);; 801 ; 802 // define x,y as the center of the symbol for this entry; 803 Double_t xsym = x1 + margin/2.;; 804 Double_t ysym = ytext;; 805 ; 806 TObject *eobj = entry->GetObject();; 807 ; 808 // depending on the object drawing option, the endcaps for error; 809 // bar are drawn differently.; 810 Int_t endcaps = 0; // no endcaps.; 811 if (eobj) { // eobj == nullptr for the legend header; 812 TString eobjopt = eobj->GetDrawOption();; 813 eobjopt.ToLower();; 814 if (eobjopt.Contains(""e1"") && eobj->InheritsFrom(TH1::Class())) endcaps = 1; // a bar; 815 if (eobj->InheritsFrom(TGraph::Class())) {; 816 endcaps = 1; // a bar, default for TGraph; 817 if (eobjopt.Contains(""z"")) endcaps = 0; // no endcaps.; 818 if (eobjopt.Contains("">"")) endcaps = 2; // empty arrow.; 819 if (eobjopt.Contains(""|>"")) endcaps = 3; // filled arrow.; 820 }; 821 }; 822 float arrow_shift = 0.3;; 823 if (endcaps == 3) arrow_shift = 0.2;; 824 // Draw fill pattern (in a box); 825 ; 826 if ( opt.Contains(""f"")) {; 827 if (eobj && eobj->InheritsFrom(TAttFill::Class())) {; 828 dynamic_cast<TAttFill*>(eobj)->Copy(*entry);; 829 }; 830 ; 831 // Case of exclusion graphs; 832 Float_t wl = 1., wu = 1.;; 833 if (eobj && eobj->I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLegend_8cxx_source.html:28500,error,error,28500,doc/master/TLegend_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLegend_8cxx_source.html,1,['error'],['error']
Availability," ""default"", const char* type = ""VO_ALICE"", const char* description = 0); virtual voidAddToRequirements(const char* value = 0, const char* description = 0); voidAddToSet(const char* key, const char* value); voidAddToSetDescription(const char* key, const char* description); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(const Option_t* = 0); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TStringGenerate(); const char*GetDescription(const char* key); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetValue(cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGridJDL.html:2174,Error,Error,2174,root/html602/TGridJDL.html,https://root.cern,https://root.cern/root/html602/TGridJDL.html,2,['Error'],['Error']
Availability," ""determined event sample size to select training sample from=""<<useForTraining<<Endl;; 1254 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""determined event sample size to select test sample from=""<<useForTesting<<Endl;; 1255 ; 1256 ; 1257 ; 1258 // associate undefined events; 1259 if( splitMode == ""ALTERNATE"" ){; 1260 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""split 'ALTERNATE'"" << Endl;; 1261 Int_t nTraining = availableTraining;; 1262 for( EventVector::iterator it = eventVectorUndefined.begin(), itEnd = eventVectorUndefined.end(); it != itEnd; ){; 1263 ++nTraining;; 1264 if( nTraining <= requestedTraining ){; 1265 eventVectorTraining.insert( eventVectorTraining.end(), (*it) );; 1266 ++it;; 1267 }; 1268 if( it != itEnd ){; 1269 eventVectorTesting.insert( eventVectorTesting.end(), (*it) );; 1270 ++it;; 1271 }; 1272 }; 1273 } else {; 1274 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""split '"" << splitMode << ""'"" << Endl;; 1275 ; 1276 // test if enough events are available; 1277 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""availableundefined : "" << availableUndefined << Endl;; 1278 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""useForTraining : "" << useForTraining << Endl;; 1279 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""useForTesting : "" << useForTesting << Endl;; 1280 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""availableTraining : "" << availableTraining << Endl;; 1281 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""availableTesting : "" << availableTesting << Endl;; 1282 ; 1283 if( availableUndefined<(useForTraining-availableTraining) ||; 1284 availableUndefined<(useForTesting -availableTesting ) ||; 1285 availableUndefined<(useForTraining+useForTesting-availableTraining-availableTesting ) ){; 1286 Log() << kFATAL << Form(""Dataset[%s] : "",dsi.GetName())<< ""More events requested than available!"" << Endl;; 1287 }; 1288 ; 1289 // select the events; 1290 if (useFor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:55675,avail,available,55675,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['avail'],['available']
Availability," ""down"" is reversed.; function suggested/implemented by Miroslav Helbich <helbich@mail.desy.de>. void ComputeRange(Double_t& xmin, Double_t& ymin, Double_t& xmax, Double_t& ymax) const; Compute range. void CopyAndRelease(Double_t** newarrays, Int_t ibegin, Int_t iend, Int_t obegin); Copy and release. Bool_t CopyPoints(Double_t** arrays, Int_t ibegin, Int_t iend, Int_t obegin); Copy errors from fE*** to arrays[***]; or to f*** Copy points. Bool_t CtorAllocate(void); Should be called from ctors after fNpoints has been set. Double_t GetErrorX(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. Double_t GetErrorY(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along Y at point i. Double_t GetErrorXhigh(Int_t bin) const; Get high error on X[i]. Double_t GetErrorXlow(Int_t bin) const; Get low error on X[i]. Double_t GetErrorYhigh(Int_t bin) const; Get high error on Y[i]. Double_t GetErrorYlow(Int_t bin) const; Get low error on Y[i]. void FillZero(Int_t begin, Int_t end, Bool_t from_ctor = kTRUE); Set zero values for point arrays in the range [begin, end). void Print(Option_t* chopt = """") const; Print graph and errors values. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void SetPointError(Double_t exl, Double_t exh, Double_t eyl, Double_t eyh, Double_t exld = 0, Double_t exhd = 0, Double_t eyld = 0, Double_t eyhd = 0); Set ex and ey values for point pointed by the mouse. void SetPointError(Int_t i, Double_t exl, Double_t exh, Double_t eyl, Double_t eyh, Double_t exld = 0, Double_t exhd = 0, Double_t eyld = 0, Double_t eyhd = 0); Set ex and ey values for point number i. void SwapPoints(Int_t pos1, Int_t pos2); Swap points. Double_t ** Allocate(Int_t size). Double_t * GetEXlow() const; {return fEXlow;}. Double_t * GetEXhigh() const; {return fEXhigh;}. Double_t * GetEYlow() const; {return fEYlow;}. Double_t * GetEYhi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphBentErrors.html:17595,error,error,17595,root/html528/TGraphBentErrors.html,https://root.cern,https://root.cern/root/html528/TGraphBentErrors.html,4,['error'],['error']
Availability," ""errorLevel+1"" so that; all errors with ""level < errorLevel"" will be ignored. calling the function with a negative argument; (e.g., ""NoMsg( -1 )""); resets gErrorIgnoreLevel to its previous value. Int_t Complete(const TRegexp& re, const TSeqCollection* pListOfCandidates, const char[] appendage, ostream& out, TString::ECaseCompare cmp = TString::kExact); [private]. void CopyMatch(char[] dest, const char[] localName, const char[] appendage = 0, const char[] fullName = 0) const; [private]. TString DeterminePath(const TString& fileName, const char[] defaultPath) const; [private]. TString ExtendPath(const char[] originalPath, TString newBase) const; [private]. Int_t Hook(char* buf, int* pLoc, ostream& out); [private]. void InitPatterns(); [private]. TClass * MakeClassFromClassName(const char[] className) const; [private]; (does some specific error handling that makes the function unsuitable for general use.); returns a new'd TClass given the name of a class.; user must delete.; returns 0 in case of error. TClass * TryMakeClassFromClassName(const char[] className) const; Same as above but does not print the error message. TClass * MakeClassFromVarName(const char[] varName, TTabCom::EContext_t& context, int iter = 0); [private]; (does some specific error handling that makes the function unsuitable for general use.); returns a new'd TClass given the name of a variable.; user must delete.; returns 0 in case of error.; if user has operator.() or operator->() backwards, will modify: context, *fpLoc and fBuf.; context sensitive behavior. void SetPattern(TTabCom::EContext_t handle, const char[] regexp); [private]. int ParseReverse(const char* var_str, int start). Returns the place in the string where to put the \0, starting the search; from ""start"". TTabCom(). TTabCom& operator=(const TTabCom& ). EContext_t DetermineContext() const. » Author: Christian Lacunza 27/04/99 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/rint:$Id$ » Last generated: 20",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTabCom.html:12743,error,error,12743,root/html602/TTabCom.html,https://root.cern,https://root.cern/root/html602/TTabCom.html,4,['error'],['error']
Availability," ""file %s can not be opened"", fname.Data());; 539 zombify();; 540 return;; 541 }; 542 fWritable = kTRUE;; 543 } else {; 544#ifndef WIN32; 545 fD = TFile::SysOpen(fname.Data(), O_RDONLY, 0644);; 546#else; 547 fD = TFile::SysOpen(fname.Data(), O_RDONLY | O_BINARY, S_IREAD | S_IWRITE);; 548#endif; 549 if (fD == -1) {; 550 SysError(""TFile"", ""file %s can not be opened for reading"", fname.Data());; 551 zombify();; 552 return;; 553 }; 554 fWritable = kFALSE;; 555 }; 556 ; 557 // calling virtual methods from constructor not a good idea, but it is how code was developed; 558 TFile::Init(create); // NOLINT: silence clang-tidy warnings; 559}; 560 ; 561////////////////////////////////////////////////////////////////////////////////; 562/// File destructor.; 563 ; 564TFile::~TFile(); 565{; 566 Close(); // NOLINT: silence clang-tidy warnings; 567 ; 568 // In case where the TFile is still open at 'tear-down' time the order of operation will be; 569 // call Close(""nodelete""); 570 // then later call delete TFile; 571 // which means that at this point we might still have object held and those; 572 // might requires a 'valid' TFile object in their desctructor (for example,; 573 // TTree call's GetReadCache which expects a non-null fCacheReadMap).; 574 // So delete the objects (if any) now.; 575 ; 576 if (fList); 577 fList->Delete(""slow"");; 578 ; 579 SafeDelete(fAsyncHandle);; 580 SafeDelete(fCacheRead);; 581 SafeDelete(fCacheReadMap);; 582 SafeDelete(fCacheWrite);; 583 SafeDelete(fProcessIDs);; 584 SafeDelete(fFree);; 585 SafeDelete(fArchive);; 586 SafeDelete(fInfoCache);; 587 SafeDelete(fOpenPhases);; 588 ; 589 if (fGlobalRegistration) {; 590 R__LOCKGUARD(gROOTMutex);; 591 gROOT->GetListOfClosedObjects()->Remove(this);; 592 gROOT->GetUUIDs()->RemoveUUID(GetUniqueID());; 593 }; 594 ; 595 if (IsOnHeap()) {; 596 // Delete object from CINT symbol table so it can not be used anymore.; 597 // CINT object are always on the heap.; 598 gInterpreter->ResetGlobalVar(this);; 599 }; 600 ; 601 if (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:21357,down,down,21357,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['down'],['down']
Availability," ""o"" original axis range of the target axes will be kept, but only bins inside the selected range will be filled.; NOTE that if a TH1D named ""name"" exists in the current directory or pad, the histogram is reset and filled again with the projected contents of the TH3.; implemented using Project3D ; Definition at line 1780 of file TH3.cxx. ◆ ProjectionZ(). TH1D * TH3::ProjectionZ ; (; const char * ; name = ""_pz"", . Int_t ; ixmin = 0, . Int_t ; ixmax = -1, . Int_t ; iymin = 0, . Int_t ; iymax = -1, . Option_t * ; option = """" . ); const. virtual . Project a 3-D histogram into a 1-D histogram along Z. ; The projection is always of the type TH1D. The projection is made from the cells along the Z axis ranging from ixmin to ixmax and iymin to iymax included. By default, bins 1 to nx and 1 to ny are included By default, underflow and overflow are included in both the X and Y axis. By Setting ixmin=1 and ixmax=NbinsX the underflow and/or overflow in X will be excluded By setting iymin=1 and/or iymax=NbinsY the underflow and/or overflow in Y will be excluded; if option ""e"" is specified, the errors are computed. if option ""d"" is specified, the projection is drawn in the current pad. if option ""o"" original axis range of the target axes will be kept, but only bins inside the selected range will be filled.; NOTE that if a TH1D named ""name"" exists in the current directory or pad, the histogram is reset and filled again with the projected contents of the TH3.; implemented using Project3D ; Definition at line 1812 of file TH3.cxx. ◆ PutStats(). void TH3::PutStats ; (; Double_t * ; stats). overridevirtual . Replace current statistics with the values in array stats. ; Reimplemented from TH1.; Reimplemented in TProfile3D.; Definition at line 2889 of file TH3.cxx. ◆ Rebin3D(). TH3 * TH3::Rebin3D ; (; Int_t ; nxgroup = 2, . Int_t ; nygroup = 2, . Int_t ; nzgroup = 2, . const char * ; newname = """" . ). virtual . Rebin this histogram grouping nxgroup/nygroup/nzgroup bins along the xaxis/yaxi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH3.html:98060,error,errors,98060,doc/master/classTH3.html,https://root.cern,https://root.cern/doc/master/classTH3.html,1,['error'],['errors']
Availability," ""protocol"" version. private:. TSeqCollection*fSecContextsList of TSecContext with cleanup info; static UChar_tfgAcceptOptDefault accept options; static SrvClup_tfgSrvAuthClupHook; static SrvAuth_tfgSrvAuthHook. Class Charts. Inheritance Chart:. TObject. ←; TNamed. ←; TSocket. ←; TServerSocket. ←. TPServerSocket. Function documentation; TServerSocket(const char* service, Bool_t reuse = kFALSE, Int_t backlog = kDefaultBacklog, Int_t tcpwindowsize = -1); Create a server socket object for a named service. Set reuse to true; to force reuse of the server socket (i.e. do not wait for the time; out to pass). Using backlog one can set the desirable queue length; for pending connections.; Use tcpwindowsize to specify the size of the receive buffer, it has; to be specified here to make sure the window scale option is set (for; tcpwindowsize > 65KB and for platforms supporting window scaling).; Use IsValid() to check the validity of the; server socket. In case server socket is not valid use GetErrorCode(); to obtain the specific error value. These values are:; 0 = no error (socket is valid); -1 = low level socket() call failed; -2 = low level bind() call failed; -3 = low level listen() call failed; Every valid server socket is added to the TROOT sockets list which; will make sure that any open sockets are properly closed on; program termination. TServerSocket(Int_t port, Bool_t reuse = kFALSE, Int_t backlog = kDefaultBacklog, Int_t tcpwindowsize = -1); Create a server socket object on a specified port. Set reuse to true; to force reuse of the server socket (i.e. do not wait for the time; out to pass). Using backlog one can set the desirable queue length; for pending connections. If port is 0 a port scan will be done to; find a free port. This option is mutual exlusive with the reuse option.; Use tcpwindowsize to specify the size of the receive buffer, it has; to be specified here to make sure the window scale option is set (for; tcpwindowsize > 65KB and for platforms supporting",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TServerSocket.html:11929,error,error,11929,root/html602/TServerSocket.html,https://root.cern,https://root.cern/root/html602/TServerSocket.html,4,['error'],['error']
Availability," ""yes""))) {; 9753 off_t sf_offs = (off_t)offset;; 9754 ssize_t sf_sent;; 9755 int sf_file = fileno(filep->access.fp);; 9756 int loop_cnt = 0;; 9757 ; 9758 do {; 9759 /* 2147479552 (0x7FFFF000) is a limit found by experiment on; 9760 * 64 bit Linux (2^31 minus one memory page of 4k?). */; 9761 size_t sf_tosend =; 9762 (size_t)((len < 0x7FFFF000) ? len : 0x7FFFF000);; 9763 sf_sent =; 9764 sendfile(conn->client.sock, sf_file, &sf_offs, sf_tosend);; 9765 if (sf_sent > 0) {; 9766 len -= sf_sent;; 9767 offset += sf_sent;; 9768 } else if (loop_cnt == 0) {; 9769 /* This file can not be sent using sendfile.; 9770 * This might be the case for pseudo-files in the; 9771 * /sys/ and /proc/ file system.; 9772 * Use the regular user mode copy code instead. */; 9773 break;; 9774 } else if (sf_sent == 0) {; 9775 /* No error, but 0 bytes sent. May be EOF? */; 9776 return;; 9777 }; 9778 loop_cnt++;; 9779 ; 9780 } while ((len > 0) && (sf_sent >= 0));; 9781 ; 9782 if (sf_sent > 0) {; 9783 return; /* OK */; 9784 }; 9785 ; 9786 /* sf_sent<0 means error, thus fall back to the classic way */; 9787 /* This is always the case, if sf_file is not a ""normal"" file,; 9788 * e.g., for sending data from the output of a CGI process. */; 9789 offset = (int64_t)sf_offs;; 9790 }; 9791#endif; 9792 if ((offset > 0) && (fseeko(filep->access.fp, offset, SEEK_SET) != 0)) {; 9793 mg_cry_internal(conn,; 9794 ""%s: fseeko() failed: %s"",; 9795 __func__,; 9796 strerror(ERRNO));; 9797 mg_send_http_error(; 9798 conn,; 9799 500,; 9800 ""%s"",; 9801 ""Error: Unable to access file at requested position."");; 9802 } else {; 9803 while (len > 0) {; 9804 /* Calculate how much to read from the file in the buffer */; 9805 to_read = sizeof(buf);; 9806 if ((int64_t)to_read > len) {; 9807 to_read = (int)len;; 9808 }; 9809 ; 9810 /* Read from file, exit the loop on error */; 9811 if ((num_read =; 9812 (int)fread(buf, 1, (size_t)to_read, filep->access.fp)); 9813 <= 0) {; 9814 break;; 9815 }; 9816 ; 9817 /* Send read bytes to the cli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:280342,error,error,280342,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability," ""yes""))) {; 9754 off_t sf_offs = (off_t)offset;; 9755 ssize_t sf_sent;; 9756 int sf_file = fileno(filep->access.fp);; 9757 int loop_cnt = 0;; 9758 ; 9759 do {; 9760 /* 2147479552 (0x7FFFF000) is a limit found by experiment on; 9761 * 64 bit Linux (2^31 minus one memory page of 4k?). */; 9762 size_t sf_tosend =; 9763 (size_t)((len < 0x7FFFF000) ? len : 0x7FFFF000);; 9764 sf_sent =; 9765 sendfile(conn->client.sock, sf_file, &sf_offs, sf_tosend);; 9766 if (sf_sent > 0) {; 9767 len -= sf_sent;; 9768 offset += sf_sent;; 9769 } else if (loop_cnt == 0) {; 9770 /* This file can not be sent using sendfile.; 9771 * This might be the case for pseudo-files in the; 9772 * /sys/ and /proc/ file system.; 9773 * Use the regular user mode copy code instead. */; 9774 break;; 9775 } else if (sf_sent == 0) {; 9776 /* No error, but 0 bytes sent. May be EOF? */; 9777 return;; 9778 }; 9779 loop_cnt++;; 9780 ; 9781 } while ((len > 0) && (sf_sent >= 0));; 9782 ; 9783 if (sf_sent > 0) {; 9784 return; /* OK */; 9785 }; 9786 ; 9787 /* sf_sent<0 means error, thus fall back to the classic way */; 9788 /* This is always the case, if sf_file is not a ""normal"" file,; 9789 * e.g., for sending data from the output of a CGI process. */; 9790 offset = (int64_t)sf_offs;; 9791 }; 9792#endif; 9793 if ((offset > 0) && (fseeko(filep->access.fp, offset, SEEK_SET) != 0)) {; 9794 mg_cry_internal(conn,; 9795 ""%s: fseeko() failed: %s"",; 9796 __func__,; 9797 strerror(ERRNO));; 9798 mg_send_http_error(; 9799 conn,; 9800 500,; 9801 ""%s"",; 9802 ""Error: Unable to access file at requested position."");; 9803 } else {; 9804 while (len > 0) {; 9805 /* Calculate how much to read from the file in the buffer */; 9806 to_read = sizeof(buf);; 9807 if ((int64_t)to_read > len) {; 9808 to_read = (int)len;; 9809 }; 9810 ; 9811 /* Read from file, exit the loop on error */; 9812 if ((num_read =; 9813 (int)fread(buf, 1, (size_t)to_read, filep->access.fp)); 9814 <= 0) {; 9815 break;; 9816 }; 9817 ; 9818 /* Send read bytes to the cli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:280374,error,error,280374,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability," ""z"" or ""Z"" is specified,; these lines are not drawn. "">""; An arrow is drawn at the end of the error bars.; The size of the arrow is set to 2/3 of the marker size. ""|>""; A filled arrow is drawn at the end of the error bars.; The size of the arrow is set to 2/3 of the marker size. ""X""; By default the error bars are drawn. If option ""X"" is specified,; the errors are not drawn. The graph with errors in drawn like a normal graph. ""||""; Only the end vertical/horizonthal lines; of the error bars are drawn. This option is interesting to superimpose; systematic errors on top of a graph with statistical errors. ""[]""; Does the same as option ""||"" except that it draws additionnal tick marks at the; end of the vertical/horizonthal lines. This makes less ambiguous plots; in case several graphs are drawn on the same picture. ""0""; By default, when a data point is outside the visible range along the Y axis the error; bars are not drawn. Combined with other options, this option forces error bars'; drawing for the data points outside the visible range along the Y axis. ""2""; Error rectangles are drawn. ""3""; A filled area is drawn through the end points of the vertical error bars. ""4""; A smoothed filled area is drawn through the end points of the vertical error; bars. gStyle->SetErrorX(dx) controls the size of the error along x.; dx = 0 removes the error along x. gStyle->SetEndErrorSize(np) controls the size of the lines; at the end of the error bars (when option 1 is used).; By default np=1. (np represents the number of pixels).; TGraphErrors; A TGraphErrors is a TGraph with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Picture; Source. {; TCanvas *c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; TGraphErrors* ge = new TGraphErrors(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGraphPainter.html:6052,error,error,6052,root/html530/TGraphPainter.html,https://root.cern,https://root.cern/root/html530/TGraphPainter.html,1,['error'],['error']
Availability," #include ""Math/Factory.h""; #include ""Math/Functor.h""; #include ""TRandom2.h""; #include ""TError.h""; #include <iostream>; ; double RosenBrock(const double *xx ); {; const double x = xx[0];; const double y = xx[1];; const double tmp1 = y-x*x;; const double tmp2 = 1-x;; return 100*tmp1*tmp1+tmp2*tmp2;; }; ; int NumericalMinimization(const char * minName = ""Minuit2"",; const char *algoName = """" ,; int randomSeed = -1); {; // create minimizer giving a name and a name (optionally) for the specific; // algorithm; // possible choices are:; // minName algoName; // Minuit /Minuit2 Migrad, Simplex,Combined,Scan (default is Migrad); // Minuit2 Fumili2; // Fumili; // GSLMultiMin ConjugateFR, ConjugatePR, BFGS,; // BFGS2, SteepestDescent; // GSLMultiFit; // GSLSimAn; // Genetic; ROOT::Math::Minimizer* minimum =; ROOT::Math::Factory::CreateMinimizer(minName, algoName);; if (!minimum) {; std::cerr << ""Error: cannot create minimizer \"""" << minName; << ""\"". Maybe the required library was not built?"" << std::endl;; return 1;; }; ; // set tolerance , etc...; minimum->SetMaxFunctionCalls(1000000); // for Minuit/Minuit2; minimum->SetMaxIterations(10000); // for GSL; minimum->SetTolerance(0.001);; minimum->SetPrintLevel(1);; ; // create function wrapper for minimizer; // a IMultiGenFunction type; ROOT::Math::Functor f(&RosenBrock,2);; double step[2] = {0.01,0.01};; // starting point; ; double variable[2] = { -1.,1.2};; if (randomSeed >= 0) {; TRandom2 r(randomSeed);; variable[0] = r.Uniform(-20,20);; variable[1] = r.Uniform(-20,20);; }; ; minimum->SetFunction(f);; ; // Set the free variables to be minimized !; minimum->SetVariable(0,""x"",variable[0], step[0]);; minimum->SetVariable(1,""y"",variable[1], step[1]);; ; // do the minimization; minimum->Minimize();; ; const double *xs = minimum->X();; std::cout << ""Minimum: f("" << xs[0] << "","" << xs[1] << ""): ""; << minimum->MinValue() << std::endl;; ; // expected minimum is 0; if ( minimum->MinValue() < 1.E-4 ); std::cout << ""Minimizer "" << minName ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NumericalMinimization_8C.html:1566,toler,tolerance,1566,doc/master/NumericalMinimization_8C.html,https://root.cern,https://root.cern/doc/master/NumericalMinimization_8C.html,1,['toler'],['tolerance']
Availability," #include ""TH1F.h""; #include ""TTreeReader.h""; #include ""TTreeReaderValue.h"";  ; void hsimpleReader() {; // Create a histogram for the values we read.; TH1F *myHist = new TH1F(""h1"", ""ntuple"", 100, -4, 4);;  ; // Open the file containing the tree.; TFile *myFile = TFile::Open(""$ROOTSYS/tutorials/hsimple.root"");;  ; // Create a TTreeReader for the tree, for instance by passing the; // TTree's name and the TDirectory / TFile it is in.; TTreeReader myReader(""ntuple"", myFile);;  ; // The branch ""px"" contains floats; access them as myPx.; TTreeReaderValue<Float_t> myPx(myReader, ""px"");; // The branch ""py"" contains floats, too; access those as myPy.; TTreeReaderValue<Float_t> myPy(myReader, ""py"");;  ; // Loop over all entries of the TTree or TChain.; while (myReader.Next()) {; // Just access the data as if myPx and myPy were iterators (note the '*'; // in front of them):; myHist->Fill(*myPx + *myPy);; };  ; myHist->Draw();; }. A more complete example including error handling and a few combinations of; TTreeReaderValue and TTreeReaderArray would look like this:. #include <TFile.h>; #include <TH1.h>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TTreeReaderArray.h>;  ; #include ""TriggerInfo.h""; #include ""Muon.h""; #include ""Tau.h"";  ; #include <vector>; #include <iostream>;  ; bool CheckValue(ROOT::TTreeReaderValueBase* value) {; if (value->GetSetupStatus() < 0) {; std::cerr << ""Error "" << value->GetSetupStatus(); << ""setting up reader for "" << value->GetBranchName() << '\n';; return false;; }; return true;; };  ;  ; // Analyze the tree ""MyTree"" in the file passed into the function.; // Returns false in case of errors.; bool analyze(TFile* file) {; // Create a TTreeReader named ""MyTree"" from the given TDirectory.; // The TTreeReader gives access to the TTree to the TTreeReaderValue and; // TTreeReaderArray objects. It knows the current entry number and knows; // how to iterate through the TTree.; TTreeReader reader(""MyTree"", file);;  ; // Read a single floa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTreeReader.html:1924,error,error,1924,root/html602/TTreeReader.html,https://root.cern,https://root.cern/root/html602/TTreeReader.html,4,['error'],['error']
Availability," $(SOFLAGS) $(LDFLAGS) $^ $(OutPutOpt) $@ $(LIBS) $(EXPLLINKLIBS)\n"");; 3449 fprintf(fmk, ""endif\n"");; 3450 fprintf(fmk, ""endif\n"");; 3451 fprintf(fmk, ""endif\n"");; 3452 fprintf(fmk, ""endif\n"");; 3453 fprintf(fmk, ""\t\t@echo \""$@ done\""\n"");; 3454 fprintf(fmk, ""\n"");; 3455 fprintf(fmk, ""clean:\n"");; 3456 fprintf(fmk, ""\t\t@rm -f $(OBJS) core\n"");; 3457 fprintf(fmk, ""\n"");; 3458 fprintf(fmk, ""distclean: clean\n"");; 3459 fprintf(fmk, ""\t\t@rm -f $(PROGRAMS) $(PACKSO) $(PACKLIB) *Dict.* *.def *.exp \\\n"");; 3460 fprintf(fmk, ""\t\t *.so *.lib *.dll *.d *.log .def so_locations\n"");; 3461 fprintf(fmk, ""\t\t@rm -rf cxx_repository\n"");; 3462 fprintf(fmk, ""\n"");; 3463 fprintf(fmk, ""# Dependencies\n"");; 3464 fprintf(fmk, ""\n"");; 3465 fprintf(fmk, ""%sProjectSource.$(ObjSuf): %sProjectHeaders.h %sLinkDef.h %sProjectDict.$(SrcSuf)\n"", pack, pack, pack, pack);; 3466 fprintf(fmk, ""\n"");; 3467 fprintf(fmk, ""%sProjectDict.$(SrcSuf): %sProjectHeaders.h %sLinkDef.h\n"", pack, pack, pack);; 3468 fprintf(fmk, ""\t\t@echo \""Generating dictionary $@...\""\n"");; 3469 fprintf(fmk, ""\t\t@rootcint -f $@ $^\n"");; 3470 fprintf(fmk, ""\n"");; 3471 fprintf(fmk, "".$(SrcSuf).$(ObjSuf):\n"");; 3472 fprintf(fmk, ""\t\t$(CXX) $(CXXFLAGS) -c $<\n"");; 3473 fprintf(fmk, ""\n"");; 3474 ; 3475 // Close the file; 3476 fclose(fmk);; 3477 ; 3478 // Done; 3479 return 0;; 3480}; 3481 ; 3482////////////////////////////////////////////////////////////////////////////////; 3483/// Create BUILD.sh and SETUP.C under 'proofinf' for PAR package 'pack'.; 3484/// Called by MakeProject when option 'par' is given.; 3485/// Return 0 on success, -1 on error.; 3486 ; 3487Int_t TFile::MakeProjectParProofInf(const char *pack, const char *proofinf); 3488{; 3489 // Output directory path must be defined ...; 3490 if (!proofinf || (proofinf && strlen(proofinf) <= 0)) {; 3491 Error(""MakeProjectParProofInf"", ""directory path undefined!"");; 3492 return -1;; 3493 }; 3494 ; 3495 // ... and exist and be a directory; 3496 Int_t rcst = 0;; 3497 Fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:126138,echo,echo,126138,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['echo'],['echo']
Availability," %s present."",fName.c_str());; 809 }; 810 if ( 0 == fConstruct ) {; 811 Fatal(""TGenCollectionProxy"",""No 'block constructor' function for class %s present."",fName.c_str());; 812 }; 813 if ( 0 == fDestruct ) {; 814 Fatal(""TGenCollectionProxy"",""No 'block destructor' function for class %s present."",fName.c_str());; 815 }; 816 if ( 0 == fFeed ) {; 817 Fatal(""TGenCollectionProxy"",""No 'data feed' function for class %s present."",fName.c_str());; 818 }; 819 if ( 0 == fCollect ) {; 820 Fatal(""TGenCollectionProxy"",""No 'data collect' function for class %s present."",fName.c_str());; 821 }; 822 if (0 == fCreateEnv.call ) {; 823 Fatal(""TGenCollectionProxy"",""No 'environment creation' function for class %s present."",fName.c_str());; 824 }; 825}; 826 ; 827////////////////////////////////////////////////////////////////////////////////; 828/// Utility routine to issue a Fatal error is the Value object is not valid; 829 ; 830static TGenCollectionProxy::Value *R__CreateValue(const std::string &name, Bool_t silent,; 831 size_t hint_pair_offset = 0, size_t hint_pair_size = 0); 832{; 833 TGenCollectionProxy::Value *val = new TGenCollectionProxy::Value( name, silent, hint_pair_offset, hint_pair_size );; 834 if ( !val->IsValid() ) {; 835 Fatal(""TGenCollectionProxy"",""Could not find %s!"",name.c_str());; 836 }; 837 return val;; 838}; 839 ; 840////////////////////////////////////////////////////////////////////////////////; 841/// Proxy initializer; 842 ; 843TGenCollectionProxy *TGenCollectionProxy::InitializeEx(Bool_t silent); 844{; 845 R__LOCKGUARD(gInterpreterMutex);; 846 if (fValue.load()) return this;; 847 ; 848 TClass *cl = fClass ? fClass.GetClass() : TClass::GetClass(fTypeinfo,kTRUE,silent);; 849 if ( cl ) {; 850 fEnv = 0;; 851 fName = cl->GetName();; 852 fPointers = false;; 853 int nested = 0;; 854 std::vector<std::string> inside;; 855 int num = TClassEdit::GetSplit(cl->GetName(),inside,nested);; 856 if ( num > 1 ) {; 857 std::string nam;; 858 Value* newfValue = nullptr;; 859 if ( inside",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGenCollectionProxy_8cxx_source.html:25797,error,error,25797,doc/master/TGenCollectionProxy_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGenCollectionProxy_8cxx_source.html,1,['error'],['error']
Availability," & Function() const = 0; ; print the result according to set level (implemented for TMinuit for maintaining Minuit-style printing) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 862 of file TMinuitMinimizer.cxx. ◆ ProvidesError(). bool TMinuitMinimizer::ProvidesError ; (; ); const. inlineoverridevirtual . minimizer provides error and error matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 137 of file TMinuitMinimizer.h. ◆ ReleaseVariable(). bool TMinuitMinimizer::ReleaseVariable ; (; unsigned int ; ivar). overridevirtual . release an existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 396 of file TMinuitMinimizer.cxx. ◆ RetrieveErrorMatrix(). void TMinuitMinimizer::RetrieveErrorMatrix ; (; ). protected . retrieve error matrix from TMinuit ; Definition at line 601 of file TMinuitMinimizer.cxx. ◆ RetrieveParams(). void TMinuitMinimizer::RetrieveParams ; (; ). protected . retrieve minimum parameters and errors from TMinuit ; Definition at line 587 of file TMinuitMinimizer.cxx. ◆ Scan(). bool TMinuitMinimizer::Scan ; (; unsigned int ; i, . unsigned int & ; nstep, . double * ; x, . double * ; y, . double ; xmin = 0, . double ; xmax = 0 . ). overridevirtual . scan a parameter i around the minimum. ; A minimization must have been done before, return false if it is not the case ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 932 of file TMinuitMinimizer.cxx. ◆ SetDebug(). bool TMinuitMinimizer::SetDebug ; (; bool ; on = true). set debug mode. Return true if setting was successful ; Definition at line 1049 of file TMinuitMinimizer.cxx. ◆ SetFixedVariable(). bool TMinuitMinimizer::SetFixedVariable ; (; unsigned int ; ivar, . const std::string & ; name, . double ; val . ). overridevirtual . set fixed variable (override if minimizer supports them ) ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 309 of file TMinuitMinimizer.cxx. ◆ SetFunction(). void TMinuitMinimizer::SetFunction ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuitMinimizer.html:22055,error,errors,22055,doc/master/classTMinuitMinimizer.html,https://root.cern,https://root.cern/doc/master/classTMinuitMinimizer.html,1,['error'],['errors']
Availability," && !page_handler_found; scope++) {; 4418 switch (scope) {; 4419 case 1: /* Handler for specific error, e.g. 404 error */; 4420 mg_snprintf(conn,; 4421 &truncated,; 4422 path_buf,; 4423 sizeof(path_buf) - 32,; 4424 ""%serror%03u."",; 4425 error_handler,; 4426 status);; 4427 break;; 4428 case 2: /* Handler for error group, e.g., 5xx error; 4429 * handler; 4430 * for all server errors (500-599) */; 4431 mg_snprintf(conn,; 4432 &truncated,; 4433 path_buf,; 4434 sizeof(path_buf) - 32,; 4435 ""%serror%01uxx."",; 4436 error_handler,; 4437 status / 100);; 4438 break;; 4439 default: /* Handler for all errors */; 4440 mg_snprintf(conn,; 4441 &truncated,; 4442 path_buf,; 4443 sizeof(path_buf) - 32,; 4444 ""%serror."",; 4445 error_handler);; 4446 break;; 4447 }; 4448 ; 4449 /* String truncation in buf may only occur if; 4450 * error_handler is too long. This string is; 4451 * from the config, not from a client. */; 4452 (void)truncated;; 4453 ; 4454 /* The following code is redundant, but it should avoid; 4455 * false positives in static source code analyzers and; 4456 * vulnerability scanners.; 4457 */; 4458 path_buf[sizeof(path_buf) - 32] = 0;; 4459 len = (int)strlen(path_buf);; 4460 if (len > (int)sizeof(path_buf) - 32) {; 4461 len = (int)sizeof(path_buf) - 32;; 4462 }; 4463 ; 4464 /* Start with the file extenstion from the configuration. */; 4465 tstr = strchr(error_page_file_ext, '.');; 4466 ; 4467 while (tstr) {; 4468 for (i = 1;; 4469 (i < 32) && (tstr[i] != 0) && (tstr[i] != ',');; 4470 i++) {; 4471 /* buffer overrun is not possible here, since; 4472 * (i < 32) && (len < sizeof(path_buf) - 32); 4473 * ==> (i + len) < sizeof(path_buf) */; 4474 path_buf[len + i - 1] = tstr[i];; 4475 }; 4476 /* buffer overrun is not possible here, since; 4477 * (i <= 32) && (len < sizeof(path_buf) - 32); 4478 * ==> (i + len) <= sizeof(path_buf) */; 4479 path_buf[len + i - 1] = 0;; 4480 ; 4481 if (mg_stat(conn, path_buf, &error_page_file.stat)) {; 4482 DEBUG_TRACE(""Check error page %s - found"",; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:133150,redundant,redundant,133150,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['redundant'],['redundant']
Availability," && !page_handler_found; scope++) {; 4419 switch (scope) {; 4420 case 1: /* Handler for specific error, e.g. 404 error */; 4421 mg_snprintf(conn,; 4422 &truncated,; 4423 path_buf,; 4424 sizeof(path_buf) - 32,; 4425 ""%serror%03u."",; 4426 error_handler,; 4427 status);; 4428 break;; 4429 case 2: /* Handler for error group, e.g., 5xx error; 4430 * handler; 4431 * for all server errors (500-599) */; 4432 mg_snprintf(conn,; 4433 &truncated,; 4434 path_buf,; 4435 sizeof(path_buf) - 32,; 4436 ""%serror%01uxx."",; 4437 error_handler,; 4438 status / 100);; 4439 break;; 4440 default: /* Handler for all errors */; 4441 mg_snprintf(conn,; 4442 &truncated,; 4443 path_buf,; 4444 sizeof(path_buf) - 32,; 4445 ""%serror."",; 4446 error_handler);; 4447 break;; 4448 }; 4449 ; 4450 /* String truncation in buf may only occur if; 4451 * error_handler is too long. This string is; 4452 * from the config, not from a client. */; 4453 (void)truncated;; 4454 ; 4455 /* The following code is redundant, but it should avoid; 4456 * false positives in static source code analyzers and; 4457 * vulnerability scanners.; 4458 */; 4459 path_buf[sizeof(path_buf) - 32] = 0;; 4460 len = (int)strlen(path_buf);; 4461 if (len > (int)sizeof(path_buf) - 32) {; 4462 len = (int)sizeof(path_buf) - 32;; 4463 }; 4464 ; 4465 /* Start with the file extenstion from the configuration. */; 4466 tstr = strchr(error_page_file_ext, '.');; 4467 ; 4468 while (tstr) {; 4469 for (i = 1;; 4470 (i < 32) && (tstr[i] != 0) && (tstr[i] != ',');; 4471 i++) {; 4472 /* buffer overrun is not possible here, since; 4473 * (i < 32) && (len < sizeof(path_buf) - 32); 4474 * ==> (i + len) < sizeof(path_buf) */; 4475 path_buf[len + i - 1] = tstr[i];; 4476 }; 4477 /* buffer overrun is not possible here, since; 4478 * (i <= 32) && (len < sizeof(path_buf) - 32); 4479 * ==> (i + len) <= sizeof(path_buf) */; 4480 path_buf[len + i - 1] = 0;; 4481 ; 4482 if (mg_stat(conn, path_buf, &error_page_file.stat)) {; 4483 DEBUG_TRACE(""Check error page %s - found"",; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:133182,redundant,redundant,133182,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['redundant'],['redundant']
Availability," && !plot0Bins); 849 continue; // skip bins with total <= 0; 850 ; 851 // in the case of weights have the formula only for; 852 // the normal and bayesian statistics (see below); 853 ; 854 }; 855 ; 856 // use bin contents; 857 else {; 858 t = std::round(total->GetBinContent(b));; 859 p = std::round(pass->GetBinContent(b));; 860 ; 861 if (bPoissonRatio); 862 t += p;; 863 ; 864 if (t == 0.0 && !plot0Bins); 865 continue; // skip bins with total = 0; 866 }; 867 ; 868 //using bayesian statistics; 869 if(bIsBayesian) {; 870 double aa,bb;; 871 ; 872 if ((bEffective && !bPoissonRatio) && tw2 <= 0) {; 873 // case of bins with zero errors; 874 eff = pw/tw;; 875 low = eff; upper = eff;; 876 }; 877 else {; 878 ; 879 if (bEffective && !bPoissonRatio) {; 880 // tw/tw2 re-normalize the weights; 881 double norm = tw/tw2; // case of tw2 = 0 is treated above; 882 aa = pw * norm + alpha;; 883 bb = (tw - pw) * norm + beta;; 884 }; 885 else {; 886 aa = double(p) + alpha;; 887 bb = double(t-p) + beta;; 888 }; 889 if (usePosteriorMode); 890 eff = TEfficiency::BetaMode(aa,bb);; 891 else; 892 eff = TEfficiency::BetaMean(aa,bb);; 893 ; 894 if (useShortestInterval) {; 895 TEfficiency::BetaShortestInterval(conf,aa,bb,low,upper);; 896 }; 897 else {; 898 low = TEfficiency::BetaCentralInterval(conf,aa,bb,false);; 899 upper = TEfficiency::BetaCentralInterval(conf,aa,bb,true);; 900 }; 901 }; 902 }; 903 // case of non-bayesian statistics; 904 else {; 905 if (bEffective && !bPoissonRatio) {; 906 ; 907 if (tw > 0) {; 908 ; 909 eff = pw/tw;; 910 ; 911 // use normal error calculation using variance of MLE with weights (F.James 8.5.2); 912 // this is the same formula used in ROOT for TH1::Divide(""B""); 913 ; 914 double variance = ( pw2 * (1. - 2 * eff) + tw2 * eff *eff ) / ( tw * tw) ;; 915 double sigma = sqrt(variance);; 916 ; 917 double prob = 0.5 * (1.-conf);; 918 double delta = ROOT::Math::normal_quantile_c(prob, sigma);; 919 low = eff - delta;; 920 upper = eff + delta;; 921 if (low < 0) low = 0;; 922 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html:31022,error,errors,31022,doc/master/TGraphAsymmErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html,2,['error'],"['error', 'errors']"
Availability," && (option < 3)); 2429 fVisOption = option;; 2430 if (fPainter); 2431 fPainter->SetVisOption(option);; 2432}; 2433 ; 2434////////////////////////////////////////////////////////////////////////////////; 2435/// Set visualization option (leaves only OR all volumes); 2436 ; 2437void TGeoManager::ViewLeaves(Bool_t flag); 2438{; 2439 if (flag); 2440 SetVisOption(1);; 2441 else; 2442 SetVisOption(0);; 2443}; 2444 ; 2445////////////////////////////////////////////////////////////////////////////////; 2446/// Set density threshold. Volumes with densities lower than this become; 2447/// transparent.; 2448 ; 2449void TGeoManager::SetVisDensity(Double_t density); 2450{; 2451 fVisDensity = density;; 2452 if (fPainter); 2453 fPainter->ModifiedPad();; 2454}; 2455 ; 2456////////////////////////////////////////////////////////////////////////////////; 2457/// set default level down to which visualization is performed; 2458 ; 2459void TGeoManager::SetVisLevel(Int_t level); 2460{; 2461 if (level > 0) {; 2462 fVisLevel = level;; 2463 fMaxVisNodes = 0;; 2464 if (fgVerboseLevel > 0); 2465 Info(""SetVisLevel"", ""Automatic visible depth disabled"");; 2466 if (fPainter); 2467 fPainter->CountVisibleNodes();; 2468 } else {; 2469 SetMaxVisNodes();; 2470 }; 2471}; 2472 ; 2473////////////////////////////////////////////////////////////////////////////////; 2474/// Sort overlaps by decreasing overlap distance. Extrusions comes first.; 2475 ; 2476void TGeoManager::SortOverlaps(); 2477{; 2478 fOverlaps->Sort();; 2479}; 2480 ; 2481////////////////////////////////////////////////////////////////////////////////; 2482/// Optimize voxelization type for all volumes. Save best choice in a macro.; 2483 ; 2484void TGeoManager::OptimizeVoxels(const char *filename); 2485{; 2486 if (!fTopNode) {; 2487 Error(""OptimizeVoxels"", ""Geometry must be closed first"");; 2488 return;; 2489 }; 2490 std::ofstream out;; 2491 TString fname = filename;; 2492 if (fname.IsNull()); 2493 fname = ""tgeovox.C"";; 2494 out.open(fname, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoManager_8cxx_source.html:87882,down,down,87882,doc/master/TGeoManager_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoManager_8cxx_source.html,1,['down'],['down']
Availability," && (option.Contains(""sh"") || (usePosteriorMode && !option.Contains(""cen"")))) {; 1156 useShortestInterval = true;; 1157 }; 1158 ; 1159 // interpret as Poisson ratio; 1160 Bool_t bPoissonRatio = false;; 1161 if (option.Contains(""pois"")) {; 1162 bPoissonRatio = true;; 1163 option.ReplaceAll(""pois"", """");; 1164 }; 1165 ; 1166 // weights works only in case of Normal approximation or Bayesian for binomial interval; 1167 // in case of Poisson ratio we can use weights by rescaling the obtained results using the effective entries; 1168 if ((bEffective && !bPoissonRatio) && !bIsBayesian && pBound != &TEfficiency::Normal) {; 1169 Warning(""Divide"", ""Histograms have weights: only Normal or Bayesian error calculation is supported"");; 1170 Info(""Divide"", ""Using now the Normal approximation for weighted histograms"");; 1171 }; 1172 ; 1173 if (bPoissonRatio) {; 1174 if (pass->GetDimension() != total->GetDimension()) {; 1175 Error(""Divide"", ""passed histograms are not of the same dimension"");; 1176 return;; 1177 }; 1178 ; 1179 if (!TEfficiency::CheckBinning(*pass, *total)) {; 1180 Error(""Divide"", ""passed histograms are not consistent"");; 1181 return;; 1182 }; 1183 } else {; 1184 // check consistency of histograms, allowing weights; 1185 if (!TEfficiency::CheckConsistency(*pass, *total, ""w"")) {; 1186 Error(""Divide"", ""passed histograms are not consistent"");; 1187 return;; 1188 }; 1189 }; 1190 ; 1191 // Set the graph to have a number of points equal to the number of histogram; 1192 // bins; 1193 Int_t nbins = pass->GetNbinsX();; 1194 Set(nbins);; 1195 ; 1196 // Ok, now set the points for each bin; 1197 // (Note: the TH1 bin content is shifted to the right by one:; 1198 // bin=0 is underflow, bin=nbins+1 is overflow.); 1199 ; 1200 // this keeps track of the number of points added to the graph; 1201 Int_t npoint = 0;; 1202 // number of total and passed events; 1203 Double_t t = 0, p = 0;; 1204 Double_t tw = 0, tw2 = 0, pw = 0, pw2 = 0, wratio = 1; // for the case of weights; 1205 // loop ove",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:40294,error,error,40294,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['error']
Availability," && ch != ' ' && ch != '\n'; ch = fgetc(pf)) {; 1850 patbuf0.Append(ch);; 1851 cnt++;; 1852 }; 1853#if defined(R__AIX); 1854 // Work around bug timing problem due to delay in forking a large program; 1855 if (cnt == 0 && ch == EOF) goto again;; 1856#endif; 1857 ; 1858 // skip rest of pipe; 1859 while (ch != EOF) {; 1860 ch = fgetc(pf);; 1861 if (ch == ' ' || ch == '\t') {; 1862 GetLastErrorString() = ""expression ambigous"";; 1863 ::pclose(pf);; 1864 return kTRUE;; 1865 }; 1866 }; 1867 ; 1868 ::pclose(pf);; 1869 ; 1870 return kFALSE;; 1871}; 1872#endif; 1873 ; 1874////////////////////////////////////////////////////////////////////////////////; 1875/// Expand a pathname getting rid of special shell characaters like ~.$, etc.; 1876/// For Unix/Win32 compatibility use $(XXX) instead of $XXX when using; 1877/// environment variables in a pathname. If compatibility is not an issue; 1878/// you can use on Unix directly $XXX. The user must delete returned string.; 1879/// Returns the expanded pathname or 0 in case of error.; 1880/// The user must delete returned string (delete []).; 1881 ; 1882char *TUnixSystem::ExpandPathName(const char *path); 1883{; 1884 TString patbuf = path;; 1885 if (ExpandPathName(patbuf)); 1886 return nullptr;; 1887 return StrDup(patbuf.Data());; 1888}; 1889 ; 1890////////////////////////////////////////////////////////////////////////////////; 1891/// Set the file permission bits. Returns -1 in case or error, 0 otherwise.; 1892 ; 1893int TUnixSystem::Chmod(const char *file, UInt_t mode); 1894{; 1895 return ::chmod(file, mode);; 1896}; 1897 ; 1898////////////////////////////////////////////////////////////////////////////////; 1899/// Set the process file creation mode mask.; 1900 ; 1901int TUnixSystem::Umask(Int_t mask); 1902{; 1903 return ::umask(mask);; 1904}; 1905 ; 1906////////////////////////////////////////////////////////////////////////////////; 1907/// Set a files modification and access times. If actime = 0 it will be; 1908/// set to the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:57675,error,error,57675,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['error'],['error']
Availability," &=; \begin{cases}; \sqrt{N_\mathrm{PDF,bin}} &\text{if } \mathtt{DataError == RooAbsData::Expected}\\; \mathtt{data{\rightarrow}weightError()} &\text{otherwise} \\; \end{cases}; \end{align*}. If the dataset doesn't have user-defined errors, errors are assumed to be \( \sqrt{N} \). In extended PDF mode, N_tot (total number of data events) is substituted with N_expected, the expected number of events that the PDF predicts.; NoteIf the dataset has errors stored, empty bins will prevent the calculation of \( \chi^2 \), because those have zero error. This leads to messages like: [#0] ERROR:Eval -- RooChi2Var::RooChi2Var(chi2_GenPdf_data_hist) INFINITY ERROR: bin 2 has zero error; RooChi2Var::RooChi2VarRooChi2Var(const char *name, const char *title, RooAbsReal &func, RooDataHist &data, bool extended, RooDataHist::ErrorType etype, RooAbsTestStatistic::Configuration const &cfg=RooAbsTestStatistic::Configuration{})Definition RooChi2Var.cxx:67. In this case, one can use the expected errors of the PDF instead of the data errors: RooChi2Var chi2(..., ..., RooFit::DataError(RooAbsData::Expected), ...);; RooAbsData::Expected@ ExpectedDefinition RooAbsData.h:108; RooChi2VarSimple calculation from a binned dataset and a PDF.Definition RooChi2Var.h:19; RooFit::DataErrorRooCmdArg DataError(Int_t)Definition RooGlobalFunc.cxx:470. PyROOT; Constructor of RooChi2Var takes a RooCmdArg as argument also supports keyword arguments. . Definition at line 19 of file RooChi2Var.h. Public Types; enum  FuncMode { Function; , Pdf; , ExtendedPdf; };  ;  Public Types inherited from RooAbsTestStatistic; enum  GOFOpMode { SimMaster; , MPMaster; , Slave; };  ;  Public Types inherited from RooAbsReal; enum  ErrorLoggingMode { PrintErrors; , CollectErrors; , CountErrors; , Ignore; };  ; enum  ScaleType { Raw; , Relative; , NumEvent; , RelativeExpected; };  ; using value_type = double;  ;  Public Types inherited from RooAbsArg; enum  CacheMode { Always =0; , NotAdvised =1; , Never =2; };  ; enum  ConstOpCo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChi2Var.html:1857,error,errors,1857,doc/master/classRooChi2Var.html,https://root.cern,https://root.cern/doc/master/classRooChi2Var.html,2,['error'],['errors']
Availability," &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Private Attributes; Arrays used to store the packed inputs; TObjArray fSignal;  Packed input signal. ;  ; TObjArray fBackground;  Packed input background. ;  ; TObjArray fCandidates;  Packed input candidates (data) ;  ; TObjArray fErrorOnSignal;  Packed error sources for signal. ;  ; TObjArray fErrorOnBackground;  Packed error sources for background. ;  ; TObjArray fIds;  Packed IDs for the different error sources. ;  . TObjArray fDummyTA;  Dummy objects the class will use and delete. ;  ; TObjArray fDummyIds;  Array of dummy object (used for bookeeping) ;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL <",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLimitDataSource.html:9526,error,error,9526,doc/master/classTLimitDataSource.html,https://root.cern,https://root.cern/doc/master/classTLimitDataSource.html,1,['error'],['error']
Availability," &dmFull, Int_t offset, bool silent)Definition TStreamerInfo.cxx:5693; R__TObjArray_InsertAtstatic void R__TObjArray_InsertAt(TObjArray *arr, TObject *obj, Int_t at)Definition TStreamerInfo.cxx:87; R__TObjArray_InsertAfterstatic void R__TObjArray_InsertAfter(TObjArray *arr, TObject *newobj, TObject *oldobj)Definition TStreamerInfo.cxx:112; R__IsUniquePtrstatic bool R__IsUniquePtr(TStreamerElement *element)Return true if the element is auto_ptr or unique_ptr.Definition TStreamerInfo.cxx:3440; READ_ARRAY#define READ_ARRAY(TYPE_t); kMaxLenconst Int_t kMaxLenDefinition TStreamerInfo.cxx:83; R__WriteConstructorBodystatic void R__WriteConstructorBody(FILE *file, TIter &next)Definition TStreamerInfo.cxx:3411; DeleteBasicPointer#define DeleteBasicPointer(addr, element, name)Definition TStreamerInfo.cxx:4952; str_lengthstatic constexpr int str_length(const char *str)Definition TStreamerInfo.cxx:3432; R__WriteMoveBodyPointersArraysstatic void R__WriteMoveBodyPointersArrays(FILE *file, const TString &protoname, TIter &next)Write down the pointers and arrays part of the body of the 'move' constructor.Definition TStreamerInfo.cxx:3454; R__TObjArray_InsertBeforestatic void R__TObjArray_InsertBefore(TObjArray *arr, TObject *newobj, TObject *oldobj)Definition TStreamerInfo.cxx:124; R__WriteOddOperatorEqualBodystatic void R__WriteOddOperatorEqualBody(FILE *file, const TString &protoname, TIter &next)Write down the body of the 'move' constructor.Definition TStreamerInfo.cxx:3552; R__WriteDestructorBodystatic void R__WriteDestructorBody(FILE *file, TIter &next)Definition TStreamerInfo.cxx:3582; TStreamerInfo.h; TStreamer.h; Printfvoid Printf(const char *fmt,...)Formats a string in a circular formatting buffer and prints the string.Definition TString.cxx:2503; TSystem.h; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TVirtualCollectionProxy.h; TVirtualMutex.h; R__LOCKGUARD#define R__LOCKGUARD(mutex)Definition TVirtualMutex.h:95; snprintf#define snprintfDefinition civetweb.c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html:244768,down,down,244768,doc/master/TStreamerInfo_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStreamerInfo_8cxx_source.html,1,['down'],['down']
Availability," &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual const double * MinGradient () const;  return pointer to gradient values at the minimum ;  ; virtual bool Minimize ()=0;  method to perform the minimization ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual double MinValue () const =0;  return minimum function value ;  ; virtual unsigned int NCalls () const;  number of function calls to reach the minimum ;  ; virtual unsigned int NDim () const =0;  this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ;  ; virtual unsigned int NFree () const;  number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total (re-implement if minimizer supports bounded parameter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:7198,error,error,7198,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,1,['error'],['error']
Availability," &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  minimizer configuration parameters ;  ; virtual void PrintResults ();  return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const = 0; ;  ; virtual bool ReleaseVariable (unsigned int ivar);  release an existing variable ;  ; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html:5698,error,error,5698,doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GeneticMinimizer.html,1,['error'],['error']
Availability," &errUp, int option=0);  minos error for variable i, return false if Minos failed or not supported and the lower and upper errors are returned in errLow and errUp An extra flag specifies if only the lower (option=-1) or the upper (option=+1) error calculation is run ;  ; virtual bool GetVariableSettings (unsigned int ivar, ROOT::Fit::ParameterSettings &pars) const;  get variable settings in a variable object (like ROOT::Fit::ParamsSettings) ;  ; virtual double GlobalCC (unsigned int ivar) const;  return global correlation coefficient for variable i This is a number between zero and one which gives the correlation between the i-th parameter and that linear combination of all other parameters which is most strongly correlated with i. ;  ; virtual bool Hesse ();  perform a full calculation of the Hessian matrix for error calculation ;  ; virtual bool IsFixedVariable (unsigned int ivar) const;  query if an existing variable is fixed (i.e. ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual int MinosStatus () const;  status code of Minos (to be re-implemented by the minimizers supporting Minos) ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  minimizer configuration parameters ;  ; virtual void PrintResults ();  return reference to the objective function virtual const ROOT::Math::IGenFunction & Fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFumiliMinimizer.html:5402,error,error,5402,doc/master/classTFumiliMinimizer.html,https://root.cern,https://root.cern/doc/master/classTFumiliMinimizer.html,2,['error'],['error']
Availability," &mask, Bool_t backTransform=kFALSE) const;  select the values from the event ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; TString GetShortName () const;  ; virtual std::vector< TString > * GetTransformationStrings (Int_t cls) const;  TODO --> adapt to variable,target,spectator selection default transformation output --> only indicate that transformation occurred. ;  ; Types::EVariableTransform GetVariableTransform () const;  ; Bool_t IsCreated () const;  ; Bool_t IsEnabled () const;  ; Bool_t IsNormalised () const;  ; MsgLogger & Log () const;  ; virtual void SelectInput (const TString &inputVariables, Bool_t putIntoVariables=kFALSE);  select the variables/targets/spectators which serve as input to the transformation ;  ; void SetEnabled (Bool_t e);  ; void SetNormalise (Bool_t n);  ; virtual void SetOutput (Event *event, std::vector< Float_t > &output, std::vector< Char_t > &mask, const Event *oldEvent=nullptr, Bool_t backTransform=kFALSE) const;  select the values from the event ;  ; void SetOutputDataSetInfo (DataSetInfo *outputDsi);  ; void SetTMVAVersion (TMVAVersion_t v);  ; void SetUseSignalTransform (Bool_t e=kTRUE);  ; const std::vector< TMVA::VariableInfo > & Spectators () const;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; const std::vector< TMVA::VariableInfo > & Targets () const;  ; void ToggleInputSortOrder (Bool_t sortOrder);  ; Bool_t UseSignalTransform () const;  ; const std::vector< TMVA::VariableInfo > & Variables () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1VariableGaussTransform.html:3212,mask,mask,3212,doc/master/classTMVA_1_1VariableGaussTransform.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1VariableGaussTransform.html,1,['mask'],['mask']
Availability," &proxy);  Register an RooSetProxy in the proxy list. ;  ; void setProxyNormSet (const RooArgSet *nset);  Forward a change in the cached normalization argset to all the registered proxies. ;  ; void setShapeDirty (const RooAbsArg *source);  Notify that a shape-like property (e.g. binning) has changed. ;  ; void setValueDirty (const RooAbsArg *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooCFunction4Ref< VO, VI1, VI2, VI3, VI4 > func;  ; RooRealProxy w;  ; RooRealProxy x;  ; RooRealProxy y;  ; RooRealProxy z;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCFunction4PdfBinding.html:67584,error,errors,67584,doc/master/classRooCFunction4PdfBinding.html,https://root.cern,https://root.cern/doc/master/classRooCFunction4PdfBinding.html,1,['error'],['errors']
Availability," &sdev2p)To fit a parabola to npar2p points.Definition TMinuit.cxx:5956; TMinuit::fGrdsDouble_t * fGrdsDefinition TMinuit.h:86; TMinuit::Releasevirtual Int_t Release(Int_t parNo)release a parameterDefinition TMinuit.cxx:894; TMinuit::mnparsvirtual void mnpars(TString &crdbuf, Int_t &icondn)Implements one parameter definition.Definition TMinuit.cxx:5867; TMinuit::fGstepsDouble_t * fGstepsDefinition TMinuit.h:88; TMinuit::mnimprvirtual void mnimpr()Attempts to improve on a good local minimum.Definition TMinuit.cxx:4295; TMinuit::fPstarDouble_t * fPstarDefinition TMinuit.h:92; TMinuit::fObjectFitTObject * fObjectFitDefinition TMinuit.h:175; TMinuit::BuildArraysvirtual void BuildArrays(Int_t maxpar=15)Create internal Minuit arrays for the maxpar parameters.Definition TMinuit.cxx:512; TMinuit::mnwerrvirtual void mnwerr()Calculates the WERR, external parameter errors.Definition TMinuit.cxx:7861; TMinuit::fNfcnfrInt_t fNfcnfrDefinition TMinuit.h:148; TMinuit::mnrsetvirtual void mnrset(Int_t iopt)Resets function value and errors to UNDEFINED.Definition TMinuit.cxx:6661; TMinuit::fIMPRyDouble_t * fIMPRyDefinition TMinuit.h:106; TMinuit::fVlimhiDouble_t fVlimhiDefinition TMinuit.h:59; TMinuit::mneigvirtual void mneig(Double_t *a, Int_t ndima, Int_t n, Int_t mits, Double_t *work, Double_t precis, Int_t &ifault)Compute matrix eigen values.Definition TMinuit.cxx:2305; TMinuit::mnsimpvirtual void mnsimp()Minimization using the simplex method of Nelder and Mead.Definition TMinuit.cxx:7431; TMinuit::fLwarnBool_t fLwarnDefinition TMinuit.h:157; TMinuit::fXptDouble_t * fXptDefinition TMinuit.h:97; TMinuit::fGinDouble_t * fGinDefinition TMinuit.h:84; TMinuit::GetMethodCallTMethodCall * GetMethodCall() constDefinition TMinuit.h:193; TMinuit::fNfcnmxInt_t fNfcnmxDefinition TMinuit.h:146; TMinuit::fItaurInt_t fItaurDefinition TMinuit.h:149; TMinuit::TMinuitTMinuit()Minuit normal constructor.Definition TMinuit.cxx:347; TMinuit::fUndefiDouble_t fUndefiDefinition TMinuit.h:60; TMinuit::fKe2c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:259354,error,errors,259354,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['error'],['errors']
Availability," & ; ). privatedelete . ◆ TGeoHelix() [2/3]. TGeoHelix::TGeoHelix ; (; ). Dummy constructor. ; Definition at line 61 of file TGeoHelix.cxx. ◆ TGeoHelix() [3/3]. TGeoHelix::TGeoHelix ; (; Double_t ; curvature, . Double_t ; step, . Int_t ; charge = 1 . ). Normal constructor. ; Definition at line 82 of file TGeoHelix.cxx. ◆ ~TGeoHelix(). TGeoHelix::~TGeoHelix ; (; ). override . Destructor. ; Definition at line 104 of file TGeoHelix.cxx. Member Function Documentation. ◆ Class(). static TClass * TGeoHelix::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGeoHelix::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGeoHelix::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 73 of file TGeoHelix.h. ◆ ComputeSafeStep(). Double_t TGeoHelix::ComputeSafeStep ; (; Double_t ; epsil = 1E-6); const. Compute safe linear step that can be made such that the error between linear-helix extrapolation is less than EPSIL. ; Definition at line 114 of file TGeoHelix.cxx. ◆ DeclFileName(). static const char * TGeoHelix::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 73 of file TGeoHelix.h. ◆ GetCurrentDirection(). const Double_t * TGeoHelix::GetCurrentDirection ; (; ); const. inline . Definition at line 51 of file TGeoHelix.h. ◆ GetCurrentPoint(). const Double_t * TGeoHelix::GetCurrentPoint ; (; ); const. inline . Definition at line 50 of file TGeoHelix.h. ◆ GetStep(). Double_t TGeoHelix::GetStep ; (; ); const. inline . Definition at line 53 of file TGeoHelix.h. ◆ GetTotalCurvature(). Double_t TGeoHelix::GetTotalCurvature ; (; ); const. Compute helix total curvature. ; Definition at line 169 of file TGeoHelix.cxx. ◆ GetXYcurvature(). Double_t TGeoHelix::GetXYcurvature ; (; ); const. inline . Definition at line 52 of file TGeoHelix.h. ◆ InitDirection() [1/2]. void TGeoHelix::InitDire",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoHelix.html:15062,error,error,15062,doc/master/classTGeoHelix.html,https://root.cern,https://root.cern/doc/master/classTGeoHelix.html,1,['error'],['error']
Availability," & ; , . Int_t & ;  . ). inlinevirtual . Reimplemented in TMySQLStatement, TODBCStatement, TPgSQLStatement, and TSQLiteStatement.; Definition at line 93 of file TSQLStatement.h. ◆ GetDay(). Int_t TSQLStatement::GetDay ; (; Int_t ; npar). return day value for parameter (if applicable) ; Definition at line 348 of file TSQLStatement.cxx. ◆ GetDouble(). virtual Double_t TSQLStatement::GetDouble ; (; Int_t ; ). inlinevirtual . Reimplemented in TMySQLStatement, TODBCStatement, TPgSQLStatement, and TSQLiteStatement.; Definition at line 86 of file TSQLStatement.h. ◆ GetErrorCode(). Int_t TSQLStatement::GetErrorCode ; (; ); const. virtual . returns error code of last operation if res==0, no error Each specific implementation of TSQLStatement provides its own error coding ; Definition at line 234 of file TSQLStatement.cxx. ◆ GetErrorMsg(). const char * TSQLStatement::GetErrorMsg ; (; ); const. virtual . returns error message of last operation if no errors, return 0 Each specific implementation of TSQLStatement provides its own error messages ; Definition at line 244 of file TSQLStatement.cxx. ◆ GetFieldName(). virtual const char * TSQLStatement::GetFieldName ; (; Int_t ; ). pure virtual . Implemented in TMySQLStatement, TODBCStatement, TPgSQLStatement, and TSQLiteStatement. ◆ GetHour(). Int_t TSQLStatement::GetHour ; (; Int_t ; npar). return hours value for parameter (if applicable) ; Definition at line 359 of file TSQLStatement.cxx. ◆ GetInt(). virtual Int_t TSQLStatement::GetInt ; (; Int_t ; ). inlinevirtual . Reimplemented in TMySQLStatement, TODBCStatement, TPgSQLStatement, and TSQLiteStatement.; Definition at line 81 of file TSQLStatement.h. ◆ GetLargeObject(). virtual Bool_t TSQLStatement::GetLargeObject ; (; Int_t ; col, . void *& ; mem, . Long_t & ; size . ). inlinevirtual . Reimplemented in TPgSQLStatement.; Definition at line 89 of file TSQLStatement.h. ◆ GetLong(). virtual Long_t TSQLStatement::GetLong ; (; Int_t ; ). inlinevirtual . Reimplemented in TMySQLStatement",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLStatement.html:18766,error,error,18766,doc/master/classTSQLStatement.html,https://root.cern,https://root.cern/doc/master/classTSQLStatement.html,3,['error'],"['error', 'errors']"
Availability," & ; f, . double ; absTol = 0.0, . double ; relTol = 1E-9, . unsigned int ; maxcall = 100000, . unsigned int ; size = 0 . ). explicit . Construct with a reference to the integrand function and given optionally tolerance (absolute and relative), maximum number of function evaluation (maxpts) and size of the working array. ; Definition at line 37 of file AdaptiveIntegratorMultiDim.cxx. ◆ ~AdaptiveIntegratorMultiDim(). ROOT::Math::AdaptiveIntegratorMultiDim::~AdaptiveIntegratorMultiDim ; (; ). inlineoverride . destructor (no operations) ; Definition at line 113 of file AdaptiveIntegratorMultiDim.h. Member Function Documentation. ◆ DoIntegral(). double ROOT::Math::AdaptiveIntegratorMultiDim::DoIntegral ; (; const double * ; xmin, . const double * ; xmax, . bool ; absVal = false . ). protected . Definition at line 76 of file AdaptiveIntegratorMultiDim.cxx. ◆ Error(). double ROOT::Math::AdaptiveIntegratorMultiDim::Error ; (; ); const. inlineoverridevirtual . return integration error ; Implements ROOT::Math::VirtualIntegrator.; Definition at line 134 of file AdaptiveIntegratorMultiDim.h. ◆ Integral() [1/2]. double ROOT::Math::AdaptiveIntegratorMultiDim::Integral ; (; const double * ; xmin, . const double * ; xmax . ). inlineoverridevirtual . evaluate the integral with the previously given function between xmin[] and xmax[] ; Implements ROOT::Math::VirtualIntegratorMultiDim.; Definition at line 119 of file AdaptiveIntegratorMultiDim.h. ◆ Integral() [2/2]. double ROOT::Math::AdaptiveIntegratorMultiDim::Integral ; (; const IMultiGenFunction & ; f, . const double * ; xmin, . const double * ; xmax . ). evaluate the integral passing a new function ; Definition at line 382 of file AdaptiveIntegratorMultiDim.cxx. ◆ NEval(). int ROOT::Math::AdaptiveIntegratorMultiDim::NEval ; (; ); const. inlineoverridevirtual . return number of function evaluations in calculating the integral ; Reimplemented from ROOT::Math::VirtualIntegrator.; Definition at line 152 of file AdaptiveIntegratorMulti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1AdaptiveIntegratorMultiDim.html:8402,error,error,8402,doc/master/classROOT_1_1Math_1_1AdaptiveIntegratorMultiDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1AdaptiveIntegratorMultiDim.html,1,['error'],['error']
Availability," & ; param, . double & ; lower, . double & ; upper . ). find both lower and upper interval boundaries for a given parameter return false if the bounds have not been found ; Definition at line 295 of file LikelihoodInterval.cxx. ◆ GetBestFitParameters(). const RooArgSet * RooStats::LikelihoodInterval::GetBestFitParameters ; (; ); const. inline . return a pointer to a snapshot with best fit parameter of interest ; Definition at line 87 of file LikelihoodInterval.h. ◆ GetContourPoints(). Int_t LikelihoodInterval::GetContourPoints ; (; const RooRealVar & ; paramX, . const RooRealVar & ; paramY, . double * ; x, . double * ; y, . Int_t ; npoints = 30 . ). return the 2D-contour points for the given subset of parameters by default make the contour using 30 points. ; The User has to preallocate the x and y array which will return the set of x and y points defining the contour. The return value of the function specify the number of contour point found. In case of error a zero is returned ; Definition at line 365 of file LikelihoodInterval.cxx. ◆ GetLikelihoodRatio(). RooAbsReal * RooStats::LikelihoodInterval::GetLikelihoodRatio ; (; ). inline . return the profile log-likelihood ratio function ; Definition at line 84 of file LikelihoodInterval.h. ◆ GetParameters(). RooArgSet * LikelihoodInterval::GetParameters ; (; ); const. overridevirtual . return a cloned list of parameters of interest. User manages the return object ; returns list of parameters ; Implements RooStats::ConfInterval.; Definition at line 158 of file LikelihoodInterval.cxx. ◆ IsA(). TClass * RooStats::LikelihoodInterval::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooStats::ConfInterval.; Definition at line 109 of file LikelihoodInterval.h. ◆ IsInInterval(). bool LikelihoodInterval::IsInInterval ; (; const RooArgSet & ; parameterPoint); const. overridevirtual . check if given point is in the interval ; This is the main method to satisfy the RooStats::Co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1LikelihoodInterval.html:19720,error,error,19720,doc/master/classRooStats_1_1LikelihoodInterval.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1LikelihoodInterval.html,1,['error'],['error']
Availability," & ; upper . ); const. retrieve parameter bounds - return false if parameter is not bound ; Definition at line 369 of file FitResult.cxx. ◆ Parameters(). const std::vector< double > & ROOT::Fit::FitResult::Parameters ; (; ); const. inline . parameter values (return std::vector) ; Definition at line 167 of file FitResult.h. ◆ ParError(). double ROOT::Fit::FitResult::ParError ; (; unsigned int ; i); const. inline . parameter error by index ; Definition at line 183 of file FitResult.h. ◆ ParName(). std::string ROOT::Fit::FitResult::ParName ; (; unsigned int ; i); const. name of the parameter ; Definition at line 382 of file FitResult.cxx. ◆ Print(). void ROOT::Fit::FitResult::Print ; (; std::ostream & ; os, . bool ; covmat = false . ); const. print the result and optionally covariance matrix and correlations ; Definition at line 389 of file FitResult.cxx. ◆ PrintCovMatrix(). void ROOT::Fit::FitResult::PrintCovMatrix ; (; std::ostream & ; os); const. print error matrix and correlations ; Definition at line 447 of file FitResult.cxx. ◆ Prob(). double ROOT::Fit::FitResult::Prob ; (; ); const. p value of the fit (chi2 probability) ; Definition at line 320 of file FitResult.cxx. ◆ Scan(). bool ROOT::Fit::FitResult::Scan ; (; unsigned int ; ipar, . unsigned int & ; npoints, . double * ; pntsx, . double * ; pntsy, . double ; xmin = 0, . double ; xmax = 0 . ). scan likelihood value of parameter and fill the given graph. ; Scan parameter ipar between value of xmin and xmax A array for x and y points should be provided. ; Definition at line 639 of file FitResult.cxx. ◆ SetChi2AndNdf(). void ROOT::Fit::FitResult::SetChi2AndNdf ; (; double ; chi2, . unsigned int ; npoints . ). Set the chi2 and the ndf This function should be called when using an external FCN for fitting and one provides the chi2 and the number of fitting data points) to store and have them printed in the FitResult class. ; Definition at line 311 of file FitResult.cxx. ◆ SetMinosError(). void ROOT::Fit::FitResult::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitResult.html:22261,error,error,22261,doc/master/classROOT_1_1Fit_1_1FitResult.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitResult.html,1,['error'],['error']
Availability," & operator= (const TGraphMultiErrors &tgme);  TGraphMultiErrors assignment operator. ;  ; void Print (Option_t *chopt="""") const override;  Print graph and errors values. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; void Scale (Double_t c1=1., Option_t *option=""y"") override;  Multiply the values and errors of a TGraphMultiErrors by a constant c1. ;  ; virtual void SetAttFill (Int_t e, TAttFill *taf);  Set TAttFill parameters of error e by copying from another TAttFill (-1 = Global and x errors). ;  ; virtual void SetAttLine (Int_t e, TAttLine *tal);  Set TAttLine parameters of error e by copying from another TAttLine (-1 = Global and x errors). ;  ; virtual void SetEY (Int_t e, Int_t np, const Double_t *eyL, const Double_t *eyH);  Set error e ey values. ;  ; virtual void SetEYhigh (Int_t e, Int_t np, const Double_t *eyH);  Set error e eyH values. ;  ; virtual void SetEYlow (Int_t e, Int_t np, const Double_t *eyL);  Set error e eyL values. ;  ; virtual void SetFillColor (Color_t fcolor);  Set the fill area color. ;  ; virtual void SetFillColor (Int_t e, Color_t fcolor);  Set Fill Color of error e (-1 = Global and x errors). ;  ; virtual void SetFillColorAlpha (Color_t fcolor, Float_t falpha);  Set a transparent fill color. ;  ; virtual void SetFillColorAlpha (Int_t e, Color_t fcolor, Float_t falpha);  Set Fill Color and Alpha of error e (-1 = Global and x errors). ;  ; virtual void SetFillStyle (Int_t e, Style_t fstyle);  Set Fill Style of error e (-1 = Global and x errors). ;  ; virtual void SetFillStyle (Style_t fstyle);  Set the fill area style. ;  ; virtual void SetLineColor (Color_t lcolor);  Set the line color. ;  ; virtual void SetLineColor (Int_t e, Color_t lcolor);  Set Line Color of error e (-1 = Global and x errors). ;  ; virtual void SetLineColorAlpha (Color_t lcolor, Float_t lalpha);  Set a transparent line color. ;  ; virtual void SetLineColorAlpha (Int_t e, C",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:13949,error,error,13949,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['error'],['error']
Availability," 'Scat' : Draw a scatter-plot (default); 'Palette' : the color palette is drawn. 3d Plot:; 'Type' : ComboBox: set histogram type Lego or Surface-Plot; draw(Lego, Lego1..4, Surf, Surf1..5); see THistPainter::Paint; 'Coords' : ComboBox: set the coordinate system (Cartesian, ..; Spheric) see THistPainter::Paint; 'Cont #' : TGNumberEntry: set the number of Contours (for e.g.; Lego2 drawoption; 3d Plot checkboxes:; 'Errors' : draw errors in a cartesian lego plot; 'Palette' : the color palette is drawn; 'Front' : draw the front box of a cartesian lego plot; 'Back' : draw the back box of a cartesian lego plot; Available for a 3D lego plot:; 'Bar' : change the bar attributes; 'W' : change Bar Width; 'O' : change Bar Offset; Further Editor:; 'Marker' : change the Marker attributes (color, appearance,; thickness) see TAttMarkerEditor. /*. */. /*. */. Rebinning Tab:; This Tab has two different layouts. One is for a histogram which; is not drawn from an ntuple. The other one is available for a; histogram which is drawn from an ntuple. In this case the rebin; algorithm can create a rebinned histogram from the original data; i.e. the ntuple.; To see te differences do for example:; TFile f(""hsimple.root"");; hpxpy->Draw(""Lego2""); // non ntuple histogram; ntuple->Draw(""px:py"","""",""Lego2""); // ntuple histogram; Non ntuple histogram:; 'Rebin': with the Sliders (one for the x, one for the y axis); the number of bins (shown in the field below the; Slider) can be changed to any number which divides; the number of bins of the original histogram.; Pushing 'Apply' will delete the origin histogram and; replace it by the rebinned one on the screen.; Pushing 'Ignore' the origin histogram will be restored; Histogram drawn from an ntuple:; 'Rebin' with the sliders the number of bins can be enlarged by; a factor of 2,3,4,5 (moving to the right) or reduced; by a factor of 1/2, 1/3, 1/4, 1/5; 'BinOffset': with the BinOffset slider the origin of the; histogram can be changed within one binwidth; Using",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2Editor.html:2409,avail,available,2409,root/html602/TH2Editor.html,https://root.cern,https://root.cern/root/html602/TH2Editor.html,4,['avail'],['available']
Availability," 'dbg' value > 0 gives increasing verbosity. The last argument 'script' allows to specify an alternative script to be executed remotely to startup the session. ; Reimplemented from TApplication.; Definition at line 768 of file TRint.cxx. ◆ Run(). void TRint::Run ; (; Bool_t ; retrn = kFALSE). overridevirtual . Main application eventloop. ; First process files given on the command line and then go into the main application event loop, unless the -q command line option was specified in which case the program terminates. When return is true this method returns even when -q was specified.; When QuitOpt is true and return is false, terminate the application with an error code equal to either the ProcessLine error (if any) or the return value of the command casted to a long. ; Reimplemented from TApplication.; Definition at line 384 of file TRint.cxx. ◆ SetEchoMode(). void TRint::SetEchoMode ; (; Bool_t ; mode). overridevirtual . Set console mode: ; mode = kTRUE - echo input symbols mode = kFALSE - noecho input symbols ; Reimplemented from TApplication.; Definition at line 752 of file TRint.cxx. ◆ SetPrompt(). const char * TRint::SetPrompt ; (; const char * ; newPrompt). virtual . Set a new default prompt. ; It returns the previous prompt. The prompt may contain a d which will be replaced by the commend number. The default prompt is ""root [%d] "". The maximum length of the prompt is 55 characters. To set the prompt in an interactive session do: root [0] ((TRint*)gROOT->GetApplication())->SetPrompt(""aap> "") aap> ; Definition at line 595 of file TRint.cxx. ◆ Streamer(). void TRint::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TApplication. ◆ StreamerNVirtual(). void TRint::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 67 of file TRint.h. ◆ TabCompletionHook(). Int_t TRint::TabCompletionHook ; (; char * ; buf, . int * ; pLoc, . std::ostream & ; out . ). overridevirtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRint.html:27011,echo,echo,27011,doc/master/classTRint.html,https://root.cern,https://root.cern/doc/master/classTRint.html,1,['echo'],['echo']
Availability," 'human readable' format. ; Parameters. bytesthe size in bytes to be converted ; siwhether to use the SI units or not. ; coeffreturn the size expressed in the new unit. ; unitsreturn a pointer to the string representation of the new unit . Definition at line 38 of file StringConv.hxx. ◆ ValidateRule(). static Bool_t ROOT::ValidateRule ; (; const std::map< std::string, std::string > & ; rule, . std::string & ; error_string . ). static . Validate if the user specified rules are correct. ; Definition at line 277 of file RConversionRuleParser.cxx. ◆ WebGUILog(). ROOT::Experimental::RLogChannel & ROOT::WebGUILog ; (; ). Log channel for WebGUI diagnostics. ; Definition at line 24 of file RWebDisplayArgs.cxx. ◆ WriteAutoVariables(). static void ROOT::WriteAutoVariables ; (; const std::list< std::string > & ; target, . const SourceTypeList_t & ; source, . MembersTypeMap_t & ; members, . std::string & ; className, . std::string & ; mappedName, . std::ostream & ; output . ). static . Write down the sources. ; Definition at line 476 of file RConversionRuleParser.cxx. ◆ WriteReadRawRuleFunc(). void ROOT::WriteReadRawRuleFunc ; (; SchemaRuleMap_t & ; rule, . int ; index, . std::string & ; mappedName, . MembersTypeMap_t & ; members, . std::ostream & ; output . ). Write the conversion function for ReadRaw rule, the function name is being written to rule[""funcname""]. ; Definition at line 694 of file RConversionRuleParser.cxx. ◆ WriteReadRuleFunc(). void ROOT::WriteReadRuleFunc ; (; SchemaRuleMap_t & ; rule, . int ; index, . std::string & ; mappedName, . MembersTypeMap_t & ; members, . std::ostream & ; output . ). Write the conversion function for Read rule, the function name is being written to rule[""funcname""]. ; Definition at line 641 of file RConversionRuleParser.cxx. ◆ WriteSchemaList(). void ROOT::WriteSchemaList ; (; std::list< SchemaRuleMap_t > & ; rules, . const std::string & ; listName, . std::ostream & ; output . ). Write schema rules. ; Definition at line 765 of file RCo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v630/namespaceROOT.html:45054,down,down,45054,doc/v630/namespaceROOT.html,https://root.cern,https://root.cern/doc/v630/namespaceROOT.html,1,['down'],['down']
Availability," 'human readable' format. ; Parameters. bytesthe size in bytes to be converted ; siwhether to use the SI units or not. ; coeffreturn the size expressed in the new unit. ; unitsreturn a pointer to the string representation of the new unit . Definition at line 38 of file StringConv.hxx. ◆ ValidateRule(). static Bool_t ROOT::ValidateRule ; (; const std::map< std::string, std::string > & ; rule, . std::string & ; error_string . ). static . Validate if the user specified rules are correct. ; Definition at line 291 of file RConversionRuleParser.cxx. ◆ WebGUILog(). ROOT::Experimental::RLogChannel & ROOT::WebGUILog ; (; ). Log channel for WebGUI diagnostics. ; Definition at line 24 of file RWebDisplayArgs.cxx. ◆ WriteAutoVariables(). static void ROOT::WriteAutoVariables ; (; const std::list< std::string > & ; target, . const SourceTypeList_t & ; source, . MembersTypeMap_t & ; members, . std::string & ; className, . std::string & ; mappedName, . std::ostream & ; output . ). static . Write down the sources. ; Definition at line 490 of file RConversionRuleParser.cxx. ◆ WriteReadRawRuleFunc(). void ROOT::WriteReadRawRuleFunc ; (; SchemaRuleMap_t & ; rule, . int ; index, . std::string & ; mappedName, . MembersTypeMap_t & ; members, . std::ostream & ; output . ). Write the conversion function for ReadRaw rule, the function name is being written to rule[""funcname""]. ; Definition at line 708 of file RConversionRuleParser.cxx. ◆ WriteReadRuleFunc(). void ROOT::WriteReadRuleFunc ; (; SchemaRuleMap_t & ; rule, . int ; index, . std::string & ; mappedName, . MembersTypeMap_t & ; members, . std::ostream & ; output . ). Write the conversion function for Read rule, the function name is being written to rule[""funcname""]. ; Definition at line 655 of file RConversionRuleParser.cxx. ◆ WriteSchemaList(). void ROOT::WriteSchemaList ; (; std::list< SchemaRuleMap_t > & ; rules, . const std::string & ; listName, . std::ostream & ; output . ). Write schema rules. ; Definition at line 779 of file RCo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT.html:45276,down,down,45276,doc/master/namespaceROOT.html,https://root.cern,https://root.cern/doc/master/namespaceROOT.html,2,['down'],['down']
Availability," 'wrk' only.; If defined, the full path of the remote path will be rfile.; If rfile = ""cache"" the file is copied to the remote cache instead of the sandbox; (to copy to the cache on a different name use rfile = ""cache:newname"").; The mask 'opt' is an or of ESendFileOpt:. kAscii (0x0) if set true ascii file transfer is used; kBinary (0x1) if set true binary file transfer is used; kForce (0x2) if not set an attempt is done to find out; whether the file really needs to be downloaded; (a valid copy may already exist in the cache; from a previous run); the bit is set by; UploadPackage, since the check is done elsewhere.; kForward (0x4) if set, ask server to forward the file to slave; or submaster (meaningless for slave servers).; kCpBin (0x8) Retrieve from the cache the binaries associated; with the file; kCp (0x10) Retrieve the files from the cache. Int_t SendObject(const TObject* obj, TProof::ESlaves list = kActive); Send object to master or slave servers. Returns number of slaves object; was sent to, -1 in case of error. Int_t SendPrint(Option_t* option = """"); Send print command to master server. Returns number of slaves message; was sent to. Returns -1 in case of error. void SetLogLevel(Int_t level, UInt_t mask = TProofDebug::kAll); Set server logging level. void SetRealTimeLog(Bool_t on = kTRUE); Switch ON/OFF the real-time logging facility. When this option is; ON, log messages from processing are sent back as they come, instead of; being sent back at the end in one go. This may help debugging or monitoring; in some cases, but, depending on the amount of log, it may have significant; consequencies on the load over the network, so it must be used with care. Int_t SetParallelSilent(Int_t nodes, Bool_t random = kFALSE); Tell PROOF how many slaves to use in parallel. If random is TRUE a random; selection is done (if nodes is less than the available nodes).; Returns the number of parallel slaves. Returns -1 in case of error. Int_t SetParallel(Int_t nodes = 9999, Bool_t r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProof.html:57374,error,error,57374,root/html528/TProof.html,https://root.cern,https://root.cern/root/html528/TProof.html,4,['error'],['error']
Availability," ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TSystem; virtual void DoBeep (Int_t=-1, Int_t=-1) const;  ; virtual const char * ExpandFileName (const char *fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; virtual Bool_t ExpandFileName (TString &fname);  Expand a pathname getting rid of special shell characters like ~. ;  ; TSystem * FindHelper (const char *path, void *dirptr=nullptr);  Create helper TSystem to handle file and directory operations that might be special for remote file access. ;  ; TString & GetLastErrorString ();  Return the thread local storage for the custom last error message. ;  ; const TString & GetLastErrorString () const;  Return the thread local storage for the custom last error message. ;  ; virtual const char * GetLinkedLibraries ();  Get list of shared libraries loaded at the start of the executable. ;  ; virtual void SigAlarmInterruptsSyscalls (Bool_t);  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Static Protected Member Functions inherited from TSystem; static const char * StripOffProto (const char *path, const char *proto);  Strip off protocol string from specified path. ;  ;  Protected Attributes inherited from TSystem; EAclicMode fAclicMode {kDefault};  ; Int_t fAclicProperties {0};  ; Int_t fBeepDuration {0};  ; Int_t fBeepFreq {0};  ; TString fBuildArch;  ; TString fBuildCompiler;  ; TString fBuildCompilerVersion;  ; TString fBuildCompilerVersionStr;  ; TString fBuildDir;  ; TString fBuildNode;  ; TSeqCollection * fCompiled {nullptr}",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDavixSystem.html:31203,error,error,31203,doc/master/classTDavixSystem.html,https://root.cern,https://root.cern/doc/master/classTDavixSystem.html,2,['error'],['error']
Availability," ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TUDPSocket (const char *host, const char *service);  Create a socket. ;  ;  TUDPSocket (const char *host, Int_t port);  Create a socket; see CreateAuthSocket for the form of url. ;  ;  TUDPSocket (const char *sockpath);  Create a socket in the Unix domain on 'sockpath'. ;  ;  TUDPSocket (const TUDPSocket &s);  TUDPSocket copy ctor. ;  ;  TUDPSocket (Int_t descriptor);  Create a socket. ;  ;  TUDPSocket (Int_t descriptor, const char *sockpath);  Create a socket. ;  ;  TUDPSocket (TInetAddress address, const char *service);  Create a socket. ;  ;  TUDPSocket (TInetAddress address, Int_t port);  Create a socket. ;  ; virtual ~TUDPSocket ();  ; virtual void Close (Option_t *opt="""");  Close the socket. ;  ; UInt_t GetBytesRecv () const;  ; UInt_t GetBytesSent () const;  ; Int_t GetCompressionAlgorithm () const;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; virtual Int_t GetDescriptor () const;  ; Int_t GetErrorCode () const;  Returns error code. ;  ; TInetAddress GetInetAddress () const;  ; TTimeStamp GetLastUsage ();  ; virtual TInetAddress GetLocalInetAddress ();  Return internet address of local host to which the socket is bound. ;  ; virtual Int_t GetLocalPort ();  Return the local port # to which the socket is bound. ;  ; virtual Int_t GetOption (ESockOptions opt, Int_t &val);  Get socket options. Returns -1 in case of error. ;  ; Int_t GetPort () const;  ; Int_t GetRemoteProtocol () const;  ; TSecContext * GetSecContext () const;  ; const char * GetService () const;  ; Int_t GetServType () const;  ; const char * GetUrl () const;  ; TClass * IsA () const override;  ; virtual Bool_t IsValid () const;  ; virtual Int_t Reconnect ();  ; virtual Int_t Recv (char *mess, Int_t max);  Receive a character string message of maximum max length. ;  ; virtual Int_t Recv (char *mess, Int_t max,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUDPSocket.html:2289,error,error,2289,doc/master/classTUDPSocket.html,https://root.cern,https://root.cern/doc/master/classTUDPSocket.html,1,['error'],['error']
Availability," ( Input = 100 , Width = 100 ) Output = ( 1 , 100 , 100 ) Activation Function = Relu; Layer 5 BATCH NORM Layer: Input/Output = ( 100 , 100 , 1 ) Norm dim = 100 axis = -1; ; Layer 6 DENSE Layer: ( Input = 100 , Width = 100 ) Output = ( 1 , 100 , 100 ) Activation Function = Relu; Layer 7 DENSE Layer: ( Input = 100 , Width = 1 ) Output = ( 1 , 100 , 1 ) Activation Function = Identity; : Using 1280 events for training and 320 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 119.005; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.881238 0.852851 0.181896 0.0160504 7235.64 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.658204 0.827727 0.182292 0.0161751 7223.84 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.58547 0.792475 0.182478 0.0158424 7201.32 0; : 4 Minimum Test error found - save the configuration ; : 4 | 0.508772 0.760461 0.18258 0.0158465 7197.11 0; : 5 Minimum Test error found - save the configuration ; : 5 | 0.445197 0.705323 0.183204 0.015935 7174.07 0; : 6 | 0.409018 0.708257 0.18274 0.0151517 7160.42 1; : 7 | 0.369062 0.747523 0.18295 0.0151377 7150.84 2; : 8 | 0.31294 0.740134 0.183339 0.015769 7161.2 3; : 9 | 0.256184 0.756239 0.181088 0.0154708 7245.63 4; : 10 | 0.224257 0.809455 0.18089 0.0153446 7248.78 5; : ; : Elapsed time for training with 1600 events: 1.86 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_DNN_CPU : [dataset] : Evaluation of TMVA_DNN_CPU on training sample (1600 events); : Elapsed time for evaluation of 1600 events: 0.0796 sec ; : Creating xml weight file: ␛[0;36mdataset/wei",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:11685,error,error,11685,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,1,['error'],['error']
Availability," () const;  ; Long64_t * GetBasketEntry () const;  ; virtual Long64_t GetBasketSeek (Int_t basket) const;  Return address of basket in the file. ;  ; virtual Int_t GetBasketSize () const;  ; virtual TList * GetBrowsables ();  Returns (and, if 0, creates) browsable objects for this branch See TVirtualBranchBrowsable::FillListOfBrowsables. ;  ; ROOT::Experimental::Internal::TBulkBranchRead & GetBulkRead ();  ; Int_t GetCompressionAlgorithm () const;  ; Int_t GetCompressionLevel () const;  ; Int_t GetCompressionSettings () const;  ; TDirectory * GetDirectory () const;  ; Long64_t GetEntries () const;  ; virtual Int_t GetEntryExport (Long64_t entry, Int_t getall, TClonesArray *list, Int_t n);  Read all leaves of an entry and export buffers to real objects in a TClonesArray list. ;  ; Long64_t GetEntryNumber () const;  ; Int_t GetEntryOffsetLen () const;  ; Int_t GetEvent (Long64_t entry=0);  ; virtual Int_t GetExpectedType (TClass *&clptr, EDataType &type);  Fill expectedClass and expectedType with information on the data type of the object/values contained in this branch (and thus the type of pointers expected to be passed to Set[Branch]Address return 0 in case of success and > 0 in case of failure. ;  ; virtual TFile * GetFile (Int_t mode=0);  Return pointer to the file where branch buffers reside, returns 0 in case branch buffers reside in the same file as tree header. ;  ; const char * GetFileName () const;  ; Long64_t GetFirstEntry () const;  ; virtual TString GetFullName () const;  Return the 'full' name of the branch. ;  ; const char * GetIconName () const override;  Return icon name depending on type of branch. ;  ; TIOFeatures GetIOFeatures () const;  Returns the IO settings currently in use for this branch. ;  ; virtual TLeaf * GetLeaf (const char *name) const;  Return pointer to the 1st Leaf named name in thisBranch. ;  ; TObjArray * GetListOfBaskets ();  ; TObjArray * GetListOfBranches ();  ; TObjArray * GetListOfLeaves ();  ; virtual bool GetMakeClass () co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranchClones.html:5073,failure,failure,5073,doc/master/classTBranchClones.html,https://root.cern,https://root.cern/doc/master/classTBranchClones.html,1,['failure'],['failure']
Availability," () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TXMLParser; _xmlParserCtxt * fContext;  Parse the xml file. ;  ; Int_t fParseCode;  To keep track of the errorcodes. ;  ; Bool_t fReplaceEntities;  Replace entities. ;  ; Bool_t fStopError;  Stop when parse error occurs. ;  ; Bool_t fValidate;  To validate the parse context. ;  ; TString fValidateError;  Parse error. ;  ; TString fValidateWarning;  Parse warning. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TDOMParser.h>. Inheritance diagram for TDOMParser:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TDOMParser() [1/2]. TDOMParser::TDOMParser ; (; const TDOMParser & ; ). privatedelete . ◆ TDOMParser() [2/2]. TDOMParser::TDOMParser ; (; ). TDOMParser constructor. ; Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDOMParser.html:16548,error,errorcodes,16548,doc/master/classTDOMParser.html,https://root.cern,https://root.cern/doc/master/classTDOMParser.html,1,['error'],['errorcodes']
Availability," () const;  ;  Static Protected Member Functions inherited from TQObject; static Int_t CheckConnectArgs (TQObject *sender, TClass *sender_class, const char *signal, TClass *receiver_class, const char *slot);  Checking of consistency of sender/receiver methods/arguments. ;  ; static TString CompressName (const char *method_name);  Removes ""const"" words and blanks from full (with prototype) method name and resolve any typedefs in the method signature. ;  ; static Bool_t ConnectToClass (const char *sender_class, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  This method allows to make connection from any object of the same class to the receiver object. ;  ; static Bool_t ConnectToClass (TQObject *sender, const char *signal, TClass *receiver_class, void *receiver, const char *slot);  Create connection between sender and receiver. ;  ;  Protected Attributes inherited from TXMLParser; _xmlParserCtxt * fContext;  Parse the xml file. ;  ; Int_t fParseCode;  To keep track of the errorcodes. ;  ; Bool_t fReplaceEntities;  Replace entities. ;  ; Bool_t fStopError;  Stop when parse error occurs. ;  ; Bool_t fValidate;  To validate the parse context. ;  ; TString fValidateError;  Parse error. ;  ; TString fValidateWarning;  Parse warning. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TQObject; static Bool_t fgAllSignalsBlocked = kFALSE;  flag used for suppression of signals ;  . #include <TSAXParser.h>. Inheritance diagram for TSAXParser:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSAXParser() [1/2]. TSAXParser::TSAXParser ; (; const TSAXParser & ; ). privatedelete . ◆ TSAXParser() [2/2]. TSAXParser::TSAXParser ; (; ). Create SAX parser. ; Definiti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSAXParser.html:18520,error,errorcodes,18520,doc/master/classTSAXParser.html,https://root.cern,https://root.cern/doc/master/classTSAXParser.html,1,['error'],['errorcodes']
Availability," ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static EvalErrorIter evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging mode. ;  ; static void setHideOffset (bool flag);  ;  Static Public Member Functions inherited from RooAbsArg; static void setDirtyInhibit (bool flag);  Control global dirty inhibit mode. ;  ; static void verboseDirty (bool flag);  Activate verbose messaging related to dirty flag propagation. ;  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get st",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:49389,error,error,49389,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,4,['error'],['error']
Availability, ();  ; static const char * DeclFileName ();  ; static Longptr_t GetDtorOnly ();  Return destructor only flag. ;  ; static Bool_t GetObjectStat ();  Get status of object stat flag. ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  ;  Static Public Member Functions inherited from RooPrintable; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  . Protected Attributes; RooRealProxy _n;  Number of expected events. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooExtendedTerm.html:59215,error,errors,59215,doc/master/classRooExtendedTerm.html,https://root.cern,https://root.cern/doc/master/classRooExtendedTerm.html,1,['error'],['errors']
Availability," ();  Destructor (no operations). ;  ; double ErrorDef () const;  return the statistical scale used for calculate the error is typically 1 for Chi2 and 0.5 for likelihood minimization ;  ; bool IsValidError () const;  return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit) ;  ; unsigned int MaxFunctionCalls () const;  max number of function calls ;  ; unsigned int MaxIterations () const;  max iterations ;  ; virtual unsigned int NIterations () const;  number of iterations to reach the minimum ;  ; Minimizer & operator= (Minimizer &&)=delete;  ; Minimizer & operator= (Minimizer const &)=delete;  ; virtual MinimizerOptions Options () const;  retrieve the minimizer options (implement derived class if needed) ;  ; double Precision () const;  precision of minimizer in the evaluation of the objective function ( a value <=0 corresponds to the let the minimizer choose its default one) ;  ; int PrintLevel () const;  minimizer configuration parameters ;  ; void SetDefaultOptions ();  reset the default options (defined in MinimizerOptions) ;  ; void SetErrorDef (double up);  set scale for calculating the errors ;  ; void SetExtraOptions (const IOptions &extraOptions);  set only the extra options ;  ; void SetMaxFunctionCalls (unsigned int maxfcn);  set maximum of function calls ;  ; void SetMaxIterations (unsigned int maxiter);  set maximum iterations (one iteration can have many function calls) ;  ; void SetOptions (const MinimizerOptions &opt);  set all options in one go ;  ; void SetPrecision (double prec);  set in the minimizer the objective function evaluation precision ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. ;  ; void SetPrintLevel (int level);  set print level ;  ; void SetStrategy (int strategyLevel);  set the strategy ;  ; void SetTolerance (double tol);  set the tolerance ;  ; void SetValidError (bool on);  flag to check if minimizer needs to perform accurate error analysis (e.g. run He",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:9589,error,errors,9589,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,1,['error'],['errors']
Availability," ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TGObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGResourcePool.html:9966,error,error,9966,doc/master/classTGResourcePool.html,https://root.cern,https://root.cern/doc/master/classTGResourcePool.html,1,['error'],['error']
Availability," ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual void Print (Option_t *option="""") const;  This method must be overridden when a class wants to print itself. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; virtual void RecursiveRemove (TObject *obj);  Recursively remove this object from a list. ;  ; void ResetBit (UInt_t f);  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TObject; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGObject.html:7922,error,error,7922,doc/master/classTGObject.html,https://root.cern,https://root.cern/doc/master/classTGObject.html,1,['error'],['error']
Availability, (-750.903) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.726225 a1=-0.429497 mean=5.03871 nbkg=129.53 nsig=136.644 sig1frac=0.687558; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 140; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-740.756) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.899536 a1=-0.345881 mean=5.03897 nbkg=135.176 nsig=129.13 sig1frac=0.899393; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-677.604) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.766597 a1=-0.547838 mean=5.03836 nbkg=119.039 nsig=121.817 sig1frac=0.213703; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 130; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-777.498) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.527582 a1=-0.893856 mean=5.24753 nbkg=162.951 nsig=65.9357 sig1frac=0.970262; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-777.498) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.516095 a1=-0.955515 mean=5.14443 nbkg=157.502 nsig=97.2821 sig1frac=0.174928; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-777.498) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.510348 a1=-0.776595 mean=5.09286 nbkg=154.805 nsig=114.979 sig1frac=0.0496841; RooAddPdf::model,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf801__mcstudy_8C.html:25211,error,errors,25211,doc/master/rf801__mcstudy_8C.html,https://root.cern,https://root.cern/doc/master/rf801__mcstudy_8C.html,4,['error'],"['error', 'errors']"
Availability, (-920.777) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.726241 a1=-0.424659 mean=5.05565 nbkg=151.228 nsig=170.816 sig1frac=0.771802; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-743.339) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.942558 a1=-0.775768 mean=4.99866 nbkg=187.872 nsig=63.0852 sig1frac=0.868175; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-743.339) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.984478 a1=-0.59938 mean=4.99914 nbkg=173.959 nsig=90.3182 sig1frac=0.461117; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 90; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 80; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 70; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-775.389) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.72761 a1=-0.375581 mean=5.04879 nbkg=141.143 nsig=137.402 sig1frac=0.495257; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 60; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 50; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 40; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 30; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 20; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 10; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 0; [#0] WARNING:Generation -- Fit parameter 'sigma1' does not have an error. A pull distribution cannot be generated. This might be caused by the parameter being constant or be,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf801__mcstudy_8C.html:27811,error,errors,27811,doc/master/rf801__mcstudy_8C.html,https://root.cern,https://root.cern/doc/master/rf801__mcstudy_8C.html,4,['error'],"['error', 'errors']"
Availability," (1ULL << ( 21 )). };  TH1 status bits. More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  ~TH1 () override;  Histogram default destructor. ;  ; virtual Bool_t Add (const TH1 *h, const TH1 *h2, Double_t c1=1, Double_t c2=1);  Replace contents of this histogram by the addition of h1 and h2. ;  ; virtual Bool_t Add (const TH1 *h1, Double_t c1=1);  Performs the operation: this = this + c1*h1 If errors are defined (see TH1::Sumw2), errors are also recalculated. ;  ; virtual Bool_t Add (TF1 *h1, Double_t c1=1, Option_t *option="""");  Performs the operation: this = this + c1*f1 if errors are defined (see TH1::Sumw2), errors are also recalculated. ;  ; virtual void AddBinContent (Int_t bin);  Increment bin content by 1. ;  ; virtual void AddBinContent (Int_t bin, Double_t w);  Increment bin content by a weight w. ;  ; virtual Double_t AndersonDarlingTest (const TH1 *h2, Double_t &advalue) const;  Same function as above but returning also the test statistic value. ;  ; virtual Double_t AndersonDarlingTest (const TH1 *h2, Option_t *option="""") const;  Statistical test of compatibility in shape between this histogram and h2, using the Anderson-Darling 2 sample test. ;  ; void Browse (TBrowser *b) override;  Browse the Histogram object. ;  ; virtual Int_t BufferEmpty (Int_t action=0);  Fill histogram with all entries in the buffer. ;  ; virtual Bool_t CanExtendAllAxe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:24716,error,errors,24716,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,2,['error'],['errors']
Availability," (; ). protected . Split variables and parse name and parameters in brackets. ; Definition at line 186 of file TTreeDrawArgsParser.cxx. ◆ SetObjectName(). void TTreeDrawArgsParser::SetObjectName ; (; const char * ; s). inline . Definition at line 102 of file TTreeDrawArgsParser.h. ◆ SetOriginal(). void TTreeDrawArgsParser::SetOriginal ; (; TObject * ; o). inline . Definition at line 103 of file TTreeDrawArgsParser.h. ◆ SplitVariables(). bool TTreeDrawArgsParser::SplitVariables ; (; TString ; variables). protected . Parse expression [var1 [:var2 [:var3] ...]], number of variables cannot be greater than fgMaxDimension. ; A colon which is followed by (or that follows) another semicolon is not regarded as a separator.; If there are more separating : than fgMaxDimension - 1 then all characters after (fgMaxDimension - 1)th colon is put into the last variable. fDimension := <number of variables>; fVarExp[0] := <first variable string>; fVarExp[1] := <second variable string> .. Returns false in case of an error. . Definition at line 95 of file TTreeDrawArgsParser.cxx. ◆ Streamer(). void TTreeDrawArgsParser::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TTreeDrawArgsParser::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 106 of file TTreeDrawArgsParser.h. Member Data Documentation. ◆ fAdd. bool TTreeDrawArgsParser::fAdd. protected . Values should be added to an existing object. ; Definition at line 60 of file TTreeDrawArgsParser.h. ◆ fDimension. Int_t TTreeDrawArgsParser::fDimension. protected . Dimension of the histogram/plot. ; Definition at line 55 of file TTreeDrawArgsParser.h. ◆ fDrawProfile. bool TTreeDrawArgsParser::fDrawProfile. protected . True if the options contain :""prof"". ; Definition at line 71 of file TTreeDrawArgsParser.h. ◆ fEntryList. bool TTreeDrawArgsParser::fEntryList. protected . If fill a TEntryList. ; Definition at",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeDrawArgsParser.html:20989,error,error,20989,doc/master/classTTreeDrawArgsParser.html,https://root.cern,https://root.cern/doc/master/classTTreeDrawArgsParser.html,1,['error'],['error']
Availability," (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMinuitMinimizer::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMinuitMinimizer::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 272 of file TMinuitMinimizer.h. ◆ Contour(). bool TMinuitMinimizer::Contour ; (; unsigned int ; i, . unsigned int ; j, . unsigned int & ; npoints, . double * ; xi, . double * ; xj . ). overridevirtual . find the contour points (xi,xj) of the function for parameter i and j around the minimum The contour will be find for value of the function = Min + ErrorUp(); ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 884 of file TMinuitMinimizer.cxx. ◆ CovMatrix(). double TMinuitMinimizer::CovMatrix ; (; unsigned int ; i, . unsigned int ; j . ); const. inlineoverridevirtual . return covariance matrices elements if the variable is fixed the matrix is zero The ordering of the variables is the same as in errors ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 146 of file TMinuitMinimizer.h. ◆ CovMatrixStatus(). int TMinuitMinimizer::CovMatrixStatus ; (; ); const. overridevirtual . return status of covariance matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 721 of file TMinuitMinimizer.cxx. ◆ DeclFileName(). static const char * TMinuitMinimizer::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 272 of file TMinuitMinimizer.h. ◆ DoClear(). void TMinuitMinimizer::DoClear ; (; ). protected . reset ; Definition at line 826 of file TMinuitMinimizer.cxx. ◆ DoReleaseFixParameter(). void TMinuitMinimizer::DoReleaseFixParameter ; (; int ; ivar). protected . release a parameter that is fixed when it is redefined ; Definition at line 841 of file TMinuitMinimizer.cxx. ◆ Edm(). double TMinuitMinimizer::Edm ; (; ); const. overridevirtual . return expected distanc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuitMinimizer.html:14285,error,errors,14285,doc/master/classTMinuitMinimizer.html,https://root.cern,https://root.cern/doc/master/classTMinuitMinimizer.html,1,['error'],['errors']
Availability," (; ); const. inlineoverridevirtual . this is <= Function().NDim() which is the total number of variables (free+ constrained ones) ; Implements ROOT::Math::Minimizer.; Definition at line 153 of file Minuit2Minimizer.h. ◆ NFree(). unsigned int ROOT::Minuit2::Minuit2Minimizer::NFree ; (; ); const. inlineoverridevirtual . number of free variables (real dimension of the problem) this is <= Function().NDim() which is the total ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 157 of file Minuit2Minimizer.h. ◆ PrintResults(). void ROOT::Minuit2::Minuit2Minimizer::PrintResults ; (; ). overridevirtual . return reference to the objective function virtual const ROOT::Math::IGenFunction & Function() const; ; print result of minimization ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 684 of file Minuit2Minimizer.cxx. ◆ ProvidesError(). bool ROOT::Minuit2::Minuit2Minimizer::ProvidesError ; (; ); const. inlineoverridevirtual . minimizer provides error and error matrix ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 160 of file Minuit2Minimizer.h. ◆ ReleaseVariable(). bool ROOT::Minuit2::Minuit2Minimizer::ReleaseVariable ; (; unsigned int ; ivar). overridevirtual . release an existing variable ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 347 of file Minuit2Minimizer.cxx. ◆ RunMinosError(). int ROOT::Minuit2::Minuit2Minimizer::RunMinosError ; (; unsigned int ; i, . double & ; errLow, . double & ; errUp, . int ; runopt . ). protected . Definition at line 923 of file Minuit2Minimizer.cxx. ◆ Scan(). bool ROOT::Minuit2::Minuit2Minimizer::Scan ; (; unsigned int ; i, . unsigned int & ; nstep, . double * ; x, . double * ; y, . double ; xmin = 0, . double ; xmax = 0 . ). overridevirtual . scan a parameter i around the minimum. ; A minimization must have been done before, return false if it is not the case ; Reimplemented from ROOT::Math::Minimizer.; Definition at line 1089 of file Minuit2Minimizer.cxx. ◆ SetCovariance(). boo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html:22855,error,error,22855,doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Minuit2_1_1Minuit2Minimizer.html,2,['error'],['error']
Availability," (; Double_t & ; amin, . Double_t & ; edm, . Double_t & ; errdef, . Int_t & ; nvpar, . Int_t & ; nparx . ). return global fit parameters . amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable parameters; nparx : total number of parameters . Definition at line 90 of file MinuitWrapper.cxx. ◆ IsA(). virtual TClass * TMVA::MinuitWrapper::IsA ; (; ); const. inlinevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 69 of file MinuitWrapper.h. ◆ SetFitterTarget(). void TMVA::MinuitWrapper::SetFitterTarget ; (; IFitterTarget & ; target). inline . Definition at line 54 of file MinuitWrapper.h. ◆ SetParameter(). Int_t TMVA::MinuitWrapper::SetParameter ; (; Int_t ; ipar, . const char * ; parname, . Double_t ; value, . Double_t ; verr, . Double_t ; vlow, . Double_t ; vhigh . ). set initial values for a parameter . ipar : parameter number; parname : parameter name; value : initial parameter value; verr : initial error for this parameter; vlow : lower value for the parameter; vhigh : upper value for the parameter . Definition at line 121 of file MinuitWrapper.cxx. ◆ Streamer(). virtual void TMVA::MinuitWrapper::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TMVA::MinuitWrapper::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 69 of file MinuitWrapper.h. Member Data Documentation. ◆ fFitterTarget. IFitterTarget& TMVA::MinuitWrapper::fFitterTarget. private . fitter Target ; Definition at line 65 of file MinuitWrapper.h. ◆ fNumPar. Int_t TMVA::MinuitWrapper::fNumPar. private . number of parameters ; Definition at line 67 of file MinuitWrapper.h. ◆ fParameters. std::vector<Double_t> TMVA::MinuitWrapper::fParameters. private . vector holding the current parameters ; Definition at line 66 of file MinuitWrapper.h. Libraries for TMVA::MinuitWrapper:. [legend]; The documentati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MinuitWrapper.html:27612,error,error,27612,doc/master/classTMVA_1_1MinuitWrapper.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MinuitWrapper.html,1,['error'],['error']
Availability," (; FILE * ; pipe). overridevirtual . Close the pipe. ; Reimplemented from TSystem.; Definition at line 3889 of file TWinNTSystem.cxx. ◆ CollectGroups(). Bool_t TWinNTSystem::CollectGroups ; (; ). private . Definition at line 3519 of file TWinNTSystem.cxx. ◆ CollectMembers(). Bool_t TWinNTSystem::CollectMembers ; (; const char * ; lpszGroupName, . int & ; groupIdx, . int & ; memberIdx . ). private . Definition at line 3383 of file TWinNTSystem.cxx. ◆ ConnectService(). int TWinNTSystem::ConnectService ; (; const char * ; servername, . int ; port, . int ; tcpwindowsize, . const char * ; protocol = ""tcp"" . ). Connect to service servicename on server servername. ; Definition at line 5199 of file TWinNTSystem.cxx. ◆ CopyFile(). int TWinNTSystem::CopyFile ; (; const char * ; f, . const char * ; t, . Bool_t ; overwrite = kFALSE . ). overridevirtual . Copy a file. ; If overwrite is true and file already exists the file will be overwritten. Returns 0 when successful, -1 in case of failure, -2 in case the file already exists and overwrite was false. ; Reimplemented from TSystem.; Definition at line 2616 of file TWinNTSystem.cxx. ◆ CountMembers(). Bool_t TWinNTSystem::CountMembers ; (; const char * ; lpszGroupName). private . Definition at line 3196 of file TWinNTSystem.cxx. ◆ DeclFileName(). static const char * TWinNTSystem::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 254 of file TWinNTSystem.h. ◆ DirName(). const char * TWinNTSystem::DirName ; (; const char * ; pathname). overridevirtual . Return the directory name in pathname. ; DirName of c:/user/root is /user. It creates output with 'new char []' operator. Returned string has to be deleted. ; Reimplemented from TSystem.; Definition at line 2424 of file TWinNTSystem.cxx. ◆ DispatchOneEvent(). void TWinNTSystem::DispatchOneEvent ; (; Bool_t ; pendingOnly = kFALSE). overridevirtual . Dispatch a single event in TApplication::Run() loop. ; Reimplemented from",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWinNTSystem.html:43605,failure,failure,43605,doc/master/classTWinNTSystem.html,https://root.cern,https://root.cern/doc/master/classTWinNTSystem.html,1,['failure'],['failure']
Availability," (; MethodInfo_t * ; minfo); const. finalvirtual . Reimplemented from TInterpreter.; Definition at line 9109 of file TCling.cxx. ◆ MethodInfo_TypeName(). const char * TCling::MethodInfo_TypeName ; (; MethodInfo_t * ; minfo); const. finalvirtual . Reimplemented from TInterpreter.; Definition at line 9147 of file TCling.cxx. ◆ MethodInfo_TypeNormalizedName(). std::string TCling::MethodInfo_TypeNormalizedName ; (; MethodInfo_t * ; minfo); const. finalvirtual . Reimplemented from TInterpreter.; Definition at line 9156 of file TCling.cxx. ◆ operator=(). TCling & TCling::operator= ; (; const TCling & ; ). privatedelete . ◆ PrintIntro(). void TCling::PrintIntro ; (; ). finalvirtual . No-op; see TRint instead. ; Implements TInterpreter.; Definition at line 2648 of file TCling.cxx. ◆ ProcessClassesToUpdate(). void TCling::ProcessClassesToUpdate ; (; ). private . Definition at line 1980 of file TCling.cxx. ◆ ProcessLine(). Longptr_t TCling::ProcessLine ; (; const char * ; line, . EErrorCode * ; error = nullptr . ). finalvirtual . Implements TInterpreter.; Definition at line 2453 of file TCling.cxx. ◆ ProcessLineAsynch(). Longptr_t TCling::ProcessLineAsynch ; (; const char * ; line, . EErrorCode * ; error = nullptr . ). Let cling process a command line asynch. ; Definition at line 3560 of file TCling.cxx. ◆ ProcessLineSynch(). Longptr_t TCling::ProcessLineSynch ; (; const char * ; line, . EErrorCode * ; error = nullptr . ). finalvirtual . Let cling process a command line synchronously, i.e we are waiting it will be finished. ; Implements TInterpreter.; Definition at line 3569 of file TCling.cxx. ◆ ReadRootmapFile(). int TCling::ReadRootmapFile ; (; const char * ; rootmapfile, . TUniqueString * ; uniqueString = nullptr . ). private . Read and parse a rootmapfile in its new format, and return 0 in case of success, -1 if the file has already been read, and -3 in case its format is the old one (e.g. ; containing ""Library.ClassName""), -4 in case of syntax error. ; Definition at line",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling.html:122663,error,error,122663,doc/master/classTCling.html,https://root.cern,https://root.cern/doc/master/classTCling.html,1,['error'],['error']
Availability," (; Option_t * ; opt = """"); const. overridevirtual . Print some info about the FTP connection. ; Reimplemented from TObject.; Definition at line 157 of file TFTP.cxx. ◆ PrintDirectory(). Int_t TFTP::PrintDirectory ; (; ); const. Print path of remote working directory. ; Returns 0 in case of succes and -1 in cse of failure. ; Definition at line 764 of file TFTP.cxx. ◆ PrintError(). void TFTP::PrintError ; (; const char * ; where, . Int_t ; err . ); const. private . Print error string depending on error code. ; Definition at line 182 of file TFTP.cxx. ◆ put(). void TFTP::put ; (; const char * ; file, . const char * ; remoteName = nullptr . ). inline . Definition at line 111 of file TFTP.h. ◆ PutFile(). Long64_t TFTP::PutFile ; (; const char * ; file, . const char * ; remoteName = nullptr . ). Transfer file to remote host. ; Returns number of bytes sent or < 0 in case of error. Error -1 connection is still open, error -2 connection has been closed. In case of failure fRestartAt is set to the number of bytes correclty transfered. Calling PutFile() immediately afterwards will restart at fRestartAt. If this is not desired call SetRestartAt(0) before calling PutFile(). If rootd reports that the file is locked, and you are sure this is not the case (e.g. due to a crash), you can force unlock it by prepending the remoteName with a '-'. ; Definition at line 233 of file TFTP.cxx. ◆ pwd(). void TFTP::pwd ; (; ); const. inline . Definition at line 117 of file TFTP.h. ◆ Recv(). Int_t TFTP::Recv ; (; Int_t & ; status, . EMessageTypes & ; kind . ); const. private . Return status from rootd server and message kind. ; Returns -1 in case of error otherwise 8 (sizeof 2 words, status and kind). ; Definition at line 191 of file TFTP.cxx. ◆ RenameFile(). Int_t TFTP::RenameFile ; (; const char * ; file1, . const char * ; file2 . ); const. Rename a remote file. ; Anonymous users may not rename files. Returns 0 in case of success and -1 in case of failure. ; Definition at line 790 of file TF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFTP.html:22135,failure,failure,22135,doc/master/classTFTP.html,https://root.cern,https://root.cern/doc/master/classTFTP.html,1,['failure'],['failure']
Availability," (; TBuffer & ; b). overridevirtual . Stream an object of class TGraph. ; Reimplemented from TGraph. ◆ StreamerNVirtual(). void TGraphBentErrors::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 101 of file TGraphBentErrors.h. ◆ SwapPoints(). void TGraphBentErrors::SwapPoints ; (; Int_t ; pos1, . Int_t ; pos2 . ). overrideprotectedvirtual . Swap points. ; Reimplemented from TGraph.; Definition at line 646 of file TGraphBentErrors.cxx. ◆ UpdateArrays(). void TGraphBentErrors::UpdateArrays ; (; const std::vector< Int_t > & ; sorting_indices, . Int_t ; numSortedPoints, . Int_t ; low . ). overrideprotectedvirtual . Update the fX, fY, fEXlow, fEXhigh, fEXlowd, fEXhighd, fEYlow, fEYhigh, fEYlowd, ; and fEYhighd arrays with the sorted values. ; Reimplemented from TGraph.; Definition at line 665 of file TGraphBentErrors.cxx. Member Data Documentation. ◆ fEXhigh. Double_t* TGraphBentErrors::fEXhigh. protected . [fNpoints] array of X high errors ; Definition at line 29 of file TGraphBentErrors.h. ◆ fEXhighd. Double_t* TGraphBentErrors::fEXhighd. protected . [fNpoints] array of X high displacements ; Definition at line 34 of file TGraphBentErrors.h. ◆ fEXlow. Double_t* TGraphBentErrors::fEXlow. protected . [fNpoints] array of X low errors ; Definition at line 28 of file TGraphBentErrors.h. ◆ fEXlowd. Double_t* TGraphBentErrors::fEXlowd. protected . [fNpoints] array of X low displacements ; Definition at line 33 of file TGraphBentErrors.h. ◆ fEYhigh. Double_t* TGraphBentErrors::fEYhigh. protected . [fNpoints] array of Y high errors ; Definition at line 31 of file TGraphBentErrors.h. ◆ fEYhighd. Double_t* TGraphBentErrors::fEYhighd. protected . [fNpoints] array of Y high displacements ; Definition at line 36 of file TGraphBentErrors.h. ◆ fEYlow. Double_t* TGraphBentErrors::fEYlow. protected . [fNpoints] array of Y low errors ; Definition at line 30 of file TGraphBentErrors.h. ◆ fEYlowd. Double_t* TGraphBentErrors::fEYlowd. protected . [",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphBentErrors.html:45246,error,errors,45246,doc/master/classTGraphBentErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphBentErrors.html,1,['error'],['errors']
Availability," (; const char * ; str, . Int_t ; kind = kMESS_STRING, . ESlaves ; list = kActive . ). private . Broadcast a character string buffer to all slaves in the specified list (either all slaves or only the active slaves). ; Use kind to set the TMessage what field. Returns the number of slaves the message was sent to. Returns -1 in case of error. ; Definition at line 2531 of file TProof.cxx. ◆ Broadcast() [3/6]. Int_t TProof::Broadcast ; (; const TMessage & ; mess, . ESlaves ; list = kActive . ). private . Broadcast a message to all slaves in the specified list (either all slaves or only the active slaves). ; Returns the number of slaves the message was successfully sent to. Returns -1 in case of error. ; Definition at line 2502 of file TProof.cxx. ◆ Broadcast() [4/6]. Int_t TProof::Broadcast ; (; const TMessage & ; mess, . TList * ; slaves . ). private . Broadcast a message to all slaves in the specified list. ; Returns the number of slaves the message was successfully sent to. Returns -1 in case of error. ; Definition at line 2475 of file TProof.cxx. ◆ Broadcast() [5/6]. Int_t TProof::Broadcast ; (; Int_t ; kind, . ESlaves ; list = kActive . ). inlineprivate . Definition at line 634 of file TProof.h. ◆ Broadcast() [6/6]. Int_t TProof::Broadcast ; (; Int_t ; kind, . TList * ; slaves . ). inlineprivate . Definition at line 633 of file TProof.h. ◆ BroadcastFile() [1/2]. Int_t TProof::BroadcastFile ; (; const char * ; file, . Int_t ; opt, . const char * ; rfile, . TList * ; wrks . ). private . Broadcast file to all workers in the specified list. ; Returns the number of workers the buffer was sent to. Returns -1 in case of error. ; Definition at line 2610 of file TProof.cxx. ◆ BroadcastFile() [2/2]. Int_t TProof::BroadcastFile ; (; const char * ; file, . Int_t ; opt, . const char * ; rfile = 0, . ESlaves ; list = kAllUnique . ). private . Broadcast file to all workers in the specified list. ; Returns the number of workers the buffer was sent to. Returns -1 in case of error. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:68072,error,error,68072,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['error'],['error']
Availability," (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save primitive as a C++ statement(s) on output stream out. ; Reimplemented from TObject.; Definition at line 2711 of file TLatex.cxx. ◆ SetIndiceSize(). void TLatex::SetIndiceSize ; (; Double_t ; factorSize). virtual . Set relative size of subscripts and superscripts. ; Definition at line 2736 of file TLatex.cxx. ◆ SetLimitIndiceSize(). void TLatex::SetLimitIndiceSize ; (; Int_t ; limitFactorSize). virtual . Set limit for text resizing of subscripts and superscripts. ; Definition at line 2744 of file TLatex.cxx. ◆ Streamer(). void TLatex::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TLatex::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 118 of file TLatex.h. Member Data Documentation. ◆ fError. const Char_t* TLatex::fError {nullptr}. protected . ! error code ; Definition at line 65 of file TLatex.h. ◆ fFactorPos. Double_t TLatex::fFactorPos. protected . ! Relative position of subscripts and superscripts ; Definition at line 63 of file TLatex.h. ◆ fFactorSize. Double_t TLatex::fFactorSize. protected . ! Relative size of subscripts and superscripts ; Definition at line 62 of file TLatex.h. ◆ fItalic. Bool_t TLatex::fItalic. protected . ! Currently inside italic operator ; Definition at line 69 of file TLatex.h. ◆ fLimitFactorSize. Int_t TLatex::fLimitFactorSize. protected . lower bound for subscripts/superscripts size ; Definition at line 64 of file TLatex.h. ◆ fOriginSize. Double_t TLatex::fOriginSize. protected . Font size of the starting font. ; Definition at line 68 of file TLatex.h. ◆ fShow. Bool_t TLatex::fShow. protected . ! is true during the second pass (Painting) ; Definition at line 66 of file TLatex.h. ◆ fTabSize. std::vector<TLatexFormSize> TLatex::fTabSize. protected . ! array of values for the different zones ; Definition at line 67 of fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLatex.html:40359,error,error,40359,doc/master/classTLatex.html,https://root.cern,https://root.cern/doc/master/classTLatex.html,1,['error'],['error']
Availability," (>=0), a CPU affinity will be associated with the current thread. Returns 0 on success, otherwise an error number will be returned. ; Definition at line 566 of file TThread.cxx. ◆ Self(). TThread * TThread::Self ; (; ). static . Static method returning pointer to current thread. ; Definition at line 495 of file TThread.cxx. ◆ SelfId(). Long_t TThread::SelfId ; (; ). static . Static method returning the id for the current thread. ; Definition at line 549 of file TThread.cxx. ◆ SetCancelAsynchronous(). Int_t TThread::SetCancelAsynchronous ; (; ). static . Static method to set the cancellation response type of the calling thread to asynchronous, i.e. ; cancel as soon as the cancellation request is received. ; Definition at line 657 of file TThread.cxx. ◆ SetCancelDeferred(). Int_t TThread::SetCancelDeferred ; (; ). static . Static method to set the cancellation response type of the calling thread to deferred, i.e. ; cancel only at next cancellation point. Returns 0 on success, otherwise an error number will be returned. ; Definition at line 667 of file TThread.cxx. ◆ SetCancelOff(). Int_t TThread::SetCancelOff ; (; ). static . Static method to turn off thread cancellation. ; Returns 0 on success, otherwise an error number will be returned. ; Definition at line 638 of file TThread.cxx. ◆ SetCancelOn(). Int_t TThread::SetCancelOn ; (; ). static . Static method to turn on thread cancellation. ; Returns 0 on success, otherwise an error number will be returned. ; Definition at line 647 of file TThread.cxx. ◆ SetComment(). void TThread::SetComment ; (; const char * ; txt = nullptr). inlineprivate . Definition at line 103 of file TThread.h. ◆ SetPriority(). void TThread::SetPriority ; (; EPriority ; pri). Set thread priority. ; Definition at line 455 of file TThread.cxx. ◆ Sleep(). Int_t TThread::Sleep ; (; ULong_t ; secs, . ULong_t ; nanos = 0 . ). static . Static method to sleep the calling thread. ; Definition at line 750 of file TThread.cxx. ◆ Streamer(). void TThread::S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTThread.html:28651,error,error,28651,doc/master/classTThread.html,https://root.cern,https://root.cern/doc/master/classTThread.html,1,['error'],['error']
Availability," (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus * fStatus;  ; TTree * fTree;  ; TTreeDrawArgsParser fTreeDrawArgsParser;  ; TTreeFormula * fVar [4];  ; Double_t fWeight;  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . Friends; class TProofPlayer;  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL <<",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDraw.html:12874,avail,available,12874,doc/master/classTProofDraw.html,https://root.cern,https://root.cern/doc/master/classTProofDraw.html,1,['avail'],['available']
Availability," (Option_t *axis=""X"") const;  Return the ""axis"" title size. ;  ; TAxis * GetXaxis ();  ; const TAxis * GetXaxis () const;  ; TAxis * GetYaxis ();  ; const TAxis * GetYaxis () const;  ; TAxis * GetZaxis ();  ; const TAxis * GetZaxis () const;  ; Bool_t IsBinOverflow (Int_t bin, Int_t axis=0) const;  Return true if the bin is overflow. ;  ; Bool_t IsBinUnderflow (Int_t bin, Int_t axis=0) const;  Return true if the bin is underflow. ;  ; virtual Bool_t IsHighlight () const;  ; Long64_t Merge (TCollection *list, Option_t *option);  Add all histograms in the collection to this histogram. ;  ; void Paint (Option_t *option="""") override;  Control routine to paint any kind of histograms. ;  ; void Print (Option_t *option="""") const override;  Print some global quantities for this histogram. ;  ; virtual TH1 * Rebin (Int_t ngroup=2, const char *newname="""", const Double_t *xbins=nullptr);  Rebin this histogram. ;  ; virtual void RebinAxis (Double_t x, TAxis *axis);  ; virtual void Rebuild (Option_t *option="""");  Using the current bin info, recompute the arrays for contents and errors. ;  ; void RecursiveRemove (TObject *obj) override;  Recursively remove object from the list of functions. ;  ; virtual void ResetStats ();  Reset the statistics including the number of entries and replace with values calculated from bin content. ;  ; void SaveAs (const char *filename=""hist"", Option_t *option="""") const override;  Save the histogram as .csv, .tsv or .txt. ;  ; virtual void SetAxisColor (Color_t color=1, Option_t *axis=""X"");  Set color to draw the axis line and tick marks. ;  ; virtual void SetAxisRange (Double_t xmin, Double_t xmax, Option_t *axis=""X"");  Set the ""axis"" range. ;  ; virtual void SetBarOffset (Float_t offset=0.25);  Set the bar offset as fraction of the bin width for drawing mode ""B"". ;  ; virtual void SetBarWidth (Float_t width=0.5);  Set the width of bars as fraction of the bin width for drawing mode ""B"". ;  ; virtual void SetBinError (Int_t bin, Double_t error);  Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile3D.html:27745,error,errors,27745,doc/master/classTProfile3D.html,https://root.cern,https://root.cern/doc/master/classTProfile3D.html,1,['error'],['errors']
Availability," (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXTRU.html:8335,error,error,8335,doc/master/classTXTRU.html,https://root.cern,https://root.cern/doc/master/classTXTRU.html,18,['error'],['error']
Availability," (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileDrawMap.html:6733,error,error,6733,doc/master/classTFileDrawMap.html,https://root.cern,https://root.cern/doc/master/classTFileDrawMap.html,3,['error'],['error']
Availability," (Option_t *option="""");  Append graphics object to current pad. ;  ; virtual void Browse (TBrowser *b);  Browse object. May be overridden for another default action. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAnnotation.html:15308,error,error,15308,doc/master/classTAnnotation.html,https://root.cern,https://root.cern/doc/master/classTAnnotation.html,8,['error'],['error']
Availability," (TString name, std::ofstream &f);  ; Int_t ReadFloat (std::ifstream &f, Float_t *v, Int_t n=1) const;  ; Int_t ReadInt (std::ifstream &f, Int_t *v, Int_t n=1) const;  ; Bool_t ReadIntParms ();  ; Bool_t ReadLx ();  ; Bool_t ReadProgram ();  ; Bool_t ReadRealParms ();  ; Bool_t ReadRealVarImp ();  ; Bool_t ReadRfOut ();  ; Bool_t ReadRfStatus ();  ; Bool_t ReadRuleFitMod ();  ; Bool_t ReadRuleFitSum ();  ; Bool_t ReadTrainW ();  ; Bool_t ReadTrainX ();  ; Bool_t ReadTrainY ();  ; Bool_t ReadVarImp ();  read variable importance ;  ; Bool_t ReadVarNames ();  ; Bool_t ReadYhat ();  read the score ;  ; Int_t RunRuleFit ();  execute rf_go.exe ;  ; void SetRFPredict ();  ; void SetRFTrain ();  ; void SetRFVarimp ();  ; void SetTestParms ();  set the test params ;  ; void SetTrainParms ();  set the training parameters ;  ; Bool_t WriteAll ();  write all files read by rf_go.exe ;  ; Bool_t WriteFloat (std::ofstream &f, const Float_t *v, Int_t n=1);  ; Bool_t WriteInt (std::ofstream &f, const Int_t *v, Int_t n=1);  ; Bool_t WriteIntParms ();  write int params file ;  ; Bool_t WriteLx ();  Save input variable mask. ;  ; Bool_t WriteProgram ();  write command to rf_go.exe ;  ; Bool_t WriteRealParms ();  write int params file ;  ; Bool_t WriteRealVarImp ();  write the minimum importance to be considered ;  ; Bool_t WriteRfOut ();  written by rf_go.exe; write rulefit output (rfout) ;  ; Bool_t WriteRfStatus ();  written by rf_go.exe; write rulefit status ;  ; Bool_t WriteRuleFitMod ();  written by rf_go.exe (NOTE:Format unknown!) ;  ; Bool_t WriteRuleFitSum ();  written by rf_go.exe (NOTE: format unknown!) ;  ; Bool_t WriteTest ();  Write test data. ;  ; Bool_t WriteTrain ();  write training data, column wise ;  ; Bool_t WriteVarImp ();  ; Bool_t WriteVarNames ();  write variable names, ascii ;  ; Bool_t WriteYhat ();  written by rf_go.exe ;  . Private Member Functions;  RuleFitAPI ();  . Private Attributes; MsgLogger fLogger;  ! message logger ;  ; const MethodRuleFit * fMethodR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleFitAPI.html:3103,mask,mask,3103,doc/master/classTMVA_1_1RuleFitAPI.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleFitAPI.html,1,['mask'],['mask']
Availability," (Use Clone if needed). Bool_t AddDirectoryStatus(); static function: cannot be inlined on Windows/NT. void Browse(TBrowser* b); Browe the Histogram object. void Build(); Creates histogram basic data structure. Bool_t Add(TF1* h1, Double_t c1 = 1, Option_t* option = """"); Performs the operation: this = this + c1*f1; if errors are defined (see TH1::Sumw2), errors are also recalculated. By default, the function is computed at the centre of the bin.; if option ""I"" is specified (1-d histogram only), the integral of the; function in each bin is used instead of the value of the function at; the centre of the bin.; Only bins inside the function range are recomputed.; IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Add. The function return kFALSE if the Add operation failed. Bool_t Add(const TH1* h1, Double_t c1 = 1); Performs the operation: this = this + c1*h1; if errors are defined (see TH1::Sumw2), errors are also recalculated.; Note that if h1 has Sumw2 set, Sumw2 is automatically called for this; if not already set.; Note also that adding histogram with labels is not supported, histogram will be; added merging them by bin number independently of the labels.; For adding histogram with labels one should use TH1::Merge. SPECIAL CASE (Average/Efficiency histograms); For histograms representing averages or efficiencies, one should compute the average; of the two histograms and not the sum. One can mark a histogram to be an average; histogram by setting its bit kIsAverage with; myhist.SetBit(TH1::kIsAverage);; Note that the two histograms must have their kIsAverage bit set. IMPORTANT NOTE1: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Add. IMPORTANT NOTE2: if h1 has a normalisation factor, the normalisati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1.html:42835,error,errors,42835,root/html602/TH1.html,https://root.cern,https://root.cern/root/html602/TH1.html,8,['error'],['errors']
Availability," (behavioural), Minos (lowers strategy by 1 for Minos-own minimization), Hesse (iterations), Numerical2PDerivative (iterations) More...;  ; class  MnTiny;  ; class  MnTraceObject;  ; class  MnUserCovariance;  Class containing the covariance matrix data represented as a vector of size n*(n+1)/2 Used to hide internal matrix representation to user. More...;  ; class  MnUserFcn;  Wrapper used by Minuit of FCN interface containing a reference to the transformation object. More...;  ; class  MnUserParameters;  API class for the user interaction with the parameters; serves as input to the minimizer as well as output from it; users can interact: Fix/release parameters, set values and errors, etc.; parameters can be accessed via their Parameter number (determined internally by Minuit and followed the order how the parameters are created) or via their user-specified Name (10 character string). More...;  ; class  MnUserParameterState;  class which holds the external user and/or internal Minuit representation of the parameters and errors; transformation internal <-> external on demand; More...;  ; class  MnUserTransformation;  class dealing with the transformation between user specified parameters (external) and internal parameters used for minimization More...;  ; class  MnVectorTransform;  ; class  ModularFunctionMinimizer;  Base common class providing the API for all the minimizer Various Minimize methods are provided varying on the type of FCN function passesd and on the objects used for the parameters. More...;  ; class  MPIProcess;  ; class  MPITerminate;  ; class  NegativeG2LineSearch;  In case that one of the components of the second derivative g2 calculated by the numerical Gradient calculator is negative, a 1dim line search in the direction of that component is done in order to find a better position where g2 is again positive. More...;  ; class  Numerical2PGradientCalculator;  class performing the numerical gradient calculation More...;  ; class  NumericalDerivator; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Minuit2.html:10111,error,errors,10111,doc/master/namespaceROOT_1_1Minuit2.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Minuit2.html,2,['error'],['errors']
Availability," (const TArray &a);  ;  TArray (Int_t n);  ; virtual ~TArray ();  ; Int_t GetSize () const;  ; TArray & operator= (const TArray &rhs);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TArray; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static TArray * ReadArray (TBuffer &b, const TClass *clReq);  Read TArray object from buffer. ;  ; static void WriteArray (TBuffer &b, const TArray *a);  Write TArray object to buffer. ;  . Public Attributes; Double_t * fArray;  ;  Public Attributes inherited from TArray; Int_t fN;  . Additional Inherited Members;  Protected Member Functions inherited from TArray; Bool_t BoundsOk (const char *where, Int_t at) const;  ; Bool_t OutOfBoundsError (const char *where, Int_t i) const;  Generate an out-of-bounds error. Always returns false. ;  . #include <TArrayD.h>. Inheritance diagram for TArrayD:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TArrayD() [1/4]. TArrayD::TArrayD ; (; ). Default TArrayD ctor. ; Definition at line 26 of file TArrayD.cxx. ◆ TArrayD() [2/4]. TArrayD::TArrayD ; (; Int_t ; n). Create TArrayD object and set array size to n doubles. ; Definition at line 34 of file TArrayD.cxx. ◆ TArrayD() [3/4]. TArrayD::TArrayD ; (; Int_t ; n, . const Double_t * ; array . ). Create TArrayD object and initialize it with values of array. ; Definition at line 43 of file TArrayD.cxx. ◆ TArrayD() [4/4]. TArrayD::TArrayD ; (; const TArrayD & ; array). Copy constructor. ; Definition at line 52 of file TArrayD.cxx. ◆ ~TArrayD(). TArrayD::~TArrayD ; (; ). virtual . Delete TArrayD object. ; Defin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArrayD.html:2967,error,error,2967,doc/master/classTArrayD.html,https://root.cern,https://root.cern/doc/master/classTArrayD.html,1,['error'],['error']
Availability," (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TPolyMarker3D * fPolyMarker3D;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus * fStatus;  ; TTree * fTree;  ; TTreeDrawArgsParser fTreeDrawArgsParser;  ; TTreeFormula * fVar [4];  ; Double_t fWeight;  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during processing ;  ; Long64_t fStatus;  Selector status. ;  . Additional Inherited Members;  Public Types inherited from TSelector; enum  EAbort { kContinue; , kAbortProcess; , kAbortFile; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1UL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawPolyMarker3D.html:13164,avail,available,13164,doc/master/classTProofDrawPolyMarker3D.html,https://root.cern,https://root.cern/doc/master/classTProofDrawPolyMarker3D.html,1,['avail'],['available']
Availability," (default=1). void StatOverflows(Bool_t flag = kTRUE); if flag=kTRUE, underflows and overflows are used by the Fill functions; in the computation of statistics (mean value, RMS).; By default, underflows or overflows are not used. void Streamer(TBuffer& ); -*-*-*-*-*-*-*Stream a class object*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*. void Print(Option_t* option = """") const; -*-*-*-*-*Print some global quantities for this histogram*-*-*-*-*-*-*-*. If option ""base"" is given, number of bins and ranges are also printed; If option ""range"" is given, bin contents and errors are also printed; for all bins in the current range (default 1-->nbins); If option ""all"" is given, bin contents and errors are also printed; for all bins including under and overflows. void Rebuild(Option_t* option = """"); Using the current bin info, recompute the arrays for contents and errors. void Reset(Option_t* option = """"); -*-*-*-*-*-*Reset this histogram: contents, errors, etc*-*-*-*-*-*-*-*. if option ""ICE"" is specified, resets only Integral, Contents and Errors.; if option ""ICES"" is specified, resets only Integral, Contents , Errors and Statistics; This option is used; if option ""M"" is specified, resets also Minimum and Maximum. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void SavePrimitiveHelp(ostream& out, const char* hname, Option_t* option = """"); helper function for the SavePrimitive functions from TH1; or classes derived from TH1, eg TProfile, TProfile2D. void UseCurrentStyle(); Copy current attributes from/to current style. Double_t GetMean(Int_t axis = 1) const; For axis = 1,2 or 3 returns the mean value of the histogram along; X,Y or Z axis.; For axis = 11, 12, 13 returns the standard error of the mean value; of the histogram along X, Y or Z axis. Note that the mean value/RMS is computed using the bins in the currently; defined range (see TAxis::SetRange). By default the range includes; all bins from 1 to nbins included, excludi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH1.html:106731,Error,Errors,106731,root/html534/TH1.html,https://root.cern,https://root.cern/root/html534/TH1.html,1,['Error'],['Errors']
Availability," (fArchitectureString == ""CPU"") {; 263#ifdef R__HAS_TMVACPU // TMVA has CPU BLAS and IMT support; 264 Log() << kINFO << ""Will now use the CPU architecture with BLAS and IMT support !"" << Endl;; 265#else // TMVA has no CPU BLAS or IMT support; 266 Log() << kINFO << ""Multi-core CPU backend not enabled. For better performances, make sure ""; 267 ""you have a BLAS implementation and it was successfully ""; 268 ""detected by CMake as well that the imt CMake flag is set.""; 269 << Endl;; 270 Log() << kINFO << ""Will use anyway the CPU architecture but with slower performance"" << Endl;; 271#endif; 272 }; 273 ; 274 // Input Layout; 275 ParseInputLayout();; 276 ParseBatchLayout();; 277 ; 278 // Loss function and output.; 279 fOutputFunction = EOutputFunction::kSigmoid;; 280 if (fAnalysisType == Types::kClassification) {; 281 if (fErrorStrategy == ""SUMOFSQUARES"") {; 282 fLossFunction = ELossFunction::kMeanSquaredError;; 283 }; 284 if (fErrorStrategy == ""CROSSENTROPY"") {; 285 fLossFunction = ELossFunction::kCrossEntropy;; 286 }; 287 fOutputFunction = EOutputFunction::kSigmoid;; 288 } else if (fAnalysisType == Types::kRegression) {; 289 if (fErrorStrategy != ""SUMOFSQUARES"") {; 290 Log() << kWARNING << ""For regression only SUMOFSQUARES is a valid ""; 291 << "" neural net error function. Setting error function to ""; 292 << "" SUMOFSQUARES now."" << Endl;; 293 }; 294 ; 295 fLossFunction = ELossFunction::kMeanSquaredError;; 296 fOutputFunction = EOutputFunction::kIdentity;; 297 } else if (fAnalysisType == Types::kMulticlass) {; 298 if (fErrorStrategy == ""SUMOFSQUARES"") {; 299 fLossFunction = ELossFunction::kMeanSquaredError;; 300 }; 301 if (fErrorStrategy == ""CROSSENTROPY"") {; 302 fLossFunction = ELossFunction::kCrossEntropy;; 303 }; 304 if (fErrorStrategy == ""MUTUALEXCLUSIVE"") {; 305 fLossFunction = ELossFunction::kSoftmaxCrossEntropy;; 306 }; 307 fOutputFunction = EOutputFunction::kSoftmax;; 308 }; 309 ; 310 // Initialization; 311 // the biases will be always initialized to zero; 312 if (f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDL_8cxx_source.html:10892,error,error,10892,doc/master/MethodDL_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDL_8cxx_source.html,1,['error'],['error']
Availability," (fMaxEntries / 10);; 6420 for (Int_t i = 0; i < nb; ++i) {; 6421 TBranch* branch = (TBranch*) fBranches.UncheckedAt(i);; 6422 branch->KeepCircular(maxEntries);; 6423 }; 6424 if (fNClusterRange) {; 6425 Long64_t entriesOffset = fEntries - maxEntries;; 6426 Int_t oldsize = fNClusterRange;; 6427 for(Int_t i = 0, j = 0; j < oldsize; ++j) {; 6428 if (fClusterRangeEnd[j] > entriesOffset) {; 6429 fClusterRangeEnd[i] = fClusterRangeEnd[j] - entriesOffset;; 6430 ++i;; 6431 } else {; 6432 --fNClusterRange;; 6433 }; 6434 }; 6435 }; 6436 fEntries = maxEntries;; 6437 fReadEntry = -1;; 6438}; 6439 ; 6440////////////////////////////////////////////////////////////////////////////////; 6441/// Read in memory all baskets from all branches up to the limit of maxmemory bytes.; 6442///; 6443/// If maxmemory is non null and positive SetMaxVirtualSize is called; 6444/// with this value. Default for maxmemory is 2000000000 (2 Gigabytes).; 6445/// The function returns the total number of baskets read into memory; 6446/// if negative an error occurred while loading the branches.; 6447/// This method may be called to force branch baskets in memory; 6448/// when random access to branch entries is required.; 6449/// If random access to only a few branches is required, you should; 6450/// call directly TBranch::LoadBaskets.; 6451 ; 6452Int_t TTree::LoadBaskets(Long64_t maxmemory); 6453{; 6454 if (maxmemory > 0) SetMaxVirtualSize(maxmemory);; 6455 ; 6456 TIter next(GetListOfLeaves());; 6457 TLeaf *leaf;; 6458 Int_t nimported = 0;; 6459 while ((leaf=(TLeaf*)next())) {; 6460 nimported += leaf->GetBranch()->LoadBaskets();//break;; 6461 }; 6462 return nimported;; 6463}; 6464 ; 6465////////////////////////////////////////////////////////////////////////////////; 6466/// Set current entry.; 6467///; 6468/// Returns -2 if entry does not exist (just as TChain::LoadTree()).; 6469/// Returns -6 if an error occurs in the notification callback (just as TChain::LoadTree()).; 6470///; 6471/// Calls fNotify->",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:251996,error,error,251996,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['error'],['error']
Availability," (for; tcpwindowsize > 65KB and for platforms supporting window scaling).; Returns socket fd or -1 if socket() failed, -2 if bind() failed; or -3 if listen() failed. int UnixUnixService(int port, int backlog); Open a socket, bind to it and start listening for Unix domain connections; to it. Returns socket fd or -1. int UnixUnixService(const char* sockpath, int backlog); Open a socket on path 'sockpath', bind to it and start listening for Unix; domain connections to it. Returns socket fd or -1. int UnixRecv(int sock, void* buf, int len, int flag); Receive exactly length bytes into buffer. Returns number of bytes; received. Returns -1 in case of error, -2 in case of MSG_OOB; and errno == EWOULDBLOCK, -3 in case of MSG_OOB and errno == EINVAL; and -4 in case of kNoBlock and errno == EWOULDBLOCK.; Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET). int UnixSend(int sock, const void* buf, int len, int flag); Send exactly length bytes from buffer. Returns -1 in case of error,; otherwise number of sent bytes. Returns -4 in case of kNoBlock and; errno == EWOULDBLOCK. Returns -5 if pipe broken or reset by peer; (EPIPE || ECONNRESET). void AddDynamicPath(const char* lib); Add a new directory to the dynamic path. const char * GetDynamicPath(); Return the dynamic path (used to find shared libraries). void SetDynamicPath(const char* lib); Set the dynamic path to a new value.; If the value of 'path' is zero, the dynamic path is reset to its; default value. char * DynamicPathName(const char* lib, Bool_t quiet = kFALSE); Returns the path of a shared library (searches for library in the; shared library search path). If no file name extension is provided; it first tries .so, .sl, .dl and then .a (for AIX). The returned string; must be deleted. void * FindDynLib(const char* lib); Returns the handle to a loaded shared library. Returns 0 when library; not loaded. int UnixDynLoad(const char* lib); Load a shared library. Returns 0 on successful loading, 1 in; case lib was al",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TUnixSystem.html:40634,error,error,40634,root/html528/TUnixSystem.html,https://root.cern,https://root.cern/root/html528/TUnixSystem.html,2,['error'],['error']
Availability," (format set via gStyle->SetPaintTextFormat). . ""TEXTnn"" Draw bin contents as text at angle nn (0 < nn <= 90). . ""X+"" The X-axis is drawn on the top side of the plot. . ""Y+"" The Y-axis is drawn on the right side of the plot. . ""MIN0"" Set minimum value for the Y axis to 0, equivalent to gStyle->SetHistMinimumZero(). . Options supported for 1D histograms. Option Description . "" "" Default. . ""AH"" Draw histogram without axis. ""A"" can be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis. . ""]["" When this option is selected the first and last vertical lines of the histogram are not drawn. . ""B"" Bar chart option. . ""BAR"" Like option ""B"", but bars can be drawn with a 3D effect. . ""HBAR"" Like option ""BAR"", but bars are drawn horizontally. . ""C"" Draw a smooth Curve through the histogram bins. . ""E0"" Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping . ""E1"" Draw error bars with perpendicular lines at the edges. . ""E2"" Draw error bars with rectangles. . ""E3"" Draw a fill area through the end points of the vertical error bars. . ""E4"" Draw a smoothed filled area through the end points of the error bars. . ""E5"" Like E3 but ignore the bins with 0 contents. . ""E6"" Like E4 but ignore the bins with 0 contents. . ""X0"" When used with one of the ""E"" option, it suppress the error bar along X as gStyle->SetErrorX(0) would do. . ""L"" Draw a line through the bin contents. . ""P"" Draw current marker at each bin except empty bins. . ""P*"" Draw a star marker at each bin except empty bins. . ""P0"" Draw current marker at each bin including empty bins. . ""PIE"" Draw histogram as a Pie Chart. . ""*H"" Draw histogram with a * at each bin. . ""LF2"" Draw histogram like with option ""L"" but with a fill area. Note that ""L"" draws also a fill area if the hist fill color is set but the fill area corresponds to the histogram contour. . Options supported for 2D histograms. Option Description . "" "" Defau",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHistPainter.html:7533,error,error,7533,doc/master/classTHistPainter.html,https://root.cern,https://root.cern/doc/master/classTHistPainter.html,1,['error'],['error']
Availability," (from GSL) Possible rule values are kGAUS15 (rule = 1), kGAUS21( rule = 2), kGAUS31(rule =3), kGAUS41 (rule=4), kGAUS51 (rule =5), kGAUS61(rule =6) lower rules are indicated for singular functions while higher for smooth functions to get better accuracies; NOTE: When the default values are passed, the values used are taken from the default defined in ROOT::Math::IntegratorOneDimOptions ; Definition at line 123 of file Integrator.h. ◆ IntegratorOneDim() [2/4]. ROOT::Math::IntegratorOneDim::IntegratorOneDim ; (; const IGenFunction & ; f, . IntegrationOneDim::Type ; type = IntegrationOneDim::kDEFAULT, . double ; absTol = -1, . double ; relTol = -1, . unsigned int ; size = 0, . int ; rule = 0 . ). inlineexplicit . Constructor of one dimensional Integrator passing a function interface. ; Parameters. fintegration function (1D interface). It is copied inside ; typeintegration type (adaptive, non-adaptive, etc..) ; absToldesired absolute tolerance. The algorithm will stop when either the absolute OR the relative tolerance are satisfied. ; relToldesired relative tolerance ; sizemaximum number of sub-intervals ; ruleGauss-Kronrod integration rule (only for GSL ADAPTIVE type). NOTE: When no values are passed, the values used are taken from the default defined in ROOT::Math::IntegratorOneDimOptions ; Definition at line 142 of file Integrator.h. ◆ IntegratorOneDim() [3/4]. template<class Function > . ROOT::Math::IntegratorOneDim::IntegratorOneDim ; (; Function & ; f, . IntegrationOneDim::Type ; type = IntegrationOneDim::kDEFAULT, . double ; absTol = -1, . double ; relTol = -1, . unsigned int ; size = 0, . int ; rule = 0 . ). inlineexplicit . Template Constructor of one dimensional Integrator passing a generic function object. ; Parameters. fintegration function (any C++ callable object implementing operator()(double x) ; typeintegration type (adaptive, non-adaptive, etc..) ; absToldesired absolute tolerance. The algorithm will stop when either the absolute OR the relative toler",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html:9309,toler,tolerance,9309,doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorOneDim.html,1,['toler'],['tolerance']
Availability," (in general called by the TFile destructor) ;  ; Int_t AddBranch (const char *branch, bool subbranches=false) override;  Add a branch to the list of branches to be stored in the cache this function is called by TBranch::GetBasket Returns: ;  ; Int_t AddBranch (TBranch *b, bool subbranches=false) override;  Add a branch to the list of branches to be stored in the cache this function is called by TBranch::GetBasket Returns: ;  ; Int_t CreateTasks ();  We create a TTaskGroup and asynchronously maps each group of baskets(> 100 kB in total) to a task. ;  ; bool FillBuffer () override;  Fill the cache buffer with the branches in the cache. ;  ; Int_t GetNFound ();  ; Int_t GetNMissed ();  ; Int_t GetNUnzip ();  ; Int_t GetRecordHeader (char *buf, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header from the buffer buf. ;  ; Int_t GetUnzipBuffer (char **buf, Long64_t pos, Int_t len, bool *free) override;  We try to read a buffer that has already been unzipped Returns -1 in case of read failure, 0 in case it's not in the cache and n>0 in case read from cache (number of bytes copied). ;  ; Int_t GetUnzipGroupSize ();  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  Print cache statistics. ;  ; Int_t ReadBufferExt (char *buf, Long64_t pos, Int_t len, Int_t &loc) override;  ; void ResetCache () override;  This will delete the list of buffers that are in the unzipping cache and will reset certain values in the cache. ;  ; Int_t SetBufferSize (Int_t buffersize) override;  Change the underlying buffer size of the cache. ;  ; void SetEntryRange (Long64_t emin, Long64_t emax) override;  Set the minimum and maximum entry number to be processed this information helps to optimize the number of baskets to read when prefetching the branch buffers. ;  ; void SetUnzipBufferSize (Long64_t bufferSize);  Sets the size for the unzipping cache... by default it should be two times the size of the prefetching cache.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTreeCacheUnzip.html:2653,failure,failure,2653,doc/v632/classTTreeCacheUnzip.html,https://root.cern,https://root.cern/doc/v632/classTTreeCacheUnzip.html,1,['failure'],['failure']
Availability," (in general called by the TFile destructor) ;  ; Int_t AddBranch (const char *branch, bool subbranches=false) override;  Add a branch to the list of branches to be stored in the cache this function is called by TBranch::GetBasket Returns: ;  ; Int_t AddBranch (TBranch *b, bool subbranches=false) override;  Add a branch to the list of branches to be stored in the cache this function is called by TBranch::GetBasket Returns: ;  ; Int_t CreateTasks ();  We create a TTaskGroup and asynchronously maps each group of baskets(> 100 kB in total) to a task. ;  ; bool FillBuffer () override;  Fill the cache buffer with the branches in the cache. ;  ; Int_t GetNFound ();  ; Int_t GetNMissed ();  ; Int_t GetNUnzip ();  ; Int_t GetRecordHeader (char *buf, Int_t maxbytes, Int_t &nbytes, Int_t &objlen, Int_t &keylen);  Read the logical record header from the buffer buf. ;  ; Int_t GetUnzipBuffer (char **buf, Long64_t pos, Int_t len, bool *free) override;  We try to read a buffer that has already been unzipped Returns -1 in case of read failure, 0 in case it's not in the cache and n>0 in case read from cache (number of bytes copied). ;  ; Int_t GetUnzipGroupSize ();  ; TClass * IsA () const override;  ; void Print (Option_t *option="""") const override;  Print cache statistics. ;  ; Int_t ReadBufferExt (char *buf, Long64_t pos, Int_t len, Int_t &loc) override;  ; void ResetCache () override;  This will delete the list of buffers that are in the unzipping cache and will reset certain values in the cache. ;  ; Int_t SetBufferSize (Long64_t buffersize) override;  Change the underlying buffer size of the cache. ;  ; void SetEntryRange (Long64_t emin, Long64_t emax) override;  Set the minimum and maximum entry number to be processed this information helps to optimize the number of baskets to read when prefetching the branch buffers. ;  ; void SetUnzipBufferSize (Long64_t bufferSize);  Sets the size for the unzipping cache... by default it should be two times the size of the prefetching cac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeCacheUnzip.html:2654,failure,failure,2654,doc/master/classTTreeCacheUnzip.html,https://root.cern,https://root.cern/doc/master/classTTreeCacheUnzip.html,1,['failure'],['failure']
Availability," (may not be used in this class). void Progress(Long64_t total, Long64_t processed); Report progress (may not be used in this class). void Progress(Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti); Report progress (may not be used in this class). void Progress(TProofProgressInfo* pi); Report progress (may not be used in this class). void Feedback(TList* objs); Set feedback list (may not be used in this class). TDrawFeedback * CreateDrawFeedback(TProof* p); Draw feedback creation proxy. When accessed via TProof avoids; link dependency on libProofPlayer. void SetDrawFeedbackOption(TDrawFeedback* f, Option_t* opt); Set draw feedback option. void DeleteDrawFeedback(TDrawFeedback* f); Delete draw feedback object. Long64_t Process(TDSet* set, const char* selector, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Process specified TDSet on PROOF worker.; The return value is -1 in case of error and TSelector::GetStatus(); in case of success. Bool_t CheckMemUsage(Long64_t& mfreq, Bool_t& w80r, Bool_t& w80v, TString& wmsg); Check the memory usage, if requested.; Return kTRUE if OK, kFALSE if above 95% of at least one between virtual or; resident limits are depassed. Long64_t Finalize(Bool_t force = kFALSE, Bool_t sync = kFALSE); Finalize query (may not be used in this class). Long64_t Finalize(TQueryResult* qr); Finalize query (may not be used in this class). void MergeOutput(); Merge output (may not be used in this class). void MapOutputListToDataMembers() const. void UpdateAutoBin(const char* name, Double_t& xmin, Double_t& xmax, Double_t& ymin, Double_t& ymax, Double_t& zmin, Double_t& zmax); Update automatic binning parameters for given object ""name"". TDSetElement * GetNextPacket(TSlave* slave, TMessage* r); Get next packet (may not be used in this class). void SetupFeedback(); Set up feedback (may not be used in this class). void StopFeedback(); Stop feedback (may not be used",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofPlayer.html:16699,error,error,16699,root/html528/TProofPlayer.html,https://root.cern,https://root.cern/root/html528/TProofPlayer.html,4,['error'],['error']
Availability," (no weights). ;  ; Int_t Fill (Double_t x, const char *namey, Double_t z) override;  Increment cell defined by x,namey by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, Double_t z, Double_t w);  Fill a Profile2D histogram (no weights). ;  ; Int_t Fill (Double_t x, Double_t y, Double_t z) override;  Fill a Profile2D histogram (no weights). ;  ; virtual Int_t Fill (Double_t x, Double_t y, Double_t z, Double_t w);  Fill a Profile2D histogram with weights. ;  ; Double_t GetBinContent (Int_t bin) const override;  Return bin content of a Profile2D histogram. ;  ; Double_t GetBinContent (Int_t binx, Int_t biny) const override;  ; Double_t GetBinContent (Int_t binx, Int_t biny, Int_t) const override;  ; virtual Double_t GetBinEffectiveEntries (Int_t bin);  Return bin effective entries for a weighted filled Profile histogram. ;  ; virtual Double_t GetBinEntries (Int_t bin) const;  Return bin entries of a Profile2D histogram. ;  ; Double_t GetBinError (Int_t bin) const override;  Return bin error of a Profile2D histogram. ;  ; Double_t GetBinError (Int_t binx, Int_t biny) const override;  ; Double_t GetBinError (Int_t binx, Int_t biny, Int_t) const override;  ; virtual TArrayD * GetBinSumw2 ();  ; virtual const TArrayD * GetBinSumw2 () const;  ; Option_t * GetErrorOption () const;  Return option to compute profile2D errors. ;  ; Double_t GetNumberOfBins ();  ; void GetStats (Double_t *stats) const override;  Fill the array stats from the contents of this profile. ;  ; virtual Double_t GetZmax () const;  ; virtual Double_t GetZmin () const;  ; TClass * IsA () const override;  ; void LabelsDeflate (Option_t *axis=""X"") override;  Reduce the number of bins for this axis to the number of bins having a label. ;  ; void LabelsInflate (Option_t *axis=""X"") override;  Double the number of bins for axis. ;  ; void LabelsOption (Option_t *option=""h"", Option_t *axis=""X"") override;  Set option(s) to draw axis with labels. ;  ; Long64_t Merge (TCollection *list) overri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:7386,error,error,7386,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['error'],['error']
Availability," (not copied in ctor); Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooObjCacheManager_cacheMgr! The cache manager; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooArgSet*_curNormSet!; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooProjectedPdf.html:40644,error,errors,40644,root/html534/RooProjectedPdf.html,https://root.cern,https://root.cern/root/html534/RooProjectedPdf.html,2,['error'],['errors']
Availability," (option3) {; 3553 xline.resize(2*theNpoints);; 3554 yline.resize(2*theNpoints);; 3555 if (xline.empty() || yline.empty()) {; 3556 Error(""PaintGraphErrors"", ""too many points, out of memory"");; 3557 return;; 3558 }; 3559 if1 = 1;; 3560 if2 = 2*theNpoints;; 3561 }; 3562 ; 3563 theGraph->TAttLine::Modify();; 3564 ; 3565 TArrow arrow;; 3566 arrow.SetLineWidth(theGraph->GetLineWidth());; 3567 arrow.SetLineStyle(theGraph->GetLineStyle());; 3568 arrow.SetLineColor(theGraph->GetLineColor());; 3569 arrow.SetFillColor(theGraph->GetFillColor());; 3570 ; 3571 TBox box;; 3572 Double_t x1b,y1b,x2b,y2b;; 3573 box.SetLineWidth(theGraph->GetLineWidth());; 3574 box.SetLineColor(theGraph->GetLineColor());; 3575 box.SetFillColor(theGraph->GetFillColor());; 3576 box.SetFillStyle(theGraph->GetFillStyle());; 3577 ; 3578 Double_t symbolsize = theGraph->GetMarkerSize();; 3579 Double_t sbase = symbolsize*kBASEMARKER;; 3580 Int_t mark = TAttMarker::GetMarkerStyleBase(theGraph->GetMarkerStyle());; 3581 Double_t cx = 0;; 3582 Double_t cy = 0;; 3583 if (mark >= 20 && mark <= 49) {; 3584 cx = cxx[mark-20];; 3585 cy = cyy[mark-20];; 3586 }; 3587 ; 3588 // define the offset of the error bars due to the symbol size; 3589 Double_t s2x = gPad->PixeltoX(Int_t(0.5*sbase)) - gPad->PixeltoX(0);; 3590 Double_t s2y = -gPad->PixeltoY(Int_t(0.5*sbase)) + gPad->PixeltoY(0);; 3591 Int_t dxend = Int_t(gStyle->GetEndErrorSize());; 3592 Double_t tx = gPad->PixeltoX(dxend) - gPad->PixeltoX(0);; 3593 Double_t ty = -gPad->PixeltoY(dxend) + gPad->PixeltoY(0);; 3594 Float_t asize = 0.6*symbolsize*kBASEMARKER/gPad->GetWh();; 3595 ; 3596 gPad->SetBit(TGraph::kClipFrame, theGraph->TestBit(TGraph::kClipFrame));; 3597 ; 3598 // special flags to turn off error bar drawing in case the marker cover it; 3599 Bool_t DrawXLeft, DrawXRight, DrawYUp, DrawYLow;; 3600 // loop over all the graph points; 3601 Double_t x, y, ex, ey, xl1, xl2, xr1, xr2, yup, yup1, yup2, ylow, ylow1, ylow2;; 3602 for (Int_t i=0;i<theNpoints;i++) {; 3603 Dr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPainter_8cxx_source.html:127114,error,error,127114,doc/master/TGraphPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPainter_8cxx_source.html,1,['error'],['error']
Availability," (other._specGeneratorConfig) {; 268 _specGeneratorConfig = std::make_unique<RooNumGenConfig>(*other._specGeneratorConfig);; 269 }; 270}; 271 ; 272 ; 273 ; 274////////////////////////////////////////////////////////////////////////////////; 275/// Destructor; 276 ; 277RooAbsPdf::~RooAbsPdf(); 278{; 279}; 280 ; 281 ; 282double RooAbsPdf::normalizeWithNaNPacking(double rawVal, double normVal) const {; 283 ; 284 if (normVal < 0. || (normVal == 0. && rawVal != 0)) {; 285 //Unreasonable normalisations. A zero integral can be tolerated if the function vanishes, though.; 286 const std::string msg = ""p.d.f normalization integral is zero or negative: "" + std::to_string(normVal);; 287 logEvalError(msg.c_str());; 288 clearValueAndShapeDirty();; 289 return RooNaNPacker::packFloatIntoNaN(-normVal + (rawVal < 0. ? -rawVal : 0.));; 290 }; 291 ; 292 if (rawVal < 0.) {; 293 logEvalError(Form(""p.d.f value is less than zero (%f), trying to recover"", rawVal));; 294 clearValueAndShapeDirty();; 295 return RooNaNPacker::packFloatIntoNaN(-rawVal);; 296 }; 297 ; 298 if (TMath::IsNaN(rawVal)) {; 299 logEvalError(""p.d.f value is Not-a-Number"");; 300 clearValueAndShapeDirty();; 301 return rawVal;; 302 }; 303 ; 304 return (rawVal == 0. && normVal == 0.) ? 0. : rawVal / normVal;; 305}; 306 ; 307 ; 308////////////////////////////////////////////////////////////////////////////////; 309/// Return current value, normalized by integrating over; 310/// the observables in `nset`. If `nset` is 0, the unnormalized value; 311/// is returned. All elements of `nset` must be lvalues.; 312///; 313/// Unnormalized values are not cached.; 314/// Doing so would be complicated as `_norm->getVal()` could; 315/// spoil the cache and interfere with returning the cached; 316/// return value. Since unnormalized calls are typically; 317/// done in integration calls, there is no performance hit.; 318 ; 319double RooAbsPdf::getValV(const RooArgSet* nset) const; 320{; 321 ; 322 // Special handling of case without normali",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html:11171,recover,recover,11171,doc/master/RooAbsPdf_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsPdf_8cxx_source.html,1,['recover'],['recover']
Availability," (ret == 0) { //can't compile a macro; 814 return 2;; 815 }; 816 //end(3); 817 return 0;; 818}; 819 ; 820int TCling_GenerateDictionary(const std::string& className,; 821 const std::vector<std::string> &headers,; 822 const std::vector<std::string> &fwdDecls,; 823 const std::vector<std::string> &unknown); 824{; 825 //This function automatically creates the ""LinkDef.h"" file for templated; 826 //classes then executes CompileMacro on it.; 827 //The name of the file depends on the class name, and it's not generated again; 828 //if the file exist.; 829 std::vector<std::string> classes;; 830 classes.push_back(className);; 831 return TCling_GenerateDictionary(classes, headers, fwdDecls, unknown);; 832}; 833 ; 834//______________________________________________________________________________; 835//; 836//; 837//; 838 ; 839// It is a ""fantom"" method to synchronize user keyboard input; 840// and ROOT prompt line (for WIN32); 841const char* fantomline = ""TRint::EndOfLineAction();"";; 842 ; 843//______________________________________________________________________________; 844//; 845//; 846//; 847 ; 848void* TCling::fgSetOfSpecials = nullptr;; 849 ; 850//______________________________________________________________________________; 851//; 852// llvm error handler through exceptions; see also cling/UserInterface; 853//; 854namespace {; 855 // Handle fatal llvm errors by throwing an exception.; 856 // Yes, throwing exceptions in error handlers is bad.; 857 // Doing nothing is pretty terrible, too.; 858 void exceptionErrorHandler(void * /*user_data*/,; 859 const char *reason,; 860 bool /*gen_crash_diag*/) {; 861 throw std::runtime_error(std::string("">>> Interpreter compilation error:\n"") + reason);; 862 }; 863}; 864 ; 865//______________________________________________________________________________; 866//; 867//; 868//; 869 ; 870////////////////////////////////////////////////////////////////////////////////; 871 ; 872namespace{; 873 // An instance of this class causes the diagno",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:30296,error,error,30296,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,2,['error'],"['error', 'errors']"
Availability," (see https://cern-tex.web.cern.ch/cern-tex/minuit/node18.html ); 322 ; 323void TVirtualFitter::SetPrecision(Double_t prec); 324{; 325 //fgPrecision = prec;; 326 ROOT::Math::MinimizerOptions::SetDefaultTolerance(prec);; 327}; MinimizerOptions.h; f#define f(i)Definition RSha256.hxx:104; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; ClassImp#define ClassImp(name)Definition Rtypes.h:382; TEnv.h; gEnvR__EXTERN TEnv * gEnvDefinition TEnv.h:170; namechar name[80]Definition TGX11.cxx:110; TPluginManager.h; TROOT.h; gROOT#define gROOTDefinition TROOT.h:406; TVirtualFitter.h; ThreadLocalStorage.h; ROOT::Math::MinimizerOptions::SetDefaultMaxFunctionCallsstatic void SetDefaultMaxFunctionCalls(int maxcall)Set the maximum number of function calls.Definition MinimizerOptions.cxx:63; ROOT::Math::MinimizerOptions::DefaultTolerancestatic double DefaultTolerance()Definition MinimizerOptions.cxx:92; ROOT::Math::MinimizerOptions::SetDefaultErrorDefstatic void SetDefaultErrorDef(double up)Set the default level for computing the parameter errors.Definition MinimizerOptions.cxx:51; ROOT::Math::MinimizerOptions::SetDefaultMinimizerstatic void SetDefaultMinimizer(const char *type, const char *algo=nullptr)Set the default Minimizer type and corresponding algorithms.Definition MinimizerOptions.cxx:43; ROOT::Math::MinimizerOptions::DefaultMinimizerTypestatic const std::string & DefaultMinimizerType()Definition MinimizerOptions.cxx:100; ROOT::Math::MinimizerOptions::DefaultMaxFunctionCallsstatic int DefaultMaxFunctionCalls()Definition MinimizerOptions.cxx:94; ROOT::Math::MinimizerOptions::SetDefaultTolerancestatic void SetDefaultTolerance(double tol)Set the Minimization tolerance.Definition MinimizerOptions.cxx:55; ROOT::Math::MinimizerOptions::DefaultErrorDefstatic double DefaultErrorDef()Definition MinimizerOptions.cxx:91; TEnv::GetValuevirtual Int_t GetValue(const char *name, Int_t dflt) constReturns the integer value for a resource.Definition TEnv.cxx:49",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TVirtualFitter_8cxx_source.html:11549,error,errors,11549,doc/master/TVirtualFitter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TVirtualFitter_8cxx_source.html,1,['error'],['errors']
Availability," (tau in eq 26, ref 1) ;  ; Double_t fGDTauMin;  min threshold parameter (tau in eq 26, ref 1) ;  ; Double_t fGDTauPrec;  precision in tau ;  ; UInt_t fGDTauScan;  number scan for tau-paths ;  ; std::vector< Double_t > fGDTauVec;  the tau's ;  ; std::vector< Double_t > fGradVec;  gradient vector - dimension = number of rules in ensemble ;  ; std::vector< Double_t > fGradVecLin;  gradient vector - dimension = number of variables ;  ; std::vector< std::vector< Double_t > > fGradVecLinTst;  gradient vector, linear terms - one per tau ;  ; std::vector< std::vector< Double_t > > fGradVecTst;  gradient vector - one per tau ;  ; Double_t fNEveEffPath;  sum of weights for Path events ;  ; Double_t fNEveEffPerf;  idem for Perf events ;  ; UInt_t fNLinear;  number of linear terms ;  ; UInt_t fNRules;  number of rules ;  ; Double_t * fNTCoeff;  GD path: rule coefficients. ;  ; Double_t fNTCoefRad;  GD path: 'radius' of all rulecoeffs. ;  ; Double_t fNTErrorRate;  GD path: error rate (or performance) ;  ; Double_t * fNTLinCoeff;  GD path: linear coefficients. ;  ; Double_t fNTNuval;  GD path: value of nu. ;  ; Double_t fNTOffset;  GD path: model offset. ;  ; Double_t fNTRisk;  GD path: risk. ;  ; UInt_t fPathIdx1;  first event index for path search ;  ; UInt_t fPathIdx2;  last event index for path search ;  ; UInt_t fPerfIdx1;  first event index for performance evaluation ;  ; UInt_t fPerfIdx2;  last event index for performance evaluation ;  ; RuleEnsemble * fRuleEnsemble;  rule ensemble ;  ; RuleFit * fRuleFit;  rule fit ;  ; Double_t fsigave;  Sigma of current signal score function F(sig) ;  ; Double_t fsigrms;  Rms of F(sig) ;  . Private Member Functions; MsgLogger & Log () const;  . Private Attributes; MsgLogger * fLogger;  ! message logger ;  . #include <TMVA/RuleFitParams.h>; Member Typedef Documentation. ◆ EventItr. typedef std::vector<constTMVA::Event*>::const_iterator TMVA::RuleFitParams::EventItr. protected . Definition at line 130 of file RuleFitParams.h. Constructor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleFitParams.html:7269,error,error,7269,doc/master/classTMVA_1_1RuleFitParams.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleFitParams.html,1,['error'],['error']
Availability," (the file passed as first argument),; one can instruct Merge to not close and delete the file by specifying; the option ""keep"". The function returns the total number of files produced.; To check that all files have been merged use something like:; if (newchain->GetEntries()!=oldchain->GetEntries()) {; ... not all the file have been copied ...; }. void Print(Option_t* option = """") const; -- Print the header information of each tree in the chain.; See TTree::Print for a list of options. Long64_t Process(const char* filename, Option_t* option = """", Long64_t nentries = kBigNumber, Long64_t firstentry = 0); Process all entries in this chain, calling functions in filename.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success.; See TTree::Process. Long64_t Process(void* selector, Option_t* option = """", Long64_t nentries = kBigNumber, Long64_t firstentry = 0); Process this chain executing the code in selector.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. void RecursiveRemove(TObject* obj); Make sure that obj (which is being deleted or will soon be) is no; longer referenced by this TTree. void Reset(Option_t* option = """"); -- Resets the state of this chain. Long64_t Scan(const char* varexp = """", const char* selection = """", Option_t* option = """", Long64_t nentries = 1000000000, Long64_t firstentry = 0); -- Loop on tree and print entries passing selection.; If varexp is 0 (or """") then print only first 8 columns.; If varexp = ""*"" print all columns.; Otherwise a columns selection can be made using ""var1:var2:var3"".; See TTreePlayer::Scan for more information. void SetAutoDelete(Bool_t autodel = kTRUE); -- Set the global branch kAutoDelete bit. When LoadTree loads a new Tree, the branches for which; the address is set will have the option AutoDelete set; For more details on AutoDelete, see TBranch::SetAutoDelete. void ResetBranchAddress(TBranch* ); -- Reset the addresses of the branch. void Rese",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TChain.html:44745,error,error,44745,root/html530/TChain.html,https://root.cern,https://root.cern/root/html530/TChain.html,1,['error'],['error']
Availability," (the file passed as first argument),; one can instruct Merge to not close and delete the file by specifying; the option ""keep"". The function returns the total number of files produced.; To check that all files have been merged use something like:; if (newchain->GetEntries()!=oldchain->GetEntries()) {; ... not all the file have been copied ...; }. void Print(Option_t* option = """") const; -- Print the header information of each tree in the chain.; See TTree::Print for a list of options. Long64_t Process(const char* filename, Option_t* option = """", Long64_t nentries = kBigNumber, Long64_t firstentry = 0); Process all entries in this chain, calling functions in filename.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success.; See TTree::Process. Long64_t Process(void* selector, Option_t* option = """", Long64_t nentries = kBigNumber, Long64_t firstentry = 0); Process this chain executing the code in selector.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. void RecursiveRemove(TObject* obj); Make sure that obj (which is being deleted or will soon be) is no; longer referenced by this TTree. void Reset(Option_t* option = """"); Resets the state of this chain. void ResetAfterMerge(TFileMergeInfo* ); Resets the state of this chain after a merge (keep the customization but; forget the data). Long64_t Scan(const char* varexp = """", const char* selection = """", Option_t* option = """", Long64_t nentries = 1000000000, Long64_t firstentry = 0); -- Loop on tree and print entries passing selection.; If varexp is 0 (or """") then print only first 8 columns.; If varexp = ""*"" print all columns.; Otherwise a columns selection can be made using ""var1:var2:var3"".; See TTreePlayer::Scan for more information. void SetAutoDelete(Bool_t autodel = kTRUE); -- Set the global branch kAutoDelete bit. When LoadTree loads a new Tree, the branches for which; the address is set will have the option AutoDelete set; For more detai",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TChain.html:46010,error,error,46010,root/html532/TChain.html,https://root.cern,https://root.cern/root/html532/TChain.html,2,['error'],['error']
Availability, (truth level) ;  ; TUnfoldBinning * fOwnedInputBins;  pointer to input binning scheme if owned by this class ;  ; TUnfoldBinning * fOwnedOutputBins;  pointer to output binning scheme if owned by this class ;  ; TUnfoldBinning * fRegularisationConditions;  binning scheme for the regularisation conditions ;  ;  Protected Attributes inherited from TUnfoldSys; TMatrixD * fAoutside;  Input: underflow/overflow bins. ;  ; TMap * fBgrErrScaleIn;  Input: background sources correlated error. ;  ; TMap * fBgrErrUncorrInSq;  Input: uncorr error squared from bgr sources. ;  ; TMap * fBgrIn;  Input: size of background sources. ;  ; TMatrixD * fDAinColRelSq;  Input: normalized column err.sq. (inp.matr.) ;  ; TMatrixDSparse * fDAinRelSq;  Input: normalized errors from input matrix. ;  ; TMap * fDeltaCorrAx;  Result: syst.shift from fSysIn on fAx. ;  ; TMap * fDeltaCorrX;  Result: syst.shift from fSysIn on fX. ;  ; TMatrixDSparse * fDeltaSysTau;  Result: systematic shift from tau. ;  ; Double_t fDtau;  Input: error on tau. ;  ; TMatrixDSparse * fEmatUncorrAx;  Result: syst.error from fDA2 on fAx. ;  ; TMatrixDSparse * fEmatUncorrX;  Result: syst.error from fDA2 on fX. ;  ; TMap * fSysIn;  Input: correlated errors. ;  ; TMatrixDSparse * fVyyData;  Input: error on fY prior to bgr subtraction. ;  ; TMatrixD * fYData;  Input: fY prior to bgr subtraction. ;  ;  Protected Attributes inherited from TUnfold; TMatrixDSparse * fA;  response matrix A ;  ; Double_t fBiasScale;  scale factor for the bias ;  ; EConstraint fConstraint;  type of constraint to use for the unfolding ;  ; TArrayI fHistToX;  mapping of histogram bins to matrix indices ;  ; TMatrixDSparse * fL;  regularisation conditions L ;  ; ERegMode fRegMode;  type of regularisation ;  ; TArrayD fSumOverY;  truth vector calculated from the non-normalized response matrix ;  ; Double_t fTauSquared;  regularisation parameter tau squared ;  ; TMatrixDSparse * fVyy;  covariance matrix Vyy corresponding to y ;  ; TMatrixD * fX0;  bias vec,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldDensity.html:38108,error,error,38108,doc/master/classTUnfoldDensity.html,https://root.cern,https://root.cern/doc/master/classTUnfoldDensity.html,1,['error'],['error']
Availability," (unsigned)buflen,; 11501 data_len,; 11502 buf);; 11503 }; 11504 ; 11505 /* in both cases, abort processing CGI */; 11506 goto done;; 11507 }; 11508 ; 11509 pbuf = buf;; 11510 buf[headers_len - 1] = '\0';; 11511 ri.num_headers = parse_http_headers(&pbuf, ri.http_headers);; 11512 ; 11513 /* Make up and send the status line */; 11514 status_text = ""OK"";; 11515 if ((status = get_header(ri.http_headers, ri.num_headers, ""Status"")); 11516 != NULL) {; 11517 conn->status_code = atoi(status);; 11518 status_text = status;; 11519 while (isdigit((unsigned char)*status_text) || *status_text == ' ') {; 11520 status_text++;; 11521 }; 11522 } else if (get_header(ri.http_headers, ri.num_headers, ""Location""); 11523 != NULL) {; 11524 conn->status_code = 307;; 11525 } else {; 11526 conn->status_code = 200;; 11527 }; 11528 connection_state =; 11529 get_header(ri.http_headers, ri.num_headers, ""Connection"");; 11530 if (!header_has_option(connection_state, ""keep-alive"")) {; 11531 conn->must_close = 1;; 11532 }; 11533 ; 11534 DEBUG_TRACE(""CGI: response %u %s"", conn->status_code, status_text);; 11535 ; 11536 (void)mg_printf(conn, ""HTTP/1.1 %d %s\r\n"", conn->status_code, status_text);; 11537 ; 11538 /* Send headers */; 11539 for (i = 0; i < ri.num_headers; i++) {; 11540 DEBUG_TRACE(""CGI header: %s: %s"",; 11541 ri.http_headers[i].name,; 11542 ri.http_headers[i].value);; 11543 mg_printf(conn,; 11544 ""%s: %s\r\n"",; 11545 ri.http_headers[i].name,; 11546 ri.http_headers[i].value);; 11547 }; 11548 mg_write(conn, ""\r\n"", 2);; 11549 ; 11550 /* Send chunk of data that may have been read after the headers */; 11551 mg_write(conn, buf + headers_len, (size_t)(data_len - headers_len));; 11552 ; 11553 /* Read the rest of CGI output and send to the client */; 11554 DEBUG_TRACE(""CGI: %s"", ""forward all data"");; 11555 send_file_data(conn, &fout, 0, INT64_MAX);; 11556 DEBUG_TRACE(""CGI: %s"", ""all data sent"");; 11557 ; 11558done:; 11559 mg_free(blk.var);; 11560 mg_free(blk.buf);; 11561 ; 11562 if (pid != (pid_t)-1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:333873,alive,alive,333873,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['alive'],['alive']
Availability," (unsigned)buflen,; 11502 data_len,; 11503 buf);; 11504 }; 11505 ; 11506 /* in both cases, abort processing CGI */; 11507 goto done;; 11508 }; 11509 ; 11510 pbuf = buf;; 11511 buf[headers_len - 1] = '\0';; 11512 ri.num_headers = parse_http_headers(&pbuf, ri.http_headers);; 11513 ; 11514 /* Make up and send the status line */; 11515 status_text = ""OK"";; 11516 if ((status = get_header(ri.http_headers, ri.num_headers, ""Status"")); 11517 != NULL) {; 11518 conn->status_code = atoi(status);; 11519 status_text = status;; 11520 while (isdigit((unsigned char)*status_text) || *status_text == ' ') {; 11521 status_text++;; 11522 }; 11523 } else if (get_header(ri.http_headers, ri.num_headers, ""Location""); 11524 != NULL) {; 11525 conn->status_code = 307;; 11526 } else {; 11527 conn->status_code = 200;; 11528 }; 11529 connection_state =; 11530 get_header(ri.http_headers, ri.num_headers, ""Connection"");; 11531 if (!header_has_option(connection_state, ""keep-alive"")) {; 11532 conn->must_close = 1;; 11533 }; 11534 ; 11535 DEBUG_TRACE(""CGI: response %u %s"", conn->status_code, status_text);; 11536 ; 11537 (void)mg_printf(conn, ""HTTP/1.1 %d %s\r\n"", conn->status_code, status_text);; 11538 ; 11539 /* Send headers */; 11540 for (i = 0; i < ri.num_headers; i++) {; 11541 DEBUG_TRACE(""CGI header: %s: %s"",; 11542 ri.http_headers[i].name,; 11543 ri.http_headers[i].value);; 11544 mg_printf(conn,; 11545 ""%s: %s\r\n"",; 11546 ri.http_headers[i].name,; 11547 ri.http_headers[i].value);; 11548 }; 11549 mg_write(conn, ""\r\n"", 2);; 11550 ; 11551 /* Send chunk of data that may have been read after the headers */; 11552 mg_write(conn, buf + headers_len, (size_t)(data_len - headers_len));; 11553 ; 11554 /* Read the rest of CGI output and send to the client */; 11555 DEBUG_TRACE(""CGI: %s"", ""forward all data"");; 11556 send_file_data(conn, &fout, 0, INT64_MAX);; 11557 DEBUG_TRACE(""CGI: %s"", ""all data sent"");; 11558 ; 11559done:; 11560 mg_free(blk.var);; 11561 mg_free(blk.buf);; 11562 ; 11563 if (pid != (pid_t)-1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:333906,alive,alive,333906,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['alive'],['alive']
Availability," (used for bookeeping); TObjArrayfDummyTAarray of dummy object (used for bookeeping); TObjArrayfErrorOnBackgroundpacked error sources for background; TObjArrayfErrorOnSignalpacked error sources for signal; TObjArrayfIdspacked IDs for the different error sources; TObjArrayfSignalpacked input signal. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TLimitDataSource(); Default constructor. TLimitDataSource(TH1* s, TH1* b, TH1* d); Another constructor, directly adds one channel; with signal, background and data given as input. TLimitDataSource(TH1* s, TH1* b, TH1* d, TVectorD* es, TVectorD* eb, TObjArray* names); Another constructor, directly adds one channel; with signal, background and data given as input. void AddChannel(TH1* , TH1* , TH1* ); Adds a channel with signal, background and data given as input. void AddChannel(TH1* , TH1* , TH1* , TVectorD* , TVectorD* , TObjArray* ); Adds a channel with signal, background and data given as input.; In addition, error sources are defined.; TH1 are here used for convenience: each bin has to be seen as; an error source (relative).; names is an array of strings containing the names of the sources.; Sources with the same name are correlated. void SetOwner(bool swtch = kTRUE); Gives to the TLimitDataSource the ownership of the various objects; given as input.; Objects are then deleted by the TLimitDataSource destructor. virtual ~TLimitDataSource(); {}. TObjArray* GetSignal(); { return &fSignal;}. TObjArray* GetBackground(); { return &fBackground;}. TObjArray* GetCandidates(); { return &fCandidates;}. TObjArray* GetErrorOnSignal(); { return &fErrorOnSignal;}. TObjArray* GetErrorOnBackground(); { return &fErrorOnBackground;}. TObjArray* GetErrorNames(); { return &fIds;}. » Last changed: root/hist:$Id$ » Last generated: 2015-03-14 16:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TLimitDataSource.html:6829,error,error,6829,root/html534/TLimitDataSource.html,https://root.cern,https://root.cern/root/html534/TLimitDataSource.html,4,['error'],['error']
Availability," ) Log() << kWARNING << ""Negative background efficiency found and set to 0. This is probably due to many events with negative weights in a certain cut-region."" << Endl;; 1042 fNegEffWarning = kTRUE;; 1043 }; 1044}; 1045 ; 1046////////////////////////////////////////////////////////////////////////////////; 1047/// compute signal and background efficiencies from event counting; 1048/// for given cut sample; 1049 ; 1050void TMVA::MethodCuts::GetEffsfromSelection( Double_t* cutMin, Double_t* cutMax,; 1051 Double_t& effS, Double_t& effB); 1052{; 1053 Float_t nTotS = 0, nTotB = 0;; 1054 Float_t nSelS = 0, nSelB = 0;; 1055 ; 1056 Volume* volume = new Volume( cutMin, cutMax, GetNvar() );; 1057 ; 1058 // search for all events lying in the volume, and add up their weights; 1059 nSelS = fBinaryTreeS->SearchVolume( volume );; 1060 nSelB = fBinaryTreeB->SearchVolume( volume );; 1061 ; 1062 delete volume;; 1063 ; 1064 // total number of ""events"" (sum of weights) as reference to compute efficiency; 1065 nTotS = fBinaryTreeS->GetSumOfWeights();; 1066 nTotB = fBinaryTreeB->GetSumOfWeights();; 1067 ; 1068 // sanity check; 1069 if (nTotS == 0 && nTotB == 0) {; 1070 Log() << kFATAL << ""<GetEffsfromSelection> fatal error in zero total number of events:""; 1071 << "" nTotS, nTotB: "" << nTotS << "" "" << nTotB << "" ***"" << Endl;; 1072 }; 1073 ; 1074 // efficiencies; 1075 if (nTotS == 0 ) {; 1076 effS = 0;; 1077 effB = nSelB/nTotB;; 1078 Log() << kWARNING << ""<ComputeEstimator> zero number of signal events"" << Endl;; 1079 }; 1080 else if (nTotB == 0) {; 1081 effB = 0;; 1082 effS = nSelS/nTotS;; 1083 Log() << kWARNING << ""<ComputeEstimator> zero number of background events"" << Endl;; 1084 }; 1085 else {; 1086 effS = nSelS/nTotS;; 1087 effB = nSelB/nTotB;; 1088 }; 1089 ; 1090 // quick fix to prevent from efficiencies < 0; 1091 if( effS < 0.0 ) {; 1092 effS = 0.0;; 1093 if( !fNegEffWarning ) Log() << kWARNING << ""Negative signal efficiency found and set to 0. This is probably due to many events w",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8cxx_source.html:40127,error,error,40127,doc/master/MethodCuts_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8cxx_source.html,1,['error'],['error']
Availability," )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TNeuron (ENeuronType type=kSigmoid, const char *name="""", const char *title="""", const char *extF="""", const char *extD="""");  Usual constructor. ;  ;  ~TNeuron () override;  ; void AddInLayer (TNeuron *);  Tells a neuron which neurons form its layer (including itself). ;  ; void ForceExternalValue (Double_t value);  Uses the branch type to force an external value. ;  ; Double_t GetBranch () const;  Returns the formula value. ;  ; Double_t GetDeDw () const;  Computes the derivative of the error wrt the neuron weight. ;  ; Double_t GetDEDw () const;  ; Double_t GetDerivative () const;  computes the derivative for the appropriate function at the working point ;  ; Double_t GetError () const;  Computes the error for output neurons. ;  ; TNeuron * GetInLayer (Int_t n) const;  ; Double_t GetInput () const;  Returns neuron input. ;  ; const Double_t * GetNormalisation () const;  ; TSynapse * GetPost (Int_t n) const;  ; TSynapse * GetPre (Int_t n) const;  ; Double_t GetTarget () const;  Computes the normalized target pattern for output neurons. ;  ; ENeuronType GetType () const;  Returns the neuron type. ;  ; Double_t GetValue () const;  Computes the output using the appropriate function and all the weighted inputs, or uses the branch as input. ;  ; Double_t GetWeight () const;  ; TClass * IsA () const override;  ; void SetDEDw (Double_t in);  Sets the derivative of the total error wrt the neuron weight. ;  ; void SetNewEvent () const;  Inform the neuron that inputs of the network have changed, so that the buffered values have to be recomputed. ;  ; void SetNormalisation (Double_t mean, Double_t RMS);  Sets th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNeuron.html:2605,error,error,2605,doc/master/classTNeuron.html,https://root.cern,https://root.cern/doc/master/classTNeuron.html,1,['error'],['error']
Availability," )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <RooCmdConfig.h>. Inheritance diagram for RooCmdConfig:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ RooCmdConfig() [1/2]. RooCmdConfig::RooCmdConfig ; (; RooStringView ; methodName). Constructor taking descriptive name of owner/user which is used as prefix for any warning or error messages generated by this parser. ; Definition at line 59 of file RooCmdConfig.cxx. ◆ RooCmdConfig() [2/2]. RooCmdConfig::RooCmdConfig ; (; const RooCmdConfig & ; other). Copy constructor. ; Definition at line 84 of file RooCmdConfig.cxx. Member Function Documentation. ◆ allowUndefined(). void RooCmdConfig::allowUndefined ; (; bool ; flag = true). inline . If flag is true the processing of unrecognized RooCmdArgs is not considered an error. ; Definition at line 44 of file RooCmdConfig.h. ◆ Class(). static TClass * RooCmdConfig::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooCmdConfig::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooCmdConfig::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 135 of file RooCmdConfig.h. ◆ DeclFileName(). static const char * RooCmdConfig::DeclFileName ; (; ). inlinest",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCmdConfig.html:17109,error,error,17109,doc/master/classRooCmdConfig.html,https://root.cern,https://root.cern/doc/master/classRooCmdConfig.html,1,['error'],['error']
Availability," ). Definition at line 63 of file gifencode.c. ◆ output() [1/2]. static void output ; (; ). static . ◆ output() [2/2]. static void output ; (; int ; code). static . Definition at line 226 of file gifencode.c. ◆ put_short() [1/2]. static void put_short ; (; ). static . ◆ put_short() [2/2]. static void put_short ; (; int ; word). static . Definition at line 301 of file gifencode.c. Variable Documentation. ◆ a_count. int a_count. static . Definition at line 209 of file gifencode.c. ◆ accum. char accum[256]. static . Definition at line 210 of file gifencode.c. ◆ BitsPixel. int BitsPixel. static . Definition at line 25 of file gifencode.c. ◆ ClearCode. int ClearCode. static . Definition at line 29 of file gifencode.c. ◆ CodeTab. int CodeTab[5003]. static . Definition at line 23 of file gifencode.c. ◆ cur_accum. unsigned long cur_accum. static . Definition at line 207 of file gifencode.c. ◆ cur_bits. int cur_bits. static . Definition at line 208 of file gifencode.c. ◆ CurCodeSize. int CurCodeSize. static . Definition at line 27 of file gifencode.c. ◆ CurMaxCode. int CurMaxCode. static . Definition at line 28 of file gifencode.c. ◆ EOFCode. int EOFCode. static . Definition at line 30 of file gifencode.c. ◆ FreeCode. int FreeCode. static . Definition at line 31 of file gifencode.c. ◆ HashTab. long HashTab[5003]. static . Definition at line 22 of file gifencode.c. ◆ IniCodeSize. int IniCodeSize. static . Definition at line 26 of file gifencode.c. ◆ masks. unsigned long masks[]. static . Initial value:= { 0x0000,; 0x0001, 0x0003, 0x0007, 0x000F,; 0x001F, 0x003F, 0x007F, 0x00FF,; 0x01FF, 0x03FF, 0x07FF, 0x0FFF,; 0x1FFF, 0x3FFF, 0x7FFF, 0xFFFF }. Definition at line 211 of file gifencode.c. ◆ Nbyte. long Nbyte. static . Definition at line 33 of file gifencode.c. ◆ put_b. void(* put_b) () ; (; ). static . Definition at line 34 of file gifencode.c. graf2dwin32gdksrcgifencode.c. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:16 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/win32gdk_2src_2gifencode_8c.html:4247,mask,masks,4247,doc/master/win32gdk_2src_2gifencode_8c.html,https://root.cern,https://root.cern/doc/master/win32gdk_2src_2gifencode_8c.html,2,['mask'],['masks']
Availability," ). The “std::vector<int>” class is one of the classes builtin by default into the Cling extension dlls. You will get a non-functional class (instances of which can still be passed around to C++) if the corresponding dictionary doesn’t exist.; 19.1.5.3 Access to ROOT Globals; Most globals and global functions can be imported directly from the ROOT.py module, but some common ones (most notably gMinuit, although that variable now exists at startup from release 5.08 onward) do not exist yet at program startup, as they exist in modules that are loaded later (e.g. through the auto-loading mechanism). An example session should make this clear:; >>> from ROOT import *; >>> gROOT # directly available; <ROOT.TROOT object at 0x399c30>; >>> gMinuit # library not yet loaded: not available; Traceback (most recent call last):; File ""<stdin>"", line 1, in ?; NameError: name 'gMinuit' is not defined; >>> TMinuit # use of TMinuit class forces auto-loading; <class '__main__.TMinuit'>; >>> gMinuit # now gMinuit is available; <__main__.TMinuit object at 0x1458c70>; >>> not not gMinuit # but it is the null pointer, until set; False; >>> g = TMinuit(); >>> not not gMinuit; True; It is also possible to create globals interactively, either by executing a Cling macro, or by a call to gROOT.ProcessLine(). These globals are made available in the same way: either use them directly after creation in ‘from ROOT import *’ more, or get them from the ROOT namespace after an ‘import ROOT’.; As of 5.08, the behaviour of ROOT globals is the same as python globals, which is sometimes counterintuitive: since they are references, they can be changed only if done so directly through their containing module. The following session shows that in detail:; >>> from ROOT import *; >>> print(gDebug); 0; >>> gROOT.ProcessLine( 'gDebug = 7;' ); >>> print(gDebug); 0 # local gDebug is unchanged; >>> gDebug = 5 # changes _local_ reference only; >>> print(gDebug); 5 # locally correct, but ...; >>> gROOT.ProcessLine( 'co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:1054338,avail,available,1054338,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['avail'],['available']
Availability," ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 173 of file TChain.h. ◆ CreatePackets(). void TChain::CreatePackets ; (; ). virtual . Initialize the packet descriptor string. ; Definition at line 765 of file TChain.cxx. ◆ DeclFileName(). static const char * TChain::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 173 of file TChain.h. ◆ DirectoryAutoAdd(). void TChain::DirectoryAutoAdd ; (; TDirectory * ; ). overridevirtual . Override the TTree::DirectoryAutoAdd behavior: we never auto add. ; Reimplemented from TTree.; Definition at line 778 of file TChain.cxx. ◆ Draw() [1/3]. Long64_t TChain::Draw ; (; const char * ; varexp, . const char * ; selection, . Option_t * ; option = """", . Long64_t ; nentries = kMaxEntries, . Long64_t ; firstentry = 0 . ). overridevirtual . Process all entries in this chain and draw histogram corresponding to expression varexp. ; Returns -1 in case of error or number of selected events in case of success. ; Reimplemented from TTree.; Reimplemented in TProofChain.; Definition at line 813 of file TChain.cxx. ◆ Draw() [2/3]. Long64_t TChain::Draw ; (; const char * ; varexp, . const TCut & ; selection, . Option_t * ; option = """", . Long64_t ; nentries = kMaxEntries, . Long64_t ; firstentry = 0 . ). overridevirtual . Draw expression varexp for selected entries. ; Returns -1 in case of error or number of selected events in case of success.; This function accepts TCut objects as arguments. Useful to use the string operator +, example: ntuple.Draw(""x"",cut1+cut2+cut3);. Reimplemented from TTree.; Reimplemented in TProofChain.; Definition at line 793 of file TChain.cxx. ◆ Draw() [3/3]. void TChain::Draw ; (; Option_t * ; option). inlineoverridevirtual . Default Draw method for all objects. ; Reimplemented from TObject.; Reimplemented in TProofChain.; Definition at line 90 of file TChain.h. ◆ Fill(). Int_t TChain::Fill ; (; ). inlineoverridevirtual . Fill al",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTChain.html:68398,error,error,68398,doc/v632/classTChain.html,https://root.cern,https://root.cern/doc/v632/classTChain.html,1,['error'],['error']
Availability," ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 173 of file TChain.h. ◆ CreatePackets(). void TChain::CreatePackets ; (; ). virtual . Initialize the packet descriptor string. ; Definition at line 791 of file TChain.cxx. ◆ DeclFileName(). static const char * TChain::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 173 of file TChain.h. ◆ DirectoryAutoAdd(). void TChain::DirectoryAutoAdd ; (; TDirectory * ; ). overridevirtual . Override the TTree::DirectoryAutoAdd behavior: we never auto add. ; Reimplemented from TTree.; Definition at line 804 of file TChain.cxx. ◆ Draw() [1/3]. Long64_t TChain::Draw ; (; const char * ; varexp, . const char * ; selection, . Option_t * ; option = """", . Long64_t ; nentries = kMaxEntries, . Long64_t ; firstentry = 0 . ). overridevirtual . Process all entries in this chain and draw histogram corresponding to expression varexp. ; Returns -1 in case of error or number of selected events in case of success. ; Reimplemented from TTree.; Reimplemented in TProofChain.; Definition at line 839 of file TChain.cxx. ◆ Draw() [2/3]. Long64_t TChain::Draw ; (; const char * ; varexp, . const TCut & ; selection, . Option_t * ; option = """", . Long64_t ; nentries = kMaxEntries, . Long64_t ; firstentry = 0 . ). overridevirtual . Draw expression varexp for selected entries. ; Returns -1 in case of error or number of selected events in case of success.; This function accepts TCut objects as arguments. Useful to use the string operator +, example: ntuple.Draw(""x"",cut1+cut2+cut3);. Reimplemented from TTree.; Reimplemented in TProofChain.; Definition at line 819 of file TChain.cxx. ◆ Draw() [3/3]. void TChain::Draw ; (; Option_t * ; option). inlineoverridevirtual . Default Draw method for all objects. ; Reimplemented from TObject.; Reimplemented in TProofChain.; Definition at line 90 of file TChain.h. ◆ Fill(). Int_t TChain::Fill ; (; ). inlineoverridevirtual . Fill al",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTChain.html:68807,error,error,68807,doc/master/classTChain.html,https://root.cern,https://root.cern/doc/master/classTChain.html,1,['error'],['error']
Availability," ). overrideprivatevirtual . Process the content of a line starting with "".R"" (already stripped-off) The format is [user@]host[:dir] [-l user] [-d dbg] [script] The variable 'dir' is the remote directory to be used as working dir. ; The username can be specified in two ways, ""-l"" having the priority (as in ssh). A 'dbg' value > 0 gives increasing verbosity. The last argument 'script' allows to specify an alternative script to be executed remotely to startup the session. ; Reimplemented from TApplication.; Definition at line 768 of file TRint.cxx. ◆ Run(). void TRint::Run ; (; Bool_t ; retrn = kFALSE). overridevirtual . Main application eventloop. ; First process files given on the command line and then go into the main application event loop, unless the -q command line option was specified in which case the program terminates. When return is true this method returns even when -q was specified.; When QuitOpt is true and return is false, terminate the application with an error code equal to either the ProcessLine error (if any) or the return value of the command casted to a long. ; Reimplemented from TApplication.; Definition at line 384 of file TRint.cxx. ◆ SetEchoMode(). void TRint::SetEchoMode ; (; Bool_t ; mode). overridevirtual . Set console mode: ; mode = kTRUE - echo input symbols mode = kFALSE - noecho input symbols ; Reimplemented from TApplication.; Definition at line 752 of file TRint.cxx. ◆ SetPrompt(). const char * TRint::SetPrompt ; (; const char * ; newPrompt). virtual . Set a new default prompt. ; It returns the previous prompt. The prompt may contain a d which will be replaced by the commend number. The default prompt is ""root [%d] "". The maximum length of the prompt is 55 characters. To set the prompt in an interactive session do: root [0] ((TRint*)gROOT->GetApplication())->SetPrompt(""aap> "") aap> ; Definition at line 595 of file TRint.cxx. ◆ Streamer(). void TRint::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRint.html:26707,error,error,26707,doc/master/classTRint.html,https://root.cern,https://root.cern/doc/master/classTRint.html,2,['error'],['error']
Availability," ). static . ◆ gOptSysIncludePaths(). static llvm::cl::list< std::string > gOptSysIncludePaths ; (; ""isystem"" ; , . llvm::cl::ZeroOrMore ; , . llvm::cl::desc(""Specify a system include path."") ; , . llvm::cl::cat(gRootclingOptions) ;  . ). static . ◆ gOptSystemModuleByproducts(). static llvm::cl::opt< bool > gOptSystemModuleByproducts ; (; ""mSystemByproducts"" ; , . llvm::cl::Hidden ; , . llvm::cl::desc(""Allow implicit build of system modules."") ; , . llvm::cl::cat(gRootclingOptions) ;  . ). static . ◆ gOptUmbrellaInput(). static llvm::cl::opt< bool > gOptUmbrellaInput ; (; ""umbrellaHeader"" ; , . llvm::cl::desc(""A single header including all headers instead of specifying them on the command line."") ; , . llvm::cl::cat(gRootclingOptions) ;  . ). static . ◆ gOptVerboseLevel(). static llvm::cl::opt< VerboseLevel > gOptVerboseLevel ; (; llvm::cl::desc(""Choose verbosity level:"") ; , . llvm::cl::values(clEnumVal(v, ""Show errors.""), clEnumVal(v0, ""Show only fatal errors.""), clEnumVal(v1, ""Show errors (the same as -v).""), clEnumVal(v2, ""Show warnings (default).""), clEnumVal(v3, ""Show notes.""), clEnumVal(v4, ""Show information."")) ; , . llvm::cl::init(v2) ; , . llvm::cl::cat(gRootclingOptions) ;  . ). static . ◆ gOptWDiags(). static llvm::cl::list< std::string > gOptWDiags ; (; ""W"" ; , . llvm::cl::Prefix ; , . llvm::cl::ZeroOrMore ; , . llvm::cl::desc(""Specify compiler diagnostics options."") ; , . llvm::cl::cat(gRootclingOptions) ;  . ). static . ◆ gOptWriteEmptyRootPCM(). static llvm::cl::opt< bool > gOptWriteEmptyRootPCM ; (; ""writeEmptyRootPCM"" ; , . llvm::cl::Hidden ; , . llvm::cl::desc(""Does not include the header files as it assumes they exist in the pch."") ; , . llvm::cl::cat(gRootclingOptions) ;  . ). static . ◆ gPathSeparator(). const std::string gPathSeparator ; (; ROOT::TMetaUtils::GetPathSeparator() ; ). ◆ GrabIndex(). llvm::StringRef GrabIndex ; (; const cling::Interpreter & ; interp, . const clang::FieldDecl & ; member, . int ; printError . ). GrabIndex returns a ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx.html:51970,error,errors,51970,doc/master/rootcling__impl_8cxx.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx.html,1,['error'],['errors']
Availability," ); May be called optionally by the user after the MC run.; It provides normalization and also prints some information/statistics on the MC run. void SetInhiDiv(Int_t , Int_t ); This can be called before Initialize, after setting kDim; It defines which variables are excluded in the process of the cell division.; For example 'FoamX->SetInhiDiv(1, 1);' inhibits division of y-variable.; The resulting map of cells in 2-dim. case will look as follows:. . void SetXdivPRD(Int_t , Int_t , Double_t[] ); This should be called before Initialize, after setting kDim; It predefines values of the cell division for certain variable iDim.; For example setting 3 predefined division lines using:; xDiv[0]=0.30; xDiv[1]=0.40; xDiv[2]=0.65;; FoamX->SetXdivPRD(0,3,xDiv);; results in the following 2-dim. pattern of the cells:. . void CheckAll(Int_t ); User utility, miscellaneous and debug.; Checks all pointers in the tree of cells. This is useful autodiagnostic.; level=0, no printout, failures causes STOP; level=1, printout, failures lead to WARNINGS only. void PrintCells(void); Prints geometry of ALL cells of the FOAM. void RootPlot2dim(Char_t* ); Debugging tool which plots 2-dimensional cells as rectangles; in C++ format readable for root. void LinkCells(); Void function for backward compatibility. TFoamIntegrand * GetRho(); {return fRho;}. TRandom * GetPseRan() const; {return fPseRan;}. void SetPseRan(TRandom* PseRan); {fPseRan=PseRan;}. void SetkDim(Int_t kDim); Getters and Setters. {fDim = kDim;}. void SetnCells(Long_t nCells); {fNCells =nCells;}. void SetnSampl(Long_t nSampl); {fNSampl =nSampl;}. void SetnBin(Int_t nBin); {fNBin = nBin;}. void SetChat(Int_t Chat); {fChat = Chat;}. void SetOptRej(Int_t OptRej); {fOptRej =OptRej;}. void SetOptDrive(Int_t OptDrive); {fOptDrive =OptDrive;}. void SetEvPerBin(Int_t EvPerBin); {fEvPerBin =EvPerBin;}. void SetMaxWtRej(Double_t MaxWtRej); {fMaxWtRej=MaxWtRej;}. const char * GetVersion() const; Getters and Setters. {return fVersion.Data();}. I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFoam.html:23721,failure,failures,23721,root/html602/TFoam.html,https://root.cern,https://root.cern/root/html602/TFoam.html,8,['failure'],['failures']
Availability," ); const. inlineoverridevirtual . Returns kTRUE in case object contains browsable objects (like containers or lists of other objects). ; Reimplemented from TObject.; Definition at line 288 of file THnBase.h. ◆ IsInRange(). Bool_t THnBase::IsInRange ; (; Int_t * ; coord); const. Check whether bin coord is in range, as defined by TAxis::SetRange(). ; Definition at line 592 of file THnBase.cxx. ◆ Merge(). Long64_t THnBase::Merge ; (; TCollection * ; list). Merge this with a list of THnBase's. ; All THnBase's provided in the list must have the same bin layout! ; Definition at line 897 of file THnBase.cxx. ◆ Multiply() [1/2]. void THnBase::Multiply ; (; const THnBase * ; h). Multiply this histogram by histogram h this = this * h Note that if h has Sumw2 set, Sumw2 is automatically called for this if not already set. ; Definition at line 932 of file THnBase.cxx. ◆ Multiply() [2/2]. void THnBase::Multiply ; (; TF1 * ; f, . Double_t ; c = 1. . ). Performs the operation: this = this*c*f1 if errors are defined, errors are also recalculated. ; Only bins inside the function range are recomputed. IMPORTANT NOTE: If you intend to use the errors of this histogram later you should call Sumw2 before making this operation. This is particularly important if you fit the histogram after calling Multiply() ; Definition at line 980 of file THnBase.cxx. ◆ operator=() [1/2]. THnBase & THnBase::operator= ; (; const THnBase & ; other). protected . Definition at line 101 of file THnBase.cxx. ◆ operator=() [2/2]. THnBase & THnBase::operator= ; (; THnBase && ; other). protected . Definition at line 139 of file THnBase.cxx. ◆ Print(). void THnBase::Print ; (; Option_t * ; options = """"); const. overridevirtual . Print a THnBase. ; If ""option"" contains:; 'a': print axis details; 'm': print memory usage; 's': print statistics; 'c': print its content, too (this can generate a LOT of output!) Other options are forwarded to PrintEntries(). . Reimplemented from TObject.; Definition at line 1535 of file",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnBase.html:35925,error,errors,35925,doc/master/classTHnBase.html,https://root.cern,https://root.cern/doc/master/classTHnBase.html,2,['error'],['errors']
Availability," ); const. inlinevirtual . Definition at line 379 of file TSystem.h. ◆ GetListOfStdExceptionHandlers(). virtual TSeqCollection * TSystem::GetListOfStdExceptionHandlers ; (; ); const. inlinevirtual . Definition at line 385 of file TSystem.h. ◆ GetListOfTimers(). virtual TList * TSystem::GetListOfTimers ; (; ); const. inlinevirtual . Definition at line 393 of file TSystem.h. ◆ GetMakeExe(). const char * TSystem::GetMakeExe ; (; ); const. virtual . Return the command line use to make an executable. ; See TSystem::CompileMacro for more details. ; Definition at line 3965 of file TSystem.cxx. ◆ GetMakeSharedLib(). const char * TSystem::GetMakeSharedLib ; (; ); const. virtual . Return the command line use to make a shared library. ; See TSystem::CompileMacro for more details. ; Definition at line 3956 of file TSystem.cxx. ◆ GetMemInfo(). int TSystem::GetMemInfo ; (; MemInfo_t * ; info); const. virtual . Returns ram and swap memory usage info into the MemInfo_t structure. ; Returns -1 in case of error, 0 otherwise. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2479 of file TSystem.cxx. ◆ GetObjExt(). const char * TSystem::GetObjExt ; (; ); const. virtual . Get the object file extension. ; Definition at line 4021 of file TSystem.cxx. ◆ GetPathInfo() [1/3]. int TSystem::GetPathInfo ; (; const char * ; path, . FileStat_t & ; buf . ). virtual . Get info about a file. ; Info is returned in the form of a FileStat_t structure (see TSystem.h). The function returns 0 in case of success and 1 if the file could not be stat'ed. ; Reimplemented in TDavixSystem, TUnixSystem, TWinNTSystem, TDCacheSystem, TNetSystem, TWebSystem, and TNetXNGSystem.; Definition at line 1462 of file TSystem.cxx. ◆ GetPathInfo() [2/3]. int TSystem::GetPathInfo ; (; const char * ; path, . Long_t * ; id, . Long64_t * ; size, . Long_t * ; flags, . Long_t * ; modtime . ). Get info about a file: id, size, flags, modification time. . Id is (statbuf.st_dev << 24) + statbuf.st_ino; Size is the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystem.html:63941,error,error,63941,doc/master/classTSystem.html,https://root.cern,https://root.cern/doc/master/classTSystem.html,1,['error'],['error']
Availability," ); const. privatepure virtual . Implemented in ROOT::Math::GSLMultiRootSolver, and ROOT::Math::GSLMultiRootDerivSolver. ◆ InitSolver(). bool ROOT::Math::GSLMultiRootBaseSolver::InitSolver ; (; const std::vector< ROOT::Math::IMultiGenFunction * > & ; funcVec, . const double * ; x . ). inline . init the solver with function list and initial values ; Definition at line 71 of file GSLMultiRootSolver.h. ◆ Iterate(). virtual int ROOT::Math::GSLMultiRootBaseSolver::Iterate ; (; ). pure virtual . perform an iteration ; Implemented in ROOT::Math::GSLMultiRootSolver, and ROOT::Math::GSLMultiRootDerivSolver. ◆ Name(). virtual const std::string & ROOT::Math::GSLMultiRootBaseSolver::Name ; (; ); const. pure virtual . return name ; Implemented in ROOT::Math::GSLMultiRootSolver, and ROOT::Math::GSLMultiRootDerivSolver. ◆ SetSolver(). virtual int ROOT::Math::GSLMultiRootBaseSolver::SetSolver ; (; const std::vector< ROOT::Math::IMultiGenFunction * > & ; funcVec, . const double * ; x . ). privatepure virtual . Implemented in ROOT::Math::GSLMultiRootSolver, and ROOT::Math::GSLMultiRootDerivSolver. ◆ TestDelta(). int ROOT::Math::GSLMultiRootBaseSolver::TestDelta ; (; double ; absTol, . double ; relTol . ); const. inline . test using abs and relative tolerance |dx| < absTol + relTol*|x| for every component ; Definition at line 117 of file GSLMultiRootSolver.h. ◆ TestResidual(). int ROOT::Math::GSLMultiRootBaseSolver::TestResidual ; (; double ; absTol); const. inline . test using abs tolerance Sum |f|_i < absTol ; Definition at line 126 of file GSLMultiRootSolver.h. ◆ X(). const double * ROOT::Math::GSLMultiRootBaseSolver::X ; (; ); const. inline . solution values at the current iteration ; Definition at line 98 of file GSLMultiRootSolver.h. The documentation for this class was generated from the following file:; math/mathmore/src/GSLMultiRootSolver.h. ROOTMathGSLMultiRootBaseSolver. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:21 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootBaseSolver.html:4312,toler,tolerance,4312,doc/master/classROOT_1_1Math_1_1GSLMultiRootBaseSolver.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLMultiRootBaseSolver.html,2,['toler'],['tolerance']
Availability," );; // scale histo 2 to scale of 1; h2->Sumw2();; h2->Scale( ( double(n1) * dx1 * dy1 ) / ( double(n2) * dx2 * dy2 ) );; ; ; if (global) {; // fill data structure for fit (coordinates + values + errors); std::cout << ""Do global fit"" << std::endl;; // fit now all the function together; ; // fill data structure for fit (coordinates + values + errors); TAxis *xaxis1 = h1->GetXaxis();; TAxis *yaxis1 = h1->GetYaxis();; TAxis *xaxis2 = h2->GetXaxis();; TAxis *yaxis2 = h2->GetYaxis();; ; int nbinX1 = h1->GetNbinsX();; int nbinY1 = h1->GetNbinsY();; int nbinX2 = h2->GetNbinsX();; int nbinY2 = h2->GetNbinsY();; ; /// reset data structure; coords = std::vector<std::pair<double,double> >();; values = std::vector<double>();; errors = std::vector<double>();; ; ; for (int ix = 1; ix <= nbinX1; ++ix) {; for (int iy = 1; iy <= nbinY1; ++iy) {; if ( h1->GetBinContent(ix,iy) > 0 ) {; coords.push_back( std::make_pair(xaxis1->GetBinCenter(ix), yaxis1->GetBinCenter(iy) ) );; values.push_back( h1->GetBinContent(ix,iy) );; errors.push_back( h1->GetBinError(ix,iy) );; }; }; }; for (int ix = 1; ix <= nbinX2; ++ix) {; for (int iy = 1; iy <= nbinY2; ++iy) {; if ( h2->GetBinContent(ix,iy) > 0 ) {; coords.push_back( std::make_pair(xaxis2->GetBinCenter(ix), yaxis2->GetBinCenter(iy) ) );; values.push_back( h2->GetBinContent(ix,iy) );; errors.push_back( h2->GetBinError(ix,iy) );; }; }; }; ; TVirtualFitter::SetDefaultFitter(""Minuit"");; TVirtualFitter * minuit = TVirtualFitter::Fitter(nullptr,10);; for (int i = 0; i < 10; ++i) {; minuit->SetParameter(i, func->GetParName(i), func->GetParameter(i), 0.01, 0,0);; }; minuit->SetFCN(myFcn);; ; double arglist[100];; arglist[0] = 0;; // set print level; minuit->ExecuteCommand(""SET PRINT"",arglist,2);; ; // minimize; arglist[0] = 5000; // number of function calls; arglist[1] = 0.01; // tolerance; minuit->ExecuteCommand(""MIGRAD"",arglist,2);; ; //get result; double minParams[10];; double parErrors[10];; for (int i = 0; i < 10; ++i) {; minParams[i] = minuit->Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TwoHistoFit2D_8C.html:5377,error,errors,5377,doc/master/TwoHistoFit2D_8C.html,https://root.cern,https://root.cern/doc/master/TwoHistoFit2D_8C.html,1,['error'],['errors']
Availability," * GetCovarianceMatrix() const; return a pointer to the covariance matrix. Double_t GetCovarianceMatrixElement(Int_t i, Int_t j) const; return element i,j from the covariance matrix. Int_t GetErrors(Int_t ipar, Double_t& eplus, Double_t& eminus, Double_t& eparab, Double_t& globcc) const; return current errors for a parameter; ipar : parameter number; eplus : upper error; eminus : lower error; eparab : parabolic error; globcc : global correlation coefficient. Int_t GetNumberTotalParameters() const; return the total number of parameters (free + fixed). Int_t GetNumberFreeParameters() const; return the number of free parameters. Double_t GetParError(Int_t ipar) const; return error of parameter ipar. Double_t GetParameter(Int_t ipar) const; return current value of parameter ipar. Int_t GetParameter(Int_t ipar, char* name, Double_t& value, Double_t& verr, Double_t& vlow, Double_t& vhigh) const; return current values for a parameter; ipar : parameter number; parname : parameter name; value : initial parameter value; verr : initial error for this parameter; vlow : lower value for the parameter; vhigh : upper value for the parameter; WARNING! parname must be suitably dimensionned in the calling function. const char * GetParName(Int_t ipar) const; return name of parameter ipar. Int_t GetStats(Double_t& amin, Double_t& edm, Double_t& errdef, Int_t& nvpar, Int_t& nparx) const; return global fit parameters; amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable parameters; nparx : total number of parameters. Double_t GetSumLog(Int_t i); return Sum(log(i) i=0,n; used by log likelihood fits. Bool_t IsFixed(Int_t ipar) const; return kTRUE if parameter ipar is fixed, kFALSE othersise). void PrintResults(Int_t level, Double_t amin) const; Print fit results. void ReleaseParameter(Int_t ipar); Release parameter ipar. void SetFCN(void* fcn); Specify the address of the fitting algorithm (from the interpreter). void SetFCN(void (*)(Int_t&, Double_t*, Dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFitter.html:13700,error,error,13700,root/html528/TFitter.html,https://root.cern,https://root.cern/root/html528/TFitter.html,6,['error'],['error']
Availability," * GetCovarianceMatrix() const; return a pointer to the covariance matrix. Double_t GetCovarianceMatrixElement(Int_t i, Int_t j) const; return element i,j from the covariance matrix. Int_t GetErrors(Int_t ipar, Double_t& eplus, Double_t& eminus, Double_t& eparab, Double_t& globcc) const; return current errors for a parameter; ipar : parameter number; eplus : upper error; eminus : lower error; eparab : parabolic error; globcc : global correlation coefficient. Int_t GetNumberTotalParameters() const; return the total number of parameters (free + fixed). Int_t GetNumberFreeParameters() const; return the number of free parameters. Double_t GetParError(Int_t ipar) const; return error of parameter ipar. Double_t GetParameter(Int_t ipar) const; return current value of parameter ipar. Int_t GetParameter(Int_t ipar, char* name, Double_t& value, Double_t& verr, Double_t& vlow, Double_t& vhigh) const; return current values for a parameter; ipar : parameter number; parname : parameter name; value : initial parameter value; verr : initial error for this parameter; vlow : lower value for the parameter; vhigh : upper value for the parameter; WARNING! parname must be suitably dimensionned in the calling function. const char * GetParName(Int_t ipar) const; return name of parameter ipar. Int_t GetStats(Double_t& amin, Double_t& edm, Double_t& errdef, Int_t& nvpar, Int_t& nparx) const; return global fit parameters; amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable parameters; nparx : total number of parameters. Double_t GetSumLog(Int_t i); return Sum(log(i) i=0,n; used by log likelihood fits. Bool_t IsFixed(Int_t ipar) const; return kTRUE if parameter ipar is fixed, kFALSE othersise). void PrintResults(Int_t level, Double_t amin) const; Print fit results. void ReleaseParameter(Int_t ipar); Release parameter ipar. void SetFCN(void* fcn); Specify the address of the fitting algorithm (from the interpreter). void SetFCN(void(*)(Int_t&,Double_t*,Double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFitter.html:14367,error,error,14367,root/html602/TFitter.html,https://root.cern,https://root.cern/root/html602/TFitter.html,4,['error'],['error']
Availability," * GetListOfPragmas(); Return the list of pragmas. const TSeqCollection * GetListOfSysIncFiles(); Return the list of system include files. const TSeqCollection * GetListOfUsers(); reads from ""/etc/passwd"". Char_t AllAgreeOnChar(int i, const TSeqCollection* pList, Int_t& nGoodStrings); [static utility function]. if all the strings in ""*pList"" have the same ith character,; that character is returned.; otherwise 0 is returned. any string ""s"" for which ""ExcludedByFignore(s)"" is true; will be ignored unless All the strings in ""*pList""; are ""ExcludedByFignore()"". in addition, the number of strings which were not; ""ExcludedByFignore()"" is returned in ""nGoodStrings"". void AppendListOfFilesInDirectory(const char* dirName, TSeqCollection* pList); [static utility function]. adds a TObjString to ""*pList""; for each entry found in the system directory ""dirName"". directories that do not exist are silently ignored. TString DetermineClass(const char* varName); [static utility function]. returns empty string on failure.; otherwise returns something like this: ""TROOT*"".; fails for non-class types (ie, int, char, etc).; fails for pointers to functions. Bool_t ExcludedByFignore(TString s); [static utility function]. returns true iff ""s"" ends with one of; the strings listed in the ""TabCom.FileIgnore"" resource. TString GetSysIncludePath(); [static utility function]. returns a colon-separated string of directories; that CINT will search when you call #include<...>. returns empty string on failure. Bool_t IsDirectory(const char* fileName); [static utility function]. calls TSystem::GetPathInfo() to see if ""fileName""; is a system directory. TSeqCollection * NewListOfFilesInPath(const char* path); [static utility function]. creates a list containing the full path name for each file; in the (colon separated) string ""path1"". memory is allocated with ""new"", so; whoever calls this function takes responsibility for deleting it. Bool_t PathIsSpecifiedInFileName(const TString& fileName); [static utili",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTabCom.html:9620,failure,failure,9620,root/html528/TTabCom.html,https://root.cern,https://root.cern/root/html528/TTabCom.html,6,['failure'],['failure']
Availability," * RooAbsGenContext::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 89 of file RooAbsGenContext.h. ◆ defaultPrintContents(). Int_t RooAbsGenContext::defaultPrintContents ; (; Option_t * ; opt); const. overridevirtual . Define default contents when printing. ; Reimplemented from RooPrintable.; Definition at line 367 of file RooAbsGenContext.cxx. ◆ defaultPrintStyle(). RooPrintable::StyleOption RooAbsGenContext::defaultPrintStyle ; (; Option_t * ; opt); const. overridevirtual . Define default print style. ; Reimplemented from RooPrintable.; Definition at line 377 of file RooAbsGenContext.cxx. ◆ generate(). RooDataSet * RooAbsGenContext::generate ; (; double ; nEvents = 0, . bool ; skipInit = false, . bool ; extendedMode = false . ). virtual . Generate the specified number of events with nEvents>0 and and return a dataset containing the generated events. ; With nEvents<=0, generate the number of events in the prototype dataset, if available, or else the expected number of events, if non-zero. If extendedMode = true generate according to a Poisson(nEvents) The returned dataset belongs to the caller. Return zero in case of an error. Generation of individual events is delegated to a virtual generateEvent() method. A virtual initGenerator() method is also called just before the first call to generateEvent(). ; Reimplemented in RooSimSplitGenContext, and RooBinnedGenContext.; Definition at line 130 of file RooAbsGenContext.cxx. ◆ generateEvent(). virtual void RooAbsGenContext::generateEvent ; (; RooArgSet & ; theEvent, . Int_t ; remaining . ). pure virtual . Implemented in RooAddGenContext, RooBinnedGenContext, RooConvGenContext, RooEffGenContext, RooGenContext, RooProdGenContext, RooSimGenContext, and RooSimSplitGenContext. ◆ initGenerator(). void RooAbsGenContext::initGenerator ; (; const RooArgSet & ; theEvent). virtual . Interface function to initialize context for generation for given set of observables.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsGenContext.html:18812,avail,available,18812,doc/master/classRooAbsGenContext.html,https://root.cern,https://root.cern/doc/master/classRooAbsGenContext.html,1,['avail'],['available']
Availability, * TGraph2DAsymmErrors::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGraph2DAsymmErrors::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGraph2DAsymmErrors::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 80 of file TGraph2DAsymmErrors.h. ◆ DeclFileName(). static const char * TGraph2DAsymmErrors::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 80 of file TGraph2DAsymmErrors.h. ◆ GetErrorX(). Double_t TGraph2DAsymmErrors::GetErrorX ; (; Int_t ; bin); const. overridevirtual . Returns the combined error along X at point i by computing the average of the lower and upper variance. ; Reimplemented from TGraph2D.; Definition at line 246 of file TGraph2DAsymmErrors.cxx. ◆ GetErrorXhigh(). Double_t TGraph2DAsymmErrors::GetErrorXhigh ; (; Int_t ; i); const. Returns the high error along X at point i. ; Definition at line 269 of file TGraph2DAsymmErrors.cxx. ◆ GetErrorXlow(). Double_t TGraph2DAsymmErrors::GetErrorXlow ; (; Int_t ; i); const. Returns the low error along X at point i. ; Definition at line 259 of file TGraph2DAsymmErrors.cxx. ◆ GetErrorY(). Double_t TGraph2DAsymmErrors::GetErrorY ; (; Int_t ; bin); const. overridevirtual . Returns the combined error along Y at point i by computing the average of the lower and upper variance. ; Reimplemented from TGraph2D.; Definition at line 280 of file TGraph2DAsymmErrors.cxx. ◆ GetErrorYhigh(). Double_t TGraph2DAsymmErrors::GetErrorYhigh ; (; Int_t ; i); const. Returns the high error along Y at point i. ; Definition at line 304 of file TGraph2DAsymmErrors.cxx. ◆ GetErrorYlow(). Double_t TGraph2DAsymmErrors::GetErrorYlow ; (; Int_t ; i); const. Returns the low error along Y at point i. ; Definition at line 294 of file TGraph2DAsymmErrors.cxx. ◆ GetErrorZ(). Double_t TGraph2DAsymmErrors::GetErrorZ ; (; Int_t ; bin,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2DAsymmErrors.html:32321,error,error,32321,doc/master/classTGraph2DAsymmErrors.html,https://root.cern,https://root.cern/doc/master/classTGraph2DAsymmErrors.html,1,['error'],['error']
Availability, * TGraph2DAsymmErrors::GetEYhigh ; (; ); const. inlineoverridevirtual . Reimplemented from TGraph2D.; Definition at line 64 of file TGraph2DAsymmErrors.h. ◆ GetEYlow(). Double_t * TGraph2DAsymmErrors::GetEYlow ; (; ); const. inlineoverridevirtual . Reimplemented from TGraph2D.; Definition at line 63 of file TGraph2DAsymmErrors.h. ◆ GetEZhigh(). Double_t * TGraph2DAsymmErrors::GetEZhigh ; (; ); const. inlineoverridevirtual . Reimplemented from TGraph2D.; Definition at line 66 of file TGraph2DAsymmErrors.h. ◆ GetEZlow(). Double_t * TGraph2DAsymmErrors::GetEZlow ; (; ); const. inlineoverridevirtual . Reimplemented from TGraph2D.; Definition at line 65 of file TGraph2DAsymmErrors.h. ◆ GetXmaxE(). Double_t TGraph2DAsymmErrors::GetXmaxE ; (; ); const. overridevirtual . Returns the X maximum with errors. ; Reimplemented from TGraph2D.; Definition at line 349 of file TGraph2DAsymmErrors.cxx. ◆ GetXminE(). Double_t TGraph2DAsymmErrors::GetXminE ; (; ); const. overridevirtual . Returns the X minimum with errors. ; Reimplemented from TGraph2D.; Definition at line 360 of file TGraph2DAsymmErrors.cxx. ◆ GetYmaxE(). Double_t TGraph2DAsymmErrors::GetYmaxE ; (; ); const. overridevirtual . Returns the Y maximum with errors. ; Reimplemented from TGraph2D.; Definition at line 371 of file TGraph2DAsymmErrors.cxx. ◆ GetYminE(). Double_t TGraph2DAsymmErrors::GetYminE ; (; ); const. overridevirtual . Returns the Y minimum with errors. ; Reimplemented from TGraph2D.; Definition at line 382 of file TGraph2DAsymmErrors.cxx. ◆ GetZmaxE(). Double_t TGraph2DAsymmErrors::GetZmaxE ; (; ); const. overridevirtual . Returns the Z maximum with errors. ; Reimplemented from TGraph2D.; Definition at line 393 of file TGraph2DAsymmErrors.cxx. ◆ GetZminE(). Double_t TGraph2DAsymmErrors::GetZminE ; (; ); const. overridevirtual . Returns the Z minimum with errors. ; Reimplemented from TGraph2D.; Definition at line 404 of file TGraph2DAsymmErrors.cxx. ◆ IsA(). TClass * TGraph2DAsymmErrors::IsA ; (; ); const. ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2DAsymmErrors.html:35308,error,errors,35308,doc/master/classTGraph2DAsymmErrors.html,https://root.cern,https://root.cern/doc/master/classTGraph2DAsymmErrors.html,1,['error'],['errors']
Availability," * TGraphBentErrors::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGraphBentErrors::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 101 of file TGraphBentErrors.h. ◆ ComputeRange(). void TGraphBentErrors::ComputeRange ; (; Double_t & ; xmin, . Double_t & ; ymin, . Double_t & ; xmax, . Double_t & ; ymax . ); const. overridevirtual . Compute range. ; Reimplemented from TGraph.; Definition at line 248 of file TGraphBentErrors.cxx. ◆ CopyAndRelease(). void TGraphBentErrors::CopyAndRelease ; (; Double_t ** ; newarrays, . Int_t ; ibegin, . Int_t ; iend, . Int_t ; obegin . ). overrideprotectedvirtual . Copy and release. ; Reimplemented from TGraph.; Definition at line 278 of file TGraphBentErrors.cxx. ◆ CopyPoints(). Bool_t TGraphBentErrors::CopyPoints ; (; Double_t ** ; arrays, . Int_t ; ibegin, . Int_t ; iend, . Int_t ; obegin . ). overrideprotectedvirtual . Copy errors from fE***to arrays[***] or to f*** Copy points. ; Reimplemented from TGraph.; Definition at line 312 of file TGraphBentErrors.cxx. ◆ CtorAllocate(). Bool_t TGraphBentErrors::CtorAllocate ; (; ). protected . Should be called from ctors after fNpoints has been set. ; Definition at line 346 of file TGraphBentErrors.cxx. ◆ DeclFileName(). static const char * TGraphBentErrors::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 101 of file TGraphBentErrors.h. ◆ DoMerge(). Bool_t TGraphBentErrors::DoMerge ; (; const TGraph * ; g). overrideprotectedvirtual . Protected function to perform the merge operation of a graph with asymmetric errors. ; Reimplemented from TGraph.; Definition at line 367 of file TGraphBentErrors.cxx. ◆ FillZero(). void TGraphBentErrors::FillZero ; (; Int_t ; begin, . Int_t ; end, . Bool_t ; from_ctor = kTRUE . ). overrideprotectedvirtual . Set zero values for point arrays in the range [begin, end] ; Reimplemented from TGraph.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphBentErrors.html:38645,error,errors,38645,doc/master/classTGraphBentErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphBentErrors.html,1,['error'],['errors']
Availability," * delta * patternWeight;; 474 ++itDelta; //++itInvActFnc;; 475 }; 476 double error (0);; 477 ; 478 error += truth * log (probability);; 479 errorSum += error;; 480 }; 481 ; 482 return -errorSum * patternWeight;; 483 }; 484 ; 485 ; 486 ; 487 ; 488 ; 489 ; 490 ; 491 ; 492 ; 493/*! \brief compute the weight decay for regularization (L1 or L2); 494 *; 495 *; 496 */; 497 template <typename ItWeight>; 498 double weightDecay (double error, ItWeight itWeight, ItWeight itWeightEnd, double factorWeightDecay, EnumRegularization eRegularization); 499 {; 500 if (eRegularization == EnumRegularization::L1); 501 {; 502 // weight decay (regularization); 503 double w = 0;; 504 size_t n = 0;; 505 for (; itWeight != itWeightEnd; ++itWeight, ++n); 506 {; 507 double weight = (*itWeight);; 508 w += std::fabs (weight);; 509 }; 510 return error + 0.5 * w * factorWeightDecay / n;; 511 }; 512 else if (eRegularization == EnumRegularization::L2); 513 {; 514 // weight decay (regularization); 515 double w = 0;; 516 size_t n = 0;; 517 for (; itWeight != itWeightEnd; ++itWeight, ++n); 518 {; 519 double weight = (*itWeight);; 520 w += weight*weight;; 521 }; 522 return error + 0.5 * w * factorWeightDecay / n;; 523 }; 524 else; 525 return error;; 526 }; 527 ; 528 ; 529 ; 530 ; 531 ; 532 ; 533 ; 534 ; 535 ; 536 ; 537 ; 538 ; 539 ; 540 ; 541/*! \brief apply the weights (and functions) in forward direction of the DNN; 542 *; 543 *; 544 */; 545 template <typename LAYERDATA>; 546 void forward (const LAYERDATA& prevLayerData, LAYERDATA& currLayerData); 547 {; 548 if (prevLayerData.hasDropOut ()); 549 {; 550 applyWeights<true> (prevLayerData.valuesBegin (), prevLayerData.valuesEnd (),; 551 currLayerData.weightsBegin (),; 552 currLayerData.valuesBegin (), currLayerData.valuesEnd (),; 553 prevLayerData.dropOut ());; 554 }; 555 else; 556 {; 557 bool dummy = true;; 558 applyWeights<false> (prevLayerData.valuesBegin (), prevLayerData.valuesEnd (),; 559 currLayerData.weightsBegin (),; 560 currLayerData.valuesBegin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:15288,error,error,15288,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,1,['error'],['error']
Availability," * fGrdDefinition TMinuit.h:81; TMinuit::mntinyvirtual void mntiny(Double_t epsp1, Double_t &epsbak)To find the machine precision.Definition TMinuit.cxx:7661; TMinuit::mninexvirtual void mninex(Double_t *pint)Transforms from internal coordinates (PINT) to external (U)Definition TMinuit.cxx:4506; TMinuit::fCtitlTString fCtitlDefinition TMinuit.h:168; TMinuit::mnpintvirtual void mnpint(Double_t &pexti, Int_t i, Double_t &pinti)Calculates the internal parameter value PINTI.Definition TMinuit.cxx:6017; TMinuit::fCONTwDouble_t * fCONTwDefinition TMinuit.h:101; TMinuit::fNfcwarInt_t fNfcwar[20]Definition TMinuit.h:152; TMinuit::fMIGRvgDouble_t * fMIGRvgDefinition TMinuit.h:111; TMinuit::mnfixpvirtual void mnfixp(Int_t iint, Int_t &ierr)Removes parameter IINT from the internal parameter list.Definition TMinuit.cxx:3169; TMinuit::fIsyswrInt_t fIsyswrDefinition TMinuit.h:132; TMinuit::fG2Double_t * fG2Definition TMinuit.h:82; TMinuit::mnmnotvirtual void mnmnot(Int_t ilax, Int_t ilax2, Double_t &val2pl, Double_t &val2mi)Performs a MINOS error analysis on one parameter.Definition TMinuit.cxx:5463; TMinuit::fNpaglnInt_t fNpaglnDefinition TMinuit.h:135; TMinuit::fMNOTxdevDouble_t * fMNOTxdevDefinition TMinuit.h:113; TMinuit::mncrckvirtual void mncrck(TString crdbuf, Int_t maxcwd, TString &comand, Int_t &lnc, Int_t mxp, Double_t *plist, Int_t &llist, Int_t &ierr, Int_t isyswr)Cracks the free-format input.Definition TMinuit.cxx:1677; TMinuit::fMNOTgccDouble_t * fMNOTgccDefinition TMinuit.h:115; TMinuit::DefineParametervirtual Int_t DefineParameter(Int_t parNo, const char *name, Double_t initVal, Double_t initErr, Double_t lowerLimit, Double_t upperLimit)Define a parameter.Definition TMinuit.cxx:695; TMinuit::fMaxpar2Int_t fMaxpar2Definition TMinuit.h:46; TMinuit::fFval3Double_t fFval3Definition TMinuit.h:52; TMinuit::fVhmatDouble_t * fVhmatDefinition TMinuit.h:89; TMinuit::fNstkrdInt_t fNstkrdDefinition TMinuit.h:138; TMinuit::mnstatvirtual void mnstat(Double_t &fmin, Double_t &fe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:272291,error,error,272291,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['error'],['error']
Availability," *************************************************************************/; 10 ; 11#include <ROOT/RSqliteDS.hxx>; 12#include <ROOT/RRawFile.hxx>; 13 ; 14#include ""TError.h""; 15#include ""TRandom.h""; 16#include ""TSystem.h""; 17 ; 18#include <algorithm>; 19#include <cctype>; 20#include <cerrno>; 21#include <cstring> // for memcpy; 22#include <ctime>; 23#include <memory> // for placement new; 24#include <stdexcept>; 25#include <utility>; 26 ; 27#include <sqlite3.h>; 28 ; 29namespace {; 30 ; 31// In order to provide direct access to remote sqlite files through HTTP and HTTPS, this datasource provides a custom; 32// ""SQlite VFS module"" that uses Davix for data access. The SQlite VFS modules are roughly what TSystem is; 33// for ROOT -- an abstraction of the operating system interface.; 34//; 35// SQlite allows for registering custom VFS modules, which are a set of C callback functions that SQlite invokes when; 36// it needs to read from a file, write to a file, etc. More information is available under https://sqlite.org/vfs.html; 37//; 38// In the context of a data source, SQlite will only ever call reading functions from the VFS module, the sqlite; 39// files are not modified. Therefore, only a subset of the callback functions provide a non-trivial implementation.; 40// The custom VFS module uses a RRawFile for the byte access, thereby it can access local and remote files.; 41 ; 42////////////////////////////////////////////////////////////////////////////; 43/// SQlite VFS modules are identified by string names. The name has to be unique for the entire application.; 44constexpr char const *gSQliteVfsName = ""ROOT-Davix-readonly"";; 45 ; 46////////////////////////////////////////////////////////////////////////////; 47/// Holds the state of an open sqlite database. Objects of this struct are created in VfsRdOnlyOpen(); 48/// and then passed by sqlite to the file I/O callbacks (read, close, etc.). This uses C style inheritance; 49/// where the struct starts with a sqlite3_f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RSqliteDS_8cxx_source.html:1520,avail,available,1520,doc/master/RSqliteDS_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RSqliteDS_8cxx_source.html,1,['avail'],['available']
Availability," *-* =====================================================. The projection is always of the type TH3D. if option ""E"" is specified, the errors are computed. (default); if option ""B"" is specified, the content of bin of the returned histogram; will be equal to the GetBinEntries(bin) of the profile,; if option ""C=E"" the bin contents of the projection are set to the; bin errors of the profile. void PutStats(Double_t* stats); Replace current statistics with the values in array stats. void Reset(Option_t* option = """"); -*-*Reset contents of a Profile3D histogram; *-* =======================================. void RebinAxis(Double_t x, TAxis* axis); Profile histogram is resized along axis such that x is in the axis range.; The new axis limits are recomputed by doubling iteratively; the current axis range until the specified value x is within the limits.; The algorithm makes a copy of the histogram, then loops on all bins; of the old histogram to fill the rebinned histogram.; Takes into account errors (Sumw2) if any.; The bit kCanRebin must be set before invoking this function.; Ex: h->SetBit(TH1::kCanRebin);. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void Scale(Double_t c1 = 1, Option_t* option = """"); *-*-*-*-*Multiply this profile2D by a constant c1*-*-*-*-*-*-*-*-*; *-* ========================================. this = c1*this. This function uses the services of TProfile3D::Add. void SetBinEntries(Int_t bin, Double_t w); Set the number of entries in bin*-*-*-; *-* ================================. void SetBins(Int_t nbinsx, Double_t xmin, Double_t xmax, Int_t nbinsy, Double_t ymin, Double_t ymax, Int_t nbinsz, Double_t zmin, Double_t zmax); -*-*-*-*-*-*-*Redefine x, y and z axis parameters*-*-*-*-*-*-*-*-*-*-*-*; *-* ===========================. void SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins, Int_t nz, const Double_t* zBins); -*-*-*-*-*-*-*Redefine x, y and z axis paramet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProfile3D.html:40062,error,errors,40062,root/html532/TProfile3D.html,https://root.cern,https://root.cern/root/html532/TProfile3D.html,2,['error'],['errors']
Availability," *-* =====================================================. The projection is always of the type TH3D. if option ""E"" is specified, the errors are computed. (default); if option ""B"" is specified, the content of bin of the returned histogram; will be equal to the GetBinEntries(bin) of the profile,; if option ""C=E"" the bin contents of the projection are set to the; bin errors of the profile. void PutStats(Double_t* stats); Replace current statistics with the values in array stats. void Reset(Option_t* option = """"); -*-*Reset contents of a Profile3D histogram; *-* =======================================. void RebinAxis(Double_t x, TAxis* axis); Profile histogram is resized along axis such that x is in the axis range.; The new axis limits are recomputed by doubling iteratively; the current axis range until the specified value x is within the limits.; The algorithm makes a copy of the histogram, then loops on all bins; of the old histogram to fill the rebinned histogram.; Takes into account errors (Sumw2) if any.; The bit kCanRebin must be set before invoking this function.; Ex: h->SetBit(TH1::kCanRebin);. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void Scale(Double_t c1 = 1, Option_t* option = """"); *-*-*-*-*Multiply this profile2D by a constant c1*-*-*-*-*-*-*-*-*; *-* ========================================. this = c1*this. This function uses the services of TProfile3D::Add. void SetBinEntries(Int_t bin, Double_t w); Set the number of entries in bin*-*-*-; *-* ================================. void SetBins(Int_t nbinsx, Double_t xmin, Double_t xmax, Int_t nbinsy, Double_t ymin, Double_t ymax, Int_t nbinsz, Double_t zmin, Double_t zmax); Redefine x axis parameters*-*-*-; *-* ===========================. void SetBuffer(Int_t buffersize, Option_t* opt = """"); set the buffer size in units of 8 bytes (double). void SetErrorOption(Option_t* option = """"); -*-*Set option to compute profile2D errors; *-* ===",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProfile3D.html:39247,error,errors,39247,root/html528/TProfile3D.html,https://root.cern,https://root.cern/root/html528/TProfile3D.html,2,['error'],['errors']
Availability," *-* internal parameter values. this factor is one for; *-* parameters which are not limited. called from MNEMAT.; *. void mneig(Double_t* a, Int_t ndima, Int_t n, Int_t mits, Double_t* work, Double_t precis, Int_t& ifault); Compute matrix eigen values*-; *-* ===========================; System generated locals. void mnemat(Double_t* emat, Int_t ndim); Calculates the external error matrix from the internal matrix. Note that if the matrix is declared like Double_t matrix[5][5]; in the calling program, one has to call mnemat with, eg; gMinuit->mnemat(&matrix[0][0],5);. void mnerrs(Int_t number, Double_t& eplus, Double_t& eminus, Double_t& eparab, Double_t& gcc); Utility routine to get MINOS errors*-; *-* ===================================; *-* Called by user.; *-* NUMBER is the parameter number; *-* values returned by MNERRS:; *-* EPLUS, EMINUS are MINOS errors of parameter NUMBER,; *-* EPARAB is 'parabolic' error (from error matrix).; *-* (Errors not calculated are set = 0); *-* GCC is global correlation coefficient from error matrix; *. void mneval(Double_t anext, Double_t& fnext, Int_t& ierev); Evaluates the function being analyzed by MNCROS*-; *-* ===============================================; *-* Evaluates the function being analyzed by MNCROS, which is; *-* generally the minimum of FCN with respect to all remaining; *-* variable parameters. The class data members contains the; *-* data necessary to know the values of U(KE1CR) and U(KE2CR); *-* to be used, namely U(KE1CR) = XMIDCR + ANEXT*XDIRCR; *-* and (if KE2CR .NE. 0) U(KE2CR) = YMIDCR + ANEXT*YDIRCR; *. void mnexcm(const char* comand, Double_t* plist, Int_t llist, Int_t& ierflg); Interprets a command and takes appropriate action*-*-; *-* =================================================; *-* either directly by skipping to the corresponding code in; *-* MNEXCM, or by setting up a call to a function; -; *-* recognized MINUIT commands:; *-* obsolete commands:; *-* IERFLG is now (94.5) defined the same as ICO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMinuit.html:40462,error,error,40462,root/html528/TMinuit.html,https://root.cern,https://root.cern/root/html528/TMinuit.html,14,"['Error', 'error']","['Errors', 'error']"
Availability," *argc, char **argv);  Get and handle command line options. ;  ; TString GetSetup ();  It gets the ROOT installation setup as TString. ;  ; TSignalHandler * GetSignalHandler () const;  ; virtual void HandleException (Int_t sig);  Handle exceptions (kSigBus, kSigSegmentationViolation, kSigIllegalInstruction and kSigFloatingException) trapped in TSystem. ;  ; virtual void HandleIdleTimer ();  Handle idle timeout. ;  ; virtual Bool_t HandleTermInput ();  ; virtual void Hide ();  ; virtual void Iconify ();  ; virtual void Init ();  ; void InitializeGraphics (Bool_t only_web=kFALSE);  Initialize the graphics environment. ;  ; TObjArray * InputFiles () const;  ; TClass * IsA () const override;  ; virtual Bool_t IsCmdThread ();  ; Bool_t IsRunning () const;  ; virtual void KeyPressed (Int_t key);  Emit signal when console keyboard key was pressed. ;  ; virtual void LineProcessed (const char *line);  Emit signal when a line has been processed. ;  ; virtual void Lower ();  ; void ls (Option_t *option="""") const override;  Show available sessions. ;  ; Bool_t NoLogoOpt () const;  ; Bool_t NoLogOpt () const;  ; virtual void Open ();  ; void OpenForumTopic (const TString &type);  It opens a Forum topic in a web browser with prefilled ROOT version. ;  ; void OpenGitHubIssue (const TString &type);  It opens a GitHub issue in a web browser with prefilled ROOT version. ;  ; void OpenInBrowser (const TString &url);  The function generates and executes a command that loads the Doxygen URL in a browser. ;  ; void OpenReferenceGuideFor (const TString &strippedClass);  It opens the online reference guide, generated with Doxygen, for the chosen scope (class/namespace/struct) or member (method/function/ data member/enumeration/enumerator. ;  ; virtual Longptr_t ProcessFile (const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE);  Process a file containing a C++ macro. ;  ; virtual Longptr_t ProcessLine (const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr);  Process a single comm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplication.html:3494,avail,available,3494,doc/master/classTApplication.html,https://root.cern,https://root.cern/doc/master/classTApplication.html,1,['avail'],['available']
Availability," *err_msg = ""Not enough memory for worker socket array"";; 20152 mg_cry_ctx_internal(ctx, ""%s"", err_msg);; 20153 mg_free(ctx->client_wait_events);; 20154 mg_free(ctx->worker_threadids);; 20155 ; 20156 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20157 mg_snprintf(NULL,; 20158 NULL, /* No truncation check for error buffers */; 20159 error->text,; 20160 error->text_buffer_size,; 20161 ""%s"",; 20162 err_msg);; 20163 }; 20164 free_context(ctx);; 20165 pthread_setspecific(sTlsKey, NULL);; 20166 return NULL;; 20167 }; 20168 ; 20169 for (i = 0; (unsigned)i < ctx->cfg_worker_threads; i++) {; 20170 ctx->client_wait_events[i] = event_create();; 20171 if (ctx->client_wait_events[i] == 0) {; 20172 const char *err_msg = ""Error creating worker event %i"";; 20173 mg_cry_ctx_internal(ctx, err_msg, i);; 20174 while (i > 0) {; 20175 i--;; 20176 event_destroy(ctx->client_wait_events[i]);; 20177 }; 20178 mg_free(ctx->client_socks);; 20179 mg_free(ctx->client_wait_events);; 20180 mg_free(ctx->worker_threadids);; 20181 ; 20182 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20183 mg_snprintf(NULL,; 20184 NULL, /* No truncation check for error buffers */; 20185 error->text,; 20186 error->text_buffer_size,; 20187 err_msg,; 20188 i);; 20189 }; 20190 free_context(ctx);; 20191 pthread_setspecific(sTlsKey, NULL);; 20192 return NULL;; 20193 }; 20194 }; 20195#endif; 20196 ; 20197#if defined(USE_TIMERS); 20198 if (timers_init(ctx) != 0) {; 20199 const char *err_msg = ""Error creating timers"";; 20200 mg_cry_ctx_internal(ctx, ""%s"", err_msg);; 20201 ; 20202 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20203 mg_snprintf(NULL,; 20204 NULL, /* No truncation check for error buffers */; 20205 error->text,; 20206 error->text_buffer_size,; 20207 ""%s"",; 20208 err_msg);; 20209 }; 20210 free_context(ctx);; 20211 pthread_setspecific(sTlsKey, NULL);; 20212 return NULL;; 20213 }; 20214#endif; 20215 ; 20216 /* Context has been created - init user libraries */; 20217 if (ctx->callbacks.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:603332,error,error,603332,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,10,['error'],['error']
Availability," *err_msg = ""Not enough memory for worker socket array"";; 20153 mg_cry_ctx_internal(ctx, ""%s"", err_msg);; 20154 mg_free(ctx->client_wait_events);; 20155 mg_free(ctx->worker_threadids);; 20156 ; 20157 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20158 mg_snprintf(NULL,; 20159 NULL, /* No truncation check for error buffers */; 20160 error->text,; 20161 error->text_buffer_size,; 20162 ""%s"",; 20163 err_msg);; 20164 }; 20165 free_context(ctx);; 20166 pthread_setspecific(sTlsKey, NULL);; 20167 return NULL;; 20168 }; 20169 ; 20170 for (i = 0; (unsigned)i < ctx->cfg_worker_threads; i++) {; 20171 ctx->client_wait_events[i] = event_create();; 20172 if (ctx->client_wait_events[i] == 0) {; 20173 const char *err_msg = ""Error creating worker event %i"";; 20174 mg_cry_ctx_internal(ctx, err_msg, i);; 20175 while (i > 0) {; 20176 i--;; 20177 event_destroy(ctx->client_wait_events[i]);; 20178 }; 20179 mg_free(ctx->client_socks);; 20180 mg_free(ctx->client_wait_events);; 20181 mg_free(ctx->worker_threadids);; 20182 ; 20183 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20184 mg_snprintf(NULL,; 20185 NULL, /* No truncation check for error buffers */; 20186 error->text,; 20187 error->text_buffer_size,; 20188 err_msg,; 20189 i);; 20190 }; 20191 free_context(ctx);; 20192 pthread_setspecific(sTlsKey, NULL);; 20193 return NULL;; 20194 }; 20195 }; 20196#endif; 20197 ; 20198#if defined(USE_TIMERS); 20199 if (timers_init(ctx) != 0) {; 20200 const char *err_msg = ""Error creating timers"";; 20201 mg_cry_ctx_internal(ctx, ""%s"", err_msg);; 20202 ; 20203 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20204 mg_snprintf(NULL,; 20205 NULL, /* No truncation check for error buffers */; 20206 error->text,; 20207 error->text_buffer_size,; 20208 ""%s"",; 20209 err_msg);; 20210 }; 20211 free_context(ctx);; 20212 pthread_setspecific(sTlsKey, NULL);; 20213 return NULL;; 20214 }; 20215#endif; 20216 ; 20217 /* Context has been created - init user libraries */; 20218 if (ctx->callbacks.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:603365,error,error,603365,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,10,['error'],['error']
Availability," *frame1 = m.frame(Bins(40), Title(""Argus model and data""));; data->plotOn(frame1);; argus.plotOn(frame1);; ; // F i t m o d e l t o d a t a; // ---------------------------------; ; // The ARGUS background shape has a sharp kinematic cutoff at m=m0; // and is prone to evaluation errors if the cutoff parameter m0; // is floated: when the pdf cutoff value is lower than that in data; // events with m>m0 will have zero probability; ; // Perform unbinned ML fit. Print detailed error messages for up to; // 10 events per likelihood evaluation. The default error handling strategy; // is to return a very high value of the likelihood to MINUIT if errors occur,; // which will force MINUIT to retreat from the problematic area; ; argus.fitTo(*data, PrintEvalErrors(10));; ; // Perform another fit. In this configuration only the number of errors per; // likelihood evaluation is shown, if it is greater than zero. The; // EvalErrorWall(false) arguments disables the default error handling strategy; // and will cause the actual (problematic) value of the likelihood to be passed; // to MINUIT.; //; // NB: Use of this option is NOT recommended as default strategy as broken -log(L) values; // can often be lower than 'good' ones because offending events are removed.; // This may effectively create a false minimum in problem areas. This is clearly; // illustrated in the second plot; ; m0.setError(0.1);; argus.fitTo(*data, PrintEvalErrors(0), EvalErrorWall(false));; ; // P l o t l i k e l i h o o d a s f u n c t i o n o f m 0; // ------------------------------------------------------------------; ; // Construct likelihood function of model and data; std::unique_ptr<RooAbsReal> nll{argus.createNLL(*data)};; ; // Plot likelihood in m0 in range that includes problematic values; // In this configuration no messages are printed for likelihood evaluation errors,; // but if an likelihood value evaluates with error, the corresponding value; // on the curve will be set to the value given in EvalErro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html:2016,error,error,2016,doc/master/rf606__nllerrorhandling_8C.html,https://root.cern,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html,1,['error'],['error']
Availability," *info) const =0; TInterpreter::FuncTempInfo_IsValidvirtual Bool_t FuncTempInfo_IsValid(FuncTempInfo_t *) const =0; TInterpreter::CallFunc_SetArgImplvoid CallFunc_SetArgImpl(CallFunc_t *func, const U &head)Definition TInterpreter.h:367; TInterpreter::BaseClassInfo_Propertyvirtual Long_t BaseClassInfo_Property(BaseClassInfo_t *) constDefinition TInterpreter.h:447; TInterpreter::CallFunc_ExecDoublevirtual Double_t CallFunc_ExecDouble(CallFunc_t *, void *) constDefinition TInterpreter.h:321; TInterpreter::CallFunc_SetArgvirtual void CallFunc_SetArg(CallFunc_t *, Long_t) const =0; TInterpreter::GetInterfaceMethodvirtual void * GetInterfaceMethod(TClass *cl, const char *method, const char *params, Bool_t objectIsConst=kFALSE)=0; TInterpreter::GetCurrentMacroNamevirtual const char * GetCurrentMacroName() constDefinition TInterpreter.h:257; TInterpreter::Executevirtual void Execute(TObject *obj, TClass *cl, const char *method, const char *params, int *error=nullptr)=0; TInterpreter::TypeNamevirtual const char * TypeName(const char *s)=0; TListOfEnumsA collection of TEnum objects designed for fast access given a DeclId_t and for keep track of TEnum t...Definition TListOfEnums.h:33; TLockGuardDefinition TVirtualMutex.h:70; TMemberInspectorAbstract base class for accessing the data-members of a class.Definition TMemberInspector.h:31; TMethodEach ROOT class (see TClass) has a linked list of methods.Definition TMethod.h:38; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TObjArrayAn array of TObjects.Definition TObjArray.h:31; TObjectMother of all ROOT objects.Definition TObject.h:41; TSeqCollectionSequenceable collection abstract base class.Definition TSeqCollection.h:28; TStringBasic string class.Definition TString.h:139; TVirtualMutexThis class implements a mutex interface.Definition TVirtualMutex.h:32; bool; double; int; unsigned int; lineTLine * lineDefinition entrylistblock_figure1.C:235; ROOTtbb::task_arena is an alias of tbb::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TInterpreter_8h_source.html:79750,error,error,79750,doc/master/TInterpreter_8h_source.html,https://root.cern,https://root.cern/doc/master/TInterpreter_8h_source.html,1,['error'],['error']
Availability," *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; Double_t fA0Calc;  calculated value of background a0 parameter ;  ; Double_t fA0Err;  error value of background a0 parameter ;  ; Double_t fA0Init;  initial value of background a0 parameter(backgroud is estimated as a0+a1*x+a2*x*x) ;  ; Double_t fA1Calc;  calculated value of background a1 parameter ;  ; Double_t fA1Err;  error value of background a1 parameter ;  ; Double_t fA1Init;  initial value of background a1 parameter(backgroud is estimated as a0+a1*x+a2*x*x) ;  ; Double_t fA2Calc;  calculated value of background a2 parameter ;  ; Double_t fA2Err;  error value of background a2 parameter ;  ; Double_t fA2Init;  initial value of background a2 parameter(backgroud is estimated as a0+a1*x+a2*x*x) ;  ; Double_t fAlpha;  convergence coefficient, input parameter, it should be positive number and <=1, for details see references ;  ; Int_t fAlphaOptim;  optimization of convergence algorithm, possible values kFitAlphaHalving, kFitAlphaOptimal ;  ; Double_t * fAmpCalc;  [fNPeaks] array of calculated values of fitted amplitudes, output parameters ;  ; Double_t * fAmpErr;  [fNPeaks] array of amplitude errors ;  ; Double_t * fAmpInit;  [fNPeaks] array of initial values of peaks amplitudes, input parameters ;  ; Double_t * fArea;  [fNPeaks] array of calculated areas of peaks ;  ; Double_t * fAreaErr;  [fNPeaks] array of errors of peak areas ;  ; Double_t fBCalc;  calculated value of b parameter ;  ; Double_t fBErr;  error value of b parameter ;  ; Double_t fBInit;  initial value of b parameter (slope), for details see html manual and references ;  ; Double_t fChi;  here the fitting functions return resulting chi square ;  ; Int_t fFitTaylor;  order of Taylor expansion, possible values kFitTaylorOrderFirst, kFitTaylorOrderSecond. It applies only for Awmi fitting function. ;  ; Bool_t fFixA0;  logical value of a0 parameter, which allows to fix",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumFit.html:17622,error,error,17622,doc/master/classTSpectrumFit.html,https://root.cern,https://root.cern/doc/master/classTSpectrumFit.html,6,['error'],"['error', 'errors']"
Availability," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTDirectory.html:11642,error,error,11642,doc/v632/classTDirectory.html,https://root.cern,https://root.cern/doc/v632/classTDirectory.html,6,['error'],['error']
Availability," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer)",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLFile.html:21077,error,error,21077,doc/master/classTXMLFile.html,https://root.cern,https://root.cern/doc/master/classTXMLFile.html,15,['error'],['error']
Availability," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTChain.html:31394,error,error,31394,doc/v632/classTChain.html,https://root.cern,https://root.cern/doc/v632/classTChain.html,9,['error'],['error']
Availability," *method) const;  Use this method to implement an ""abstract"" method that you don't want to leave purely abstract. ;  ; virtual void AppendPad (Option_t *option="""");  Append graphics object to current pad. ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTClass.html:28598,error,error,28598,doc/v632/classTClass.html,https://root.cern,https://root.cern/doc/v632/classTClass.html,3,['error'],['error']
Availability," *name) final;  Undeclare obj called name. ;  ; bool DiagnoseIfInterpreterException (const std::exception &e) const final;  ; int DisplayClass (FILE *fout, const char *name, int base, int start) const final;  ; int DisplayIncludePath (FILE *fout) const final;  Interface to cling function. ;  ; void EndOfLineAction () final;  It calls a ""fantom"" method to synchronize user keyboard input and ROOT prompt line. ;  ; int Evaluate (const char *, TInterpreterValue &) final;  Get the interpreter value corresponding to the statement. ;  ; void Execute (const char *function, const char *params, int *error=nullptr) final;  Execute a global function with arguments params. ;  ; void Execute (TObject *obj, TClass *cl, const char *method, const char *params, Bool_t objectIsConst, int *error=nullptr);  Execute a method from class cl with arguments params. ;  ; void Execute (TObject *obj, TClass *cl, const char *method, const char *params, int *error=nullptr) final;  ; void Execute (TObject *obj, TClass *cl, TMethod *method, TObjArray *params, int *error=nullptr) final;  Execute a method from class cl with the arguments in array params (params[0] ... params[n] = array of TObjString parameters). ;  ; Longptr_t ExecuteMacro (const char *filename, EErrorCode *error=nullptr) final;  Execute a cling macro. ;  ; void ExecuteWithArgsAndReturn (TMethod *method, void *address, const void *args[]=nullptr, int nargs=0, void *ret=nullptr) const final;  ; void * FindSym (const char *entry) const final;  Interface to cling function. ;  ; void ForgetMutexState () final;  ; void FuncTempInfo_Delete (FuncTempInfo_t *) const final;  Delete the FuncTempInfo_t. ;  ; Long_t FuncTempInfo_ExtraProperty (FuncTempInfo_t *) const final;  Return the property not already defined in Property See TDictionary's EFunctionProperty. ;  ; FuncTempInfo_t * FuncTempInfo_Factory (DeclId_t declid) const final;  Construct a FuncTempInfo_t. ;  ; FuncTempInfo_t * FuncTempInfo_FactoryCopy (FuncTempInfo_t *) const final;  Con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling.html:12893,error,error,12893,doc/master/classTCling.html,https://root.cern,https://root.cern/doc/master/classTCling.html,2,['error'],['error']
Availability," *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t *ybins);  Constructor (see TH2::TH2 for explanation of parameters) ;  ;  TH2C (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup);  Constructor (see TH2::TH2 for explanation of parameters) ;  ;  TH2C (const TH2C &h2c);  Copy constructor. ;  ;  ~TH2C () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny) override;  Increment 2D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Double_t w) override;  Increment 2D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy. ;  ; TClass * IsA () const override;  ; TH2C & operator= (const TH2C &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, errors, etc. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TH2C. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH2;  ~TH2 () override;  Destructor. ;  ; Int_t BufferEmpty (Int_t action=0) override;  Fill histogram with all entries in the buffer. ;  ; virtual Int_t Fill (const char *namex, const char *namey, Double_t w);  Increment cell defined by namex,namey by a weight w. ;  ; virtual Int_t Fill (const char *namex, Double_t y, Double_t w);  Increment cell defined by namex,y by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, Double_t w);  Increment cell defined by x,namey by a weight w. ;  ; Int_t Fill (Double_t x, Double_t y) override;  Increment cell defined by x,y by 1. ;  ; virtual Int_t Fill (Double_t x, Double_t y,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2C.html:2077,error,errors,2077,doc/master/classTH2C.html,https://root.cern,https://root.cern/doc/master/classTH2C.html,1,['error'],['errors']
Availability," *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t *ybins);  Constructor (see TH2::TH2 for explanation of parameters) ;  ;  TH2I (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup);  Constructor (see TH2::TH2 for explanation of parameters) ;  ;  TH2I (const TH2I &h2i);  Copy constructor. ;  ;  ~TH2I () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny) override;  Increment 2D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Double_t w) override;  Increment 2D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy. ;  ; TClass * IsA () const override;  ; TH2I & operator= (const TH2I &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, errors, etc. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TH2. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH2;  ~TH2 () override;  Destructor. ;  ; Int_t BufferEmpty (Int_t action=0) override;  Fill histogram with all entries in the buffer. ;  ; virtual Int_t Fill (const char *namex, const char *namey, Double_t w);  Increment cell defined by namex,namey by a weight w. ;  ; virtual Int_t Fill (const char *namex, Double_t y, Double_t w);  Increment cell defined by namex,y by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, Double_t w);  Increment cell defined by x,namey by a weight w. ;  ; Int_t Fill (Double_t x, Double_t y) override;  Increment cell defined by x,y by 1. ;  ; virtual Int_t Fill (Double_t x, Double_t y, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2I.html:2077,error,errors,2077,doc/master/classTH2I.html,https://root.cern,https://root.cern/doc/master/classTH2I.html,1,['error'],['errors']
Availability," *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, const Double_t *ybins);  Constructor (see TH2::TH2 for explanation of parameters) ;  ;  TH2L (const char *name, const char *title, Int_t nbinsx, Double_t xlow, Double_t xup, Int_t nbinsy, Double_t ylow, Double_t yup);  Constructor (see TH2::TH2 for explanation of parameters) ;  ;  TH2L (const TH2L &h2l);  Copy constructor. ;  ;  ~TH2L () override;  Destructor. ;  ; void AddBinContent (Int_t bin) override;  Increment bin content by 1. ;  ; void AddBinContent (Int_t bin, Double_t w) override;  Increment bin content by w. ;  ; void AddBinContent (Int_t binx, Int_t biny) override;  Increment 2D bin content by 1. ;  ; void AddBinContent (Int_t binx, Int_t biny, Double_t w) override;  Increment 2D bin content by a weight w. ;  ; void Copy (TObject &hnew) const override;  Copy. ;  ; TClass * IsA () const override;  ; TH2L & operator= (const TH2L &h1);  Operator =. ;  ; void Reset (Option_t *option="""") override;  Reset this histogram: contents, errors, etc. ;  ; void SetBinsLength (Int_t n=-1) override;  Set total number of bins including under/overflow Reallocate bin contents array. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TH2. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH2;  ~TH2 () override;  Destructor. ;  ; Int_t BufferEmpty (Int_t action=0) override;  Fill histogram with all entries in the buffer. ;  ; virtual Int_t Fill (const char *namex, const char *namey, Double_t w);  Increment cell defined by namex,namey by a weight w. ;  ; virtual Int_t Fill (const char *namex, Double_t y, Double_t w);  Increment cell defined by namex,y by a weight w. ;  ; virtual Int_t Fill (Double_t x, const char *namey, Double_t w);  Increment cell defined by x,namey by a weight w. ;  ; Int_t Fill (Double_t x, Double_t y) override;  Increment cell defined by x,y by 1. ;  ; virtual Int_t Fill (Double_t x, Double_t y, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2L.html:2079,error,errors,2079,doc/master/classTH2L.html,https://root.cern,https://root.cern/doc/master/classTH2L.html,1,['error'],['errors']
Availability," *object, TFunction *method, const char *params); Execute method with specified arguments for specified object. void Execute(TObject *object, TFunction *method, TObjArray *params); Execute method with specified arguments for specified object. void Popup(Int_t x, Int_t y, TObject* obj, TVirtualPad* c = 0, TVirtualPad* p = 0); Popup context menu at given location in canvas c and pad p for selected; object. void Popup(Int_t x, Int_t y, TObject* obj, TBrowser* b); Popup context menu at given location in browser b for selected object. TContextMenu(const TContextMenu& ). TContextMenu& operator=(const TContextMenu& ). void DisplayPopUp(Int_t x, Int_t y); { if (fContextMenuImp) fContextMenuImp->DisplayPopup(x, y); }. TContextMenu(). void Action(TObject *object, TMethod *method). void Action(TObject *object, TToggle *toggle). void Execute(const char *method, const char *params, Int_t *error=0); { TObject::Execute(method, params, error); }. void Execute(TMethod *method, TObjArray *params, Int_t *error=0); { TObject::Execute(method, params, error); }. void Execute(TObject *object, TFunction *method, const char *params). void Execute(TObject *object, TFunction *method, TObjArray *params). TBrowser * GetBrowser(); { return fBrowser; }. TContextMenuImp * GetContextMenuImp(); { return fContextMenuImp; }. TVirtualPad * GetSelectedCanvas(); { return fSelectedCanvas; }. TFunction * GetSelectedMethod(); { return fSelectedMethod; }. TObject * GetSelectedObject(); { return fSelectedObject; }. TObject * GetCalledObject(); { return fCalledObject; }. TClassMenuItem * GetSelectedMenuItem(); { return fSelectedMenuItem; }. TVirtualPad * GetSelectedPad(); { return fSelectedPad; }. void SetCanvas(TVirtualPad* c); { fSelectedCanvas = c; }. void SetBrowser(TBrowser* b); { fBrowser = b; }. void SetMethod(TFunction* m); { fSelectedMethod = m; }. void SetCalledObject(TObject* o); { fCalledObject = o; }. void SetSelectedMenuItem(TClassMenuItem* mi); { fSelectedMenuItem = mi; }. void SetNameTitle(cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TContextMenu.html:9940,error,error,9940,root/html526/TContextMenu.html,https://root.cern,https://root.cern/root/html526/TContextMenu.html,2,['error'],['error']
Availability," *option="""")Set option to compute profile3D errors.Definition TProfile3D.cxx:1365; TProfile3D::BufferFillInt_t BufferFill(Double_t, Double_t, Double_t) overrideDefinition TProfile3D.h:45; TProfile3D::SetBinsvoid SetBins(Int_t, Double_t, Double_t) overrideRedefine x axis parameters.Definition TProfile3D.h:77; TProfile3D::ProjectionXYZvirtual TH3D * ProjectionXYZ(const char *name=""_pxyz"", Option_t *option=""e"") constProject this profile3D into a 3-D histogram along X,Y,Z.Definition TProfile3D.cxx:961; TProfile3D::GetBinErrorDouble_t GetBinError(Int_t, Int_t) const overrideDefinition TProfile3D.h:115; TProfile3D::GetB2Double_t * GetB2()Definition TProfile3D.h:74; TProfile3D::AddBool_t Add(TF1 *h1, Double_t c1=1, Option_t *option="""") overridePerforms the operation: this = this + c1*f1 .Definition TProfile3D.cxx:172; TProfile3D::GetBinContentDouble_t GetBinContent(Int_t bin) const overrideReturn bin content of a Profile3D histogram.Definition TProfile3D.cxx:691; TProfile3D::fErrorModeEErrorType fErrorModeOption to compute errors.Definition TProfile3D.h:35; TProfile3D::FillInt_t Fill(Double_t, const char *, const char *, Double_t) overrideIncrement cell defined by x,namey,namez by a weight w.Definition TProfile3D.h:61; TProfile3D::GetBinSumw2virtual const TArrayD * GetBinSumw2() constDefinition TProfile3D.h:121; TProfile3D::SetBinsLengthvoid SetBinsLength(Int_t n=-1) overrideSet total number of bins including under/overflow.Definition TProfile3D.cxx:1318; TProfile3D::GetBinEntriesvirtual Double_t GetBinEntries(Int_t bin) constReturn bin entries of a Profile3D histogram.Definition TProfile3D.cxx:704; TProfile3D::GetBinErrorDouble_t GetBinError(Int_t binx, Int_t biny, Int_t binz) const overrideDefinition TProfile3D.h:117; TProfile3D::GetTminvirtual Double_t GetTmin() constDefinition TProfile3D.h:124; TProfile3D::GetW2Double_t * GetW2()Definition TProfile3D.h:76; TProfile3D::DivideBool_t Divide(TF1 *h1, Double_t c1=1) overridePerforms the operation: this = this/(c1*f1) .Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8h_source.html:17936,error,errors,17936,doc/master/TProfile3D_8h_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8h_source.html,1,['error'],['errors']
Availability," *option="""")TObjectvirtual; DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2)TAttLine; DistancetoPrimitive(Int_t px, Int_t py) overrideTLinevirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""") overrideTArrowvirtual; DrawArrow(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Float_t arrowsize=0, Option_t *option="""")TArrowvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawLine(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TLinevirtual; DrawLineNDC(Double_t x1, Double_t y1, Double_t x2, Double_t y2)TLinevirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTLinevirtual; fAngleTArrowprotected; fArrowSizeTArrowprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fgDefaultAngleTArrowprotectedstatic; fgDefaultArrowSizeTArrowprotectedstatic; fgDefaultOptionTArrowprotectedstatic; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fLineColorTAttLineprotected; fLineStyleTAttLineprotected; fLineWidthTAttLineprotected; fOptionTArrowprotected; fUniqueIDTObjectprivate; fX1TLineprotected; fX2TLineprotected; fY1TLineprotected; fY2TLineprotected; GetAngle() constTArrowinline; GetArrowSize() constTArrowinline; GetBBox() overrideTLinevirtual; GetBBoxCenter() overrideTLinevirtual; GetDefaultAngle()TArrowstatic; GetDefaultArrowSize()TArrowstatic; GetDefaul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTArrow-members.html:1790,error,error,1790,doc/master/classTArrow-members.html,https://root.cern,https://root.cern/doc/master/classTArrow-members.html,2,['error'],['error']
Availability," *pad2 = new TPad(""pad2"",; ""The pad with the histogram"",0.51,0.62,0.98,0.92);; TPad *pad3 = new TPad(""pad3"",; ""The pad with the histogram"",0.03,0.02,0.97,0.57);; pad1->Draw();; pad2->Draw();; pad3->Draw();; ; // Draw a global picture title; TPaveLabel *title = new TPaveLabel(0.1,0.94,0.9,0.98,; ""Drawing options for one dimensional histograms"");; title->SetTextFont(52);; title->Draw();; ; // Draw histogram hpx in first pad with the default option.; pad1->cd();; pad1->GetFrame()->SetFillColor(18);; hpx->SetFillColor(45);; hpx->DrawCopy();; TPaveLabel *label1 = new TPaveLabel(-3.5,700,-1,800,""Default option"");; label1->Draw();; ; // Draw hpx as a lego. Clicking on the lego area will show; // a ""transparent cube"" to guide you rotating the lego in real time.; pad2->cd();; hpx->DrawCopy(""lego1"");; TPaveLabel *label2 = new TPaveLabel(-0.72,0.74,-0.22,0.88,""option Lego1"");; label2->Draw();; TPaveLabel *label2a = new TPaveLabel(-0.93,-1.08,0.25,-0.92,; ""Click on lego to rotate"");; label2a->Draw();; ; // Draw hpx with its errors and a marker.; pad3->cd();; pad3->SetGridx();; pad3->SetGridy();; hpx->SetMarkerStyle(21);; hpx->Draw(""e1p"");; TPaveLabel *label3 = new TPaveLabel(2,600,3.5,650,""option e1p"");; label3->Draw();; ; // The following illustrates how to add comments using a PaveText.; // Attributes of text/lines/boxes added to a PaveText can be modified.; // The AddText function returns a pointer to the added object.; TPaveText *pave = new TPaveText(-3.78,500,-1.2,750);; TText *t1=pave->AddText(""You can move"");; t1->SetTextColor(4);; t1->SetTextSize(0.05);; pave->AddText(""Title and Stats pads"");; pave->AddText(""X and Y axis"");; pave->AddText(""You can modify bin contents"");; pave->Draw();; c1->Update();; }; TCanvas.h; TFile.h; TFrame.h; TH2.h; TInterpreter.h; TNtuple.h; TPaveLabel.h; TPaveText.h; gROOT#define gROOTDefinition TROOT.h:406; TSystem.h; TAttFill::SetFillColorvirtual void SetFillColor(Color_t fcolor)Set the fill area color.Definition TAttFill.h:37; TAttMarker::Set",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/h1ReadAndDraw_8C.html:2178,error,errors,2178,doc/master/h1ReadAndDraw_8C.html,https://root.cern,https://root.cern/doc/master/h1ReadAndDraw_8C.html,1,['error'],['errors']
Availability," *pp;; 5454 } else {; 5455 // -- Caller did not provide an i/o buffer for us to use, we must make one for ourselves.; 5456 if (clOfBranch) {; 5457 if (!pp) {; 5458 // -- Caller wants us to own the object.; 5459 SetBit(kDeleteObject);; 5460 }; 5461 fObject = (char*) clOfBranch->New();; 5462 if (pp) {; 5463 *pp = fObject;; 5464 } else {; 5465 fAddress = (char*) &fObject;; 5466 }; 5467 } else {; 5468 Error(""SetAddress"", ""I have no TClass for branch %s, so I cannot allocate an I/O buffer!"", GetName());; 5469 if (pp) {; 5470 fObject = nullptr;; 5471 *pp = nullptr;; 5472 }; 5473 }; 5474 }; 5475 } else {; 5476 // -- We are *not* a top-level branch.; 5477 fObject = fAddress;; 5478 }; 5479 ; 5480 if (!info) {; 5481 // FIXME: We need and error message here, no streamer info, so cannot set offsets.; 5482 return;; 5483 }; 5484 ; 5485 // We do this only once because it depends only on; 5486 // the type of our object, not on its address.; 5487 if (!fInitOffsets) {; 5488 InitializeOffsets();; 5489 }; 5490 ; 5491 // We are split, recurse down to our sub-branches.; 5492 //; 5493 // FIXME: This is a tail recursion, we burn stack.; 5494 Int_t nbranches = fBranches.GetEntriesFast();; 5495 for (Int_t i = 0; i < nbranches; ++i) {; 5496 TBranch *abranch = (TBranch*) fBranches.UncheckedAt(i);; 5497 // FIXME: This is a tail recursion!; 5498 if (fBranchOffset[i] != TStreamerInfo::kMissing && !(implied && abranch->TestBit(kAddressSet))) {; 5499 abranch->SetAddressImpl(fObject + fBranchOffset[i], implied);; 5500 abranch->SetBit(kAddressSet);; 5501 if (TestBit(kDecomposedObj) != abranch->TestBit(kDecomposedObj)); 5502 abranch->SetMakeClass(TestBit(kDecomposedObj));; 5503 } else {; 5504 // When the member is missing, just leave the address alone; 5505 // (since setting explicitly to 0 would trigger error/warning; 5506 // messages).; 5507 // abranch->SetAddress(0);; 5508 abranch->SetBit(kAddressSet);; 5509 }; 5510 }; 5511}; 5512 ; 5513//////////////////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:203756,down,down,203756,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['down'],['down']
Availability," *rgb)TColorstatic; CreateColorTableFromFile(TString fileName, Float_t alpha=1.)TColorstatic; CreateColorWheel()TColorstatic; CreateGradientColorTable(UInt_t Number, Double_t *Stops, Double_t *Red, Double_t *Green, Double_t *Blue, UInt_t NColors, Float_t alpha=1., Bool_t setPalette=kTRUE)TColorstatic; DeclFileName()TColorinlinestatic; DefinedColors(Int_t set_always_on=0)TColorstatic; Delete(Option_t *option="""")TObjectvirtual; DistancetoPrimitive(Int_t px, Int_t py)TObjectvirtual; DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; Draw(Option_t *option="""")TObjectvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTObject; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py)TObjectvirtual; fAlphaTColorprivate; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fBlueTColorprivate; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fGreenTColorprivate; fHueTColorprivate; FillBuffer(char *&buffer)TNamedvirtual; FindObject(const char *name) constTObjectvirtual; FindObject(const TObject *obj) constTObjectvirtual; fLightTColorprivate; fNameTNamedprotected; fNumberTColorprotected; fRedTColorprivate; fSaturationTColorprivate; fTitleTNamedprotected; fUniqueIDTObjectprivate; GetAlpha() constTColorinline; GetBlue() constTColorinline; GetColor(const char *hexcolor)TColorstatic; GetColor(Float_t r, Float_t g, Float_t b, Float_t a=1.)TColorstatic; GetColor(Int_t r, Int_t g, Int_t b, Float_t a=1.)TColorstatic; GetColor(ULong_t pixel)TColorstatic; GetColorBright(Int_t color)TColorstatic; GetColorByName(const char *colorname)TCo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTColor-members.html:1901,error,error,1901,doc/master/classTColor-members.html,https://root.cern,https://root.cern/doc/master/classTColor-members.html,2,['error'],['error']
Availability," *s)Definition TObjString.h:45; TObjString::GetNameconst char * GetName() const overrideReturns name of object.Definition TObjString.h:38; TObject::kOverwrite@ kOverwriteoverwrite existing object with same nameDefinition TObject.h:92; TObject::ClassNamevirtual const char * ClassName() constReturns name of class to which the object belongs.Definition TObject.cxx:213; TObject::Warningvirtual void Warning(const char *method, const char *msgfmt,...) constIssue warning message.Definition TObject.cxx:979; TObject::IsZombieR__ALWAYS_INLINE Bool_t IsZombie() constDefinition TObject.h:153; TObject::Writevirtual Int_t Write(const char *name=nullptr, Int_t option=0, Int_t bufsize=0)Write this object to the current directory.Definition TObject.cxx:886; TObject::InheritsFromvirtual Bool_t InheritsFrom(const char *classname) constReturns kTRUE if object inherits from class ""classname"".Definition TObject.cxx:530; TObject::Errorvirtual void Error(const char *method, const char *msgfmt,...) constIssue error message.Definition TObject.cxx:993; TObject::Infovirtual void Info(const char *method, const char *msgfmt,...) constIssue info message.Definition TObject.cxx:967; TRegexpRegular expression class.Definition TRegexp.h:31; TStringBasic string class.Definition TString.h:139; TString::InsertTString & Insert(Ssiz_t pos, const char *s)Definition TString.h:661; TString::ReplaceTString & Replace(Ssiz_t pos, Ssiz_t n, const char *s)Definition TString.h:694; TString::Dataconst char * Data() constDefinition TString.h:376; TString::LastSsiz_t Last(char c) constFind last occurrence of a character c.Definition TString.cxx:931; TString::ToUppervoid ToUpper()Change string to upper case.Definition TString.cxx:1195; TString::BeginsWithBool_t BeginsWith(const char *s, ECaseCompare cmp=kExact) constDefinition TString.h:623; TString::IsNullBool_t IsNull() constDefinition TString.h:414; TString::HashUInt_t Hash(ECaseCompare cmp=kExact) constReturn hash value.Definition TString.cxx:677; TString::AppendTS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEntryList_8cxx_source.html:71229,error,error,71229,doc/master/TEntryList_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TEntryList_8cxx_source.html,1,['error'],['error']
Availability," *source);  Force element to re-evaluate itself when a value is requested. ;  ; void unRegisterProxy (RooArgProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooListProxy &proxy);  Remove proxy from proxy list. ;  ; void unRegisterProxy (RooSetProxy &proxy);  Remove proxy from proxy list. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; RooSetProxy _cacheObs;  Observable to be cached. ;  ; RooRealProxy pdf;  Proxy to p.d.f being cached. ;  ;  Protected Attributes inherited from RooAbsCachedPdf; std::map< Int_t, AnaIntConfig > _anaIntMap;  ! Map for analytical integration codes ;  ; RooAICRegistry _anaReg;  ! Registry for analytical integration codes ;  ; RooObjCacheManager _cacheMgr;  ; Int_t _ipOrder;  The cache manager. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCachedPdf.html:70909,error,errors,70909,doc/master/classRooCachedPdf.html,https://root.cern,https://root.cern/doc/master/classRooCachedPdf.html,1,['error'],['errors']
Availability," *track = (TTrack*)a.ConstructedAt(i);; track->Set(x,y,z,....);. }. a.Clear(); // or a.Clear(""C"");; }. Note: the only supported way to add objects to a TClonesArray is; via the new with placement method or the ConstructedAt method.; The other Add() methods ofTObjArray and its base classes are not; allowed. Considering that a new/delete costs about 70 mus on a 300 MHz HP,; O(10^9) new/deletes will save about 19 hours. NOTE 1. C/C++ offers the possibility of allocating and deleting memory.; Forgetting to delete allocated memory is a programming error called a; ""memory leak"", i.e. the memory of your process grows and eventually; your program crashes. Even if you *always* delete the allocated; memory, the recovered space may not be efficiently reused. The; process knows that there are portions of free memory, but when you; allocate it again, a fresh piece of memory is grabbed. Your program; is free from semantic errors, but the total memory of your process; still grows, because your program's memory is full of ""holes"" which; reduce the efficiency of memory access; this is called ""memory; fragmentation"". Moreover new / delete are expensive operations in; terms of CPU time. Without entering into technical details, TClonesArray allows you to; ""reuse"" the same portion of memory for new/delete avoiding memory; fragmentation and memory growth and improving the performance by; orders of magnitude. Every time the memory of the TClonesArray has; to be reused, the Clear() method is used. To provide its benefits,; each TClonesArray must be allocated *once* per process and disposed; of (deleted) *only when not needed any more*. So a job should see *only one* deletion for each TClonesArray,; which should be Clear()ed during the job several times. Deleting a; TClonesArray is a double waste. Not only you do not avoid memory; fragmentation, but you worsen it because the TClonesArray itself; is a rather heavy structure, and there is quite some code in the; destructor, so you have more me",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TClonesArray.html:2515,error,errors,2515,root/html532/TClonesArray.html,https://root.cern,https://root.cern/root/html532/TClonesArray.html,8,['error'],['errors']
Availability," *user_data); 18164{; 18165 struct mg_connection *conn = NULL;; 18166 ; 18167#if defined(USE_WEBSOCKET); 18168 struct websocket_client_thread_data *thread_data;; 18169 static const char *magic = ""x3JJHMbDL1EzLkh9GBhXDw=="";; 18170 ; 18171 const char *host = client_options->host;; 18172 int i;; 18173 ; 18174#if defined(__clang__); 18175#pragma clang diagnostic push; 18176#pragma clang diagnostic ignored ""-Wformat-nonliteral""; 18177#endif; 18178 ; 18179 /* Establish the client connection and request upgrade */; 18180 conn = mg_connect_client_impl(client_options,; 18181 use_ssl,; 18182 error_buffer,; 18183 error_buffer_size);; 18184 ; 18185 /* Connection object will be null if something goes wrong */; 18186 if (conn == NULL) {; 18187 /* error_buffer should be already filled ... */; 18188 if (!error_buffer[0]) {; 18189 /* ... if not add an error message */; 18190 mg_snprintf(conn,; 18191 NULL, /* No truncation check for ebuf */; 18192 error_buffer,; 18193 error_buffer_size,; 18194 ""Unexpected error"");; 18195 }; 18196 return NULL;; 18197 }; 18198 ; 18199 if (origin != NULL) {; 18200 if (extensions != NULL) {; 18201 i = mg_printf(conn,; 18202 ""GET %s HTTP/1.1\r\n""; 18203 ""Host: %s\r\n""; 18204 ""Upgrade: websocket\r\n""; 18205 ""Connection: Upgrade\r\n""; 18206 ""Sec-WebSocket-Key: %s\r\n""; 18207 ""Sec-WebSocket-Version: 13\r\n""; 18208 ""Sec-WebSocket-Extensions: %s\r\n""; 18209 ""Origin: %s\r\n""; 18210 ""\r\n"",; 18211 path,; 18212 host,; 18213 magic,; 18214 extensions,; 18215 origin);; 18216 } else {; 18217 i = mg_printf(conn,; 18218 ""GET %s HTTP/1.1\r\n""; 18219 ""Host: %s\r\n""; 18220 ""Upgrade: websocket\r\n""; 18221 ""Connection: Upgrade\r\n""; 18222 ""Sec-WebSocket-Key: %s\r\n""; 18223 ""Sec-WebSocket-Version: 13\r\n""; 18224 ""Origin: %s\r\n""; 18225 ""\r\n"",; 18226 path,; 18227 host,; 18228 magic,; 18229 origin);; 18230 }; 18231 } else {; 18232 ; 18233 if (extensions != NULL) {; 18234 i = mg_printf(conn,; 18235 ""GET %s HTTP/1.1\r\n""; 18236 ""Host: %s\r\n""; 18237 ""Upgrade: websocket\r\n""; 182",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:539903,error,error,539903,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,['error'],['error']
Availability," *user_data); 18165{; 18166 struct mg_connection *conn = NULL;; 18167 ; 18168#if defined(USE_WEBSOCKET); 18169 struct websocket_client_thread_data *thread_data;; 18170 static const char *magic = ""x3JJHMbDL1EzLkh9GBhXDw=="";; 18171 ; 18172 const char *host = client_options->host;; 18173 int i;; 18174 ; 18175#if defined(__clang__); 18176#pragma clang diagnostic push; 18177#pragma clang diagnostic ignored ""-Wformat-nonliteral""; 18178#endif; 18179 ; 18180 /* Establish the client connection and request upgrade */; 18181 conn = mg_connect_client_impl(client_options,; 18182 use_ssl,; 18183 error_buffer,; 18184 error_buffer_size);; 18185 ; 18186 /* Connection object will be null if something goes wrong */; 18187 if (conn == NULL) {; 18188 /* error_buffer should be already filled ... */; 18189 if (!error_buffer[0]) {; 18190 /* ... if not add an error message */; 18191 mg_snprintf(conn,; 18192 NULL, /* No truncation check for ebuf */; 18193 error_buffer,; 18194 error_buffer_size,; 18195 ""Unexpected error"");; 18196 }; 18197 return NULL;; 18198 }; 18199 ; 18200 if (origin != NULL) {; 18201 if (extensions != NULL) {; 18202 i = mg_printf(conn,; 18203 ""GET %s HTTP/1.1\r\n""; 18204 ""Host: %s\r\n""; 18205 ""Upgrade: websocket\r\n""; 18206 ""Connection: Upgrade\r\n""; 18207 ""Sec-WebSocket-Key: %s\r\n""; 18208 ""Sec-WebSocket-Version: 13\r\n""; 18209 ""Sec-WebSocket-Extensions: %s\r\n""; 18210 ""Origin: %s\r\n""; 18211 ""\r\n"",; 18212 path,; 18213 host,; 18214 magic,; 18215 extensions,; 18216 origin);; 18217 } else {; 18218 i = mg_printf(conn,; 18219 ""GET %s HTTP/1.1\r\n""; 18220 ""Host: %s\r\n""; 18221 ""Upgrade: websocket\r\n""; 18222 ""Connection: Upgrade\r\n""; 18223 ""Sec-WebSocket-Key: %s\r\n""; 18224 ""Sec-WebSocket-Version: 13\r\n""; 18225 ""Origin: %s\r\n""; 18226 ""\r\n"",; 18227 path,; 18228 host,; 18229 magic,; 18230 origin);; 18231 }; 18232 } else {; 18233 ; 18234 if (extensions != NULL) {; 18235 i = mg_printf(conn,; 18236 ""GET %s HTTP/1.1\r\n""; 18237 ""Host: %s\r\n""; 18238 ""Upgrade: websocket\r\n""; 182",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:539936,error,error,539936,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['error'],['error']
Availability," *vp);  ; TObject & operator= (const TObject &rhs);  TObject assignment operator. ;  ; virtual void Paint (Option_t *option="""");  This method must be overridden if a class wants to paint itself. ;  ; virtual void Pop ();  Pop on object drawn in a pad to the top of the display list. ;  ; virtual Int_t Read (const char *name);  Read contents of object with specified name from the current directory. ;  ; void ResetBit (UInt_t f);  ; virtual void SavePrimitive (std::ostream &out, Option_t *option="""");  Save a primitive as a C++ statement(s) on output stream ""out"". ;  ; void SetBit (UInt_t f);  ; void SetBit (UInt_t f, Bool_t set);  Set or unset the user status bits as specified in f. ;  ; virtual void SetDrawOption (Option_t *option="""");  Set drawing option for object. ;  ; virtual void SetUniqueID (UInt_t uid);  Set the unique object id. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual void SysError (const char *method, const char *msgfmt,...) const;  Issue system error message. ;  ; R__ALWAYS_INLINE Bool_t TestBit (UInt_t f) const;  ; Int_t TestBits (UInt_t f) const;  ; virtual void UseCurrentStyle ();  Set current style settings in this object This function is called when either TCanvas::UseCurrentStyle or TROOT::ForceStyle have been invoked. ;  ; virtual void Warning (const char *method, const char *msgfmt,...) const;  Issue warning message. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0);  Write this object to the current directory. ;  ; virtual Int_t Write (const char *name=nullptr, Int_t option=0, Int_t bufsize=0) const;  Write this object to the current directory. ;  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from TNamed; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFolder.html:13884,error,error,13884,doc/master/classTFolder.html,https://root.cern,https://root.cern/doc/master/classTFolder.html,1,['error'],['error']
Availability," * ; buf, . Long64_t ; pos, . Int_t ; len, . Int_t & ; loc . ). overridevirtual . Reimplemented from TFileCacheRead.; Definition at line 962 of file TTreeCacheUnzip.cxx. ◆ ResetCache(). void TTreeCacheUnzip::ResetCache ; (; ). overridevirtual . This will delete the list of buffers that are in the unzipping cache and will reset certain values in the cache. ; This name is ambiguos because the method doesn't reset the whole cache, only the part related to the unzipping Note: This method is completely different from TTreeCache::ResetCache(), in that method we were cleaning the prefetching buffer while here we delete the information about the unzipped buffers ; Reimplemented from TTreeCache.; Definition at line 502 of file TTreeCacheUnzip.cxx. ◆ SetBufferSize(). Int_t TTreeCacheUnzip::SetBufferSize ; (; Long64_t ; buffersize). overridevirtual . Change the underlying buffer size of the cache. ; The buffersize might be clamped, see TFileCacheRead::SetBufferSize Returns:; 0 if the buffer content is still available; 1 if some or all of the buffer content has been made unavailable; -1 on error . Reimplemented from TTreeCache.; Definition at line 360 of file TTreeCacheUnzip.cxx. ◆ SetEntryRange(). void TTreeCacheUnzip::SetEntryRange ; (; Long64_t ; emin, . Long64_t ; emax . ). overridevirtual . Set the minimum and maximum entry number to be processed this information helps to optimize the number of baskets to read when prefetching the branch buffers. ; Reimplemented from TTreeCache.; Definition at line 376 of file TTreeCacheUnzip.cxx. ◆ SetParallelUnzip(). Int_t TTreeCacheUnzip::SetParallelUnzip ; (; TTreeCacheUnzip::EParUnzipMode ; option = TTreeCacheUnzip::kEnable). static . Static function that (de)activates multithreading unzipping. ; The possible options are:; kEnable Enable it, which causes an automatic detection and launches the additional thread if the number of cores in the machine is greater than one; kDisable Disable will not activate the additional thread.; kForce F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeCacheUnzip.html:34954,avail,available,34954,doc/master/classTTreeCacheUnzip.html,https://root.cern,https://root.cern/doc/master/classTTreeCacheUnzip.html,2,"['avail', 'error']","['available', 'error']"
Availability," * ; dir, . XMLNodePointer_t ; topnode . ). protected . Read list of keys for directory. ; Definition at line 630 of file TXMLFile.cxx. ◆ ReadStreamerElement(). void TXMLFile::ReadStreamerElement ; (; XMLNodePointer_t ; node, . TStreamerInfo * ; info . ). protected . read and reconstruct single TStreamerElement from xml node ; Definition at line 825 of file TXMLFile.cxx. ◆ Recover(). Int_t TXMLFile::Recover ; (; ). inlinefinalvirtual . Attempt to recover file if not correctly closed. ; The function returns the number of keys that have been recovered. If no keys can be recovered, the file will be declared Zombie by the calling function. This function is automatically called when opening a file. If the file is open in read only mode, the file is not modified. If open in update mode and the function finds something to recover, a new directory header is written to the file. When opening the file gain no message from Recover will be reported. If keys have been recovered, the file is usable and you can safely read the corresponding objects. If the file is not usable (a zombie), you can test for this case with code like:; TFile f(""myfile.root"");; if (f.IsZombie()) {<actions to take if file is unusable>}; TFileA ROOT file is an on-disk file, usually with extension .root, that stores objects in a file-system-li...Definition TFile.h:53; If the file has been recovered, the bit kRecovered is set in the TFile object in memory. You can test if the file has been recovered with if (f.TestBit(TFile::kRecovered)) {... the file has been recovered}; When writing TTrees to a file, it is important to save the Tree header at regular intervals (see TTree::AutoSave). If a file containing a Tree is recovered, the last Tree header written to the file will be used. In this case all the entries in all the branches written before writing the header are valid entries. One can disable the automatic recovery procedure by setting TFile.Recover 0; in the system.rootrc file. ; Reimplemented from TFile.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTXMLFile.html:67028,recover,recovered,67028,doc/master/classTXMLFile.html,https://root.cern,https://root.cern/doc/master/classTXMLFile.html,1,['recover'],['recovered']
Availability," * ; d . ). Another constructor, directly adds one channel with signal, background and data given as input. ; Definition at line 34 of file TLimitDataSource.cxx. ◆ TLimitDataSource() [3/3]. TLimitDataSource::TLimitDataSource ; (; TH1 * ; s, . TH1 * ; b, . TH1 * ; d, . TVectorD * ; es, . TVectorD * ; eb, . TObjArray * ; names . ). Another constructor, directly adds one channel with signal, background and data given as input. ; Definition at line 45 of file TLimitDataSource.cxx. Member Function Documentation. ◆ AddChannel() [1/2]. void TLimitDataSource::AddChannel ; (; TH1 * ; s, . TH1 * ; b, . TH1 * ; d . ). virtual . Adds a channel with signal, background and data given as input. ; Definition at line 56 of file TLimitDataSource.cxx. ◆ AddChannel() [2/2]. void TLimitDataSource::AddChannel ; (; TH1 * ; s, . TH1 * ; b, . TH1 * ; d, . TVectorD * ; es, . TVectorD * ; eb, . TObjArray * ; names . ). virtual . Adds a channel with signal, background and data given as input. ; In addition, error sources are defined. TH1 are here used for convenience: each bin has to be seen as an error source (relative). names is an array of strings containing the names of the sources. Sources with the same name are correlated. ; Definition at line 85 of file TLimitDataSource.cxx. ◆ GetBackground(). virtual TObjArray * TLimitDataSource::GetBackground ; (; ). inlinevirtual . Definition at line 33 of file TLimitDataSource.h. ◆ GetCandidates(). virtual TObjArray * TLimitDataSource::GetCandidates ; (; ). inlinevirtual . Definition at line 34 of file TLimitDataSource.h. ◆ GetErrorNames(). virtual TObjArray * TLimitDataSource::GetErrorNames ; (; ). inlinevirtual . Definition at line 37 of file TLimitDataSource.h. ◆ GetErrorOnBackground(). virtual TObjArray * TLimitDataSource::GetErrorOnBackground ; (; ). inlinevirtual . Definition at line 36 of file TLimitDataSource.h. ◆ GetErrorOnSignal(). virtual TObjArray * TLimitDataSource::GetErrorOnSignal ; (; ). inlinevirtual . Definition at line 35 of file ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTLimitDataSource.html:12905,error,error,12905,doc/master/classTLimitDataSource.html,https://root.cern,https://root.cern/doc/master/classTLimitDataSource.html,1,['error'],['error']
Availability," * ; elem, . Int_t ; comp_type . ). finalvirtual . Function is called from TStreamerInfo WriteBuffer and ReadBuffer functions and add/verify next element of json structure This calls allows separate data, correspondent to one class member, from another. ; Implements TBuffer.; Definition at line 2092 of file TBufferJSON.cxx. ◆ SetTypenameTag(). void TBufferJSON::SetTypenameTag ; (; const char * ; tag = ""_typename""). Configures _typename tag in JSON structures By default ""_typename"" field in JSON structures used to store class information One can specify alternative tag like ""$typename"" or ""xy"", but such JSON can not be correctly used in JSROOT If empty string is provided, class information will not be stored. ; Definition at line 578 of file TBufferJSON.cxx. ◆ SetTypeversionTag(). void TBufferJSON::SetTypeversionTag ; (; const char * ; tag = nullptr). Configures _typeversion tag in JSON One can specify name of the JSON tag like ""_typeversion"" or ""$tv"" which will be used to store class version Such tag can be used to correctly recover objects from JSON If empty string is provided (default), class version will not be stored. ; Definition at line 592 of file TBufferJSON.cxx. ◆ SkipObjectAny(). void TBufferJSON::SkipObjectAny ; (; ). finalvirtual . Skip any kind of object from buffer. ; Implements TBuffer.; Definition at line 2508 of file TBufferJSON.cxx. ◆ Stack(). TJSONStackObj * TBufferJSON::Stack ; (; ). inlineprotected . Definition at line 257 of file TBufferJSON.h. ◆ StoreObject(). TString TBufferJSON::StoreObject ; (; const void * ; obj, . const TClass * ; cl . ). Store provided object as JSON structure Allows to configure different TBufferJSON properties before converting object into JSON Actual object class must be specified here Method can be safely called once - after that TBufferJSON instance must be destroyed Code should look like: ; auto obj = new UserClass(); TBufferJSON buf; buf.SetCompact(TBufferJSON::kNoSpaces); // change any other settings in TBufferJSO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBufferJSON.html:86095,recover,recover,86095,doc/master/classTBufferJSON.html,https://root.cern,https://root.cern/doc/master/classTBufferJSON.html,1,['recover'],['recover']
Availability," * ; msgfmt, .  ; ... . ). Use this function in case an error occurred. ; Definition at line 207 of file TError.cxx. ◆ DefaultErrorHandler(). void DefaultErrorHandler ; (; Int_t ; level, . Bool_t ; abort_bool, . const char * ; location, . const char * ; msg . ). The default error handler function. ; It prints the message on stderr and if abort is set it aborts the application. Replaces the minimal error handler of TError.h as part of the gROOT construction. TError's minimal handler is put back in place during the gROOT destruction. Noteabort() is only called if abort_bool is true and level < gErrorIgnoreLevel ; Definition at line 102 of file TErrorDefaultHandler.cxx. ◆ Error(). void Error ; (; const char * ; location, . const char * ; msgfmt, .  ; ... . ). Use this function in case an error occurred. ; Definition at line 185 of file TError.cxx. ◆ ErrorHandler(). void ErrorHandler ; (; int ; level, . const char * ; location, . const char * ; fmt, . std::va_list ; va . ). General error handler function. It calls the user set error handler. ; Definition at line 109 of file TError.cxx. ◆ Fatal(). void Fatal ; (; const char * ; location, . const char * ; fmt, .  ; ... . ). Use this function in case of a fatal error. It will abort the program. ; WarningFatal() will not abort the program if gErrorIgnoreLevel > kFatal; but for all reasonable settings it will abort. . Definition at line 244 of file TError.cxx. ◆ GetErrorHandler(). ErrorHandlerFunc_t GetErrorHandler ; (; ). Returns the current error handler function. ; Definition at line 100 of file TError.cxx. ◆ Info(). void Info ; (; const char * ; location, . const char * ; msgfmt, .  ; ... . ). Use this function for informational messages. ; Definition at line 218 of file TError.cxx. ◆ MayNotUse(). void MayNotUse ; (; const char * ; method). This function can be used in classes that should override a certain function, but in the inherited class the function makes no sense. ; Definition at line 168 of file TError.cxx. ◆ Ob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TError_8h.html:6534,error,error,6534,doc/master/TError_8h.html,https://root.cern,https://root.cern/doc/master/TError_8h.html,1,['error'],['error']
Availability," * ; name = nullptr . ). Copy constructor. ; Definition at line 60 of file RooPullVar.cxx. Member Function Documentation. ◆ Class(). static TClass * RooPullVar::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooPullVar::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooPullVar::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 41 of file RooPullVar.h. ◆ clone(). TObject * RooPullVar::clone ; (; const char * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 31 of file RooPullVar.h. ◆ DeclFileName(). static const char * RooPullVar::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 41 of file RooPullVar.h. ◆ evaluate(). double RooPullVar::evaluate ; (; ); const. overrideprotectedvirtual . Calculate pull. ; Use asymmetric error if defined in measurement, otherwise use symmetric error. If measurement has no error return zero. ; Implements RooAbsReal.; Definition at line 72 of file RooPullVar.cxx. ◆ IsA(). TClass * RooPullVar::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsReal.; Definition at line 41 of file RooPullVar.h. ◆ Streamer(). void RooPullVar::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from RooAbsReal. ◆ StreamerNVirtual(). void RooPullVar::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 41 of file RooPullVar.h. Member Data Documentation. ◆ _meas. RooTemplateProxy<RooRealVar> RooPullVar::_meas. protected . Definition at line 36 of file RooPullVar.h. ◆ _true. RooRealProxy RooPullVar::_true. protected . Definition at line 37 of file RooPullVar.h. Libraries for RooPullVar:. [legend]; The documentation for this class was generated from the following files:; r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooPullVar.html:61685,error,error,61685,doc/master/classRooPullVar.html,https://root.cern,https://root.cern/doc/master/classRooPullVar.html,2,['error'],['error']
Availability," * ; node, . const char * ; attrname, . float & ; value . ). Definition at line 1779 of file Tools.cxx. ◆ ReadAttr() [2/5]. void TMVA::Tools::ReadAttr ; (; void * ; node, . const char * ; attrname, . int & ; value . ). Definition at line 1791 of file Tools.cxx. ◆ ReadAttr() [3/5]. void TMVA::Tools::ReadAttr ; (; void * ; node, . const char * ; attrname, . short & ; value . ). Definition at line 1803 of file Tools.cxx. ◆ ReadAttr() [4/5]. template<typename T > . void TMVA::Tools::ReadAttr ; (; void * ; node, . const char * ; attrname, . T & ; value . ). inline . read attribute from xml ; Definition at line 329 of file Tools.h. ◆ ReadAttr() [5/5]. void TMVA::Tools::ReadAttr ; (; void * ; node, . const char * ; attrname, . TString & ; value . ). add attribute from xml ; Definition at line 1102 of file Tools.cxx. ◆ ReadFloatArbitraryPrecision(). void TMVA::Tools::ReadFloatArbitraryPrecision ; (; Float_t & ; val, . std::istream & ; is . ). reads a float value with the available precision from a stream ; Definition at line 1073 of file Tools.cxx. ◆ ReadTMatrixDFromXML(). void TMVA::Tools::ReadTMatrixDFromXML ; (; void * ; node, . const char * ; name, . TMatrixD * ; mat . ). Definition at line 1276 of file Tools.cxx. ◆ ReadTVectorDFromXML(). void TMVA::Tools::ReadTVectorDFromXML ; (; void * ; node, . const char * ; name, . TVectorD * ; vec . ). Definition at line 1267 of file Tools.cxx. ◆ ReplaceRegularExpressions(). TString TMVA::Tools::ReplaceRegularExpressions ; (; const TString & ; s, . const TString & ; replace = ""+"" . ). replace regular expressions helper function to remove all occurrences ""$!%^&()'<>?= "" from a string and replace all ::,$,*,/,+,- with M,S,T,D,P,M respectively ; Definition at line 798 of file Tools.cxx. ◆ RMS() [1/2]. template<typename Iterator , typename WeightIterator > . Double_t TMVA::Tools::RMS ; (; Iterator ; first, . Iterator ; last, . WeightIterator ; w . ). Return the Standard Deviation of an array defined by the iterators. ; Note that this ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1Tools.html:22559,avail,available,22559,doc/master/classTMVA_1_1Tools.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1Tools.html,1,['avail'],['available']
Availability," * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). virtual . Process a data set (TFileCollection) using the specified selector (.C) file or TSelector object. ; The default tree is analyzed (i.e. the first one found). To specify another tree, the default tree can be changed using TFileCollection::SetDefaultMetaData . The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented in TProofLite, and TProofSuperMaster.; Definition at line 5412 of file TProof.cxx. ◆ Process() [7/8]. Long64_t TProof::Process ; (; TFileCollection * ; fc, . TSelector * ; selector, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; first = 0 . ). virtual . Process a data set (TFileCollection) using the specified selector object The default tree is analyzed (i.e. ; the first one found). To specify another tree, the default tree can be changed using TFileCollection::SetDefaultMetaData . The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented in TProofLite, and TProofSuperMaster.; Definition at line 5787 of file TProof.cxx. ◆ Process() [8/8]. Long64_t TProof::Process ; (; TSelector * ; selector, . Long64_t ; n, . Option_t * ; option = """" . ). virtual . Generic (non-data based) selector processing: the Process() method of the specified selector is called 'n' times. ; The return value is -1 in case of error and TSelector::GetStatus() in in case of success. ; Reimplemented in TProofLite, and TProofSuperMaster.; Definition at line 5835 of file TProof.cxx. ◆ Progress() [1/3]. void TProof::Progress ; (; Long64_t ; total, . Long64_t ; processed . ). Get query progress information. ; Connect a slot to this signal to track progress. ; Definition at line 9201 of file TProof.cxx. ◆ Progress() [2/3]. void TProof::Progress ; (; Long64_t ; total, . Long64_t ; processed, . Long64_t ; bytesread, . Float_t ; initTime, . Float_t ; procTime, . Float_t ; evtrti, . Float_t ; mbrti . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:127567,error,error,127567,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['error'],['error']
Availability," * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::ostream & defaultPrintStream (std::ostream *os=nullptr);  Return a reference to the current default stream to use in Print(). ;  ; static void nameFieldLength (Int_t newLen);  Set length of field reserved from printing name of RooAbsArgs in multi-line collection printing to given amount. ;  ;  Static Public Member Functions inherited from RooAbsLValue; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  . Protected Types; using SharedPropertiesMap = std::map< RooSharedProperties::UUID, std::weak_ptr< RooRealVarSharedProperties > >;  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . Protected Member Functions; void attachToTree (TTree &t, Int_t bufSize=32000) override;  Overload RooAbsReal::attachToTree to also attach branches for errors and/or asymmetric errors attribute StoreError and/or StoreAsymError are set. ;  ; void attachToVStore (RooVectorDataStore &vstore) override;  Overload RooAbsReal::attachToTree to also attach branches for errors and/or asymmetric errors attribute StoreError and/or StoreAsymError are set. ;  ; double chopAt (double what, Int_t where) const;  Utility to calculate number of decimals to show based on magnitude of error. ;  ; void copyCache (const RooAbsArg *source, bool valueOnly=false, bool setValDirty=true) override;  Copy the cached value of another RooAbsArg to our cache Warning: This function copies the cached values of source, it is the callers responsibility to make sure the cache is clean. ;  ; double evaluate () const override;  Evaluate this PDF / function / constant. Needs to be overridden by all derived classes. ;  ; void fillTreeBranch (TTree &t) override;  Overload RooAbsReal::fillTreeBranch to also fill tree branches with (asymmetric) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooRealVar.html:59281,error,errors,59281,doc/master/classRooRealVar.html,https://root.cern,https://root.cern/doc/master/classRooRealVar.html,2,['error'],['errors']
Availability," * GetBuildNode () const;  Return the build node name. ;  ; virtual int GetCpuInfo (CpuInfo_t *info, Int_t sampleTime=1000) const;  Returns cpu load average and load info into the CpuInfo_t structure. ;  ; virtual Int_t GetCryptoRandom (void *buf, Int_t len);  Return cryptographic random number Fill provided buffer with random values Returns number of bytes written to buffer or -1 in case of error. ;  ; virtual const char * GetDirEntry (void *dirp);  Get a directory entry. Returns 0 if no more entries. ;  ; virtual TString GetDirName (const char *pathname);  Return the directory name in pathname. ;  ; virtual void * GetDirPtr () const;  ; virtual const char * GetDynamicPath ();  Return the dynamic path (used to find shared libraries). ;  ; virtual Int_t GetEffectiveGid ();  Returns the effective group id. ;  ; virtual Int_t GetEffectiveUid ();  Returns the effective user id. ;  ; virtual const char * Getenv (const char *env);  Get environment variable. ;  ; virtual const char * GetError ();  Return system error string. ;  ; const char * GetErrorStr () const;  ; virtual const char * GetFlagsDebug () const;  Return the debug flags. ;  ; virtual const char * GetFlagsOpt () const;  Return the optimization flags. ;  ; virtual Int_t GetFPEMask ();  Return the bitmap of conditions that trigger a floating point exception. ;  ; virtual TString GetFromPipe (const char *command);  Execute command and return output in TString. ;  ; virtual int GetFsInfo (const char *path, Long_t *id, Long_t *bsize, Long_t *blocks, Long_t *bfree);  Get info about a file system: fs type, block size, number of blocks, number of free blocks. ;  ; virtual Int_t GetGid (const char *group=nullptr);  Returns the group's id. If group = 0, returns current user's group. ;  ; virtual UserGroup_t * GetGroupInfo (const char *group=nullptr);  Returns all group info in the UserGroup_t structure. ;  ; virtual UserGroup_t * GetGroupInfo (Int_t gid);  Returns all group info in the UserGroup_t structure. ;  ; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystem.html:7650,error,error,7650,doc/master/classTSystem.html,https://root.cern,https://root.cern/doc/master/classTSystem.html,1,['error'],['error']
Availability," * GetMessageWindow () const;  ; virtual const TGFrame * GetNextSelected (void **current);  Return the next selected item. ;  ; const TGPicture * GetObjPicture (TGFrame *f);  Retrieve icons associated with class ""name"". ;  ; virtual TGPosition GetPagePosition () const;  Returns page position. ;  ; virtual TGVScrollBar * GetVScrollbar () const;  returns pointer to vert. scroll bar ;  ; Bool_t HandleDNDFinished () override;  ; Bool_t HandleDoubleClick (Event_t *event) override;  Handle double click mouse event. ;  ; Bool_t HandleExpose (Event_t *event) override;  Handle expose events. Do not use double buffer. ;  ; Bool_t HandleKey (Event_t *event) override;  The key press event handler converts a key press to some line editor action. ;  ; virtual void Home (Bool_t select=kFALSE);  Move to upper-left corner of container. ;  ; virtual void InvertSelection ();  Invert the selection, all selected items become unselected and vice versa. ;  ; virtual void KeyPressed (TGFrame *, UInt_t keysym, UInt_t mask);  Signal emitted when keyboard key pressed. ;  ; void Layout () override;  Layout container entries. ;  ; virtual Int_t NumItems () const;  ; virtual Int_t NumSelected () const;  ; virtual void OnMouseOver (TGFrame *);  Signal emitted when pointer is over entry. ;  ; virtual void PageDown (Bool_t select=kFALSE);  Move position one page down. ;  ; virtual void PageUp (Bool_t select=kFALSE);  Move position one page up. ;  ; void RemoveAll () override;  Remove all items from the container. ;  ; virtual void RemoveItem (TGFrame *item);  Remove item from container. ;  ; virtual void ReturnPressed (TGFrame *);  Signal emitted when Return/Enter key pressed. ;  ; virtual void Search (Bool_t close=kTRUE);  Invokes search dialog. Looks for item with the entered name. ;  ; virtual void SelectAll ();  Select all items in the container. ;  ; virtual void SetDragPixmap (const TGPicture *pic);  Set drag window pixmaps and hotpoint. ;  ; virtual void SetHsbPosition (Int_t newPos);  set ne",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTVLVContainer.html:7296,mask,mask,7296,doc/master/classTTVLVContainer.html,https://root.cern,https://root.cern/doc/master/classTTVLVContainer.html,1,['mask'],['mask']
Availability," * fFixAmp;  [fNPeaks] array of logical values which allow to fix appropriate amplitudes (not fit). However they are present in the estimated functional ;  ; Bool_t fFixB;  logical value of b parameter, which allows to fix the parameter (not to fit). ;  ; Bool_t * fFixPosition;  [fNPeaks] array of logical values which allow to fix appropriate positions (not fit). However they are present in the estimated functional ;  ; Bool_t fFixS;  logical value of s parameter, which allows to fix the parameter (not to fit). ;  ; Bool_t fFixSigma;  logical value of sigma parameter, which allows to fix the parameter (not to fit). ;  ; Bool_t fFixT;  logical value of t parameter, which allows to fix the parameter (not to fit). ;  ; Int_t fNPeaks;  number of peaks present in fit, input parameter, it should be > 0 ;  ; Int_t fNumberIterations;  number of iterations in fitting procedure, input parameter, it should be > 0 ;  ; Double_t * fPositionCalc;  [fNPeaks] array of calculated values of fitted positions, output parameters ;  ; Double_t * fPositionErr;  [fNPeaks] array of position errors ;  ; Double_t * fPositionInit;  [fNPeaks] array of initial values of peaks positions, input parameters ;  ; Int_t fPower;  possible values kFitPower2,4,6,8,10,12, for details see references. It applies only for Awmi fitting function. ;  ; Double_t fSCalc;  calculated value of s parameter ;  ; Double_t fSErr;  error value of s parameter ;  ; Double_t fSigmaCalc;  calculated value of sigma parameter ;  ; Double_t fSigmaErr;  error value of sigma parameter ;  ; Double_t fSigmaInit;  initial value of sigma parameter ;  ; Double_t fSInit;  initial value of s parameter (relative amplitude of step), for details see html manual and references ;  ; Int_t fStatisticType;  type of statistics, possible values kFitOptimChiCounts (chi square statistics with counts as weighting coefficients), kFitOptimChiFuncValues (chi square statistics with function values as weighting coefficients),kFitOptimMaxLikelihood ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumFit.html:20721,error,errors,20721,doc/master/classTSpectrumFit.html,https://root.cern,https://root.cern/doc/master/classTSpectrumFit.html,1,['error'],['errors']
Availability," + 1, i.e. ; port + 1, ... , port + scan - 1 ; Definition at line 94 of file TApplicationRemote.cxx. ◆ ~TApplicationRemote(). TApplicationRemote::~TApplicationRemote ; (; ). virtual . Destructor. ; Definition at line 256 of file TApplicationRemote.cxx. Member Function Documentation. ◆ ApplicationName(). const char * TApplicationRemote::ApplicationName ; (; ); const. inlineoverridevirtual . Reimplemented from TApplication.; Definition at line 101 of file TApplicationRemote.h. ◆ Broadcast() [1/3]. Int_t TApplicationRemote::Broadcast ; (; const char * ; str, . Int_t ; kind = kMESS_STRING, . Int_t ; type = kRRT_Undef . ). private . Broadcast a character string buffer to the remote session. ; Use kind to set the TMessage what field. Returns 0 on success, -1 in case of error. ; Definition at line 283 of file TApplicationRemote.cxx. ◆ Broadcast() [2/3]. Int_t TApplicationRemote::Broadcast ; (; const TMessage & ; mess). private . Broadcast a message to the remote session. ; Returns 0 on success, -1 in case of error. ; Definition at line 266 of file TApplicationRemote.cxx. ◆ Broadcast() [3/3]. Int_t TApplicationRemote::Broadcast ; (; Int_t ; kind, . Int_t ; type = kRRT_Undef . ). inlineprivate . Definition at line 86 of file TApplicationRemote.h. ◆ BroadcastObject(). Int_t TApplicationRemote::BroadcastObject ; (; const TObject * ; obj, . Int_t ; kind = kMESS_OBJECT . ). private . Broadcast an object to the remote session. ; Use kind to set the TMessage what field. Returns 0 on success, -1 in case of error. ; Definition at line 297 of file TApplicationRemote.cxx. ◆ BroadcastRaw(). Int_t TApplicationRemote::BroadcastRaw ; (; const void * ; buffer, . Int_t ; length . ). private . Broadcast a raw buffer of specified length to the remote session. ; Returns 0 on success, -1 in case of error. ; Definition at line 308 of file TApplicationRemote.cxx. ◆ Browse(). void TApplicationRemote::Browse ; (; TBrowser * ; b). overridevirtual . Browse remote application (working directory and ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplicationRemote.html:24856,error,error,24856,doc/master/classTApplicationRemote.html,https://root.cern,https://root.cern/doc/master/classTApplicationRemote.html,1,['error'],['error']
Availability," + eyH) - fxy);; 971 } else {; 972 eyHNew = TMath::Abs(fxy - f->Eval(x, y - eyL));; 973 eyLNew = TMath::Abs(f->Eval(x, y + eyH) - fxy);; 974 }; 975 ; 976 // systematic errors and error on x doesn't change; 977 SetPointEY(i, 0, eyLNew, eyHNew);; 978 }; 979 ; 980 if (gPad); 981 gPad->Modified();; 982}; 983 ; 984////////////////////////////////////////////////////////////////////////////////; 985/// This function is only kept for backward compatibility.; 986/// You should rather use the Divide method.; 987/// It calls `Divide(pass,total,""cl=0.683 b(1,1) mode"")` which is equivalent to the; 988/// former BayesDivide method.; 989 ; 990void TGraphMultiErrors::BayesDivide(const TH1 *pass, const TH1 *total, Option_t *); 991{; 992 Divide(pass, total, ""cl=0.683 b(1,1) mode"");; 993}; 994 ; 995////////////////////////////////////////////////////////////////////////////////; 996/// This function was adapted from the TGraphAsymmErrors class.; 997/// See TGraphAsymmErrors::Divide for the documentation; 998///; 999/// Only the first error dimension is affected.; 1000 ; 1001void TGraphMultiErrors::Divide(const TH1 *pass, const TH1 *total, Option_t *opt); 1002{; 1003 // check pointers; 1004 if (!pass || !total) {; 1005 Error(""Divide"", ""one of the passed pointers is zero"");; 1006 return;; 1007 }; 1008 ; 1009 // check dimension of histograms; only 1-dimensional ones are accepted; 1010 if ((pass->GetDimension() > 1) || (total->GetDimension() > 1)) {; 1011 Error(""Divide"", ""passed histograms are not one-dimensional"");; 1012 return;; 1013 }; 1014 ; 1015 // check whether histograms are filled with weights -> use number of effective; 1016 // entries; 1017 Bool_t bEffective = false;; 1018 // compare sum of weights with sum of squares of weights; 1019 // re-compute here to be sure to get the right values; 1020 Double_t psumw = 0;; 1021 Double_t psumw2 = 0;; 1022 if (pass->GetSumw2()->fN > 0) {; 1023 for (int i = 0; i < pass->GetNbinsX(); ++i) {; 1024 psumw += pass->GetBinContent(i);; 1025 psumw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:34528,error,error,34528,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['error']
Availability," + version_var_prefix + "" \"""" + ROOT_RELEASE + ""\"" >> \""""+depfilename+""\"""";; 2687 ; 2688 if (gDebug > 4) {; 2689 ::Info(""ACLiC"", ""%s"", touch.Data());; 2690 ::Info(""ACLiC"", ""%s"", builddep.Data());; 2691 ::Info(""ACLiC"", ""%s"", adddictdep.Data());; 2692 }; 2693 ; 2694 Int_t depbuilt = !gSystem->Exec(touch);; 2695 if (depbuilt) depbuilt = !gSystem->Exec(builddep);; 2696 if (depbuilt) depbuilt = !gSystem->Exec(adddictdep);; 2697 if (depbuilt) depbuilt = !gSystem->Exec(addversiondep);; 2698 ; 2699 if (!depbuilt) {; 2700 ::Warning(""ACLiC"",""Failed to generate the dependency file for %s"",; 2701 library.Data());; 2702 } else {; 2703#ifdef WIN32; 2704 gSystem->Unlink(stderrfile);; 2705#endif; 2706 gSystem->Unlink(bakdepfilename);; 2707 }; 2708}; 2709 ; 2710////////////////////////////////////////////////////////////////////////////////; 2711/// This method compiles and loads a shared library containing; 2712/// the code from the file ""filename"".; 2713///; 2714/// The return value is true (1) in case of success and false (0); 2715/// in case of error.; 2716///; 2717/// The possible options are:; 2718/// - k : keep the shared library after the session end.; 2719/// - f : force recompilation.; 2720/// - g : compile with debug symbol; 2721/// - O : optimized the code; 2722/// - c : compile only, do not attempt to load the library.; 2723/// - s : silence all informational output; 2724/// - v : output all information output; 2725/// - d : debug ACLiC, keep all the output files.; 2726/// - - : if buildir is set, use a flat structure (see buildir below); 2727///; 2728/// If library_specified is specified, CompileMacro generates the file; 2729/// ""library_specified"".soext where soext is the shared library extension for; 2730/// the current platform.; 2731///; 2732/// If build_dir is specified, it is used as an alternative 'root' for the; 2733/// generation of the shared library. The library is stored in a sub-directories; 2734/// of 'build_dir' including the full pathname of the script u",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:87764,error,error,87764,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['error'],['error']
Availability," ++itWeight;; 1539 }; 1540 numInput = layer.numNodes ();; 1541 }; 1542 return;; 1543 }; 1544 ; 1545 if (eInitStrategy == WeightInitializationStrategy::LAYERSIZE); 1546 {; 1547 // input and output properties; 1548 int numInput = inputSize ();; 1549 ; 1550 // compute variance and mean of input and output; 1551 //...; 1552 ; 1553 ; 1554 // compute the weights; 1555 for (auto& layer: layers ()); 1556 {; 1557 double nIn = numInput;; 1558 for (size_t iWeight = 0, iWeightEnd = layer.numWeights (numInput); iWeight < iWeightEnd; ++iWeight); 1559 {; 1560 (*itWeight) = DNN::gaussDouble (0.0, sqrt (layer.numWeights (nIn))); // factor 2.0 for ReLU; 1561 ++itWeight;; 1562 }; 1563 numInput = layer.numNodes ();; 1564 }; 1565 return;; 1566 }; 1567 ; 1568 }; 1569 ; 1570 ; 1571 ; 1572 ; 1573 ; 1574/*! \brief compute the error function; 1575 *; 1576 *; 1577 */; 1578 template <typename Container, typename ItWeight>; 1579 double Net::errorFunction (LayerData& layerData,; 1580 Container truth,; 1581 ItWeight itWeight,; 1582 ItWeight itWeightEnd,; 1583 double patternWeight,; 1584 double factorWeightDecay,; 1585 EnumRegularization eRegularization) const; 1586 {; 1587 double error (0);; 1588 switch (m_eErrorFunction); 1589 {; 1590 case ModeErrorFunction::SUMOFSQUARES:; 1591 {; 1592 error = sumOfSquares (layerData.valuesBegin (), layerData.valuesEnd (), begin (truth), end (truth),; 1593 layerData.deltasBegin (), layerData.deltasEnd (),; 1594 layerData.inverseActivationFunction (),; 1595 patternWeight);; 1596 break;; 1597 }; 1598 case ModeErrorFunction::CROSSENTROPY:; 1599 {; 1600 assert (!TMVA::DNN::isFlagSet (ModeOutputValues::DIRECT, layerData.outputMode ()));; 1601 std::vector<double> probabilities = layerData.probabilities ();; 1602 error = crossEntropy (begin (probabilities), end (probabilities),; 1603 begin (truth), end (truth),; 1604 layerData.deltasBegin (), layerData.deltasEnd (),; 1605 layerData.inverseActivationFunction (),; 1606 patternWeight);; 1607 break;; 1608 }; 1609 case ModeE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:52177,error,error,52177,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,4,['error'],"['error', 'errorFunction']"
Availability," += val;; 518 }; 519 ; 520 /**; 521 add multi-dim coordinate data with only error in value; 522 The class stores internally the inverse of the error in this case; 523 */; 524 void BinData::Add( const double* x, double val, double eval ); 525 {; 526 assert( kValueError == fErrorType );; 527 assert( !fData.empty() && fDataPtr );; 528 assert( fDataErrorHigh.empty() && !fDataErrorHighPtr );; 529 assert( fDataErrorLow.empty() && !fDataErrorLowPtr );; 530 assert( !fDataError.empty() && fDataErrorPtr );; 531 assert( fCoordErrors.empty() && fCoordErrorsPtr.empty() );; 532 ; 533 fData[ fNPoints ] = val;; 534 fDataError[ fNPoints ] = (eval != 0.0) ? 1.0/eval : 0.0;; 535 ; 536 FitData::Add( x );; 537 fSumContent += val;; 538 if (val != 0 || eval != 1.0) fSumError2 += eval*eval;; 539 if (!fIsWeighted); 540 if (val != 0 && std::abs( eval*eval/val - 1.0) > 1.E-12) fIsWeighted = true;; 541 }; 542 ; 543 /**; 544 add multi-dim coordinate data with both error in coordinates and value; 545 */; 546 void BinData::Add( const double* x, double val, const double* ex, double eval ); 547 {; 548 assert( kCoordError == fErrorType );; 549 assert( !fData.empty() && fDataPtr );; 550 assert( !fDataError.empty() && fDataErrorPtr );; 551 assert( fDataErrorHigh.empty() && !fDataErrorHighPtr );; 552 assert( fDataErrorLow.empty() && !fDataErrorLowPtr );; 553 assert( fCoordErrors.size() == fDim );; 554 assert( fCoordErrorsPtr.size() == fDim );; 555 ; 556 fData[ fNPoints ] = val;; 557 ; 558 for( unsigned int i=0; i<fDim; i++ ); 559 {; 560 assert( &fCoordErrors[i].front() == fCoordErrorsPtr[i] );; 561 ; 562 fCoordErrors[i][ fNPoints ] = ex[i];; 563 }; 564 // in this case we store the y error and not the inverse; 565 fDataError[ fNPoints ] = eval;; 566 ; 567 FitData::Add( x );; 568 fSumContent += val;; 569 if (val != 0 || eval != 1.0) fSumError2 += eval*eval;; 570 if (!fIsWeighted); 571 if (val != 0 && std::abs( eval*eval/val - 1.0) > 1.E-12) fIsWeighted = true;; 572 }; 573 ; 574 /**; 575 add multi-dim coo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8cxx_source.html:16706,error,error,16706,doc/master/BinData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BinData_8cxx_source.html,1,['error'],['error']
Availability," , . int ;  . ); const. inlinevirtual . Reimplemented in TCling.; Definition at line 251 of file TInterpreter.h. ◆ DisplayIncludePath(). virtual int TInterpreter::DisplayIncludePath ; (; FILE * ; ); const. inlinevirtual . Reimplemented in TCling.; Definition at line 252 of file TInterpreter.h. ◆ EndOfLineAction(). virtual void TInterpreter::EndOfLineAction ; (; ). pure virtual . Implemented in TCling. ◆ Evaluate(). virtual int TInterpreter::Evaluate ; (; const char * ; , . TInterpreterValue & ;  . ). inlinevirtual . Reimplemented in TCling.; Definition at line 281 of file TInterpreter.h. ◆ Execute() [1/4]. void TInterpreter::Execute ; (; const char * ; method, . const char * ; params, . int * ; error = nullptr . ). overridepure virtual . Execute method on this object with the given parameter string, e.g. ; ""3.14,1,\""text\"""". ; Reimplemented from TObject.; Implemented in TCling. ◆ Execute() [2/4]. void TInterpreter::Execute ; (; TMethod * ; method, . TObjArray * ; params, . int * ; error = nullptr . ). overrideprotectedpure virtual . Execute method on this object with parameters stored in the TObjArray. ; The TObjArray should contain an argv vector like: argv[0] ... argv[n] = the list of TObjString parameters; TObjStringCollectable string class.Definition TObjString.h:28; nconst Int_t nDefinition legend1.C:16. Reimplemented from TObject.; Implemented in TCling. ◆ Execute() [3/4]. virtual void TInterpreter::Execute ; (; TObject * ; obj, . TClass * ; cl, . const char * ; method, . const char * ; params, . int * ; error = nullptr . ). pure virtual . Implemented in TCling. ◆ Execute() [4/4]. virtual void TInterpreter::Execute ; (; TObject * ; obj, . TClass * ; cl, . TMethod * ; method, . TObjArray * ; params, . int * ; error = nullptr . ). pure virtual . Implemented in TCling. ◆ ExecuteMacro(). virtual Longptr_t TInterpreter::ExecuteMacro ; (; const char * ; filename, . EErrorCode * ; error = nullptr . ). pure virtual . Implemented in TCling. ◆ ExecuteWithArgsAndReturn()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTInterpreter.html:64981,error,error,64981,doc/master/classTInterpreter.html,https://root.cern,https://root.cern/doc/master/classTInterpreter.html,1,['error'],['error']
Availability," , 0 , 32 , DirectColor, 0 , 0 , 0 , 0 , 0 },; 798 { nullptr, 0 , 0 , 16 , DirectColor, 0 , 0 , 0 , 0 , 0 },; 799 { nullptr, 0 , 0 , 15 , DirectColor, 0 , 0 , 0 , 0 , 0 },; 800 { nullptr, 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 },; 801 };; 802 ; 803 Int_t nitems = 0;; 804 XVisualInfo *vlist = nullptr;; 805 for (Int_t i = 0; templates[i].depth != 0; i++) {; 806 Int_t mask = VisualScreenMask|VisualDepthMask|VisualClassMask;; 807 templates[i].screen = fScreenNumber;; 808 if ((vlist = XGetVisualInfo((Display*)fDisplay, mask, &(templates[i]), &nitems))) {; 809 FindUsableVisual((RXVisualInfo*)vlist, nitems);; 810 XFree(vlist);; 811 vlist = nullptr;; 812 if (fVisual); 813 break;; 814 }; 815 }; 816 }; 817 ; 818 fRootWin = RootWindow((Display*)fDisplay, fScreenNumber);; 819 ; 820 if (!fVisual) {; 821 fDepth = DefaultDepth((Display*)fDisplay, fScreenNumber);; 822 fVisual = (RVisual*)DefaultVisual((Display*)fDisplay, fScreenNumber);; 823 fVisRootWin = fRootWin;; 824 if (fDepth > 1); 825 fColormap = DefaultColormap((Display*)fDisplay, fScreenNumber);; 826 fBlackPixel = BlackPixel((Display*)fDisplay, fScreenNumber);; 827 fWhitePixel = WhitePixel((Display*)fDisplay, fScreenNumber);; 828 }; 829 if (gDebug > 1); 830 Printf(""Selected visual 0x%lx: depth %d, class %d, colormap: %s"",; 831 fVisual->visualid, fDepth, fVisual->c_class,; 832 fColormap == DefaultColormap((Display*)fDisplay, fScreenNumber) ? ""default"" :; 833 ""custom"");; 834}; 835 ; 836////////////////////////////////////////////////////////////////////////////////; 837/// Dummy error handler for X11. Used by FindUsableVisual().; 838 ; 839static Int_t DummyX11ErrorHandler(Display *, XErrorEvent *); 840{; 841 return 0;; 842}; 843 ; 844////////////////////////////////////////////////////////////////////////////////; 845/// Check if visual is usable, if so set fVisual, fDepth, fColormap,; 846/// fBlackPixel and fWhitePixel.; 847 ; 848void TGX11::FindUsableVisual(RXVisualInfo *vlist, Int_t nitems); 849{; 850 Int_t (*oldErrorHandler)(D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGX11_8cxx_source.html:25998,mask,mask,25998,doc/master/TGX11_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGX11_8cxx_source.html,2,"['error', 'mask']","['error', 'mask']"
Availability," , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Public Attributes inherited from RooAbsArg; R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit R__DEPRECATED(6, 36, ""Use getObservables()."") RooFit const RooAbsArg &testArg const { return observableOverlaps(dset,testArg);  ; const RooAbsArg &testArg const { return observableOverlaps(depList, testArg);  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Static Protected Member Functions inherited from RooAbsReal; static void globalSelectComp (bool flag);  Global switch controlling the activation of the selectComp() functionality. ;  ;  Static Protected Member Functions inherited from RooAbsArg; static void ioStreamerPass2Finalize ();  Method called by workspace container to finalize schema evolution issues that cannot be handled in a single ioStreamer pass. ;  ;  Protected Attributes inherited from RooAbsPdf; Int_t _errorCount = 0;  Number of errors remaining to print. ;  ; Int_t _negCount = 0;  Number of negative probabilities remaining to print. ;  ; RooAbsReal * _norm = nullptr;  ; RooObjCacheManager _normMgr;  ; TString _normRange;  Normalization range. ;  ; RooArgSet const * _normSet = nullptr;  Normalization integral (owned by _normMgr) ;  ; double _rawValue = 0;  ; bool _selectComp = false;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; std::unique_ptr< RooNumGenConfig > _specGeneratorConfig;  ! MC generator configuration specific for this object ;  ; Int_t _traceCount = 0;  Number of traces remaining to print. ;  ;  Protected Attributes inherited from RooAbsReal; bool _forceNumInt = false;  Force numerical integration if flag set. ;  ; TString _label;  Plot label for objects value. ;  ; RooFit::UniqueId< RooArgSet >::Value_t _lastNormSetId = RooFit::UniqueId<RooArgSet>::nullval;  Component selection flag for RooAbsPdf::plotCompOn. ;  ; Int_t _plotBins = 100;  Number of plot ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooCrystalBall.html:71749,error,errors,71749,doc/master/classRooCrystalBall.html,https://root.cern,https://root.cern/doc/master/classRooCrystalBall.html,3,['error'],['errors']
Availability," ,(const char*)ctyp,(const char*)englsh);; 7837 nm = fNwrmes[ityp-1];; 7838 ic = 0;; 7839 if (nm > kMAXMES) {; 7840 Printf("" ONLY THE MOST RECENT 10 WILL BE LISTED BELOW."");; 7841 nm = kMAXMES;; 7842 ic = fIcirc[ityp-1];; 7843 }; 7844 Printf("" CALLS ORIGIN MESSAGE"");; 7845 for (i = 1; i <= nm; ++i) {; 7846 ++ic;; 7847 if (ic > kMAXMES) ic = 1;; 7848 Printf("" %6d %s %s"", fNfcwar[ic],fOrigin[ic].Data(),fWarmes[ic].Data());; 7849 }; 7850 fNwrmes[ityp-1] = 0;; 7851 Printf("" "");; 7852 }; 7853}; 7854 ; 7855////////////////////////////////////////////////////////////////////////////////; 7856/// Calculates the WERR, external parameter errors; 7857///; 7858/// and the global correlation coefficients, to be called; 7859/// whenever a new covariance matrix is available.; 7860 ; 7861void TMinuit::mnwerr(); 7862{; 7863 Double_t denom, ba, al, dx, du1, du2;; 7864 Int_t ndex, ierr, i, j, k, l, ndiag, k1, iin;; 7865 ; 7866// calculate external error if v exists; 7867 if (fISW[1] >= 1) {; 7868 for (l = 1; l <= fNpar; ++l) {; 7869 ndex = l*(l + 1) / 2;; 7870 dx = TMath::Sqrt(TMath::Abs(fVhmat[ndex-1]*fUp));; 7871 i = fNexofi[l-1];; 7872 if (fNvarl[i-1] > 1) {; 7873 al = fAlim[i-1];; 7874 ba = fBlim[i-1] - al;; 7875 du1 = al + 0.5*(TMath::Sin(fX[l-1] + dx) + 1)*ba - fU[i-1];; 7876 du2 = al + 0.5*(TMath::Sin(fX[l-1] - dx) + 1)*ba - fU[i-1];; 7877 if (dx > 1) du1 = ba;; 7878 dx = 0.5*(TMath::Abs(du1) + TMath::Abs(du2));; 7879 }; 7880 fWerr[l-1] = dx;; 7881 }; 7882 }; 7883// global correlation coefficients; 7884 if (fISW[1] >= 1) {; 7885 for (i = 1; i <= fNpar; ++i) {; 7886 fGlobcc[i-1] = 0;; 7887 k1 = i*(i-1) / 2;; 7888 for (j = 1; j <= i; ++j) {; 7889 k = k1 + j;; 7890 fP[i + j*fMaxpar - fMaxpar-1] = fVhmat[k-1];; 7891 fP[j + i*fMaxpar - fMaxpar-1] = fP[i + j*fMaxpar - fMaxpar-1];; 7892 }; 7893 }; 7894 mnvert(fP, fMaxint, fMaxint, fNpar, ierr);; 7895 if (ierr == 0) {; 7896 for (iin = 1; iin <= fNpar; ++iin) {; 7897 ndiag = iin*(iin + 1) / 2;; 7898 denom = fP[iin + iin*fMaxpar - fMaxpar",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:251355,error,error,251355,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['error'],['error']
Availability," - array of simple types (int[5], double[5][6]); - dynamic array of simple types (int* with comment field // [fSize]); - const char*; - object of any nonROOT class; - pointer on object; - array of objects; - array of pointers on objects; - stl string; - stl vector, list, deque, set, multiset, map, multimap; - allowed arguments for stl containers are: simple data types, string, object, pointer on object; Any other data member can not be (yet) read from xml file and write to xml file. If data member of class is private or protected, it can not be accessed via; member name. Two alternative way is supported. First, if for class member fValue; exists function GetValue(), it will be used to get value from the class, and if; exists SetValue(), it will be used to set apropriate data member. Names of setter; and getter methods can be specified in comments filed like:. int fValue; // *OPTION={GetMethod=""GetV"";SetMethod=""SetV""}. If getter or setter methods does not available, address to data member will be; calculated as predefined offeset to object start address. In that case generated code; should be used only on the same platform (OS + compiler), where it was generated. Generated streamers resolve inheritance tree for given class. This allows to have; array (or vector) of object pointers on some basic class, while objects of derived; class(es) are used. To access data from xml files, user should use TXmlFile class, which is different from; ROOT TXMLFile, but provides very similar functionality. For example, to read; object from xml file:. TXmlFile file(""test.xml""); // open xml file; file.ls(); // show list of keys in file; TExample* ex1 = (TExample*) file.Get(""ex1"", TExample_streamer); // get object; file.Close();. To write object to file:. TXmlFile outfile(""test2.xml"", ""recreate""); // create xml file; TExample* ex1 = new TExample;; outfile.Write(ex1, ""ex1"", TExample_streamer); // write object to file; outfile.Close();. Complete example for generating and using of external ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TXMLPlayer.html:2639,avail,available,2639,root/html528/TXMLPlayer.html,https://root.cern,https://root.cern/root/html528/TXMLPlayer.html,10,['avail'],['available']
Availability," - boxw, ysym - yspace*0.35,; 951 xsym + boxw, ysym - yspace*0.35);; 952 entryline.PaintLineNDC( xsym + boxw, ysym - yspace*0.35,; 953 xsym + boxw, ysym + yspace*0.35);; 954 entryline.PaintLineNDC( xsym - boxw, ysym - yspace*0.35,; 955 xsym - boxw, ysym + yspace*0.35);; 956 } else {; 957 entryline.Paint();; 958 if (opt.Contains(""e"")) {; 959 if ( !opt.Contains(""p"")) {; 960 entryline.PaintLineNDC( xsym, ysym - yspace*arrow_shift,; 961 xsym, ysym + yspace*arrow_shift);; 962 } else {; 963 Double_t sy = (fY2NDC-fY1NDC)*((0.5*(gPad->PixeltoY(0) - gPad->PixeltoY(Int_t(symbolsize*8.))))/(fY2-fY1));; 964 TLine entryline1(xsym, ysym + sy, xsym, ysym + yspace*arrow_shift);; 965 entryline1.SetBit(TLine::kLineNDC);; 966 entry->TAttLine::Copy(entryline1);; 967 entryline1.Paint();; 968 TLine entryline2(xsym, ysym - sy, xsym, ysym - yspace*arrow_shift);; 969 entryline2.SetBit(TLine::kLineNDC);; 970 entry->TAttLine::Copy(entryline2);; 971 entryline2.Paint();; 972 }; 973 DrawEndCaps();; 974 }; 975 }; 976 }; 977 ; 978 // Draw error only; 979 ; 980 if (opt.Contains(""e"") && !(opt.Contains(""l"") || opt.Contains(""f""))) {; 981 if (eobj && eobj->InheritsFrom(TAttLine::Class())) {; 982 dynamic_cast<TAttLine*>(eobj)->Copy(*entry);; 983 }; 984 if ( !opt.Contains(""p"")) {; 985 TLine entryline(xsym, ysym - yspace*arrow_shift,; 986 xsym, ysym + yspace*arrow_shift);; 987 entryline.SetBit(TLine::kLineNDC);; 988 entry->TAttLine::Copy(entryline);; 989 entryline.Paint();; 990 } else {; 991 Double_t sy = (fY2NDC-fY1NDC)*((0.5*(gPad->PixeltoY(0) - gPad->PixeltoY(Int_t(symbolsize*8.))))/(fY2-fY1));; 992 TLine entryline1(xsym, ysym + sy, xsym, ysym + yspace*arrow_shift);; 993 entryline1.SetBit(TLine::kLineNDC);; 994 entry->TAttLine::Copy(entryline1);; 995 entryline1.Paint();; 996 TLine entryline2(xsym, ysym - sy, xsym, ysym - yspace*arrow_shift);; 997 entryline2.SetBit(TLine::kLineNDC);; 998 entry->TAttLine::Copy(entryline2);; 999 entryline2.Paint();; 1000 }; 1001 DrawEndCaps();; 1002 }; 1003 ; 1004 // Draw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TLegend_8cxx_source.html:34610,error,error,34610,doc/master/TLegend_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TLegend_8cxx_source.html,1,['error'],['error']
Availability," - delta %.3f MB"", apKey, initVSIZEval, endVSIZEval, endVSIZEval-initVSIZEval);; 6487 }; 6488 }; 6489 } else if (!IsLoaded(hName)) {; 6490 if (gDebug > 0) {; 6491 Info(""AutoParse"",; 6492 ""Parsing single header %s"", hName);; 6493 }; 6494 auto cRes = ExecAutoParse(hName, kTRUE, GetInterpreterImpl());; 6495 if (cRes != cling::Interpreter::kSuccess) {; 6496 Error(""AutoParse"", ""Error parsing headerfile %s for class %s."", hName, apKey);; 6497 } else {; 6498 nHheadersParsed++;; 6499 }; 6500 }; 6501 }; 6502 }; 6503 else {; 6504 // There is no header registered for this class, if this a; 6505 // template, it will be instantiated if/when it is requested; 6506 // and if we do no load/parse its components we might end up; 6507 // not using an eventual specialization.; 6508 if (strchr(apKey, '<')) {; 6509 nHheadersParsed += AutoParseImplRecurse(apKey, false);; 6510 }; 6511 }; 6512 }; 6513 }; 6514 ; 6515 return nHheadersParsed;; 6516 ; 6517}; 6518 ; 6519////////////////////////////////////////////////////////////////////////////////; 6520/// Parse the headers relative to the class; 6521/// Returns 1 in case of success, 0 in case of failure; 6522 ; 6523Int_t TCling::AutoParse(const char *cls); 6524{; 6525 if (llvm::StringRef(cls).contains(""(lambda)"")); 6526 return 0;; 6527 ; 6528 if (!fHeaderParsingOnDemand || fIsAutoParsingSuspended) {; 6529 if (fClingCallbacks->IsAutoLoadingEnabled()) {; 6530 return AutoLoad(cls);; 6531 } else {; 6532 return 0;; 6533 }; 6534 }; 6535 ; 6536 R__LOCKGUARD(gInterpreterMutex);; 6537 ; 6538 if (gDebug > 1) {; 6539 Info(""TCling::AutoParse"",; 6540 ""Trying to autoparse for %s"", cls);; 6541 }; 6542 ; 6543 // The catalogue of headers is in the dictionary; 6544 if (fClingCallbacks->IsAutoLoadingEnabled(); 6545 && !gClassTable->GetDictNorm(cls)) {; 6546 // Need RAII against recursive (dictionary payload) parsing (ROOT-8445).; 6547 ROOT::Internal::ParsingStateRAII parsingStateRAII(fInterpreter->getParser(),; 6548 fInterpreter->getSema());; 6549 AutoLoad(cls, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:253733,failure,failure,253733,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['failure'],['failure']
Availability, - save the configuration ; : 48 | 20931.2 19705.9 0.0197403 0.00176149 44496.7 0; : 49 Minimum Test error found - save the configuration ; : 49 | 20758.9 19539.2 0.0199993 0.00178715 43926.8 0; : 50 Minimum Test error found - save the configuration ; : 50 | 20589.8 19373.7 0.0199739 0.00177216 43951.9 0; : 51 Minimum Test error found - save the configuration ; : 51 | 20419.5 19213.6 0.0197688 0.0017747 44459 0; : 52 Minimum Test error found - save the configuration ; : 52 | 20255.7 19051.4 0.0197679 0.00177721 44467.5 0; : 53 Minimum Test error found - save the configuration ; : 53 | 20090.6 18891.7 0.0197461 0.00177488 44515.6 0; : 54 Minimum Test error found - save the configuration ; : 54 | 19926.4 18735.4 0.0197628 0.00177559 44476 0; : 55 Minimum Test error found - save the configuration ; : 55 | 19766 18579 0.0197479 0.00177128 44502.3 0; : 56 Minimum Test error found - save the configuration ; : 56 | 19606.6 18423 0.0198259 0.00178958 44354.9 0; : 57 Minimum Test error found - save the configuration ; : 57 | 19448.2 18266.7 0.0197832 0.00177932 44434.9 0; : 58 Minimum Test error found - save the configuration ; : 58 | 19286.3 18101.7 0.0200637 0.00195508 44177.8 0; : 59 Minimum Test error found - save the configuration ; : 59 | 19133.8 17932.7 0.0198394 0.00178813 44318.1 0; : 60 Minimum Test error found - save the configuration ; : 60 | 18976.4 17813.4 0.0198417 0.00178241 44298.6 0; : 61 Minimum Test error found - save the configuration ; : 61 | 18829.3 17664.6 0.0197742 0.00177192 44438.7 0; : 62 Minimum Test error found - save the configuration ; : 62 | 18675.1 17508.4 0.0197937 0.00177252 44392.2 0; : 63 Minimum Test error found - save the configuration ; : 63 | 18512.9 17340.5 0.019822 0.0017786 44337.4 0; : 64 Minimum Test error found - save the configuration ; : 64 | 18353.5 17179.2 0.0198469 0.00178029 44280.6 0; : 65 Minimum Test error found - save the configuration ; : 65 | 18201.3 17035.2 0.0198777 0.00178599 44219.2 0; : 66 Minimum Test error fou,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:17426,error,error,17426,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, - save the configuration ; : 49 | 20758.9 19539.2 0.0199993 0.00178715 43926.8 0; : 50 Minimum Test error found - save the configuration ; : 50 | 20589.8 19373.7 0.0199739 0.00177216 43951.9 0; : 51 Minimum Test error found - save the configuration ; : 51 | 20419.5 19213.6 0.0197688 0.0017747 44459 0; : 52 Minimum Test error found - save the configuration ; : 52 | 20255.7 19051.4 0.0197679 0.00177721 44467.5 0; : 53 Minimum Test error found - save the configuration ; : 53 | 20090.6 18891.7 0.0197461 0.00177488 44515.6 0; : 54 Minimum Test error found - save the configuration ; : 54 | 19926.4 18735.4 0.0197628 0.00177559 44476 0; : 55 Minimum Test error found - save the configuration ; : 55 | 19766 18579 0.0197479 0.00177128 44502.3 0; : 56 Minimum Test error found - save the configuration ; : 56 | 19606.6 18423 0.0198259 0.00178958 44354.9 0; : 57 Minimum Test error found - save the configuration ; : 57 | 19448.2 18266.7 0.0197832 0.00177932 44434.9 0; : 58 Minimum Test error found - save the configuration ; : 58 | 19286.3 18101.7 0.0200637 0.00195508 44177.8 0; : 59 Minimum Test error found - save the configuration ; : 59 | 19133.8 17932.7 0.0198394 0.00178813 44318.1 0; : 60 Minimum Test error found - save the configuration ; : 60 | 18976.4 17813.4 0.0198417 0.00178241 44298.6 0; : 61 Minimum Test error found - save the configuration ; : 61 | 18829.3 17664.6 0.0197742 0.00177192 44438.7 0; : 62 Minimum Test error found - save the configuration ; : 62 | 18675.1 17508.4 0.0197937 0.00177252 44392.2 0; : 63 Minimum Test error found - save the configuration ; : 63 | 18512.9 17340.5 0.019822 0.0017786 44337.4 0; : 64 Minimum Test error found - save the configuration ; : 64 | 18353.5 17179.2 0.0198469 0.00178029 44280.6 0; : 65 Minimum Test error found - save the configuration ; : 65 | 18201.3 17035.2 0.0198777 0.00178599 44219.2 0; : 66 Minimum Test error found - save the configuration ; : 66 | 18048.3 16883.1 0.019869 0.0017844 44236.5 0; : 67 Minimum Test error found,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:17538,error,error,17538,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, - save the configuration ; : 50 | 20589.8 19373.7 0.0199739 0.00177216 43951.9 0; : 51 Minimum Test error found - save the configuration ; : 51 | 20419.5 19213.6 0.0197688 0.0017747 44459 0; : 52 Minimum Test error found - save the configuration ; : 52 | 20255.7 19051.4 0.0197679 0.00177721 44467.5 0; : 53 Minimum Test error found - save the configuration ; : 53 | 20090.6 18891.7 0.0197461 0.00177488 44515.6 0; : 54 Minimum Test error found - save the configuration ; : 54 | 19926.4 18735.4 0.0197628 0.00177559 44476 0; : 55 Minimum Test error found - save the configuration ; : 55 | 19766 18579 0.0197479 0.00177128 44502.3 0; : 56 Minimum Test error found - save the configuration ; : 56 | 19606.6 18423 0.0198259 0.00178958 44354.9 0; : 57 Minimum Test error found - save the configuration ; : 57 | 19448.2 18266.7 0.0197832 0.00177932 44434.9 0; : 58 Minimum Test error found - save the configuration ; : 58 | 19286.3 18101.7 0.0200637 0.00195508 44177.8 0; : 59 Minimum Test error found - save the configuration ; : 59 | 19133.8 17932.7 0.0198394 0.00178813 44318.1 0; : 60 Minimum Test error found - save the configuration ; : 60 | 18976.4 17813.4 0.0198417 0.00178241 44298.6 0; : 61 Minimum Test error found - save the configuration ; : 61 | 18829.3 17664.6 0.0197742 0.00177192 44438.7 0; : 62 Minimum Test error found - save the configuration ; : 62 | 18675.1 17508.4 0.0197937 0.00177252 44392.2 0; : 63 Minimum Test error found - save the configuration ; : 63 | 18512.9 17340.5 0.019822 0.0017786 44337.4 0; : 64 Minimum Test error found - save the configuration ; : 64 | 18353.5 17179.2 0.0198469 0.00178029 44280.6 0; : 65 Minimum Test error found - save the configuration ; : 65 | 18201.3 17035.2 0.0198777 0.00178599 44219.2 0; : 66 Minimum Test error found - save the configuration ; : 66 | 18048.3 16883.1 0.019869 0.0017844 44236.5 0; : 67 Minimum Test error found - save the configuration ; : 67 | 17898.4 16736.1 0.0198962 0.00180855 44229.1 0; : 68 Minimum Test error found,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:17650,error,error,17650,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, - save the configuration ; : 51 | 20419.5 19213.6 0.0197688 0.0017747 44459 0; : 52 Minimum Test error found - save the configuration ; : 52 | 20255.7 19051.4 0.0197679 0.00177721 44467.5 0; : 53 Minimum Test error found - save the configuration ; : 53 | 20090.6 18891.7 0.0197461 0.00177488 44515.6 0; : 54 Minimum Test error found - save the configuration ; : 54 | 19926.4 18735.4 0.0197628 0.00177559 44476 0; : 55 Minimum Test error found - save the configuration ; : 55 | 19766 18579 0.0197479 0.00177128 44502.3 0; : 56 Minimum Test error found - save the configuration ; : 56 | 19606.6 18423 0.0198259 0.00178958 44354.9 0; : 57 Minimum Test error found - save the configuration ; : 57 | 19448.2 18266.7 0.0197832 0.00177932 44434.9 0; : 58 Minimum Test error found - save the configuration ; : 58 | 19286.3 18101.7 0.0200637 0.00195508 44177.8 0; : 59 Minimum Test error found - save the configuration ; : 59 | 19133.8 17932.7 0.0198394 0.00178813 44318.1 0; : 60 Minimum Test error found - save the configuration ; : 60 | 18976.4 17813.4 0.0198417 0.00178241 44298.6 0; : 61 Minimum Test error found - save the configuration ; : 61 | 18829.3 17664.6 0.0197742 0.00177192 44438.7 0; : 62 Minimum Test error found - save the configuration ; : 62 | 18675.1 17508.4 0.0197937 0.00177252 44392.2 0; : 63 Minimum Test error found - save the configuration ; : 63 | 18512.9 17340.5 0.019822 0.0017786 44337.4 0; : 64 Minimum Test error found - save the configuration ; : 64 | 18353.5 17179.2 0.0198469 0.00178029 44280.6 0; : 65 Minimum Test error found - save the configuration ; : 65 | 18201.3 17035.2 0.0198777 0.00178599 44219.2 0; : 66 Minimum Test error found - save the configuration ; : 66 | 18048.3 16883.1 0.019869 0.0017844 44236.5 0; : 67 Minimum Test error found - save the configuration ; : 67 | 17898.4 16736.1 0.0198962 0.00180855 44229.1 0; : 68 Minimum Test error found - save the configuration ; : 68 | 17745 16589.7 0.0198886 0.00178724 44195.6 0; : 69 Minimum Test error found -,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:17762,error,error,17762,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, - save the configuration ; : 6 | 30965 29177.4 0.0203037 0.00185469 43362.8 0; : 7 Minimum Test error found - save the configuration ; : 7 | 30273.8 28682.9 0.0206315 0.00190133 42711.9 0; : 8 Minimum Test error found - save the configuration ; : 8 | 29852.4 28319.6 0.0206438 0.00186969 42611.9 0; : 9 Minimum Test error found - save the configuration ; : 9 | 29498.2 28000.3 0.0204359 0.0018446 43030.8 0; : 10 Minimum Test error found - save the configuration ; : 10 | 29182.7 27696.8 0.0202998 0.00181461 43277.8 0; : 11 Minimum Test error found - save the configuration ; : 11 | 28878.3 27413.2 0.0196838 0.00176755 44652.2 0; : 12 Minimum Test error found - save the configuration ; : 12 | 28593.7 27134.7 0.0196593 0.00176089 44696.8 0; : 13 Minimum Test error found - save the configuration ; : 13 | 28310.5 26871.8 0.0196662 0.00176724 44695.4 0; : 14 Minimum Test error found - save the configuration ; : 14 | 28043.7 26610.8 0.019761 0.00176915 44464.7 0; : 15 Minimum Test error found - save the configuration ; : 15 | 27781.4 26354.5 0.0197825 0.0017915 44466.6 0; : 16 Minimum Test error found - save the configuration ; : 16 | 27524.2 26104.3 0.0196926 0.00175551 44600.3 0; : 17 Minimum Test error found - save the configuration ; : 17 | 27271.4 25860.7 0.0197778 0.00177907 44447.7 0; : 18 Minimum Test error found - save the configuration ; : 18 | 27023.6 25622.6 0.0197311 0.00176281 44522.9 0; : 19 Minimum Test error found - save the configuration ; : 19 | 26780.6 25388.8 0.0197339 0.00176163 44513.1 0; : 20 Minimum Test error found - save the configuration ; : 20 | 26542.7 25157.4 0.0198818 0.0018763 44431 0; : 21 Minimum Test error found - save the configuration ; : 21 | 26311 24925.1 0.0199584 0.00175652 43951.6 0; : 22 Minimum Test error found - save the configuration ; : 22 | 26076.9 24700.5 0.0197873 0.00176359 44385.9 0; : 23 Minimum Test error found - save the configuration ; : 23 | 25845.4 24483.8 0.0196702 0.00176161 44671.3 0; : 24 Minimum Test error found -,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:12754,error,error,12754,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability," -1 on error. Int_t RunCPU(Long64_t nevents = -1, Int_t start = -1, Int_t stop = -1, Int_t step = -1); Perform the CPU run; Return 0 on success, -1 on error. Int_t RunCPUx(Long64_t nevents = -1, Int_t start = -1, Int_t stop = -1); Perform the CPU run scanning over the number of workers per node; Return 0 on success, -1 on error. void DrawCPU(const char* outfile, const char* opt = ""std:""); Draw the CPU speedup plot.; opt = 'std:' draw standard evt/s plot; 'stdx:' draw standard evt/s plot, 1 worker per node; 'norm:' draw normalized plot; 'normx:' draw normalized plot, 1 worker per node. Int_t RunDataSet(const char* dset = ""BenchDataSet"", Int_t start = 1, Int_t stop = -1, Int_t step = 1); Perform a test using dataset 'dset'; Return 0 on success, -1 on error; Open the file for the results. Int_t RunDataSetx(const char* dset = ""BenchDataSet"", Int_t start = 1, Int_t stop = -1); Perform a test using dataset 'dset' scanning over the number of workers; per node.; Return 0 on success, -1 on error; Open the file for the results. void DrawDataSet(const char* outfile, const char* opt = ""std:"", const char* type = ""mbs""); Draw the CPU speedup plot.; opt = 'std:' Standard scaling plot; 'norm:' Normalized scaling plot; 'stdx:' Standard scaling plot, 1 worker per node; 'normx:' Normalized scaling plot, 1 worker per node; type = 'mbs' MB/s scaling plots (default); 'evts' Event/s scaling plots. Int_t ReleaseCache(const char* dset); Release memory cache for dataset 'dset'; Return 0 on success, -1 on error. Int_t RemoveDataSet(const char* dset); Physically remove the dataset 'dset', i.e. remove the dataset and the files; it describes; Return 0 on success, -1 on error. Int_t MakeDataSet(const char* dset = 0, Long64_t nevt = -1, const char* fnroot = ""event"", Bool_t regenerate = kFALSE); Create the largest dataset for the run.; Defaults for; dataset name, filename root; are; ""BenchDataSet"", ""event""; respectively.; Default selecor is TSelEventGen. Use SetDataGenSel and SetDataGenOar to chang",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofBench.html:9134,error,error,9134,root/html530/TProofBench.html,https://root.cern,https://root.cern/root/html530/TProofBench.html,1,['error'],['error']
Availability," -1 on error. TObject * HandleHistogram(TObject* obj); Low statistic histograms need a special treatment when using autobin. Bool_t HistoSameAxis(TH1* h0, TH1* h1); Return kTRUE is the histograms 'h0' and 'h1' have the same binning and ranges; on the axis (i.e. if they can be just Add-ed for merging). void StoreOutput(TList* out); Store received output list. TList * MergeFeedback(); Merge feedback lists. void StoreFeedback(TObject* slave, TList* out); Store feedback results from the specified slave. void SetupFeedback(); Setup reporting of feedback objects. void StopFeedback(); Stop reporting of feedback objects. Bool_t HandleTimer(TTimer* timer); Send feedback objects to client. TDSetElement * GetNextPacket(TSlave* slave, TMessage* r); Get next packet for specified slave. Bool_t IsClient() const; Is the player running on the client?. Long64_t DrawSelect(TDSet* set, const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0); Draw (support for TChain::Draw()).; Returns -1 in case of error or number of selected events in case of success. void SetInitTime(); Set init time. TVirtualPacketizer * GetPacketizer() const; { return 0; }. void Progress(Long64_t total, Long64_t processed). void Progress(TSlave* , Long64_t total, Long64_t processed); { Progress(total, processed); }. void Progress(Long64_t total, Long64_t processed, Long64_t bytesread, Float_t initTime, Float_t procTime, Float_t evtrti, Float_t mbrti). TProof * GetProof() const; { return fProof; }. TProofPlayerRemote(TProof* proof = 0); { fProgressStatus = new TProofProgressStatus(); }. » Author: Maarten Ballintijn 07/01/02 » Copyright (C) 1995-2001, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TProofPlayer.h 39442 2011-05-27 09:13:25Z ganis $ » Last generated: 2011-07-04 15:36; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofPlayerRemote.html:19839,error,error,19839,root/html530/TProofPlayerRemote.html,https://root.cern,https://root.cern/root/html530/TProofPlayerRemote.html,1,['error'],['error']
Availability," -1). overridevirtual . Set total number of bins including under/overflow. ; Reallocate bin contents array ; Reimplemented from TH1D.; Definition at line 1729 of file TProfile.cxx. ◆ SetBuffer(). void TProfile::SetBuffer ; (; Int_t ; buffersize, . Option_t * ; option = """" . ). overridevirtual . Set the buffer size in units of 8 bytes (double). ; Reimplemented from TH1.; Definition at line 1738 of file TProfile.cxx. ◆ SetErrorOption(). void TProfile::SetErrorOption ; (; Option_t * ; option = """"). virtual . Set option to compute profile errors. ; The computation of the bin errors is based on the parameter option:; -' ' (Default) The bin errors are the standard error on the mean of the bin profiled values (Y), i.e. the standard error of the bin contents. Note that if TProfile::Approximate() is called, an approximation is used when the spread in Y is 0 and the number of bin entries is > 0 -'s' The bin errors are the standard deviations of the Y bin values Note that if TProfile::Approximate() is called, an approximation is used when the spread in Y is 0 and the number of bin entries is > 0 -'i' Errors are as in default case (standard errors of the bin contents) The only difference is for the case when the spread in Y is zero. In this case for N > 0 the error is 1./SQRT(12.*N) -'g' Errors are 1./SQRT(W) for W not equal to 0 and 0 for W = 0. W is the sum in the bin of the weights of the profile. This option is for combining measurements y +/- dy, and the profile is filled with values y and weights w = 1/dy**2; See TProfile::BuildOptions for a detailed explanation of all options ; Definition at line 1777 of file TProfile.cxx. ◆ Streamer(). void TProfile::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TProfile. ; Reimplemented from TH1D.; Definition at line 1785 of file TProfile.cxx. ◆ StreamerNVirtual(). void TProfile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 138 of file TProfile.h. ◆ Sumw2(). v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:88415,error,errors,88415,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,2,['error'],['errors']
Availability," -1, Int_t remid = -1, Int_t status = kIdle, TProof* p = 0); virtual~TProofDesc(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tGetLocalId() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TProof*GetProof() const; Int_tGetRemoteId() const; Int_tGetStatus() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; const char*GetUrl() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProofDesc.html:1668,error,error,1668,root/html528/TProofDesc.html,https://root.cern,https://root.cern/root/html528/TProofDesc.html,6,['error'],['error']
Availability," -1111)MENU ; virtual voidTF1::SetMinimum(Double_t minimum = -1111)MENU ; virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidTF1::SetNDF(Int_t ndf); virtual voidTF1::SetNpx(Int_t npx = 100)MENU ; virtual voidTFormula::SetNumber(Int_t number); virtual voidTF1::SetNumberFitPoints(Int_t npfits); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTFormula::SetParameter(const char* name, Double_t parvalue); virtual voidTFormula::SetParameter(Int_t ipar, Double_t parvalue); virtual voidTFormula::SetParameters(const Double_t* params); virtual voidTFormula::SetParameters(Double_t p0, Double_t p1, Double_t p2 = 0, Double_t p3 = 0, Double_t p4 = 0, Double_t p5 = 0, Double_t p6 = 0, Double_t p7 = 0, Double_t p8 = 0, Double_t p9 = 0, Double_t p10 = 0)MENU ; virtual voidTF1::SetParent(TObject* p = 0); virtual voidTF1::SetParError(Int_t ipar, Double_t error); virtual voidTF1::SetParErrors(const Double_t* errors); virtual voidTF1::SetParLimits(Int_t ipar, Double_t parmin, Double_t parmax); virtual voidTFormula::SetParName(Int_t ipar, const char* name); virtual voidTFormula::SetParNames(const char* name0 = ""p0"", const char* name1 = ""p1"", const char* name2 = ""p2"", const char* name3 = ""p3"", const char* name4 = ""p4"", const char* name5 = ""p5"", const char* name6 = ""p6"", const char* name7 = ""p7"", const char* name8 = ""p8"", const char* name9 = ""p9"", const char* name10 = ""p10"")MENU ; virtual voidTF1::SetRange(Double_t xmin, Double_t xmax)MENU ; virtual voidTF1::SetRange(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax); virtual voidTF1::SetRange(Double_t xmin, Double_t ymin, Double_t zmin, Double_t xmax, Double_t ymax, Double_t zmax); virtual voidTF1::SetSavedPoint(Int_t point, Double_t value); virtual voidTF1::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetXY(Double_t xy)MENU ; virtual voidShowMembers(TMemberInspector& insp); virtual Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TF12.html:13392,error,errors,13392,root/html528/TF12.html,https://root.cern,https://root.cern/root/html528/TF12.html,4,['error'],['errors']
Availability," -1111)MENU ; virtual voidTF1::SetMinimum(Double_t minimum = -1111)MENU ; virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidTF1::SetNDF(Int_t ndf); virtual voidTF1::SetNpx(Int_t npx = 100)MENU ; virtual voidTFormula::SetNumber(Int_t number); virtual voidTF1::SetNumberFitPoints(Int_t npfits); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTFormula::SetParameter(const char* name, Double_t parvalue); virtual voidTFormula::SetParameter(Int_t ipar, Double_t parvalue); virtual voidTFormula::SetParameters(const Double_t* params); virtual voidTFormula::SetParameters(Double_t p0, Double_t p1, Double_t p2 = 0, Double_t p3 = 0, Double_t p4 = 0, Double_t p5 = 0, Double_t p6 = 0, Double_t p7 = 0, Double_t p8 = 0, Double_t p9 = 0, Double_t p10 = 0)MENU ; virtual voidTF1::SetParent(TObject* p = 0); virtual voidTF1::SetParError(Int_t ipar, Double_t error); virtual voidTF1::SetParErrors(const Double_t* errors); virtual voidTF1::SetParLimits(Int_t ipar, Double_t parmin, Double_t parmax); virtual voidTFormula::SetParName(Int_t ipar, const char* name); virtual voidTFormula::SetParNames(const char* name0 = ""p0"", const char* name1 = ""p1"", const char* name2 = ""p2"", const char* name3 = ""p3"", const char* name4 = ""p4"", const char* name5 = ""p5"", const char* name6 = ""p6"", const char* name7 = ""p7"", const char* name8 = ""p8"", const char* name9 = ""p9"", const char* name10 = ""p10"")MENU ; virtual voidTF1::SetRange(Double_t xmin, Double_t xmax)MENU ; virtual voidTF1::SetRange(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax); virtual voidTF1::SetRange(Double_t xmin, Double_t ymin, Double_t zmin, Double_t xmax, Double_t ymax, Double_t zmax); virtual voidTF1::SetSavedPoint(Int_t point, Double_t value); virtual voidTF1::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetXY(Double_t xy)MENU ; virtual voidShowMembers(TMemberInspector&); virtual Int_tTNa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TF12.html:14006,error,errors,14006,root/html534/TF12.html,https://root.cern,https://root.cern/root/html534/TF12.html,2,['error'],['errors']
Availability, -1;; 223}; 224 ; 225 ; 226////////////////////////////////////////////////////////////////////////////////; 227/// This function is called by Graph2DFitChisquare.; 228/// It returns the error along Z at point i.; 229 ; 230Double_t TGraph2DErrors::GetErrorZ(Int_t i) const; 231{; 232 if (i < 0 || i >= fNpoints) return -1;; 233 if (fEZ) return fEZ[i];; 234 return -1;; 235}; 236 ; 237 ; 238////////////////////////////////////////////////////////////////////////////////; 239/// Returns the X maximum with errors.; 240 ; 241Double_t TGraph2DErrors::GetXmaxE() const; 242{; 243 Double_t v = fX[0]+fEX[0];; 244 for (Int_t i=1; i<fNpoints; i++) if (fX[i]+fEX[i]>v) v=fX[i]+fEX[i];; 245 return v;; 246}; 247 ; 248 ; 249////////////////////////////////////////////////////////////////////////////////; 250/// Returns the X minimum with errors.; 251 ; 252Double_t TGraph2DErrors::GetXminE() const; 253{; 254 Double_t v = fX[0]-fEX[0];; 255 for (Int_t i=1; i<fNpoints; i++) if (fX[i]-fEX[i]<v) v=fX[i]-fEX[i];; 256 return v;; 257}; 258 ; 259 ; 260////////////////////////////////////////////////////////////////////////////////; 261/// Returns the Y maximum with errors.; 262 ; 263Double_t TGraph2DErrors::GetYmaxE() const; 264{; 265 Double_t v = fY[0]+fEY[0];; 266 for (Int_t i=1; i<fNpoints; i++) if (fY[i]+fEY[i]>v) v=fY[i]+fEY[i];; 267 return v;; 268}; 269 ; 270 ; 271////////////////////////////////////////////////////////////////////////////////; 272/// Returns the Y minimum with errors.; 273 ; 274Double_t TGraph2DErrors::GetYminE() const; 275{; 276 Double_t v = fY[0]-fEY[0];; 277 for (Int_t i=1; i<fNpoints; i++) if (fY[i]-fEY[i]<v) v=fY[i]-fEY[i];; 278 return v;; 279}; 280 ; 281 ; 282////////////////////////////////////////////////////////////////////////////////; 283/// Returns the Z maximum with errors.; 284 ; 285Double_t TGraph2DErrors::GetZmaxE() const; 286{; 287 Double_t v = fZ[0]+fEZ[0];; 288 for (Int_t i=1; i<fNpoints; i++) if (fZ[i]+fEZ[i]>v) v=fZ[i]+fEZ[i];; 289 return v;; 290}; 2,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2DErrors_8cxx_source.html:7636,error,errors,7636,doc/master/TGraph2DErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraph2DErrors_8cxx_source.html,1,['error'],['errors']
Availability," -Wno-xyz flags as pragmas:\n%s"", res.str().c_str());; 4587 return 1;; 4588 }; 4589 }; 4590 ; 4591 class IgnoringPragmaHandler: public clang::PragmaNamespace {; 4592 public:; 4593 IgnoringPragmaHandler(const char* pragma):; 4594 clang::PragmaNamespace(pragma) {}; 4595 void HandlePragma(clang::Preprocessor &PP,; 4596 clang::PragmaIntroducer Introducer,; 4597 clang::Token &tok) override {; 4598 PP.DiscardUntilEndOfDirective();; 4599 }; 4600 };; 4601 ; 4602 // Ignore these #pragmas to suppress ""unknown pragma"" warnings.; 4603 // See LinkdefReader.cxx.; 4604 PP.AddPragmaHandler(new IgnoringPragmaHandler(""link""));; 4605 PP.AddPragmaHandler(new IgnoringPragmaHandler(""extra_include""));; 4606 PP.AddPragmaHandler(new IgnoringPragmaHandler(""read""));; 4607 PP.AddPragmaHandler(new IgnoringPragmaHandler(""create""));; 4608 ; 4609 if (!interpreterDeclarations.empty() &&; 4610 interp.declare(interpreterDeclarations) != cling::Interpreter::kSuccess) {; 4611 ROOT::TMetaUtils::Error(nullptr, ""%s: Linkdef compilation failure\n"", executableFileName);; 4612 return 1;; 4613 }; 4614 ; 4615 ; 4616 TModuleGenerator modGen(interp.getCI(),; 4617 gOptInlineInput,; 4618 gOptSharedLibFileName,; 4619 gOptWriteEmptyRootPCM);; 4620 ; 4621 if (!gDriverConfig->fBuildingROOTStage1 && !filesIncludedByLinkdef.empty()) {; 4622 pcmArgs.push_back(linkdef);; 4623 }; 4624 ; 4625 modGen.ParseArgs(pcmArgs);; 4626 ; 4627 if (!gDriverConfig->fBuildingROOTStage1) {; 4628 // Forward the -I, -D, -U; 4629 for (const std::string & inclPath : modGen.GetIncludePaths()) {; 4630 interp.AddIncludePath(inclPath);; 4631 }; 4632 std::stringstream definesUndefinesStr;; 4633 modGen.WritePPDefines(definesUndefinesStr);; 4634 modGen.WritePPUndefines(definesUndefinesStr);; 4635 if (!definesUndefinesStr.str().empty()) {; 4636 if (interp.declare(definesUndefinesStr.str()) != cling::Interpreter::kSuccess) {; 4637 ROOT::TMetaUtils::Error(nullptr, ""Failed to parse -D, -U flags as preprocessor directives:\n%s"", definesUndefinesStr.str().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:189548,failure,failure,189548,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,1,['failure'],['failure']
Availability," -a -m <message> -c ORIG_HEAD. Note that the -c ORIG_HEAD clause causes git to use the meta-data from the previous HEAD (author, etc) with the exception of the commit message. Changing the -c to -C and omitting the -m option will cause git to reuse the commit message too. Recover deleted (committed files). Get a list of all commits with deleted files:; git log --diff-filter=D --summary | less. Find your file and note the SHA1 hash for that commit.; Recover it:; git checkout <commit>^ -- file. Stage selected changes within a file. git add --patch ; Follow the on-screen directions. Tig: a simple and colored text-mode interface for Git; Tig is a command line tool that wraps many Git browse operations (like log, diff, show, status) in a colored text-mode interface based on ncurses. Tig has been written by Jonas Fonseca.; See the full Tig manual for a detailed description.; Obtaining Tig; Tig is available as package from many Linux distributions. On Debian/Ubuntu it is available with the package name tig from the default repositories.; On RHEL-based systems it is available from the additional repository RepoForge.; On OS X it is easily installed via Homebrew:; brew install tig. Tig pager mode; Many git commands can be piped into tig. When tig is invoked this way, it is in pager mode: output will be colored according to the input format, and colored.; For instance it is possible to pipe the differences of one file like this:; git diff path/to/file.cxx | tig. or see the changes of one revision like this:; git show b204d4c87 | tig. The most important interactive tig commands are:. 'h': opens the help screen; 'q': closes current window; 'Q': closes all windows and exits. Log view; Tig invoked without any argument spawns a full log view with one line per commit including author, date and log message. Heads of the different branches are clearly indicated. To see a graph view indicating branching graphically (just like git log --oneline --graph), do:; tig --all. A log can be se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/git-tips-and-tricks.html:16406,avail,available,16406,d/git-tips-and-tricks.html,https://root.cern,https://root.cern/d/git-tips-and-tricks.html,1,['avail'],['available']
Availability," -inf, ymax = +inf) ; [in]optionthis is the option for the computation of the y error of the profile ( TProfile::GetBinError ) possible values for the options are:; ' ' (Default) the bin errors are the standard error on the mean of Y = S(Y)/SQRT(N) where S(Y) is the standard deviation (RMS) of the Y data in the bin and N is the number of bin entries (from TProfile::GetBinEntries(ibin) ) (i.e the errors are the standard error on the bin content of the profile); 's' Errors are the standard deviation of Y, S(Y); 'i' Errors are S(Y)/SQRT(N) (standard error on the mean as in the default) The only difference is only when the standard deviation in Y is zero. In this case the error a standard deviation = 1/SQRT(12) is assumed and the error is 1./SQRT(12*N). This approximation assumes that the Y values are integer (e.g. ADC counts) and have an implicit uncertainty of y +/- 0.5. With the assumption that the probability that y takes any value between y-0.5 and y+0.5 is uniform, its standard error is 1/SQRT(12); 'g' Errors are 1./SQRT(W) where W is the sum of the weights for the bin j W is obtained as from TProfile::GetBinEntries(ibin) This errors corresponds to the standard deviation of weighted mean where each measurement Y is uncorrelated and has an error sigma, which is expressed in the weight used to fill the Profile: w = 1/sigma^2 The resulting error in TProfile is then 1./SQRT( Sum(1./sigma^2) ). In the case of Profile filled weights and with TProfile::Sumw2() called, STD(Y) is the standard deviation of the weighted sample Y and N is in this case the number of effective entries (TProfile::GetBinEffectiveEntries(ibin) ); If a bin has N data points all with the same value Y (especially possible when dealing with integers), the spread in Y for that bin is zero, and the uncertainty assigned is also zero, and the bin is ignored in making subsequent fits. To avoid this problem one can use an approximation for the standard deviation S(Y), by using the average of all the S(Y) of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:65247,error,error,65247,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,1,['error'],['error']
Availability," . (c)SetTauError()GetEmatrixSysTau() GetDeltaSysTau() A systematic error on the regularisation parameter tau . (d)SubtractBackground() GetEmatrixSysBackgroundUncorr()n.a. uncorrelated errors on background sources, originating from the errors provided with the background histograms . (e)SubtractBackground GetEmatrixSysBackgroundScale()GetDeltaSysBackgroundScale() scale errors on background sources . (i)SetInput() GetEmatrixInput()n.a.statistical uncertainty of the input (the measurement) . (i)+(d)+(e)see aboveGetEmatrix()n.a. Partial sun of uncertainties: all sources which are propagated to the covariance before unfolding . (i)+(a)+(b)+(c)+(d)+(e)see aboveGetEmatrixTotal() n.a.All known error sources summed up . Note: (a), (b), (c) are propagated to the result AFTER unfolding, whereas the background errors (d) and (e) are added to the data errors BEFORE unfolding. For this reason the errors of type (d) and (e) are INCLUDED in the standard error matrix and other methods provided by the base class TUnfold, whereas errors of type (a), (b), (c) are NOT INCLUDED in the methods provided by the base class TUnfold. ; Definition at line 59 of file TUnfoldSys.h. Public Types; enum  ESysErrMode { kSysErrModeMatrix =0; , kSysErrModeShift =1; , kSysErrModeRelative =2; };  type of matrix specified with AddSysError() More...;  ;  Public Types inherited from TUnfold; enum  EConstraint { kEConstraintNone =0; , kEConstraintArea =1; };  type of extra constraint More...;  ; enum  EHistMap { kHistMapOutputHoriz = 0; , kHistMapOutputVert = 1; };  arrangement of axes for the response matrix (TH2 histogram) More...;  ; enum  ERegMode { ;   kRegModeNone = 0; , kRegModeSize = 1; , kRegModeDerivative = 2; , kRegModeCurvature = 3; , ;   kRegModeMixed = 4. };  choice of regularisation scheme More...;  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldSys.html:4248,error,errors,4248,doc/master/classTUnfoldSys.html,https://root.cern,https://root.cern/doc/master/classTUnfoldSys.html,3,['error'],"['error', 'errors']"
Availability," . Change category state to state specified by another category state. ; If printError is set, a message will be printed if the specified index does not represent a valid state. NoteThe state name of the other category is ignored. ; Returnsbool to signal an error. ; Definition at line 48 of file RooAbsCategoryLValue.h. ◆ setIndex() [2/3]. bool RooSuperCategory::setIndex ; (; value_type ; index, . bool ; printError = true . ). overridevirtual . Set the value of the super category to the specified index. ; This will propagate to the sub-categories, and set their state accordingly. ; Implements RooAbsCategoryLValue.; Definition at line 88 of file RooSuperCategory.cxx. ◆ setIndex() [3/3]. virtual bool RooAbsCategoryLValue::setIndex ; (; value_type ; index, . bool ; printError = true . ). virtual . Change category state by specifying the index code of the desired state. ; If printError is set, a message will be printed if the specified index does not represent a valid state. Returnsbool to signal an error. ; Implements RooAbsCategoryLValue. ◆ setLabel() [1/4]. bool RooSuperCategory::setLabel ; (; const char * ; label, . bool ; printError = true . ). overridevirtual . Set the value of the super category by specifying the state name. ; This looks up the corresponding index number, and calls setIndex(). ; Implements RooAbsCategoryLValue.; Definition at line 119 of file RooSuperCategory.cxx. ◆ setLabel() [2/4]. virtual bool RooAbsCategoryLValue::setLabel ; (; const char * ; label, . bool ; printError = true . ). virtual . Change category state by specifying a state name. ; If printError is set, a message will be printed if the specified state name does not represent a valid state. Returnsbool to signal an error. ; Implements RooAbsCategoryLValue. ◆ setLabel() [3/4]. bool RooAbsCategoryLValue::setLabel ; (; const std::pair< std::string, value_type > & ; nameIdxPair, . bool ; printError = true . ). inline . Change category state to the state name of another category. ; If prin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooSuperCategory.html:53051,error,error,53051,doc/master/classRooSuperCategory.html,https://root.cern,https://root.cern/doc/master/classRooSuperCategory.html,1,['error'],['error']
Availability," . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSQLObjectData(); default contrsuctor. TSQLObjectData(TSQLClassInfo* sqlinfo, Long64_t objid, TSQLResult* classdata, TSQLRow* classrow, TSQLResult* blobdata, TSQLStatement* blobstmt); normal contrsuctor,. ~TSQLObjectData(); destructor of TSQLObjectData object. Int_t GetNumClassFields(); return number of columns in class table result. const char* GetClassFieldName(Int_t n); get name of class table column. Bool_t LocateColumn(const char* colname, Bool_t isblob = kFALSE); locate column of that name in results. Bool_t ShiftBlobRow(); shift cursor to next blob value. Bool_t ExtractBlobValues(); extract from curent blob row value and names identifiers. void AddUnpack(const char* tname, const char* value); add emulated data; this used to place version or TObject raw data, read from normal tables. void AddUnpackInt(const char* tname, Int_t value); emulate integer value in raw data. void ShiftToNextValue(); shift to next column or next row in blob data. Bool_t VerifyDataType(const char* tname, Bool_t errormsg = kTRUE); checks if data type corresponds to that stored in raw table. Bool_t PrepareForRawData(); prepare to read data from raw table. Long64_t GetObjId() const; { return fObjId; }. TSQLObjectData(). TSQLClassInfo* GetInfo() const; { return fInfo; }. Bool_t IsBlobData() const; { return fCurrentBlob || (fUnpack!=0); }. const char* GetValue() const; { return fLocatedValue; }. const char* GetLocatedField() const; { return fLocatedField; }. const char* GetBlobPrefixName() const; { return fBlobPrefixName; }. const char* GetBlobTypeName() const; { return fBlobTypeName; }. » Author: Sergey Linev 20/11/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/sql:$Id$ » Last generated: 2015-03-14 16:49; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSQLObjectData.html:7742,error,errormsg,7742,root/html534/TSQLObjectData.html,https://root.cern,https://root.cern/root/html534/TSQLObjectData.html,2,['error'],['errormsg']
Availability, . Definition at line 183 of file TGNumberEntry.h. ◆ Streamer(). void TGNumberEntry::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TGCompositeFrame. ◆ StreamerNVirtual(). void TGNumberEntry::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 273 of file TGNumberEntry.h. ◆ ValueChanged(). void TGNumberEntry::ValueChanged ; (; Long_t ; val). virtual . Emit ValueChanged(Long_t) signal. ; This signal is emitted when fButtonToNum is false. The val has the following meaning: val % 100 is the step size val % 10000 / 100 != 0 indicates log step val / 10000 != 0 indicates button down ; Definition at line 2165 of file TGNumberEntry.cxx. ◆ ValueSet(). void TGNumberEntry::ValueSet ; (; Long_t ; val). virtual . Emit ValueSet(Long_t) signal. ; This signal is emitted when the number entry value is changed. The val has the following meaning: val % 100 is the step size val % 10000 / 100 != 0 indicates log step val / 10000 != 0 indicates button down ; Definition at line 2177 of file TGNumberEntry.cxx. Member Data Documentation. ◆ fButtonDown. TGButton* TGNumberEntry::fButtonDown. protected . Button for decreasing value. ; Definition at line 165 of file TGNumberEntry.h. ◆ fButtonToNum. Bool_t TGNumberEntry::fButtonToNum. protected . Send button messages to parent rather than number entry field. ; Definition at line 166 of file TGNumberEntry.h. ◆ fButtonUp. TGButton* TGNumberEntry::fButtonUp. protected . Button for increasing value. ; Definition at line 164 of file TGNumberEntry.h. ◆ fNumAttr. EAttribute TGNumberEntry::fNumAttr. private . Definition at line 152 of file TGNumberEntry.h. ◆ fNumericEntry. TGNumberEntryField* TGNumberEntry::fNumericEntry. protected . Number text entry field. ; Definition at line 163 of file TGNumberEntry.h. ◆ fNumLimits. ELimit TGNumberEntry::fNumLimits. private . Definition at line 153 of file TGNumberEntry.h. ◆ fNumStyle. EStyle TGNumberEntry::fNumStyle.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGNumberEntry.html:47589,down,down,47589,doc/master/classTGNumberEntry.html,https://root.cern,https://root.cern/doc/master/classTGNumberEntry.html,1,['down'],['down']
Availability," . Definition at line 192 of file TTreeFormula.h. ◆ GetMethodCall(). TMethodCall * TTreeFormula::GetMethodCall ; (; Int_t ; code); const. Return methodcall corresponding to code. ; function called by TLeafObject::GetValue with the value of fLookupType computed in TTreeFormula::DefinedVariable ; Definition at line 4476 of file TTreeFormula.cxx. ◆ GetMultiplicity(). virtual Int_t TTreeFormula::GetMultiplicity ; (; ); const. inlinevirtual . Definition at line 194 of file TTreeFormula.h. ◆ GetNcodes(). virtual Int_t TTreeFormula::GetNcodes ; (; ); const. inlinevirtual . Definition at line 196 of file TTreeFormula.h. ◆ GetNdata(). Int_t TTreeFormula::GetNdata ; (; ). virtual . Return number of available instances in the formula. ; Definition at line 4485 of file TTreeFormula.cxx. ◆ GetRealInstance(). Int_t TTreeFormula::GetRealInstance ; (; Int_t ; instance, . Int_t ; codeindex . ). protected . Now let calculate what physical instance we really need. ; Some redundant code is used to speed up the cases where they are no dimensions.; We know that instance is less that fCumulUsedSize[0] so we can skip the modulo when virt_dim is 0. ; Definition at line 3362 of file TTreeFormula.cxx. ◆ GetTree(). virtual TTree * TTreeFormula::GetTree ; (; ); const. inlinevirtual . Definition at line 213 of file TTreeFormula.h. ◆ GetValueFromMethod(). Double_t TTreeFormula::GetValueFromMethod ; (; Int_t ; i, . TLeaf * ; leaf . ); const. protectedvirtual . Return result of a leafobject method. ; Definition at line 4493 of file TTreeFormula.cxx. ◆ GetValuePointerFromMethod(). void * TTreeFormula::GetValuePointerFromMethod ; (; Int_t ; i, . TLeaf * ; leaf . ); const. protectedvirtual . Return result of a leafobject method. ; Definition at line 4554 of file TTreeFormula.cxx. ◆ Init(). void TTreeFormula::Init ; (; const char * ; name, . const char * ; formula . ). protected . Initialization called from the constructors. ; Definition at line 178 of file TTreeFormula.cxx. ◆ IsA(). TClass * TTreeForm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeFormula.html:41972,redundant,redundant,41972,doc/master/classTTreeFormula.html,https://root.cern,https://root.cern/doc/master/classTTreeFormula.html,1,['redundant'],['redundant']
Availability," . Definition at line 313 of file TProofPlayer.h. ◆ ~TProofPlayerRemote(). TProofPlayerRemote::~TProofPlayerRemote ; (; ). override . Destructor. ; Definition at line 1899 of file TProofPlayer.cxx. Member Function Documentation. ◆ AddOutput(). void TProofPlayerRemote::AddOutput ; (; TList * ; out). overridevirtual . Incorporate the content of the received output list 'out' into the final output list fOutput. ; The latter is created if not existing. This method short cuts 'StoreOutput + MergeOutput' limiting the memory consumption. ; Reimplemented from TProofPlayer.; Definition at line 3507 of file TProofPlayer.cxx. ◆ AddOutputObject(). Int_t TProofPlayerRemote::AddOutputObject ; (; TObject * ; obj). overridevirtual . Incorporate the received object 'obj' into the output list fOutput. ; The latter is created if not existing. This method short cuts 'StoreOutput + MergeOutput' optimizing the memory consumption. Returns -1 in case of error, 1 if the object has been merged into another one (so that its ownership has not been taken and can be deleted), and 0 otherwise. ; Reimplemented from TProofPlayer.; Definition at line 3344 of file TProofPlayer.cxx. ◆ Class(). static TClass * TProofPlayerRemote::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TProofPlayerRemote::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TProofPlayerRemote::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 366 of file TProofPlayer.h. ◆ DeclFileName(). static const char * TProofPlayerRemote::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 366 of file TProofPlayer.h. ◆ DrawSelect(). Long64_t TProofPlayerRemote::DrawSelect ; (; TDSet * ; set, . const char * ; varexp, . const char * ; selection, . Option_t * ; option = """", . Long64_t ; nentries = -1, . Long64_t ; firstentry = 0 . ). overri",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofPlayerRemote.html:26660,error,error,26660,doc/master/classTProofPlayerRemote.html,https://root.cern,https://root.cern/doc/master/classTProofPlayerRemote.html,1,['error'],['error']
Availability," . Definition at line 98 of file TTreeDrawArgsParser.h. ◆ GetShouldDraw(). bool TTreeDrawArgsParser::GetShouldDraw ; (; ); const. inline . Definition at line 88 of file TTreeDrawArgsParser.h. ◆ GetVarExp() [1/2]. TString TTreeDrawArgsParser::GetVarExp ; (; ); const. Returns the variable string, i.e. [var1[:var2[:var2[:var4]]]]. ; Definition at line 405 of file TTreeDrawArgsParser.cxx. ◆ GetVarExp() [2/2]. TString TTreeDrawArgsParser::GetVarExp ; (; Int_t ; num); const. Returns the num-th variable string in case of an error prints an error message and returns an empty string. ; Definition at line 393 of file TTreeDrawArgsParser.cxx. ◆ IsA(). TClass * TTreeDrawArgsParser::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 106 of file TTreeDrawArgsParser.h. ◆ IsSpecified(). bool TTreeDrawArgsParser::IsSpecified ; (; int ; num); const. returns true if the num-th parameter was specified otherwise returns fFALSE in case of an error (wrong num) prints an error message and returns false. ; Definition at line 380 of file TTreeDrawArgsParser.cxx. ◆ Parse(). bool TTreeDrawArgsParser::Parse ; (; const char * ; varexp, . const char * ; selection, . Option_t * ; option . ). Parses parameters from TTree::Draw(). . varexp - Variable expression; see TTree::Draw(); selection - selection expression; see TTree::Draw(); option - Drawing option; see TTree::Draw . Definition at line 237 of file TTreeDrawArgsParser.cxx. ◆ ParseName(). bool TTreeDrawArgsParser::ParseName ; (; TString ; name). protected . Syntax: ; [' '*][[\+][' '*]name[(num1 [, [num2] ] [, [num3] ] ...)]]; num's are floating point numbers sets the fileds fNoParameters, fParameterGiven, fParameters, fAdd, fName to appropriate values.; Returns false in case of an error. ; Definition at line 131 of file TTreeDrawArgsParser.cxx. ◆ ParseOption(). bool TTreeDrawArgsParser::ParseOption ; (; ). protected . Check if options contain some data important f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTTreeDrawArgsParser.html:18836,error,error,18836,doc/master/classTTreeDrawArgsParser.html,https://root.cern,https://root.cern/doc/master/classTTreeDrawArgsParser.html,2,['error'],['error']
Availability," . Double_t ; sm, . Double_t ; cm, . Bool_t ; in = kTRUE . ). static . compute distance from point (inside phi) to both phi planes. Return minimum. ; Definition at line 426 of file TGeoShape.cxx. ◆ Divide(). virtual TGeoVolume * TGeoShape::Divide ; (; TGeoVolume * ; voldiv, . const char * ; divname, . Int_t ; iaxis, . Int_t ; ndiv, . Double_t ; start, . Double_t ; step . ). pure virtual . Implemented in TGeoVGShape, TGeoArb8, TGeoTrap, TGeoBBox, TGeoCompositeShape, TGeoCone, TGeoConeSeg, TGeoEltu, TGeoHalfSpace, TGeoHype, TGeoPara, TGeoParaboloid, TGeoPcon, TGeoPgon, TGeoScaledShape, TGeoShapeAssembly, TGeoSphere, TGeoTorus, TGeoTrd1, TGeoTrd2, TGeoTube, TGeoTubeSeg, and TGeoCtub. ◆ Draw(). void TGeoShape::Draw ; (; Option_t * ; option = """"). overridevirtual . Draw this shape. ; Reimplemented from TObject.; Reimplemented in TGeoVGShape.; Definition at line 771 of file TGeoShape.cxx. ◆ EpsMch(). Double_t TGeoShape::EpsMch ; (; ). static . static function returning the machine round-off error ; Definition at line 242 of file TGeoShape.cxx. ◆ ExecuteEvent(). void TGeoShape::ExecuteEvent ; (; Int_t ; event, . Int_t ; px, . Int_t ; py . ). overridevirtual . Execute mouse actions on this shape. ; Reimplemented from TObject.; Definition at line 760 of file TGeoShape.cxx. ◆ FillBuffer3D(). void TGeoShape::FillBuffer3D ; (; TBuffer3D & ; buffer, . Int_t ; reqSections, . Bool_t ; localFrame . ); const. protectedvirtual . Fill the supplied buffer, with sections in desired frame See TBuffer3D.h for explanation of sections, frame etc. ; Reimplemented in TGeoBBox, TEveGeoPolyShape, and ROOT::Experimental::REveGeoPolyShape.; Definition at line 632 of file TGeoShape.cxx. ◆ GetAxisName(). virtual const char * TGeoShape::GetAxisName ; (; Int_t ; iaxis); const. pure virtual . Implemented in TGeoBBox, TGeoCone, TGeoPcon, TGeoSphere, TGeoTorus, TGeoTube, and TGeoVGShape. ◆ GetAxisRange(). virtual Double_t TGeoShape::GetAxisRange ; (; Int_t ; iaxis, . Double_t & ; xlo, . Double_t & ; xhi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoShape.html:35578,error,error,35578,doc/master/classTGeoShape.html,https://root.cern,https://root.cern/doc/master/classTGeoShape.html,1,['error'],['error']
Availability," . Double_t ; zmin, . Double_t ; zmax . ). inlineoverrideprivatevirtual . Redefine x, y and z axis parameters. ; The X, Y and Z axis parameters are modified. The bins content array is resized if errors (Sumw2) the errors array is resized The previous bin contents are lost To change only the axis limits, see TAxis::SetRange ; Reimplemented from TH1.; Definition at line 71 of file TProfile2D.h. ◆ SetBinsLength(). void TProfile2D::SetBinsLength ; (; Int_t ; n = -1). overridevirtual . Set total number of bins including under/overflow. ; Reallocate bin contents array ; Reimplemented from TH2D.; Definition at line 1947 of file TProfile2D.cxx. ◆ SetBuffer(). void TProfile2D::SetBuffer ; (; Int_t ; buffersize, . Option_t * ; option = """" . ). overridevirtual . Set the buffer size in units of 8 bytes (double). ; Reimplemented from TH1.; Definition at line 1956 of file TProfile2D.cxx. ◆ SetErrorOption(). void TProfile2D::SetErrorOption ; (; Option_t * ; option = """"). virtual . Set option to compute profile2D errors. ; The computation of the bin errors is based on the parameter option:; ' ' (Default) The bin errors are the standard error on the mean of the bin profiled values (Z), i.e. the standard error of the bin contents. Note that if TProfile::Approximate() is called, an approximation is used when the spread in Z is 0 and the number of bin entries is > 0; 's' The bin errors are the standard deviations of the Z bin values Note that if TProfile::Approximate() is called, an approximation is used when the spread in Z is 0 and the number of bin entries is > 0; 'i' Errors are as in default case (standard errors of the bin contents) The only difference is for the case when the spread in Z is zero. In this case for N > 0 the error is 1./SQRT(12.*N); 'g' Errors are 1./SQRT(W) for W not equal to 0 and 0 for W = 0. W is the sum in the bin of the weights of the profile. This option is for combining measurements z +/- dz, and the profile is filled with values y and weights z = 1/dz**2. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:104866,error,errors,104866,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['error'],['errors']
Availability," . Implemented in TBufferText, and TBufferFile. ◆ ReadWithNbits() [2/2]. virtual void TBuffer::ReadWithNbits ; (; Float_t * ; ptr, . Int_t ; nbits . ). pure virtual . Implemented in TBufferText, and TBufferFile. ◆ Reset(). virtual void TBuffer::Reset ; (; ). pure virtual . Implemented in TBufferIO, and TMessage. ◆ ResetMap(). virtual void TBuffer::ResetMap ; (; ). pure virtual . Implemented in TBufferIO. ◆ SetBuffer(). void TBuffer::SetBuffer ; (; void * ; buf, . UInt_t ; newsiz = 0, . Bool_t ; adopt = kTRUE, . ReAllocCharFun_t ; reallocfunc = nullptr . ). Sets a new buffer in an existing TBuffer object. ; If newsiz=0 then the new buffer is expected to have the same size as the previous buffer. The current buffer position is reset to the start of the buffer. If the TBuffer owned the previous buffer, it will be deleted prior to accepting the new buffer. By default the new buffer will be adopted unless adopt is false.; If the new buffer is not adopted and no memory allocation routine is provided, a Fatal error will be issued if the Buffer attempts to expand. ; Definition at line 187 of file TBuffer.cxx. ◆ SetBufferDisplacement() [1/2]. virtual void TBuffer::SetBufferDisplacement ; (; ). pure virtual . Implemented in TBufferIO. ◆ SetBufferDisplacement() [2/2]. virtual void TBuffer::SetBufferDisplacement ; (; Int_t ; skipped). pure virtual . Implemented in TBufferIO. ◆ SetBufferOffset(). void TBuffer::SetBufferOffset ; (; Int_t ; offset = 0). inline . Definition at line 93 of file TBuffer.h. ◆ SetByteCount(). virtual void TBuffer::SetByteCount ; (; UInt_t ; cntpos, . Bool_t ; packInVersion = kFALSE . ). pure virtual . Implemented in TBufferFile, and TBufferText. ◆ SetParent(). void TBuffer::SetParent ; (; TObject * ; parent). Set parent owning this buffer. ; Definition at line 270 of file TBuffer.cxx. ◆ SetPidOffset(). virtual void TBuffer::SetPidOffset ; (; UShort_t ; offset). pure virtual . Implemented in TBufferIO. ◆ SetReadMode(). void TBuffer::SetReadMode ; (; ). Se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBuffer.html:53452,error,error,53452,doc/master/classTBuffer.html,https://root.cern,https://root.cern/doc/master/classTBuffer.html,1,['error'],['error']
Availability," . Interface to cling function. ; Reimplemented from TInterpreter.; Definition at line 7419 of file TCling.cxx. ◆ EndOfLineAction(). void TCling::EndOfLineAction ; (; ). finalvirtual . It calls a ""fantom"" method to synchronize user keyboard input and ROOT prompt line. ; Implements TInterpreter.; Definition at line 3121 of file TCling.cxx. ◆ Evaluate(). int TCling::Evaluate ; (; const char * ; code, . TInterpreterValue & ; value . ). finalvirtual . Get the interpreter value corresponding to the statement. ; Reimplemented from TInterpreter.; Definition at line 7678 of file TCling.cxx. ◆ Execute() [1/5]. void TCling::Execute ; (; const char * ; function, . const char * ; params, . int * ; error = nullptr . ). finalvirtual . Execute a global function with arguments params. ; FIXME: The cint-based version of this code does not check if the SetFunc() call works, and does not do any real checking for errors from the Exec() call. It did fetch the most recent cint security error and return that in error, but this does not really translate well to cling/clang. We should enhance these interfaces so that we can report compilation and runtime errors properly. ; Implements TInterpreter.; Definition at line 5233 of file TCling.cxx. ◆ Execute() [2/5]. void TCling::Execute ; (; TMethod * ; method, . TObjArray * ; params, . int * ; error = nullptr . ). inlinefinalprivatevirtual . Execute method on this object with parameters stored in the TObjArray. ; The TObjArray should contain an argv vector like: argv[0] ... argv[n] = the list of TObjString parameters; TObjStringCollectable string class.Definition TObjString.h:28; nconst Int_t nDefinition legend1.C:16. Implements TInterpreter.; Definition at line 628 of file TCling.h. ◆ Execute() [3/5]. void TCling::Execute ; (; TObject * ; obj, . TClass * ; cl, . const char * ; method, . const char * ; params, . Bool_t ; objectIsConst, . int * ; error = nullptr . ). Execute a method from class cl with arguments params. ; FIXME: The cint-based ver",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling.html:84096,error,error,84096,doc/master/classTCling.html,https://root.cern,https://root.cern/doc/master/classTCling.html,2,['error'],['error']
Availability, . It returns the error along X at point i. ; Reimplemented from TGraph.; Definition at line 612 of file TGraphErrors.cxx. ◆ GetErrorXhigh(). Double_t TGraphErrors::GetErrorXhigh ; (; Int_t ; i); const. overridevirtual . It returns the error along X at point i. ; For TGraphErrors this method is the same as GetErrorX. ; Reimplemented from TGraph.; Definition at line 635 of file TGraphErrors.cxx. ◆ GetErrorXlow(). Double_t TGraphErrors::GetErrorXlow ; (; Int_t ; i); const. overridevirtual . It returns the error along X at point i. ; For TGraphErrors this method is the same as GetErrorX. ; Reimplemented from TGraph.; Definition at line 647 of file TGraphErrors.cxx. ◆ GetErrorY(). Double_t TGraphErrors::GetErrorY ; (; Int_t ; bin); const. overridevirtual . It returns the error along Y at point i. ; Reimplemented from TGraph.; Definition at line 623 of file TGraphErrors.cxx. ◆ GetErrorYhigh(). Double_t TGraphErrors::GetErrorYhigh ; (; Int_t ; i); const. overridevirtual . It returns the error along Y at point i. ; For TGraphErrors this method is the same as GetErrorY. ; Reimplemented from TGraph.; Definition at line 659 of file TGraphErrors.cxx. ◆ GetErrorYlow(). Double_t TGraphErrors::GetErrorYlow ; (; Int_t ; i); const. overridevirtual . It returns the error along Y at point i. ; For TGraphErrors this method is the same as GetErrorY. ; Reimplemented from TGraph.; Definition at line 671 of file TGraphErrors.cxx. ◆ GetEX(). Double_t * TGraphErrors::GetEX ; (; ); const. inlineoverridevirtual . Reimplemented from TGraph.; Definition at line 69 of file TGraphErrors.h. ◆ GetEY(). Double_t * TGraphErrors::GetEY ; (; ); const. inlineoverridevirtual . Reimplemented from TGraph.; Definition at line 70 of file TGraphErrors.h. ◆ IsA(). TClass * TGraphErrors::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TGraph.; Reimplemented in TGraphPolar.; Definition at line 78 of file TGraphErrors.h. ◆ Merge(). Int_t TGraphErrors::Merge ;,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphErrors.html:42617,error,error,42617,doc/master/classTGraphErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphErrors.html,1,['error'],['error']
Availability," . Return the current number of entries. ; Definition at line 4423 of file TH1.cxx. ◆ GetFunction(). TF1 * TH1::GetFunction ; (; const char * ; name); const. virtual . Return pointer to function with name. ; Functions such as TH1::Fit store the fitted function in the list of functions of this histogram. ; Definition at line 9051 of file TH1.cxx. ◆ GetIntegral(). Double_t * TH1::GetIntegral ; (; ). virtual . Return a pointer to the array of bins integral. ; if the pointer fIntegral is null, TH1::ComputeIntegral is called The array dimension is the number of bins in the histograms including underflow and overflow (fNCells) the last value integral[fNCells] is set to the number of entries of the histogram ; Definition at line 2586 of file TH1.cxx. ◆ GetKurtosis(). Double_t TH1::GetKurtosis ; (; Int_t ; axis = 1); const. virtual . For axis =1, 2 or 3 returns kurtosis of the histogram along x, y or z axis. Kurtosis(gaussian(0, 1)) = 0.; For axis =11, 12 or 13 returns the approximate standard error of kurtosis of the histogram along x, y or z axis. Note, that since third and fourth moment are not calculated at the fill time, kurtosis and its standard error are computed bin by bin; IMPORTANT NOTE: The returned value depends on how the histogram statistics are calculated. See TH1::GetMean and TH1::GetStdDev. ; Definition at line 7744 of file TH1.cxx. ◆ GetLabelColor(). Color_t TH1::GetLabelColor ; (; Option_t * ; axis = ""X""); const. virtual . Return the ""axis"" label color. ; Definition at line 53 of file Haxis.cxx. ◆ GetLabelFont(). Style_t TH1::GetLabelFont ; (; Option_t * ; axis = ""X""); const. virtual . Return the ""axis"" label font. ; Definition at line 66 of file Haxis.cxx. ◆ GetLabelOffset(). Float_t TH1::GetLabelOffset ; (; Option_t * ; axis = ""X""); const. virtual . Return the ""axis"" label offset. ; Definition at line 79 of file Haxis.cxx. ◆ GetLabelSize(). Float_t TH1::GetLabelSize ; (; Option_t * ; axis = ""X""); const. virtual . Return the ""axis"" label size. ; Definiti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:158321,error,error,158321,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['error'],['error']
Availability," . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 131 of file RooAddModel.h. ◆ isDirectGenSafe(). bool RooAddModel::isDirectGenSafe ; (; const RooAbsArg & ; arg); const. overridevirtual . Direct generation is safe if all components say so. ; Reimplemented from RooAbsPdf.; Definition at line 646 of file RooAddModel.cxx. ◆ pdfList(). const RooArgList & RooAddModel::pdfList ; (; ); const. inline . Return list of component p.d.fs. ; Definition at line 66 of file RooAddModel.h. ◆ printMetaArgs(). void RooAddModel::printMetaArgs ; (; std::ostream & ; os); const. overridevirtual . Customized printing of arguments of a RooAddModel to more intuitively reflect the contents of the product operator construction. ; Reimplemented from RooAbsArg.; Definition at line 702 of file RooAddModel.cxx. ◆ resetErrorCounters(). void RooAddModel::resetErrorCounters ; (; Int_t ; resetValue = 10). overridevirtual . Reset error counter to given value, limiting the number of future error messages for this pdf to 'resetValue'. ; Reimplemented from RooAbsPdf.; Definition at line 420 of file RooAddModel.cxx. ◆ selectNormalization(). void RooAddModel::selectNormalization ; (; const RooArgSet * ; depSet = nullptr, . bool ; force = false . ). overrideprotectedvirtual . Interface function used by test statistics to freeze choice of observables for interpretation of fraction coefficients. ; Reimplemented from RooAbsReal.; Definition at line 599 of file RooAddModel.cxx. ◆ selectNormalizationRange(). void RooAddModel::selectNormalizationRange ; (; const char * ; rangeName = nullptr, . bool ; force = false . ). overrideprotectedvirtual . Interface function used by test statistics to freeze choice of range for interpretation of fraction coefficients. ; Reimplemented from RooAbsReal.; Definition at line 621 of file RooAddModel.cxx. ◆ selfNormalized(). bool RooAddModel::selfNormalized ; (; ); const. inlineoverridevirtual . Model is self normalized when used as p.d.f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAddModel.html:89034,error,error,89034,doc/master/classRooAddModel.html,https://root.cern,https://root.cern/doc/master/classRooAddModel.html,2,['error'],['error']
Availability," . Send DND enter message to target window. ; Definition at line 481 of file TGDNDManager.cxx. ◆ SendDNDFinished(). void TGDNDManager::SendDNDFinished ; (; Window_t ; src). protected . Send DND finished message to source window. ; Definition at line 609 of file TGDNDManager.cxx. ◆ SendDNDLeave(). void TGDNDManager::SendDNDLeave ; (; Window_t ; target). protected . Send DND leave message to target window. ; Definition at line 521 of file TGDNDManager.cxx. ◆ SendDNDPosition(). void TGDNDManager::SendDNDPosition ; (; Window_t ; target, . int ; x, . int ; y, . Atom_t ; action, . Time_t ; timestamp . ). protected . Send DND position message to target window. ; Definition at line 543 of file TGDNDManager.cxx. ◆ SendDNDStatus(). void TGDNDManager::SendDNDStatus ; (; Window_t ; target, . Atom_t ; action . ). protected . Send DND status message to source window. ; Definition at line 566 of file TGDNDManager.cxx. ◆ SetDragPixmap(). void TGDNDManager::SetDragPixmap ; (; Pixmap_t ; pic, . Pixmap_t ; mask, . Int_t ; hot_x, . Int_t ; hot_y . ). Set drag window pixmaps and hotpoint. ; Definition at line 893 of file TGDNDManager.cxx. ◆ SetMainFrame(). void TGDNDManager::SetMainFrame ; (; TGFrame * ; main). inline . Definition at line 162 of file TGDNDManager.h. ◆ SetRootProxy(). Bool_t TGDNDManager::SetRootProxy ; (; ). Set root window proxy. ; Definition at line 1041 of file TGDNDManager.cxx. ◆ StartDrag(). Bool_t TGDNDManager::StartDrag ; (; TGFrame * ; src, . Int_t ; x_root, . Int_t ; y_root, . Window_t ; grabWin = kNone . ). Start dragging. ; Definition at line 905 of file TGDNDManager.cxx. ◆ Streamer(). void TGDNDManager::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGDNDManager::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 198 of file TGDNDManager.h. Member Data Documentation. ◆ fAcceptedAction. Atom_t TGDNDManager::fAcceptedAction. p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGDNDManager.html:24234,mask,mask,24234,doc/master/classTGDNDManager.html,https://root.cern,https://root.cern/doc/master/classTGDNDManager.html,1,['mask'],['mask']
Availability," . UChar_t * ; data, . Int_t ; len . ). overridevirtual . Alters the property for the specified window and causes the X server to generate a PropertyNotify event on that window. ; Parameters. [in]idthe window whose property you want to change ; [in]propertyspecifies the property name ; [in]typethe type of the property; the X server does not interpret the type but simply passes it back to an application that might ask about the window properties ; [in]datathe property data ; [in]lenthe length of the specified data format . Reimplemented from TVirtualX.; Definition at line 3816 of file TGCocoa.mm. ◆ ChangeWindowAttributes(). void TGCocoa::ChangeWindowAttributes ; (; Window_t ; id, . SetWindowAttributes_t * ; attr . ). overridevirtual . Changes the attributes of the specified window ""id"" according the values provided in ""attr"". ; The mask data member of ""attr"" specifies which window attributes are defined in the attributes argument. This mask is the bitwise inclusive OR of the valid attribute mask bits; if it is zero, the attributes are ignored. ; Reimplemented from TVirtualX.; Definition at line 1006 of file TGCocoa.mm. ◆ CheckEvent(). Bool_t TGCocoa::CheckEvent ; (; Window_t ; id, . EGEventType ; type, . Event_t & ; ev . ). overridevirtual . Check if there is for window ""id"" an event of type ""type"". ; If there is it fills in the event structure and return true. If no such event return false. ; Reimplemented from TVirtualX.; Definition at line 3547 of file TGCocoa.mm. ◆ Class(). static TClass * TGCocoa::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGCocoa::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGCocoa::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 476 of file TGCocoa.h. ◆ ClearArea(). void TGCocoa::ClearArea ; (; Window_t ; id, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Pai",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCocoa.html:56294,mask,mask,56294,doc/master/classTGCocoa.html,https://root.cern,https://root.cern/doc/master/classTGCocoa.html,2,['mask'],['mask']
Availability," . const char * ; fwdDeclsCode, . void(*)() ; triggerFunc, . const FwdDeclArgsToKeepCollection_t & ; fwdDeclsArgToSkip, . const char ** ; classesHeaders, . Bool_t ; lateRegistration = false, . Bool_t ; hasCxxModule = false . ). finalvirtual . Inject the module named ""modulename"" into cling; load all headers. ; headers is a 0-terminated array of header files to #include after loading the module. The module is searched for in all $LD_LIBRARY_PATH entries (or PATH% on Windows). This function gets called by the static initialization of dictionary libraries. The payload code is injected ""as is"" in the interpreter. The value of 'triggerFunc' is used to find the shared library location. ; Implements TInterpreter.; Definition at line 2010 of file TCling.cxx. ◆ RegisterPrebuiltModulePath(). bool TCling::RegisterPrebuiltModulePath ; (; const std::string & ; FullPath, . const std::string & ; ModuleMapName = ""module.modulemap"" . ); const. finalvirtual . Returnstrue if the module map was loaded, false on error or if the map was already loaded. ; Implements TInterpreter.; Definition at line 1906 of file TCling.cxx. ◆ RegisterRdictForLoadPCM(). void TCling::RegisterRdictForLoadPCM ; (; const std::string & ; pcmFileNameFullPath, . llvm::StringRef * ; pcmContent . ). private . Register Rdict data for future loading by LoadPCM;. ; Definition at line 1678 of file TCling.cxx. ◆ RegisterTClassUpdate(). void TCling::RegisterTClassUpdate ; (; TClass * ; oldcl, . DictFuncPtr_t ; dict . ). finalvirtual . Register classes that already existed prior to their dictionary loading and that already had a ClassInfo (and thus would not be refresh via UpdateClassInfo. ; Implements TInterpreter.; Definition at line 2384 of file TCling.cxx. ◆ RegisterTemporary() [1/2]. void TCling::RegisterTemporary ; (; const cling::Value & ; value). Register value as a temporary, extending its lifetime to that of the interpreter. ; This is needed for TCling's compatibility interfaces returning long - the address of th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling.html:125618,error,error,125618,doc/master/classTCling.html,https://root.cern,https://root.cern/doc/master/classTCling.html,1,['error'],['error']
Availability," . const char * ; source, . const Int_t * ; binMap = nullptr . ). correlated one-sigma shifts from background normalisation uncertainty ; Parameters. [out]hist_deltahistogram to store shifts ; [in]sourceidentifier of the background source ; [in]binMap(default=nullptr) remapping of histogram bins. returns true if the background source was found. ; This method returns the shifts of the unfolding result induced by varying the normalisation of the identified background by one sigma. ; the array binMap is explained with the method GetOutput(). ; Definition at line 1054 of file TUnfoldSys.cxx. ◆ GetDeltaSysSource(). Bool_t TUnfoldSys::GetDeltaSysSource ; (; TH1 * ; hist_delta, . const char * ; name, . const Int_t * ; binMap = nullptr . ). correlated one-sigma shifts correspinding to a given systematic uncertainty ; Parameters. [out]hist_deltahistogram to store shifts ; [in]nameidentifier of the background source ; [in]binMap(default=nullptr) remapping of histogram bins. returns true if the error source was found. ; This method returns the shifts of the unfolding result induced by varying the identified systematic source by one sigma. ; the array binMap is explained with the method GetOutput(). ; Definition at line 1027 of file TUnfoldSys.cxx. ◆ GetDeltaSysTau(). Bool_t TUnfoldSys::GetDeltaSysTau ; (; TH1 * ; hist_delta, . const Int_t * ; binMap = nullptr . ). correlated one-sigma shifts from shifting tau ; Parameters. [out]hist_deltahistogram to store shifts ; [in]sourceidentifier of the background source ; [in]binMap(default=nullptr) remapping of histogram bins. returns true if the background source was found. ; This method returns the shifts of the unfolding result induced by varying the normalisation of the identified background by one sigma. ; the array binMap is explained with the method GetOutput(). ; Definition at line 1086 of file TUnfoldSys.cxx. ◆ GetEmatrixFromVyy(). void TUnfoldSys::GetEmatrixFromVyy ; (; const TMatrixDSparse * ; vyy, . TH2 * ; ematrix, . const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldSys.html:36128,error,error,36128,doc/master/classTUnfoldSys.html,https://root.cern,https://root.cern/doc/master/classTUnfoldSys.html,1,['error'],['error']
Availability," . const double * ; xmax . ). inline . evaluate the integral passing a new generic function ; Definition at line 134 of file IntegratorMultiDim.h. ◆ Name(). std::string ROOT::Math::IntegratorMultiDim::Name ; (; ); const. inline . return name of integrator ; Definition at line 183 of file IntegratorMultiDim.h. ◆ operator=(). IntegratorMultiDim & ROOT::Math::IntegratorMultiDim::operator= ; (; const IntegratorMultiDim & ; ). inlineprivate . Definition at line 114 of file IntegratorMultiDim.h. ◆ Options(). ROOT::Math::IntegratorMultiDimOptions ROOT::Math::IntegratorMultiDim::Options ; (; ); const. inline . retrieve the options ; Definition at line 177 of file IntegratorMultiDim.h. ◆ Result(). double ROOT::Math::IntegratorMultiDim::Result ; (; ); const. inline . return result of last integration ; Definition at line 156 of file IntegratorMultiDim.h. ◆ SetAbsTolerance(). void ROOT::Math::IntegratorMultiDim::SetAbsTolerance ; (; double ; absTol). inline . set absolute tolerance ; Definition at line 171 of file IntegratorMultiDim.h. ◆ SetFunction() [1/2]. void ROOT::Math::IntegratorMultiDim::SetFunction ; (; const IMultiGenFunction & ; f). inline . Definition at line 151 of file IntegratorMultiDim.h. ◆ SetFunction() [2/2]. template<class Function > . void ROOT::Math::IntegratorMultiDim::SetFunction ; (; Function & ; f, . unsigned int ; dim . ). inline . set integration function using a generic function implementing the operator()(double *x) The dimension of the function is in this case required ; Definition at line 145 of file IntegratorMultiDim.h. ◆ SetOptions(). void ROOT::Math::IntegratorMultiDim::SetOptions ; (; const ROOT::Math::IntegratorMultiDimOptions & ; opt). inline . set the options ; Definition at line 174 of file IntegratorMultiDim.h. ◆ SetRelTolerance(). void ROOT::Math::IntegratorMultiDim::SetRelTolerance ; (; double ; relTol). inline . set the relative tolerance ; Definition at line 168 of file IntegratorMultiDim.h. ◆ Status(). int ROOT::Math::IntegratorMult",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html:8874,toler,tolerance,8874,doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1IntegratorMultiDim.html,1,['toler'],['tolerance']
Availability," . initializes the ntuple ; Definition at line 185 of file RuleFitParams.cxx. ◆ Log(). MsgLogger & TMVA::RuleFitParams::Log ; (; ); const. inlineprivate . Definition at line 254 of file RuleFitParams.h. ◆ LossFunction() [1/3]. Double_t TMVA::RuleFitParams::LossFunction ; (; const Event & ; e); const. Implementation of squared-error ramp loss function (eq 39,40 in ref 1) This is used for binary Classifications where y = {+1,-1} for (sig,bkg) ; Definition at line 278 of file RuleFitParams.cxx. ◆ LossFunction() [2/3]. Double_t TMVA::RuleFitParams::LossFunction ; (; UInt_t ; evtidx); const. Implementation of squared-error ramp loss function (eq 39,40 in ref 1) This is used for binary Classifications where y = {+1,-1} for (sig,bkg) ; Definition at line 290 of file RuleFitParams.cxx. ◆ LossFunction() [3/3]. Double_t TMVA::RuleFitParams::LossFunction ; (; UInt_t ; evtidx, . UInt_t ; itau . ); const. Implementation of squared-error ramp loss function (eq 39,40 in ref 1) This is used for binary Classifications where y = {+1,-1} for (sig,bkg) ; Definition at line 302 of file RuleFitParams.cxx. ◆ MakeGDPath(). void TMVA::RuleFitParams::MakeGDPath ; (; ). The following finds the gradient directed path in parameter space. ; More work is needed... FT, 24/9/2006; The algorithm is currently as follows (if not otherwise stated, the sample used below is [fPathIdx1,fPathIdx2]):. Set offset to -average(y(true)) and all coefs=0 => average of F(x)==0; FindGDTau() : start scanning using several paths defined by different tau choose the tau yielding the best path; start the scanning the chosen path; check error rate at a given frequency data used for check: [fPerfIdx1,fPerfIdx2]; stop when either of the following conditions are fullfilled:; loop index==fGDNPathSteps; error > fGDErrScale*errmin; only in DEBUG mode: risk is not monotonously decreasing. The algorithm will warn if:; the error rate was still decreasing when loop finished -> increase fGDNPathSteps!; minimum was found at an early ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1RuleFitParams.html:14308,error,error,14308,doc/master/classTMVA_1_1RuleFitParams.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1RuleFitParams.html,1,['error'],['error']
Availability," .csv, .tsv or .txt. ;  ; virtual void SetAxisColor (Color_t color=1, Option_t *axis=""X"");  Set color to draw the axis line and tick marks. ;  ; virtual void SetAxisRange (Double_t xmin, Double_t xmax, Option_t *axis=""X"");  Set the ""axis"" range. ;  ; virtual void SetBarOffset (Float_t offset=0.25);  Set the bar offset as fraction of the bin width for drawing mode ""B"". ;  ; virtual void SetBarWidth (Float_t width=0.5);  Set the width of bars as fraction of the bin width for drawing mode ""B"". ;  ; virtual void SetBinContent (Int_t bin, Double_t content);  Set bin content see convention for numbering bins in TH1::GetBin In case the bin number is greater than the number of bins and the timedisplay option is set or CanExtendAllAxes(), the number of bins is automatically doubled to accommodate the new bin. ;  ; virtual void SetBinContent (Int_t bin, Int_t, Double_t content);  ; virtual void SetBinContent (Int_t bin, Int_t, Int_t, Double_t content);  ; virtual void SetBinError (Int_t bin, Double_t error);  Set the bin Error Note that this resets the bin eror option to be of Normal Type and for the non-empty bin the bin error is set by default to the square root of their content. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinError (Int_t binx, Int_t biny, Int_t binz, Double_t error);  See convention for numbering bins in TH1::GetBin. ;  ; virtual void SetBinErrorOption (EBinErrorOpt type);  ; virtual UInt_t SetCanExtend (UInt_t extendBitMask);  Make the histogram axes extendable / not extendable according to the bit mask returns the previous bit mask specifying which axes are extendable. ;  ; virtual void SetCellContent (Int_t binx, Int_t biny, Double_t content);  ; virtual void SetCellError (Int_t binx, Int_t biny, Double_t content);  ; virtual void SetColors (Color_t linecolor=-1, Color_t markercolor=-1, Color_t fillcolor=-1);  Shortcut to set the three histogram colors wit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:25924,error,error,25924,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,2,['error'],['error']
Availability," .root, that stores objects in a file-system-li...Definition TFile.h:53; TH1::Drawvoid Draw(Option_t *option="""") overrideDraw this histogram with options.Definition TH1.cxx:3066; RooFit::PrintLevelRooCmdArg PrintLevel(Int_t code)Definition RooGlobalFunc.cxx:657; RooFit::VerboseRooCmdArg Verbose(bool flag=true)Definition RooGlobalFunc.cxx:645; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf903_numintcacheDefinition rf903_numintcache.py:1; xmlio::Titleconst char * TitleDefinition TXMLSetup.cxx:68; TimerDefinition histspeedtest.cxx:54; ; [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y,z]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(x,y,z); [#1] INFO:Fitting -- RooAbsPdf::fitTo(model_over_model_Int[x,y,z]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_over_model_Int[x,y,z]_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for a: using 1; ; prevFCN = 1659.930708 a=0.02833, [#1] INFO:NumericIntegration -- RooRealIntegral::init(model_Int[x,y,z]) using numeric integrator RooAdaptiveIntegratorND to calculate Int(x,y,z); ; prevFCN = 1675.611563 a=-0.02833, ; prevFCN = 1673.217894 a=0.002833, ; prevFCN = 1660.205177 a=-0.002833, ; prevFCN = 1659.94939 a=0.0002833, ; prevFCN = 1659.944972 a=-0.0002833, ; prevFCN = 1659.919376 a=-0.001237, ; prevFCN = 1659.902781 a=-0.001089, ; prevFCN = 1659.903175 a=-0.001384, ; prevFCN = 1659.90318 a=-0.001237, ; prevFCN = 1659.902781 a=-0.001089, ; prevFCN = 1659.903175 a=-0.001384, ; prevFCN = 1659.90318 a=-0.001207, ; prevFCN = 1659",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf903__numintcache_8C.html:9144,error,error,9144,doc/master/rf903__numintcache_8C.html,https://root.cern,https://root.cern/doc/master/rf903__numintcache_8C.html,3,"['avail', 'error']","['available', 'error']"
Availability," .rootrc file:; Unix.*.Root.UseTTFonts: false. List of the currently supported fonts; Font number TTF Names PostScript/PDF Names; 1 : ""Free Serif Italic"" ""Times-Italic""; 2 : ""Free Serif Bold"" ""Times-Bold""; 3 : ""Free Serif Bold Italic"" ""Times-BoldItalic""; 4 : ""Tex Gyre Regular"" ""Helvetica""; 5 : ""Tex Gyre Italic"" ""Helvetica-Oblique""; 6 : ""Tex Gyre Bold"" ""Helvetica-Bold""; 7 : ""Tex Gyre Bold Italic"" ""Helvetica-BoldOblique""; 8 : ""Free Mono"" ""Courier""; 9 : ""Free Mono Oblique"" ""Courier-Oblique""; 10 : ""Free Mono Bold"" ""Courier-Bold""; 11 : ""Free Mono Bold Oblique"" ""Courier-BoldOblique""; 12 : ""Symbol"" ""Symbol""; 13 : ""Free Serif"" ""Times-Roman""; 14 : ""Wingdings"" ""ZapfDingbats""; TTFInterface to the freetype 2 library.Definition TTF.h:53; The PostScript and PDF backends use the original PostScript-defined 13 fonts' styles forming four type families (Courier, Helvetica, Times, Symbol) as listed in the ""Core Font Set"" section of this page. These fonts are always available and do not need to be loaded in the PS or PDF files allowing to keep the files' sizes small.; On screen, text is rendered using free TTF fonts similar to the PDF ones. The corresponding font files are coming with the ROOT distribution in $ROOTSYS/fonts/Free*. Definition at line 18 of file TAttText.h. Public Member Functions;  TAttText ();  AttText default constructor. ;  ;  TAttText (Int_t align, Float_t angle, Color_t color, Style_t font, Float_t tsize);  AttText normal constructor. ;  ; virtual ~TAttText ();  AttText destructor. ;  ; void Copy (TAttText &atttext) const;  Copy this text attributes to a new TAttText. ;  ; virtual Short_t GetTextAlign () const;  Return the text alignment. ;  ; virtual Float_t GetTextAngle () const;  Return the text angle. ;  ; virtual Color_t GetTextColor () const;  Return the text color. ;  ; virtual Font_t GetTextFont () const;  Return the text font. ;  ; virtual Float_t GetTextSize () const;  Return the text size. ;  ; virtual Float_t GetTextSizePercent (Float_t size);  Return t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttText.html:10032,avail,available,10032,doc/master/classTAttText.html,https://root.cern,https://root.cern/doc/master/classTAttText.html,1,['avail'],['available']
Availability," // Cleanup; 2681 delete paramPdf ;; 2682 delete cloneFunc ;; 2683 for (std::vector<RooCurve*>::iterator i=cvec.begin() ; i!=cvec.end() ; ++i) {; 2684 delete (*i) ;; 2685 }; 2686 ; 2687 } else {; 2688 ; 2689 // *** Linear Method ***; 2690 //; 2691 // Make a one-sigma up- and down fluctation for each parameter and visualize; 2692 // a from a linearized calculation as follows; 2693 //; 2694 // error(x) = F(a) C_aa' F(a'); 2695 //; 2696 // Where F(a) = (f(x,a+da) - f(x,a-da))/2; 2697 // and C_aa' is the correlation matrix; 2698 ; 2699 // Strip out parameters with zero error; 2700 RooArgList fpf_stripped;; 2701 for (auto const* frv : static_range_cast<RooRealVar*>(fr.floatParsFinal())) {; 2702 if (frv->getError() > frv->getVal() * std::numeric_limits<double>::epsilon()) {; 2703 fpf_stripped.add(*frv);; 2704 }; 2705 }; 2706 ; 2707 // Clone self for internal use; 2708 RooAbsReal* cloneFunc = static_cast<RooAbsReal*>(cloneTree()) ;; 2709 RooArgSet cloneParams;; 2710 cloneFunc->getObservables(&fpf_stripped, cloneParams) ;; 2711 RooArgSet errorParams{cloneParams};; 2712 if(params) {; 2713 // clear and fill errorParams only with parameters that both in params and cloneParams; 2714 cloneParams.selectCommon(*params, errorParams);; 2715 }; 2716 ; 2717 ; 2718 // Make list of parameter instances of cloneFunc in order of error matrix; 2719 RooArgList paramList ;; 2720 const RooArgList& fpf = fr.floatParsFinal() ;; 2721 std::vector<int> fpf_idx ;; 2722 for (std::size_t i=0 ; i<fpf.size() ; i++) {; 2723 RooAbsArg* par = errorParams.find(fpf[i].GetName()) ;; 2724 if (par) {; 2725 paramList.add(*par) ;; 2726 fpf_idx.push_back(i) ;; 2727 }; 2728 }; 2729 ; 2730 std::vector<RooCurve *> plusVar;; 2731 std::vector<RooCurve *> minusVar;; 2732 ; 2733 // Create std::vector of plus,minus variations for each parameter; 2734 ; 2735 TMatrixDSym V(paramList.size() == fr.floatParsFinal().size() ?; 2736 fr.covarianceMatrix():; 2737 fr.reducedCovarianceMatrix(paramList)) ;; 2738 ; 2739 ; 2740 for (std",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:119179,error,errorParams,119179,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,2,['error'],['errorParams']
Availability," // create fit function; TF2 * func = new TF2(""func"",my2Dfunc,xlow2,xup2,ylow2,yup2, 10);; func->SetParameters(iniParams);; ; // fill Histos; int n1 = 50000;; int n2 = 50000;; // h1->FillRandom(""func"", n1);; //h2->FillRandom(""func"",n2);; FillHisto(h1,n1,iniParams);; FillHisto(h2,n2,iniParams);; ; // scale histograms to same heights (for fitting); double dx1 = (xup1-xlow1)/double(nbx1);; double dy1 = (yup1-ylow1)/double(nby1);; double dx2 = (xup2-xlow2)/double(nbx2);; double dy2 = (yup2-ylow2)/double(nby2);; // h1->Sumw2();; // h1->Scale( 1.0 / ( n1 * dx1 * dy1 ) );; // scale histo 2 to scale of 1; h2->Sumw2();; h2->Scale( ( double(n1) * dx1 * dy1 ) / ( double(n2) * dx2 * dy2 ) );; ; ; if (global) {; // fill data structure for fit (coordinates + values + errors); std::cout << ""Do global fit"" << std::endl;; // fit now all the function together; ; // fill data structure for fit (coordinates + values + errors); TAxis *xaxis1 = h1->GetXaxis();; TAxis *yaxis1 = h1->GetYaxis();; TAxis *xaxis2 = h2->GetXaxis();; TAxis *yaxis2 = h2->GetYaxis();; ; int nbinX1 = h1->GetNbinsX();; int nbinY1 = h1->GetNbinsY();; int nbinX2 = h2->GetNbinsX();; int nbinY2 = h2->GetNbinsY();; ; /// reset data structure; coords = std::vector<std::pair<double,double> >();; values = std::vector<double>();; errors = std::vector<double>();; ; ; for (int ix = 1; ix <= nbinX1; ++ix) {; for (int iy = 1; iy <= nbinY1; ++iy) {; if ( h1->GetBinContent(ix,iy) > 0 ) {; coords.push_back( std::make_pair(xaxis1->GetBinCenter(ix), yaxis1->GetBinCenter(iy) ) );; values.push_back( h1->GetBinContent(ix,iy) );; errors.push_back( h1->GetBinError(ix,iy) );; }; }; }; for (int ix = 1; ix <= nbinX2; ++ix) {; for (int iy = 1; iy <= nbinY2; ++iy) {; if ( h2->GetBinContent(ix,iy) > 0 ) {; coords.push_back( std::make_pair(xaxis2->GetBinCenter(ix), yaxis2->GetBinCenter(iy) ) );; values.push_back( h2->GetBinContent(ix,iy) );; errors.push_back( h2->GetBinError(ix,iy) );; }; }; }; ; TVirtualFitter::SetDefaultFitter(""Minuit"");; TVirt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TwoHistoFit2D_8C.html:4556,error,errors,4556,doc/master/TwoHistoFit2D_8C.html,https://root.cern,https://root.cern/doc/master/TwoHistoFit2D_8C.html,3,['error'],['errors']
Availability," // create range and minimizer options with default values; 1018// ROOT::Fit::DataRange range(2);; 1019// ROOT::Math::MinimizerOptions minOption;; 1020// return ROOT::Fit::FitObject(this, f2 , fitOption , minOption, goption, range);; 1021// }; 1022 ; 1023 ; 1024// function to compute the simple chi2 for graphs and histograms; 1025 ; 1026 ; 1027double ROOT::Fit::Chisquare(const TH1 & h1, TF1 & f1, bool useRange, ROOT::Fit::EChisquareType type) {; 1028 return HFit::ComputeChi2(h1,f1,useRange, type);; 1029}; 1030 ; 1031double ROOT::Fit::Chisquare(const TGraph & g, TF1 & f1, bool useRange) {; 1032 return HFit::ComputeChi2(g,f1, useRange, ROOT::Fit::EChisquareType::kNeyman);; 1033}; 1034 ; 1035template<class FitObject>; 1036double HFit::ComputeChi2(const FitObject & obj, TF1 & f1, bool useRange, ROOT::Fit::EChisquareType type ) {; 1037 ; 1038 // implement using the fitting classes; 1039 ROOT::Fit::DataOptions opt;; 1040 opt.fUseEmpty = (type != ROOT::Fit::EChisquareType::kNeyman); // use empty bin when not using Neyman chisquare (observed error); 1041 opt.fExpErrors = (type == ROOT::Fit::EChisquareType::kPearson);; 1042 opt.fErrors1 = (type == ROOT::Fit::EChisquareType::kPearson); // not using observed errors in Pearson chi2; 1043 ; 1044 ROOT::Fit::DataRange range;; 1045 // get range of function; 1046 if (useRange) HFit::GetFunctionRange(f1,range);; 1047 // fill the data set; 1048 ROOT::Fit::BinData data(opt,range);; 1049 ROOT::Fit::FillData(data, &obj, &f1);; 1050 if (data.Size() == 0 ) {; 1051 Warning(""Chisquare"",""data set is empty - return -1"");; 1052 return -1;; 1053 }; 1054 ROOT::Math::WrappedMultiTF1 wf1(f1);; 1055 if (type == ROOT::Fit::EChisquareType::kPLikeRatio) {; 1056 // use the poisson log-lokelihood (Baker-Cousins chi2); 1057 ROOT::Fit::PoissonLLFunction nll(data, wf1);; 1058 return 2.* nll( f1.GetParameters() ) ;; 1059 }; 1060 ROOT::Fit::Chi2Function chi2(data, wf1);; 1061 return chi2(f1.GetParameters() );; 1062 ; 1063}; BinData.h; Chi2FCN.h; FitConfig.h; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitImpl_8cxx_source.html:39563,error,error,39563,doc/master/HFitImpl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitImpl_8cxx_source.html,1,['error'],['error']
Availability," //---sort by values of bins; 1097 for (i=1;i<=n;i++) {; 1098 a[i-1] = i-1;; 1099 sumw[i-1] = fArray[i];; 1100 errors[i-1] = fSumw2.fArray[i];; 1101 ent[i-1] = fBinEntries.fArray[i];; 1102 if (fBinSumw2.fN) binsw2[i - 1] = fBinSumw2.fArray[i];; 1103 if (fBinEntries.fArray[i] == 0) cont[i-1] = 0;; 1104 else cont[i-1] = fArray[i]/fBinEntries.fArray[i];; 1105 }; 1106 if (sort ==1); 1107 TMath::Sort(n,cont.data(),a.data(),kTRUE); //sort by decreasing values; 1108 else; 1109 TMath::Sort(n,cont.data(),a.data(),kFALSE); //sort by increasing values; 1110 for (i=1;i<=n;i++) {; 1111 fArray[i] = sumw[a[i-1]];; 1112 fSumw2.fArray[i] = errors[a[i-1]];; 1113 fBinEntries.fArray[i] = ent[a[i-1]];; 1114 if (fBinSumw2.fN); 1115 fBinSumw2.fArray[i] = binsw2[a[i-1]];; 1116 }; 1117 for (i=0 ;i < n; i++) {; 1118 obj = labold[a[i]];; 1119 labels->Add(obj);; 1120 obj->SetUniqueID(i+1);; 1121 }; 1122 } else {; 1123 ; 1124 //---alphabetic sort; 1125 // sort labels using vector of strings and TMath::Sort; 1126 // I need to array because labels order in list is not necessary that of the bins; 1127 std::vector<std::string> vecLabels(n);; 1128 for (i = 0; i < n; i++) {; 1129 vecLabels[i] = labold[i]->GetName();; 1130 a[i] = i;; 1131 sumw[i] = fArray[i+1];; 1132 errors[i] = fSumw2.fArray[i+1];; 1133 ent[i] = fBinEntries.fArray[i+1];; 1134 if (fBinSumw2.fN); 1135 binsw2[i] = fBinSumw2.fArray[i+1];; 1136 }; 1137 // sort in ascending order for strings; 1138 TMath::Sort(n, vecLabels.data(), a.data(), kFALSE);; 1139 // set the new labels; 1140 for (i = 0; i < n; i++) {; 1141 TObject *labelObj = labold[a[i]];; 1142 labels->Add(labelObj);; 1143 // set the corresponding bin. NB bin starts from 1; 1144 labelObj->SetUniqueID(i + 1);; 1145 if (gDebug); 1146 std::cout << ""bin "" << i + 1 << "" setting new labels for axis "" << labold.at(a[i])->GetName() << "" from ""; 1147 << a[i] << std::endl;; 1148 }; 1149 ; 1150 for (i=0; i < n; i++) {; 1151 fArray[i+1] = sumw[a[i]];; 1152 fSumw2.fArray[i+1] = errors[a[i]];; 11",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:41529,error,errors,41529,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['error'],['errors']
Availability," /// assignment operator; 113 BinData & operator= ( const BinData & rhs );; 114 ; 115 ; 116 /**; 117 Preallocate a data set with given size, dimension and error type.; 118 If the data set already exists, `newPoints` are appended to the existing data set.; 119 (i.e., if the data exists Initialize() is equivalent to a `resize( NPoints() + maxpoints)`).; 120 Initialize() and Append() are equivalent.; 121 */; 122 void Initialize( unsigned int newPoints, unsigned int dim = 1, ErrorType err = kValueError ){; 123 Append(newPoints,dim,err);; 124 }; 125 ; 126 /// Equivalent to Initialize(); 127 void Append( unsigned int newPoints, unsigned int dim = 1, ErrorType err = kValueError );; 128 ; 129 ; 130 ; 131 /**; 132 flag to control if data provides error on the coordinates; 133 */; 134 bool HaveCoordErrors() const {; 135 assert ( fErrorType == kNoError ||; 136 fErrorType == kValueError ||; 137 fErrorType == kCoordError ||; 138 fErrorType == kAsymError );; 139 ; 140 return fErrorType == kCoordError;; 141 }; 142 ; 143 /**; 144 flag to control if data provides asymmetric errors on the value; 145 */; 146 bool HaveAsymErrors() const {; 147 assert ( fErrorType == kNoError ||; 148 fErrorType == kValueError ||; 149 fErrorType == kCoordError ||; 150 fErrorType == kAsymError );; 151 ; 152 return fErrorType == kAsymError;; 153 }; 154 ; 155 ; 156 /**; 157 apply a Log transformation of the data values; 158 can be used for example when fitting an exponential or gaussian; 159 Transform the data in place need to copy if want to preserve original data; 160 The data sets must not contain negative values. IN case it does,; 161 an empty data set is returned; 162 */; 163 BinData & LogTransform();; 164 ; 165 ; 166 /**; 167 add one dim data with only coordinate and values; 168 */; 169 void Add( double x, double y );; 170 ; 171 /**; 172 add one dim data with no error in the coordinate (x); 173 in this case store the inverse of the error in the value (y); 174 */; 175 void Add( double x, double y, doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8h_source.html:4717,error,error,4717,doc/master/BinData_8h_source.html,https://root.cern,https://root.cern/doc/master/BinData_8h_source.html,2,['error'],"['error', 'errors']"
Availability," //to prevent adding classes in TStreamerInfo::TagFile; 3847 ; 3848 if (listOfRules.GetEntries()) {; 3849 // Only add the list of rules if we have something to say.; 3850 list.Add(&listOfRules);; 3851 }; 3852 ; 3853 //free previous StreamerInfo record; 3854 if (fSeekInfo) MakeFree(fSeekInfo,fSeekInfo+fNbytesInfo-1);; 3855 //Create new key; 3856 TKey key(&list,""StreamerInfo"",GetBestBuffer(), this);; 3857 fKeys->Remove(&key);; 3858 fSeekInfo = key.GetSeekKey();; 3859 fNbytesInfo = key.GetNbytes();; 3860 SumBuffer(key.GetObjlen());; 3861 key.WriteFile(0);; 3862 ; 3863 fClassIndex->fArray[0] = 0;; 3864 ; 3865 list.RemoveLast(); // remove the listOfRules.; 3866}; 3867 ; 3868////////////////////////////////////////////////////////////////////////////////; 3869/// Open a file for reading through the file cache.; 3870///; 3871/// The file will be downloaded to the cache and opened from there.; 3872/// If the download fails, it will be opened remotely.; 3873/// The file will be downloaded to the directory specified by SetCacheFileDir().; 3874 ; 3875TFile *TFile::OpenFromCache(const char *name, Option_t *, const char *ftitle,; 3876 Int_t compress, Int_t netopt); 3877{; 3878 TFile *f = nullptr;; 3879 ; 3880 if (fgCacheFileDir == """") {; 3881 ::Warning(""TFile::OpenFromCache"",; 3882 ""you want to read through a cache, but you have no valid cache ""; 3883 ""directory set - reading remotely"");; 3884 ::Info(""TFile::OpenFromCache"", ""set cache directory using TFile::SetCacheFileDir()"");; 3885 } else {; 3886 TUrl fileurl(name);; 3887 ; 3888 if ((!strcmp(fileurl.GetProtocol(), ""file""))) {; 3889 // it makes no sense to read local files through a file cache; 3890 if (!fgCacheFileForce); 3891 ::Warning(""TFile::OpenFromCache"",; 3892 ""you want to read through a cache, but you are reading ""; 3893 ""local files - CACHEREAD disabled"");; 3894 } else {; 3895 // this is a remote file and worthwhile to be put into the local cache; 3896 // now create cachepath to put it; 3897 TString cachefilepath;; 389",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:140829,down,downloaded,140829,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['down'],['downloaded']
Availability," 0 DENSE Layer: ( Input = 256 , Width = 100 ) Output = ( 1 , 100 , 100 ) Activation Function = Relu; Layer 1 BATCH NORM Layer: Input/Output = ( 100 , 100 , 1 ) Norm dim = 100 axis = -1; ; Layer 2 DENSE Layer: ( Input = 100 , Width = 100 ) Output = ( 1 , 100 , 100 ) Activation Function = Relu; Layer 3 BATCH NORM Layer: Input/Output = ( 100 , 100 , 1 ) Norm dim = 100 axis = -1; ; Layer 4 DENSE Layer: ( Input = 100 , Width = 100 ) Output = ( 1 , 100 , 100 ) Activation Function = Relu; Layer 5 BATCH NORM Layer: Input/Output = ( 100 , 100 , 1 ) Norm dim = 100 axis = -1; ; Layer 6 DENSE Layer: ( Input = 100 , Width = 100 ) Output = ( 1 , 100 , 100 ) Activation Function = Relu; Layer 7 DENSE Layer: ( Input = 100 , Width = 1 ) Output = ( 1 , 100 , 1 ) Activation Function = Identity; : Using 1280 events for training and 320 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 119.005; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.881238 0.852851 0.181896 0.0160504 7235.64 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.658204 0.827727 0.182292 0.0161751 7223.84 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.58547 0.792475 0.182478 0.0158424 7201.32 0; : 4 Minimum Test error found - save the configuration ; : 4 | 0.508772 0.760461 0.18258 0.0158465 7197.11 0; : 5 Minimum Test error found - save the configuration ; : 5 | 0.445197 0.705323 0.183204 0.015935 7174.07 0; : 6 | 0.409018 0.708257 0.18274 0.0151517 7160.42 1; : 7 | 0.369062 0.747523 0.18295 0.0151377 7150.84 2; : 8 | 0.31294 0.740134 0.183339 0.015769 7161.2 3; : 9 | 0.256184 0.756239 0.181088 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:11305,error,error,11305,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,1,['error'],['error']
Availability," 0 in case of success, -1 in case of error ; Definition at line 295 of file TProofMgr.cxx. ◆ SetAlias(). virtual void TProofMgr::SetAlias ; (; const char * ; alias = """"). inlinevirtual . Definition at line 104 of file TProofMgr.h. ◆ SetInvalid(). virtual void TProofMgr::SetInvalid ; (; ). inlinevirtual . Definition at line 78 of file TProofMgr.h. ◆ SetMssUrl(). virtual void TProofMgr::SetMssUrl ; (; const char * ; mss). inlinevirtual . Definition at line 105 of file TProofMgr.h. ◆ SetROOTVersion(). virtual Int_t TProofMgr::SetROOTVersion ; (; const char * ; ). inlinevirtual . Definition at line 106 of file TProofMgr.h. ◆ SetTXProofMgrHook(). void TProofMgr::SetTXProofMgrHook ; (; TProofMgr_t ; pmh). static . Set hook to TXProofMgr ctor. ; Definition at line 619 of file TProofMgr.cxx. ◆ ShowROOTVersions(). virtual void TProofMgr::ShowROOTVersions ; (; ). inlinevirtual . Definition at line 107 of file TProofMgr.h. ◆ ShowWorkers(). void TProofMgr::ShowWorkers ; (; ). virtual . Show available workers. ; Definition at line 317 of file TProofMgr.cxx. ◆ ShutdownSession() [1/2]. virtual void TProofMgr::ShutdownSession ; (; Int_t ; id). inlinevirtual . Definition at line 108 of file TProofMgr.h. ◆ ShutdownSession() [2/2]. virtual void TProofMgr::ShutdownSession ; (; TProof * ; p). inlinevirtual . Definition at line 109 of file TProofMgr.h. ◆ Stat(). virtual Int_t TProofMgr::Stat ; (; const char * ; , . FileStat_t & ; , . const char * ; = 0 . ). inlinevirtual . Definition at line 120 of file TProofMgr.h. ◆ Streamer(). void TProofMgr::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TNamed.; Reimplemented in TProofMgrLite. ◆ StreamerNVirtual(). void TProofMgr::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 136 of file TProofMgr.h. ◆ Tail(). virtual void TProofMgr::Tail ; (; const char * ; , . const char * ; = 0, . const char * ; = 0 . ). inlinevirtual . Definition at line 118",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofMgr.html:27140,avail,available,27140,doc/master/classTProofMgr.html,https://root.cern,https://root.cern/doc/master/classTProofMgr.html,1,['avail'],['available']
Availability, 0); Analyze a sub-expression in one formula*-*-; *-* =======================================; -; *-* Expressions in one formula are recursively analyzed.; *-* Result of analysis is stored in the object tables.; -; *-* Table of function codes and errors; *-* ==================================; -; *-* * functions :; -; *-* + 1 pow 20; *-* - 2 sq 21; *-* * 3 sqrt 22; *-* / 4 strstr 23; *-* % 5 min 24; *-* max 25; *-* log 30; *-* cos 10 exp 31; *-* sin 11 log10 32; *-* tan 12; *-* acos 13 abs 41; *-* asin 14 sign 42; *-* atan 15 int 43; *-* atan2 16; *-* fmod 17 rndm 50; -; *-* cosh 70 acosh 73; *-* sinh 71 asinh 74; *-* tanh 72 atanh 75; -; *-* expo 100 gaus 110 gausn (see note below); *-* expo(0) 100 0 gaus(0) 110 0 gausn(0); *-* expo(1) 100 1 gaus(1) 110 1 gausn(1); *-* xexpo 100 x xgaus 110 x xgausn; *-* yexpo 101 x ygaus 111 x ygausn; *-* zexpo 102 x zgaus 112 x zgausn; *-* xyexpo 105 x xygaus 115 x xygausn; *-* yexpo(5) 102 5 ygaus(5) 111 5 ygausn(5); *-* xyexpo(2) 105 2 xygaus(2) 115 2 xygausn(2); -; *-* landau 120 x landaun (see note below); *-* landau(0) 120 0 landaun(0); *-* landau(1) 120 1 landaun(1); *-* xlandau 120 x xlandaun; *-* ylandau 121 x ylandaun; *-* zlandau 122 x zlandaun; *-* xylandau 125 x xylandaun; *-* ylandau(5) 121 5 ylandaun(5); *-* xylandau(2) 125 2 xylandaun(2); -; *-* pol0 130 x pol1 130 1xx; *-* pol0(0) 130 0 pol1(0) 130 100; *-* pol0(1) 130 1 pol1(1) 130 101; *-* xpol0 130 x xpol1 130 101; *-* ypol0 131 x ypol1 131 101; *-* zpol0 132 x zpol1 132 1xx; *-* ypol0(5) 131 5 ypol1(5) 131 105; -; *-* pi 40; -; *-* && 60 < 64; *-* || 61 > 65; *-* == 62 <= 66; *-* != 63 => 67; *-* ! 68; *-* ==(string) 76 & 78; *-* !=(string) 77 | 79; *-* <<(shift) 80 >>(shift) 81; *_* ? : 82; -; *-* * constants (kConstants) :; -; *-* c0 141 1 c1 141 2 etc..; -; *-* * strings (kStringConst):; -; *-* sX 143 x; -; *-* * variables (kFormulaVar) :; -; *-* x 144 0 y 144 1 z 144 2 t 144 3; -; *-* * parameters :; -; *-* [1] 140 1; *-* [2] 140 2; *-* etc.; -; *-* special,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFormula.html:15821,error,errors,15821,root/html528/TFormula.html,https://root.cern,https://root.cern/root/html528/TFormula.html,4,['error'],['errors']
Availability," 0); Define the input data for subsequent calls to DoUnfold(Double_t); input: input distribution with errors; scaleBias: scale factor applied to the bias; oneOverZeroError: for bins with zero error, this number defines 1/error.; Return value: number of bins with bad error; +10000*number of unconstrained output bins; Note: return values>=10000 are fatal errors,; for the given input, the unfolding can not be done!; Calls the SetInput method of the base class, then renames the input; vectors fY and fVyy, then performs the background subtraction; Data members modified:; fYData,fY,fVyyData,fVyy,fVyyinvData,fVyyinv; and those modified by TUnfold::SetInput(); and those modified by DoBackgroundSubtraction(). void InitTUnfoldSys(void); initialize pointers and TMaps. ~TUnfoldSys(void); delete all data members. void ClearResults(void); clear all data members which depend on the unfolding results. void PrepareSysError(void); calculations required for syst.error; data members modified; fEmatUncorrX, fEmatUncorrAx, fDeltaCorrX, fDeltaCorrAx. void SetTauError(Double_t delta_tau); set uncertainty on tau. Bool_t GetDeltaSysSource(TH1* hist_delta, const char* source, const Int_t* binMap = 0); calculate systematic shift from a given source; ematrix: output; source: name of the error source; binMap: see method GetEmatrix(). Bool_t GetDeltaSysTau(TH1* delta, const Int_t* binMap = 0); calculate systematic shift from tau variation; ematrix: output; binMap: see method GetEmatrix(). void GetEmatrixTotal(TH2* ematrix, const Int_t* binMap = 0); get total error including statistical error; ematrix: output; binMap: see method GetEmatrix(). TMatrixDSparse * GetSummedErrorMatrixYY(void). TMatrixDSparse * GetSummedErrorMatrixXX(void). Double_t GetChi2Sys(void); calculate total chi**2 including systematic errors. void GetRhoItotal(TH1* rhoi, const Int_t* binMap = 0, TH2* invEmat = 0); get global correlation coefficients including systematic,statistical,background,tau errors; rhoi: output histogram; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TUnfoldSys.html:18181,error,error,18181,root/html534/TUnfoldSys.html,https://root.cern,https://root.cern/root/html534/TUnfoldSys.html,6,['error'],['error']
Availability," 0); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); voidclearStudies(); virtual TObject*TNamed::Clone(const char* newname = """") const; Bool_tcommitTransaction(); virtual Int_tTNamed::Compare(const TObject* obj) const; TIterator*componentIterator() const; const RooArgSet&components() const; virtual voidTNamed::Copy(TObject& named) const; RooAbsData*data(const char* name) const; Bool_tdefineSet(const char* name, const char* contentList); Bool_tdefineSet(const char* name, const RooArgSet& aset, Bool_t importMissing = kFALSE); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; RooAbsData*embeddedData(const char* name) const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); RooExpensiveObjectCache&expensiveObjectCache(); voidexportToCint(const char* namespaceName = 0); Bool_textendSet(const char* name, const char* newContents); RooFactoryWSTool&factory(); RooAbsArg*factory(const char* expr); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; RooAbsReal*function(const char* name) const; RooAbsArg*fundArg(const char* name) const; TObject*genobj(const char* name) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooWorkspace.html:3361,Error,Error,3361,root/html534/RooWorkspace.html,https://root.cern,https://root.cern/root/html534/RooWorkspace.html,3,['Error'],['Error']
Availability," 0); virtual doubleIntegral(); virtual doubleIntegral(const vector<double>& pts); virtual doubleIntegral(double a, double b); virtual doubleIntegralCauchy(double a, double b, double c); virtual doubleIntegralLow(double b); virtual doubleIntegralUp(double a); virtual intROOT::Math::VirtualIntegrator::NEval() const; ROOT::Math::VirtualIntegratorOneDim&ROOT::Math::VirtualIntegratorOneDim::operator=(const ROOT::Math::VirtualIntegratorOneDim&); virtual ROOT::Math::IntegratorOneDimOptionsOptions() const; virtual doubleResult() const; virtual voidSetAbsTolerance(double eps); virtual voidSetFunction(const ROOT::Math::IGenFunction&); virtual voidSetOptions(const ROOT::Math::IntegratorOneDimOptions& opt); virtual voidSetRelTolerance(double eps); virtual intStatus() const; virtual ROOT::Math::IntegrationOneDim::TypeROOT::Math::VirtualIntegratorOneDim::Type() const. private:. virtual doubleDoIntegral(double a, double b, const ROOT::Math::IGenFunction* func). Data Members; protected:. doublefEpsAbsAbsolute error.; doublefEpsRelRelative error.; const ROOT::Math::IGenFunction*fFunctionPointer to function used.; doublefLastErrorError from the last stimation.; doublefLastResultResult from the last stimation.; boolfUsedOnceBool value to check if the function was at least called once.; static boolfgAbsValueAbsValue used for the calculation of the integral. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; virtual ~GaussIntegrator(); Destructor . GaussIntegrator(double absTol = 0, double relTol = 0); Default Constructor. . void AbsValue(bool flag); Static function: set the fgAbsValue flag.; By default TF1::Integral uses the original function value to compute the integral; However, TF1::Moment, CentralMoment require to compute the integral; using the absolute value of the function. void SetRelTolerance(double eps); Implementing VirtualIntegrator Interface; Set the desired relative Error. . { fEpsRel = eps; }. void SetAbsTolerance(double eps); This",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__GaussIntegrator.html:1828,error,error,1828,root/html534/ROOT__Math__GaussIntegrator.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__GaussIntegrator.html,2,['error'],['error']
Availability," 0, . Long64_t ; nevt = -1, . const char * ; fnroot = ""event"", . Bool_t ; regenerate = kFALSE . ). Create the largest dataset for the run. ; Defaults for dataset name, filename root are ""BenchDataSet"", ""event"" respectively. These can be changed via dset and fnroot, respectively. The string 'fnroot' defines the location of the files, interpreted as an URL. Examples: fnroot files 'event' <datadir>/event_<ord>_<#>.root '/mss/event' /mss/event_<ord>_<#>.root 'root://srv//mss/event?remote=1' root://srv//mss/event_<ord>_<#>?remote=1.root Default selector is TSelEventGen. Use SetDataGenSel and SetDataGenPar to change it and to pass the list of PARs defining the alternative selector. The argument 'nevt' controls the number of events per file (-1 for the default, which is 30000). Return 0 on success, -1 on error ; Definition at line 1343 of file TProofBench.cxx. ◆ OpenOutFile(). Int_t TProofBench::OpenOutFile ; (; Bool_t ; wrt = kFALSE, . Bool_t ; verbose = kTRUE . ). Set the otuput file Return 0 on success, -1 on error. ; Definition at line 261 of file TProofBench.cxx. ◆ ReleaseCache(). Int_t TProofBench::ReleaseCache ; (; const char * ; dset). Release memory cache for dataset 'dset' Return 0 on success, -1 on error. ; Definition at line 1303 of file TProofBench.cxx. ◆ RemoveDataSet(). Int_t TProofBench::RemoveDataSet ; (; const char * ; dset). Physically remove the dataset 'dset', i.e. ; remove the dataset and the files it describes Return 0 on success, -1 on error ; Definition at line 1315 of file TProofBench.cxx. ◆ RunCPU(). Int_t TProofBench::RunCPU ; (; Long64_t ; nevents = -1, . Int_t ; start = -1, . Int_t ; stop = -1, . Int_t ; step = -1 . ). Perform the CPU run Return 0 on success, -1 on error. ; Definition at line 336 of file TProofBench.cxx. ◆ RunCPUx(). Int_t TProofBench::RunCPUx ; (; Long64_t ; nevents = -1, . Int_t ; start = -1, . Int_t ; stop = -1 . ). Perform the CPU run scanning over the number of workers per node Return 0 on success, -1 on error. ; Definiti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofBench.html:20610,error,error,20610,doc/master/classTProofBench.html,https://root.cern,https://root.cern/doc/master/classTProofBench.html,1,['error'],['error']
Availability," 0, Double_t valbeg = 0, Double_t valend = 0); virtual~TSpline3(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Double_tDerivative(Double_t x) const; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTSpline::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTSpline::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Double_tEval(Double_t x) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTSpline::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tFindX(Double_t x) const; voidGetCoeff(Int_t i, Double_t& x, Double_t& y, Double_t& b, Double_t& c, Double_t& d); virtual Double_tTSpline::GetDelta() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; TH1F*TSpline::GetHistogram() const; virtual const char*TObject::GetIconName() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSpline3.html:2139,Error,Error,2139,root/html532/TSpline3.html,https://root.cern,https://root.cern/root/html532/TSpline3.html,2,['Error'],['Error']
Availability," 0, Double_t y = 0, Double_t z = 0, Option_t* option = """"); Double_tCheckVoxels(TGeoVolume* vol, TGeoVoxelFinder* voxels, Double_t* xyz, Int_t npoints); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoChecker.html:4306,error,error,4306,root/html528/TGeoChecker.html,https://root.cern,https://root.cern/root/html528/TGeoChecker.html,1,['error'],['error']
Availability," 0, Double_t y = 0, Double_t z = 0, Option_t* option = """")MENU ; voidCheckShape(TGeoShape* shape, Int_t testNo, Int_t nsamples, Option_t* option); static TClass*Class(); virtual const char*TObject::ClassName() const; voidCleanGarbage(); virtual voidTNamed::Clear(Option_t* option = """"); voidClearAttributes()MENU ; voidClearNavigators(); voidClearOverlaps(); voidClearPhysicalNodes(Bool_t mustdelete = kFALSE); voidClearShape(const TGeoShape* shape); voidClearThreadData() const; static voidClearThreadsMap(); voidClearTracks(); virtual TObject*TNamed::Clone(const char* newname = """") const; voidCloseGeometry(Option_t* option = ""d""); virtual Int_tTNamed::Compare(const TObject* obj) const; voidConvertReflections(); virtual voidTNamed::Copy(TObject& named) const; voidCountLevels(); Int_tCountNodes(const TGeoVolume* vol = 0, Int_t nlevels = 10000, Int_t option = 0); TGeoParallelWorld*CreateParallelWorld(const char* name); voidCreateThreadData() const; TGeoNode*CrossBoundaryAndLocate(Bool_t downwards, TGeoNode* skipnode); voidDefaultAngles()MENU ; voidDefaultColors()MENU ; virtual voidTObject::Delete(Option_t* option = """")MENU ; voidDisableInactiveVolumes(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); TGeoVolume*Division(const char* name, const char* mother, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step, Int_t numed = 0, Option_t* option = """"); voidDoBackupState(); voidDoRestoreState(); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; voidDrawCurrentPoint(Int_t color = 2)MENU ; voidDrawPath(const char* path, Option_t* option = """"); voidDrawTracks(Option_t* option = """")MENU ; virtual voidTObject::Dump() constMENU ; virtual voidEdit(Option_t* option = """")MENU ; voidEnableInactiveVolumes(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoManager.html:13501,down,downwards,13501,root/html534/TGeoManager.html,https://root.cern,https://root.cern/root/html534/TGeoManager.html,6,['down'],['downwards']
Availability," 0, TClass* cl = 0); virtual~TDataMember(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidTDictionary::CreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetArrayDim() const; const char*GetArrayIndex() const; TDictAttributeMap*TDictionary::GetAttributeMap() const; TClass*GetClass() const; TDataType*GetDataType() const; static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); const char*GetFullTypeName() const; virtual const char*TObject::GetIconName() const; Int_tGetMaxIndex(Int_t dim) const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectIn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDataMember.html:6319,error,error,6319,root/html534/TDataMember.html,https://root.cern,https://root.cern/root/html534/TDataMember.html,2,['error'],['error']
Availability," 0, TProof* proof = 0, TProofNodes* nodes = 0, Long64_t nevents = -1, Int_t ntries = 2, Int_t start = 1, Int_t stop = -1, Int_t step = 1, Int_t debug = 0); virtual~TProofBenchRunDataRead(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; voidDrawPerfProfiles(); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TCanvas*GetCPerfProfiles() const; TFileCollection*GetDataSet(const char* dset, Int_t nact, Bool_t nx); Int_tGetDebug() const; TDirectory*GetDirProofBench() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; TStringGetNameStem() const; Long64_tGetNEvents() const; Int_tGetNTries() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProofBenchRunDataRead.html:1847,Error,Error,1847,root/html532/TProofBenchRunDataRead.html,https://root.cern,https://root.cern/root/html532/TProofBenchRunDataRead.html,2,['Error'],['Error']
Availability," 0, const char* monsubid = 0, const char* option = """"); virtual~TMonaLisaWriter(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; ApMon*GetApMon() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMonaLisaWriter.html:3088,error,error,3088,root/html530/TMonaLisaWriter.html,https://root.cern,https://root.cern/root/html530/TMonaLisaWriter.html,3,['error'],['error']
Availability," 0, const char* s2 = 0, const TObject* o1 = 0, const TObject* o2 = 0, const RooCmdArg* ca = 0, const char* s3 = 0, const RooArgSet* c1 = 0, const RooArgSet* c2 = 0); virtual~RooCmdArg(); voidTObject::AbstractMethod(const char* method) const; voidaddArg(const RooCmdArg& arg); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*Clone(const char* newName = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tgetDouble(Int_t idx) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; Int_tgetInt(Int_t idx) const; virtual const char*TNamed::GetName() const; const TObject*getObject(Int_t idx) const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const RooArgSet*getSet(Int_t id",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooCmdArg.html:1846,Error,Error,1846,root/html532/RooCmdArg.html,https://root.cern,https://root.cern/root/html532/RooCmdArg.html,2,['Error'],['Error']
Availability," 0.0, 1.0); model = ROOT.RooAddPdf(""model"", ""model"", [g1, g2], [frac]); ; # Generate 1000 events; data = model.generate({x}, 1000); ; # Fit model to data; # ----------------------------------; ; r = model.fitTo(data, Save=True, PrintLevel=-1); ; # Create MV Gaussian pdf of fitted parameters; # ------------------------------------------------------------------------------------; ; parabPdf = r.createHessePdf({frac, mean, sigma_g2}); ; # Some exercises with the parameter pdf; # -----------------------------------------------------------------------------; ; # Generate 100K points in the parameter space, from the MVGaussian pdf; d = parabPdf.generate({mean, sigma_g2, frac}, 100000); ; # Sample a 3-D histogram of the pdf to be visualized as an error; # ellipsoid using the GLISO draw option; hh_3d = parabPdf.createHistogram(""mean,sigma_g2,frac"", 25, 25, 25); hh_3d.SetFillColor(ROOT.kBlue); ; # Project 3D parameter pdf down to 3 permutations of two-dimensional pdfs; # The integrations corresponding to these projections are performed analytically; # by the MV Gaussian pdf; pdf_sigmag2_frac = parabPdf.createProjection({mean}); pdf_mean_frac = parabPdf.createProjection({sigma_g2}); pdf_mean_sigmag2 = parabPdf.createProjection({frac}); ; # Make 2D plots of the 3 two-dimensional pdf projections; hh_sigmag2_frac = pdf_sigmag2_frac.createHistogram(""sigma_g2,frac"", 50, 50); hh_mean_frac = pdf_mean_frac.createHistogram(""mean,frac"", 50, 50); hh_mean_sigmag2 = pdf_mean_sigmag2.createHistogram(""mean,sigma_g2"", 50, 50); hh_mean_frac.SetLineColor(ROOT.kBlue); hh_sigmag2_frac.SetLineColor(ROOT.kBlue); hh_mean_sigmag2.SetLineColor(ROOT.kBlue); ; # Draw the 'sigar'; ROOT.gStyle.SetCanvasPreferGL(True); ROOT.gStyle.SetPalette(1); c1 = ROOT.TCanvas(""rf608_fitresultaspdf_1"", ""rf608_fitresultaspdf_1"", 600, 600); hh_3d.Draw(""gliso""); ; c1.SaveAs(""rf608_fitresultaspdf_1.png""); ; # Draw the 2D projections of the 3D pdf; c2 = ROOT.TCanvas(""rf608_fitresultaspdf_2"", ""rf608_fitresultaspdf_2"", 900, 60",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf608__fitresultaspdf_8py.html:1866,down,down,1866,doc/master/rf608__fitresultaspdf_8py.html,https://root.cern,https://root.cern/doc/master/rf608__fitresultaspdf_8py.html,1,['down'],['down']
Availability, 0.00175807 43284.1 3; : 906 | 4.86112 7.78644 0.0202162 0.00175457 43333 4; : 907 Minimum Test error found - save the configuration ; : 907 | 4.76534 7.04169 0.0202678 0.00183052 43390.4 0; : 908 | 4.77659 7.36078 0.0201903 0.00174867 43380.2 1; : 909 | 5.40526 9.09975 0.0204121 0.00175613 42881.7 2; : 910 | 5.23108 7.3695 0.0200572 0.0017555 43711.7 3; : 911 | 4.9718 7.21676 0.0200739 0.00175828 43678.5 4; : 912 Minimum Test error found - save the configuration ; : 912 | 4.64478 6.77041 0.0201181 0.00182552 43733.5 0; : 913 | 4.96617 7.29752 0.0200675 0.00175608 43688.5 1; : 914 | 4.79524 7.25946 0.0200357 0.00175682 43766.4 2; : 915 Minimum Test error found - save the configuration ; : 915 | 4.5624 6.6787 0.0201058 0.0018145 43736.7 0; : 916 Minimum Test error found - save the configuration ; : 916 | 4.49553 6.65717 0.0201015 0.00180949 43734.9 0; : 917 Minimum Test error found - save the configuration ; : 917 | 4.36563 6.60613 0.0201007 0.00181415 43748 0; : 918 Minimum Test error found - save the configuration ; : 918 | 4.47049 6.3479 0.0200865 0.00182018 43796.4 0; : 919 | 4.35846 6.60136 0.0200632 0.00176343 43716.3 1; : 920 | 4.30933 6.53557 0.0200239 0.00175965 43801.4 2; : 921 Minimum Test error found - save the configuration ; : 921 | 4.32266 6.29119 0.0200952 0.00182605 43789.5 0; : 922 | 4.32742 6.39561 0.0200257 0.00176292 43804.9 1; : 923 | 4.33774 6.46608 0.0200201 0.00176071 43813 2; : 924 | 4.36503 6.3111 0.0200702 0.00177545 43728.3 3; : 925 | 4.7314 7.24632 0.0202093 0.00176259 43368.2 4; : 926 | 4.61316 6.64099 0.020249 0.00181216 43391.3 5; : 927 Minimum Test error found - save the configuration ; : 927 | 4.41727 6.09792 0.0203192 0.00184107 43294.4 0; : 928 | 4.15393 6.23618 0.0200677 0.00177036 43722.3 1; : 929 | 4.2848 6.29195 0.0202769 0.00175908 43201.6 2; : 930 | 4.39879 6.60248 0.0204218 0.00176177 42872.3 3; : 931 | 4.17549 6.55946 0.0200581 0.00175886 43717.6 4; : 932 | 4.18849 6.67063 0.0200652 0.00175543 43692.5 5; : 933 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:107442,error,error,107442,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability," 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; TGraphErrors* ge = new TGraphErrors(5, x, y, ex, ey);; ge->SetFillColor(6);; ge->SetFillStyle(3005);; ge->Draw(""a4"");; return c42;; }; The following example shows how the option ""[]"" can be used to superimpose; systematic errors on top of a graph with statistical errors. Picture; Source. {; TCanvas *c43 = new TCanvas(""c43"",""c43"",200,10,600,400);; c43->DrawFrame(0., -0.5, 6., 2);. double x[5] = {1, 2, 3, 4, 5};; double zero[5] = {0, 0, 0, 0, 0};. // data set (1) with stat and sys errors; double py1[5] = {1.2, 1.15, 1.19, 0.9, 1.4};; double ey_stat1[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys1[5] = {0.5, 0.71, 0.76, 0.5, 0.45};. // data set (2) with stat and sys errors; double y2[5] = {0.25, 0.18, 0.29, 0.2, 0.21};; double ey_stat2[5] = {0.2, 0.18, 0.17, 0.2, 0.4};; double ey_sys2[5] = {0.63, 0.19, 0.7, 0.2, 0.7};. // Now draw data set (1). // We first have to draw it only with the stat errors; TGraphErrors *graph1 = new TGraphErrors(5, x, py1, zero, ey_stat1);; graph1->SetMarkerStyle(20);; graph1->Draw(""P"");. // Now we have to somehow depict the sys errors. TGraphErrors *graph1_sys = new TGraphErrors(5, x, py1, zero, ey_sys1);; graph1_sys->Draw(""[]"");. // Now draw data set (2). // We first have to draw it only with the stat errors; TGraphErrors *graph2 = new TGraphErrors(5, x, y2, zero, ey_stat2);; graph2->SetMarkerStyle(24);; graph2->Draw(""P"");. // Now we have to somehow depict the sys errors. TGraphErrors *graph2_sys = new TGraphErrors(5, x, y2, zero, ey_sys2);; graph2_sys->Draw(""[]"");; return c43;; }; TGraphAsymmErrors; A TGraphAsymmErrors is like a TGraphErrors but the errors; defined along X and Y are not symmetric: The left and right errors are; different along X and the bottom and up errors are different along Y. Picture; Source. {; TCanvas *c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; double ax[] = {0, 1, 2, 3, 4};; double ay[] = {0, 2, 4, 1, 3};; double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; dou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraphPainter.html:9930,error,errors,9930,root/html534/TGraphPainter.html,https://root.cern,https://root.cern/root/html534/TGraphPainter.html,6,['error'],['errors']
Availability," 0.29609 [ -1.0000 1.0000 ]; : var3: 0.059878 0.21436 [ -1.0000 1.0000 ]; : var4: 0.11587 0.24261 [ -1.0000 1.0000 ]; : -----------------------------------------------------------; : ***** Deep Learning Network *****; DEEP NEURAL NETWORK: Depth = 4 Input = ( 1, 1, 4 ) Batch size = 100 Loss function = C; Layer 0 DENSE Layer: ( Input = 4 , Width = 128 ) Output = ( 1 , 100 , 128 ) Activation Function = Tanh; Layer 1 DENSE Layer: ( Input = 128 , Width = 128 ) Output = ( 1 , 100 , 128 ) Activation Function = Tanh Dropout prob. = 0.5; Layer 2 DENSE Layer: ( Input = 128 , Width = 128 ) Output = ( 1 , 100 , 128 ) Activation Function = Tanh Dropout prob. = 0.5; Layer 3 DENSE Layer: ( Input = 128 , Width = 1 ) Output = ( 1 , 100 , 1 ) Activation Function = Identity Dropout prob. = 0.5; : Using 1600 events for training and 400 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.01 regularization 0 minimum error = 0.699892; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.548477 0.466013 0.191275 0.014698 9061.23 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.431501 0.379356 0.191981 0.0145985 9020.06 0; : 3 | 0.40241 0.379482 0.19151 0.014162 9021.8 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.408996 0.379041 0.192713 0.0146534 8985.76 0; : 5 | 0.41143 0.414316 0.191728 0.014237 9014.55 1; : 6 | 0.385066 0.478603 0.19226 0.0142608 8988.82 2; : 7 | 0.404168 0.388159 0.192259 0.0142353 8987.58 3; : 8 Minimum Test error found - save the configuration ; : 8 | 0.394387 0.377539 0.19273 0.0147168 8988.1 0; : 9 Minimum Test error found - save the configuration ; : 9 | 0.386834 0.375541 0.192946 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:47125,error,error,47125,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['error'],['error']
Availability, 0.637781 0.0412238 4190.71 3; : 5 Minimum Test error found - save the configuration ; : 5 | 0.673678 0.681248 0.623882 0.0409529 4288.69 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.660284 0.667264 0.616834 0.0410715 4342.07 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.607427 0.0404816 4409.59 0; : 8 | 0.616397 0.638352 0.60791 0.0403928 4405.16 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.606268 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.589633 0.0399271 4547.88 0; : 16 Minimum Test error found - save the configuration ; : 16 | 0.529842 0.56732 0.599541 0.040336 4470.63 0; : 17 | 0.521737 0.574812 0.603666 0.0406979 4440.75 1; : 18 Minimum Test error found - save the configuration ; : 18 | 0.517445 0.565391 0.598324 0.0405273 4481.92 0; : 19 Minimum Test error found - save the configuration ; : 19 | 0.509836 0.557055 0.617073 0.042121 4348.19 0; : 20 | 0.510257 0.574511 0.617241 0.0402784 4333.04 1; : ; : Elapsed time for training with 3200 events: 12.3 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_LSTM : [dataset] : Evaluation of TMVA_LSTM on training sample (3200 events); : Elapsed time for evaluation of 3200 events: 0.22 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVAClassification_TMVA_LSTM.weights.xml,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:16740,error,error,16740,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['error'],['error']
Availability," 0.94999999999999996); Computes point-by-point confidence intervals for the fitted function; Parameters:; n - number of points; ndim - dimensions of points; x - points, at which to compute the intervals, for ndim > 1; should be in order: (x0,y0, x1, y1, ... xn, yn); ci - computed intervals are returned in this array; cl - confidence level, default=0.95; NOTE, that the intervals are approximate for nonlinear(in parameters) models. void GetConfidenceIntervals(TObject* obj, Double_t cl = 0.94999999999999996); Computes confidence intervals at level cl. Default is 0.95; The TObject parameter can be a TGraphErrors, a TGraph2DErrors or a TH1,2,3.; For Graphs, confidence intervals are computed for each point,; the value of the graph at that point is set to the function value at that; point, and the graph y-errors (or z-errors) are set to the value of; the confidence interval at that point.; For Histograms, confidence intervals are computed for each bin center; The bin content of this bin is then set to the function value at the bin; center, and the bin error is set to the confidence interval value.; NOTE: confidence intervals are approximate for nonlinear models!. Allowed combinations:; Fitted object Passed object; TGraph TGraphErrors, TH1; TGraphErrors, AsymmErrors TGraphErrors, TH1; TH1 TGraphErrors, TH1; TGraph2D TGraph2DErrors, TH2; TGraph2DErrors TGraph2DErrors, TH2; TH2 TGraph2DErrors, TH2; TH3 TH3. Double_t * GetCovarianceMatrix() const; return a pointer to the covariance matrix. Double_t GetCovarianceMatrixElement(Int_t i, Int_t j) const; return element i,j from the covariance matrix. Int_t GetErrors(Int_t ipar, Double_t& eplus, Double_t& eminus, Double_t& eparab, Double_t& globcc) const; return current errors for a parameter; ipar : parameter number; eplus : upper error; eminus : lower error; eparab : parabolic error; globcc : global correlation coefficient. Int_t GetNumberTotalParameters() const; return the total number of parameters (free + fixed). Int_t GetNumber",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFitter.html:12958,error,error,12958,root/html602/TFitter.html,https://root.cern,https://root.cern/root/html602/TFitter.html,4,['error'],['error']
Availability," 0.94999999999999996); Computes point-by-point confidence intervals for the fitted function; Parameters:; n - number of points; ndim - dimensions of points; x - points, at which to compute the intervals, for ndim > 1; should be in order: (x0,y0, x1, y1, ... xn, yn); ci - computed intervals are returned in this array; cl - confidence level, default=0.95; NOTE, that the intervals are approximate for nonlinear(in parameters) models. void GetConfidenceIntervals(TObject* obj, Double_t cl = 0.94999999999999996); Computes confidence intervals at level cl. Default is 0.95; The TObject parameter can be a TGraphErrors, a TGraph2DErrors or a TH1,2,3.; For Graphs, confidence intervals are computed for each point,; the value of the graph at that point is set to the function value at that; point, and the graph y-errors (or z-errors) are set to the value of; the confidence interval at that point.; For Histograms, confidence intervals are computed for each bin center; The bin content of this bin is then set to the function value at the bin; center, and the bin error is set to the confidence interval value.; NOTE: confidence intervals are approximate for nonlinear models!. Allowed combinations:; Fitted object Passed object; TGraph TGraphErrors, TH1; TGraphErrors, AsymmErrors TGraphErrors, TH1; TH1 TGraphErrors, TH1; TGraph2D TGraph2DErrors, TH2; TGraph2DErrors TGraph2DErrors, TH2; TH2 TGraph2DErrors, TH2; TH3 TH3. Double_t* GetCovarianceMatrix() const; get the error matrix in a pointer to a NxN array.; excluding the fixed parameters. Double_t GetCovarianceMatrixElement(Int_t i, Int_t j) const; get error matrix element (return all zero if matrix is not available). Int_t GetErrors(Int_t ipar, Double_t& eplus, Double_t& eminus, Double_t& eparab, Double_t& globcc) const; get fit errors. Int_t GetNumberTotalParameters() const; number of total parameters. Int_t GetNumberFreeParameters() const; number of variable parameters. Double_t GetParError(Int_t ipar) const; parameter error. Double_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBackCompFitter.html:14894,error,error,14894,root/html602/TBackCompFitter.html,https://root.cern,https://root.cern/root/html602/TBackCompFitter.html,4,['error'],['error']
Availability, 0; : 1076 | 2.74949 3.00321 0.0203478 0.00181324 43162.6 1; : 1077 | 2.76284 3.75591 0.0207943 0.00180912 42138.1 2; : 1078 Minimum Test error found - save the configuration ; : 1078 | 3.00913 2.73577 0.0203661 0.0018517 43209.6 0; : 1079 | 2.90364 3.01716 0.0202612 0.00175591 43230.9 1; : 1080 | 2.84249 3.41706 0.0201644 0.00176658 43483.3 2; : 1081 | 2.8573 3.42383 0.0204284 0.00175777 42848.1 3; : 1082 | 2.95876 3.1107 0.0202233 0.0017991 43421.1 4; : 1083 | 3.17127 3.26207 0.0202854 0.00175889 43181.4 5; : 1084 | 2.91564 2.7548 0.0203094 0.00175846 43124.6 6; : 1085 Minimum Test error found - save the configuration ; : 1085 | 2.63022 2.66906 0.0203531 0.00186599 43273.3 0; : 1086 | 3.10333 2.86337 0.0200994 0.00175565 43611.6 1; : 1087 | 2.9523 3.05621 0.0202345 0.00180564 43410.1 2; : 1088 | 2.96621 3.82134 0.0204023 0.0017658 42926.6 3; : 1089 | 2.9107 3.10267 0.0201393 0.00176662 43542.9 4; : 1090 | 2.7802 2.77409 0.0201095 0.00176132 43601.1 5; : 1091 Minimum Test error found - save the configuration ; : 1091 | 2.70558 2.65986 0.0201114 0.00182448 43747.2 0; : 1092 | 2.6448 3.0589 0.0201057 0.00177852 43651.1 1; : 1093 | 2.72808 2.74342 0.0203461 0.00179008 43112.8 2; : 1094 | 2.90448 3.26391 0.0206789 0.00182352 42428.3 3; : 1095 | 2.99675 3.1053 0.0203677 0.00177969 43038.5 4; : 1096 | 2.82435 2.85928 0.0200663 0.00175842 43696.9 5; : 1097 | 2.94319 2.67707 0.0201699 0.00175551 43444.3 6; : 1098 | 3.07322 3.0122 0.0200534 0.00175203 43712.7 7; : 1099 | 2.83008 3.95183 0.0205372 0.0017939 42681.9 8; : 1100 | 2.67822 3.34195 0.020666 0.00184085 42496.4 9; : 1101 | 2.97088 2.72336 0.0206136 0.0017901 42500 10; : 1102 Minimum Test error found - save the configuration ; : 1102 | 2.66188 2.52638 0.020367 0.00185502 43215.3 0; : 1103 | 3.01155 3.18843 0.0202364 0.00176536 43311 1; : 1104 | 2.71885 3.00051 0.0201103 0.00176305 43603.3 2; : 1105 Minimum Test error found - save the configuration ; : 1105 | 2.73591 2.50832 0.0201341 0.0018587 43774.7 0; : 1106 | 2.70,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:119102,error,error,119102,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, 0; : 1138 | 2.48438 2.23196 0.0200456 0.00175699 43743.1 1; : 1139 | 2.50812 2.26597 0.0200665 0.00175755 43694.4 2; : 1140 | 2.3988 2.24899 0.0200386 0.00175805 43762.4 3; : 1141 | 2.7672 3.06409 0.0200539 0.00176427 43740.6 4; : 1142 | 2.49905 2.42566 0.0200843 0.00176461 43669 5; : 1143 | 2.42701 2.41776 0.0200668 0.00178464 43758.5 6; : 1144 | 2.26582 2.24235 0.0200333 0.00176428 43790 7; : 1145 | 2.32819 2.25052 0.0200451 0.00176354 43759.9 8; : 1146 | 2.38829 2.61112 0.0201128 0.00176481 43601.4 9; : 1147 Minimum Test error found - save the configuration ; : 1147 | 2.71251 2.10665 0.0201008 0.00183197 43790.4 0; : 1148 | 2.56397 2.40861 0.020487 0.00176022 42719.5 1; : 1149 | 2.55242 2.99103 0.0200648 0.00175967 43703.6 2; : 1150 | 2.53052 2.44638 0.0200564 0.00175887 43721.8 3; : 1151 | 2.36129 2.75405 0.0200417 0.00175605 43750.1 4; : 1152 | 2.30106 2.27284 0.0200533 0.00175628 43722.9 5; : 1153 | 2.28835 2.14929 0.0200647 0.00175706 43697.6 6; : 1154 Minimum Test error found - save the configuration ; : 1154 | 2.32858 2.0616 0.0201066 0.00182104 43750.5 0; : 1155 | 2.28245 2.19923 0.0201625 0.00180627 43581.8 1; : 1156 | 2.38727 2.77806 0.0202008 0.00175311 43365.8 2; : 1157 | 2.61021 2.4986 0.0209687 0.00176336 41655.1 3; : 1158 | 2.53941 2.59597 0.020405 0.00180555 43012.1 4; : 1159 | 2.53249 2.63389 0.0200503 0.0017649 43750.8 5; : 1160 | 2.39348 2.24444 0.0200488 0.00176513 43755 6; : 1161 | 2.30038 2.13197 0.0204918 0.00181558 42835.3 7; : 1162 Minimum Test error found - save the configuration ; : 1162 | 2.21969 1.9774 0.0206437 0.00187006 42613 0; : 1163 | 2.20889 2.16481 0.0203089 0.00190977 43480.4 1; : 1164 | 2.32653 2.11805 0.0202989 0.00175782 43147.4 2; : 1165 | 2.26223 2.61923 0.0203169 0.00186365 43352.9 3; : 1166 | 2.59301 2.86154 0.0206764 0.00184185 42475.2 4; : 1167 | 2.39489 2.21164 0.0202088 0.00175636 43354.8 5; : 1168 | 2.45742 2.7258 0.0202361 0.0017857 43359.5 6; : 1169 | 2.47938 2.08631 0.0200606 0.0017639 43723.7 7; : 1170 | 2.2579,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:123080,error,error,123080,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, 0; : 565 Minimum Test error found - save the configuration ; : 565 | 185.071 111.259 0.0203048 0.00182605 43292.9 0; : 566 Minimum Test error found - save the configuration ; : 566 | 182.616 110.112 0.0201778 0.00183613 43616.5 0; : 567 Minimum Test error found - save the configuration ; : 567 | 180.473 109.26 0.0202561 0.00182678 43409.1 0; : 568 Minimum Test error found - save the configuration ; : 568 | 178.451 108.059 0.0201373 0.00182611 43689.1 0; : 569 Minimum Test error found - save the configuration ; : 569 | 176.264 106.78 0.0201111 0.00181323 43721.1 0; : 570 Minimum Test error found - save the configuration ; : 570 | 174.355 105.885 0.0201445 0.00181905 43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:75857,error,error,75857,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, 0; : 566 Minimum Test error found - save the configuration ; : 566 | 182.616 110.112 0.0201778 0.00183613 43616.5 0; : 567 Minimum Test error found - save the configuration ; : 567 | 180.473 109.26 0.0202561 0.00182678 43409.1 0; : 568 Minimum Test error found - save the configuration ; : 568 | 178.451 108.059 0.0201373 0.00182611 43689.1 0; : 569 Minimum Test error found - save the configuration ; : 569 | 176.264 106.78 0.0201111 0.00181323 43721.1 0; : 570 Minimum Test error found - save the configuration ; : 570 | 174.355 105.885 0.0201445 0.00181905 43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:75971,error,error,75971,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, 0; : 567 Minimum Test error found - save the configuration ; : 567 | 180.473 109.26 0.0202561 0.00182678 43409.1 0; : 568 Minimum Test error found - save the configuration ; : 568 | 178.451 108.059 0.0201373 0.00182611 43689.1 0; : 569 Minimum Test error found - save the configuration ; : 569 | 176.264 106.78 0.0201111 0.00181323 43721.1 0; : 570 Minimum Test error found - save the configuration ; : 570 | 174.355 105.885 0.0201445 0.00181905 43655.2 0; : 571 | 172.647 106.784 0.0200848 0.0017791 43702.2 1; : 572 Minimum Test error found - save the configuration ; : 572 | 170.589 104.683 0.020165 0.00182763 43626.8 0; : 573 Minimum Test error found - save the configuration ; : 573 | 168.468 102.528 0.0201413 0.00182619 43679.9 0; : 574 Minimum Test error found - save the configuration ; : 574 | 166.622 102.085 0.0201407 0.00181861 43663.2 0; : 575 Minimum Test error found - save the configuration ; : 575 | 164.293 100.588 0.0203765 0.00182671 43127.2 0; : 576 Minimum Test error found - save the configuration ; : 576 | 162.136 99.7953 0.0201485 0.00182291 43654.8 0; : 577 Minimum Test error found - save the configuration ; : 577 | 160.429 98.8873 0.0202404 0.00182125 43433.1 0; : 578 Minimum Test error found - save the configuration ; : 578 | 158.663 98.2522 0.020118 0.00181189 43701.3 0; : 579 Minimum Test error found - save the configuration ; : 579 | 156.666 96.9925 0.0201133 0.00181082 43710 0; : 580 Minimum Test error found - save the configuration ; : 580 | 154.635 96.1367 0.0201142 0.00181294 43712.9 0; : 581 Minimum Test error found - save the configuration ; : 581 | 153.026 95.3539 0.0201307 0.0018172 43683.7 0; : 582 Minimum Test error found - save the configuration ; : 582 | 151.197 94.0449 0.020143 0.00182303 43668.3 0; : 583 Minimum Test error found - save the configuration ; : 583 | 149.229 93.6244 0.0201231 0.00181874 43705.4 0; : 584 Minimum Test error found - save the configuration ; : 584 | 147.504 92.2301 0.0202996 0.00182281 43297.5 0; : 585 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:76085,error,error,76085,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, 0; : 630 Minimum Test error found - save the configuration ; : 630 | 82.639 58.0942 0.0203377 0.00185077 43273.9 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:82988,error,error,82988,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, 0; : 631 Minimum Test error found - save the configuration ; : 631 | 81.6101 57.1049 0.0203504 0.00184845 43238.6 0; : 632 | 80.6827 57.1221 0.0201225 0.00176999 43590.8 1; : 633 Minimum Test error found - save the configuration ; : 633 | 79.5527 56.2669 0.0201884 0.00185082 43626.2 0; : 634 Minimum Test error found - save the configuration ; : 634 | 78.6493 55.4759 0.0202109 0.00182609 43514.1 0; : 635 Minimum Test error found - save the configuration ; : 635 | 77.3887 55.223 0.020166 0.00184577 43667.6 0; : 636 Minimum Test error found - save the configuration ; : 636 | 76.4488 55.0573 0.020202 0.00188181 43667.6 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.22,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:83101,error,error,83101,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, 0; : 637 Minimum Test error found - save the configuration ; : 637 | 75.4894 54.0711 0.0202555 0.00186268 43495.3 0; : 638 Minimum Test error found - save the configuration ; : 638 | 74.5839 53.0373 0.0201113 0.00181775 43731.4 0; : 639 Minimum Test error found - save the configuration ; : 639 | 73.497 52.6629 0.0200838 0.00181639 43793.9 0; : 640 Minimum Test error found - save the configuration ; : 640 | 72.4195 52.0402 0.0201153 0.00181887 43724.4 0; : 641 | 71.5077 52.3492 0.0200565 0.00175616 43715 1; : 642 Minimum Test error found - save the configuration ; : 642 | 70.8829 51.1798 0.0201079 0.00181215 43725.9 0; : 643 Minimum Test error found - save the configuration ; : 643 | 69.8143 50.8726 0.0201142 0.00180555 43695.1 0; : 644 Minimum Test error found - save the configuration ; : 644 | 68.806 50.1244 0.0201666 0.00186273 43706.7 0; : 645 Minimum Test error found - save the configuration ; : 645 | 67.8562 49.8828 0.0202418 0.00183622 43465.2 0; : 646 Minimum Test error found - save the configuration ; : 646 | 67.0733 49.0958 0.0205161 0.00187288 42911 0; : 647 Minimum Test error found - save the configuration ; : 647 | 66.0907 48.4839 0.0203074 0.00181472 43260.4 0; : 648 Minimum Test error found - save the configuration ; : 648 | 65.1425 47.9895 0.0205925 0.00181541 42605 0; : 649 Minimum Test error found - save the configuration ; : 649 | 64.2291 47.827 0.0205836 0.00185514 42715.8 0; : 650 Minimum Test error found - save the configuration ; : 650 | 63.5181 47.2461 0.0203914 0.00184161 43127.1 0; : 651 Minimum Test error found - save the configuration ; : 651 | 62.641 46.7417 0.020143 0.00182812 43680.3 0; : 652 Minimum Test error found - save the configuration ; : 652 | 61.875 46.3421 0.0201124 0.00182035 43734.8 0; : 653 Minimum Test error found - save the configuration ; : 653 | 61.1155 45.9892 0.0201549 0.00182806 43651.9 0; : 654 | 60.3955 46.5097 0.0201006 0.00177795 43661.9 1; : 655 Minimum Test error found - save the configuration ; : 655 | 59.577,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:83724,error,error,83724,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48.9056 38.9634 0.0204345 0.00193878 43253.1 0; : 671 Minimum Test error found - save the configuration ; : 671 | 47.9479 38.4436 0.0207053 0.00182816 42379.4 0; : 672 | 47.2853 39.0804 0.0202162 0.00175216 43327.4 1; : 673 Minimum Test error found - save the configuration ; : 673 | 47.0153 38.3207 0.0201285 0.00181671 43687.7 0; : 674 Minimum Test error found - save the configuration ; : 674 | 46.5986 38.0788 0.0201224 0.00182147 43713.7 0; : 675 Minimum Test error found - save the configuration ; : 675 | 45.6663 37.2199 0.020138 0.00182969 43696.1 0; : 676 Minimum Test error found - save the configuration ; : 676 | 44.8146 36.9047 0.0201419 0.00182761 43681.7 0; : 677 | 44.1854 37.155 0.0200983 0.0017637 43633.4 1; : 678 Minimum Test error found - save the configuration ; : 678 | 43.7163 36.54 0.0202108 0.00183597 43537.9 0; : 679 Minimum Test error found - save the configuration ; : 679 | 43.1003 36.3421 0.0201203 0.00181258 43697.4 0; : 680 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:86330,error,error,86330,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48.9056 38.9634 0.0204345 0.00193878 43253.1 0; : 671 Minimum Test error found - save the configuration ; : 671 | 47.9479 38.4436 0.0207053 0.00182816 42379.4 0; : 672 | 47.2853 39.0804 0.0202162 0.00175216 43327.4 1; : 673 Minimum Test error found - save the configuration ; : 673 | 47.0153 38.3207 0.0201285 0.00181671 43687.7 0; : 674 Minimum Test error found - save the configuration ; : 674 | 46.5986 38.0788 0.0201224 0.00182147 43713.7 0; : 675 Minimum Test error found - save the configuration ; : 675 | 45.6663 37.2199 0.020138 0.00182969 43696.1 0; : 676 Minimum Test error found - save the configuration ; : 676 | 44.8146 36.9047 0.0201419 0.00182761 43681.7 0; : 677 | 44.1854 37.155 0.0200983 0.0017637 43633.4 1; : 678 Minimum Test error found - save the configuration ; : 678 | 43.7163 36.54 0.0202108 0.00183597 43537.9 0; : 679 Minimum Test error found - save the configuration ; : 679 | 43.1003 36.3421 0.0201203 0.00181258 43697.4 0; : 680 Minimum Test error found - save the configuration ; : 680 | 42.8206 35.8087 0.0201316 0.00181818 43683.7 0; : 681 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:86444,error,error,86444,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, 0; : 690 Minimum Test error found - save the configuration ; : 690 | 37.3126 32.8977 0.0200976 0.0018112 43748.3 0; : 691 Minimum Test error found - save the configuration ; : 691 | 36.956 32.4497 0.0202163 0.00185879 43578.8 0; : 692 | 36.3494 32.5119 0.0203375 0.00178876 43129.6 1; : 693 Minimum Test error found - save the configuration ; : 693 | 35.9446 31.7942 0.0202985 0.00181447 43280.7 0; : 694 | 35.3125 31.8389 0.0201438 0.00175333 43500.7 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0925 30.8793 0.0200419 0.00175584 43749.1 2; : 703 Minimum Test error found - save the configuration ; : 703 | 31.9128 29.3224 0.0202722 0.00182152 43358.7 0; : 704 Minimum Test error found - save the configuration ; : 704 | 31.2876 29.167 0.0201013 0.00181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:89274,error,error,89274,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, 0; : 738 Minimum Test error found - save the configuration ; : 738 | 20.2862 22.4457 0.0201199 0.00181602 43706.6 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18.4234 20.9247 0.0201054 0.00181179 43731.2 0; : 748 Minimum Test error found - save the configuration ; : 748 | 18.2054 20.8597 0.0200854 0.00181067 43776.4 0; : 749 Minimum Test error found - save the configuration ; : 749 | 17.9119 20.8249 0.0200825 0.00181515 43794.1 0; : 750 | 17.7295 20.9077 0.0200909 0.00176261 43648.3 1; : 751 Minimum Test error found - save the configuration ; : 751 | 17.6646 20.1562 0.02009 0.00181812 43783 0; : 752 Minimum Test error found - save the configuration ; : 752 | 17.2045 20.1301 0.0200899 0.00181385 43773 0; : 753 Minimum Test error found - save the configuration ; : 753 | 17.2492 20.0483 0.0200805 0.00181433 43796.8 0; : 754 Minimum Test error found - save the configuration ; : 754 | 16.8738 20.0271 0.0201173 0.00182078 43724.2 0; : 755 | 16.6744 20.3793 0.0200328 0.00175569 43770.5 1; : 756 Minimum Test error found - save the configuration ; : 756 | 16.5214 19.4549 0.0200975 0.00181399 43755.3 0; : 757 | 16.549,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:93669,error,error,93669,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, 0; : 739 Minimum Test error found - save the configuration ; : 739 | 20.1208 22.4048 0.0200963 0.00181207 43753.7 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18.4234 20.9247 0.0201054 0.00181179 43731.2 0; : 748 Minimum Test error found - save the configuration ; : 748 | 18.2054 20.8597 0.0200854 0.00181067 43776.4 0; : 749 Minimum Test error found - save the configuration ; : 749 | 17.9119 20.8249 0.0200825 0.00181515 43794.1 0; : 750 | 17.7295 20.9077 0.0200909 0.00176261 43648.3 1; : 751 Minimum Test error found - save the configuration ; : 751 | 17.6646 20.1562 0.02009 0.00181812 43783 0; : 752 Minimum Test error found - save the configuration ; : 752 | 17.2045 20.1301 0.0200899 0.00181385 43773 0; : 753 Minimum Test error found - save the configuration ; : 753 | 17.2492 20.0483 0.0200805 0.00181433 43796.8 0; : 754 Minimum Test error found - save the configuration ; : 754 | 16.8738 20.0271 0.0201173 0.00182078 43724.2 0; : 755 | 16.6744 20.3793 0.0200328 0.00175569 43770.5 1; : 756 Minimum Test error found - save the configuration ; : 756 | 16.5214 19.4549 0.0200975 0.00181399 43755.3 0; : 757 | 16.5493 20.0416 0.0200274 0.00175373 43778.7 1; : 758 | 16.7051 19.8344 0.0200284 0.00174826 43763.4 2; : 759 | 16.2032 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:93783,error,error,93783,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, 0; : 740 Minimum Test error found - save the configuration ; : 740 | 19.913 22.3841 0.0200932 0.00181057 43757.3 0; : 741 Minimum Test error found - save the configuration ; : 741 | 19.6956 22.1693 0.0200949 0.00182186 43780.3 0; : 742 Minimum Test error found - save the configuration ; : 742 | 19.5563 22.0339 0.0201148 0.00182382 43737.3 0; : 743 Minimum Test error found - save the configuration ; : 743 | 19.2633 21.9202 0.0201113 0.00181809 43732 0; : 744 Minimum Test error found - save the configuration ; : 744 | 18.9779 21.4146 0.0200848 0.00181658 43791.8 0; : 745 | 19.0558 21.8309 0.0200351 0.00176335 43783.5 1; : 746 Minimum Test error found - save the configuration ; : 746 | 18.8292 21.203 0.0201069 0.00182679 43763.3 0; : 747 Minimum Test error found - save the configuration ; : 747 | 18.4234 20.9247 0.0201054 0.00181179 43731.2 0; : 748 Minimum Test error found - save the configuration ; : 748 | 18.2054 20.8597 0.0200854 0.00181067 43776.4 0; : 749 Minimum Test error found - save the configuration ; : 749 | 17.9119 20.8249 0.0200825 0.00181515 43794.1 0; : 750 | 17.7295 20.9077 0.0200909 0.00176261 43648.3 1; : 751 Minimum Test error found - save the configuration ; : 751 | 17.6646 20.1562 0.02009 0.00181812 43783 0; : 752 Minimum Test error found - save the configuration ; : 752 | 17.2045 20.1301 0.0200899 0.00181385 43773 0; : 753 Minimum Test error found - save the configuration ; : 753 | 17.2492 20.0483 0.0200805 0.00181433 43796.8 0; : 754 Minimum Test error found - save the configuration ; : 754 | 16.8738 20.0271 0.0201173 0.00182078 43724.2 0; : 755 | 16.6744 20.3793 0.0200328 0.00175569 43770.5 1; : 756 Minimum Test error found - save the configuration ; : 756 | 16.5214 19.4549 0.0200975 0.00181399 43755.3 0; : 757 | 16.5493 20.0416 0.0200274 0.00175373 43778.7 1; : 758 | 16.7051 19.8344 0.0200284 0.00174826 43763.4 2; : 759 | 16.2032 19.717 0.0200656 0.00175048 43679.7 3; : 760 | 16.1221 19.4686 0.0200628 0.00175006 43685.5 4; : 761 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:93897,error,error,93897,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability," 0; }. Int_t SysClose(Int_t ); { return 0; }. Int_t SysRead(Int_t , void* , Int_t ); { return 0; }. Int_t SysWrite(Int_t , const void* , Int_t ); { return 0; }. Long64_t SysSeek(Int_t , Long64_t , Int_t ); { return 0; }. Int_t SysStat(Int_t , Long_t* , Long64_t* , Long_t* , Long_t* ); { return 0; }. Int_t SysSync(Int_t ); { return 0; }. void DrawMap(const char* = ""*"", Option_t* = """"); {}. void FillBuffer(char*& ); {}. void Flush(); {}. Long64_t GetEND() const; { return 0; }. Int_t GetErrno() const; { return 0; }. void ResetErrno() const; {}. Int_t GetNfree() const; { return 0; }. Int_t GetNbytesInfo() const; {return 0; }. Int_t GetNbytesFree() const; {return 0; }. Long64_t GetSeekFree() const; {return 0; }. Long64_t GetSeekInfo() const; {return 0; }. Long64_t GetSize() const; { return 0; }. Int_t GetIOVersion() const; { return fIOVersion; }. void MakeFree(Long64_t , Long64_t ); {}. void MakeProject(const char* , const char* = ""*"", Option_t* = ""new""); {}. void Map(); {}. void Paint(Option_t* = """"); {}. void Print(Option_t* = """") const; {}. Bool_t ReadBuffer(char* , Int_t ); { return kFALSE; }. Bool_t ReadBuffer(char* , Long64_t , Int_t ); { return kFALSE; }. void ReadFree(); {}. Int_t Recover(); { return 0; }. void Seek(Long64_t , TFile::ERelativeTo = kBeg); {}. void SetEND(Long64_t ); {}. Int_t Sizeof() const; { return 0; }. void UseCache(Int_t = 10, Int_t = 0); {}. Bool_t WriteBuffer(const char* , Int_t ); { return kFALSE; }. Int_t Write(const char* = 0, Int_t = 0, Int_t = 0); { return 0; }. Int_t Write(const char* = 0, Int_t = 0, Int_t = 0) const; { return 0; }. void WriteFree(); {}. void WriteHeader(); {}. » Author: Sergey Linev 10.05.2004 » Copyright (C) 1995-2004, Rene Brun and Fons Rademakers. *; » Last changed: root/xml:$Id: TXMLFile.h 34444 2010-07-16 02:17:39Z pcanal $ » Last generated: 2011-11-03 20:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TXMLFile.html:34667,Recover,Recover,34667,root/html532/TXMLFile.html,https://root.cern,https://root.cern/root/html532/TXMLFile.html,1,['Recover'],['Recover']
Availability," 0;; 20314 }; 20315 }; 20316 ; 20317 if ((ctx == NULL) || (options == NULL)) {; 20318 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20319 mg_snprintf(NULL,; 20320 NULL, /* No truncation check for error buffers */; 20321 error->text,; 20322 error->text_buffer_size,; 20323 ""%s"",; 20324 ""Invalid parameters"");; 20325 }; 20326 return -1;; 20327 }; 20328 ; 20329 if (!STOP_FLAG_IS_ZERO(&ctx->stop_flag)) {; 20330 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20331 mg_snprintf(NULL,; 20332 NULL, /* No truncation check for error buffers */; 20333 error->text,; 20334 error->text_buffer_size,; 20335 ""%s"",; 20336 ""Server already stopped"");; 20337 }; 20338 return -1;; 20339 }; 20340 ; 20341 new_dom = (struct mg_domain_context *); 20342 mg_calloc_ctx(1, sizeof(struct mg_domain_context), ctx);; 20343 ; 20344 if (!new_dom) {; 20345 /* Out of memory */; 20346 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20347 mg_snprintf(NULL,; 20348 NULL, /* No truncation check for error buffers */; 20349 error->text,; 20350 error->text_buffer_size,; 20351 ""%s"",; 20352 ""Out or memory"");; 20353 }; 20354 return -6;; 20355 }; 20356 ; 20357 /* Store options - TODO: unite duplicate code */; 20358 while (options && (name = *options++) != NULL) {; 20359 if ((idx = get_option_index(name)) == -1) {; 20360 mg_cry_ctx_internal(ctx, ""Invalid option: %s"", name);; 20361 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20362 mg_snprintf(NULL,; 20363 NULL, /* No truncation check for error buffers */; 20364 error->text,; 20365 error->text_buffer_size,; 20366 ""Invalid option: %s"",; 20367 name);; 20368 }; 20369 mg_free(new_dom);; 20370 return -2;; 20371 } else if ((value = *options++) == NULL) {; 20372 mg_cry_ctx_internal(ctx, ""%s: option value cannot be NULL"", name);; 20373 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20374 mg_snprintf(NULL,; 20375 NULL, /* No truncation check for error buffers */; 20376 error->text,; 20377 error->text_buffer_size,; 20378 ""Invalid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:608229,error,error,608229,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability," 0;; 20315 }; 20316 }; 20317 ; 20318 if ((ctx == NULL) || (options == NULL)) {; 20319 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20320 mg_snprintf(NULL,; 20321 NULL, /* No truncation check for error buffers */; 20322 error->text,; 20323 error->text_buffer_size,; 20324 ""%s"",; 20325 ""Invalid parameters"");; 20326 }; 20327 return -1;; 20328 }; 20329 ; 20330 if (!STOP_FLAG_IS_ZERO(&ctx->stop_flag)) {; 20331 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20332 mg_snprintf(NULL,; 20333 NULL, /* No truncation check for error buffers */; 20334 error->text,; 20335 error->text_buffer_size,; 20336 ""%s"",; 20337 ""Server already stopped"");; 20338 }; 20339 return -1;; 20340 }; 20341 ; 20342 new_dom = (struct mg_domain_context *); 20343 mg_calloc_ctx(1, sizeof(struct mg_domain_context), ctx);; 20344 ; 20345 if (!new_dom) {; 20346 /* Out of memory */; 20347 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20348 mg_snprintf(NULL,; 20349 NULL, /* No truncation check for error buffers */; 20350 error->text,; 20351 error->text_buffer_size,; 20352 ""%s"",; 20353 ""Out or memory"");; 20354 }; 20355 return -6;; 20356 }; 20357 ; 20358 /* Store options - TODO: unite duplicate code */; 20359 while (options && (name = *options++) != NULL) {; 20360 if ((idx = get_option_index(name)) == -1) {; 20361 mg_cry_ctx_internal(ctx, ""Invalid option: %s"", name);; 20362 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20363 mg_snprintf(NULL,; 20364 NULL, /* No truncation check for error buffers */; 20365 error->text,; 20366 error->text_buffer_size,; 20367 ""Invalid option: %s"",; 20368 name);; 20369 }; 20370 mg_free(new_dom);; 20371 return -2;; 20372 } else if ((value = *options++) == NULL) {; 20373 mg_cry_ctx_internal(ctx, ""%s: option value cannot be NULL"", name);; 20374 if ((error != NULL) && (error->text_buffer_size > 0)) {; 20375 mg_snprintf(NULL,; 20376 NULL, /* No truncation check for error buffers */; 20377 error->text,; 20378 error->text_buffer_size,; 20379 ""Invalid",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:608262,error,error,608262,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability," 0;; for (i=1;i<=100;i++) {; sum += h1->GetBinContent(i);; hint1->SetBinContent(i,sum);; }. // scale hint1 to the pad coordinates; Float_t rightmax = 1.1*hint1->GetMaximum();; Float_t scale = gPad->GetUymax()/rightmax;; hint1->SetLineColor(kRed);; hint1->Scale(scale);; hint1->Draw(""same"");. // draw an axis on the right side; TGaxis *axis = new TGaxis(gPad->GetUxmax(),gPad->GetUymin(),; gPad->GetUxmax(), gPad->GetUymax(),0,rightmax,510,""+L"");; axis->SetLineColor(kRed);; axis->SetTextColor(kRed);; axis->Draw();; return c1;; }; Statistics Display; The type of information shown in the histogram statistics box can be selected; with:. gStyle->SetOptStat(mode);. The ""mode"" has up to nine digits that can be set to on(1 or 2), off(0). mode = iourmen (default = 000001111); k = 1; kurtosis printed; k = 2; kurtosis and kurtosis error printed; s = 1; skewness printed; s = 2; skewness and skewness error printed; i = 1; integral of bins printed; i = 2; integral of bins with option ""width"" printed; o = 1; number of overflows printed; u = 1; number of underflows printed; r = 1; rms printed; r = 2; rms and rms error printed; m = 1; mean value printed; m = 2; mean and mean error values printed; e = 1; number of entries printed; n = 1; name of histogram is printed. For example:. gStyle->SetOptStat(11);. displays only the name of histogram and the number of entries, whereas:. gStyle->SetOptStat(1101);. displays the name of histogram, mean value and RMS.; WARNING 1: never do:. gStyle->SetOptStat(000111);. but instead do:. gStyle->SetOptStat(1111);. because 0001111 will be taken as an octal number!; WARNING 2: for backward compatibility with older versions. gStyle->SetOptStat(1);. is taken as:. gStyle->SetOptStat(1111). To print only the name of the histogram do:. gStyle->SetOptStat(1000000001);. NOTE that in case of 2D histograms, when selecting only underflow; (10000) or overflow (100000), the statistics box will show all combinations; of underflow/overflows and not just one single numb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/THistPainter.html:15388,error,error,15388,root/html602/THistPainter.html,https://root.cern,https://root.cern/root/html602/THistPainter.html,8,['error'],['error']
Availability," 1 in case of error. void MoveEntries(Int_t dentries); Remove the first dentries of this basket, moving entries at; dentries to the start of the buffer. Int_t ReadBasketBuffersUncompressedCase(); By-passing buffer unzipping has been requested and is; possible (only 1 entry in this basket). Int_t ReadBasketBuffersUnzip(char* , Int_t , Bool_t , TFile* ); We always create the TBuffer for the basket but it hold the buffer from the cache. void inline InitializeCompressedBuffer(Int_t len, TFile* file); Initialize the compressed buffer; either from the TTree or create a local one. Int_t ReadBasketBuffers(Long64_t pos, Int_t len, TFile* file); Read basket buffers in memory and cleanup. Read a basket buffer. Check if buffers of previous ReadBasket; should not be dropped. Remember, we keep buffers in memory up to; fMaxVirtualSize.; The function returns 0 in case of success, 1 in case of error; This function was modified with the addition of the parallel; unzipping, it will try to get the unzipped file from the cache; receiving only a pointer to that buffer (so we shall not; delete that pointer), although we get a new buffer in case; it's not found in the cache.; There is a lot of code duplication but it was necesary to assure; the expected behavior when there is no cache. Int_t ReadBasketBytes(Long64_t pos, TFile* file); Read basket buffers in memory and cleanup. Read first bytes of a logical record starting at position pos; return record length (first 4 bytes of record). void Reset(); Reset the basket to the starting state. i.e. as it was after calling; the constructor (and potentially attaching a TBuffer.); Reduce memory used by fEntryOffset and the TBuffer if needed .. void SetReadMode(); Set read mode of basket. void SetWriteMode(); Set write mode of basket. void Streamer(TBuffer& ); Stream a class object. void Update(Int_t newlast, Int_t skipped); Update basket header and EntryOffset table. Int_t WriteBuffer(); Write buffer of this basket on the current file. The function",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBasket.html:11136,error,error,11136,root/html534/TBasket.html,https://root.cern,https://root.cern/root/html534/TBasket.html,6,['error'],['error']
Availability," 1 in case of error. void MoveEntries(Int_t dentries); Remove the first dentries of this basket, moving entries at; dentries to the start of the buffer. Int_t ReadBasketBuffersUncompressedCase(); By-passing buffer unzipping has been requested and is; possible (only 1 entry in this basket). Int_t ReadBasketBuffersUnzip(char* , Int_t , Bool_t , TFile* ); We always create the TBuffer for the basket but it hold the buffer from the cache. void inline InitializeCompressedBuffer(Int_t len, TFile* file); Initialize the compressed buffer; either from the TTree or create a local one. Int_t ReadBasketBuffers(Long64_t pos, Int_t len, TFile* file); Read basket buffers in memory and cleanup. Read a basket buffer. Check if buffers of previous ReadBasket; should not be dropped. Remember, we keep buffers in memory up to; fMaxVirtualSize.; The function returns 0 in case of success, 1 in case of error; This function was modified with the addition of the parallel; unzipping, it will try to get the unzipped file from the cache; receiving only a pointer to that buffer (so we shall not; delete that pointer), although we get a new buffer in case; it's not found in the cache.; There is a lot of code duplication but it was necesary to assure; the expected behavior when there is no cache. Int_t ReadBasketBytes(Long64_t pos, TFile* file); Read basket buffers in memory and cleanup. Read first bytes of a logical record starting at position pos; return record length (first 4 bytes of record). void Reset(); Reset the basket to the starting state. i.e. as it was after calling; the constructor (and potentially attaching a TBuffer.); Reduce memory used by fEntryOffset and the TBuffer if needed .. void SetReadMode(); Set read mode of basket. void SetWriteMode(); Set write mode of basket. void Streamer(TBuffer& b); Stream a class object. void Update(Int_t newlast, Int_t skipped); Update basket header and EntryOffset table. Int_t WriteBuffer(); Write buffer of this basket on the current file. The functio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBasket.html:11083,error,error,11083,root/html532/TBasket.html,https://root.cern,https://root.cern/root/html532/TBasket.html,2,['error'],['error']
Availability," 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; virtual voidDistFromOutside_v(const Double_t* points, const Double_t* dirs, Double_t* dists, Int_t vecsize, Double_t* step) const; static Double_tTGeoShape::DistToPhiMin(const Double_t* point, const Double_t* dir, Double_t s1, Double_t c1, Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in = kTRUE); Double_tDistToSegZ(const Double_t* point, const Double_t* dir, Int_t& iz) const; virtual TGeoVolume*Divide(TGeoVolume* voldiv, const char* divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step); Double_t&Dphi(); virtual voidTGeoShape::Draw(Option_t* option = """")MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; static Double_tTGeoShape::EpsMch(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTGeoShape::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const char*GetAxisName(Int_t iaxis) const; virtual Double_tGetAxisRange(Int_t iaxis, Double_t& xlo, Double_t& xhi) const; virtual voidGetBoundingCylinder(Double_t* param) const; virtual const TBuffer3D&GetBuffer3D(Int_t reqSections, Bool_t localFrame) const; virtual Int_tGetByteCount() const; Double_tGetDphi() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tTGeoBBox::GetDX() const; virtual Double_tTGeoBBox::GetDY() const; virtual Double_tTGeoBBox::GetDZ() const; virtual Double_tTGeoBBox::GetFacetArea(Int_t index = 0) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPcon.html:3660,error,error,3660,root/html534/TGeoPcon.html,https://root.cern,https://root.cern/root/html534/TGeoPcon.html,6,['error'],['error']
Availability," 1-dim points : stride1=1, stride2=1; for multi-dim points arranged as (x0,x1,...,xN,y0,....yN) stride1=1 stride2=n; for multi-dim points arraged as (x0,y0,..,x1,y1,...,xN,yN,..) stride1=ndim, stride2=1. the confidence interval are returned in the array ci; cl is the desired confidedence interval value; norm is a flag to control if the intervals need to be normalized to the chi2/ndf value; By default the intervals are corrected using the chi2/ndf value of the fit if a chi2 fit is performed. void GetConfidenceIntervals(const ROOT::Fit::BinData& data, double* ci, double cl = 0.94999999999999996, bool norm = true) const. evaluate confidence interval for the point specified in the passed data sets; the confidence interval are returned in the array ci; cl is the desired confidence interval value. int Index(const string& name) const; get index for parameter name (return -1 if not found). void NormalizeErrors(); normalize errors using chi2/ndf for chi2 fits. bool NormalizedErrors() const; flag to chek if errors are normalized. { return fNormalized; }. void Print(ostream& os, bool covmat = false) const; print the result and optionaly covariance matrix and correlations. void PrintCovMatrix(ostream& os) const; print error matrix and correlations. bool IsParameterBound(unsigned int ipar) const; query if a parameter is bound. bool IsParameterFixed(unsigned int ipar) const; query if a parameter is fixed. bool ParameterBounds(unsigned int ipar, double& lower, double& upper) const; retrieve parameter bounds - return false if parameter is not bound. std::string GetParameterName(unsigned int ipar) const; get name of parameter (deprecated). void SetModelFunction(ROOT::Fit::FitResult::IModelFunction* func); { fFitFunc = func; }. » Author: L. Moneta Wed Aug 30 11:05:34 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-06-30 14:21; This page has been automatically generated. For comments or suggestions regarding the do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Fit__FitResult.html:10673,error,errors,10673,root/html602/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html602/ROOT__Fit__FitResult.html,2,['error'],['errors']
Availability," 1., Bool_t efficiency = kFALSE, Double_t scaleFactor = 1.); Create a histogram from the asymmetry between the specified TH1 objects; which may have fixed or variable bin widths, but which must both have; the same binning. The asymmetry is calculated as (1-2)/(1+2). Error bars are; calculated using Binomial statistics. Prints a warning and rounds; any bins with non-integer contents. Use the optional parameter to; specify the confidence level in units of sigma to use for; calculating error bars. The nominal bin width specifies the; default used by addAsymmetryBin(), and is used to set the relative; normalization of bins with different widths. If not set, the; nominal bin width is calculated as range/nbins. RooHist(const RooHist& hist1, const RooHist& hist2, Double_t wgt1 = 1., Double_t wgt2 = 1., RooAbsData::ErrorType etype = RooAbsData::Poisson, Double_t xErrorFrac = 1.); Create histogram as sum of two existing histograms. If Poisson errors are selected the histograms are; added and Poisson confidence intervals are calculated for the summed content. If wgt1 and wgt2 are not; 1 in this mode, a warning message is printed. If SumW2 errors are selectd the histograms are added; and the histograms errors are added in quadrature, taking the weights into account. void initialize(); Perform common initialization for all constructors. Double_t getFitRangeNEvt() const; Return the number of events of the dataset associated with this RooHist.; This is the number of events in the RooHist itself, unless a different; value was specified through setRawEntries(). Double_t getFitRangeNEvt(Double_t xlo, Double_t xhi) const; Calculate integral of histogram in given range. Double_t getFitRangeBinW() const; Return (average) bin width of this RooHist. Int_t roundBin(Double_t y); Return the nearest positive integer to the input value; and print a warning if an adjustment is required. void addBin(Axis_t binCenter, Double_t n, Double_t binWidth = 0, Double_t xErrorFrac = 1., Double_t scaleFact",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooHist.html:22503,error,errors,22503,root/html602/RooHist.html,https://root.cern,https://root.cern/root/html602/RooHist.html,4,['error'],['errors']
Availability," 1. . ). inline . Definition at line 191 of file THnBase.h. ◆ AddBinContent() [2/2]. virtual void THnBase::AddBinContent ; (; Long64_t ; bin, . Double_t ; v = 1. . ). pure virtual . Implemented in THn, and THnSparse. ◆ AddBinError2(). virtual void THnBase::AddBinError2 ; (; Long64_t ; bin, . Double_t ; e2 . ). pure virtual . Implemented in THn, and THnSparse. ◆ AddInternal(). void THnBase::AddInternal ; (; const THnBase * ; h, . Double_t ; c, . Bool_t ; rebinned . ). protected . Add() implementation for both rebinned histograms and those with identical binning. ; See THnBase::Add(). ; Definition at line 798 of file THnBase.cxx. ◆ Browse(). void THnBase::Browse ; (; TBrowser * ; b). overridevirtual . Browse a THnSparse: create an entry (ROOT::THnSparseBrowsable) for each dimension. ; Reimplemented from TObject.; Definition at line 1582 of file THnBase.cxx. ◆ CalculateErrors(). void THnBase::CalculateErrors ; (; Bool_t ; calc = kTRUE). inline . Calculate errors (or not if ""calc"" == kFALSE) ; Definition at line 144 of file THnBase.h. ◆ CheckConsistency(). Bool_t THnBase::CheckConsistency ; (; const THnBase * ; h, . const char * ; tag . ); const. protected . Consistency check on (some of) the parameters of two histograms (for operations). ; Definition at line 1162 of file THnBase.cxx. ◆ Class(). static TClass * THnBase::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * THnBase::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t THnBase::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 292 of file THnBase.h. ◆ CloneEmpty(). THnBase * THnBase::CloneEmpty ; (; const char * ; name, . const char * ; title, . const TObjArray * ; axes, . Bool_t ; keepTargetAxis . ); const. protected . Create a new THnBase object that is of the same type as *this, but with dimensions and bins given by axes. ; If keepTargetAxis is true, the axes will ke",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHnBase.html:23736,error,errors,23736,doc/master/classTHnBase.html,https://root.cern,https://root.cern/doc/master/classTHnBase.html,1,['error'],['errors']
Availability," 10, Int_t pageSize = 0); Dummy function kept for backward compatibility.; The read cache is now managed by TFileCacheRead; The write cache is now managed by TFileCacheWrite; Both caches are created automatically by the system. Int_t Write(const char* name = 0, Int_t opt = 0, Int_t bufsiz = 0); Write memory objects to this file.; Loop on all objects in memory (including subdirectories).; A new key is created in the KEYS linked list for each object.; The list of keys is then saved on the file (via WriteKeys); as a single data record.; For values of opt see TObject::Write().; The directory header info is rewritten on the directory header record.; The linked list of FREE segments is written.; The file header is written (bytes 1->fBEGIN). Int_t Write(const char* name = 0, Int_t opt = 0, Int_t bufsiz = 0) const; One can not save a const TDirectory object. Bool_t WriteBuffer(const char* buf, Int_t len); Write a buffer to the file. This is the basic low level write operation.; Returns kTRUE in case of failure. Int_t WriteBufferViaCache(const char* buf, Int_t len); Write buffer via cache. Returns 0 if cache is not active, 1 in case; write via cache was successful, 2 in case write via cache failed. void WriteFree(); Write FREE linked list on the file.; The linked list of FREE segments (fFree) is written as a single data; record. void WriteHeader(); Write File Header. void MakeProject(const char* dirname, const char* classes = ""*"", Option_t* option = ""new""); Generate code in directory dirname for all classes specified in; argument classes If classes = ""*"" (default and currently the; only supported value), the function generates an include file; for each class in the StreamerInfo list for which a TClass; object does not exist. The code generated includes:; dirnameProjectHeaders.h // contains one #include statement per generated header file; dirnameProjectSource.cxx // contains all the constructors and destructors implementation.; and one header per class that is not nested insi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFile.html:38907,failure,failure,38907,root/html528/TFile.html,https://root.cern,https://root.cern/root/html528/TFile.html,6,['failure'],['failure']
Availability," 100 , 100 ) ; Layer 2 DENSE Layer: ( Input = 100 , Width = 64 ) Output = ( 1 , 100 , 64 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 100 , 1 ) Activation Function = Identity; : Using 2560 events for training and 640 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.70799; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.70053 0.692869 0.629389 0.0419042 4255.43 0; : 2 | 0.694153 0.694394 0.642643 0.0421501 4163.24 1; : 3 | 0.689625 0.697522 0.642119 0.0416746 4163.58 2; : 4 | 0.681203 0.694822 0.637781 0.0412238 4190.71 3; : 5 Minimum Test error found - save the configuration ; : 5 | 0.673678 0.681248 0.623882 0.0409529 4288.69 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.660284 0.667264 0.616834 0.0410715 4342.07 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.607427 0.0404816 4409.59 0; : 8 | 0.616397 0.638352 0.60791 0.0403928 4405.16 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.606268 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:15800,error,error,15800,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['error'],['error']
Availability," 1000); virtual voidTF1::SetMaximum(Double_t maximum = -1111)MENU ; virtual voidTF1::SetMinimum(Double_t minimum = -1111)MENU ; virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidTF1::SetNDF(Int_t ndf); virtual voidTF1::SetNpx(Int_t npx = 100)MENU ; virtual voidTFormula::SetNumber(Int_t number); virtual voidTF1::SetNumberFitPoints(Int_t npfits); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTFormula::SetParameter(const char* name, Double_t parvalue); virtual voidTFormula::SetParameter(Int_t ipar, Double_t parvalue); virtual voidTFormula::SetParameters(const Double_t* params); virtual voidTFormula::SetParameters(Double_t p0, Double_t p1, Double_t p2 = 0, Double_t p3 = 0, Double_t p4 = 0, Double_t p5 = 0, Double_t p6 = 0, Double_t p7 = 0, Double_t p8 = 0, Double_t p9 = 0, Double_t p10 = 0)MENU ; virtual voidTF1::SetParent(TObject* p = 0); virtual voidTF1::SetParError(Int_t ipar, Double_t error); virtual voidTF1::SetParErrors(const Double_t* errors); virtual voidTF1::SetParLimits(Int_t ipar, Double_t parmin, Double_t parmax); virtual voidTFormula::SetParName(Int_t ipar, const char* name); virtual voidTFormula::SetParNames(const char* name0 = ""p0"", const char* name1 = ""p1"", const char* name2 = ""p2"", const char* name3 = ""p3"", const char* name4 = ""p4"", const char* name5 = ""p5"", const char* name6 = ""p6"", const char* name7 = ""p7"", const char* name8 = ""p8"", const char* name9 = ""p9"", const char* name10 = ""p10"")MENU ; virtual voidTF1::SetRange(Double_t xmin, Double_t xmax)MENU ; virtual voidTF1::SetRange(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax); virtual voidTF1::SetRange(Double_t xmin, Double_t ymin, Double_t zmin, Double_t xmax, Double_t ymax, Double_t zmax); virtual voidTF1::SetSavedPoint(Int_t point, Double_t value); virtual voidTF1::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidSetXY(Double_t xy)MENU ; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TF12.html:13338,error,error,13338,root/html528/TF12.html,https://root.cern,https://root.cern/root/html528/TF12.html,6,['error'],['error']
Availability," 1014 // Perform minimization steps for a full epoch.; 1015 trainingData.Shuffle();; 1016 for (size_t i = 0; i < batchesInEpoch; i += nThreads) {; 1017 batches.clear();; 1018 for (size_t j = 0; j < nThreads; j++) {; 1019 batches.reserve(nThreads);; 1020 batches.push_back(trainingData.GetBatch());; 1021 }; 1022 if (settings.momentum > 0.0) {; 1023 minimizer.StepMomentum(net, nets, batches, settings.momentum);; 1024 } else {; 1025 minimizer.Step(net, nets, batches);; 1026 }; 1027 }; 1028 ; 1029 if ((stepCount % minimizer.GetTestInterval()) == 0) {; 1030 ; 1031 // Compute test error.; 1032 Double_t testError = 0.0;; 1033 for (auto batch : testData) {; 1034 auto inputMatrix = batch.GetInput();; 1035 auto outputMatrix = batch.GetOutput();; 1036 testError += testNet.Loss(inputMatrix, outputMatrix);; 1037 }; 1038 testError /= (Double_t) (nTestSamples / settings.batchSize);; 1039 ; 1040 //Log the loss value; 1041 fTrainHistory.AddValue(""testError"",stepCount,testError);; 1042 ; 1043 end = std::chrono::system_clock::now();; 1044 ; 1045 // Compute training error.; 1046 Double_t trainingError = 0.0;; 1047 for (auto batch : trainingData) {; 1048 auto inputMatrix = batch.GetInput();; 1049 auto outputMatrix = batch.GetOutput();; 1050 trainingError += net.Loss(inputMatrix, outputMatrix);; 1051 }; 1052 trainingError /= (Double_t) (nTrainingSamples / settings.batchSize);; 1053 //Log the loss value; 1054 fTrainHistory.AddValue(""trainingError"",stepCount,trainingError);; 1055 ; 1056 // Compute numerical throughput.; 1057 std::chrono::duration<double> elapsed_seconds = end - start;; 1058 double seconds = elapsed_seconds.count();; 1059 double nFlops = (double) (settings.testInterval * batchesInEpoch);; 1060 nFlops *= net.GetNFlops() * 1e-9;; 1061 ; 1062 converged = minimizer.HasConverged(testError);; 1063 start = std::chrono::system_clock::now();; 1064 ; 1065 if (fInteractive) {; 1066 fInteractive->AddPoint(stepCount, trainingError, testError);; 1067 fIPyCurrentIter = 100.0 * minimizer.Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodDNN_8cxx_source.html:37347,error,error,37347,doc/master/MethodDNN_8cxx_source.html,https://root.cern,https://root.cern/doc/master/MethodDNN_8cxx_source.html,1,['error'],['error']
Availability," 1027/// object is a type suitable to be stored as a pointer to a ""expectedClass""; 1028/// If expectedClass is null, no check is performed.; 1029///; 1030/// - namecycle has the format name;cycle; 1031/// - name = * is illegal, cycle = * is illegal; 1032/// - cycle = """" or cycle = 9999 ==> apply to a memory object; 1033///; 1034/// ### Very important note; 1035/// The calling application must cast the returned pointer to; 1036/// the type described by the 2 arguments (i.e. cl):; 1037///; 1038/// auto objPtr = (MyClass*)directory->GetObjectChecked(""some object of MyClass"",""MyClass""));; 1039///; 1040/// Note: We recommend using the method TDirectoryFile::Get<T>:; 1041/// ~~~{.cpp}; 1042/// auto objPtr = directory->Get<MyClass>(""some object inheriting from MyClass"");; 1043/// if (objPtr) { ... we found what we are looking for ... }; 1044/// ~~~; 1045 ; 1046void *TDirectoryFile::GetObjectChecked(const char *namecycle, const TClass* expectedClass); 1047{; 1048 ; 1049 // If the name is invalid, issue an error message and return a nullptr; 1050 if (!namecycle || '\0' == namecycle[0]) {; 1051 Error(""GetObjectChecked"", ""The provided key name is invalid."");; 1052 return nullptr;; 1053 }; 1054 ; 1055 Short_t cycle;; 1056 char name[kMaxLen];; 1057 ; 1058 DecodeNameCycle(namecycle, name, cycle, kMaxLen);; 1059 Int_t nch = strlen(name);; 1060 for (Int_t i = nch-1; i > 0; i--) {; 1061 if (name[i] == '/') {; 1062 name[i] = 0;; 1063 TDirectory* dirToSearch=GetDirectory(name);; 1064 const char *subnamecycle = namecycle + i + 1;; 1065 name[i] = '/';; 1066 if (dirToSearch) {; 1067 return dirToSearch->GetObjectChecked(subnamecycle, expectedClass);; 1068 } else {; 1069 return nullptr;; 1070 }; 1071 }; 1072 }; 1073 const char *namobj = name;; 1074 ; 1075//*-*---------------------Case of Object in memory---------------------; 1076// ========================; 1077 if (expectedClass==0 || expectedClass->IsTObject()) {; 1078 TObject *objcur = fList ? fList->FindObject(namobj) : nullptr;; 1079",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDirectoryFile_8cxx_source.html:35593,error,error,35593,doc/master/TDirectoryFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TDirectoryFile_8cxx_source.html,1,['error'],['error']
Availability," 103 Double_t GetmuTransform ( TTree *) { return -1; }; 104 Double_t GetEfficiency ( const TString&, Types::ETreeType, Double_t& );; 105 Double_t GetTrainingEfficiency(const TString& );; 106 ; 107 // rarity distributions (signal or background (default) is uniform in [0,1]); 108 Double_t GetRarity( Double_t, Types::ESBType ) const { return 0; }; 109 ; 110 // accessors for Minuit; 111 Double_t ComputeEstimator( std::vector<Double_t> & );; 112 ; 113 Double_t EstimatorFunction( std::vector<Double_t> & );; 114 Double_t EstimatorFunction( Int_t ievt1, Int_t ievt2 );; 115 ; 116 void SetTestSignalEfficiency( Double_t effS ) { fTestSignalEff = effS; }; 117 ; 118 // retrieve cut values for given signal efficiency; 119 void PrintCuts( Double_t effS ) const;; 120 Double_t GetCuts ( Double_t effS, std::vector<Double_t>& cutMin, std::vector<Double_t>& cutMax ) const;; 121 Double_t GetCuts ( Double_t effS, Double_t* cutMin, Double_t* cutMax ) const;; 122 ; 123 // ranking of input variables (not available for cuts); 124 const Ranking* CreateRanking() { return nullptr; }; 125 ; 126 void DeclareOptions();; 127 void ProcessOptions();; 128 ; 129 // maximum |cut| value; 130 static const Double_t fgMaxAbsCutVal;; 131 ; 132 // no check of options at this place; 133 void CheckSetup() {}; 134 ; 135 protected:; 136 ; 137 // make ROOT-independent C++ class for classifier response (classifier-specific implementation); 138 void MakeClassSpecific( std::ostream&, const TString& ) const;; 139 ; 140 // get help message text; 141 void GetHelpMessage() const;; 142 ; 143 private:; 144 ; 145 // optimisation method; 146 enum EFitMethodType { kUseMonteCarlo = 0,; 147 kUseGeneticAlgorithm,; 148 kUseSimulatedAnnealing,; 149 kUseMinuit,; 150 kUseEventScan,; 151 kUseMonteCarloEvents };; 152 ; 153 // efficiency calculation method; 154 // - kUseEventSelection: computes efficiencies from given data sample; 155 // - kUsePDFs : creates smoothed PDFs from data samples, and; 156 // uses this to compute efficiencies",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/MethodCuts_8h_source.html:4760,avail,available,4760,doc/master/MethodCuts_8h_source.html,https://root.cern,https://root.cern/doc/master/MethodCuts_8h_source.html,1,['avail'],['available']
Availability," 1053/// if subbranches is true all the branches of the subbranches are; 1054/// also put to the cache.; 1055///; 1056/// Returns:; 1057/// - 0 branch added or already included; 1058/// - -1 on error; 1059 ; 1060Int_t TTree::AddBranchToCache(const char*bname, bool subbranches); 1061{; 1062 if (!GetTree()) {; 1063 if (LoadTree(0)<0) {; 1064 Error(""AddBranchToCache"",""Could not load a tree"");; 1065 return -1;; 1066 }; 1067 }; 1068 if (GetTree()) {; 1069 if (GetTree() != this) {; 1070 return GetTree()->AddBranchToCache(bname, subbranches);; 1071 }; 1072 } else {; 1073 Error(""AddBranchToCache"", ""No tree is available. Branch was not added to the cache"");; 1074 return -1;; 1075 }; 1076 ; 1077 TFile *f = GetCurrentFile();; 1078 if (!f) {; 1079 Error(""AddBranchToCache"", ""No file is available. Branch was not added to the cache"");; 1080 return -1;; 1081 }; 1082 TTreeCache *tc = GetReadCache(f,true);; 1083 if (!tc) {; 1084 Error(""AddBranchToCache"", ""No cache is available, branch not added"");; 1085 return -1;; 1086 }; 1087 return tc->AddBranch(bname,subbranches);; 1088}; 1089 ; 1090////////////////////////////////////////////////////////////////////////////////; 1091/// Add branch b to the Tree cache.; 1092/// if subbranches is true all the branches of the subbranches are; 1093/// also put to the cache.; 1094///; 1095/// Returns:; 1096/// - 0 branch added or already included; 1097/// - -1 on error; 1098 ; 1099Int_t TTree::AddBranchToCache(TBranch *b, bool subbranches); 1100{; 1101 if (!GetTree()) {; 1102 if (LoadTree(0)<0) {; 1103 Error(""AddBranchToCache"",""Could not load a tree"");; 1104 return -1;; 1105 }; 1106 }; 1107 if (GetTree()) {; 1108 if (GetTree() != this) {; 1109 Int_t res = GetTree()->AddBranchToCache(b, subbranches);; 1110 if (res<0) {; 1111 Error(""AddBranchToCache"", ""Error adding branch"");; 1112 }; 1113 return res;; 1114 }; 1115 } else {; 1116 Error(""AddBranchToCache"", ""No tree is available. Branch was not added to the cache"");; 1117 return -1;; 1118 }; 1119 ; 1120 TF",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:38808,avail,available,38808,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['avail'],['available']
Availability," 1068 of file MethodBDT.cxx. ◆ PreProcessNegativeEventWeights(). void TMVA::MethodBDT::PreProcessNegativeEventWeights ; (; ). private . O.k. ; you know there are events with negative event weights. This routine will remove them by pairing them with the closest event(s) of the same event class with positive weights A first attempt is ""brute force"", I dont' try to be clever using search trees etc, just quick and dirty to see if the result is any good ; Definition at line 932 of file MethodBDT.cxx. ◆ PrivateGetMvaValue(). Double_t TMVA::MethodBDT::PrivateGetMvaValue ; (; const TMVA::Event * ; ev, . Double_t * ; err = nullptr, . Double_t * ; errUpper = nullptr, . UInt_t ; useNTrees = 0 . ). private . Return the MVA value (range [-1;1]) that classifies the event according to the majority vote from the total number of decision trees. ; Definition at line 2467 of file MethodBDT.cxx. ◆ ProcessOptions(). void TMVA::MethodBDT::ProcessOptions ; (; ). virtual . The option string is decoded, for available options see ""DeclareOptions"". ; Implements TMVA::MethodBase.; Definition at line 470 of file MethodBDT.cxx. ◆ ReadWeightsFromStream() [1/3]. virtual void TMVA::MethodBase::ReadWeightsFromStream ; (; std::istream & ; ). virtual . Implements TMVA::MethodBase. ◆ ReadWeightsFromStream() [2/3]. void TMVA::MethodBDT::ReadWeightsFromStream ; (; std::istream & ; istr). virtual . Read the weights (BDT coefficients). ; Implements TMVA::MethodBase.; Definition at line 2407 of file MethodBDT.cxx. ◆ ReadWeightsFromStream() [3/3]. virtual void TMVA::MethodBase::ReadWeightsFromStream ; (; TFile & ; ). inlinevirtual . Reimplemented from TMVA::MethodBase.; Definition at line 266 of file MethodBase.h. ◆ ReadWeightsFromXML(). void TMVA::MethodBDT::ReadWeightsFromXML ; (; void * ; parent). virtual . Reads the BDT from the xml file. ; Implements TMVA::MethodBase.; Definition at line 2340 of file MethodBDT.cxx. ◆ RegBoost(). Double_t TMVA::MethodBDT::RegBoost ; (; std::vector< const TMVA::Event * > ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBDT.html:55750,avail,available,55750,doc/master/classTMVA_1_1MethodBDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBDT.html,1,['avail'],['available']
Availability," 1099 of file RooWorkspace.cxx. ◆ IsA(). TClass * RooWorkspace::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 282 of file RooWorkspace.h. ◆ loadSnapshot(). bool RooWorkspace::loadSnapshot ; (; const char * ; name). Load the values and attributes of the parameters in the snapshot saved with the given name. ; Definition at line 1182 of file RooWorkspace.cxx. ◆ makeDir(). bool RooWorkspace::makeDir ; (; ). Create transient TDirectory representation of this workspace. ; This directory will appear as a subdirectory of the directory that contains the workspace and will have the name of the workspace suffixed with ""Dir"". The TDirectory interface is read-only. Any attempt to insert objects into the workspace directory representation will result in an error message. Note that some ROOT object like TH1 automatically insert themselves into the current directory when constructed. This will give error messages when done in a workspace directory. ; Definition at line 1887 of file RooWorkspace.cxx. ◆ merge(). void RooWorkspace::merge ; (; const RooWorkspace & ; ). inline . Definition at line 102 of file RooWorkspace.h. ◆ obj(). TObject * RooWorkspace::obj ; (; RooStringView ; name); const. Return any type of object (RooAbsArg, RooAbsData or generic object) with given name) ; Definition at line 2007 of file RooWorkspace.cxx. ◆ pdf(). RooAbsPdf * RooWorkspace::pdf ; (; RooStringView ; name); const. Retrieve p.d.f (RooAbsPdf) with given name. A null pointer is returned if not found. ; Definition at line 1214 of file RooWorkspace.cxx. ◆ Print(). void RooWorkspace::Print ; (; Option_t * ; opts = nullptr); const. overridevirtual . Print contents of the workspace. ; Reimplemented from TObject.; Definition at line 2095 of file RooWorkspace.cxx. ◆ RecursiveRemove(). void RooWorkspace::RecursiveRemove ; (; TObject * ; obj). overridevirtual . If one of the TObject we have a referenced to is deleted, remove",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace.html:45093,error,error,45093,doc/master/classRooWorkspace.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace.html,1,['error'],['error']
Availability," 1121 eventCounts[cls].nTrainingEventsRequested = Int_t(eventCounts[cls].TrainTestSplitRequested*(availableTraining+availableTesting+availableUndefined));; 1122 eventCounts[cls].nTestingEventsRequested = Int_t(0);; 1123 }; 1124 else if(eventCounts[cls].TrainTestSplitRequested != 0.0) Log() << kFATAL << Form(""The option TrainTestSplit_<class> has to be in range (0, 1] but is set to %f."",eventCounts[cls].TrainTestSplitRequested) << Endl;; 1125 Int_t requestedTraining = Int_t(eventCounts[cls].nTrainingEventsRequested * presel_scale);; 1126 Int_t requestedTesting = Int_t(eventCounts[cls].nTestingEventsRequested * presel_scale);; 1127 ; 1128 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""events in training trees : "" << availableTraining << Endl;; 1129 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""events in testing trees : "" << availableTesting << Endl;; 1130 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""events in unspecified trees : "" << availableUndefined << Endl;; 1131 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""requested for training : "" << requestedTraining << Endl;; 1132 ; 1133 if(presel_scale<1); 1134 Log() << "" ( "" << eventCounts[cls].nTrainingEventsRequested; 1135 << "" * "" << presel_scale << "" preselection efficiency)"" << Endl;; 1136 else; 1137 Log() << Endl;; 1138 Log() << kDEBUG << ""requested for testing : "" << requestedTesting;; 1139 if(presel_scale<1); 1140 Log() << "" ( "" << eventCounts[cls].nTestingEventsRequested; 1141 << "" * "" << presel_scale << "" preselection efficiency)"" << Endl;; 1142 else; 1143 Log() << Endl;; 1144 ; 1145 // nomenclature r = available training; 1146 // s = available testing; 1147 // u = available undefined; 1148 // R = requested training; 1149 // S = requested testing; 1150 // nR = to be used to select training events; 1151 // nS = to be used to select test events; 1152 // we have the constraint: nR + nS < r+s+u,; 1153 // since we can not use more events than we have; 1154 // free ev",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:49829,avail,availableUndefined,49829,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['avail'],['availableUndefined']
Availability," 1126 // I need to array because labels order in list is not necessary that of the bins; 1127 std::vector<std::string> vecLabels(n);; 1128 for (i = 0; i < n; i++) {; 1129 vecLabels[i] = labold[i]->GetName();; 1130 a[i] = i;; 1131 sumw[i] = fArray[i+1];; 1132 errors[i] = fSumw2.fArray[i+1];; 1133 ent[i] = fBinEntries.fArray[i+1];; 1134 if (fBinSumw2.fN); 1135 binsw2[i] = fBinSumw2.fArray[i+1];; 1136 }; 1137 // sort in ascending order for strings; 1138 TMath::Sort(n, vecLabels.data(), a.data(), kFALSE);; 1139 // set the new labels; 1140 for (i = 0; i < n; i++) {; 1141 TObject *labelObj = labold[a[i]];; 1142 labels->Add(labelObj);; 1143 // set the corresponding bin. NB bin starts from 1; 1144 labelObj->SetUniqueID(i + 1);; 1145 if (gDebug); 1146 std::cout << ""bin "" << i + 1 << "" setting new labels for axis "" << labold.at(a[i])->GetName() << "" from ""; 1147 << a[i] << std::endl;; 1148 }; 1149 ; 1150 for (i=0; i < n; i++) {; 1151 fArray[i+1] = sumw[a[i]];; 1152 fSumw2.fArray[i+1] = errors[a[i]];; 1153 fBinEntries.fArray[i+1] = ent[a[i]];; 1154 if (fBinSumw2.fN); 1155 fBinSumw2.fArray[i+1] = binsw2[a[i]];; 1156 }; 1157 }; 1158 // need to set to zero the statistics if axis has been sorted; 1159 // see for example TH3::PutStats for definition of s vector; 1160 bool labelsAreSorted = kFALSE;; 1161 for (i = 0; i < n; ++i) {; 1162 if (a[i] != i) {; 1163 labelsAreSorted = kTRUE;; 1164 break;; 1165 }; 1166 }; 1167 if (labelsAreSorted) {; 1168 double s[TH1::kNstat];; 1169 GetStats(s);; 1170 // if (iaxis == 1) {; 1171 s[2] = 0; // fTsumwx; 1172 s[3] = 0; // fTsumwx2; 1173 PutStats(s);; 1174 }; 1175}; 1176 ; 1177////////////////////////////////////////////////////////////////////////////////; 1178///Merge all histograms in the collection in this histogram.; 1179///; 1180/// This function computes the min/max for the x axis,; 1181/// compute a new number of bins, if necessary,; 1182/// add bin contents, errors and statistics.; 1183/// If overflows are present and limits are different",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:42261,error,errors,42261,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['error'],['errors']
Availability," 11458 prog,; 11459 (unsigned int)buflen);; 11460 goto done;; 11461 }; 11462 ; 11463 DEBUG_TRACE(""CGI: %s"", ""wait for response"");; 11464 headers_len = read_message(out, conn, buf, (int)buflen, &data_len);; 11465 DEBUG_TRACE(""CGI: response: %li"", (signed long)headers_len);; 11466 ; 11467 if (headers_len <= 0) {; 11468 ; 11469 /* Could not parse the CGI response. Check if some error message on; 11470 * stderr. */; 11471 i = pull_all(err, conn, buf, (int)buflen);; 11472 if (i > 0) {; 11473 /* CGI program explicitly sent an error */; 11474 /* Write the error message to the internal log */; 11475 mg_cry_internal(conn,; 11476 ""Error: CGI program \""%s\"" sent error ""; 11477 ""message: [%.*s]"",; 11478 prog,; 11479 i,; 11480 buf);; 11481 /* Don't send the error message back to the client */; 11482 mg_send_http_error(conn,; 11483 500,; 11484 ""Error: CGI program \""%s\"" failed."",; 11485 prog);; 11486 } else {; 11487 /* CGI program did not explicitly send an error, but a broken; 11488 * respon header */; 11489 mg_cry_internal(conn,; 11490 ""Error: CGI program sent malformed or too big ""; 11491 ""(>%u bytes) HTTP headers: [%.*s]"",; 11492 (unsigned)buflen,; 11493 data_len,; 11494 buf);; 11495 ; 11496 mg_send_http_error(conn,; 11497 500,; 11498 ""Error: CGI program sent malformed or too big ""; 11499 ""(>%u bytes) HTTP headers: [%.*s]"",; 11500 (unsigned)buflen,; 11501 data_len,; 11502 buf);; 11503 }; 11504 ; 11505 /* in both cases, abort processing CGI */; 11506 goto done;; 11507 }; 11508 ; 11509 pbuf = buf;; 11510 buf[headers_len - 1] = '\0';; 11511 ri.num_headers = parse_http_headers(&pbuf, ri.http_headers);; 11512 ; 11513 /* Make up and send the status line */; 11514 status_text = ""OK"";; 11515 if ((status = get_header(ri.http_headers, ri.num_headers, ""Status"")); 11516 != NULL) {; 11517 conn->status_code = atoi(status);; 11518 status_text = status;; 11519 while (isdigit((unsigned char)*status_text) || *status_text == ' ') {; 11520 status_text++;; 11521 }; 11522 } else if (get_header(ri.h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:332536,error,error,332536,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability," 11459 prog,; 11460 (unsigned int)buflen);; 11461 goto done;; 11462 }; 11463 ; 11464 DEBUG_TRACE(""CGI: %s"", ""wait for response"");; 11465 headers_len = read_message(out, conn, buf, (int)buflen, &data_len);; 11466 DEBUG_TRACE(""CGI: response: %li"", (signed long)headers_len);; 11467 ; 11468 if (headers_len <= 0) {; 11469 ; 11470 /* Could not parse the CGI response. Check if some error message on; 11471 * stderr. */; 11472 i = pull_all(err, conn, buf, (int)buflen);; 11473 if (i > 0) {; 11474 /* CGI program explicitly sent an error */; 11475 /* Write the error message to the internal log */; 11476 mg_cry_internal(conn,; 11477 ""Error: CGI program \""%s\"" sent error ""; 11478 ""message: [%.*s]"",; 11479 prog,; 11480 i,; 11481 buf);; 11482 /* Don't send the error message back to the client */; 11483 mg_send_http_error(conn,; 11484 500,; 11485 ""Error: CGI program \""%s\"" failed."",; 11486 prog);; 11487 } else {; 11488 /* CGI program did not explicitly send an error, but a broken; 11489 * respon header */; 11490 mg_cry_internal(conn,; 11491 ""Error: CGI program sent malformed or too big ""; 11492 ""(>%u bytes) HTTP headers: [%.*s]"",; 11493 (unsigned)buflen,; 11494 data_len,; 11495 buf);; 11496 ; 11497 mg_send_http_error(conn,; 11498 500,; 11499 ""Error: CGI program sent malformed or too big ""; 11500 ""(>%u bytes) HTTP headers: [%.*s]"",; 11501 (unsigned)buflen,; 11502 data_len,; 11503 buf);; 11504 }; 11505 ; 11506 /* in both cases, abort processing CGI */; 11507 goto done;; 11508 }; 11509 ; 11510 pbuf = buf;; 11511 buf[headers_len - 1] = '\0';; 11512 ri.num_headers = parse_http_headers(&pbuf, ri.http_headers);; 11513 ; 11514 /* Make up and send the status line */; 11515 status_text = ""OK"";; 11516 if ((status = get_header(ri.http_headers, ri.num_headers, ""Status"")); 11517 != NULL) {; 11518 conn->status_code = atoi(status);; 11519 status_text = status;; 11520 while (isdigit((unsigned char)*status_text) || *status_text == ' ') {; 11521 status_text++;; 11522 }; 11523 } else if (get_header(ri.h",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:332569,error,error,332569,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability," 129 of file TBasket.h. ◆ GetNevBufSize(). Int_t TBasket::GetNevBufSize ; (; ); const. inline . Definition at line 130 of file TBasket.h. ◆ GetResetAllocationCount(). bool TBasket::GetResetAllocationCount ; (; ); const. inline . Definition at line 143 of file TBasket.h. ◆ InitializeCompressedBuffer(). void TBasket::InitializeCompressedBuffer ; (; Int_t ; len, . TFile * ; file . ). inlineprivate . Initialize the compressed buffer; either from the TTree or create a local one. ; Definition at line 432 of file TBasket.cxx. ◆ IsA(). TClass * TBasket::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in TBasketSQL.; Definition at line 156 of file TBasket.h. ◆ LoadBasketBuffers(). Int_t TBasket::LoadBasketBuffers ; (; Long64_t ; pos, . Int_t ; len, . TFile * ; file, . TTree * ; tree = nullptr . ). Load basket buffers in memory without unziping. ; This function is called by TTreeCloner. The function returns 0 in case of success, 1 in case of error. ; Definition at line 245 of file TBasket.cxx. ◆ MoveEntries(). void TBasket::MoveEntries ; (; Int_t ; dentries). virtual . Remove the first dentries of this basket, moving entries at dentries to the start of the buffer. ; Definition at line 310 of file TBasket.cxx. ◆ operator=(). TBasket & TBasket::operator= ; (; const TBasket & ; ). private . TBasket objects are not copiable. . ◆ PrepareBasket(). virtual void TBasket::PrepareBasket ; (; Long64_t ; ). inlinevirtual . Reimplemented in TBasketSQL.; Definition at line 133 of file TBasket.h. ◆ ReadBasketBuffers(). Int_t TBasket::ReadBasketBuffers ; (; Long64_t ; pos, . Int_t ; len, . TFile * ; file . ). Read basket buffers in memory and cleanup. ; Read a basket buffer. Check if buffers of previous ReadBasket should not be dropped. Remember, we keep buffers in memory up to fMaxVirtualSize. The function returns 0 in case of success, 1 in case of error This function was modified with the addition of the paralle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBasket.html:26097,error,error,26097,doc/master/classTBasket.html,https://root.cern,https://root.cern/doc/master/classTBasket.html,1,['error'],['error']
Availability," 13.8.2.3 ROOT::Math::GSLIntegrator; This is a wrapper for the QUADPACK integrator implemented in the GSL library. It supports several integration methods that can be chosen in construction time. The default type is adaptive integration with singularity applying a Gauss-Kronrod 21-point integration rule. For a detail description of the GSL methods visit the GSL user guide This class implements the best algorithms for numerical integration for one dimensional functions. We encourage the use it as the main option, bearing in mind that it uses code from the GSL library, wich is provided in the MathMore library of ROOT.; The interface to use is the same as above. We have now the possibility to specify a different integration algorithm in the constructor of the ROOT::Math::GSLIntegrator class.; // create the adaptive integrator with the 51 point rule; ROOT::Math::GSLIntegrator ig(ROOT::Math::Integration::kADAPTIVE, ROOT::Math::Integration::kGAUSS51);; ig.SetRelTolerance(1.E-6); // set relative tolerance; ig.SetAbsTolerance(1.E-6); // set absoulte tolerance; The algorithm is controlled by the given absolute and relative tolerance. The iterations are continued until the following condition is satisfied \[; absErr <= max ( epsAbs, epsRel * Integral); \] Where absErr is an estimate of the absolute error (it can be retrieved with GSLIntegrator::Error()) and Integral is the estimate of the function integral (it can be obtained with GSLIntegrator::Result()); The possible integration algorithm types to use with the GSLIntegrator are the following. More information is provided in the GSL users documentation. * ROOT::Math::Integration::kNONADAPTIVE : based on gsl_integration_qng. It is a non-adaptive procedure which uses fixed Gauss-Kronrod-Patterson abscissae to sample the integrand at a maximum of 87 points. It is provided for fast integration of smooth functions. * ROOT::Math::Integration::kADAPTIVE: based on gsl_integration_qag. It is an adaptiva Gauss-Kronrod integration algo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:706731,toler,tolerance,706731,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['toler'],['tolerance']
Availability," 1342 TString histName = GetName();; 1343 if (!fDirectory && !histName.Contains(""Graph"")) {; 1344 hcounter++;; 1345 histName += ""__"";; 1346 histName += hcounter;; 1347 }; 1348 ; 1349 TString hname = gInterpreter->MapCppName(histName.Data());; 1350 ; 1351 //Construct the class initialization; 1352 out << hname << "" = new "" << ClassName() << ""(\"""" << hname << ""\"", \""""; 1353 << GetTitle() << ""\"", "" << fCellX << "", "" << fXaxis.GetXmin(); 1354 << "", "" << fXaxis.GetXmax(); 1355 << "", "" << fCellY << "", "" << fYaxis.GetXmin() << "", ""; 1356 << fYaxis.GetXmax() << "");"" << std::endl;; 1357 ; 1358 // Save Bins; 1359 TIter next(fBins);; 1360 TObject *obj;; 1361 TH2PolyBin *th2pBin;; 1362 ; 1363 while((obj = next())){; 1364 th2pBin = (TH2PolyBin*) obj;; 1365 th2pBin->GetPolygon()->SavePrimitive(out, TString::Format(""th2poly%s"",hname.Data()));; 1366 }; 1367 ; 1368 // save bin contents; 1369 out<<"" ""<<std::endl;; 1370 Int_t bin;; 1371 for (bin=1;bin<=GetNumberOfBins();bin++) {; 1372 Double_t bc = GetBinContent(bin);; 1373 if (bc) {; 1374 out<<"" ""<<hname<<""->SetBinContent(""<<bin<<"",""<<bc<<"");""<<std::endl;; 1375 }; 1376 }; 1377 ; 1378 // save bin errors; 1379 if (fSumw2.fN) {; 1380 for (bin=1;bin<=GetNumberOfBins();bin++) {; 1381 Double_t be = GetBinError(bin);; 1382 if (be) {; 1383 out<<"" ""<<hname<<""->SetBinError(""<<bin<<"",""<<be<<"");""<<std::endl;; 1384 }; 1385 }; 1386 }; 1387 TH1::SavePrimitiveHelp(out, hname, option);; 1388}; 1389 ; 1390////////////////////////////////////////////////////////////////////////////////; 1391/// Multiply this histogram by a constant c1.; 1392 ; 1393void TH2Poly::Scale(Double_t c1, Option_t*); 1394{; 1395 for( int i = 0; i < this->GetNumberOfBins(); i++ ) {; 1396 this->SetBinContent(i+1, c1*this->GetBinContent(i+1));; 1397 }; 1398 for( int i = 0; i < kNOverflow; i++ ) {; 1399 this->SetBinContent(-i-1, c1*this->GetBinContent(-i-1) );; 1400 }; 1401}; 1402 ; 1403////////////////////////////////////////////////////////////////////////////////; 1404/// Sets t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2Poly_8cxx_source.html:47508,error,errors,47508,doc/master/TH2Poly_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2Poly_8cxx_source.html,1,['error'],['errors']
Availability," 135 of file TApplication.h. ◆ IsRunning(). Bool_t TApplication::IsRunning ; (; ); const. inline . Definition at line 152 of file TApplication.h. ◆ KeyPressed(). void TApplication::KeyPressed ; (; Int_t ; key). virtual . Emit signal when console keyboard key was pressed. ; Definition at line 1949 of file TApplication.cxx. ◆ LineProcessed(). void TApplication::LineProcessed ; (; const char * ; line). virtual . Emit signal when a line has been processed. ; Definition at line 1941 of file TApplication.cxx. ◆ LoadGraphicsLibs(). void TApplication::LoadGraphicsLibs ; (; ). protectedvirtual . Load shared libs necessary for graphics. ; These libraries are only loaded when gROOT->IsBatch() is kFALSE. ; Reimplemented in TGApplication.; Definition at line 1333 of file TApplication.cxx. ◆ Lower(). virtual void TApplication::Lower ; (; ). inlinevirtual . Definition at line 134 of file TApplication.h. ◆ ls(). void TApplication::ls ; (; Option_t * ; option = """"); const. overridevirtual . Show available sessions. ; Reimplemented from TObject.; Definition at line 2087 of file TApplication.cxx. ◆ MakeBatch(). void TApplication::MakeBatch ; (; ). protectedvirtual . Switch to batch mode. ; Definition at line 1395 of file TApplication.cxx. ◆ NeedGraphicsLibs(). void TApplication::NeedGraphicsLibs ; (; ). static . Static method. ; This method should be called from static library initializers if the library needs the low level graphics system. ; Definition at line 235 of file TApplication.cxx. ◆ NoLogoOpt(). Bool_t TApplication::NoLogoOpt ; (; ); const. inline . Definition at line 144 of file TApplication.h. ◆ NoLogOpt(). Bool_t TApplication::NoLogOpt ; (; ); const. inline . Definition at line 143 of file TApplication.h. ◆ Open() [1/2]. virtual void TApplication::Open ; (; ). inlinevirtual . Definition at line 132 of file TApplication.h. ◆ Open() [2/2]. TApplication * TApplication::Open ; (; const char * ; url, . Int_t ; debug, . const char * ; script . ). staticprotected . Static functio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplication.html:31399,avail,available,31399,doc/master/classTApplication.html,https://root.cern,https://root.cern/doc/master/classTApplication.html,1,['avail'],['available']
Availability," 1368/// Values which can be used are 's', 'i', or 'g'. See TProfile::BuildOptions for details; 1369 ; 1370TProfile *TProfile2D::ProfileX(const char *name, Int_t firstybin, Int_t lastybin, Option_t *option) const; 1371{; 1372 return DoProfile(true, name, firstybin, lastybin, option);; 1373}; 1374 ; 1375////////////////////////////////////////////////////////////////////////////////; 1376/// Project a 2-D histogram into a profile histogram along X; 1377///; 1378/// The projection is made from the channels along the X axis; 1379/// ranging from firstybin to lastybin included.; 1380/// The result is a 1D profile which contains the combination of all the considered bins along X; 1381/// By default, bins 1 to ny are included; 1382/// When all bins are included, the number of entries in the projection; 1383/// is set to the number of entries of the 2-D histogram, otherwise; 1384/// the number of entries is incremented by 1 for all non empty cells.; 1385///; 1386/// The option can also be used to specify the projected profile error type.; 1387/// Values which can be used are 's', 'i', or 'g'. See TProfile::BuildOptions for details; 1388 ; 1389TProfile *TProfile2D::ProfileY(const char *name, Int_t firstxbin, Int_t lastxbin, Option_t *option) const; 1390{; 1391 return DoProfile(false, name, firstxbin, lastxbin, option);; 1392}; 1393 ; 1394////////////////////////////////////////////////////////////////////////////////; 1395/// Implementation of ProfileX or ProfileY for a TProfile2D.; 1396///; 1397/// Do correctly the combination of the bin averages when doing the projection; 1398 ; 1399TProfile * TProfile2D::DoProfile(bool onX, const char *name, Int_t firstbin, Int_t lastbin, Option_t *option) const {; 1400 TString opt = option;; 1401 opt.ToLower();; 1402 bool originalRange = opt.Contains(""o"");; 1403 ; 1404 TString expectedName = ( onX ? ""_pfx"" : ""_pfy"" );; 1405 ; 1406 TString pname(name);; 1407 if (pname.IsNull() || name == expectedName); 1408 pname = TString(GetName() ) + e",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:50399,error,error,50399,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,1,['error'],['error']
Availability," 139 THnD (typedef for THnT<Double_t>): bin content held by a Double_t,; 140 THnF (typedef for THnT<Float_t>): bin content held by a Float_t,; 141 THnL (typedef for THnT<Long64_t>): bin content held by a Long64_t,; 142 THnI (typedef for THnT<Int_t>): bin content held by an Int_t,; 143 THnS (typedef for THnT<Short_t>): bin content held by a Short_t,; 144 THnC (typedef for THnT<Char_t>): bin content held by a Char_t,; 145 ; 146They take name and title, the number of dimensions, and for each dimension; 147the number of bins, the minimal, and the maximal value on the dimension's; 148axis. A TH2F h(""h"",""h"",10, 0., 10., 20, -5., 5.) would correspond to; 149 ; 150 Int_t bins[2] = {10, 20};; 151 Double_t xmin[2] = {0., -5.};; 152 Double_t xmax[2] = {10., 5.};; 153 THnF hn(""hn"", ""hn"", 2, bins, xmin, xmax);; 154 ; 155## Filling; 156A THn is filled just like a regular histogram, using; 157THn::Fill(x, weight), where x is a n-dimensional Double_t value.; 158To take errors into account, Sumw2() must be called before filling the; 159histogram.; 160Storage is allocated when the first bin content is stored.; 161 ; 162## Projections; 163The dimensionality of a THn can be reduced by projecting it to; 1641, 2, 3, or n dimensions, which can be represented by a TH1, TH2, TH3, or; 165a THn. See the Projection() members. To only project parts of the; 166histogram, call; 167 ; 168 hn->GetAxis(12)->SetRange(from_bin, to_bin);; 169 ; 170## Conversion from other histogram classes; 171The static factory function THn::CreateHn() can be used to create a THn; 172from a TH1, TH2, TH3, THnSparse and (for copying) even from a THn. The; 173created THn will have compatble storage type, i.e. calling CreateHn() on; 174a TH2F will create a THnF.; 175*/; 176 ; 177ClassImp(THn);; 178 ; 179////////////////////////////////////////////////////////////////////////////////; 180/// Construct a THn.; 181 ; 182THn::THn(const char* name, const char* title,; 183 Int_t dim, const Int_t* nbins,; 184 const Double_t* xm",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THn_8cxx_source.html:5868,error,errors,5868,doc/master/THn_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THn_8cxx_source.html,1,['error'],['errors']
Availability," 14834 so->lsa.sin.sin_port = htons((uint16_t)port);; 14835 len += (int)(hostnlen + 1);; 14836 } else {; 14837 len = 0;; 14838 }; 14839#if defined(USE_IPV6); 14840 } else if (mg_inet_pton(AF_INET6,; 14841 hostname,; 14842 &so->lsa.sin6,; 14843 sizeof(so->lsa.sin6),; 14844 1)) {; 14845 if (sscanf(cb + 1, ""%u%n"", &port, &len) == 1) {; 14846 *ip_version = 6;; 14847 so->lsa.sin6.sin6_port = htons((uint16_t)port);; 14848 len += (int)(hostnlen + 1);; 14849 } else {; 14850 len = 0;; 14851 }; 14852#endif; 14853 } else {; 14854 len = 0;; 14855 }; 14856 ; 14857#if defined(USE_X_DOM_SOCKET); 14858 ; 14859 } else if (vec->ptr[0] == 'x') {; 14860 /* unix (linux) domain socket */; 14861 if (vec->len < sizeof(so->lsa.sun.sun_path)) {; 14862 len = vec->len;; 14863 so->lsa.sun.sun_family = AF_UNIX;; 14864 memset(so->lsa.sun.sun_path, 0, sizeof(so->lsa.sun.sun_path));; 14865 memcpy(so->lsa.sun.sun_path, (char *)vec->ptr + 1, vec->len - 1);; 14866 port = 0;; 14867 *ip_version = 99;; 14868 } else {; 14869 /* String too long */; 14870 len = 0;; 14871 }; 14872#endif; 14873 ; 14874 } else {; 14875 /* Parsing failure. */; 14876 len = 0;; 14877 }; 14878 ; 14879 /* sscanf and the option splitting code ensure the following condition; 14880 * Make sure the port is valid and vector ends with the port, 's' or 'r' */; 14881 if ((len > 0) && is_valid_port(port); 14882 && (((size_t)len == vec->len) || (((size_t)len + 1) == vec->len))) {; 14883 /* Next character after the port number */; 14884 ch = ((size_t)len < vec->len) ? vec->ptr[len] : '\0';; 14885 so->is_ssl = (ch == 's');; 14886 so->ssl_redir = (ch == 'r');; 14887 if ((ch == '\0') || (ch == 's') || (ch == 'r')) {; 14888 return 1;; 14889 }; 14890 }; 14891 ; 14892 /* Reset ip_version to 0 if there is an error */; 14893 *ip_version = 0;; 14894 return 0;; 14895}; 14896 ; 14897 ; 14898/* Is there any SSL port in use? */; 14899static int; 14900is_ssl_port_used(const char *ports); 14901{; 14902 if (ports) {; 14903 /* There are several different allo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:439835,failure,failure,439835,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['failure'],['failure']
Availability," 14835 so->lsa.sin.sin_port = htons((uint16_t)port);; 14836 len += (int)(hostnlen + 1);; 14837 } else {; 14838 len = 0;; 14839 }; 14840#if defined(USE_IPV6); 14841 } else if (mg_inet_pton(AF_INET6,; 14842 hostname,; 14843 &so->lsa.sin6,; 14844 sizeof(so->lsa.sin6),; 14845 1)) {; 14846 if (sscanf(cb + 1, ""%u%n"", &port, &len) == 1) {; 14847 *ip_version = 6;; 14848 so->lsa.sin6.sin6_port = htons((uint16_t)port);; 14849 len += (int)(hostnlen + 1);; 14850 } else {; 14851 len = 0;; 14852 }; 14853#endif; 14854 } else {; 14855 len = 0;; 14856 }; 14857 ; 14858#if defined(USE_X_DOM_SOCKET); 14859 ; 14860 } else if (vec->ptr[0] == 'x') {; 14861 /* unix (linux) domain socket */; 14862 if (vec->len < sizeof(so->lsa.sun.sun_path)) {; 14863 len = vec->len;; 14864 so->lsa.sun.sun_family = AF_UNIX;; 14865 memset(so->lsa.sun.sun_path, 0, sizeof(so->lsa.sun.sun_path));; 14866 memcpy(so->lsa.sun.sun_path, (char *)vec->ptr + 1, vec->len - 1);; 14867 port = 0;; 14868 *ip_version = 99;; 14869 } else {; 14870 /* String too long */; 14871 len = 0;; 14872 }; 14873#endif; 14874 ; 14875 } else {; 14876 /* Parsing failure. */; 14877 len = 0;; 14878 }; 14879 ; 14880 /* sscanf and the option splitting code ensure the following condition; 14881 * Make sure the port is valid and vector ends with the port, 's' or 'r' */; 14882 if ((len > 0) && is_valid_port(port); 14883 && (((size_t)len == vec->len) || (((size_t)len + 1) == vec->len))) {; 14884 /* Next character after the port number */; 14885 ch = ((size_t)len < vec->len) ? vec->ptr[len] : '\0';; 14886 so->is_ssl = (ch == 's');; 14887 so->ssl_redir = (ch == 'r');; 14888 if ((ch == '\0') || (ch == 's') || (ch == 'r')) {; 14889 return 1;; 14890 }; 14891 }; 14892 ; 14893 /* Reset ip_version to 0 if there is an error */; 14894 *ip_version = 0;; 14895 return 0;; 14896}; 14897 ; 14898 ; 14899/* Is there any SSL port in use? */; 14900static int; 14901is_ssl_port_used(const char *ports); 14902{; 14903 if (ports) {; 14904 /* There are several different allo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:439868,failure,failure,439868,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['failure'],['failure']
Availability, 1496 else; 1497 return fExH[i];; 1498}; 1499 ; 1500////////////////////////////////////////////////////////////////////////////////; 1501/// Get low error on y coordinate for point `i`.; 1502/// The multiple errors of the dimensions are summed according to `fSumErrorsMode`.; 1503 ; 1504Double_t TGraphMultiErrors::GetErrorYlow(Int_t i) const; 1505{; 1506 if (i < 0 || i >= fNpoints || fEyL.empty()); 1507 return -1.;; 1508 ; 1509 if (fSumErrorsMode == TGraphMultiErrors::kOnlyFirst); 1510 return fEyL[0][i];; 1511 else if (fSumErrorsMode == TGraphMultiErrors::kSquareSum) {; 1512 Double_t sum = 0.;; 1513 for (Int_t j = 0; j < fNYErrors; j++); 1514 sum += fEyL[j][i] * fEyL[j][i];; 1515 return TMath::Sqrt(sum);; 1516 } else if (fSumErrorsMode == TGraphMultiErrors::kAbsSum) {; 1517 Double_t sum = 0.;; 1518 for (Int_t j = 0; j < fNYErrors; j++); 1519 sum += fEyL[j][i];; 1520 return sum;; 1521 }; 1522 ; 1523 return -1.;; 1524}; 1525 ; 1526////////////////////////////////////////////////////////////////////////////////; 1527/// Get high error on y coordinate for point `i`.; 1528/// The multiple errors of the dimensions are summed according to `fSumErrorsMode`.; 1529 ; 1530Double_t TGraphMultiErrors::GetErrorYhigh(Int_t i) const; 1531{; 1532 if (i < 0 || i >= fNpoints || fEyH.empty()); 1533 return -1.;; 1534 ; 1535 if (fSumErrorsMode == TGraphMultiErrors::kOnlyFirst); 1536 return fEyH[0][i];; 1537 else if (fSumErrorsMode == TGraphMultiErrors::kSquareSum) {; 1538 Double_t sum = 0.;; 1539 for (Int_t j = 0; j < fNYErrors; j++); 1540 sum += fEyH[j][i] * fEyH[j][i];; 1541 return TMath::Sqrt(sum);; 1542 } else if (fSumErrorsMode == TGraphMultiErrors::kAbsSum) {; 1543 Double_t sum = 0.;; 1544 for (Int_t j = 0; j < fNYErrors; j++); 1545 sum += fEyH[j][i];; 1546 return sum;; 1547 }; 1548 ; 1549 return -1.;; 1550}; 1551 ; 1552////////////////////////////////////////////////////////////////////////////////; 1553/// Get low error e on y coordinate for point `i`.; 1554 ; 1555Double_t TGraph,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:52281,error,error,52281,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['error']
Availability," 15067 if (ip_version == 99) {; 15068 /* Unix domain socket */; 15069 } else; 15070#endif; 15071 ; 15072 if (ip_version > 4) {; 15073 /* Could be 6 for IPv6 onlyor 10 (4+6) for IPv4+IPv6 */; 15074#if defined(USE_IPV6); 15075 if (ip_version > 6) {; 15076 if (so.lsa.sa.sa_family == AF_INET6; 15077 && setsockopt(so.sock,; 15078 IPPROTO_IPV6,; 15079 IPV6_V6ONLY,; 15080 (void *)&off,; 15081 sizeof(off)); 15082 != 0) {; 15083 ; 15084 /* Set IPv6 only option, but don't abort on errors. */; 15085 mg_cry_ctx_internal(phys_ctx,; 15086 ""cannot set socket option ""; 15087 ""IPV6_V6ONLY=off (entry %i)"",; 15088 portsTotal);; 15089 }; 15090 } else {; 15091 if (so.lsa.sa.sa_family == AF_INET6; 15092 && setsockopt(so.sock,; 15093 IPPROTO_IPV6,; 15094 IPV6_V6ONLY,; 15095 (void *)&on,; 15096 sizeof(on)); 15097 != 0) {; 15098 ; 15099 /* Set IPv6 only option, but don't abort on errors. */; 15100 mg_cry_ctx_internal(phys_ctx,; 15101 ""cannot set socket option ""; 15102 ""IPV6_V6ONLY=on (entry %i)"",; 15103 portsTotal);; 15104 }; 15105 }; 15106#else; 15107 mg_cry_ctx_internal(phys_ctx, ""%s"", ""IPv6 not available"");; 15108 closesocket(so.sock);; 15109 so.sock = INVALID_SOCKET;; 15110 continue;; 15111#endif; 15112 }; 15113 ; 15114 if (so.lsa.sa.sa_family == AF_INET) {; 15115 ; 15116 len = sizeof(so.lsa.sin);; 15117 if (bind(so.sock, &so.lsa.sa, len) != 0) {; 15118 mg_cry_ctx_internal(phys_ctx,; 15119 ""cannot bind to %.*s: %d (%s)"",; 15120 (int)vec.len,; 15121 vec.ptr,; 15122 (int)ERRNO,; 15123 strerror(errno));; 15124 closesocket(so.sock);; 15125 so.sock = INVALID_SOCKET;; 15126 continue;; 15127 }; 15128 }; 15129#if defined(USE_IPV6); 15130 else if (so.lsa.sa.sa_family == AF_INET6) {; 15131 ; 15132 len = sizeof(so.lsa.sin6);; 15133 if (bind(so.sock, &so.lsa.sa, len) != 0) {; 15134 mg_cry_ctx_internal(phys_ctx,; 15135 ""cannot bind to IPv6 %.*s: %d (%s)"",; 15136 (int)vec.len,; 15137 vec.ptr,; 15138 (int)ERRNO,; 15139 strerror(errno));; 15140 closesocket(so.sock);; 15141 so.sock = INVALID_SOCKET;; 15",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:446924,avail,available,446924,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['avail'],['available']
Availability," 15068 if (ip_version == 99) {; 15069 /* Unix domain socket */; 15070 } else; 15071#endif; 15072 ; 15073 if (ip_version > 4) {; 15074 /* Could be 6 for IPv6 onlyor 10 (4+6) for IPv4+IPv6 */; 15075#if defined(USE_IPV6); 15076 if (ip_version > 6) {; 15077 if (so.lsa.sa.sa_family == AF_INET6; 15078 && setsockopt(so.sock,; 15079 IPPROTO_IPV6,; 15080 IPV6_V6ONLY,; 15081 (void *)&off,; 15082 sizeof(off)); 15083 != 0) {; 15084 ; 15085 /* Set IPv6 only option, but don't abort on errors. */; 15086 mg_cry_ctx_internal(phys_ctx,; 15087 ""cannot set socket option ""; 15088 ""IPV6_V6ONLY=off (entry %i)"",; 15089 portsTotal);; 15090 }; 15091 } else {; 15092 if (so.lsa.sa.sa_family == AF_INET6; 15093 && setsockopt(so.sock,; 15094 IPPROTO_IPV6,; 15095 IPV6_V6ONLY,; 15096 (void *)&on,; 15097 sizeof(on)); 15098 != 0) {; 15099 ; 15100 /* Set IPv6 only option, but don't abort on errors. */; 15101 mg_cry_ctx_internal(phys_ctx,; 15102 ""cannot set socket option ""; 15103 ""IPV6_V6ONLY=on (entry %i)"",; 15104 portsTotal);; 15105 }; 15106 }; 15107#else; 15108 mg_cry_ctx_internal(phys_ctx, ""%s"", ""IPv6 not available"");; 15109 closesocket(so.sock);; 15110 so.sock = INVALID_SOCKET;; 15111 continue;; 15112#endif; 15113 }; 15114 ; 15115 if (so.lsa.sa.sa_family == AF_INET) {; 15116 ; 15117 len = sizeof(so.lsa.sin);; 15118 if (bind(so.sock, &so.lsa.sa, len) != 0) {; 15119 mg_cry_ctx_internal(phys_ctx,; 15120 ""cannot bind to %.*s: %d (%s)"",; 15121 (int)vec.len,; 15122 vec.ptr,; 15123 (int)ERRNO,; 15124 strerror(errno));; 15125 closesocket(so.sock);; 15126 so.sock = INVALID_SOCKET;; 15127 continue;; 15128 }; 15129 }; 15130#if defined(USE_IPV6); 15131 else if (so.lsa.sa.sa_family == AF_INET6) {; 15132 ; 15133 len = sizeof(so.lsa.sin6);; 15134 if (bind(so.sock, &so.lsa.sa, len) != 0) {; 15135 mg_cry_ctx_internal(phys_ctx,; 15136 ""cannot bind to IPv6 %.*s: %d (%s)"",; 15137 (int)vec.len,; 15138 vec.ptr,; 15139 (int)ERRNO,; 15140 strerror(errno));; 15141 closesocket(so.sock);; 15142 so.sock = INVALID_SOCKET;; 15",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:446957,avail,available,446957,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['avail'],['available']
Availability," 1582 are inaccurate."");; 500 Int_t dte = TDatime::GetDateFromGlobalDay(d);; 501 if (dte != date) {; 502 ::Error(""TDatime::GetLegalGlobalDayFromDate"", ""illegal date %d"", dte);; 503 return 0;; 504 }; 505 return d;; 506}; 507 ; 508////////////////////////////////////////////////////////////////////////////////; 509/// Print a TDatime at the prompt.; 510 ; 511std::string cling::printValue(const TDatime* val) {; 512 char buf[30];; 513 return std::string(val->AsString(buf));; 514}; Bytes.h; frombufvoid frombuf(char *&buf, Bool_t *x)Definition Bytes.h:278; tobufvoid tobuf(char *&buf, Bool_t x)Definition Bytes.h:55; RConfig.hxx; d#define d(i)Definition RSha256.hxx:102; b#define b(i)Definition RSha256.hxx:100; Long64_tlong long Long64_tDefinition RtypesCore.h:69; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassImp#define ClassImp(name)Definition Rtypes.h:382; Strlen.h; TBuffer.h; TDatime.h; TError.h; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; Warningvoid Warning(const char *location, const char *msgfmt,...)Use this function in warning situations.Definition TError.cxx:229; TString.h; Windows4Root.h; snprintf#define snprintfDefinition civetweb.c:1540; TBufferBuffer base class used for serializing objects.Definition TBuffer.h:43; TDatimeThis class stores the date and time with a precision of one second in an unsigned 32 bit word (950130...Definition TDatime.h:37; TDatime::GetGlobalDayFromDatestatic Int_t GetGlobalDayFromDate(Int_t date)Static function that returns the global day number from date.Definition TDatime.cxx:449; TDatime::GetDateFromGlobalDaystatic Int_t GetDateFromGlobalDay(Int_t day)Static function that returns the date from the global day number.Definition TDatime.cxx:466; TDatime::Copyvoid Copy(TDatime &datime) constCopy this to datime.Definition TDatime.cxx:221; TDatime::GetLegalGlobalDayFromDatestatic Int_t GetLegalGlobalDayFromDate(Int_t date)Static function tha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TDatime_8cxx_source.html:17516,error,error,17516,doc/master/TDatime_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TDatime_8cxx_source.html,1,['error'],['error']
Availability," 159 if (!CtorAllocate()); 160 return;; 161 ; 162 Int_t n = fNpoints * sizeof(Double_t);; 163 ; 164 if (exL); 165 memcpy(fExL, exL, n);; 166 else; 167 memset(fExL, 0, n);; 168 if (exH); 169 memcpy(fExH, exH, n);; 170 else; 171 memset(fExH, 0, n);; 172 ; 173 if (eyL); 174 fEyL[0].Set(fNpoints, eyL);; 175 else; 176 fEyL[0].Reset(0.);; 177 ; 178 if (eyH); 179 fEyH[0].Set(fNpoints, eyH);; 180 else; 181 fEyH[0].Reset(0.);; 182 ; 183 CalcYErrorsSum();; 184}; 185 ; 186////////////////////////////////////////////////////////////////////////////////; 187/// TGraphMultiErrors normal constructor with name, title, `np` points and a single y-error.; 188///; 189/// If `exL`,`exH` or `eyL`,`exH` are NULL, the corresponding values are preset to zero.; 190 ; 191TGraphMultiErrors::TGraphMultiErrors(const Char_t *name, const Char_t *title, Int_t np, const Double_t *x,; 192 const Double_t *y, const Double_t *exL, const Double_t *exH, const Double_t *eyL,; 193 const Double_t *eyH, Int_t m); 194 : TGraphMultiErrors(np, x, y, exL, exH, eyL, eyH, m); 195{; 196 SetNameTitle(name, title);; 197}; 198 ; 199////////////////////////////////////////////////////////////////////////////////; 200/// TGraphMultiErrors normal constructor with `np` points and `ne` y-errors.; 201///; 202/// If `exL`,`exH` are NULL, the corresponding values are preset to zero.; 203/// The multiple y-errors are passed as std::vectors of std::vectors.; 204 ; 205TGraphMultiErrors::TGraphMultiErrors(Int_t np, Int_t ne, const Float_t *x, const Float_t *y, const Float_t *exL,; 206 const Float_t *exH, std::vector<std::vector<Float_t>> eyL,; 207 std::vector<std::vector<Float_t>> eyH, Int_t m); 208 : TGraph(np, x, y), fNYErrors(ne), fSumErrorsMode(m); 209{; 210 if (!CtorAllocate()); 211 return;; 212 ; 213 for (Int_t i = 0; i < fNpoints; i++) {; 214 if (exL); 215 fExL[i] = exL[i];; 216 else; 217 fExL[i] = 0.;; 218 if (exH); 219 fExH[i] = exH[i];; 220 else; 221 fExH[i] = 0.;; 222 ; 223 for (Int_t j = 0; j < fNYErrors; j++) {; 224 if",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:7252,error,errors,7252,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['errors']
Availability," 162 ; 163struct CpuInfo_t {; 164 Float_t fLoad1m; // cpu load average over 1 m; 165 Float_t fLoad5m; // cpu load average over 5 m; 166 Float_t fLoad15m; // cpu load average over 15 m; 167 Float_t fUser; // cpu user load in percentage; 168 Float_t fSys; // cpu sys load in percentage; 169 Float_t fTotal; // cpu user+sys load in percentage; 170 Float_t fIdle; // cpu idle percentage; 171 CpuInfo_t() : fLoad1m(0), fLoad5m(0), fLoad15m(0),; 172 fUser(0), fSys(0), fTotal(0), fIdle(0) { }; 173 virtual ~CpuInfo_t() { }; 174 ClassDef(CpuInfo_t, 1); // CPU load information.; 175};; 176 ; 177struct MemInfo_t {; 178 Int_t fMemTotal; // total RAM in MB; 179 Int_t fMemUsed; // used RAM in MB; 180 Int_t fMemFree; // free RAM in MB; 181 Int_t fMemAvailable; // available RAM in MB; 182 Int_t fMemCached; // cached RAM in MB; 183 Int_t fMemBuffer; // buffer RAM in MB; 184 Int_t fMemShared; // shared RAM in MB; 185 Int_t fSwapTotal; // total swap in MB; 186 Int_t fSwapUsed; // used swap in MB; 187 Int_t fSwapFree; // free swap in MB; 188 Int_t fSwapCached; // cached swap in MB; 189 Int_t fSReclaimable; // slab that might be reclaimed; 190 MemInfo_t() : fMemTotal(0), fMemUsed(0), fMemFree(0), fMemAvailable(0), fMemCached(0), fMemBuffer(0), fMemShared(0),; 191 fSwapTotal(0), fSwapUsed(0), fSwapFree(0), fSwapCached(0), fSReclaimable(0){ }; 192 virtual ~MemInfo_t() { }; 193 ClassDef(MemInfo_t, 2); // Memory utilization information.; 194};; 195 ; 196struct ProcInfo_t {; 197 Float_t fCpuUser; // user time used by this process in seconds; 198 Float_t fCpuSys; // system time used by this process in seconds; 199 Long_t fMemResident; // resident memory used by this process in KB; 200 Long_t fMemVirtual; // virtual memory used by this process in KB; 201 ProcInfo_t() : fCpuUser(0), fCpuSys(0), fMemResident(0),; 202 fMemVirtual(0) { }; 203 virtual ~ProcInfo_t();; 204 ClassDef(ProcInfo_t, 1);// System resource usage of given process.; 205};; 206 ; 207struct RedirectHandle_t {; 208 TString fFile; // F",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8h_source.html:6180,avail,available,6180,doc/master/TSystem_8h_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8h_source.html,1,['avail'],['available']
Availability," 17359 if (client_options->client_cert) {; 17360 if (!ssl_use_pem_file(conn->phys_ctx,; 17361 conn->dom_ctx,; 17362 client_options->client_cert,; 17363 NULL)) {; 17364 mg_snprintf(NULL,; 17365 NULL, /* No truncation check for ebuf */; 17366 ebuf,; 17367 ebuf_len,; 17368 ""Can not use SSL client certificate"");; 17369 SSL_CTX_free(conn->dom_ctx->ssl_ctx);; 17370 closesocket(sock);; 17371 mg_free(conn);; 17372 return NULL;; 17373 }; 17374 }; 17375 ; 17376 if (client_options->server_cert) {; 17377 if (SSL_CTX_load_verify_locations(conn->dom_ctx->ssl_ctx,; 17378 client_options->server_cert,; 17379 NULL); 17380 != 1) {; 17381 mg_cry_internal(conn,; 17382 ""SSL_CTX_load_verify_locations error: %s "",; 17383 ssl_error());; 17384 SSL_CTX_free(conn->dom_ctx->ssl_ctx);; 17385 closesocket(sock);; 17386 mg_free(conn);; 17387 return NULL;; 17388 }; 17389 SSL_CTX_set_verify(conn->dom_ctx->ssl_ctx, SSL_VERIFY_PEER, NULL);; 17390 } else {; 17391 SSL_CTX_set_verify(conn->dom_ctx->ssl_ctx, SSL_VERIFY_NONE, NULL);; 17392 }; 17393 ; 17394 if (!sslize(conn, SSL_connect, client_options)) {; 17395 mg_snprintf(NULL,; 17396 NULL, /* No truncation check for ebuf */; 17397 ebuf,; 17398 ebuf_len,; 17399 ""SSL connection error"");; 17400 SSL_CTX_free(conn->dom_ctx->ssl_ctx);; 17401 closesocket(sock);; 17402 mg_free(conn);; 17403 return NULL;; 17404 }; 17405 }; 17406#endif; 17407 ; 17408 return conn;; 17409}; 17410 ; 17411 ; 17412CIVETWEB_API struct mg_connection *; 17413mg_connect_client_secure(const struct mg_client_options *client_options,; 17414 char *error_buffer,; 17415 size_t error_buffer_size); 17416{; 17417 return mg_connect_client_impl(client_options,; 17418 1,; 17419 error_buffer,; 17420 error_buffer_size);; 17421}; 17422 ; 17423 ; 17424struct mg_connection *; 17425mg_connect_client(const char *host,; 17426 int port,; 17427 int use_ssl,; 17428 char *error_buffer,; 17429 size_t error_buffer_size); 17430{; 17431 struct mg_client_options opts;; 17432 memset(&opts, 0, sizeof(opts));; 17433 opts.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:517014,error,error,517014,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability," 17360 if (client_options->client_cert) {; 17361 if (!ssl_use_pem_file(conn->phys_ctx,; 17362 conn->dom_ctx,; 17363 client_options->client_cert,; 17364 NULL)) {; 17365 mg_snprintf(NULL,; 17366 NULL, /* No truncation check for ebuf */; 17367 ebuf,; 17368 ebuf_len,; 17369 ""Can not use SSL client certificate"");; 17370 SSL_CTX_free(conn->dom_ctx->ssl_ctx);; 17371 closesocket(sock);; 17372 mg_free(conn);; 17373 return NULL;; 17374 }; 17375 }; 17376 ; 17377 if (client_options->server_cert) {; 17378 if (SSL_CTX_load_verify_locations(conn->dom_ctx->ssl_ctx,; 17379 client_options->server_cert,; 17380 NULL); 17381 != 1) {; 17382 mg_cry_internal(conn,; 17383 ""SSL_CTX_load_verify_locations error: %s "",; 17384 ssl_error());; 17385 SSL_CTX_free(conn->dom_ctx->ssl_ctx);; 17386 closesocket(sock);; 17387 mg_free(conn);; 17388 return NULL;; 17389 }; 17390 SSL_CTX_set_verify(conn->dom_ctx->ssl_ctx, SSL_VERIFY_PEER, NULL);; 17391 } else {; 17392 SSL_CTX_set_verify(conn->dom_ctx->ssl_ctx, SSL_VERIFY_NONE, NULL);; 17393 }; 17394 ; 17395 if (!sslize(conn, SSL_connect, client_options)) {; 17396 mg_snprintf(NULL,; 17397 NULL, /* No truncation check for ebuf */; 17398 ebuf,; 17399 ebuf_len,; 17400 ""SSL connection error"");; 17401 SSL_CTX_free(conn->dom_ctx->ssl_ctx);; 17402 closesocket(sock);; 17403 mg_free(conn);; 17404 return NULL;; 17405 }; 17406 }; 17407#endif; 17408 ; 17409 return conn;; 17410}; 17411 ; 17412 ; 17413CIVETWEB_API struct mg_connection *; 17414mg_connect_client_secure(const struct mg_client_options *client_options,; 17415 char *error_buffer,; 17416 size_t error_buffer_size); 17417{; 17418 return mg_connect_client_impl(client_options,; 17419 1,; 17420 error_buffer,; 17421 error_buffer_size);; 17422}; 17423 ; 17424 ; 17425struct mg_connection *; 17426mg_connect_client(const char *host,; 17427 int port,; 17428 int use_ssl,; 17429 char *error_buffer,; 17430 size_t error_buffer_size); 17431{; 17432 struct mg_client_options opts;; 17433 memset(&opts, 0, sizeof(opts));; 17434 opts.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:517047,error,error,517047,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability," 18 November, 2015.; Core. Resolve issues on SL6, 32bits when during process tear down libCling.so is removed before all the dictionary have been tear down.; Activate interpreter in inspector calls by ShowMembers [ROOT-7779)]. Interpreter. Resolve problem with static intialization related to explicit template instantiation. This fixes [ROOT-7775]. Hist. Improve thread safety of TH1::Fit by making static member of TVirtualFitter thread local. This fixes [ROOT-7791]. TNetXNGFileStager. Fixed ROOT-7703. This restores the behavior of Locate() to that found with TXNetFileStager: Rather than return only the xrootd server’s reply, the endpoint hostname is looked up and Locate() returns the full url, including the path. Release 6.04/12; I/O. Add to the TClass StreamerInfo for non-stl collections. A ‘collection’ here is a class for which there is a TVirtualCollectionProxy. For example this applies to ATLAS’ DataVector.; TWebFile. Fixed ROOT-7809. Returns an error for a redirect which does not specify the new URI, rather than going into a loop. Interpreter. Cache ROOT specials (ROOT-7830 and friends).; Accelerated calls as seen e.g. in PyROOT [ROOT-7840]. This fixes a PyROOT performance regression between 6.02 and 6.04, seen by ATLAS. Documentation. Apply THtml->doxygen transformation for func doc. Eases cherry picking. Bugs and Improvements. [ROOT-7789] - ROOTConfig.cmake should not set CMAKE_MODULE_PATH nor install FindX modules; [ROOT-7809] - TWebFile infinite loop for 301 redirects without Location; [ROOT-7817] - Avoid a crash under some circumstances when trying to open an invalid path.; [ROOT-7787] - CMake: allow disabling ncurses. Release 6.04/14; Build system. Added build option builtin_openssl to build OpenSSL internally. This is specially needed for the lastest Mac OSX (El Capitan); Fix configuration of threading in LLVM.; Fix issue with inconsistent visibility ROOT-7896. GL. Mattias Ellert fixed a memory leak [PR114]. Interpreter. Update automatic variables if gDire",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v604/release-notes.html:35801,error,error,35801,doc/v604/release-notes.html,https://root.cern,https://root.cern/doc/v604/release-notes.html,1,['error'],['error']
Availability," 19116 == INVALID_SOCKET) {; 19117 } else if (check_acl(ctx, &so.rsa) != 1) {; 19118 sockaddr_to_string(src_addr, sizeof(src_addr), &so.rsa);; 19119 mg_cry_ctx_internal(ctx,; 19120 ""%s: %s is not allowed to connect"",; 19121 __func__,; 19122 src_addr);; 19123 closesocket(so.sock);; 19124 } else {; 19125 /* Put so socket structure into the queue */; 19126 DEBUG_TRACE(""Accepted socket %d"", (int)so.sock);; 19127 set_close_on_exec(so.sock, NULL, ctx);; 19128 so.is_ssl = listener->is_ssl;; 19129 so.ssl_redir = listener->ssl_redir;; 19130 if (getsockname(so.sock, &so.lsa.sa, &len) != 0) {; 19131 mg_cry_ctx_internal(ctx,; 19132 ""%s: getsockname() failed: %s"",; 19133 __func__,; 19134 strerror(ERRNO));; 19135 }; 19136 ; 19137#if !defined(__ZEPHYR__); 19138 if ((so.lsa.sa.sa_family == AF_INET); 19139 || (so.lsa.sa.sa_family == AF_INET6)) {; 19140 /* Set TCP keep-alive for TCP sockets (IPv4 and IPv6).; 19141 * This is needed because if HTTP-level keep-alive; 19142 * is enabled, and client resets the connection, server won't get; 19143 * TCP FIN or RST and will keep the connection open forever. With; 19144 * TCP keep-alive, next keep-alive handshake will figure out that; 19145 * the client is down and will close the server end.; 19146 * Thanks to Igor Klopov who suggested the patch. */; 19147 if (setsockopt(so.sock,; 19148 SOL_SOCKET,; 19149 SO_KEEPALIVE,; 19150 (SOCK_OPT_TYPE)&on,; 19151 sizeof(on)); 19152 != 0) {; 19153 mg_cry_ctx_internal(; 19154 ctx,; 19155 ""%s: setsockopt(SOL_SOCKET SO_KEEPALIVE) failed: %s"",; 19156 __func__,; 19157 strerror(ERRNO));; 19158 }; 19159 }; 19160#endif; 19161 ; 19162 /* Disable TCP Nagle's algorithm. Normally TCP packets are coalesced; 19163 * to effectively fill up the underlying IP packet payload and; 19164 * reduce the overhead of sending lots of small buffers. However; 19165 * this hurts the server's throughput (ie. operations per second); 19166 * when HTTP 1.1 persistent connections are used and the responses; 19167 * are relatively small (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:570347,alive,alive,570347,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['alive'],['alive']
Availability," 19117 == INVALID_SOCKET) {; 19118 } else if (check_acl(ctx, &so.rsa) != 1) {; 19119 sockaddr_to_string(src_addr, sizeof(src_addr), &so.rsa);; 19120 mg_cry_ctx_internal(ctx,; 19121 ""%s: %s is not allowed to connect"",; 19122 __func__,; 19123 src_addr);; 19124 closesocket(so.sock);; 19125 } else {; 19126 /* Put so socket structure into the queue */; 19127 DEBUG_TRACE(""Accepted socket %d"", (int)so.sock);; 19128 set_close_on_exec(so.sock, NULL, ctx);; 19129 so.is_ssl = listener->is_ssl;; 19130 so.ssl_redir = listener->ssl_redir;; 19131 if (getsockname(so.sock, &so.lsa.sa, &len) != 0) {; 19132 mg_cry_ctx_internal(ctx,; 19133 ""%s: getsockname() failed: %s"",; 19134 __func__,; 19135 strerror(ERRNO));; 19136 }; 19137 ; 19138#if !defined(__ZEPHYR__); 19139 if ((so.lsa.sa.sa_family == AF_INET); 19140 || (so.lsa.sa.sa_family == AF_INET6)) {; 19141 /* Set TCP keep-alive for TCP sockets (IPv4 and IPv6).; 19142 * This is needed because if HTTP-level keep-alive; 19143 * is enabled, and client resets the connection, server won't get; 19144 * TCP FIN or RST and will keep the connection open forever. With; 19145 * TCP keep-alive, next keep-alive handshake will figure out that; 19146 * the client is down and will close the server end.; 19147 * Thanks to Igor Klopov who suggested the patch. */; 19148 if (setsockopt(so.sock,; 19149 SOL_SOCKET,; 19150 SO_KEEPALIVE,; 19151 (SOCK_OPT_TYPE)&on,; 19152 sizeof(on)); 19153 != 0) {; 19154 mg_cry_ctx_internal(; 19155 ctx,; 19156 ""%s: setsockopt(SOL_SOCKET SO_KEEPALIVE) failed: %s"",; 19157 __func__,; 19158 strerror(ERRNO));; 19159 }; 19160 }; 19161#endif; 19162 ; 19163 /* Disable TCP Nagle's algorithm. Normally TCP packets are coalesced; 19164 * to effectively fill up the underlying IP packet payload and; 19165 * reduce the overhead of sending lots of small buffers. However; 19166 * this hurts the server's throughput (ie. operations per second); 19167 * when HTTP 1.1 persistent connections are used and the responses; 19168 * are relatively small (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:570380,alive,alive,570380,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['alive'],['alive']
Availability," 1939 AddYError(fNpoints);; 1940 ; 1941 fEyL[e][i] = eyL;; 1942 if (fEyLSum); 1943 fEyLSum[i] = GetErrorYlow(i);; 1944 else; 1945 CalcYErrorsSum();; 1946}; 1947 ; 1948////////////////////////////////////////////////////////////////////////////////; 1949/// Set error e eyH value for point `i`.; 1950 ; 1951void TGraphMultiErrors::SetPointEYhigh(Int_t i, Int_t e, Double_t eyH); 1952{; 1953 if (i < 0 || e < 0); 1954 return;; 1955 ; 1956 if (i >= fNpoints); 1957 // re-allocate the object; 1958 TGraphMultiErrors::SetPoint(i, 0., 0.);; 1959 ; 1960 while (e >= fNYErrors); 1961 AddYError(fNpoints);; 1962 ; 1963 fEyH[e][i] = eyH;; 1964 if (fEyHSum); 1965 fEyHSum[i] = GetErrorYhigh(i);; 1966 else; 1967 CalcYErrorsSum();; 1968}; 1969 ; 1970////////////////////////////////////////////////////////////////////////////////; 1971/// Set error e ey values.; 1972 ; 1973void TGraphMultiErrors::SetEY(Int_t e, Int_t np, const Double_t *eyL, const Double_t *eyH); 1974{; 1975 SetEYlow(e, np, eyL);; 1976 SetEYhigh(e, np, eyH);; 1977}; 1978 ; 1979////////////////////////////////////////////////////////////////////////////////; 1980/// Set error e eyL values.; 1981 ; 1982void TGraphMultiErrors::SetEYlow(Int_t e, Int_t np, const Double_t *eyL); 1983{; 1984 for (Int_t i = 0; i < fNpoints; i++) {; 1985 if (i < np); 1986 SetPointEYlow(i, e, eyL[i]);; 1987 else; 1988 SetPointEYlow(i, e, 0.);; 1989 }; 1990}; 1991 ; 1992////////////////////////////////////////////////////////////////////////////////; 1993/// Set error e eyH values.; 1994 ; 1995void TGraphMultiErrors::SetEYhigh(Int_t e, Int_t np, const Double_t *eyH); 1996{; 1997 for (Int_t i = 0; i < fNpoints; i++) {; 1998 if (i < np); 1999 SetPointEYhigh(i, e, eyH[i]);; 2000 else; 2001 SetPointEYhigh(i, e, 0.);; 2002 }; 2003}; 2004 ; 2005////////////////////////////////////////////////////////////////////////////////; 2006/// Set the sum errors mode and recalculate summed errors.; 2007void TGraphMultiErrors::SetSumErrorsMode(Int_t m); 2008{; 2009 i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:66666,error,error,66666,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['error']
Availability," 1949///; 1950/// If the object is not already entered in the gROOT list, it is added.; 1951 ; 1952TProcessID *TFile::ReadProcessID(UShort_t pidf); 1953{; 1954 TProcessID *pid = nullptr;; 1955 TObjArray *pids = GetListOfProcessIDs();; 1956 if (pidf < pids->GetSize()) pid = (TProcessID *)pids->UncheckedAt(pidf);; 1957 if (pid) {; 1958 pid->CheckInit();; 1959 return pid;; 1960 }; 1961 ; 1962 //check if fProcessIDs[uid] is set in file; 1963 //if not set, read the process uid from file; 1964 char pidname[32];; 1965 snprintf(pidname,32,""ProcessID%d"",pidf);; 1966 pid = (TProcessID *)Get(pidname);; 1967 if (gDebug > 0) {; 1968 printf(""ReadProcessID, name=%s, file=%s, pid=%zx\n"",pidname,GetName(),(size_t)pid);; 1969 }; 1970 if (!pid) {; 1971 //file->Error(""ReadProcessID"",""Cannot find %s in file %s"",pidname,file->GetName());; 1972 return pid;; 1973 }; 1974 ; 1975 //check that a similar pid is not already registered in fgPIDs; 1976 TObjArray *pidslist = TProcessID::GetPIDs();; 1977 TIter next(pidslist);; 1978 TProcessID *p;; 1979 bool found = false;; 1980 ; 1981 {; 1982 R__READ_LOCKGUARD(ROOT::gCoreMutex);; 1983 while ((p = (TProcessID*)next())) {; 1984 if (!strcmp(p->GetTitle(),pid->GetTitle())) {; 1985 found = true;; 1986 break;; 1987 }; 1988 }; 1989 }; 1990 ; 1991 if (found) {; 1992 delete pid;; 1993 pids->AddAtAndExpand(p,pidf);; 1994 p->IncrementCount();; 1995 return p;; 1996 }; 1997 ; 1998 pids->AddAtAndExpand(pid,pidf);; 1999 pid->IncrementCount();; 2000 ; 2001 {; 2002 R__WRITE_LOCKGUARD(ROOT::gCoreMutex);; 2003 pidslist->Add(pid);; 2004 Int_t ind = pidslist->IndexOf(pid);; 2005 pid->SetUniqueID((UInt_t)ind);; 2006 }; 2007 ; 2008 return pid;; 2009}; 2010 ; 2011 ; 2012////////////////////////////////////////////////////////////////////////////////; 2013/// Attempt to recover file if not correctly closed; 2014///; 2015/// The function returns the number of keys that have been recovered.; 2016/// If no keys can be recovered, the file will be declared Zombie by; 2017/// th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:71659,recover,recover,71659,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,2,['recover'],"['recover', 'recovered']"
Availability," 196example, those marked <TT>CURRENT GUESS ERROR</TT> are only working values; 197not to be believed, and <TT>APPROXIMATE ERROR</TT> means that they have; 198been calculated but there is reason to believe that they may not be; 199accurate.; 200 ; 201If no mitigating adjective is given, then at least MINUIT believes the; 202errors are accurate, although there is always a small chance that MINUIT; 203has been fooled. Some visible signs that MINUIT may have been fooled are:; 204 ; 205 ; 206 1. Warning messages produced during the minimization or error analysis.; 207 ; 208 2. Failure to find new minimum.; 209 ; 210 3. Value of <TT>EDM</TT> too big (estimated Distance to Minimum).; 211 ; 212 4. Correlation coefficients exactly equal to zero, unless some parameters; 213 are known to be uncorrelated with the others.; 214 ; 215 5. Correlation coefficients very close to one (greater than 0.99). This; 216 indicates both an exceptionally difficult problem, and one which has been; 217 badly parameterised so that individual errors are not very meaningful; 218 because they are so highly correlated.; 219 ; 220 6. Parameter at limit. This condition, signalled by a MINUIT warning; 221 message, may make both the function minimum and parameter errors; 222 unreliable. See the discussion above ``Getting the right parameter errors; 223 with limits''.; 224 ; 225 ; 226The best way to be absolutely sure of the errors, is to use; 227``independent'' calculations and compare them, or compare the calculated; 228errors with a picture of the function. Theoretically, the covariance; 229matrix for a ``physical'' function must be positive-definite at the; 230minimum, although it may not be so for all points far away from the; 231minimum, even for a well-determined physical problem. Therefore, if MIGRAD; 232reports that it has found a non-positive-definite covariance matrix, this; 233may be a sign of one or more of the following:; 234 ; 235##### A non-physical region:; 236 ; 237On its way to the mini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:10514,error,errors,10514,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['error'],['errors']
Availability, 1; : 695 Minimum Test error found - save the configuration ; : 695 | 34.8867 31.3734 0.0201347 0.00182018 43681.2 0; : 696 Minimum Test error found - save the configuration ; : 696 | 34.4357 31.1348 0.0201081 0.00181563 43733.9 0; : 697 Minimum Test error found - save the configuration ; : 697 | 34.0416 30.9812 0.0205543 0.00184744 42765.1 0; : 698 Minimum Test error found - save the configuration ; : 698 | 33.7716 30.3897 0.0201321 0.00181458 43673.9 0; : 699 | 33.1269 30.7769 0.0201928 0.00175872 43397.8 1; : 700 Minimum Test error found - save the configuration ; : 700 | 32.8076 30.1388 0.0201025 0.00181993 43757.5 0; : 701 | 32.6014 30.2991 0.0200398 0.0017563 43755.4 1; : 702 | 32.0925 30.8793 0.0200419 0.00175584 43749.1 2; : 703 Minimum Test error found - save the configuration ; : 703 | 31.9128 29.3224 0.0202722 0.00182152 43358.7 0; : 704 Minimum Test error found - save the configuration ; : 704 | 31.2876 29.167 0.0201013 0.00181585 43750.6 0; : 705 Minimum Test error found - save the configuration ; : 705 | 30.8198 28.9852 0.0201048 0.0018126 43734.4 0; : 706 Minimum Test error found - save the configuration ; : 706 | 30.3399 28.5636 0.0203047 0.00182247 43284.8 0; : 707 | 29.8899 28.5807 0.0200458 0.00176314 43757.3 1; : 708 | 29.6409 28.6883 0.0201432 0.0017637 43526.7 2; : 709 Minimum Test error found - save the configuration ; : 709 | 29.434 28.2 0.0201313 0.00182437 43699.3 0; : 710 | 28.7076 28.492 0.0200557 0.00176519 43738.5 1; : 711 Minimum Test error found - save the configuration ; : 711 | 28.4018 27.2754 0.0201013 0.00182194 43765.3 0; : 712 | 28.1436 28.1139 0.020041 0.00175734 43754.9 1; : 713 | 27.878 27.4183 0.0200281 0.0017564 43783.5 2; : 714 | 27.4734 27.8632 0.020054 0.00175612 43720.8 3; : 715 Minimum Test error found - save the configuration ; : 715 | 27.1251 26.6487 0.0201232 0.0018277 43726.6 0; : 716 | 26.6302 26.7712 0.0200343 0.00176196 43782.1 1; : 717 Minimum Test error found - save the configuration ; : 717 | 26.542 26.4691 0,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:89726,error,error,89726,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability," 1; name of histogram is printed; Example: gStyle->SetOptStat(11);; print only name of histogram and number of entries.; gStyle->SetOptStat(1101); displays the name of histogram, mean value and RMS.; WARNING: never call SetOptStat(000111); but SetOptStat(1111), 0001111 will; be taken as an octal number !!; WARNING: SetOptStat(1) is taken as SetOptStat(1111) (for back compatibility; with older versions. If you want to print only the name of the histogram; call SetOptStat(1000000001).; NOTE that in case of 2-D histograms, when selecting just underflow (10000); or overflow (100000), the stats box will show all combinations; of underflow/overflows and not just one single number!. void SetOptStat(Option_t* stat); The parameter mode can be any combination of kKsSiourRmMen; k : kurtosis printed; K : kurtosis and kurtosis error printed; s : skewness printed; S : skewness and skewness error printed; i : integral of bins printed; I : integral of bins with option ""width"" printed; o : number of overflows printed; u : number of underflows printed; r : rms printed; R : rms and rms error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed; Example: gStyle->SetOptStat(""ne"");; print only name of histogram and number of entries.; gStyle->SetOptStat(""n"") print only the name of the histogram; gStyle->SetOptStat(""nemr"") is the default. void SetPaperSize(TStyle::EPaperSize size); Set paper size for PostScript output. void SetPaperSize(Float_t xsize = 20, Float_t ysize = 26); Set paper size for PostScript output.; The paper size is specified in centimeters. Default is 20x26.; See also TPad::Print. void SetTickLength(Float_t length = 0.029999999999999999, Option_t* axis = ""X""); Set the tick marks length for an axis.; axis specifies which axis (""x"",""y"",""z""), default = ""x""; if axis=""xyz"" set all 3 axes. void SetTitleColor(Color_t color = 1, Option_t* axis = ""X""); if axis ==""x"" set the X axis title color; if",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TStyle.html:35393,error,error,35393,root/html602/TStyle.html,https://root.cern,https://root.cern/root/html602/TStyle.html,16,['error'],['error']
Availability," 1; name of histogram is printed; Example: gStyle->SetOptStat(11);; print only name of histogram and number of entries.; gStyle->SetOptStat(1101); displays the name of histogram, mean value and RMS.; WARNING: never call SetOptStat(000111); but SetOptStat(1111), 0001111 will; be taken as an octal number !!; WARNING: SetOptStat(1) is taken as SetOptStat(1111) (for back compatibility; with older versions. If you want to print only the name of the histogram; call SetOptStat(1000000001).; NOTE that in case of 2-D histograms, when selecting just underflow (10000); or overflow (100000), the stats box will show all combinations; of underflow/overflows and not just one single number!. void SetOptStat(Option_t* stat); The parameter mode can be any combination of kKsSiourRmMen; k : kurtosis printed; K : kurtosis and kurtosis error printed; s : skewness printed; S : skewness and skewness error printed; i : integral of bins printed; I : integral of bins with option ""width"" printed; o : number of overflows printed; u : number of underflows printed; r : rms printed; R : rms and rms error printed; m : mean value printed; M : mean value mean error values printed; e : number of entries printed; n : name of histogram is printed; Example: gStyle->SetOptStat(""ne"");; print only name of histogram and number of entries.; gStyle->SetOptStat(""n"") print only the name of the histogram; gStyle->SetOptStat(""nemr"") is the default. void SetPaperSize(TStyle::EPaperSize size); Set paper size for PostScript output. void SetPaperSize(Float_t xsize = 20, Float_t ysize = 26); Set paper size for PostScript output.; The paper size is specified in centimeters. Default is 20x26.; See also TPad::Print. void SetTickLength(Float_t length = 0.03, Option_t* axis = ""X""); Set the tick marks length for an axis.; axis specifies which axis (""x"",""y"",""z""), default = ""x""; if axis=""xyz"" set all 3 axes. void SetTitleColor(Color_t color = 1, Option_t* axis = ""X""); if axis ==""x"" set the X axis title color; if axis ==""y"" set ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TStyle.html:34650,error,error,34650,root/html534/TStyle.html,https://root.cern,https://root.cern/root/html534/TStyle.html,8,['error'],['error']
Availability, 1;; 21511 }; 21512 ; 21513 mg_global_unlock();; 21514 return 1;; 21515}; 21516 ; 21517 ; 21518/* End of civetweb.c */; escstatic int esc(const char **)Map escape sequences into their equivalent symbols.Definition Match.cxx:438; d#define d(i)Definition RSha256.hxx:102; b#define b(i)Definition RSha256.hxx:100; f#define f(i)Definition RSha256.hxx:104; c#define c(i)Definition RSha256.hxx:101; a#define a(i)Definition RSha256.hxx:99; s1#define s1(x)Definition RSha256.hxx:91; h#define h(i)Definition RSha256.hxx:106; e#define e(i)Definition RSha256.hxx:103; sizesize_t size(const MatrixT &matrix)retrieve the size of a square matrix; totalstatic unsigned int totalDefinition TGWin32ProxyDefs.h:40; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; maskOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t maskDefinition TGWin32VirtualXProxy.cxx:178; filenameOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char filenameDefinition TGWin32VirtualXProxy.cxx:232; offsetOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Poin,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:641451,mask,maskDefinition,641451,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['mask'],['maskDefinition']
Availability," 2 (write) or both can be set; intfReadyMaskReadiness mask, either bit 1 (read), 2 (write) or both can be set; Bool_tTQObject::fSignalsBlocked! flag used for suppression of signals; static Bool_tTQObject::fgAllSignalsBlockedflag used for suppression of all signals. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TFileHandler(int fd, int mask); Create a file descriptor event handler. If mask=kRead then we; want to monitor the file for read readiness, if mask=kWrite; then we monitor the file for write readiness, if mask=kRead|kWrite; then we monitor both read and write readiness. Bool_t Notify(); Notify when event occured on descriptor associated with this handler. Bool_t ReadNotify(); Notify when something can be read from the descriptor associated with; this handler. Bool_t WriteNotify(); Notify when something can be written to the descriptor associated with; this handler. Bool_t HasReadInterest(); True if handler is interested in read events. Bool_t HasWriteInterest(); True if handler is interested in write events. void SetInterest(Int_t mask); Set interest mask to 'mask'. void Add(); Add file event handler to system file handler list. void Remove(); Remove file event handler from system file handler list. TFileHandler(); { }. virtual ~TFileHandler(); { Remove(); }. int GetFd() const; { return fFileNum; }. void SetFd(int fd); { fFileNum = fd; }. void ResetReadyMask(); { fReadyMask = 0; }. void SetReadReady(); { fReadyMask |= 0x1; }. void SetWriteReady(); { fReadyMask |= 0x2; }. Bool_t IsReadReady() const; { return (fReadyMask & 0x1) == 0x1; }. Bool_t IsWriteReady() const; { return (fReadyMask & 0x2) == 0x2; }. » Author: Fons Rademakers 16/09/95 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/base:$Id$ » Last generated: 2015-03-13 19:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFileHandler.html:10476,mask,mask,10476,root/html534/TFileHandler.html,https://root.cern,https://root.cern/root/html534/TFileHandler.html,6,['mask'],['mask']
Availability, 2 Minimum Test error found - save the configuration ; : 2 | 0.604286 0.594787 0.586926 0.0471912 20632.4 0; : 3 | 0.58117 0.603906 0.587335 0.047007 20609.7 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.57382 0.588714 0.592175 0.0469679 20425.3 0; : 5 | 0.569519 0.59535 0.590168 0.0468081 20494.7 1; : 6 | 0.567869 0.590023 0.589038 0.0469022 20541 2; : 7 Minimum Test error found - save the configuration ; : 7 | 0.561012 0.586993 0.590467 0.0471223 20495.3 0; : 8 | 0.559195 0.590522 0.590271 0.0471869 20505.1 1; : 9 | 0.558998 0.588766 0.598449 0.0469787 20193.3 2; : 10 | 0.555383 0.590075 0.591595 0.0470733 20451 3; : 11 Minimum Test error found - save the configuration ; : 11 | 0.555591 0.582449 0.595129 0.047292 20327.2 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.550993 0.581236 0.592181 0.0472746 20436.5 0; : 13 | 0.548186 0.58351 0.592876 0.0471057 20404.2 1; : 14 | 0.547427 0.581875 0.592374 0.0471592 20425 2; : 15 Minimum Test error found - save the configuration ; : 15 | 0.545473 0.580893 0.592763 0.0477516 20432.6 0; : 16 | 0.544618 0.582994 0.591861 0.0472249 20446.7 1; : 17 | 0.542847 0.586139 0.592563 0.047232 20420.6 2; : 18 | 0.542463 0.586829 0.59647 0.0472837 20277.3 3; : 19 | 0.540337 0.582774 0.592992 0.0472829 20406.5 4; : 20 | 0.538876 0.589547 0.592937 0.0473047 20409.4 5; : ; : Elapsed time for training with 14000 events: 11.9 sec ; : Evaluate deep neural network on CPU using batches with size = 128; : ; DNN_CPU : [dataset] : Evaluation of DNN_CPU on training sample (14000 events); : Elapsed time for evaluation of 14000 events: 0.247 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVA_Higgs_Classification_DNN_CPU.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVA_Higgs_Classification_DNN_CPU.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: PyKeras for Classification; : ; : ; : ␛[1m================================================================␛[0,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html:25349,error,error,25349,doc/master/TMVA__Higgs__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8py.html,1,['error'],['error']
Availability, 2 | 0.431501 0.379356 0.191981 0.0145985 9020.06 0; : 3 | 0.40241 0.379482 0.19151 0.014162 9021.8 1; : 4 Minimum Test error found - save the configuration ; : 4 | 0.408996 0.379041 0.192713 0.0146534 8985.76 0; : 5 | 0.41143 0.414316 0.191728 0.014237 9014.55 1; : 6 | 0.385066 0.478603 0.19226 0.0142608 8988.82 2; : 7 | 0.404168 0.388159 0.192259 0.0142353 8987.58 3; : 8 Minimum Test error found - save the configuration ; : 8 | 0.394387 0.377539 0.19273 0.0147168 8988.1 0; : 9 Minimum Test error found - save the configuration ; : 9 | 0.386834 0.375541 0.192946 0.014741 8978.44 0; : 10 | 0.381359 0.385778 0.195351 0.0142527 8835 1; : 11 | 0.391916 0.415129 0.193961 0.0143386 8907.56 2; : 12 | 0.390755 0.379468 0.194376 0.0145555 8897.75 3; : 13 | 0.409355 0.396515 0.195082 0.0144231 8856.49 4; : 14 | 0.400917 0.375809 0.194321 0.0142902 8887.36 5; : 15 | 0.384495 0.401588 0.194138 0.0144019 8901.96 6; : 16 | 0.400658 0.401489 0.198047 0.014311 8708.13 7; : 17 Minimum Test error found - save the configuration ; : 17 | 0.386851 0.371455 0.194859 0.0148291 8887.42 0; : 18 | 0.389253 0.376491 0.196282 0.0143574 8794.87 1; : 19 | 0.378227 0.384958 0.199317 0.0143422 8649.85 2; : 20 | 0.387911 0.390858 0.193697 0.0144047 8923.97 3; : 21 | 0.391998 0.3743 0.194318 0.0146357 8904.63 4; : 22 | 0.396695 0.384671 0.194406 0.0145452 8895.77 5; : 23 | 0.38744 0.376683 0.195092 0.0143629 8853.03 6; : 24 | 0.38501 0.377878 0.194456 0.0147282 8902.35 7; : 25 | 0.389388 0.376148 0.201694 0.0152248 8580.5 8; : 26 | 0.386053 0.386475 0.196336 0.0144907 8798.68 9; : 27 | 0.393538 0.3733 0.194982 0.0143137 8856 10; : 28 | 0.385176 0.39001 0.193442 0.0143164 8932.26 11; : 29 | 0.400584 0.385359 0.19387 0.0143278 8911.56 12; : 30 | 0.396539 0.381147 0.193167 0.0143041 8945.41 13; : 31 | 0.38083 0.377553 0.193127 0.014317 8948.06 14; : 32 | 0.383321 0.382886 0.193572 0.0143126 8925.64 15; : 33 | 0.38226 0.374274 0.19409 0.0143233 8900.4 16; : 34 | 0.38313 0.384605 0.193423 0.0144921 8941.,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:48533,error,error,48533,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['error'],['error']
Availability, 2 | 0.605139 0.593298 0.586597 0.0468674 20632.5 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.581823 0.587355 0.586416 0.0468644 20639.4 0; : 4 | 0.575813 0.593823 0.586862 0.0466947 20615.8 1; : 5 Minimum Test error found - save the configuration ; : 5 | 0.572257 0.578309 0.587324 0.0469531 20608.1 0; : 6 | 0.567347 0.582461 0.586969 0.0467966 20615.6 1; : 7 Minimum Test error found - save the configuration ; : 7 | 0.564553 0.577241 0.588162 0.0470086 20578.3 0; : 8 | 0.56278 0.582039 0.588324 0.0468355 20565.5 1; : 9 | 0.559377 0.582454 0.588676 0.0469029 20554.7 2; : 10 | 0.55743 0.581686 0.590386 0.0469245 20490.9 3; : 11 | 0.555638 0.57854 0.591068 0.0469776 20467.2 4; : 12 | 0.556914 0.579893 0.589121 0.0470111 20542 5; : 13 | 0.553226 0.579356 0.590241 0.0470372 20500.6 6; : 14 Minimum Test error found - save the configuration ; : 14 | 0.551359 0.575116 0.590392 0.0472515 20503 0; : 15 | 0.550484 0.575412 0.59006 0.0471061 20510 1; : 16 Minimum Test error found - save the configuration ; : 16 | 0.548532 0.572184 0.591616 0.0473333 20460 0; : 17 | 0.544023 0.585132 0.591038 0.0471532 20474.9 1; : 18 | 0.543801 0.585958 0.59089 0.0471671 20481 2; : 19 | 0.543073 0.577544 0.59151 0.0472011 20459 3; : 20 | 0.540305 0.585505 0.591485 0.0472123 20460.3 4; : 21 | 0.541092 0.577737 0.591401 0.0472411 20464.6 5; : 22 | 0.537394 0.582432 0.592336 0.0472536 20429.9 6; : 23 | 0.536715 0.589196 0.591864 0.0475573 20459.1 7; : 24 | 0.537796 0.579234 0.591655 0.0473491 20459.1 8; : 25 | 0.534347 0.586832 0.601681 0.047397 20090.8 9; : 26 | 0.531742 0.582802 0.613513 0.0496834 19750.6 10; : 27 | 0.532714 0.581886 0.617515 0.0480417 19554.9 11; : ; : Elapsed time for training with 14000 events: 16.1 sec ; : Evaluate deep neural network on CPU using batches with size = 128; : ; DNN_CPU : [dataset] : Evaluation of DNN_CPU on training sample (14000 events); : Elapsed time for evaluation of 14000 events: 0.253 sec ; : Creating xml weight file: ␛[0;36mdataset,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:25464,error,error,25464,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,1,['error'],['error']
Availability," 2/3 of the marker size. ""|>""; A filled arrow is drawn at the end of the error bars.; The size of the arrow is set to 2/3 of the marker size. ""X""; By default the error bars are drawn. If option ""X"" is specified,; the errors are not drawn. The graph with errors in drawn like a normal graph. ""||""; Only the end vertical/horizonthal lines; of the error bars are drawn. This option is interesting to superimpose; systematic errors on top of a graph with statistical errors. ""[]""; Does the same as option ""||"" except that it draws additionnal tick marks at the; end of the vertical/horizonthal lines. This makes less ambiguous plots; in case several graphs are drawn on the same picture. ""0""; By default, when a data point is outside the visible range along the Y axis the error; bars are not drawn. Combined with other options, this option forces error bars'; drawing for the data points outside the visible range along the Y axis. ""2""; Error rectangles are drawn. ""3""; A filled area is drawn through the end points of the vertical error bars. ""4""; A smoothed filled area is drawn through the end points of the vertical error; bars. gStyle->SetErrorX(dx) controls the size of the error along x.; dx = 0 removes the error along x. gStyle->SetEndErrorSize(np) controls the size of the lines; at the end of the error bars (when option 1 is used).; By default np=1. (np represents the number of pixels).; TGraphErrors; A TGraphErrors is a TGraph with error bars. The errors are; defined along X and Y and are symmetric: The left and right errors are the same; along X and the bottom and up errors are the same along Y. Picture; Source. {; TCanvas *c4 = new TCanvas(""c4"",""c4"",200,10,600,400);; double x[] = {0, 1, 2, 3, 4};; double y[] = {0, 2, 4, 1, 3};; double ex[] = {0.1, 0.2, 0.3, 0.4, 0.5};; double ey[] = {1, 0.5, 1, 0.5, 1};; TGraphErrors* ge = new TGraphErrors(5, x, y, ex, ey);; ge->Draw(""ap"");; return c4;; }; The option ""3"" allows to shows the error as band. Picture; Source. {; TCanvas *c41 = new",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGraphPainter.html:6237,error,error,6237,root/html530/TGraphPainter.html,https://root.cern,https://root.cern/root/html530/TGraphPainter.html,1,['error'],['error']
Availability, 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=5.27133; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 166 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=5.28726; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 9 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=5.2898; RooAbsPdf::argus_over,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html:11139,error,errors,11139,doc/master/rf606__nllerrorhandling_8C.html,https://root.cern,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html,4,['error'],"['error', 'errors']"
Availability, 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=5.27133; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 166 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=5.28726; RooAbsPdf::argus_over_argu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html:10936,error,errors,10936,doc/master/rf606__nllerrorhandling_8C.html,https://root.cern,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html,4,['error'],"['error', 'errors']"
Availability, 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=5.27133; RooAbsPdf::argus_over_argus_Int[m],MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html:10733,error,errors,10733,doc/master/rf606__nllerrorhandling_8C.html,https://root.cern,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html,4,['error'],"['error', 'errors']"
Availability, 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerat,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html:10530,error,errors,10530,doc/master/rf606__nllerrorhandling_8C.html,https://root.cern,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html,4,['error'],"['error', 'errors']"
Availability, 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=ar,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html:10327,error,errors,10327,doc/master/rf606__nllerrorhandling_8C.html,https://root.cern,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html,4,['error'],"['error', 'errors']"
Availability, 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus d,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html:9921,error,errors,9921,doc/master/rf606__nllerrorhandling_8C.html,https://root.cern,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html,8,['error'],"['error', 'errors']"
Availability," 2006; 3 ; 4/**********************************************************************; 5 * *; 6 * Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; 7 * *; 8 * *; 9 **********************************************************************/; 10 ; 11// Header file for class UnBinData; 12 ; 13#ifndef ROOT_Fit_UnBinData; 14#define ROOT_Fit_UnBinData; 15 ; 16#include ""Fit/FitData.h""; 17#include ""Math/Error.h""; 18 ; 19#include <vector>; 20 ; 21namespace ROOT {; 22 ; 23 namespace Fit {; 24 ; 25 ; 26//___________________________________________________________________________________; 27/**; 28 Class describing the un-binned data sets (just x coordinates values) of any dimensions; 29 ; 30 There is the option to construct UnBindata copying the data inside; 31 (in the base FitData class) or using a pointer to external data, depending on which; 32 constructor of the UnBinData class is used.; 33 It is recommended to copy the input data inside, since this will be more efficient and; 34 less error prone, since the input provided data will have to be kept alive for all the time the; 35 Fit classes will be used.; 36 In case of really large data sets for limiting memory consumption then the other option can be used; 37 with special care.; 38 Specialized constructor exists for using external data up to 3 dimensions.; 39 ; 40 When the data are copying in the number of points can be set later (or re-set) using Initialize and; 41 the data are inserted one by one using the Add method.; 42 It is mandatory to set the size before using the Add method.; 43 ; 44 @ingroup FitData; 45*/; 46class UnBinData : public FitData {; 47 ; 48public :; 49 ; 50 /**; 51 constructor from dimension of point and max number of points (to pre-allocate vector); 52 */; 53 ; 54 explicit UnBinData( unsigned int maxpoints = 0, unsigned int dim = 1,; 55 bool isWeighted = false ) :; 56 FitData( maxpoints, isWeighted ? dim + 1 : dim ),; 57 fWeighted(isWeighted); 58 {; 59 assert( dim >= 1 );; 60 assert( !fWeighted || dim >=",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/UnBinData_8h_source.html:1247,error,error,1247,doc/master/UnBinData_8h_source.html,https://root.cern,https://root.cern/doc/master/UnBinData_8h_source.html,2,"['alive', 'error']","['alive', 'error']"
Availability," 206 ; 207 ///do minos errors analysis on the parameters; 208 bool MinosErrors() const { return fMinosErrors; }; 209 ; 210 ///Update configuration after a fit using the FitResult; 211 bool UpdateAfterFit() const { return fUpdateAfterFit; }; 212 ; 213 ///Apply Weight correction for error matrix computation; 214 bool UseWeightCorrection() const { return fWeightCorr; }; 215 ; 216 ; 217 /// return vector of parameter indices for which the Minos Error will be computed; 218 const std::vector<unsigned int> & MinosParams() const { return fMinosParams; }; 219 ; 220 /**; 221 set the option to normalize the error on the result according to chi2/ndf; 222 */; 223 void SetNormErrors(bool on = true) { fNormErrors= on; }; 224 ; 225 ///set parabolic errors; 226 void SetParabErrors(bool on = true) { fParabErrors = on; }; 227 ; 228 ///set Minos errors computation to be performed after fitting; 229 void SetMinosErrors(bool on = true) { fMinosErrors = on; }; 230 ; 231 ///apply the weight correction for error matrix computation; 232 void SetWeightCorrection(bool on = true) { fWeightCorr = on; }; 233 ; 234 /// set parameter indices for running Minos; 235 /// this can be used for running Minos on a subset of parameters - otherwise is run on all of them; 236 /// if MinosErrors() is set; 237 void SetMinosErrors(const std::vector<unsigned int> & paramInd ) {; 238 fMinosErrors = true;; 239 fMinosParams = paramInd;; 240 }; 241 ; 242 ///Update configuration after a fit using the FitResult; 243 void SetUpdateAfterFit(bool on = true) { fUpdateAfterFit = on; }; 244 ; 245 ; 246 /**; 247 static function to control default minimizer type and algorithm; 248 */; 249 static void SetDefaultMinimizer(const char *type, const char *algo = nullptr);; 250 ; 251 ; 252 ; 253 ; 254protected:; 255 ; 256 ; 257private:; 258 ; 259 bool fNormErrors; ///< flag for error normalization; 260 bool fParabErrors; ///< get correct parabolic errors estimate (call Hesse after minimizing); 261 bool fMinosErrors; ///< do full err",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8h_source.html:6822,error,error,6822,doc/master/FitConfig_8h_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8h_source.html,1,['error'],['error']
Availability," 208 vector<double> minv(min,min+dim);; 209 vector<double> maxv(max,max+dim);; 210 Box originalBox(minv, maxv);; 211 fList = std::make_unique<ProxyListBox>();; 212 fList->PushBack(originalBox);; 213 }; 214 ; 215 SparseData::SparseData(const SparseData & rhs) :; 216 FitData(rhs); 217 {; 218 fList = std::make_unique<ProxyListBox>(*rhs.fList);; 219 }; 220 SparseData & SparseData::operator=(const SparseData & rhs); 221 {; 222 FitData::operator=( rhs );; 223 fList = std::make_unique<ProxyListBox>(*rhs.fList);; 224 return *this;; 225 }; 226 ; 227 SparseData::~SparseData() {}; 228 ; 229 unsigned int SparseData::NPoints() const; 230 {; 231 // Returns the number of points stored, including the 0 ones.; 232 return fList->GetList().size();; 233 }; 234 ; 235 unsigned int SparseData::NDim() const; 236 {; 237 // Returns the number of dimension of the SparseData object.; 238 return fList->Begin()->GetMin().size();; 239 }; 240 ; 241 void SparseData::Add(std::vector<double>& min, std::vector<double>& max,; 242 const double content, const double error); 243 {; 244 // Add a box to the stored ones. For that, it will look for; 245 // the box that contains the new data and either replace it; 246 // or updated it.; 247 ; 248 // Little box is the new Bin to be added; 249 Box littleBox(min, max);; 250 list<Box>::iterator it;; 251 // So we look for the Bin already in the list that contains; 252 // littleBox; 253 it = std::find_if(fList->Begin(), fList->End(), BoxContainer(littleBox));; 254 if ( it != fList->End() ); 255// cout << ""Found: "" << *it << endl;; 256 ;; 257 else {; 258 cout << ""SparseData::Add -> FAILED! box not found! "" << endl;; 259 cout << littleBox << endl;; 260 return; // Does not add the box, as it is part of the; 261 // underflow/overflow bin; 262 }; 263 // If it happens to have a value, then we add the value,; 264 if ( it->GetVal() ); 265 it->AddVal( content );; 266 else; 267 {; 268 // otherwise, we divide the container!; 269 DivideBox(it->GetMin(), it->GetMax(),; 270 littl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/SparseData_8cxx_source.html:7656,error,error,7656,doc/master/SparseData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/SparseData_8cxx_source.html,1,['error'],['error']
Availability," 2087 if (scale>0.0) toffset = TMath::Max(toffset,(double)w/scale);; 2088 }; 2089 textaxis.PaintLatex(gPad->GetX1() + xx*(gPad->GetX2() - gPad->GetX1()),; 2090 gPad->GetY1() + yy*(gPad->GetY2() - gPad->GetY1()),; 2091 textaxis.GetTextAngle(),; 2092 textaxis.GetTextSize(),; 2093 typolabel.Data());; 2094 if (fNModLabs) ResetLabelAttributes(&textaxis);; 2095 } else {; 2096 strlcpy(chtemp, fAxis->GetBinLabel(k+fAxis->GetFirst()), 255);; 2097 if (fNModLabs) ChangeLabelAttributes(k+fAxis->GetFirst(), fAxis->GetLabels()->GetSize()-1, &textaxis, chtemp, k+fAxis->GetFirst(), 0.1);; 2098 if (optionText == 1) textaxis.PaintLatex(gPad->GetX1() + xx*(gPad->GetX2() - gPad->GetX1()),; 2099 gPad->GetY1() + yy*(gPad->GetY2() - gPad->GetY1()),; 2100 0,; 2101 textaxis.GetTextSize(),; 2102 chtemp);; 2103 if (fNModLabs) ResetLabelAttributes(&textaxis);; 2104 }; 2105 } else {; 2106 ; 2107// Text alignment is down; 2108 if (!optionText) lnlen = last-first+1;; 2109 else {; 2110 if (k+1 > nhilab) lnlen = 0;; 2111 }; 2112 for ( l=1; l<=lnlen; l++) {; 2113 if (!optionText) *chtemp = label[first+l-2];; 2114 else {; 2115 if (lnlen == 0) strncpy(chtemp, "" "", 256);; 2116 else strncpy(chtemp, ""1"", 256);; 2117 }; 2118 typolabel = chtemp;; 2119 typolabel.ReplaceAll(""-"", ""#minus"");; 2120 textaxis.PaintLatex(gPad->GetX1() + xx*(gPad->GetX2() - gPad->GetX1()),; 2121 gPad->GetY1() + yy*(gPad->GetY2() - gPad->GetY1()),; 2122 0,; 2123 textaxis.GetTextSize(),; 2124 typolabel.Data());; 2125 yy -= charheight*1.3;; 2126 }; 2127 }; 2128 }; 2129 ; 2130// We use the format x 10 ** n; 2131 ; 2132 if (flexe && !optionText && nexe) {; 2133 snprintf(label,256,""#times10^{%d}"", nexe);; 2134 if (x0 != x1) { xfactor = axis_length+0.1*charheight; yfactor = 0; }; 2135 else { xfactor = y1-y0+0.1*charheight; yfactor = 0; }; 2136 Rotate (xfactor,yfactor,cosphi,sinphi,x0,y0,xx,yy);; 2137 textaxis.SetTextAlign(11);; 2138 if (GetLabelFont()%10 < 2) // force TLatex mode in PaintLatex; 2139 textaxis.SetTextFont((Int_t)(GetLabelFon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGaxis_8cxx_source.html:71511,down,down,71511,doc/master/TGaxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGaxis_8cxx_source.html,1,['down'],['down']
Availability," 2119TString TString::UItoa(UInt_t value, Int_t base); 2120{; 2121 std::string buf;; 2122 // check that the base if valid; 2123 if (base < 2 || base > 36) {; 2124 Error(""TString::UItoa"", ""base %d is not supported. Supported bases are {2,3,...,36}."",base);; 2125 return (TString(""!""));; 2126 }; 2127 buf.reserve(35); // Pre-allocate enough space (35=kMaxDigits); 2128 UInt_t quotient = value;; 2129 // Translating number to string with base:; 2130 do {; 2131 buf += ""0123456789abcdefghijklmnopqrstuvwxyz""[ quotient % base ];; 2132 quotient /= base;; 2133 } while (quotient);; 2134 std::reverse(buf.begin(), buf.end());; 2135 return (TString(buf.data()));; 2136}; 2137 ; 2138////////////////////////////////////////////////////////////////////////////////; 2139/// Converts a Long64_t to a TString with respect to the base specified (2-36).; 2140/// Thus it is an enhanced version of sprintf (adapted from versions 0.4 of; 2141/// http://www.jb.man.ac.uk/~slowe/cpp/itoa.html).; 2142/// In case of error returns the ""!"" string.; 2143 ; 2144TString TString::LLtoa(Long64_t value, Int_t base); 2145{; 2146 std::string buf;; 2147 // check that the base if valid; 2148 if (base < 2 || base > 36) {; 2149 Error(""TString::LLtoa"", ""base %d is not supported. Supported bases are {2,3,...,36}."",base);; 2150 return (TString(""!""));; 2151 }; 2152 buf.reserve(35); // Pre-allocate enough space (35=kMaxDigits); 2153 Long64_t quotient = value;; 2154 // Translating number to string with base:; 2155 do {; 2156 buf += ""0123456789abcdefghijklmnopqrstuvwxyz""[ TMath::Abs(quotient % base) ];; 2157 quotient /= base;; 2158 } while (quotient);; 2159 // Append the negative sign; 2160 if (value < 0) buf += '-';; 2161 std::reverse(buf.begin(), buf.end());; 2162 return (TString(buf.data()));; 2163}; 2164 ; 2165////////////////////////////////////////////////////////////////////////////////; 2166/// Converts a ULong64_t (twice the range of an Long64_t) to a TString with; 2167/// respect to the base specified (2-36). Th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TString_8cxx_source.html:67648,error,error,67648,doc/master/TString_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TString_8cxx_source.html,1,['error'],['error']
Availability, 212 The information is added for the previously inserted point.; 213 BinData::Add must be called before; 214 */; 215 void AddBinUpEdge( const double* xup );; 216 ; 217 /**; 218 return the value for the given fit point; 219 */; 220 double Value( unsigned int ipoint ) const; 221 {; 222 assert( ipoint < fMaxPoints );; 223 assert( fDataPtr );; 224 assert( fData.empty() || &fData.front() == fDataPtr );; 225 ; 226 return fDataPtr[ipoint];; 227 }; 228 ; 229 /**; 230 return a pointer to the value for the given fit point; 231 */; 232 const double *ValuePtr( unsigned int ipoint ) const; 233 {; 234 return &fDataPtr[ipoint];; 235 }; 236 ; 237 /**; 238 Return a pointer to the error (or the inverse error) on the value for a given point; 239 depending on the type of data.; 240 - If the data contains only value error (e.g. from histograms) returns a pointer to; 241 the inverse of the errors.; 242 - If the data contains errors in coordinates and value (e.g from TGraphErrors) returns a; 243 pointer to the corresponding value error (NOT the inverse).; 244 - If the data contains asymmetric errors return a pointer to the average error (NOT the inverse):; 245 0.5(eu + el).; 246 - If the data does not contain errors return a nullptr.; 247 */; 248 ; 249 const double * ErrorPtr(unsigned int ipoint) const{; 250 assert( ipoint < fMaxPoints );; 251 assert( kValueError == fErrorType || kCoordError == fErrorType ||; 252 kAsymError == fErrorType || kNoError == fErrorType );; 253 ; 254 if ( fErrorType == kNoError ); 255 return nullptr;; 256 return &fDataErrorPtr[ ipoint ];; 257 }; 258 ; 259 /// Return the error on the given point.; 260 /// Safer method returning in any case the error and not the inverse as in the; 261 /// function above.; 262 double Error( unsigned int ipoint ) const; 263 {; 264 assert( ipoint < fMaxPoints );; 265 assert( kValueError == fErrorType || kCoordError == fErrorType ||; 266 kAsymError == fErrorType || kNoError == fErrorType );; 267 ; 268 if ( fErrorType == kNoError ); 26,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8h_source.html:8236,error,error,8236,doc/master/BinData_8h_source.html,https://root.cern,https://root.cern/doc/master/BinData_8h_source.html,1,['error'],['error']
Availability," 2185 if ( (!scaledHistogram && comparisonUU) ) {; 2186 if ( ( TMath::Abs(sumBinContent1 - effEntries1) >= 1) || (TMath::Abs(sumBinContent2 - effEntries2) >= 1) ) {; 2187 Warning(""Chi2TestX"",""Both histograms are not unweighted and option UU has been requested"");; 2188 }; 2189 }; 2190 ; 2191 ; 2192 //get number of events in histogram; 2193 if (comparisonUU && scaledHistogram) {; 2194 for (Int_t i = i_start; i <= i_end; ++i) {; 2195 for (Int_t j = j_start; j <= j_end; ++j) {; 2196 for (Int_t k = k_start; k <= k_end; ++k) {; 2197 ; 2198 Int_t bin = GetBin(i, j, k);; 2199 ; 2200 Double_t cnt1 = RetrieveBinContent(bin);; 2201 Double_t cnt2 = h2->RetrieveBinContent(bin);; 2202 Double_t e1sq = GetBinErrorSqUnchecked(bin);; 2203 Double_t e2sq = h2->GetBinErrorSqUnchecked(bin);; 2204 ; 2205 if (e1sq > 0.0) cnt1 = TMath::Floor(cnt1 * cnt1 / e1sq + 0.5); // avoid rounding errors; 2206 else cnt1 = 0.0;; 2207 ; 2208 if (e2sq > 0.0) cnt2 = TMath::Floor(cnt2 * cnt2 / e2sq + 0.5); // avoid rounding errors; 2209 else cnt2 = 0.0;; 2210 ; 2211 // sum contents; 2212 sum1 += cnt1;; 2213 sum2 += cnt2;; 2214 sumw1 += e1sq;; 2215 sumw2 += e2sq;; 2216 }; 2217 }; 2218 }; 2219 if (sumw1 <= 0.0 || sumw2 <= 0.0) {; 2220 Error(""Chi2TestX"", ""Cannot use option NORM when one histogram has all zero errors"");; 2221 return 0.0;; 2222 }; 2223 ; 2224 } else {; 2225 for (Int_t i = i_start; i <= i_end; ++i) {; 2226 for (Int_t j = j_start; j <= j_end; ++j) {; 2227 for (Int_t k = k_start; k <= k_end; ++k) {; 2228 ; 2229 Int_t bin = GetBin(i, j, k);; 2230 ; 2231 sum1 += RetrieveBinContent(bin);; 2232 sum2 += h2->RetrieveBinContent(bin);; 2233 ; 2234 if ( comparisonWW ) sumw1 += GetBinErrorSqUnchecked(bin);; 2235 if ( comparisonUW || comparisonWW ) sumw2 += h2->GetBinErrorSqUnchecked(bin);; 2236 }; 2237 }; 2238 }; 2239 }; 2240 //checks that the histograms are not empty; 2241 if (sum1 == 0.0 || sum2 == 0.0) {; 2242 Error(""Chi2TestX"",""one histogram is empty"");; 2243 return 0.0;; 2244 }; 2245 ; 2246 if ( comparis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:89674,error,errors,89674,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['errors']
Availability," 223 void SetNormErrors(bool on = true) { fNormErrors= on; }; 224 ; 225 ///set parabolic errors; 226 void SetParabErrors(bool on = true) { fParabErrors = on; }; 227 ; 228 ///set Minos errors computation to be performed after fitting; 229 void SetMinosErrors(bool on = true) { fMinosErrors = on; }; 230 ; 231 ///apply the weight correction for error matrix computation; 232 void SetWeightCorrection(bool on = true) { fWeightCorr = on; }; 233 ; 234 /// set parameter indices for running Minos; 235 /// this can be used for running Minos on a subset of parameters - otherwise is run on all of them; 236 /// if MinosErrors() is set; 237 void SetMinosErrors(const std::vector<unsigned int> & paramInd ) {; 238 fMinosErrors = true;; 239 fMinosParams = paramInd;; 240 }; 241 ; 242 ///Update configuration after a fit using the FitResult; 243 void SetUpdateAfterFit(bool on = true) { fUpdateAfterFit = on; }; 244 ; 245 ; 246 /**; 247 static function to control default minimizer type and algorithm; 248 */; 249 static void SetDefaultMinimizer(const char *type, const char *algo = nullptr);; 250 ; 251 ; 252 ; 253 ; 254protected:; 255 ; 256 ; 257private:; 258 ; 259 bool fNormErrors; ///< flag for error normalization; 260 bool fParabErrors; ///< get correct parabolic errors estimate (call Hesse after minimizing); 261 bool fMinosErrors; ///< do full error analysis using Minos; 262 bool fUpdateAfterFit; ///< update the configuration after a fit using the result; 263 bool fWeightCorr; ///< apply correction to errors for weights fits; 264 ; 265 std::vector<ROOT::Fit::ParameterSettings> fSettings; ///< vector with the parameter settings; 266 std::vector<unsigned int> fMinosParams; ///< vector with the parameter indices for running Minos; 267 ; 268 ROOT::Math::MinimizerOptions fMinimizerOpts; ///< minimizer control parameters including name and algo type; 269 ; 270};; 271 ; 272 } // end namespace Fit; 273 ; 274} // end namespace ROOT; 275 ; 276 ; 277#endif /* ROOT_Fit_FitConfig */; IParamFunctionfwd.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8h_source.html:7668,error,error,7668,doc/master/FitConfig_8h_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8h_source.html,4,['error'],"['error', 'errors']"
Availability," 2342 }; 2343 ; 2344 return result;; 2345}; 2346 ; 2347////////////////////////////////////////////////////////////////////////////////; 2348/// Process message id called by obj.; 2349 ; 2350void TROOT::Message(Int_t id, const TObject *obj); 2351{; 2352 TIter next(fMessageHandlers);; 2353 TMessageHandler *mh;; 2354 while ((mh = (TMessageHandler*)next())) {; 2355 mh->HandleMessage(id,obj);; 2356 }; 2357}; 2358 ; 2359////////////////////////////////////////////////////////////////////////////////; 2360/// Process interpreter command via TApplication::ProcessLine().; 2361/// On Win32 the line will be processed asynchronously by sending; 2362/// it to the CINT interpreter thread. For explicit synchronous processing; 2363/// use ProcessLineSync(). On non-Win32 platforms there is no difference; 2364/// between ProcessLine() and ProcessLineSync().; 2365/// The possible error codes are defined by TInterpreter::EErrorCode. In; 2366/// particular, error will equal to TInterpreter::kProcessing until the; 2367/// CINT interpreted thread has finished executing the line.; 2368/// Returns the result of the command, cast to a Longptr_t.; 2369 ; 2370Longptr_t TROOT::ProcessLine(const char *line, Int_t *error); 2371{; 2372 TString sline = line;; 2373 sline = sline.Strip(TString::kBoth);; 2374 ; 2375 if (!fApplication.load()); 2376 TApplication::CreateApplication();; 2377 ; 2378 return (*fApplication).ProcessLine(sline, kFALSE, error);; 2379}; 2380 ; 2381////////////////////////////////////////////////////////////////////////////////; 2382/// Process interpreter command via TApplication::ProcessLine().; 2383/// On Win32 the line will be processed synchronously (i.e. it will; 2384/// only return when the CINT interpreter thread has finished executing; 2385/// the line). On non-Win32 platforms there is no difference between; 2386/// ProcessLine() and ProcessLineSync().; 2387/// The possible error codes are defined by TInterpreter::EErrorCode.; 2388/// Returns the result of the command, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:90017,error,error,90017,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['error'],['error']
Availability," 2563#else; 2564static void R__AddPath(TString &target, const TString &path) {; 2565 target += path;; 2566}; 2567#endif; 2568 ; 2569static void R__WriteDependencyFile(const TString & build_loc, const TString &depfilename, const TString &filename, const TString &library, const TString &libname,; 2570 const TString &extension, const char *version_var_prefix, const TString &includes, const TString &defines, const TString &incPath); 2571{; 2572 // Generate the dependency via standard output, not searching the; 2573 // standard include directories,; 2574 ; 2575#ifndef WIN32; 2576 const char * stderrfile = ""/dev/null"";; 2577#else; 2578 TString stderrfile;; 2579 AssignAndDelete( stderrfile, gSystem->ConcatFileName(build_loc,""stderr.tmp"") );; 2580#endif; 2581 TString bakdepfilename = depfilename + "".bak"";; 2582 ; 2583#ifdef WIN32; 2584 TString touch = ""echo # > ""; touch += ""\"""" + depfilename + ""\"""";; 2585#else; 2586 TString touch = ""echo > ""; touch += ""\"""" + depfilename + ""\"""";; 2587#endif; 2588 TString builddep = ""rmkdepend"";; 2589 gSystem->PrependPathName(TROOT::GetBinDir(), builddep);; 2590 builddep += "" \""-f"";; 2591 builddep += depfilename;; 2592 builddep += ""\"" -o_"" + extension + ""."" + gSystem->GetSoExt() + "" "";; 2593 if (build_loc.BeginsWith(gSystem->WorkingDirectory())) {; 2594 Int_t len = strlen(gSystem->WorkingDirectory());; 2595 if ( build_loc.Length() > (len+1) ) {; 2596 builddep += "" \""-p"";; 2597 if (build_loc[len] == '/' || build_loc[len+1] != '\\' ) {; 2598 // Since the path is now ran through TSystem::ExpandPathName the single \ is also possible.; 2599 R__AddPath(builddep, build_loc.Data() + len + 1 );; 2600 } else {; 2601 // Case of dir\\name; 2602 R__AddPath(builddep, build_loc.Data() + len + 2 );; 2603 }; 2604 builddep += ""/\"" "";; 2605 }; 2606 } else {; 2607 builddep += "" \""-p"";; 2608 R__AddPath(builddep, build_loc);; 2609 builddep += ""/\"" "";; 2610 }; 2611 builddep += "" -Y -- "";; 2612 TString rootsysInclude = TROOT::GetIncludeDir();; 2613 builddep += "" \""-I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:83239,echo,echo,83239,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,2,['echo'],['echo']
Availability," 260 ; 261 Settings::~Settings () ; 262 {; 263 }; 264 ; 265 ; 266 ; 267 ; 268 ; 269 ; 270 ; 271 ; 272 ; 273 ; 274 ; 275 ; 276 ; 277 ; 278 /** \brief action to be done when the training cycle is started (e.g. update some monitoring output); 279 *; 280 */; 281 void ClassificationSettings::startTrainCycle () ; 282 {; 283 if (fMonitoring); 284 {; 285 create (""ROC"", 100, 0, 1, 100, 0, 1);; 286 create (""Significance"", 100, 0, 1, 100, 0, 3);; 287 create (""OutputSig"", 100, 0, 1);; 288 create (""OutputBkg"", 100, 0, 1);; 289 fMonitoring->ProcessEvents ();; 290 }; 291 }; 292 ; 293 /** \brief action to be done when the training cycle is ended (e.g. update some monitoring output); 294 *; 295 */; 296 void ClassificationSettings::endTrainCycle (double /*error*/) ; 297 {; 298 if (fMonitoring) fMonitoring->ProcessEvents ();; 299 }; 300 ; 301 /** \brief action to be done after the computation of a test sample (e.g. update some monitoring output); 302 *; 303 */; 304 void ClassificationSettings::testSample (double /*error*/, double output, double target, double weight); 305 {; 306 ; 307 m_output.push_back (output);; 308 m_targets.push_back (target);; 309 m_weights.push_back (weight);; 310 }; 311 ; 312 ; 313 /** \brief action to be done when the test cycle is started (e.g. update some monitoring output); 314 *; 315 */; 316 void ClassificationSettings::startTestCycle () ; 317 {; 318 m_output.clear ();; 319 m_targets.clear ();; 320 m_weights.clear ();; 321 }; 322 ; 323 /** \brief action to be done when the training cycle is ended (e.g. update some monitoring output); 324 *; 325 */; 326 void ClassificationSettings::endTestCycle () ; 327 {; 328 if (m_output.empty ()); 329 return;; 330 double minVal = *std::min_element (begin (m_output), end (m_output));; 331 double maxVal = *std::max_element (begin (m_output), end (m_output));; 332 const size_t numBinsROC = 1000;; 333 const size_t numBinsData = 100;; 334 ; 335 std::vector<double> truePositives (numBinsROC+1, 0);; 336 std::vector<double> false",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8cxx_source.html:11734,error,error,11734,doc/master/NeuralNet_8cxx_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8cxx_source.html,1,['error'],['error']
Availability, 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Minimum Test error found - save the configuration ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Minimum Test error found - save the configuration ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimum Test error found - save the configuration ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimum Test error found - save the configuration ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimum Test error found - save the configuration ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimum Test error found - save the configuration ; : 288 | 2866.16 2052.25 0.020288 0.00183539 43354.4 0; : 289 Minimum Test error found - save the configuration ; : 289 | 2841.54 2030.76 0.0202472 0.00188865 43576.5 0; : 290 Minimum Test error found - save the configuration ; : 290 | 2817.7 2009.26 0.020243 0.00187711 43559.1 0; : 291 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:42822,error,error,42822,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability," 2778#endif; 2779 }; 2780 ; 2781 return macroPath;; 2782}; 2783 ; 2784////////////////////////////////////////////////////////////////////////////////; 2785/// Set or extend the macro search path. Static utility function.; 2786/// If newpath=0 or """" reset to value specified in the rootrc file.; 2787 ; 2788void TROOT::SetMacroPath(const char *newpath); 2789{; 2790 TString &macroPath = ROOT::GetMacroPath();; 2791 ; 2792 if (!newpath || !*newpath); 2793 macroPath = """";; 2794 else; 2795 macroPath = newpath;; 2796}; 2797 ; 2798////////////////////////////////////////////////////////////////////////////////; 2799/// Set batch mode for ROOT; 2800/// If the argument evaluates to `true`, the session does not use interactive graphics.; 2801/// If web graphics runs in server mode, the web widgets are still available via URL; 2802 ; 2803void TROOT::SetBatch(Bool_t batch); 2804{; 2805 fIsWebDisplayBatch = fBatch = batch;; 2806 if (fIsWebDisplayBatch && (fWebDisplay == ""server"")); 2807 fIsWebDisplayBatch = kFALSE;; 2808}; 2809 ; 2810////////////////////////////////////////////////////////////////////////////////; 2811/// \brief Specify where web graphics shall be rendered; 2812///; 2813/// The input parameter `webdisplay` defines where web graphics is rendered.; 2814/// `webdisplay` parameter may contain:; 2815///; 2816/// - ""firefox"": select Mozilla Firefox browser for interactive web display; 2817/// - ""chrome"": select Google Chrome browser for interactive web display; 2818/// - ""edge"": select Microsoft Edge browser for interactive web display; 2819/// - ""native"": select one of the natively-supported web browsers firefox/chrome/edge for interactive web display; 2820/// - ""qt5"": uses QWebEngine from Qt5, no real http server started (requires `qt5web` component build for ROOT); 2821/// - ""qt6"": uses QWebEngine from Qt6, no real http server started (requires `qt6web` component build for ROOT); 2822/// - ""cef"": uses Chromium Embeded Framework, no real http server started (requires `",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:106374,avail,available,106374,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['avail'],['available']
Availability," 2912////////////////////////////////////////////////////////////////////////////////; 2913/// Rebin only the Y axis; 2914/// see Rebin3D; 2915 ; 2916TH3 *TH3::RebinY(Int_t ngroup, const char *newname); 2917{; 2918 return Rebin3D(1, ngroup, 1, newname);; 2919}; 2920 ; 2921 ; 2922////////////////////////////////////////////////////////////////////////////////; 2923/// Rebin only the Z axis; 2924/// see Rebin3D; 2925 ; 2926TH3 *TH3::RebinZ(Int_t ngroup, const char *newname); 2927{; 2928 return Rebin3D(1, 1, ngroup, newname);; 2929 ; 2930}; 2931 ; 2932 ; 2933////////////////////////////////////////////////////////////////////////////////; 2934/// Rebin this histogram grouping nxgroup/nygroup/nzgroup bins along the xaxis/yaxis/zaxis together.; 2935///; 2936/// if newname is not blank a new temporary histogram hnew is created.; 2937/// else the current histogram is modified (default); 2938/// The parameter nxgroup/nygroup indicate how many bins along the xaxis/yaxis of this; 2939/// have to me merged into one bin of hnew; 2940/// If the original histogram has errors stored (via Sumw2), the resulting; 2941/// histograms has new errors correctly calculated.; 2942///; 2943/// examples: if hpxpy is an existing TH3 histogram with 40 x 40 x 40 bins; 2944/// hpxpypz->Rebin3D(); // merges two bins along the xaxis and yaxis in one in hpxpypz; 2945/// // Carefull: previous contents of hpxpy are lost; 2946/// hpxpypz->RebinX(5); //merges five bins along the xaxis in one in hpxpypz; 2947/// TH3 *hnew = hpxpypz->RebinY(5,""hnew""); // creates a new histogram hnew; 2948/// // merging 5 bins of h1 along the yaxis in one bin; 2949///; 2950/// NOTE : If nxgroup/nygroup is not an exact divider of the number of bins,; 2951/// along the xaxis/yaxis the top limit(s) of the rebinned histogram; 2952/// is changed to the upper edge of the xbin=newxbins*nxgroup resp.; 2953/// ybin=newybins*nygroup and the corresponding bins are added to; 2954/// the overflow bin.; 2955/// Statistics will be recompu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:115901,error,errors,115901,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,2,['error'],['errors']
Availability," 2; 5605///; 5606/// The option AutoDelete is set; 5607/// ~~~ {.cpp}; 5608/// TBranch *branch = T.GetBranch(""event"");; 5609/// branch->SetAddress(&event);; 5610/// branch->SetAutoDelete(true);; 5611/// for (Long64_t i=0;i<nentries;i++) {; 5612/// T.GetEntry(i);; 5613/// // the object event has been filled at this point; 5614/// }; 5615/// ~~~; 5616/// In this case, at each iteration, the object event is deleted by GetEntry; 5617/// and a new instance of Event is created and filled.; 5618///; 5619/// ## OPTION 3; 5620///; 5621/// ~~~ {.cpp}; 5622/// Same as option 1, but you delete yourself the event.; 5623///; 5624/// for (Long64_t i=0;i<nentries;i++) {; 5625/// delete event;; 5626/// event = 0; // EXTREMELY IMPORTANT; 5627/// T.GetEntry(i);; 5628/// // the object event has been filled at this point; 5629/// }; 5630/// ~~~; 5631/// It is strongly recommended to use the default option 1. It has the; 5632/// additional advantage that functions like TTree::Draw (internally calling; 5633/// TTree::GetEntry) will be functional even when the classes in the file are; 5634/// not available.; 5635///; 5636/// Note: See the comments in TBranchElement::SetAddress() for the; 5637/// object ownership policy of the underlying (user) data.; 5638 ; 5639Int_t TTree::GetEntry(Long64_t entry, Int_t getall); 5640{; 5641 // We already have been visited while recursively looking; 5642 // through the friends tree, let return; 5643 if (kGetEntry & fFriendLockStatus) return 0;; 5644 ; 5645 if (entry < 0 || entry >= fEntries) return 0;; 5646 Int_t i;; 5647 Int_t nbytes = 0;; 5648 fReadEntry = entry;; 5649 ; 5650 // create cache if wanted; 5651 if (fCacheDoAutoInit); 5652 SetCacheSizeAux();; 5653 ; 5654 Int_t nbranches = fBranches.GetEntriesUnsafe();; 5655 Int_t nb=0;; 5656 ; 5657 auto seqprocessing = [&]() {; 5658 TBranch *branch;; 5659 for (i=0;i<nbranches;i++) {; 5660 branch = (TBranch*)fBranches.UncheckedAt(i);; 5661 nb = branch->GetEntry(entry, getall);; 5662 if (nb < 0) break;; 5663 nb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:223131,avail,available,223131,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['avail'],['available']
Availability, 2; : 1070 | 2.97807 3.34364 0.0200746 0.00174903 43654.8 3; : 1071 | 3.12106 3.50221 0.0203054 0.0017782 43179.8 4; : 1072 | 2.87393 2.91962 0.020149 0.001768 43523.2 5; : 1073 | 2.90826 3.29161 0.0202848 0.00180763 43296.8 6; : 1074 | 3.06053 3.26664 0.0201588 0.00175733 43474.8 7; : 1075 Minimum Test error found - save the configuration ; : 1075 | 2.97935 2.76485 0.0202008 0.00187279 43649.1 0; : 1076 | 2.74949 3.00321 0.0203478 0.00181324 43162.6 1; : 1077 | 2.76284 3.75591 0.0207943 0.00180912 42138.1 2; : 1078 Minimum Test error found - save the configuration ; : 1078 | 3.00913 2.73577 0.0203661 0.0018517 43209.6 0; : 1079 | 2.90364 3.01716 0.0202612 0.00175591 43230.9 1; : 1080 | 2.84249 3.41706 0.0201644 0.00176658 43483.3 2; : 1081 | 2.8573 3.42383 0.0204284 0.00175777 42848.1 3; : 1082 | 2.95876 3.1107 0.0202233 0.0017991 43421.1 4; : 1083 | 3.17127 3.26207 0.0202854 0.00175889 43181.4 5; : 1084 | 2.91564 2.7548 0.0203094 0.00175846 43124.6 6; : 1085 Minimum Test error found - save the configuration ; : 1085 | 2.63022 2.66906 0.0203531 0.00186599 43273.3 0; : 1086 | 3.10333 2.86337 0.0200994 0.00175565 43611.6 1; : 1087 | 2.9523 3.05621 0.0202345 0.00180564 43410.1 2; : 1088 | 2.96621 3.82134 0.0204023 0.0017658 42926.6 3; : 1089 | 2.9107 3.10267 0.0201393 0.00176662 43542.9 4; : 1090 | 2.7802 2.77409 0.0201095 0.00176132 43601.1 5; : 1091 Minimum Test error found - save the configuration ; : 1091 | 2.70558 2.65986 0.0201114 0.00182448 43747.2 0; : 1092 | 2.6448 3.0589 0.0201057 0.00177852 43651.1 1; : 1093 | 2.72808 2.74342 0.0203461 0.00179008 43112.8 2; : 1094 | 2.90448 3.26391 0.0206789 0.00182352 42428.3 3; : 1095 | 2.99675 3.1053 0.0203677 0.00177969 43038.5 4; : 1096 | 2.82435 2.85928 0.0200663 0.00175842 43696.9 5; : 1097 | 2.94319 2.67707 0.0201699 0.00175551 43444.3 6; : 1098 | 3.07322 3.0122 0.0200534 0.00175203 43712.7 7; : 1099 | 2.83008 3.95183 0.0205372 0.0017939 42681.9 8; : 1100 | 2.67822 3.34195 0.020666 0.00184085 42496.4 9; : 1101 | 2.97,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:118705,error,error,118705,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability," 3 M installation; 3.1 M releases; To follow the current release process the user is referred to the M homepage @bib-C++MINUIT.; M was re–implemented in from 2002–2004, but the functionality is largely compatible with the one of the version. The usage is different in the sense that the re–write from to was done by its signification and not literally (with minor exceptions). Applications such as \(\mbox{MIGRAD}\) have a corresponding class MnMigrad, M “commands” became classes or methods of classes according to their purpose. Users familiar with the version of M , who have not yet used releases from the version, should however read this manual, in order to adapt to the changes as well as to discover the new features and easier ways of using old features.; 3.2 Install M using autoconf/make; For each release of M a tar.gz file is provided for downloading from the M homepage @bib-C++MINUIT. For non-UNIX platforms please refer to the M homepage.; The necessary steps to follow are:. download the tar.gz by clicking on it from the release page; unzip it:; $ unzip Minuit-x.x.x.tar.gz; untar it:; $ tar xvf Minuit-x.x.x.tar; step down to the created Minuit-x.x.x directory:; $ cd Minuit-x.x.x/; run the “configure” script:; $ ./configure; run “make” to compile the source code:; $ make; run “make check” to create the executable example:; $ make check; run the executable example:; $ tests/MnTutorial/Quad4FMain.C. The output should look like that:; Minuit did successfully converge. # of function calls: 74; minimum function value: 1.12392e-09; minimum edm: 1.12392e-09; minimum internal state vector: LAVector parameters:. -1.82079e-05; -1.20794e-05; 6.22382e-06; -3.0465e-05. minimum internal covariance matrix: LASymMatrix parameters:. 4 1 2 2.70022e-18; 1 5 3 1.87754e-17; 2 3 6 2.29467e-17; 2.70022e-18 1.87754e-17 2.29467e-17 1. # ext. || name || type || value || error +/-. 0 || x || free ||-1.821e-05 || 2; 1 || y || free ||-1.208e-05 || 2.236; 2 || z || free || 6.224e-06 || 2.449; 3",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:27753,down,download,27753,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,4,['down'],['download']
Availability," 3) option allowing to choose between the global fgFFT and a new TVirtualFFT object; """" - default, changes and returns the global fgFFT variable; ""K"" (from ""keep"")- without touching the global fgFFT,; creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; Examples of valid options: ""R2C ES K"", ""C2CF M"", ""DHT P K"", etc. TVirtualFFT* SineCosine(Int_t ndim, Int_t* n, Int_t* r2rkind, Option_t* option); Returns a pointer to a sine or cosine transform of requested size and kind. Parameters:; -ndim : number of transform dimensions; -n : sizes of each dimension (an array at least ndim long); -r2rkind : transform kind for each dimension; 4 different kinds of sine and cosine transforms are available; DCT-I - kind=0; DCT-II - kind=1; DCT-III - kind=2; DCT-IV - kind=3; DST-I - kind=4; DST-II - kind=5; DST-III - kind=6; DST-IV - kind=7; -option : consists of 2 parts - flag option and an option to create a new TVirtualFFT; - flag option: choosing how much time should be spent in planning the transform:; Possible options:; ""ES"" (from ""estimate"") - no time in preparing the transform,; but probably sub-optimal performance; ""M"" (from ""measure"") - some time spend in finding the optimal way; to do the transform; ""P"" (from ""patient"") - more time spend in finding the optimal way; to do the transform; ""EX"" (from ""exhaustive"") - the most optimal way is found; This option should be chosen depending on how many transforms of the; same size and type are going to be done.; Planning is only done once, for the first transform of this size and type.; - option allowing to choose between the global fgFFT and a new TVirtualFFT object; """" - default, changes and returns the global fgFFT variable; ""K"" (from ""keep"")- without touching the global fgFFT,; creates and returns a new TVirtualFFT*. User is then responsible for deleting it.; Examples of valid options: ""ES K"", ""EX"", etc. TVirtualFFT* GetCurrentTransform(); static: return current fgFFT. void SetTransform(TVirtualFFT* ff",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TVirtualFFT.html:11382,avail,available,11382,root/html528/TVirtualFFT.html,https://root.cern,https://root.cern/root/html528/TVirtualFFT.html,10,['avail'],['available']
Availability," 3.1, 1.e-6, -8, 0, 100);; 4164/// func->SetParLimits(3, -10, -4);; 4165/// func->FixParameter(4, 0);; 4166/// func->SetParLimits(5, 1, 1);; 4167/// ~~~; 4168///; 4169/// With this setup, parameters 0->2 can vary freely; 4170/// Parameter 3 has boundaries [-10,-4] with initial value -8; 4171/// Parameter 4 is fixed to 0; 4172/// Parameter 5 is fixed to 100.; 4173/// When the lower limit and upper limit are equal, the parameter is fixed.; 4174/// However to fix a parameter to 0, one must call the FixParameter function.; 4175///; 4176/// \anchor HFitStatBox; 4177/// ### Fit Statistics Box; 4178///; 4179/// The statistics box can display the result of the fit.; 4180/// You can change the statistics box to display the fit parameters with; 4181/// the TStyle::SetOptFit(mode) method. This mode has four digits.; 4182/// mode = pcev (default = 0111); 4183///; 4184/// v = 1; print name/values of parameters; 4185/// e = 1; print errors (if e=1, v must be 1); 4186/// c = 1; print Chisquare/Number of degrees of freedom; 4187/// p = 1; print Probability; 4188///; 4189/// For example: gStyle->SetOptFit(1011);; 4190/// prints the fit probability, parameter names/values, and errors.; 4191/// You can change the position of the statistics box with these lines; 4192/// (where g is a pointer to the TGraph):; 4193///; 4194/// TPaveStats *st = (TPaveStats*)g->GetListOfFunctions()->FindObject(""stats"");; 4195/// st->SetX1NDC(newx1); //new x start position; 4196/// st->SetX2NDC(newx2); //new x end position; 4197///; 4198/// \anchor HFitExtra; 4199/// ### Additional Notes on Fitting; 4200///; 4201/// #### Fitting a histogram of dimension N with a function of dimension N-1; 4202///; 4203/// It is possible to fit a TH2 with a TF1 or a TH3 with a TF2.; 4204/// In this case the chi-square is computed from the squared error distance between the function values and the bin centers weighted by the bin content.; 4205/// For correct error scaling, the obtained parameter error are corrected as in the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:172296,error,errors,172296,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,2,['error'],['errors']
Availability," 310 of file TRegexp.cxx. ◆ ToLower(). void TString::ToLower ; (; ). Change string to lower-case. ; Definition at line 1182 of file TString.cxx. ◆ ToUpper(). void TString::ToUpper ; (; ). Change string to upper case. ; Definition at line 1195 of file TString.cxx. ◆ UItoa(). TString TString::UItoa ; (; UInt_t ; value, . Int_t ; base . ). static . Converts a UInt_t (twice the range of an Int_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2119 of file TString.cxx. ◆ ULLtoa(). TString TString::ULLtoa ; (; ULong64_t ; value, . Int_t ; base . ). static . Converts a ULong64_t (twice the range of an Long64_t) to a TString with respect to the base specified (2-36). ; Thus it is an enhanced version of sprintf (adapted from versions 0.4 of http://www.jb.man.ac.uk/~slowe/cpp/itoa.html). In case of error returns the ""!"" string. ; Definition at line 2171 of file TString.cxx. ◆ UnLink(). void TString::UnLink ; (; ); const. inlineprivate . Definition at line 263 of file TString.h. ◆ View(). std::string_view TString::View ; (; ); const. inline . Definition at line 452 of file TString.h. ◆ WriteString(). void TString::WriteString ; (; TBuffer & ; b, . const TString * ; a . ). static . Write TString object to buffer. ; Simplified version of TBuffer::WriteObject (does not keep track of multiple references to the same string). We need to have it here because TBuffer::ReadObject can only handle descendant of TObject ; Definition at line 1428 of file TString.cxx. ◆ Zero(). void TString::Zero ; (; ). inlineprivate . Definition at line 264 of file TString.h. Friends And Related Symbol Documentation. ◆ operator+ [1/11]. TString operator+ ; (; char ; c, . const TString & ; s . ). friend . Add string to char. ; Definition at line 1557 of file TString.cxx. ◆ operator+ [2/11]. TString operator+ ; (; const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTString.html:56948,error,error,56948,doc/v632/classTString.html,https://root.cern,https://root.cern/doc/v632/classTString.html,2,['error'],['error']
Availability, 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum Test error found - save the configuration ; : 327 | 2044.89 1339.01 0.0203662 0.00185106 43207.9 0; : 328 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:47020,error,error,47020,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability," 3129/// Offsets are non-zero for base-class sub-branches that are; 3130/// not the leftmost direct base class. They are laid out in; 3131/// memory sequentially and only the leftmost direct base class; 3132/// has the same address as the derived class. The streamer; 3133/// offsets need to be added to the address of the base class; 3134/// subobject which is not the same as the address of the; 3135/// derived class for the non-leftmost direct base classes.; 3136 ; 3137void TBranchElement::InitializeOffsets(); 3138{; 3139 Int_t nbranches = fBranches.GetEntriesFast();; 3140 ; 3141 // See https://sft.its.cern.ch/jira/browse/ROOT-8742; 3142 // and https://sft.its.cern.ch/jira/browse/ROOT-9253; 3143 // As of commit e21b4f1a3b, removing this lock lead to a failure; 3144 // in the test testSetAddress[Loop].; 3145 // As of commit 4f8b237849, removing this lock does not lead to; 3146 // a visible failure in test. This might be due to the underlying; 3147 // problem (missing lock or ?) being solved somewhere else or some; 3148 // other perturbation reducing the failure rate.; 3149 // Having the lock here is not too costly as InitializeOffsets is; 3150 // one called once in the lifetime of the TBranch.; 3151 R__LOCKGUARD(gInterpreterMutex);; 3152 ; 3153 if (fID < 0) {; 3154 // -- We are a top-level branch. Let's mark whether we need to use MapObject.; 3155 if (CanSelfReference(fBranchClass)) {; 3156 if (fBranchClass.GetClass()->IsTObject()) {; 3157 SetBit(kBranchObject);; 3158 } else {; 3159 SetBit(kBranchAny);; 3160 }; 3161 }; 3162 }; 3163 if (nbranches) {; 3164 // Allocate space for the new sub-branch offsets.; 3165 delete[] fBranchOffset;; 3166 fBranchOffset = nullptr;; 3167 fBranchOffset = new Int_t[nbranches];; 3168 // Make sure we can instantiate our class meta info.; 3169 if (!fBranchClass.GetClass()) {; 3170 Warning(""InitializeOffsets"", ""No branch class set for branch: %s"", GetName());; 3171 fInitOffsets = true;; 3172 return;; 3173 }; 3174 // Make sure we can instanti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TBranchElement_8cxx_source.html:112191,failure,failure,112191,doc/master/TBranchElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TBranchElement_8cxx_source.html,1,['failure'],['failure']
Availability," 333 ; 334 ; 335 // check if Error option (run Hesse and Minos) then; 336 if (fitOption.Errors) {; 337 // run Hesse and Minos; 338 fitConfig.SetParabErrors(true);; 339 fitConfig.SetMinosErrors(true);; 340 }; 341 ; 342 ; 343 // do fitting; 344 ; 345#ifdef DEBUG; 346 if (fitOption.Like) printf(""do likelihood fit...\n"");; 347 if (linear) printf(""do linear fit...\n"");; 348 printf(""do now fit...\n"");; 349#endif; 350 ; 351 bool fitok = false;; 352 ; 353 ; 354 // check if can use option user; 355 TVirtualFitter::FCNFunc_t userFcn = nullptr;; 356 // option user is enabled only when running in serial mode; 357 if (fitOption.User && TVirtualFitter::GetFitter() ) {; 358 userFcn = (TVirtualFitter::GetFitter())->GetFCN();; 359 (TVirtualFitter::GetFitter())->SetUserFunc(f1);; 360 }; 361 ; 362 ; 363 if (fitOption.User && userFcn) // user provided fit objective function; 364 fitok = fitter->FitFCN( userFcn );; 365 else if (fitOption.Like) {// likelihood fit; 366 // perform a weighted likelihood fit by applying weight correction to errors; 367 bool weight = ((fitOption.Like & 2) == 2);; 368 fitConfig.SetWeightCorrection(weight);; 369 bool extended = ((fitOption.Like & 4 ) != 4 );; 370 //if (!extended) Info(""HFitImpl"",""Do a not -extended binned fit"");; 371 ; 372 // pass fitdata as a shared pointer so ownership is shared with Fitter and FitResult class; 373 fitok = fitter->LikelihoodFit(fitdata, extended, fitOption.ExecPolicy);; 374 }; 375 else{ // standard least square fit; 376 fitok = fitter->Fit(fitdata, fitOption.ExecPolicy);; 377 }; 378 if ( !fitok && !fitOption.Quiet ); 379 Warning(""Fit"",""Abnormal termination of minimization."");; 380 iret |= !fitok;; 381 ; 382 ; 383 const ROOT::Fit::FitResult & fitResult = fitter->Result();; 384 // one could set directly the fit result in TF1; 385 iret = fitResult.Status();; 386 if (!fitResult.IsEmpty() ) {; 387 // set in f1 the result of the fit; 388 f1->SetChisquare(fitResult.Chi2() );; 389 f1->SetNDF(fitResult.Ndf() );; 390 f1->SetNumberFitPo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitImpl_8cxx_source.html:13911,error,errors,13911,doc/master/HFitImpl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitImpl_8cxx_source.html,1,['error'],['errors']
Availability," 3446 ""regex"",; 3447 ""thread""};; 3448 if ( unsupportedClassesNormNames.count(name) == 1) return false;; 3449 auto pos = find_if(uclNamePrfxes.begin(),; 3450 uclNamePrfxes.end(),; 3451 [&](const std::string& str){return ROOT::TMetaUtils::BeginsWith(name,str);});; 3452 return uclNamePrfxes.end() == pos;; 3453}; 3454 ; 3455////////////////////////////////////////////////////////////////////////////////; 3456/// Check if the list of selected classes contains any class which is not; 3457/// supported. Return the number of unsupported classes in the selection.; 3458 ; 3459int CheckForUnsupportedClasses(const RScanner::ClassColl_t &annotatedRcds); 3460{; 3461 int nerrors = 0;; 3462 for (auto&& aRcd : annotatedRcds){; 3463 auto clName = aRcd.GetNormalizedName();; 3464 if (!IsSupportedClassName(clName)){; 3465 std::cerr << ""Error: Class "" << clName << "" has been selected but ""; 3466 << ""currently the support for its I/O is not yet available. Note that ""; 3467 << clName << "", even if not selected, will be available for ""; 3468 << ""interpreted code.\n"";; 3469 nerrors++;; 3470 }; 3471 if (!NeedsSelection(clName)){; 3472 std::cerr << ""Error: It is not necessary to explicitly select class ""; 3473 << clName << "". I/O is supported for it transparently.\n"";; 3474 nerrors++;; 3475 }; 3476 }; 3477 return nerrors;; 3478}; 3479 ; 3480////////////////////////////////////////////////////////////////////////////////; 3481 ; 3482class TRootClingCallbacks : public cling::InterpreterCallbacks {; 3483private:; 3484 std::list<std::string>& fFilesIncludedByLinkdef;; 3485 bool isLocked = false;; 3486public:; 3487 TRootClingCallbacks(cling::Interpreter* interp, std::list<std::string>& filesIncludedByLinkdef):; 3488 InterpreterCallbacks(interp),; 3489 fFilesIncludedByLinkdef(filesIncludedByLinkdef){};; 3490 ; 3491 ~TRootClingCallbacks(){};; 3492 ; 3493 void InclusionDirective(clang::SourceLocation /*HashLoc*/, const clang::Token & /*IncludeTok*/,; 3494 llvm::StringRef FileName, bool IsAngled, clang",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:137896,avail,available,137896,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,1,['avail'],['available']
Availability," 3503 }; 3504 ; 3505 std::ostringstream oss2 ;; 3506 printStream(oss2,kName|kClassName|kArgs,kInline) ;; 3507 ; 3508 if (evalErrorData().mode == PrintErrors) {; 3509 coutE(Eval) << ""RooAbsReal::logEvalError("" << GetName() << "") evaluation error, "" << std::endl; 3510 << "" origin : "" << oss2.str() << std::endl; 3511 << "" message : "" << ee._msg << std::endl; 3512 << "" server values: "" << ee._srvval << std::endl ;; 3513 } else if (evalErrorData().mode == CollectErrors) {; 3514 auto &evalErrorList = evalErrorData().errorList[this];; 3515 if (evalErrorList.second.size() >= 2048) {; 3516 // avoid overflowing the error list, so if there are very many, print; 3517 // the oldest one first, and pop it off the list; 3518 const EvalError& oee = evalErrorList.second.front();; 3519 // print to debug stream, since these would normally be suppressed, and; 3520 // we do not want to increase the error count in the message service...; 3521 ccoutD(Eval) << ""RooAbsReal::logEvalError("" << GetName(); 3522 << "") delayed evaluation error, "" << std::endl; 3523 << "" origin : "" << oss2.str() << std::endl; 3524 << "" message : "" << oee._msg << std::endl; 3525 << "" server values: "" << oee._srvval << std::endl ;; 3526 evalErrorList.second.pop_front();; 3527 }; 3528 evalErrorList.first = oss2.str() ;; 3529 evalErrorList.second.push_back(ee) ;; 3530 }; 3531 ; 3532 inLogEvalError = false ;; 3533 //coutE(Tracing) << ""RooAbsReal::logEvalError("" << GetName() << "") message = "" << message << std::endl ;; 3534}; 3535 ; 3536 ; 3537 ; 3538 ; 3539////////////////////////////////////////////////////////////////////////////////; 3540/// Clear the stack of evaluation error messages; 3541 ; 3542void RooAbsReal::clearEvalErrorLog(); 3543{; 3544 if (evalErrorData().mode == PrintErrors) {; 3545 return ;; 3546 } else if (evalErrorData().mode == CollectErrors) {; 3547 evalErrorData().errorList.clear() ;; 3548 } else {; 3549 evalErrorData().count = 0 ;; 3550 }; 3551}; 3552 ; 3553 ; 3554///////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:150758,error,error,150758,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['error'],['error']
Availability," 3549////////////////////////////////////////////////////////////////////////////////; 3550/// Load a macro file in cling's memory.; 3551 ; 3552void TCling::LoadMacro(const char* filename, EErrorCode* error); 3553{; 3554 ProcessLine(Form("".L %s"", filename), error);; 3555}; 3556 ; 3557////////////////////////////////////////////////////////////////////////////////; 3558/// Let cling process a command line asynch.; 3559 ; 3560Longptr_t TCling::ProcessLineAsynch(const char* line, EErrorCode* error); 3561{; 3562 return ProcessLine(line, error);; 3563}; 3564 ; 3565////////////////////////////////////////////////////////////////////////////////; 3566/// Let cling process a command line synchronously, i.e we are waiting; 3567/// it will be finished.; 3568 ; 3569Longptr_t TCling::ProcessLineSynch(const char* line, EErrorCode* error); 3570{; 3571 R__LOCKGUARD_CLING(fLockProcessLine ? gInterpreterMutex : nullptr);; 3572 if (gApplication) {; 3573 if (gApplication->IsCmdThread()) {; 3574 return ProcessLine(line, error);; 3575 }; 3576 return 0;; 3577 }; 3578 return ProcessLine(line, error);; 3579}; 3580 ; 3581////////////////////////////////////////////////////////////////////////////////; 3582/// Directly execute an executable statement (e.g. ""func()"", ""3+5"", etc.; 3583/// however not declarations, like ""Int_t x;"").; 3584 ; 3585Longptr_t TCling::Calc(const char* line, EErrorCode* error); 3586{; 3587#ifdef R__WIN32; 3588 // Test on ApplicationImp not being 0 is needed because only at end of; 3589 // TApplication ctor the IsLineProcessing flag is set to 0, so before; 3590 // we can not use it.; 3591 if (gApplication && gApplication->GetApplicationImp()) {; 3592 while (gROOT->IsLineProcessing() && !gApplication) {; 3593 Warning(""Calc"", ""waiting for cling thread to free"");; 3594 gSystem->Sleep(500);; 3595 }; 3596 gROOT->SetLineIsProcessing();; 3597 }; 3598#endif // R__WIN32; 3599 R__LOCKGUARD_CLING(gInterpreterMutex);; 3600 if (error) {; 3601 *error = TInterpreter::kNoError;; 3602 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:138870,error,error,138870,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,3,['error'],['error']
Availability," 3598 goto L99;; 3599 }; 3600//______________________________________________________________________________; 3601//; 3602// Command MINIMIZE; 3603//; 3604 if( !strncmp(comd.Data(),""MINI"",4) ) {; 3605 Printf("" ***>MINImize [maxcalls] [tolerance]"");; 3606 Printf("" Causes minimization of the function by the method of Migrad,"");; 3607 Printf("" as does the MIGrad command, but switches to the SIMplex method"");; 3608 Printf("" if Migrad fails to converge. Arguments are as for MIGrad."");; 3609 Printf("" Note that command requires four characters to be unambiguous."");; 3610 goto L99;; 3611 }; 3612//______________________________________________________________________________; 3613//; 3614// Command MINOS; 3615//; 3616 if( !strncmp(comd.Data(),""MIN0"",4) ) {; 3617 Printf("" ***>MINOs [maxcalls] [parno] [parno] ..."");; 3618 Printf("" Causes a Minos error analysis to be performed on the parameters"");; 3619 Printf("" whose numbers [parno] are specified. If none are specified,"");; 3620 Printf("" Minos errors are calculated for all variable parameters."");; 3621 Printf("" Minos errors may be expensive to calculate, but are very"");; 3622 Printf("" reliable since they take account of non-linearities in the"");; 3623 Printf("" problem as well as parameter correlations, and are in general"");; 3624 Printf("" asymmetric."");; 3625 Printf("" The optional argument [maxcalls] specifies the (approximate)"");; 3626 Printf("" maximum number of function calls per parameter requested,"");; 3627 Printf("" after which the calculation will stop for that parameter."");; 3628 goto L99;; 3629 }; 3630//______________________________________________________________________________; 3631//; 3632// Command MNCONTOUR; 3633//; 3634 if( !strncmp(comd.Data(),""MNC"",3) ) {; 3635 Printf("" ***>MNContour <par1> <par2> [npts]"");; 3636 Printf("" Calculates one function contour of FCN with respect to"");; 3637 Printf("" parameters par1 and par2, with FCN minimized always with"");; 3638 Printf("" respect to all other NPAR-2 variable param",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:116987,error,errors,116987,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['error'],['errors']
Availability," 367#### TGraphAsymmErrors; 368A `TGraphAsymmErrors` is like a `TGraphErrors` but the errors; 369defined along X and Y are not symmetric: The left and right errors are; 370different along X and the bottom and up errors are different along Y.; 371 ; 372Begin_Macro(source); 373{; 374 auto c44 = new TCanvas(""c44"",""c44"",200,10,600,400);; 375 double ax[] = {0, 1, 2, 3, 4};; 376 double ay[] = {0, 2, 4, 1, 3};; 377 double aexl[] = {0.1, 0.2, 0.3, 0.4, 0.5};; 378 double aexh[] = {0.5, 0.4, 0.3, 0.2, 0.1};; 379 double aeyl[] = {1, 0.5, 1, 0.5, 1};; 380 double aeyh[] = {0.5, 1, 0.5, 1, 0.5};; 381 auto gae = new TGraphAsymmErrors(5, ax, ay, aexl, aexh, aeyl, aeyh);; 382 gae->SetTitle(""Not symmetric errors"");; 383 gae->SetFillColor(2);; 384 gae->SetFillStyle(3001);; 385 gae->Draw(""a2"");; 386 gae->Draw(""p"");; 387}; 388End_Macro; 389 ; 390 ; 391\anchor GrP3c; 392#### TGraphBentErrors; 393A `TGraphBentErrors` is like a `TGraphAsymmErrors`.; 394An extra parameter allows to bend the error bars to better see them; 395when several graphs are drawn on the same plot.; 396 ; 397Begin_Macro(source); 398{; 399 auto c45 = new TCanvas(""c45"",""c45"",200,10,600,400);; 400 const Int_t n = 10;; 401 Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; 402 Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; 403 Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; 404 Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; 405 Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; 406 Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; 407 Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; 408 Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; 409 Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; 410 Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; 411 auto gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; 412 gr->SetTitle(""A graph with bend errors"");; 413 gr->SetMarkerColor(4);; 414 gr->SetMarkerStyle(21);; 415 gr->Draw(""ALP"");; 416",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPainter_8cxx_source.html:14997,error,error,14997,doc/master/TGraphPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPainter_8cxx_source.html,1,['error'],['error']
Availability," 391 Longptr_t retval = 0;; 392 Int_t error = 0;; 393 volatile Bool_t needGetlinemInit = kFALSE;; 394 ; 395 if (strlen(WorkingDirectory())) {; 396 // if directory specified as argument make it the working directory; 397 gSystem->ChangeDirectory(WorkingDirectory());; 398 TSystemDirectory *workdir = new TSystemDirectory(""workdir"", gSystem->WorkingDirectory());; 399 TObject *w = gROOT->GetListOfBrowsables()->FindObject(""workdir"");; 400 TObjLink *lnk = gROOT->GetListOfBrowsables()->FirstLink();; 401 while (lnk) {; 402 if (lnk->GetObject() == w) {; 403 lnk->SetObject(workdir);; 404 lnk->SetOption(gSystem->WorkingDirectory());; 405 break;; 406 }; 407 lnk = lnk->Next();; 408 }; 409 delete w;; 410 }; 411 ; 412 // Process shell command line input files; 413 if (InputFiles()) {; 414 // Make sure that calls into the event loop; 415 // ignore end-of-file on the terminal.; 416 fInputHandler->DeActivate();; 417 TIter next(InputFiles());; 418 RETRY {; 419 retval = 0; error = 0;; 420 Int_t nfile = 0;; 421 while (TObject *fileObj = next()) {; 422 if (dynamic_cast<TNamed*>(fileObj)) {; 423 // A file that TApplication did not find. Note the error.; 424 retval = 1;; 425 continue;; 426 }; 427 TObjString *file = (TObjString *)fileObj;; 428 char cmd[kMAXPATHLEN+50];; 429 if (!fNcmd); 430 printf(""\n"");; 431 Bool_t rootfile = kFALSE;; 432 ; 433 if (file->TestBit(kExpression)) {; 434 snprintf(cmd, kMAXPATHLEN+50, ""%s"", (const char*)file->String());; 435 } else {; 436 if (file->String().EndsWith("".root"") || file->String().BeginsWith(""file:"")) {; 437 rootfile = kTRUE;; 438 } else {; 439 rootfile = gROOT->IsRootFile(file->String());; 440 }; 441 if (rootfile) {; 442 // special trick to be able to open files using UNC path names; 443 if (file->String().BeginsWith(""\\\\"")); 444 file->String().Prepend(""\\\\"");; 445 file->String().ReplaceAll(""\\"",""/"");; 446 const char *rfile = (const char*)file->String();; 447 Printf(""Attaching file %s as _file%d..."", rfile, nfile);; 448 snprintf(cmd, kMAXPATHLEN+50,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRint_8cxx_source.html:14637,error,error,14637,doc/master/TRint_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRint_8cxx_source.html,1,['error'],['error']
Availability," 3952////////////////////////////////////////////////////////////////////////////////; 3953/// Return the command line use to make a shared library.; 3954/// See TSystem::CompileMacro for more details.; 3955 ; 3956const char *TSystem::GetMakeSharedLib() const; 3957{; 3958 return fMakeSharedLib;; 3959}; 3960 ; 3961////////////////////////////////////////////////////////////////////////////////; 3962/// Return the command line use to make an executable.; 3963/// See TSystem::CompileMacro for more details.; 3964 ; 3965const char *TSystem::GetMakeExe() const; 3966{; 3967 return fMakeExe;; 3968}; 3969 ; 3970////////////////////////////////////////////////////////////////////////////////; 3971/// Get the list of include path.; 3972 ; 3973const char *TSystem::GetIncludePath(); 3974{; 3975 fListPaths = fIncludePath;; 3976#ifndef _MSC_VER; 3977 // FIXME: This is a temporary fix for the following error with ACLiC; 3978 // (and this is apparently not needed anyway):; 3979 // 48: input_line_12:8:38: error: use of undeclared identifier 'IC'; 3980 // 48: ""C:/Users/bellenot/build/debug/etc"" -IC:/Users/bellenot/build/debug/etc//cling -IC:/Users/bellenot/build/debug/include"""",; 3981 // 48: ^; 3982 // 48: Error in <ACLiC>: Dictionary generation failed!; 3983 fListPaths.Append("" "").Append(gInterpreter->GetIncludePath());; 3984#endif; 3985 return fListPaths;; 3986}; 3987 ; 3988////////////////////////////////////////////////////////////////////////////////; 3989/// Return the list of library linked to this executable.; 3990/// See TSystem::CompileMacro for more details.; 3991 ; 3992const char *TSystem::GetLinkedLibs() const; 3993{; 3994 return fLinkedLibs;; 3995}; 3996 ; 3997////////////////////////////////////////////////////////////////////////////////; 3998/// Return the linkdef suffix chosen by the user for ACLiC.; 3999/// See TSystem::CompileMacro for more details.; 4000 ; 4001const char *TSystem::GetLinkdefSuffix() const; 4002{; 4003 if (fLinkdefSuffix.Length()==0) {; 4004 if (!gE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:134809,error,error,134809,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,2,['error'],['error']
Availability, 3; : 760 | 16.1221 19.4686 0.0200628 0.00175006 43685.5 4; : 761 Minimum Test error found - save the configuration ; : 761 | 15.7828 18.8348 0.0201031 0.00181849 43752.5 0; : 762 | 15.5545 19.1688 0.0200359 0.00175521 43762.1 1; : 763 Minimum Test error found - save the configuration ; : 763 | 15.3589 18.6297 0.0200894 0.00181179 43769.4 0; : 764 Minimum Test error found - save the configuration ; : 764 | 15.3977 18.5678 0.0201039 0.0018081 43725.8 0; : 765 | 15.238 19.0685 0.0200523 0.00175459 43721.4 1; : 766 Minimum Test error found - save the configuration ; : 766 | 14.9634 18.5633 0.0200937 0.00181207 43759.7 0; : 767 Minimum Test error found - save the configuration ; : 767 | 14.6611 18.2211 0.0200896 0.00180918 43762.7 0; : 768 Minimum Test error found - save the configuration ; : 768 | 14.4892 18.1817 0.0200772 0.00181141 43797.6 0; : 769 Minimum Test error found - save the configuration ; : 769 | 14.3366 17.8635 0.0200909 0.00180773 43756.2 0; : 770 Minimum Test error found - save the configuration ; : 770 | 14.5733 17.5465 0.0200968 0.00180191 43728 0; : 771 | 13.9827 17.8429 0.0200367 0.0017469 43740.1 1; : 772 Minimum Test error found - save the configuration ; : 772 | 14.2497 17.3556 0.0201068 0.00181254 43729.6 0; : 773 | 14.0413 17.7428 0.020033 0.00175319 43764.2 1; : 774 Minimum Test error found - save the configuration ; : 774 | 13.9671 16.982 0.020108 0.00180715 43713.8 0; : 775 | 13.7965 17.224 0.0200334 0.0017548 43767 1; : 776 | 13.601 17.9652 0.0200139 0.00175385 43811.5 2; : 777 | 14.0445 17.0226 0.0200253 0.00175316 43782.5 3; : 778 Minimum Test error found - save the configuration ; : 778 | 13.4936 16.5395 0.0200845 0.00181482 43788.4 0; : 779 | 13.0033 16.7495 0.0200505 0.00176209 43743.6 1; : 780 | 12.772 17.4981 0.0200745 0.00176104 43683.8 2; : 781 Minimum Test error found - save the configuration ; : 781 | 12.7689 16.2598 0.0201132 0.00182368 43740.8 0; : 782 | 12.7687 16.3043 0.0200467 0.00175214 43728.9 1; : 783 Minimum Test error f,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:95818,error,error,95818,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability," 41 std::vector<TAttFill> fAttFill; ///< The AttFill attributes of the different errors; 42 std::vector<TAttLine> fAttLine; ///< The AttLine attributes of the different errors; 43 ; 44 Double_t **Allocate(Int_t size) override;; 45 Bool_t CtorAllocate();; 46 ; 47 void CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin) override;; 48 Bool_t CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend, Int_t obegin) override;; 49 void FillZero(Int_t begin, Int_t end, Bool_t from_ctor = kTRUE) override;; 50 ; 51 void CalcYErrorsSum() const;; 52 Bool_t DoMerge(const TGraph *tg) override;; 53 void SwapPoints(Int_t pos1, Int_t pos2) override;; 54 void UpdateArrays(const std::vector<Int_t> &sorting_indices, Int_t numSortedPoints, Int_t low) override;; 55 ; 56public:; 57 enum ESummationModes {; 58 kOnlyFirst = 0, ///< Only take errors from first dimension; 59 kSquareSum = 1, ///< Calculate the square sum of all errors; 60 kAbsSum = 2 ///< Calculate the absolute sum of all errors; 61 };; 62 ; 63 TGraphMultiErrors();; 64 TGraphMultiErrors(const Char_t *name, const Char_t *title);; 65 TGraphMultiErrors(Int_t np, Int_t ne = 1);; 66 TGraphMultiErrors(const Char_t *name, const Char_t *title, Int_t np, Int_t ne = 1);; 67 ; 68 TGraphMultiErrors(Int_t np, const Float_t *x, const Float_t *y, const Float_t *exL = nullptr,; 69 const Float_t *exH = nullptr, const Float_t *eyL = nullptr, const Float_t *eyH = nullptr,; 70 Int_t m = kOnlyFirst);; 71 TGraphMultiErrors(const Char_t *name, const Char_t *title, Int_t np, const Float_t *x, const Float_t *y,; 72 const Float_t *exL = nullptr, const Float_t *exH = nullptr, const Float_t *eyL = nullptr,; 73 const Float_t *eyH = nullptr, Int_t m = kOnlyFirst);; 74 TGraphMultiErrors(Int_t np, const Double_t *x, const Double_t *y, const Double_t *exL = nullptr,; 75 const Double_t *exH = nullptr, const Double_t *eyL = nullptr, const Double_t *eyH = nullptr,; 76 Int_t m = kOnlyFirst);; 77 TGraphMultiErrors(const Char_t *name, const Char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8h_source.html:2779,error,errors,2779,doc/master/TGraphMultiErrors_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8h_source.html,1,['error'],['errors']
Availability," 42 grP1->SetMarkerStyle(20);; 43 grP1->SetMarkerSize(2.);; 44 grP1->SetMarkerColor(4);; 45 grP1->SetLineColor(2);; 46 grP1->SetLineWidth(3);; 47 grP1->Draw(""PE"");; 48 ; 49 // Update, otherwise GetPolargram returns 0; 50 CPol->Update();; 51 grP1->GetPolargram()->SetToRadian();; 52 ; 53 return CPol;; 54}; 55End_Macro; 56*/; 57 ; 58#include ""TGraphPolar.h""; 59#include ""TGraphPolargram.h""; 60 ; 61ClassImp(TGraphPolar);; 62 ; 63////////////////////////////////////////////////////////////////////////////////; 64/// TGraphPolar default constructor.; 65 ; 66TGraphPolar::TGraphPolar() : TGraphErrors(),; 67 fOptionAxis(kFALSE),fPolargram(nullptr),fXpol(nullptr),fYpol(nullptr); 68{; 69}; 70 ; 71////////////////////////////////////////////////////////////////////////////////; 72/// TGraphPolar constructor.; 73///; 74/// \param[in] n number of points.; 75/// \param[in] theta angular values.; 76/// \param[in] r radial values.; 77/// \param[in] etheta errors on angular values.; 78/// \param[in] er errors on radial values.; 79 ; 80TGraphPolar::TGraphPolar(Int_t n, const Double_t* theta, const Double_t* r,; 81 const Double_t *etheta, const Double_t* er); 82 : TGraphErrors(n,theta,r,etheta,er),; 83 fOptionAxis(kFALSE),fPolargram(nullptr),fXpol(nullptr),fYpol(nullptr); 84{; 85 SetEditable(kFALSE);; 86}; 87 ; 88////////////////////////////////////////////////////////////////////////////////; 89/// TGraphPolar destructor.; 90 ; 91TGraphPolar::~TGraphPolar(); 92{; 93 delete [] fXpol;; 94 delete [] fYpol;; 95}; 96 ; 97////////////////////////////////////////////////////////////////////////////////; 98/// Draw TGraphPolar.; 99 ; 100void TGraphPolar::Draw(Option_t* options); 101{; 102 // Process options; 103 TString opt = options;; 104 opt.ToUpper();; 105 ; 106 // Ignore same; 107 opt.ReplaceAll(""SAME"","""");; 108 ; 109 // ReDraw polargram if required by options; 110 if (opt.Contains(""A"")) fOptionAxis = kTRUE;; 111 opt.ReplaceAll(""A"","""");; 112 ; 113 AppendPad(opt);; 114}; 115 ; 116//////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPolar_8cxx_source.html:2442,error,errors,2442,doc/master/TGraphPolar_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPolar_8cxx_source.html,1,['error'],['errors']
Availability," 421 //Int_t font=72; // Helvetica italics; 422 Int_t font=42; // Helvetica; 423 Double_t tsize=0.05;; 424 SetTextFont(font);; 425 SetTextSize(tsize);; 426 ; 427 SetLabelFont(font,""x"");; 428 SetTitleFont(font,""x"");; 429 SetLabelFont(font,""y"");; 430 SetTitleFont(font,""y"");; 431 SetLabelFont(font,""z"");; 432 SetTitleFont(font,""z"");; 433 ; 434 SetLabelSize(tsize,""x"");; 435 SetTitleSize(.065,""x"");; 436 SetLabelSize(tsize,""y"");; 437 SetTitleSize(.065,""y"");; 438 SetLabelSize(tsize,""z"");; 439 SetTitleSize(.065,""z"");; 440 ; 441 SetTitleOffset(1.1,""x"");; 442 SetTitleOffset(1.1,""y"");; 443 SetTitleOffset(1.1,""z"");; 444 ; 445 SetLabelOffset(0.015,""x"");; 446 SetLabelOffset(0.015,""y"");; 447 SetLabelOffset(0.015,""z"");; 448 ; 449 SetTickLength(0.03,""x"");; 450 SetTickLength(0.02,""y""); // This way we slightly achieve equal length ticks for x and y; 451 ; 452 // use bold lines and markers; 453 SetMarkerStyle(20);; 454 SetMarkerSize(0.9);; 455 SetHistLineWidth(2);; 456 SetLineStyleString(2,""[12 12]""); // postscript dashes; 457 ; 458 // get rid of X error bars; 459 SetErrorX(0.001);; 460 // get rid of error bar caps; 461 SetEndErrorSize(0.);; 462 ; 463 // do not display any of the standard histogram decorations; 464 SetOptTitle(0);; 465 SetOptStat(0);; 466 SetOptFit(0);; 467 ; 468 // put tick marks on top and RHS of plots; 469 SetPadTickX(0);; 470 SetPadTickY(0);; 471 ; 472 SetFrameLineWidth(2);; 473 }; 474}; 475 ; 476////////////////////////////////////////////////////////////////////////////////; 477/// Destructor.; 478 ; 479TStyle::~TStyle(); 480{; 481 R__LOCKGUARD(gROOTMutex);; 482 gROOT->GetListOfStyles()->Remove(this);; 483 if (gStyle == this) gStyle = (TStyle*)gROOT->GetListOfStyles()->Last();; 484}; 485 ; 486////////////////////////////////////////////////////////////////////////////////; 487/// Copy constructor; 488 ; 489TStyle::TStyle(const TStyle &style) : TNamed(style), TAttLine(style), TAttFill(style), TAttMarker(style), TAttText(style); 490{; 491 style.TStyle::Copy(*this);;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStyle_8cxx_source.html:13511,error,error,13511,doc/master/TStyle_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStyle_8cxx_source.html,1,['error'],['error']
Availability," 425 ; 426//---- ClassDefT macros for templates with two template arguments --------------; 427// ClassDef2T2 goes in the same header as ClassDefT but must be; 428// outside the class scope; 429// ClassImp2T corresponds to ClassImpT; 430 ; 431#define ClassDef2T2(name,Tmpl1,Tmpl2); 432#define ClassImp2T(name,Tmpl1,Tmpl2) templateClassImp(name); 433 ; 434 ; 435//---- ClassDefT macros for templates with three template arguments ------------; 436// ClassDef3T2 goes in the same header as ClassDefT but must be; 437// outside the class scope; 438// ClassImp3T corresponds to ClassImpT; 439 ; 440#define ClassDef3T2(name,Tmpl1,Tmpl2,Tmpl3); 441#define ClassImp3T(name,Tmpl1,Tmpl2,Tmpl3) templateClassImp(name); 442 ; 443 ; 444//---- Macro to set the class version of non instrumented classes --------------; 445 ; 446#define RootClassVersion(name,VersionNumber) \; 447namespace ROOT { /** \cond HIDDEN_SYMBOLS */ \; 448 TGenericClassInfo *GenerateInitInstance(const name*); /** \endcond */ \; 449 /** \cond HIDDEN_SYMBOLS */ \; 450 static Short_t _R__UNIQUE_(R__dummyVersionNumber) = \; 451 GenerateInitInstance((name*)0x0)->SetVersion(VersionNumber); \; 452 /** \endcond */ \; 453 R__UseDummy(_R__UNIQUE_(R__dummyVersionNumber)); \; 454}; 455 ; 456#define RootStreamer(name,STREAMER) \; 457namespace ROOT { \; 458 /** \cond HIDDEN_SYMBOLS */ \; 459 TGenericClassInfo *GenerateInitInstance(const name*); /** \endcond */ \; 460 /** \cond HIDDEN_SYMBOLS */ \; 461 static Short_t _R__UNIQUE_(R__dummyStreamer) = \; 462 GenerateInitInstance((name*)0x0)->SetStreamer(STREAMER); \; 463 /** \endcond */ \; 464 R__UseDummy(_R__UNIQUE_(R__dummyStreamer)); \; 465}; 466 ; 467//---- Macro to load a library into the interpreter --------------; 468// Call as R__LOAD_LIBRARY(libEvent); 469// This macro intentionally does not take string as argument, to; 470// prevent compilation errors with complex diagnostics due to; 471// TString BAD_DO_NOT_TRY = ""lib"";; 472// R__LOAD_LIBRARY(BAD_DO_NOT_TRY + ""BAD_DO_NOT_TRY.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/Rtypes_8h_source.html:19990,error,errors,19990,doc/v632/Rtypes_8h_source.html,https://root.cern,https://root.cern/doc/v632/Rtypes_8h_source.html,1,['error'],['errors']
Availability," 4272 theGraph->GetXaxis()->GetXmin(),; 4273 theGraph->GetXaxis()->GetXmax(),; 4274 theHist->GetNdivisions(""X""),; 4275 optax.Data(), -GL);; 4276 theReversedXaxis->SetLabelOffset(LOX - theGraph->GetXaxis()->GetLabelSize());; 4277 }; 4278 theReversedXaxis->SetLabelFont(theGraph->GetXaxis()->GetLabelFont());; 4279 theReversedXaxis->SetLabelSize(theGraph->GetXaxis()->GetLabelSize());; 4280 theReversedXaxis->SetLabelColor(theGraph->GetXaxis()->GetLabelColor());; 4281 theReversedXaxis->SetTickLength(TLX);; 4282 theReversedXaxis->Paint();; 4283 }; 4284 ; 4285 // Reverse X coordinates; 4286 if (gPad->GetLogx()) {; 4287 for (i=0; i<N; i++) rX[i] = TMath::Power(10,gPad->GetUxmax()+gPad->GetUxmin()-TMath::Log10(X[i]));; 4288 opt.Append(""-N"");; 4289 } else {; 4290 for (i=0; i<N; i++) rX[i] = dX-X[i];; 4291 }; 4292 ; 4293 // Reverse X asymmetric errors; 4294 if (rEXhigh && EXlow) for (i=0; i<N; i++) rEXhigh[i] = EXlow[i];; 4295 if (rEXlow && EXhigh) for (i=0; i<N; i++) rEXlow[i] = EXhigh[i];; 4296 ; 4297 // Reverse X bent parameters; 4298 if (rEXhighd && EXlowd) for (i=0; i<N; i++) rEXhighd[i] = EXlowd[i];; 4299 if (rEXlowd && EXhighd) for (i=0; i<N; i++) rEXlowd[i] = EXhighd[i];; 4300 }; 4301 ; 4302 // Reserve the TGraph along the Y axis; 4303 if (lry) {; 4304 opt.ReplaceAll(""ry"", """");; 4305 if (axis) {; 4306 // Reverse the Y axis; 4307 Double_t GL = 0.;; 4308 gPad->Update();; 4309 TString optax = ""-SDH"";; 4310 if (gPad->GetGridy()) {; 4311 if (gPad->GetLogx()) {; 4312 GL = (TMath::Log10(XA2) - TMath::Log10(XA1)) / (gPad->GetX2() - gPad->GetX1());; 4313 } else {; 4314 GL = (XA2 - XA1) / (gPad->GetX2() - gPad->GetX1());; 4315 }; 4316 optax.Append(""W"");; 4317 }; 4318 Double_t xpos;; 4319 if (lyp) xpos = gPad->GetUxmax();; 4320 else xpos = gPad->GetUxmin();; 4321 if (gPad->GetLogx()) xpos = TMath::Power(10,xpos);; 4322 TGaxis *theReversedYaxis;; 4323 if (gPad->GetLogy()) {; 4324 optax.Append(""G"");; 4325 theReversedYaxis = new TGaxis(xpos,; 4326 TMath::Power(10,gPad->GetUymax()),; 4",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphPainter_8cxx_source.html:151856,error,errors,151856,doc/master/TGraphPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphPainter_8cxx_source.html,1,['error'],['errors']
Availability," 4288 if (!gPad); 4289 gROOT->MakeDefCanvas();; 4290 ; 4291 if (!gPad) {; 4292 Error(""FitPanel"", ""Unable to create a default canvas"");; 4293 return;; 4294 }; 4295 ; 4296 ; 4297 // use plugin manager to create instance of TFitEditor; 4298 TPluginHandler *handler = gROOT->GetPluginManager()->FindHandler(""TFitEditor"");; 4299 if (handler && handler->LoadPlugin() != -1) {; 4300 if (handler->ExecPlugin(2, gPad, this) == 0); 4301 Error(""FitPanel"", ""Unable to create the FitPanel"");; 4302 }; 4303 else; 4304 Error(""FitPanel"", ""Unable to find the FitPanel plug-in"");; 4305}; 4306 ; 4307////////////////////////////////////////////////////////////////////////////////; 4308/// Return a histogram containing the asymmetry of this histogram with h2,; 4309/// where the asymmetry is defined as:; 4310///; 4311/// ~~~ {.cpp}; 4312/// Asymmetry = (h1 - h2)/(h1 + h2) where h1 = this; 4313/// ~~~; 4314///; 4315/// works for 1D, 2D, etc. histograms; 4316/// c2 is an optional argument that gives a relative weight between the two; 4317/// histograms, and dc2 is the error on this weight. This is useful, for example,; 4318/// when forming an asymmetry between two histograms from 2 different data sets that; 4319/// need to be normalized to each other in some way. The function calculates; 4320/// the errors assuming Poisson statistics on h1 and h2 (that is, dh = sqrt(h)).; 4321///; 4322/// example: assuming 'h1' and 'h2' are already filled; 4323///; 4324/// ~~~ {.cpp}; 4325/// h3 = h1->GetAsymmetry(h2); 4326/// ~~~; 4327///; 4328/// then 'h3' is created and filled with the asymmetry between 'h1' and 'h2';; 4329/// h1 and h2 are left intact.; 4330///; 4331/// Note that it is the user's responsibility to manage the created histogram.; 4332/// The name of the returned histogram will be `Asymmetry_nameOfh1-nameOfh2`; 4333///; 4334/// code proposed by Jason Seely (seely@mit.edu) and adapted by R.Brun; 4335///; 4336/// clone the histograms so top and bottom will have the; 4337/// correct dimensions:; 43",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:178474,error,error,178474,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['error']
Availability," 430 ; 431//---- ClassDefT macros for templates with two template arguments --------------; 432// ClassDef2T2 goes in the same header as ClassDefT but must be; 433// outside the class scope; 434// ClassImp2T corresponds to ClassImpT; 435 ; 436#define ClassDef2T2(name,Tmpl1,Tmpl2); 437#define ClassImp2T(name,Tmpl1,Tmpl2) templateClassImp(name); 438 ; 439 ; 440//---- ClassDefT macros for templates with three template arguments ------------; 441// ClassDef3T2 goes in the same header as ClassDefT but must be; 442// outside the class scope; 443// ClassImp3T corresponds to ClassImpT; 444 ; 445#define ClassDef3T2(name,Tmpl1,Tmpl2,Tmpl3); 446#define ClassImp3T(name,Tmpl1,Tmpl2,Tmpl3) templateClassImp(name); 447 ; 448 ; 449//---- Macro to set the class version of non instrumented classes --------------; 450 ; 451#define RootClassVersion(name,VersionNumber) \; 452namespace ROOT { /** \cond HIDDEN_SYMBOLS */ \; 453 TGenericClassInfo *GenerateInitInstance(const name*); /** \endcond */ \; 454 /** \cond HIDDEN_SYMBOLS */ \; 455 static Short_t _R__UNIQUE_(R__dummyVersionNumber) = \; 456 GenerateInitInstance((name*)0x0)->SetVersion(VersionNumber); \; 457 /** \endcond */ \; 458 R__UseDummy(_R__UNIQUE_(R__dummyVersionNumber)); \; 459}; 460 ; 461#define RootStreamer(name,STREAMER) \; 462namespace ROOT { \; 463 /** \cond HIDDEN_SYMBOLS */ \; 464 TGenericClassInfo *GenerateInitInstance(const name*); /** \endcond */ \; 465 /** \cond HIDDEN_SYMBOLS */ \; 466 static Short_t _R__UNIQUE_(R__dummyStreamer) = \; 467 GenerateInitInstance((name*)0x0)->SetStreamer(STREAMER); \; 468 /** \endcond */ \; 469 R__UseDummy(_R__UNIQUE_(R__dummyStreamer)); \; 470}; 471 ; 472//---- Macro to load a library into the interpreter --------------; 473// Call as R__LOAD_LIBRARY(libEvent); 474// This macro intentionally does not take string as argument, to; 475// prevent compilation errors with complex diagnostics due to; 476// TString BAD_DO_NOT_TRY = ""lib"";; 477// R__LOAD_LIBRARY(BAD_DO_NOT_TRY + ""BAD_DO_NOT_TRY.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Rtypes_8h_source.html:20411,error,errors,20411,doc/master/Rtypes_8h_source.html,https://root.cern,https://root.cern/doc/master/Rtypes_8h_source.html,1,['error'],['errors']
Availability, 43802.7 8; : 852 Minimum Test error found - save the configuration ; : 852 | 6.78011 10.0733 0.0201111 0.00182524 43749.6 0; : 853 Minimum Test error found - save the configuration ; : 853 | 6.53284 9.90736 0.0201187 0.00181829 43714.8 0; : 854 | 6.67108 10.0768 0.0205443 0.0017732 42618.8 1; : 855 | 6.58878 10.7427 0.0200637 0.00176264 43713.2 2; : 856 | 6.54513 10.3387 0.0200413 0.00176141 43764 3; : 857 Minimum Test error found - save the configuration ; : 857 | 6.43616 9.72218 0.020097 0.00182688 43787.4 0; : 858 | 6.34936 10.0458 0.0200349 0.00176193 43780.5 1; : 859 Minimum Test error found - save the configuration ; : 859 | 6.20554 9.48603 0.0201607 0.00183833 43662.6 0; : 860 | 6.16695 10.0812 0.0200598 0.00175295 43699.5 1; : 861 Minimum Test error found - save the configuration ; : 861 | 6.43224 9.42041 0.0201492 0.00182399 43655.7 0; : 862 | 6.08067 10.0276 0.0200725 0.0017577 43680.5 1; : 863 | 6.34296 10.0575 0.0200642 0.00175521 43694.5 2; : 864 Minimum Test error found - save the configuration ; : 864 | 6.33486 9.34508 0.0201279 0.00182025 43697.5 0; : 865 | 6.18959 10.0219 0.0205128 0.00175205 42642.3 1; : 866 Minimum Test error found - save the configuration ; : 866 | 6.05678 9.24173 0.0204648 0.00182051 42908.5 0; : 867 | 5.92011 9.34278 0.0202303 0.00193747 43733 1; : 868 Minimum Test error found - save the configuration ; : 868 | 5.90509 9.03441 0.0202616 0.0019877 43778.3 0; : 869 | 5.98345 9.15873 0.0200325 0.00175472 43768.9 1; : 870 | 5.90893 9.16507 0.0202516 0.00176171 43266.9 2; : 871 Minimum Test error found - save the configuration ; : 871 | 5.78015 8.79318 0.0200883 0.00182097 43794.1 0; : 872 | 5.76603 9.46642 0.0200354 0.00176138 43778.1 1; : 873 Minimum Test error found - save the configuration ; : 873 | 5.70638 8.71803 0.0200731 0.00181478 43815.7 0; : 874 Minimum Test error found - save the configuration ; : 874 | 5.53455 8.53383 0.0201925 0.00181685 43535.8 0; : 875 | 5.74708 8.69754 0.0202376 0.00177647 43334.2 1; : 876 | 5.6794 ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:103231,error,error,103231,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability," 44 of file RooChi2Var.h. Member Function Documentation. ◆ clone(). TObject * RooChi2Var::clone ; (; const char * ; newname); const. inlineoverridevirtual . Implements RooAbsArg.; Definition at line 29 of file RooChi2Var.h. ◆ create(). RooAbsTestStatistic * RooChi2Var::create ; (; const char * ; name, . const char * ; title, . RooAbsReal & ; pdf, . RooAbsData & ; dhist, . const RooArgSet & ; projDeps, . RooAbsTestStatistic::Configuration const & ; cfg . ). inlineoverridevirtual . Implements RooAbsTestStatistic.; Definition at line 31 of file RooChi2Var.h. ◆ defaultErrorLevel(). double RooChi2Var::defaultErrorLevel ; (; ); const. inlineoverridevirtual . Reimplemented from RooAbsReal.; Definition at line 37 of file RooChi2Var.h. ◆ evaluatePartition(). double RooChi2Var::evaluatePartition ; (; std::size_t ; firstEvent, . std::size_t ; lastEvent, . std::size_t ; stepSize . ); const. overrideprotectedvirtual . Calculate chi^2 in partition from firstEvent to lastEvent using given stepSize Throughout the calculation, we use Kahan's algorithm for summing to prevent loss of precision - this is a factor four more expensive than straight addition, but since evaluating the PDF is usually much more expensive than that, we tolerate the additional cost... ; Implements RooAbsTestStatistic.; Definition at line 95 of file RooChi2Var.cxx. Member Data Documentation. ◆ _emptySet. RooArgSet RooChi2Var::_emptySet. staticprotected . Supports named argument constructor. ; Definition at line 54 of file RooChi2Var.h. ◆ _etype. RooDataHist::ErrorType RooChi2Var::_etype. protected . Error type store in associated RooDataHist. ; Definition at line 56 of file RooChi2Var.h. ◆ _funcMode. FuncMode RooChi2Var::_funcMode. protected . Function, P.d.f. or extended p.d.f? ; Definition at line 57 of file RooChi2Var.h. roofit/roofitcore/src/RooChi2Var.h; roofit/roofitcore/src/RooChi2Var.cxx. RooChi2Var. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:48 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChi2Var.html:72219,toler,tolerate,72219,doc/master/classRooChi2Var.html,https://root.cern,https://root.cern/doc/master/classRooChi2Var.html,1,['toler'],['tolerate']
Availability," 4457 */; 4458 path_buf[sizeof(path_buf) - 32] = 0;; 4459 len = (int)strlen(path_buf);; 4460 if (len > (int)sizeof(path_buf) - 32) {; 4461 len = (int)sizeof(path_buf) - 32;; 4462 }; 4463 ; 4464 /* Start with the file extenstion from the configuration. */; 4465 tstr = strchr(error_page_file_ext, '.');; 4466 ; 4467 while (tstr) {; 4468 for (i = 1;; 4469 (i < 32) && (tstr[i] != 0) && (tstr[i] != ',');; 4470 i++) {; 4471 /* buffer overrun is not possible here, since; 4472 * (i < 32) && (len < sizeof(path_buf) - 32); 4473 * ==> (i + len) < sizeof(path_buf) */; 4474 path_buf[len + i - 1] = tstr[i];; 4475 }; 4476 /* buffer overrun is not possible here, since; 4477 * (i <= 32) && (len < sizeof(path_buf) - 32); 4478 * ==> (i + len) <= sizeof(path_buf) */; 4479 path_buf[len + i - 1] = 0;; 4480 ; 4481 if (mg_stat(conn, path_buf, &error_page_file.stat)) {; 4482 DEBUG_TRACE(""Check error page %s - found"",; 4483 path_buf);; 4484 page_handler_found = 1;; 4485 break;; 4486 }; 4487 DEBUG_TRACE(""Check error page %s - not found"",; 4488 path_buf);; 4489 ; 4490 /* Continue with the next file extenstion from the; 4491 * configuration (if there is a next one). */; 4492 tstr = strchr(tstr + i, '.');; 4493 }; 4494 }; 4495 }; 4496 ; 4497 if (page_handler_found) {; 4498 conn->in_error_handler = 1;; 4499 handle_file_based_request(conn, path_buf, &error_page_file);; 4500 conn->in_error_handler = 0;; 4501 return 0;; 4502 }; 4503#endif /* NO_FILESYSTEMS */; 4504 }; 4505 ; 4506 /* No custom error page. Send default error page. */; 4507 conn->must_close = 1;; 4508 mg_response_header_start(conn, status);; 4509 send_no_cache_header(conn);; 4510 send_additional_header(conn);; 4511 if (has_body) {; 4512 mg_response_header_add(conn,; 4513 ""Content-Type"",; 4514 ""text/plain; charset=utf-8"",; 4515 -1);; 4516 }; 4517 mg_response_header_send(conn);; 4518 ; 4519 /* HTTP responses 1xx, 204 and 304 MUST NOT send a body */; 4520 if (has_body) {; 4521 /* For other errors, send a generic error message. */; 4522 cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:134154,error,error,134154,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,['error'],['error']
Availability," 4458 */; 4459 path_buf[sizeof(path_buf) - 32] = 0;; 4460 len = (int)strlen(path_buf);; 4461 if (len > (int)sizeof(path_buf) - 32) {; 4462 len = (int)sizeof(path_buf) - 32;; 4463 }; 4464 ; 4465 /* Start with the file extenstion from the configuration. */; 4466 tstr = strchr(error_page_file_ext, '.');; 4467 ; 4468 while (tstr) {; 4469 for (i = 1;; 4470 (i < 32) && (tstr[i] != 0) && (tstr[i] != ',');; 4471 i++) {; 4472 /* buffer overrun is not possible here, since; 4473 * (i < 32) && (len < sizeof(path_buf) - 32); 4474 * ==> (i + len) < sizeof(path_buf) */; 4475 path_buf[len + i - 1] = tstr[i];; 4476 }; 4477 /* buffer overrun is not possible here, since; 4478 * (i <= 32) && (len < sizeof(path_buf) - 32); 4479 * ==> (i + len) <= sizeof(path_buf) */; 4480 path_buf[len + i - 1] = 0;; 4481 ; 4482 if (mg_stat(conn, path_buf, &error_page_file.stat)) {; 4483 DEBUG_TRACE(""Check error page %s - found"",; 4484 path_buf);; 4485 page_handler_found = 1;; 4486 break;; 4487 }; 4488 DEBUG_TRACE(""Check error page %s - not found"",; 4489 path_buf);; 4490 ; 4491 /* Continue with the next file extenstion from the; 4492 * configuration (if there is a next one). */; 4493 tstr = strchr(tstr + i, '.');; 4494 }; 4495 }; 4496 }; 4497 ; 4498 if (page_handler_found) {; 4499 conn->in_error_handler = 1;; 4500 handle_file_based_request(conn, path_buf, &error_page_file);; 4501 conn->in_error_handler = 0;; 4502 return 0;; 4503 }; 4504#endif /* NO_FILESYSTEMS */; 4505 }; 4506 ; 4507 /* No custom error page. Send default error page. */; 4508 conn->must_close = 1;; 4509 mg_response_header_start(conn, status);; 4510 send_no_cache_header(conn);; 4511 send_additional_header(conn);; 4512 if (has_body) {; 4513 mg_response_header_add(conn,; 4514 ""Content-Type"",; 4515 ""text/plain; charset=utf-8"",; 4516 -1);; 4517 }; 4518 mg_response_header_send(conn);; 4519 ; 4520 /* HTTP responses 1xx, 204 and 304 MUST NOT send a body */; 4521 if (has_body) {; 4522 /* For other errors, send a generic error message. */; 4523 cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:134186,error,error,134186,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,2,['error'],['error']
Availability," 453 {; 454 assert( kCoordError == fErrorType );; 455 assert( !fData.empty() && fDataPtr );; 456 assert( !fDataError.empty() && fDataErrorPtr );; 457 assert( fDataErrorHigh.empty() && !fDataErrorHighPtr );; 458 assert( fDataErrorLow.empty() && !fDataErrorLowPtr );; 459 assert( !fCoordErrors.empty() && fCoordErrors.size() == 1 );; 460 assert( !fCoordErrorsPtr.empty() && fCoordErrorsPtr.size() == 1 && fCoordErrorsPtr[0] );; 461 assert( &fCoordErrors[0].front() == fCoordErrorsPtr[0] );; 462 ; 463 fData[ fNPoints ] = y;; 464 fCoordErrors[0][ fNPoints ] = ex;; 465 fDataError[ fNPoints ] = ey;; 466 ; 467 FitData::Add( x );; 468 fSumContent += y;; 469 if (y != 0 || ey != 1.0) fSumError2 += ey*ey;; 470 // set the weight flag checking if error^2 != y; 471 if (!fIsWeighted); 472 if (y != 0 && std::abs( ey*ey/y - 1.0) > 1.E-12) fIsWeighted = true;; 473 }; 474 ; 475 /**; 476 add one dim data with error in the coordinate (x) and asymmetric errors in the value (y); 477 in this case store the y errors and not the inverse; 478 */; 479 void BinData::Add( double x, double y, double ex, double eyl, double eyh ); 480 {; 481 assert( kAsymError == fErrorType );; 482 assert( !fData.empty() && fDataPtr );; 483 assert( !fDataErrorHigh.empty() && fDataErrorHighPtr );; 484 assert( !fDataErrorLow.empty() && fDataErrorLowPtr );; 485 assert( fDataError.empty() && !fDataErrorPtr );; 486 assert( !fCoordErrors.empty() && fCoordErrors.size() == 1 );; 487 assert( !fCoordErrorsPtr.empty() && fCoordErrorsPtr.size() == 1 && fCoordErrorsPtr[0] );; 488 assert( &fCoordErrors[0].front() == fCoordErrorsPtr[0] );; 489 ; 490 fData[ fNPoints ] = y;; 491 fCoordErrors[0][ fNPoints ] = ex;; 492 fDataErrorHigh[ fNPoints ] = eyh;; 493 fDataErrorLow[ fNPoints ] = eyl;; 494 ; 495 FitData::Add( x );; 496 fSumContent += y;; 497 if (y != 0 || eyl != 1.0 || eyh != 1.0) fSumError2 += (eyl+eyh)*(eyl+eyh)/4;; 498 ; 499 }; 500 ; 501 /**; 502 add multi-dim coordinate data with only value; 503 */; 504 void BinData::Add( const do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8cxx_source.html:14217,error,error,14217,doc/master/BinData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BinData_8cxx_source.html,3,['error'],"['error', 'errors']"
Availability," 47#include ""TApplicationCommandLineOptionsHelp.h""; 48#include ""TPRegexp.h""; 49#include <cstdlib>; 50#include <iostream>; 51#include <fstream>; 52 ; 53TApplication *gApplication = nullptr;; 54Bool_t TApplication::fgGraphNeeded = kFALSE;; 55Bool_t TApplication::fgGraphInit = kFALSE;; 56TList *TApplication::fgApplications = nullptr; // List of available applications; 57 ; 58////////////////////////////////////////////////////////////////////////////////; 59 ; 60class TIdleTimer : public TTimer {; 61public:; 62 TIdleTimer(Long_t ms) : TTimer(ms, kTRUE) {}; 63 Bool_t Notify() override;; 64};; 65 ; 66////////////////////////////////////////////////////////////////////////////////; 67/// Notify handler.; 68 ; 69Bool_t TIdleTimer::Notify(); 70{; 71 gApplication->HandleIdleTimer();; 72 Reset();; 73 return kFALSE;; 74}; 75 ; 76 ; 77ClassImp(TApplication);; 78 ; 79static void CallEndOfProcessCleanups(); 80{; 81 // Insure that the files, canvases and sockets are closed.; 82 ; 83 // If we get here, the tear down has started. We have no way to know what; 84 // has or has not yet been done. In particular on Ubuntu, this was called; 85 // after the function static in TSystem.cxx has been destructed. So we; 86 // set gROOT in its end-of-life mode which prevents executing code, like; 87 // autoloading libraries (!) that is pointless ...; 88 if (gROOT) {; 89 gROOT->SetBit(kInvalidObject);; 90 gROOT->EndOfProcessCleanups();; 91 }; 92}; 93 ; 94////////////////////////////////////////////////////////////////////////////////; 95/// Default ctor. Can be used by classes deriving from TApplication.; 96 ; 97TApplication::TApplication() :; 98 fArgc(0), fArgv(nullptr), fAppImp(nullptr), fIsRunning(kFALSE), fReturnFromRun(kFALSE),; 99 fNoLog(kFALSE), fNoLogo(kFALSE), fQuit(kFALSE),; 100 fFiles(nullptr), fIdleTimer(nullptr), fSigHandler(nullptr), fExitOnException(kDontExit),; 101 fAppRemote(nullptr); 102{; 103 ResetBit(kProcessRemotely);; 104}; 105 ; 106///////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TApplication_8cxx_source.html:2633,down,down,2633,doc/master/TApplication_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TApplication_8cxx_source.html,1,['down'],['down']
Availability," 4812 if (obj->InheritsFrom(TImage::Class())) {; 4813 return kTRUE;; 4814 } else if (obj->InheritsFrom(TPad::Class())) {; 4815 if (ContainsTImage(((TPad*)obj)->GetListOfPrimitives())) {; 4816 return kTRUE;; 4817 }; 4818 }; 4819 }; 4820 return kFALSE;; 4821}; 4822 ; 4823////////////////////////////////////////////////////////////////////////////////; 4824/// Save Canvas contents in a file in one of various formats.; 4825///; 4826/// \anchor TPadPrint; 4827/// option can be:; 4828///; 4829/// - `ps`: a Postscript file is produced (default). [See special cases](\ref TPadPrintPS).; 4830/// - `Portrait`: Postscript file is produced (Portrait); 4831/// - `Landscape`: Postscript file is produced (Landscape); 4832/// - `eps`: an Encapsulated Postscript file is produced; 4833/// - `Preview`: an [Encapsulated Postscript file with preview](\ref TPadPrintPreview) is produced.; 4834/// - `pdf`: a PDF file is produced NOTE: TMathText will be converted to TLatex; q.e.d., symbols only available in TMathText will not render properly.; 4835/// - `Title:`: The character string after `Title:` becomes a table; 4836/// of content entry (for PDF files).; 4837/// - `EmbedFonts`: a [PDF file with embedded fonts](\ref TPadPrintEmbedFonts) is generated.; 4838/// - `svg`: a SVG file is produced; 4839/// - `tex`: a TeX file is produced; 4840/// - `Standalone`: a [standalone TeX file](\ref TPadPrintStandalone) is produced.; 4841/// - `gif`: a GIF file is produced; 4842/// - `gif+NN`: an animated GIF file is produced, where NN is delay in 10ms units NOTE: See other variants for looping animation in TASImage::WriteImage; 4843/// - `xpm`: a XPM file is produced; 4844/// - `png`: a PNG file is produced; 4845/// - `jpg`: a JPEG file is produced. NOTE: JPEG's lossy compression will make all sharp edges fuzzy.; 4846/// - `tiff`: a TIFF file is produced; 4847/// - `cxx`: a C++ macro file is produced; 4848/// - `xml`: a XML file; 4849/// - `json`: a JSON file; 4850/// - `root`: a ROOT binary file; 4851///",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8cxx_source.html:154018,avail,available,154018,doc/master/TPad_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPad_8cxx_source.html,1,['avail'],['available']
Availability," 497 template <typename ItWeight>; 498 double weightDecay (double error, ItWeight itWeight, ItWeight itWeightEnd, double factorWeightDecay, EnumRegularization eRegularization); 499 {; 500 if (eRegularization == EnumRegularization::L1); 501 {; 502 // weight decay (regularization); 503 double w = 0;; 504 size_t n = 0;; 505 for (; itWeight != itWeightEnd; ++itWeight, ++n); 506 {; 507 double weight = (*itWeight);; 508 w += std::fabs (weight);; 509 }; 510 return error + 0.5 * w * factorWeightDecay / n;; 511 }; 512 else if (eRegularization == EnumRegularization::L2); 513 {; 514 // weight decay (regularization); 515 double w = 0;; 516 size_t n = 0;; 517 for (; itWeight != itWeightEnd; ++itWeight, ++n); 518 {; 519 double weight = (*itWeight);; 520 w += weight*weight;; 521 }; 522 return error + 0.5 * w * factorWeightDecay / n;; 523 }; 524 else; 525 return error;; 526 }; 527 ; 528 ; 529 ; 530 ; 531 ; 532 ; 533 ; 534 ; 535 ; 536 ; 537 ; 538 ; 539 ; 540 ; 541/*! \brief apply the weights (and functions) in forward direction of the DNN; 542 *; 543 *; 544 */; 545 template <typename LAYERDATA>; 546 void forward (const LAYERDATA& prevLayerData, LAYERDATA& currLayerData); 547 {; 548 if (prevLayerData.hasDropOut ()); 549 {; 550 applyWeights<true> (prevLayerData.valuesBegin (), prevLayerData.valuesEnd (),; 551 currLayerData.weightsBegin (),; 552 currLayerData.valuesBegin (), currLayerData.valuesEnd (),; 553 prevLayerData.dropOut ());; 554 }; 555 else; 556 {; 557 bool dummy = true;; 558 applyWeights<false> (prevLayerData.valuesBegin (), prevLayerData.valuesEnd (),; 559 currLayerData.weightsBegin (),; 560 currLayerData.valuesBegin (), currLayerData.valuesEnd (),; 561 &dummy); // dummy to turn on all nodes (no drop out); 562 }; 563 }; 564 ; 565 ; 566 ; 567/*! \brief backward application of the weights (back-propagation of the error); 568 *; 569 *; 570 */; 571template <typename LAYERDATA>; 572 void backward (LAYERDATA& prevLayerData, LAYERDATA& currLayerData); 573{; 574 if (prevLayerData.ha",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NeuralNet_8icc_source.html:15358,error,error,15358,doc/master/NeuralNet_8icc_source.html,https://root.cern,https://root.cern/doc/master/NeuralNet_8icc_source.html,1,['error'],['error']
Availability," 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . #include <TMVA/TSynapse.h>. Inheritance diagram for TMVA::TSynapse:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Constructor & Destructor Documentation. ◆ TSynapse(). TMVA::TSynapse::TSynapse ; (; ). constructor ; Definition at line 46 of file TSynapse.cxx. ◆ ~TSynapse(). TMVA::TSynapse::~TSynapse ; (; ). virtual . destructor ; Definition at line 61 of file TSynapse.cxx. Member Function Documentation. ◆ AdjustWeight(). void TMVA::TSynapse::AdjustWeight ; (; ). adjust the weight based on the error field all ready calculated by CalculateDelta ; Definition at line 98 of file TSynapse.cxx. ◆ CalculateDelta(). void TMVA::TSynapse::CalculateDelta ; (; ). calculate/adjust the error field for this synapse ; Definition at line 108 of file TSynapse.cxx. ◆ Class(). static TClass * TMVA::TSynapse::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TMVA::TSynapse::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TMVA::TSynapse::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 101 of file TSynapse.h. ◆ DecayLearningRate(). void TMVA::TSynapse::DecayLearningRate ; (; Double_t ; rate). inline . Definition at line 62 of file TSynapse.h. ◆ DeclFileName(). static const char * TMVA::TSynapse::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 101 of file TSynapse.h. ◆ GetDEDw(). Double_t TMVA::TSynapse::GetDEDw ; (;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1TSynapse.html:11634,error,error,11634,doc/master/classTMVA_1_1TSynapse.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1TSynapse.html,1,['error'],['error']
Availability," 536 fLambdaPtr = nullptr;; 537 fFuncPtr = nullptr;; 538 fGradFuncPtr = nullptr;; 539 fHessFuncPtr = nullptr;; 540 ; 541 ; 542 fNdim = ndim;; 543 for (int i = 0; i < npar; ++i) {; 544 DoAddParameter(TString::Format(""p%d"",i), 0, false);; 545 }; 546 fAllParametersSetted = true;; 547 assert (fNpar == npar);; 548 ; 549 bool ret = InitLambdaExpression(formula);; 550 ; 551 if (ret) {; 552 ; 553 SetBit(TFormula::kLambda);; 554 ; 555 fReadyToExecute = true;; 556 ; 557 if (addToGlobList && gROOT) {; 558 TFormula *old = nullptr;; 559 R__LOCKGUARD(gROOTMutex);; 560 old = dynamic_cast<TFormula*> ( gROOT->GetListOfFunctions()->FindObject(name) );; 561 if (old); 562 gROOT->GetListOfFunctions()->Remove(old);; 563 if (IsReservedName(name)); 564 Error(""TFormula"",""The name %s is reserved as a TFormula variable name.\n"",name);; 565 else; 566 gROOT->GetListOfFunctions()->Add(this);; 567 }; 568 SetBit(kNotGlobal,!addToGlobList);; 569 }; 570 else; 571 Error(""TFormula"",""Syntax error in building the lambda expression %s"", formula );; 572}; 573 ; 574////////////////////////////////////////////////////////////////////////////////; 575TFormula::TFormula(const TFormula &formula) :; 576 TNamed(formula.GetName(),formula.GetTitle()); 577{; 578 formula.TFormula::Copy(*this);; 579 ; 580 if (!TestBit(TFormula::kNotGlobal) && gROOT ) {; 581 R__LOCKGUARD(gROOTMutex);; 582 TFormula *old = (TFormula*)gROOT->GetListOfFunctions()->FindObject(formula.GetName());; 583 if (old); 584 gROOT->GetListOfFunctions()->Remove(old);; 585 ; 586 if (IsReservedName(formula.GetName())) {; 587 Error(""TFormula"",""The name %s is reserved as a TFormula variable name.\n"",formula.GetName());; 588 } else; 589 gROOT->GetListOfFunctions()->Add(this);; 590 }; 591 ; 592}; 593 ; 594////////////////////////////////////////////////////////////////////////////////; 595/// = operator.; 596 ; 597TFormula& TFormula::operator=(const TFormula &rhs); 598{; 599 if (this != &rhs); 600 rhs.TFormula::Copy(*this);; 601 return *this;; 602}; 603 ; 60",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFormula_8cxx_source.html:21241,error,error,21241,doc/master/TFormula_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFormula_8cxx_source.html,1,['error'],['error']
Availability," 59 virtual void SetPointError(Int_t i, Double_t ex, Double_t ey, Double_t ez);; 60 ; 61 ClassDefOverride(TGraph2DErrors,1) //A 2D graph with error bars; 62};; 63 ; 64#endif; 65 ; 66 ; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassDefOverride#define ClassDefOverride(name, id)Definition Rtypes.h:346; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; TGraph2D.h; TGraph2DErrorsGraph 2D class with errors.Definition TGraph2DErrors.h:26; TGraph2DErrors::GetErrorZDouble_t GetErrorZ(Int_t bin) const overrideThis function is called by Graph2DFitChisquare.Definition TGraph2DErrors.cxx:230; TGraph2DErrors::~TGraph2DErrors~TGraph2DErrors() overrideTGraph2DErrors destructor.Definition TGraph2DErrors.cxx:137; TGraph2DErrors::GetYminEDouble_t GetYminE() const overrideReturns the Y minimum with errors.Definition TGraph2DErrors.cxx:274; TGraph2DErrors::GetXminEDouble_t GetXminE() const overrideReturns the X minimum with errors.Definition TGraph2DErrors.cxx:252; TGraph2DErrors::GetEZDouble_t * GetEZ() const overrideDefinition TGraph2DErrors.h:47; TGraph2DErrors::fEYDouble_t * fEY[fNpoints] array of Y errorsDefinition TGraph2DErrors.h:30; TGraph2DErrors::GetEYDouble_t * GetEY() const overrideDefinition TGraph2DErrors.h:46; TGraph2DErrors::SetPointvoid SetPoint(Int_t i, Double_t x, Double_t y, Double_t z) overrideSet x, y and z values for point number i.Definition TGraph2DErrors.cxx:404; TGraph2DErrors::Scalevoid Scale(Double_t c1=1., Option_t *option=""z"") overrideMultiply the values and errors of a TGraph2DErrors by a constant c1.Definition TGraph2DErrors.cxx:322; TGraph2DErrors::fEZDouble_t * fEZ[fNpoints] array of Z errorsDefinition TGraph2DErrors.h:31; TGraph2DErrors::GetEXDouble_t * GetEX() const overrideDefinition TGraph2DErrors.h:45; TGraph2DErrors::SetPointErrorvirtual void SetPointError(Int_t i, Double_t ex, Double_t ey, Double_t ez)Set ex, ey and ez va",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraph2DErrors_8h_source.html:3599,error,errors,3599,doc/master/TGraph2DErrors_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraph2DErrors_8h_source.html,1,['error'],['errors']
Availability," 6002 const int offset = 1; // skip argv[0]; 6003 argc -= offset + extractedArgs;; 6004 argv += offset;; 6005 ; 6006 // Parse the options; 6007 ROOT::option::Stats stats(genreflexUsageDescriptor, argc, argv);; 6008 std::vector<ROOT::option::Option> options(stats.options_max);// non POD var size arrays are not C++!; 6009 std::vector<ROOT::option::Option> buffer(stats.buffer_max);; 6010 // The 4 is the minimum size of the abbreviation length.; 6011 // For example, --selection_file can be abbreviated with --sele at least.; 6012 ; 6013 ROOT::option::Parser parse(genreflexUsageDescriptor, argc, argv, &options[0], &buffer[0], 5);; 6014 ; 6015 if (parse.error()) {; 6016 ROOT::TMetaUtils::Error(nullptr, ""Argument parsing error!\n"");; 6017 return 1;; 6018 }; 6019 ; 6020 // Print help if needed; 6021 if (options[HELP] || originalArgc == 1) {; 6022 ROOT::option::printUsage(std::cout, genreflexUsageDescriptor);; 6023 return 0;; 6024 }; 6025 // See if no header was provided; 6026 int numberOfHeaders = checkHeadersNames(headersNames);; 6027 if (0 == numberOfHeaders) {; 6028 ROOT::TMetaUtils::Error(nullptr, ""No valid header was provided!\n"");; 6029 return 1;; 6030 }; 6031 ; 6032 ROOT::TMetaUtils::GetErrorIgnoreLevel() = ROOT::TMetaUtils::kNote;; 6033 ; 6034 if (options[DEEP]); 6035 ROOT::TMetaUtils::Warning(nullptr, ""--deep has no effect. Please remove the deprecated flag!\n"");; 6036 // The verbosity: debug wins over quiet; 6037 //std::string verbosityOption(""-v4""); // To be uncommented for the testing phase. It should be -v; 6038 std::string verbosityOption(""-v2"");; 6039 if (options[SILENT]) verbosityOption = ""-v0"";; 6040 if (options[VERBOSE] || getenv (""VERBOSE"")) verbosityOption = ""-v3"";; 6041 if (options[DEBUG]) verbosityOption = ""-v4"";; 6042 ; 6043 genreflex::verbose = verbosityOption == ""-v4"";; 6044 ; 6045 // The selection file; 6046 std::string selectionFileName;; 6047 if (options[SELECTIONFILENAME]) {; 6048 selectionFileName = options[SELECTIONFILENAME].arg;; 6049 if (!ROO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rootcling__impl_8cxx_source.html:237414,error,error,237414,doc/master/rootcling__impl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/rootcling__impl_8cxx_source.html,2,['error'],['error']
Availability," 61 of file THtml.cxx. Member Function Documentation. ◆ Class(). static TClass * THtml::THelperBase::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * THtml::THelperBase::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t THtml::THelperBase::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 52 of file THtml.h. ◆ DeclFileName(). static const char * THtml::THelperBase::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 52 of file THtml.h. ◆ GetOwner(). THtml * THtml::THelperBase::GetOwner ; (; ); const. inline . Definition at line 49 of file THtml.h. ◆ IsA(). TClass * THtml::THelperBase::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Reimplemented in THtml::TModuleDefinition, and THtml::TPathDefinition.; Definition at line 52 of file THtml.h. ◆ SetOwner(). void THtml::THelperBase::SetOwner ; (; THtml * ; html). Set the THtml object owning this object; if it's already set to a different THtml object than issue an error message and signal to the currently set object that we are not belonging to it anymore. ; Definition at line 74 of file THtml.cxx. ◆ Streamer(). void THtml::THelperBase::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject.; Reimplemented in THtml::TModuleDefinition, and THtml::TPathDefinition. ◆ StreamerNVirtual(). void THtml::THelperBase::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 52 of file THtml.h. Member Data Documentation. ◆ fHtml. THtml* THtml::THelperBase::fHtml. private . Definition at line 51 of file THtml.h. html/inc/THtml.h; html/src/THtml.cxx. THtmlTHelperBase. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:50 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHtml_1_1THelperBase.html:11826,error,error,11826,doc/master/classTHtml_1_1THelperBase.html,https://root.cern,https://root.cern/doc/master/classTHtml_1_1THelperBase.html,1,['error'],['error']
Availability," 63 of file TKeySQL.h. ◆ ReadFile(). Bool_t TKeySQL::ReadFile ; (; ). inlinefinalvirtual . Read the key structure from the file. ; Reimplemented from TKey.; Definition at line 64 of file TKeySQL.h. ◆ ReadKeyObject(). void * TKeySQL::ReadKeyObject ; (; void * ; obj, . const TClass * ; expectedClass . ). protected . Read object, associated with key, from database. ; Definition at line 272 of file TKeySQL.cxx. ◆ ReadObj(). TObject * TKeySQL::ReadObj ; (; ). finalvirtual . Read object derived from TObject class If it is not TObject or in case of error, return 0. ; Reimplemented from TKey.; Definition at line 203 of file TKeySQL.cxx. ◆ ReadObjectAny(). void * TKeySQL::ReadObjectAny ; (; const TClass * ; expectedClass). finalvirtual . Read object of any type from SQL database. ; Reimplemented from TKey.; Definition at line 252 of file TKeySQL.cxx. ◆ ReadObjWithBuffer(). TObject * TKeySQL::ReadObjWithBuffer ; (; char * ; bufferRead). finalvirtual . Read object derived from TObject class If it is not TObject or in case of error, return 0. ; Reimplemented from TKey.; Definition at line 228 of file TKeySQL.cxx. ◆ SetBuffer(). void TKeySQL::SetBuffer ; (; ). inlinefinalvirtual . Reimplemented from TKey.; Definition at line 65 of file TKeySQL.h. ◆ StoreKeyObject(). void TKeySQL::StoreKeyObject ; (; const void * ; obj, . const TClass * ; cl . ). protected . Stores object, associated with key, into data tables. ; Definition at line 155 of file TKeySQL.cxx. ◆ Streamer(). void TKeySQL::Streamer ; (; TBuffer & ; b). overridevirtual . Stream a class object. ; Reimplemented from TKey. ◆ StreamerNVirtual(). void TKeySQL::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 68 of file TKeySQL.h. ◆ WriteFile(). Int_t TKeySQL::WriteFile ; (; Int_t ; cycle = 1, . TFile * ; f = nullptr . ). inlinefinalvirtual . Write the encoded object supported by this key. ; The function returns the number of bytes committed to the file. If a write error occurs, the n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKeySQL.html:24354,error,error,24354,doc/master/classTKeySQL.html,https://root.cern,https://root.cern/doc/master/classTKeySQL.html,1,['error'],['error']
Availability," 6391 xline.resize(2*npoints);; 6392 yline.resize(2*npoints);; 6393 if ((npoints > 0) && (xline.empty() || yline.empty())) {; 6394 Error(""PaintErrors"", ""too many points, out of memory"");; 6395 return;; 6396 }; 6397 if1 = 1;; 6398 if2 = 2*npoints;; 6399 }; 6400 ; 6401 // compute the offset of the error bars due to the symbol size; 6402 s2x = gPad->PixeltoX(Int_t(0.5*sbasex)) - gPad->PixeltoX(0);; 6403 s2y =-gPad->PixeltoY(Int_t(0.5*sbasey)) + gPad->PixeltoY(0);; 6404 ; 6405 // compute size of the lines at the end of the error bars; 6406 Int_t dxend = Int_t(gStyle->GetEndErrorSize());; 6407 bxsize = gPad->PixeltoX(dxend) - gPad->PixeltoX(0);; 6408 bysize =-gPad->PixeltoY(dxend) + gPad->PixeltoY(0);; 6409 ; 6410 ; 6411 if (fixbin) {; 6412 if (Hoption.Logx) xp = TMath::Power(10,Hparam.xmin) + 0.5*Hparam.xbinsize;; 6413 else xp = Hparam.xmin + 0.5*Hparam.xbinsize;; 6414 } else {; 6415 delta = fH->GetBinWidth(first);; 6416 xp = fH->GetBinLowEdge(first) + 0.5*delta;; 6417 }; 6418 ; 6419 // if errormarker = 0 or symbolsize = 0. no symbol is drawn; 6420 if (Hoption.Logx) logxmin = TMath::Power(10,Hparam.xmin);; 6421 if (Hoption.Logy) logymin = TMath::Power(10,Hparam.ymin);; 6422 ; 6423 // ---------------------- Loop over the points---------------------; 6424 for (k=first; k<=last; k++) {; 6425 ; 6426 // get the data; 6427 // xp = X position of the current point; 6428 // yp = Y position of the current point; 6429 // ex1 = Low X error; 6430 // ex2 = Up X error; 6431 // ey1 = Low Y error; 6432 // ey2 = Up Y error; 6433 // (xi,yi) = Error bars coordinates; 6434 ; 6435 // apply offset on errors for bar histograms; 6436 Double_t xminTmp = gPad->XtoPad(fXaxis->GetBinLowEdge(k));; 6437 Double_t xmaxTmp = gPad->XtoPad(fXaxis->GetBinUpEdge(k));; 6438 if (Hoption.Logx) {; 6439 xminTmp = TMath::Power(10, xminTmp);; 6440 xmaxTmp = TMath::Power(10, xmaxTmp);; 6441 }; 6442 Double_t w = (xmaxTmp-xminTmp)*width;; 6443 xminTmp += offset*(xmaxTmp-xminTmp);; 6444 xmaxTmp = xminTmp + w;; 6445 xp",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:236008,error,errormarker,236008,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,1,['error'],['errormarker']
Availability," 660### Fit Statistics; 661 ; 662 ; 663The type of information about fit parameters printed in the histogram statistics; 664box can be selected via the parameter mode. The parameter mode can be; 665`= pcev` (default `= 0111`); 666 ; 667 p = 1; print Probability; 668 c = 1; print Chisquare/Number of degrees of freedom; 669 e = 1; print errors (if e=1, v must be 1); 670 v = 1; print name/values of parameters; 671 ; 672Example:; 673 ; 674 gStyle->SetOptFit(1011);; 675 ; 676print fit probability, parameter names/values and errors.; 677 ; 6781. When `v = 1` is specified, only the non-fixed parameters are shown.; 6792. When `v = 2` all parameters are shown.; 680 ; 681Note: `gStyle->SetOptFit(1)` means ""default value"", so it is equivalent; 682to `gStyle->SetOptFit(111)`; 683 ; 684 ; 685\anchor HP09; 686### The error bars options; 687 ; 688 ; 689| Option | Description |; 690|----------|-------------------------------------------------------------------|; 691| ""E"" | Default. Shows only the error bars, not a marker.|; 692| ""E1"" | Small lines are drawn at the end of the error bars.|; 693| ""E2"" | Error rectangles are drawn.|; 694| ""E3"" | A filled area is drawn through the end points of the vertical error bars.|; 695| ""E4"" | A smoothed filled area is drawn through the end points of the vertical error bars.|; 696| ""E0"" | Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping|; 697| ""E5"" | Like E3 but ignore the bins with 0 contents.|; 698| ""E6"" | Like E4 but ignore the bins with 0 contents.|; 699| ""X0"" | When used with one of the ""E"" option, it suppress the error bar along X as `gStyle->SetErrorX(0)` would do.|; 700 ; 701Begin_Macro(source); 702{; 703 auto c1 = new TCanvas(""c1"",""c1"",600,400);; 704 auto he = new TH1F(""he"",""Distribution drawn with error bars (option E1) "",100,-3,3);; 705 for (int i=0; i<10000; i++) he->Fill(gRandom->Gaus(0,1));; 706 gStyle->SetEndErrorSize(3);; 707 gStyle->SetErrorX(1.);; 708 he->SetMarkerSt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THistPainter_8cxx_source.html:30376,error,error,30376,doc/master/THistPainter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THistPainter_8cxx_source.html,1,['error'],['error']
Availability," 6638 size_t i;; 6639 char lenbuf[64];; 6640 char *end = NULL;; 6641 unsigned long chunkSize = 0;; 6642 ; 6643 for (i = 0; i < (sizeof(lenbuf) - 1); i++) {; 6644 conn->content_len++;; 6645 if (mg_read_inner(conn, lenbuf + i, 1) != 1) {; 6646 lenbuf[i] = 0;; 6647 }; 6648 if ((i > 0) && (lenbuf[i] == '\r'); 6649 && (lenbuf[i - 1] != '\r')) {; 6650 continue;; 6651 }; 6652 if ((i > 1) && (lenbuf[i] == '\n'); 6653 && (lenbuf[i - 1] == '\r')) {; 6654 lenbuf[i + 1] = 0;; 6655 chunkSize = strtoul(lenbuf, &end, 16);; 6656 if (chunkSize == 0) {; 6657 /* regular end of content */; 6658 conn->is_chunked = 3;; 6659 }; 6660 break;; 6661 }; 6662 if (!isxdigit((unsigned char)lenbuf[i])) {; 6663 /* illegal character for chunk length */; 6664 conn->is_chunked = 2;; 6665 return -1;; 6666 }; 6667 }; 6668 if ((end == NULL) || (*end != '\r')) {; 6669 /* chunksize not set correctly */; 6670 conn->is_chunked = 2;; 6671 return -1;; 6672 }; 6673 if (chunkSize == 0) {; 6674 /* try discarding trailer for keep-alive */; 6675 conn->content_len += 2;; 6676 if ((mg_read_inner(conn, lenbuf, 2) == 2); 6677 && (lenbuf[0] == '\r') && (lenbuf[1] == '\n')) {; 6678 conn->is_chunked = 4;; 6679 }; 6680 break;; 6681 }; 6682 ; 6683 /* append a new chunk */; 6684 conn->content_len += (int64_t)chunkSize;; 6685 }; 6686 }; 6687 ; 6688 return (int)all_read;; 6689 }; 6690 return mg_read_inner(conn, buf, len);; 6691}; 6692 ; 6693 ; 6694int; 6695mg_write(struct mg_connection *conn, const void *buf, size_t len); 6696{; 6697 time_t now;; 6698 int n, total, allowed;; 6699 ; 6700 if (conn == NULL) {; 6701 return 0;; 6702 }; 6703 if (len > INT_MAX) {; 6704 return -1;; 6705 }; 6706 ; 6707 /* Mark connection as ""data sent"" */; 6708 conn->request_state = 10;; 6709#if defined(USE_HTTP2); 6710 if (conn->protocol_type == PROTOCOL_TYPE_HTTP2) {; 6711 http2_data_frame_head(conn, len, 0);; 6712 }; 6713#endif; 6714 ; 6715 if (conn->throttle > 0) {; 6716 if ((now = time(NULL)) != conn->last_throttle_time) {; 6717 conn->last_throttl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:193936,alive,alive,193936,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['alive'],['alive']
Availability," 6639 size_t i;; 6640 char lenbuf[64];; 6641 char *end = NULL;; 6642 unsigned long chunkSize = 0;; 6643 ; 6644 for (i = 0; i < (sizeof(lenbuf) - 1); i++) {; 6645 conn->content_len++;; 6646 if (mg_read_inner(conn, lenbuf + i, 1) != 1) {; 6647 lenbuf[i] = 0;; 6648 }; 6649 if ((i > 0) && (lenbuf[i] == '\r'); 6650 && (lenbuf[i - 1] != '\r')) {; 6651 continue;; 6652 }; 6653 if ((i > 1) && (lenbuf[i] == '\n'); 6654 && (lenbuf[i - 1] == '\r')) {; 6655 lenbuf[i + 1] = 0;; 6656 chunkSize = strtoul(lenbuf, &end, 16);; 6657 if (chunkSize == 0) {; 6658 /* regular end of content */; 6659 conn->is_chunked = 3;; 6660 }; 6661 break;; 6662 }; 6663 if (!isxdigit((unsigned char)lenbuf[i])) {; 6664 /* illegal character for chunk length */; 6665 conn->is_chunked = 2;; 6666 return -1;; 6667 }; 6668 }; 6669 if ((end == NULL) || (*end != '\r')) {; 6670 /* chunksize not set correctly */; 6671 conn->is_chunked = 2;; 6672 return -1;; 6673 }; 6674 if (chunkSize == 0) {; 6675 /* try discarding trailer for keep-alive */; 6676 conn->content_len += 2;; 6677 if ((mg_read_inner(conn, lenbuf, 2) == 2); 6678 && (lenbuf[0] == '\r') && (lenbuf[1] == '\n')) {; 6679 conn->is_chunked = 4;; 6680 }; 6681 break;; 6682 }; 6683 ; 6684 /* append a new chunk */; 6685 conn->content_len += (int64_t)chunkSize;; 6686 }; 6687 }; 6688 ; 6689 return (int)all_read;; 6690 }; 6691 return mg_read_inner(conn, buf, len);; 6692}; 6693 ; 6694 ; 6695int; 6696mg_write(struct mg_connection *conn, const void *buf, size_t len); 6697{; 6698 time_t now;; 6699 int n, total, allowed;; 6700 ; 6701 if (conn == NULL) {; 6702 return 0;; 6703 }; 6704 if (len > INT_MAX) {; 6705 return -1;; 6706 }; 6707 ; 6708 /* Mark connection as ""data sent"" */; 6709 conn->request_state = 10;; 6710#if defined(USE_HTTP2); 6711 if (conn->protocol_type == PROTOCOL_TYPE_HTTP2) {; 6712 http2_data_frame_head(conn, len, 0);; 6713 }; 6714#endif; 6715 ; 6716 if (conn->throttle > 0) {; 6717 if ((now = time(NULL)) != conn->last_throttle_time) {; 6718 conn->last_throttl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:193968,alive,alive,193968,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['alive'],['alive']
Availability," 7146 //added multiple times in fFunctions.; 7147 //This case happens when the same object is added with different; 7148 //drawing modes; 7149 TObject *obj;; 7150 while ((obj = fFunctions->First())) {; 7151 while(fFunctions->Remove(obj)) { }; 7152 delete obj;; 7153 }; 7154 if(stats) fFunctions->Add(stats);; 7155 fContour.Set(0);; 7156}; 7157 ; 7158////////////////////////////////////////////////////////////////////////////////; 7159/// Save the histogram as .csv, .tsv or .txt. In case of any other extension, fall; 7160/// back to TObject::SaveAs, which saves as a .C macro (but with the file name; 7161/// extension specified by the user); 7162///; 7163/// The Under/Overflow bins are also exported (as first and last lines); 7164/// The fist 2 columns are the lower and upper edges of the bins; 7165/// Column 3 contains the bin contents; 7166/// The last column contains the error in y. If errors are not present, the column; 7167/// is left empty; 7168///; 7169/// The result can be immediately imported into Excel, gnuplot, Python or whatever,; 7170/// without the needing to install pyroot, etc.; 7171///; 7172/// \param filename the name of the file where to store the histogram; 7173/// \param option some tuning options; 7174///; 7175/// The file extension defines the delimiter used:; 7176/// - `.csv` : comma; 7177/// - `.tsv` : tab; 7178/// - `.txt` : space; 7179///; 7180/// If option = ""title"" a title line is generated. If the y-axis has a title,; 7181/// this title is displayed as column 3 name, otherwise, it shows ""BinContent""; 7182 ; 7183void TH1::SaveAs(const char *filename, Option_t *option) const; 7184{; 7185 char del = '\0';; 7186 TString ext = """";; 7187 TString fname = filename;; 7188 TString opt = option;; 7189 ; 7190 if (filename) {; 7191 if (fname.EndsWith("".csv"")) {; 7192 del = ',';; 7193 ext = ""csv"";; 7194 } else if (fname.EndsWith("".tsv"")) {; 7195 del = '\t';; 7196 ext = ""tsv"";; 7197 } else if (fname.EndsWith("".txt"")) {; 7198 del = ' ';; 7199 ext = ""txt"";;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:280167,error,errors,280167,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['errors']
Availability," 7760 const unsigned char c = (unsigned char)buf[i];; 7761 ; 7762 if ((c < 128) && ((char)c != '\r') && ((char)c != '\n'); 7763 && !isprint(c)) {; 7764 /* abort scan as soon as one malformed character is found */; 7765 return -1;; 7766 }; 7767 ; 7768 if (i < buflen - 1) {; 7769 if ((buf[i] == '\n') && (buf[i + 1] == '\n')) {; 7770 /* Two newline, no carriage return - not standard compliant,; 7771 * but it should be accepted */; 7772 return i + 2;; 7773 }; 7774 }; 7775 ; 7776 if (i < buflen - 3) {; 7777 if ((buf[i] == '\r') && (buf[i + 1] == '\n') && (buf[i + 2] == '\r'); 7778 && (buf[i + 3] == '\n')) {; 7779 /* Two \r\n - standard compliant */; 7780 return i + 4;; 7781 }; 7782 }; 7783 }; 7784 ; 7785 return 0;; 7786}; 7787 ; 7788 ; 7789#if !defined(NO_CACHING); 7790/* Convert month to the month number. Return -1 on error, or month number */; 7791static int; 7792get_month_index(const char *s); 7793{; 7794 size_t i;; 7795 ; 7796 for (i = 0; i < ARRAY_SIZE(month_names); i++) {; 7797 if (!strcmp(s, month_names[i])) {; 7798 return (int)i;; 7799 }; 7800 }; 7801 ; 7802 return -1;; 7803}; 7804 ; 7805 ; 7806/* Parse UTC date-time string, and return the corresponding time_t value. */; 7807static time_t; 7808parse_date_string(const char *datetime); 7809{; 7810 char month_str[32] = {0};; 7811 int second, minute, hour, day, month, year;; 7812 time_t result = (time_t)0;; 7813 struct tm tm;; 7814 ; 7815 if ((sscanf(datetime,; 7816 ""%d/%3s/%d %d:%d:%d"",; 7817 &day,; 7818 month_str,; 7819 &year,; 7820 &hour,; 7821 &minute,; 7822 &second); 7823 == 6); 7824 || (sscanf(datetime,; 7825 ""%d %3s %d %d:%d:%d"",; 7826 &day,; 7827 month_str,; 7828 &year,; 7829 &hour,; 7830 &minute,; 7831 &second); 7832 == 6); 7833 || (sscanf(datetime,; 7834 ""%*3s, %d %3s %d %d:%d:%d"",; 7835 &day,; 7836 month_str,; 7837 &year,; 7838 &hour,; 7839 &minute,; 7840 &second); 7841 == 6); 7842 || (sscanf(datetime,; 7843 ""%d-%3s-%d %d:%d:%d"",; 7844 &day,; 7845 month_str,; 7846 &year,; 7847 &hour,; 7848 &minute,; 7849 &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:225105,error,error,225105,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability," 7761 const unsigned char c = (unsigned char)buf[i];; 7762 ; 7763 if ((c < 128) && ((char)c != '\r') && ((char)c != '\n'); 7764 && !isprint(c)) {; 7765 /* abort scan as soon as one malformed character is found */; 7766 return -1;; 7767 }; 7768 ; 7769 if (i < buflen - 1) {; 7770 if ((buf[i] == '\n') && (buf[i + 1] == '\n')) {; 7771 /* Two newline, no carriage return - not standard compliant,; 7772 * but it should be accepted */; 7773 return i + 2;; 7774 }; 7775 }; 7776 ; 7777 if (i < buflen - 3) {; 7778 if ((buf[i] == '\r') && (buf[i + 1] == '\n') && (buf[i + 2] == '\r'); 7779 && (buf[i + 3] == '\n')) {; 7780 /* Two \r\n - standard compliant */; 7781 return i + 4;; 7782 }; 7783 }; 7784 }; 7785 ; 7786 return 0;; 7787}; 7788 ; 7789 ; 7790#if !defined(NO_CACHING); 7791/* Convert month to the month number. Return -1 on error, or month number */; 7792static int; 7793get_month_index(const char *s); 7794{; 7795 size_t i;; 7796 ; 7797 for (i = 0; i < ARRAY_SIZE(month_names); i++) {; 7798 if (!strcmp(s, month_names[i])) {; 7799 return (int)i;; 7800 }; 7801 }; 7802 ; 7803 return -1;; 7804}; 7805 ; 7806 ; 7807/* Parse UTC date-time string, and return the corresponding time_t value. */; 7808static time_t; 7809parse_date_string(const char *datetime); 7810{; 7811 char month_str[32] = {0};; 7812 int second, minute, hour, day, month, year;; 7813 time_t result = (time_t)0;; 7814 struct tm tm;; 7815 ; 7816 if ((sscanf(datetime,; 7817 ""%d/%3s/%d %d:%d:%d"",; 7818 &day,; 7819 month_str,; 7820 &year,; 7821 &hour,; 7822 &minute,; 7823 &second); 7824 == 6); 7825 || (sscanf(datetime,; 7826 ""%d %3s %d %d:%d:%d"",; 7827 &day,; 7828 month_str,; 7829 &year,; 7830 &hour,; 7831 &minute,; 7832 &second); 7833 == 6); 7834 || (sscanf(datetime,; 7835 ""%*3s, %d %3s %d %d:%d:%d"",; 7836 &day,; 7837 month_str,; 7838 &year,; 7839 &hour,; 7840 &minute,; 7841 &second); 7842 == 6); 7843 || (sscanf(datetime,; 7844 ""%d-%3s-%d %d:%d:%d"",; 7845 &day,; 7846 month_str,; 7847 &year,; 7848 &hour,; 7849 &minute,; 7850 &",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:225137,error,error,225137,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability," 790 fXaxis.SetParent(this);; 791 fYaxis.SetParent(this);; 792 fZaxis.SetParent(this);; 793 ; 794 SetTitle(fTitle.Data());; 795 ; 796 fFunctions = new TList;; 797 ; 798 UseCurrentStyle();; 799 ; 800 if (TH1::AddDirectoryStatus()) {; 801 fDirectory = gDirectory;; 802 if (fDirectory) {; 803 fFunctions->UseRWLock();; 804 fDirectory->Append(this,kTRUE);; 805 }; 806 }; 807}; 808 ; 809////////////////////////////////////////////////////////////////////////////////; 810/// Performs the operation: `this = this + c1*f1`; 811/// if errors are defined (see TH1::Sumw2), errors are also recalculated.; 812///; 813/// By default, the function is computed at the centre of the bin.; 814/// if option ""I"" is specified (1-d histogram only), the integral of the; 815/// function in each bin is used instead of the value of the function at; 816/// the centre of the bin.; 817///; 818/// Only bins inside the function range are recomputed.; 819///; 820/// IMPORTANT NOTE: If you intend to use the errors of this histogram later; 821/// you should call Sumw2 before making this operation.; 822/// This is particularly important if you fit the histogram after TH1::Add; 823///; 824/// The function return kFALSE if the Add operation failed; 825 ; 826Bool_t TH1::Add(TF1 *f1, Double_t c1, Option_t *option); 827{; 828 if (!f1) {; 829 Error(""Add"",""Attempt to add a non-existing function"");; 830 return kFALSE;; 831 }; 832 ; 833 TString opt = option;; 834 opt.ToLower();; 835 Bool_t integral = kFALSE;; 836 if (opt.Contains(""i"") && fDimension == 1) integral = kTRUE;; 837 ; 838 Int_t ncellsx = GetNbinsX() + 2; // cells = normal bins + underflow bin + overflow bin; 839 Int_t ncellsy = GetNbinsY() + 2;; 840 Int_t ncellsz = GetNbinsZ() + 2;; 841 if (fDimension < 2) ncellsy = 1;; 842 if (fDimension < 3) ncellsz = 1;; 843 ; 844 // delete buffer if it is there since it will become invalid; 845 if (fBuffer) BufferEmpty(1);; 846 ; 847 // - Add statistics; 848 Double_t s1[10];; 849 for (Int_t i = 0; i < 10; ++i) s1[i] ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:33224,error,errors,33224,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['errors']
Availability, 7; : 1060 | 2.98819 3.74969 0.0202318 0.00179746 43397.3 8; : 1061 | 3.26859 3.94266 0.0201482 0.00175781 43501 9; : 1062 Minimum Test error found - save the configuration ; : 1062 | 3.14929 3.19749 0.0201067 0.00181963 43746.8 0; : 1063 | 2.87068 3.26991 0.0200491 0.00176391 43751.2 1; : 1064 | 2.93768 3.71885 0.0200468 0.00176208 43752.3 2; : 1065 | 2.97083 3.36192 0.0201608 0.00179095 43549.7 3; : 1066 | 3.04197 3.49012 0.0203588 0.00177356 43045 4; : 1067 Minimum Test error found - save the configuration ; : 1067 | 3.05672 2.86026 0.0203982 0.00182711 43077.7 0; : 1068 | 3.10603 3.29637 0.020205 0.00184144 43564.6 1; : 1069 | 2.88449 4.01918 0.0203768 0.00179741 43058.4 2; : 1070 | 2.97807 3.34364 0.0200746 0.00174903 43654.8 3; : 1071 | 3.12106 3.50221 0.0203054 0.0017782 43179.8 4; : 1072 | 2.87393 2.91962 0.020149 0.001768 43523.2 5; : 1073 | 2.90826 3.29161 0.0202848 0.00180763 43296.8 6; : 1074 | 3.06053 3.26664 0.0201588 0.00175733 43474.8 7; : 1075 Minimum Test error found - save the configuration ; : 1075 | 2.97935 2.76485 0.0202008 0.00187279 43649.1 0; : 1076 | 2.74949 3.00321 0.0203478 0.00181324 43162.6 1; : 1077 | 2.76284 3.75591 0.0207943 0.00180912 42138.1 2; : 1078 Minimum Test error found - save the configuration ; : 1078 | 3.00913 2.73577 0.0203661 0.0018517 43209.6 0; : 1079 | 2.90364 3.01716 0.0202612 0.00175591 43230.9 1; : 1080 | 2.84249 3.41706 0.0201644 0.00176658 43483.3 2; : 1081 | 2.8573 3.42383 0.0204284 0.00175777 42848.1 3; : 1082 | 2.95876 3.1107 0.0202233 0.0017991 43421.1 4; : 1083 | 3.17127 3.26207 0.0202854 0.00175889 43181.4 5; : 1084 | 2.91564 2.7548 0.0203094 0.00175846 43124.6 6; : 1085 Minimum Test error found - save the configuration ; : 1085 | 2.63022 2.66906 0.0203531 0.00186599 43273.3 0; : 1086 | 3.10333 2.86337 0.0200994 0.00175565 43611.6 1; : 1087 | 2.9523 3.05621 0.0202345 0.00180564 43410.1 2; : 1088 | 2.96621 3.82134 0.0204023 0.0017658 42926.6 3; : 1089 | 2.9107 3.10267 0.0201393 0.00176662 43542.9 4; : 1090 | ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:118022,error,error,118022,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability," 8*60*60;; TTimeStamp(year,month,day,hour,min,sec,nsec,kTRUE,8*60*60);. TTimeStamp(UInt_t date, UInt_t time, UInt_t nsec, Bool_t isUTC = kTRUE, Int_t secOffset = 0); Create a TTimeStamp and set it to the specified date, time, nanosec.; If !isUTC then it is assumed to be the standard local time zone. TTimeStamp(UInt_t tloc, Bool_t isUTC = kTRUE, Int_t secOffset = 0, Bool_t dosDate = kFALSE); Create a TTimeStamp and set it to tloc which must be a time_t value; returned by time(). This value is the number of seconds since the EPOCH; (i.e. 00:00:00 on Jan 1m 1970). If dosDate is true then the input; is a dosDate value. Double_t AsGMST(Double_t UT1Offset = 0) const; Return Greenwich mean sidereal time (GMST) in hour-angle. Return value; will always be between 0 and 24 (hours). Sidereal time is most accurately; calculated from UT1. If fSec and fNanoSec are in UTC (which they are by; default), the optional argument UT1Offset can be supplied (in; milliseconds). If UT1Offset is not supplied, conversion has maximum error; of 1s. If offset is supplied error can be reduced to us level. Values for; UT1Offset can be found in IERS Bulletin B:; ftp://ftp.iers.org/products/eop/bulletinb/format_2009; The conversion to sidereal time used here is given by; Aoki et. al. Astron. Astrophys. 105, 359-362 (1982); http://adsabs.harvard.edu/abs/1982A%26A...105..359A. Double_t AsGAST(Double_t UT1Offset = 0) const; Return Greenwich apparant sidereal time (GAST) in hour-angle. Return; value will always be between 0 and 24 (hours). Sidereal time is most; accurately calculated from UT1. If fSec and fNanoSec are in UTC (which; they are by default), the optional argument UT1Offset can be supplied (in; milliseconds). If UT1Offset is not supplied, conversion has maximum error; of 1s. If offset is supplied error can be reduced to us level. Values for; UT1Offset can be found in IERS Bulletin B:; ftp://ftp.iers.org/products/eop/bulletinb/format_2009; Equation of the equinoxes is given by USNO:; http://aa.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTimeStamp.html:5438,error,error,5438,root/html534/TTimeStamp.html,https://root.cern,https://root.cern/root/html534/TTimeStamp.html,4,['error'],['error']
Availability," 81 std::vector<std::string> variationNames{inmap.fKeys};; 82 Erase<std::string>(""nominal"", variationNames);; 83 ; 84 return ROOT::RDF::Experimental::RResultMap<T>(std::move(nominalResult), std::move(variedResults),; 85 std::move(variationNames), *(inmap.fLoopManager),; 86 std::move(nominalAction), std::move(variedAction));; 87}; 88} // namespace RDF; 89} // namespace Internal; 90 ; 91namespace RDF {; 92 ; 93class RResultHandle;; 94 ; 95namespace Experimental {; 96 ; 97template <typename T>; 98class RResultMap {; 99 ; 100 std::vector<std::string> fKeys; // values are the keys available in fMap; 101 std::unordered_map<std::string, std::shared_ptr<T>> fMap; // shared_ptrs are never null; 102 ROOT::Detail::RDF::RLoopManager *fLoopManager; // never null; 103 std::shared_ptr<ROOT::Internal::RDF::RActionBase> fNominalAction; // never null; 104 std::shared_ptr<ROOT::Internal::RDF::RActionBase> fVariedAction; // might be null if there are no variations; 105 ; 106 friend RResultMap; 107 ROOT::Internal::RDF::MakeResultMap<T>(std::shared_ptr<T> nominalResult,; 108 std::vector<std::shared_ptr<T>> &&variedResults,; 109 std::vector<std::string> &&keys, ROOT::Detail::RDF::RLoopManager &lm,; 110 std::shared_ptr<ROOT::Internal::RDF::RActionBase> nominalAction,; 111 std::shared_ptr<ROOT::Internal::RDF::RActionBase> variedAction);; 112 ; 113 friend RResultMap ROOT::Internal::RDF::CloneResultAndAction<T>(const RResultMap<T> &inmap);; 114 friend std::unique_ptr<ROOT::Detail::RDF::RMergeableVariations<T>>; 115 ROOT::Detail::RDF::GetMergeableValue<T>(RResultMap<T> &rmap);; 116 friend class ::ROOT::RDF::RResultHandle;; 117 ; 118 // The preconditions are that results and keys have the same size, are ordered the same way, and keys are unique.; 119 RResultMap(std::shared_ptr<T> &&nominalResult, std::vector<std::shared_ptr<T>> &&variedResults,; 120 std::vector<std::string> &&keys, ROOT::Detail::RDF::RLoopManager &lm,; 121 std::shared_ptr<ROOT::Internal::RDF::RActionBase> nominalAction,; 122 std",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RResultMap_8hxx_source.html:3695,avail,available,3695,doc/master/RResultMap_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RResultMap_8hxx_source.html,1,['avail'],['available']
Availability," 826 ; 827Int_t TRint::TabCompletionHook(char *buf, int *pLoc, std::ostream& out); 828{; 829 if (gTabCom); 830 return gTabCom->Hook(buf, pLoc, out);; 831 ; 832 return -1;; 833}; e#define e(i)Definition RSha256.hxx:103; Bool_tbool Bool_tDefinition RtypesCore.h:63; Int_tint Int_tDefinition RtypesCore.h:45; Longptr_tlong Longptr_tDefinition RtypesCore.h:75; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; ClassImp#define ClassImp(name)Definition Rtypes.h:382; kMAXPATHLEN@ kMAXPATHLENDefinition Rtypes.h:60; gApplicationR__EXTERN TApplication * gApplicationDefinition TApplication.h:170; TBenchmark.h; gBenchmarkR__EXTERN TBenchmark * gBenchmarkDefinition TBenchmark.h:59; TClassEdit.h; TClassTable.h; gClassTableR__EXTERN TClassTable * gClassTableDefinition TClassTable.h:104; TClass.h; TEnv.h; gEnvR__EXTERN TEnv * gEnvDefinition TEnv.h:170; TError.h; Breakvoid Break(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:207; TException.h; CATCH#define CATCH(n)Definition TException.h:58; ENDTRY#define ENDTRYDefinition TException.h:64; RETRY#define RETRYDefinition TException.h:44; TRY#define TRYDefinition TException.h:51; gExceptionR__EXTERN ExceptionContext_t * gExceptionDefinition TException.h:69; ThrowR__EXTERN void Throw(int code)If an exception context has been set (using the TRY and RETRY macros) jump back to where it was set.Definition TException.cxx:27; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; inputOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void inputDefinition TGWin32VirtualXProxy.cxx:142; modeOption_t Option_t TPoint TPoint const char modeDefinition TGWin32VirtualXProxy.cxx:68; namechar name[80]Definition TGX11.cxx:110; TInterpreter.h; gClingR__EXTERN TInterpreter * gClingDefinition TInterpreter.h:574; gInterpreter#define gInterpreterD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRint_8cxx_source.html:29204,error,error,29204,doc/master/TRint_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRint_8cxx_source.html,1,['error'],['error']
Availability," 83 kAllMask = 0x1F; 84};; 85 ; 86enum EFileModeMask {; 87 kS_IFMT = 0170000, // bitmask for the file type bitfields; 88 kS_IFSOCK = 0140000, // socket; 89 kS_IFLNK = 0120000, // symbolic link; 90 kS_IFOFF = 0110000, // offline file; 91 kS_IFREG = 0100000, // regular file; 92 kS_IFBLK = 0060000, // block device; 93 kS_IFDIR = 0040000, // directory; 94 kS_IFCHR = 0020000, // character device; 95 kS_IFIFO = 0010000, // fifo; 96 kS_ISUID = 0004000, // set UID bit; 97 kS_ISGID = 0002000, // set GID bit; 98 kS_ISVTX = 0001000, // sticky bit; 99 kS_IRWXU = 00700, // mask for file owner permissions; 100 kS_IRUSR = 00400, // owner has read permission; 101 kS_IWUSR = 00200, // owner has write permission; 102 kS_IXUSR = 00100, // owner has execute permission; 103 kS_IRWXG = 00070, // mask for group permissions; 104 kS_IRGRP = 00040, // group has read permission; 105 kS_IWGRP = 00020, // group has write permission; 106 kS_IXGRP = 00010, // group has execute permission; 107 kS_IRWXO = 00007, // mask for permissions for others (not in group); 108 kS_IROTH = 00004, // others have read permission; 109 kS_IWOTH = 00002, // others have write permission; 110 kS_IXOTH = 00001 // others have execute permission; 111};; 112 ; 113inline Bool_t R_ISDIR(Int_t mode) { return ((mode & kS_IFMT) == kS_IFDIR); }; 114inline Bool_t R_ISCHR(Int_t mode) { return ((mode & kS_IFMT) == kS_IFCHR); }; 115inline Bool_t R_ISBLK(Int_t mode) { return ((mode & kS_IFMT) == kS_IFBLK); }; 116inline Bool_t R_ISREG(Int_t mode) { return ((mode & kS_IFMT) == kS_IFREG); }; 117inline Bool_t R_ISLNK(Int_t mode) { return ((mode & kS_IFMT) == kS_IFLNK); }; 118inline Bool_t R_ISFIFO(Int_t mode) { return ((mode & kS_IFMT) == kS_IFIFO); }; 119inline Bool_t R_ISSOCK(Int_t mode) { return ((mode & kS_IFMT) == kS_IFSOCK); }; 120inline Bool_t R_ISOFF(Int_t mode) { return ((mode & kS_IFMT) == kS_IFOFF); }; 121 ; 122struct FileStat_t {; 123 Long_t fDev; // device id; 124 Long_t fIno; // inode; 125 Int_t fMode; // protection (combin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8h_source.html:3071,mask,mask,3071,doc/master/TSystem_8h_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8h_source.html,1,['mask'],['mask']
Availability," 876 if (allowedAnalysisTypes.count(this->fAnalysisType) == 0) {; 877 Log() << kERROR << Form(""Can only generate ROC integral for analysis type kClassification. and kMulticlass.""); 878 << Endl;; 879 return 0;; 880 }; 881 ; 882 TMVA::ROCCurve *rocCurve = GetROC(datasetname, theMethodName, iClass, type);; 883 if (!rocCurve) {; 884 Log() << kFATAL; 885 << Form(""ROCCurve object was not created in Method = %s not found with Dataset = %s "", theMethodName.Data(),; 886 datasetname.Data()); 887 << Endl;; 888 return 0;; 889 }; 890 ; 891 Int_t npoints = TMVA::gConfig().fVariablePlotting.fNbinsXOfROCCurve + 1;; 892 Double_t rocIntegral = rocCurve->GetROCIntegral(npoints);; 893 delete rocCurve;; 894 ; 895 return rocIntegral;; 896}; 897 ; 898////////////////////////////////////////////////////////////////////////////////; 899/// Argument iClass specifies the class to generate the ROC curve in a; 900/// multiclass setting. It is ignored for binary classification.; 901///; 902/// Returns a ROC graph for a given method, or nullptr on error.; 903///; 904/// Note: Evaluation of the given method must have been run prior to ROC; 905/// generation through Factory::EvaluateAllMetods.; 906///; 907/// NOTE: The ROC curve is 1 vs. all where the given class is considered signal; 908/// and the others considered background. This is ok in binary classification; 909/// but in in multi class classification, the ROC surface is an N dimensional; 910/// shape, where N is number of classes - 1.; 911 ; 912TGraph *TMVA::Factory::GetROCCurve(DataLoader *loader, TString theMethodName, Bool_t setTitles, UInt_t iClass,; 913 Types::ETreeType type); 914{; 915 return GetROCCurve((TString)loader->GetName(), theMethodName, setTitles, iClass, type);; 916}; 917 ; 918////////////////////////////////////////////////////////////////////////////////; 919/// Argument iClass specifies the class to generate the ROC curve in a; 920/// multiclass setting. It is ignored for binary classification.; 921///; 922/// Returns a R",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html:36515,error,error,36515,doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2src_2Factory_8cxx_source.html,1,['error'],['error']
Availability," 877 fBranch->Add(iter.fBranch->At(i));; 878 }; 879 fLimitRatio = iter.fLimitRatio;; 880 fRatio = iter.fRatio;; 881 return *this;; 882}; 883 ; 884////////////////////////////////////////////////////////////////////////////////; 885/// () operator.; 886 ; 887TGeoElementRN *TGeoElemIter::operator()(); 888{; 889 return Next();; 890}; 891 ; 892////////////////////////////////////////////////////////////////////////////////; 893/// Go upwards from the current location until the next branching, then down.; 894 ; 895TGeoElementRN *TGeoElemIter::Up(); 896{; 897 TGeoDecayChannel *dc;; 898 Int_t ind, nd;; 899 while (fLevel) {; 900 // Current decay channel; 901 dc = (TGeoDecayChannel *)fBranch->At(fLevel - 1);; 902 ind = dc->GetIndex();; 903 nd = dc->Parent()->GetNdecays();; 904 fRatio /= 0.01 * dc->BranchingRatio();; 905 fElem = dc->Parent();; 906 fBranch->RemoveAt(--fLevel);; 907 ind++;; 908 while (ind < nd) {; 909 if (Down(ind++)); 910 return (TGeoElementRN *)fElem;; 911 }; 912 }; 913 fElem = nullptr;; 914 return nullptr;; 915}; 916 ; 917////////////////////////////////////////////////////////////////////////////////; 918/// Go downwards from current level via ibranch as low in the tree as possible.; 919/// Return value flags if the operation was successful.; 920 ; 921TGeoElementRN *TGeoElemIter::Down(Int_t ibranch); 922{; 923 if (!fElem); 924 return nullptr;; 925 TGeoDecayChannel *dc = (TGeoDecayChannel *)fElem->Decays()->At(ibranch);; 926 if (!dc->Daughter()); 927 return nullptr;; 928 Double_t br = 0.01 * fRatio * dc->BranchingRatio();; 929 if (br < fLimitRatio); 930 return nullptr;; 931 fLevel++;; 932 fRatio = br;; 933 fBranch->Add(dc);; 934 fElem = dc->Daughter();; 935 return (TGeoElementRN *)fElem;; 936}; 937 ; 938////////////////////////////////////////////////////////////////////////////////; 939/// Return next element.; 940 ; 941TGeoElementRN *TGeoElemIter::Next(); 942{; 943 if (!fElem); 944 return nullptr;; 945 // Check if this is the first iteration.; 946 Int_t nd ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGeoElement_8cxx_source.html:30217,down,downwards,30217,doc/master/TGeoElement_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGeoElement_8cxx_source.html,1,['down'],['downwards']
Availability," 9 * For the list of contributors see $ROOTSYS/README/CREDITS. *; 10 *************************************************************************/; 11 ; 12#include ""TFitResult.h""; 13#include ""Math/WrappedMultiTF1.h""; 14#include ""TGraph.h""; 15 ; 16 ; 17#include <iostream>; 18 ; 19/** \class TFitResult; 20 \ingroup Hist; 21Extends the ROOT::Fit::Result class with a TNamed inheritance; 22providing easy possibility for I/O; 23*/; 24 ; 25ClassImp(TFitResult);; 26 ; 27////////////////////////////////////////////////////////////////////////////////; 28/// Constructor from a ROOT::Fit::FitResult; 29/// copy the contained TF1 pointer function if it is; 30 ; 31TFitResult::TFitResult(const ROOT::Fit::FitResult& f) :; 32 TNamed(""TFitResult"",""TFitResult""),; 33 ROOT::Fit::FitResult(f); 34{; 35 ROOT::Math::WrappedMultiTF1 * wfunc = dynamic_cast<ROOT::Math::WrappedMultiTF1 *>(ModelFunction().get() );; 36 if (wfunc) wfunc->SetAndCopyFunction();; 37}; 38 ; 39 ; 40////////////////////////////////////////////////////////////////////////////////; 41/// Print result of the fit, by default chi2, parameter values and errors.; 42/// if option ""V"" is given print also error matrix and correlation; 43 ; 44void TFitResult::Print(Option_t *option) const; 45{; 46 TString opt(option);; 47 opt.ToUpper();; 48 bool doCovMat = opt.Contains(""V"");; 49 ROOT::Fit::FitResult::Print( std::cout, doCovMat);; 50}; 51 ; 52////////////////////////////////////////////////////////////////////////////////; 53/// Return the covariance matrix from fit; 54///; 55/// The matrix is a symmetric matrix with a size N equal to; 56/// the total number of parameters considered in the fit including the fixed ones; 57/// The matrix row and columns corresponding to the fixed parameters will contain only zero's; 58 ; 59TMatrixDSym TFitResult::GetCovarianceMatrix() const; 60{; 61 if (CovMatrixStatus() == 0) {; 62 Warning(""GetCovarianceMatrix"",""covariance matrix is not available"");; 63 return TMatrixDSym();; 64 }; 65 TMatrixDSym mat(NP",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFitResult_8cxx_source.html:1592,error,errors,1592,doc/master/TFitResult_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFitResult_8cxx_source.html,1,['error'],['errors']
Availability," 9, maximal compression level but slower and might use more memory.; (For the currently supported algorithms, the maximum level is 9); If compress is negative it indicates the compression level is not set yet. The enumeration ROOT::ECompressionAlgorithm associates each; algorithm with a number. There is a utility function to help; to set the value of compress. For example,; ROOT::CompressionSettings(ROOT::kLZMA, 1); will build an integer which will set the compression to use; the LZMA algorithm and compression level 1. These are defined; in the header file Compression.h. Note that the compression settings may be changed at any time.; The new compression settings will only apply to branches created; or attached after the setting is changed and other objects written; after the setting is changed. In case the file does not exist or is not a valid ROOT file,; it is made a Zombie. One can detect this situation with a code like:; TFile f(""file.root"");; if (f.IsZombie()) {; cout << ""Error opening file"" << endl;; exit(-1);; }. When opening the file, the system checks the validity of this directory.; If something wrong is detected, an automatic Recovery is performed. In; this case, the file is scanned sequentially reading all logical blocks; and attempting to rebuild a correct directory (see TFile::Recover).; One can disable the automatic recovery procedure when reading one; or more files by setting the environment variable ""TFile.Recover: 0""; in the system.rootrc file. TFile(const TFile& ); TFile objects can not be copied. ~TFile(); File destructor. void Init(Bool_t create); Initialize a TFile object.; TFile implementations providing asynchronous open functionality need to; override this method to run the appropriate checks before calling this; standard initialization part. See TXNetFile::Init for an example. void Close(Option_t* option = """"); Close a file.; If option == ""R"", all TProcessIDs referenced by this file are deleted.; Calling TFile::Close(""R"") might be necessary i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFile.html:27364,Error,Error,27364,root/html534/TFile.html,https://root.cern,https://root.cern/root/html534/TFile.html,1,['Error'],['Error']
Availability," 9, maximal compression level but slower and might use more memory.; (For the currently supported algorithms, the maximum level is 9); If compress is negative it indicates the compression level is not set yet. The enumeration ROOT::ECompressionAlgorithm associates each; algorithm with a number. There is a utility function to help; to set the value of compress. For example,; ROOT::CompressionSettings(ROOT::kLZMA, 1); will build an integer which will set the compression to use; the LZMA algorithm and compression level 1. These are defined; in the header file Compression.h. Note that the compression settings may be changed at any time.; The new compression settings will only apply to branches created; or attached after the setting is changed and other objects written; after the setting is changed. In case the file does not exist or is not a valid ROOT file,; it is made a Zombie. One can detect this situation with a code like:; TFile f(""file.root"");; if (f.IsZombie()) {; cout << ""Error opening file"" << endl;; exit(-1);; }. When opening the file, the system checks the validity of this directory.; If something wrong is detected, an automatic Recovery is performed. In; this case, the file is scanned sequentially reading all logical blocks; and attempting to rebuild a correct directory (see TFile::Recover).; One can disable the automatic recovery procedure when reading one; or more files by setting the environment variable ""TFile::Recover 0""; in the system.rootrc file. TFile(const TFile& ); TFile objects can not be copied. ~TFile(); File destructor. void Init(Bool_t create); Initialize a TFile object.; TFile implementations providing asynchronous open functionality need to; override this method to run the appropriate checks before calling this; standard initialization part. See TXNetFile::Init for an example. void Close(Option_t* option = """"); Close a file.; If option == ""R"", all TProcessIDs referenced by this file are deleted.; Calling TFile::Close(""R"") might be necessary i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFile.html:27102,Error,Error,27102,root/html532/TFile.html,https://root.cern,https://root.cern/root/html532/TFile.html,1,['Error'],['Error']
Availability," 9461{; 9462 GetPlayer();; 9463 if (fPlayer) {; 9464 fPlayer->StartViewer(600, 400);; 9465 }; 9466}; 9467 ; 9468////////////////////////////////////////////////////////////////////////////////; 9469/// Stop the cache learning phase; 9470///; 9471/// Returns:; 9472/// - 0 learning phase stopped or not active; 9473/// - -1 on error; 9474 ; 9475Int_t TTree::StopCacheLearningPhase(); 9476{; 9477 if (!GetTree()) {; 9478 if (LoadTree(0)<0) {; 9479 Error(""StopCacheLearningPhase"",""Could not load a tree"");; 9480 return -1;; 9481 }; 9482 }; 9483 if (GetTree()) {; 9484 if (GetTree() != this) {; 9485 return GetTree()->StopCacheLearningPhase();; 9486 }; 9487 } else {; 9488 Error(""StopCacheLearningPhase"", ""No tree is available. Could not stop cache learning phase"");; 9489 return -1;; 9490 }; 9491 ; 9492 TFile *f = GetCurrentFile();; 9493 if (!f) {; 9494 Error(""StopCacheLearningPhase"", ""No file is available. Could not stop cache learning phase"");; 9495 return -1;; 9496 }; 9497 TTreeCache *tc = GetReadCache(f,true);; 9498 if (!tc) {; 9499 Error(""StopCacheLearningPhase"", ""No cache is available. Could not stop learning phase"");; 9500 return -1;; 9501 }; 9502 tc->StopLearningPhase();; 9503 return 0;; 9504}; 9505 ; 9506////////////////////////////////////////////////////////////////////////////////; 9507/// Set the fTree member for all branches and sub branches.; 9508 ; 9509static void TBranch__SetTree(TTree *tree, TObjArray &branches); 9510{; 9511 Int_t nb = branches.GetEntriesFast();; 9512 for (Int_t i = 0; i < nb; ++i) {; 9513 TBranch* br = (TBranch*) branches.UncheckedAt(i);; 9514 br->SetTree(tree);; 9515 ; 9516 Int_t writeBasket = br->GetWriteBasket();; 9517 for (Int_t j = writeBasket; j >= 0; --j) {; 9518 TBasket *bk = (TBasket*)br->GetListOfBaskets()->UncheckedAt(j);; 9519 if (bk) {; 9520 tree->IncrementTotalBuffers(bk->GetBufferSize());; 9521 }; 9522 }; 9523 ; 9524 TBranch__SetTree(tree,*br->GetListOfBranches());; 9525 }; 9526}; 9527 ; 9528//////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:365366,avail,available,365366,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['avail'],['available']
Availability," 95{; 96 if (!CtorAllocate()) return;; 97 ; 98 for (Int_t i = 0; i < n; i++) {; 99 if (ex) fEX[i] = ex[i];; 100 else fEX[i] = 0;; 101 if (ey) fEY[i] = ey[i];; 102 else fEY[i] = 0;; 103 }; 104}; 105 ; 106 ; 107////////////////////////////////////////////////////////////////////////////////; 108/// TGraphErrors normal constructor.; 109///; 110/// if ex or ey are null, the corresponding arrays are preset to zero; 111 ; 112TGraphErrors::TGraphErrors(Int_t n, const Double_t *x, const Double_t *y, const Double_t *ex, const Double_t *ey); 113 : TGraph(n, x, y); 114{; 115 if (!CtorAllocate()) return;; 116 ; 117 n = sizeof(Double_t) * fNpoints;; 118 if (ex) memcpy(fEX, ex, n);; 119 else memset(fEX, 0, n);; 120 if (ey) memcpy(fEY, ey, n);; 121 else memset(fEY, 0, n);; 122}; 123 ; 124 ; 125////////////////////////////////////////////////////////////////////////////////; 126/// Constructor with four vectors of floats in input.; 127///; 128/// A grapherrors is built with the X coordinates taken from vx and Y coord from vy; 129/// and the errors from vectors vex and vey.; 130/// The number of points in the graph is the minimum of number of points; 131/// in vx and vy.; 132 ; 133TGraphErrors::TGraphErrors(const TVectorF &vx, const TVectorF &vy, const TVectorF &vex, const TVectorF &vey); 134 : TGraph(TMath::Min(vx.GetNrows(), vy.GetNrows()), vx.GetMatrixArray(), vy.GetMatrixArray() ); 135{; 136 if (!CtorAllocate()) return;; 137 Int_t ivexlow = vex.GetLwb();; 138 Int_t iveylow = vey.GetLwb();; 139 for (Int_t i = 0; i < fNpoints; i++) {; 140 fEX[i] = vex(i + ivexlow);; 141 fEY[i] = vey(i + iveylow);; 142 }; 143}; 144 ; 145 ; 146////////////////////////////////////////////////////////////////////////////////; 147/// Constructor with four vectors of doubles in input.; 148///; 149/// A grapherrors is built with the X coordinates taken from vx and Y coord from vy; 150/// and the errors from vectors vex and vey.; 151/// The number of points in the graph is the minimum of number of points; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8cxx_source.html:4025,error,errors,4025,doc/master/TGraphErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8cxx_source.html,1,['error'],['errors']
Availability," 970 continue;; 971 }; 972 ; 973 // Count the events after rejection due to cut or NaN value; 974 // (weighted and unweighted); 975 classEventCounts.nEvAfterCut++;; 976 classEventCounts.nWeEvAfterCut += weight;; 977 ; 978 // event accepted, fill temporary ntuple; 979 event_v.push_back(new Event(vars, tgts , vis, cl , weight));; 980 }; 981 }; 982 currentInfo.GetTree()->ResetBranchAddresses();; 983 }; 984 }; 985 ; 986 if (!nanInfWarnings.empty()) {; 987 Log() << kWARNING << ""Found events with NaN and/or +-inf values"" << Endl;; 988 for (const auto &warning : nanInfWarnings) {; 989 auto &log = Log() << kWARNING << warning.first;; 990 if (warning.second > 1) log << "" ("" << warning.second << "" times)"";; 991 log << Endl;; 992 }; 993 Log() << kWARNING << ""These NaN and/or +-infs were all removed by the specified cut, continuing."" << Endl;; 994 Log() << Endl;; 995 }; 996 ; 997 if (!nanInfErrors.empty()) {; 998 Log() << kWARNING << ""Found events with NaN and/or +-inf values (not removed by cut)"" << Endl;; 999 for (const auto &error : nanInfErrors) {; 1000 auto &log = Log() << kWARNING << error.first;; 1001 if (error.second > 1) log << "" ("" << error.second << "" times)"";; 1002 log << Endl;; 1003 }; 1004 Log() << kFATAL << ""How am I supposed to train a NaN or +-inf?!"" << Endl;; 1005 }; 1006 ; 1007 // for output format, get the maximum class name length; 1008 Int_t maxL = dsi.GetClassNameMaxLength();; 1009 ; 1010 Log() << kHEADER << Form(""[%s] : "",dsi.GetName()) << ""Number of events in input trees"" << Endl;; 1011 Log() << kDEBUG << ""(after possible flattening of arrays):"" << Endl;; 1012 ; 1013 ; 1014 for (UInt_t cl = 0; cl < dsi.GetNClasses(); cl++) {; 1015 Log() << kDEBUG //<< Form(""[%s] : "",dsi.GetName()); 1016 << "" ""; 1017 << setiosflags(ios::left) << std::setw(maxL) << dsi.GetClassInfo(cl)->GetName(); 1018 << "" -- number of events : ""; 1019 << std::setw(5) << eventCounts[cl].nEvBeforeCut; 1020 << "" / sum of weights: "" << std::setw(5) << eventCounts[cl].nWeEvBeforeCut << Endl;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:42477,error,error,42477,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,2,['error'],['error']
Availability," 984 if (fEXlow[i] < fX[i]) xmin = fX[i]-fEXlow[i];; 985 else xmin = TMath::Min(xmin,fX[i]/3);; 986 } else {; 987 xmin = fX[i]-fEXlow[i];; 988 }; 989 }; 990 if (fX[i] +fEXhigh[i] > xmax) xmax = fX[i]+fEXhigh[i];; 991 if (fY[i] -fEYlow[i] < ymin) {; 992 if (gPad && gPad->GetLogy()) {; 993 if (fEYlow[i] < fY[i]) ymin = fY[i]-fEYlow[i];; 994 else ymin = TMath::Min(ymin,fY[i]/3);; 995 } else {; 996 ymin = fY[i]-fEYlow[i];; 997 }; 998 }; 999 if (fY[i] +fEYhigh[i] > ymax) ymax = fY[i]+fEYhigh[i];; 1000 }; 1001}; 1002 ; 1003 ; 1004////////////////////////////////////////////////////////////////////////////////; 1005/// Copy and release.; 1006 ; 1007void TGraphAsymmErrors::CopyAndRelease(Double_t **newarrays,; 1008 Int_t ibegin, Int_t iend, Int_t obegin); 1009{; 1010 CopyPoints(newarrays, ibegin, iend, obegin);; 1011 if (newarrays) {; 1012 delete[] fEXlow;; 1013 fEXlow = newarrays[0];; 1014 delete[] fEXhigh;; 1015 fEXhigh = newarrays[1];; 1016 delete[] fEYlow;; 1017 fEYlow = newarrays[2];; 1018 delete[] fEYhigh;; 1019 fEYhigh = newarrays[3];; 1020 delete[] fX;; 1021 fX = newarrays[4];; 1022 delete[] fY;; 1023 fY = newarrays[5];; 1024 delete[] newarrays;; 1025 }; 1026}; 1027 ; 1028 ; 1029////////////////////////////////////////////////////////////////////////////////; 1030/// Copy errors from `fE***` to `arrays[***]`; 1031/// or to `f***` Copy points.; 1032 ; 1033Bool_t TGraphAsymmErrors::CopyPoints(Double_t **arrays,; 1034 Int_t ibegin, Int_t iend, Int_t obegin); 1035{; 1036 if (TGraph::CopyPoints(arrays ? arrays+4 : nullptr, ibegin, iend, obegin)) {; 1037 Int_t n = (iend - ibegin)*sizeof(Double_t);; 1038 if (arrays) {; 1039 memmove(&arrays[0][obegin], &fEXlow[ibegin], n);; 1040 memmove(&arrays[1][obegin], &fEXhigh[ibegin], n);; 1041 memmove(&arrays[2][obegin], &fEYlow[ibegin], n);; 1042 memmove(&arrays[3][obegin], &fEYhigh[ibegin], n);; 1043 } else {; 1044 memmove(&fEXlow[obegin], &fEXlow[ibegin], n);; 1045 memmove(&fEXhigh[obegin], &fEXhigh[ibegin], n);; 1046 memmove(&fEYl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html:35631,error,errors,35631,doc/master/TGraphAsymmErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html,1,['error'],['errors']
Availability," : "" << useForTesting << Endl;; 1280 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""availableTraining : "" << availableTraining << Endl;; 1281 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""availableTesting : "" << availableTesting << Endl;; 1282 ; 1283 if( availableUndefined<(useForTraining-availableTraining) ||; 1284 availableUndefined<(useForTesting -availableTesting ) ||; 1285 availableUndefined<(useForTraining+useForTesting-availableTraining-availableTesting ) ){; 1286 Log() << kFATAL << Form(""Dataset[%s] : "",dsi.GetName())<< ""More events requested than available!"" << Endl;; 1287 }; 1288 ; 1289 // select the events; 1290 if (useForTraining>availableTraining){; 1291 eventVectorTraining.insert( eventVectorTraining.end() , eventVectorUndefined.begin(), eventVectorUndefined.begin()+ useForTraining- availableTraining );; 1292 eventVectorUndefined.erase( eventVectorUndefined.begin(), eventVectorUndefined.begin() + useForTraining- availableTraining);; 1293 }; 1294 if (useForTesting>availableTesting){; 1295 eventVectorTesting.insert( eventVectorTesting.end() , eventVectorUndefined.begin(), eventVectorUndefined.begin()+ useForTesting- availableTesting );; 1296 }; 1297 }; 1298 eventVectorUndefined.clear();; 1299 ; 1300 // finally shorten the event vectors to the requested size by removing random events; 1301 if (splitMode.Contains( ""RANDOM"" )){; 1302 UInt_t sizeTraining = eventVectorTraining.size();; 1303 if( sizeTraining > UInt_t(requestedTraining) ){; 1304 std::vector<UInt_t> indicesTraining( sizeTraining );; 1305 // make indices; 1306 std::generate( indicesTraining.begin(), indicesTraining.end(), TMVA::Increment<UInt_t>(0) );; 1307 // shuffle indices; 1308 std::shuffle(indicesTraining.begin(), indicesTraining.end(), rndm);; 1309 // erase indices of not needed events; 1310 indicesTraining.erase( indicesTraining.begin()+sizeTraining-UInt_t(requestedTraining), indicesTraining.end() );; 1311 // delete all events with the given indices; 1312 for( std:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:56958,avail,availableTraining,56958,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,2,['avail'],"['availableTesting', 'availableTraining']"
Availability," : "",dsi.GetName())<< ""availableTesting : "" << availableTesting << Endl;; 1282 ; 1283 if( availableUndefined<(useForTraining-availableTraining) ||; 1284 availableUndefined<(useForTesting -availableTesting ) ||; 1285 availableUndefined<(useForTraining+useForTesting-availableTraining-availableTesting ) ){; 1286 Log() << kFATAL << Form(""Dataset[%s] : "",dsi.GetName())<< ""More events requested than available!"" << Endl;; 1287 }; 1288 ; 1289 // select the events; 1290 if (useForTraining>availableTraining){; 1291 eventVectorTraining.insert( eventVectorTraining.end() , eventVectorUndefined.begin(), eventVectorUndefined.begin()+ useForTraining- availableTraining );; 1292 eventVectorUndefined.erase( eventVectorUndefined.begin(), eventVectorUndefined.begin() + useForTraining- availableTraining);; 1293 }; 1294 if (useForTesting>availableTesting){; 1295 eventVectorTesting.insert( eventVectorTesting.end() , eventVectorUndefined.begin(), eventVectorUndefined.begin()+ useForTesting- availableTesting );; 1296 }; 1297 }; 1298 eventVectorUndefined.clear();; 1299 ; 1300 // finally shorten the event vectors to the requested size by removing random events; 1301 if (splitMode.Contains( ""RANDOM"" )){; 1302 UInt_t sizeTraining = eventVectorTraining.size();; 1303 if( sizeTraining > UInt_t(requestedTraining) ){; 1304 std::vector<UInt_t> indicesTraining( sizeTraining );; 1305 // make indices; 1306 std::generate( indicesTraining.begin(), indicesTraining.end(), TMVA::Increment<UInt_t>(0) );; 1307 // shuffle indices; 1308 std::shuffle(indicesTraining.begin(), indicesTraining.end(), rndm);; 1309 // erase indices of not needed events; 1310 indicesTraining.erase( indicesTraining.begin()+sizeTraining-UInt_t(requestedTraining), indicesTraining.end() );; 1311 // delete all events with the given indices; 1312 for( std::vector<UInt_t>::iterator it = indicesTraining.begin(), itEnd = indicesTraining.end(); it != itEnd; ++it ){; 1313 delete eventVectorTraining.at( (*it) ); // delete event; 1314 eventVectorTrai",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:57164,avail,availableTesting,57164,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,1,['avail'],['availableTesting']
Availability, : 101 | 13439.7 12392 0.0201571 0.00185957 43721.7 0; : 102 Minimum Test error found - save the configuration ; : 102 | 13328.8 12281.3 0.0202143 0.00181888 43489.1 0; : 103 Minimum Test error found - save the configuration ; : 103 | 13217 12173.3 0.0200026 0.0018059 43964.1 0; : 104 Minimum Test error found - save the configuration ; : 104 | 13107.7 12065.4 0.0200115 0.00180466 43939.6 0; : 105 Minimum Test error found - save the configuration ; : 105 | 12997.9 11959.7 0.0201517 0.00183944 43686.6 0; : 106 Minimum Test error found - save the configuration ; : 106 | 12890.1 11854.8 0.0204012 0.00181637 43045.8 0; : 107 Minimum Test error found - save the configuration ; : 107 | 12783.3 11750.6 0.0200273 0.00179591 43880.4 0; : 108 Minimum Test error found - save the configuration ; : 108 | 12679.4 11643.6 0.0200105 0.00179336 43914.7 0; : 109 Minimum Test error found - save the configuration ; : 109 | 12570.9 11543.2 0.0200071 0.00179343 43923.1 0; : 110 Minimum Test error found - save the configuration ; : 110 | 12468 11440.7 0.0200047 0.00179413 43930.5 0; : 111 Minimum Test error found - save the configuration ; : 111 | 12365.7 11337.8 0.0200081 0.00179319 43920.1 0; : 112 Minimum Test error found - save the configuration ; : 112 | 12261.9 11237.7 0.02002 0.00179362 43892.3 0; : 113 Minimum Test error found - save the configuration ; : 113 | 12160 11139.2 0.0201211 0.00180176 43669.7 0; : 114 Minimum Test error found - save the configuration ; : 114 | 12060.2 11039.6 0.020348 0.00184935 43246.4 0; : 115 Minimum Test error found - save the configuration ; : 115 | 11961.2 10939.8 0.0202696 0.00181495 43349.5 0; : 116 Minimum Test error found - save the configuration ; : 116 | 11860.6 10843.2 0.0200362 0.00180159 43872.5 0; : 117 Minimum Test error found - save the configuration ; : 117 | 11765.1 10743.9 0.0200658 0.00179585 43787.7 0; : 118 Minimum Test error found - save the configuration ; : 118 | 11664.5 10650.2 0.0200137 0.00179245 43904.8 0; : 119 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:23349,error,error,23349,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 189 | 6500.15 5537.2 0.0201183 0.00181031 43696.6 0; : 190 Minimum Test error found - save the configuration ; : 190 | 6444.37 5487.05 0.0200871 0.00180586 43760.7 0; : 191 Minimum Test error found - save the configuration ; : 191 | 6394.21 5433.57 0.0200994 0.00180152 43720.8 0; : 192 Minimum Test error found - save the configuration ; : 192 | 6340.82 5382.29 0.0201748 0.00181779 43580.1 0; : 193 Minimum Test error found - save the configuration ; : 193 | 6289.73 5330.56 0.0202017 0.00183095 43547.4 0; : 194 Minimum Test error found - save the configuration ; : 194 | 6238.01 5279.82 0.0201002 0.00180964 43738.5 0; : 195 Minimum Test error found - save the configuration ; : 195 | 6186.17 5231.06 0.0200801 0.00180696 43780.1 0; : 196 Minimum Test error found - save the configuration ; : 196 | 6137.18 5180.37 0.0200943 0.00180721 43746.7 0; : 197 Minimum Test error found - save the configuration ; : 197 | 6087.3 5129.97 0.0200908 0.00180793 43756.8 0; : 198 Minimum Test error found - save the configuration ; : 198 | 6036.37 5081.81 0.0200859 0.00180009 43749.7 0; : 199 Minimum Test error found - save the configuration ; : 199 | 5987.5 5033.69 0.0200862 0.001808 43768 0; : 200 Minimum Test error found - save the configuration ; : 200 | 5938.96 4985.44 0.0201058 0.00181448 43736.6 0; : 201 Minimum Test error found - save the configuration ; : 201 | 5891.43 4936.26 0.0201175 0.00184013 43770 0; : 202 Minimum Test error found - save the configuration ; : 202 | 5842.14 4889.6 0.0203335 0.00187992 43352.1 0; : 203 Minimum Test error found - save the configuration ; : 203 | 5794.67 4843.13 0.0203128 0.00181164 43240.6 0; : 204 Minimum Test error found - save the configuration ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Test error found - save the configuration ; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Test error found - save the configuration ; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:33300,error,error,33300,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 233 | 4531.87 3609.69 0.0200999 0.00180936 43738.5 0; : 234 Minimum Test error found - save the configuration ; : 234 | 4493.9 3574.45 0.0204352 0.00182946 42997.5 0; : 235 Minimum Test error found - save the configuration ; : 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:38287,error,error,38287,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 234 | 4493.9 3574.45 0.0204352 0.00182946 42997.5 0; : 235 Minimum Test error found - save the configuration ; : 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minimum Test error found - save the configuration ; : 251 | 3905.19 3012.24 0.0207706 0.0018857 42361.9 0; : 252 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:38401,error,error,38401,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 261 | 3595.24 2720.67 0.0206036 0.00182681 42605.8 0; : 262 Minimum Test error found - save the configuration ; : 262 | 3565.68 2692.59 0.0203715 0.00187472 43250.7 0; : 263 Minimum Test error found - save the configuration ; : 263 | 3536.15 2665.16 0.0204197 0.00183921 43055.9 0; : 264 Minimum Test error found - save the configuration ; : 264 | 3507.67 2636.8 0.0206158 0.00185399 42639.7 0; : 265 Minimum Test error found - save the configuration ; : 265 | 3477.42 2610.03 0.0202093 0.0018315 43530.8 0; : 266 Minimum Test error found - save the configuration ; : 266 | 3448.44 2583.82 0.0201348 0.00181129 43659.7 0; : 267 Minimum Test error found - save the configuration ; : 267 | 3419.61 2557.61 0.0201203 0.00181281 43697.9 0; : 268 Minimum Test error found - save the configuration ; : 268 | 3391.52 2531.71 0.0201083 0.00181098 43722.2 0; : 269 Minimum Test error found - save the configuration ; : 269 | 3363.52 2505.37 0.0201147 0.00180493 43692.5 0; : 270 Minimum Test error found - save the configuration ; : 270 | 3335.06 2479.9 0.0201599 0.00183615 43659.2 0; : 271 Minimum Test error found - save the configuration ; : 271 | 3308.12 2454.26 0.0202082 0.00181348 43490.8 0; : 272 Minimum Test error found - save the configuration ; : 272 | 3280.89 2427.73 0.020272 0.0018293 43377.6 0; : 273 Minimum Test error found - save the configuration ; : 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Mini,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:41457,error,error,41457,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 271 | 3308.12 2454.26 0.0202082 0.00181348 43490.8 0; : 272 Minimum Test error found - save the configuration ; : 272 | 3280.89 2427.73 0.020272 0.0018293 43377.6 0; : 273 Minimum Test error found - save the configuration ; : 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Minimum Test error found - save the configuration ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Minimum Test error found - save the configuration ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimum Test error found - save the configuration ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimum Test error found - save the configuration ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimum Test error found - save the configuration ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimum Test error found - save the configuration ; : 288 | 2866.16 2052.25 0.020288 0.00183539 43354.4 0; : 289 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:42594,error,error,42594,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 272 | 3280.89 2427.73 0.020272 0.0018293 43377.6 0; : 273 Minimum Test error found - save the configuration ; : 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Minimum Test error found - save the configuration ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Minimum Test error found - save the configuration ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimum Test error found - save the configuration ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimum Test error found - save the configuration ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimum Test error found - save the configuration ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimum Test error found - save the configuration ; : 288 | 2866.16 2052.25 0.020288 0.00183539 43354.4 0; : 289 Minimum Test error found - save the configuration ; : 289 | 2841.54 2030.76 0.0202472 0.00188865 43576.5 0; : 290 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:42708,error,error,42708,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Minimum Test error found - save the configuration ; : 283 | 2989.86 2164.96 0.0201855 0.00181334 43544.1 0; : 284 Minimum Test error found - save the configuration ; : 284 | 2964.88 2142 0.0201236 0.00181217 43688.6 0; : 285 Minimum Test error found - save the configuration ; : 285 | 2939.99 2119.13 0.0201416 0.00181963 43663.5 0; : 286 Minimum Test error found - save the configuration ; : 286 | 2915.05 2096.39 0.0202522 0.00187797 43539.3 0; : 287 Minimum Test error found - save the configuration ; : 287 | 2890.28 2074.46 0.0203309 0.00186659 43326.9 0; : 288 Minimum Test error found - save the configuration ; : 288 | 2866.16 2052.25 0.020288 0.00183539 43354.4 0; : 289 Minimum Test error found - save the configuration ; : 289 | 2841.54 2030.76 0.0202472 0.00188865 43576.5 0; : 290 Minimum Test error found - save the configuration ; : 290 | 2817.7 2009.26 0.020243 0.00187711 43559.1 0; : 291 Minimum Test error found - save the configuration ; : 291 | 2793.45 1988.22 0.0204562 0.0019356 43195.2 0; : 292 Minimum Test error found - save the configuration ; : 292 | 2769.81 1967.05 0.0206007 0.00187416 42720.1 0; : 293 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:43048,error,error,43048,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 300 | 2587.28 1803.4 0.0201132 0.00181242 43714.1 0; : 301 Minimum Test error found - save the configuration ; : 301 | 2563.77 1785.09 0.0201182 0.00181092 43698.4 0; : 302 Minimum Test error found - save the configuration ; : 302 | 2542.68 1765.44 0.020145 0.00181496 43644.3 0; : 303 Minimum Test error found - save the configuration ; : 303 | 2520.76 1746.74 0.0201278 0.00181436 43683.8 0; : 304 Minimum Test error found - save the configuration ; : 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:45881,error,error,45881,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 301 | 2563.77 1785.09 0.0201182 0.00181092 43698.4 0; : 302 Minimum Test error found - save the configuration ; : 302 | 2542.68 1765.44 0.020145 0.00181496 43644.3 0; : 303 Minimum Test error found - save the configuration ; : 303 | 2520.76 1746.74 0.0201278 0.00181436 43683.8 0; : 304 Minimum Test error found - save the configuration ; : 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 M,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:45994,error,error,45994,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 302 | 2542.68 1765.44 0.020145 0.00181496 43644.3 0; : 303 Minimum Test error found - save the configuration ; : 303 | 2520.76 1746.74 0.0201278 0.00181436 43683.8 0; : 304 Minimum Test error found - save the configuration ; : 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:46108,error,error,46108,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum Test error found - save the configuration ; : 327 | 2044.89 1339.01 0.0203662 0.00185106 43207.9 0; : 328 Minimum Test error found - save the configuration ; : 328 | 2027.08 1324.14 0.0205379 0.00189883 42920.6 0; : 329 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:47132,error,error,47132,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum Test error found - save the configuration ; : 327 | 2044.89 1339.01 0.0203662 0.00185106 43207.9 0; : 328 Minimum Test error found - save the configuration ; : 328 | 2027.08 1324.14 0.0205379 0.00189883 42920.6 0; : 329 Minimum Test error found - save the configuration ; : 329 | 2010.14 1308.4 0.0208465 0.00188706 42195.2 0; : 330 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:47246,error,error,47246,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum Test error found - save the configuration ; : 327 | 2044.89 1339.01 0.0203662 0.00185106 43207.9 0; : 328 Minimum Test error found - save the configuration ; : 328 | 2027.08 1324.14 0.0205379 0.00189883 42920.6 0; : 329 Minimum Test error found - save the configuration ; : 329 | 2010.14 1308.4 0.0208465 0.00188706 42195.2 0; : 330 Minimum Test error found - save the configuration ; : 330 | 1991.48 1294.33 0.0203889 0.00185386 43161.4 0; : 331 Minimum Test error found - save the configuration ; : 331 | 1974 1281.47 0.020168 0.00182028 43602.2 0; : 332 Minimum Test error found - save the configuration ; : 332 | 1957.4 1265.55 0.0201238 0.00181209 43687.9 0; : 333 Minimum Test error found - save the configuration ; : 333 | 1939.3 1251.56 0.020118 0.0018119 43701.4 0; : 334 Minimum Test error found - save the configuration ; : 334 | 1922.28 1237.18 0.0201046 0.00181273 43735.3 0; : 335 Minimum Test error found - save the configuration ; : 335 | 1905.38 1223.07 0.0201485 0.00181696 43640.6 0; : 336 Minimum Test error found - save the configuration ; : 336 | 1888.23 1209.6 0.0201214 0.00181991 43712.2 0; : 337 Minimum Test error found - save the configuration ; : 337 | 1871.94 1195.83 0.0205304 0.00184821 42821.5 0; : 338 Minimum Test error found - save the configuration ; : 338 | 1855.07 1182.37 0.0201268 0.00181989 43699.3 0; : 339 Minimum Test error found - save the configuration ; : 339 | 1838.61 1168.93 0.0201201 0.00181292 43698.7 0; : 340 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:48381,error,error,48381,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 371 | 1373.35 810.549 0.0201499 0.00183853 43688.7 0; : 372 Minimum Test error found - save the configuration ; : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum Test error found - save the configuration ; : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum Test error found - save the configuration ; : 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Minimum Test error found - save the configuration ; : 381 | 1250.17 723.372 0.0201233 0.00181189 43688.6 0; : 382 Minimum Test error found - save the configuration ; : 382 | 1238.6 715.116 0.0201183 0.00181259 43702.2 0; : 383 Minimum Test error found - save the configuration ; : 383 | 1227 706.748 0.0201329 0.0018213 43688.2 0; : 384 Minimum Test error found - save the configuration ; : 384 | 1215.11 699.222 0.0201342 0.00181943 43680.7 0; : 385 Minimum Test error found - save the configuration ; : 385 | 1203.63 691.403 0.02014 0.00182334 43676.1 0; : 386 Minimum Test error found - save the configuration ; : 386 | 1192.53 683.241 0.0201197 0.00181992 43716.3 0; : 387 Minimum Test error found - save the configuration ; : 387 | 1181.2 675.7 0.0201175 0.00182002 43721.9 0; : 388 Minimum Test error found - save the configuration ; : 388 | 1170.08 667.761 0.0201168 0.00182403 43733.1 0; : 389 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:53930,error,error,53930,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 372 | 1359.77 801.896 0.0201658 0.00181611 43597.4 0; : 373 Minimum Test error found - save the configuration ; : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum Test error found - save the configuration ; : 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Minimum Test error found - save the configuration ; : 381 | 1250.17 723.372 0.0201233 0.00181189 43688.6 0; : 382 Minimum Test error found - save the configuration ; : 382 | 1238.6 715.116 0.0201183 0.00181259 43702.2 0; : 383 Minimum Test error found - save the configuration ; : 383 | 1227 706.748 0.0201329 0.0018213 43688.2 0; : 384 Minimum Test error found - save the configuration ; : 384 | 1215.11 699.222 0.0201342 0.00181943 43680.7 0; : 385 Minimum Test error found - save the configuration ; : 385 | 1203.63 691.403 0.02014 0.00182334 43676.1 0; : 386 Minimum Test error found - save the configuration ; : 386 | 1192.53 683.241 0.0201197 0.00181992 43716.3 0; : 387 Minimum Test error found - save the configuration ; : 387 | 1181.2 675.7 0.0201175 0.00182002 43721.9 0; : 388 Minimum Test error found - save the configuration ; : 388 | 1170.08 667.761 0.0201168 0.00182403 43733.1 0; : 389 Minimum Test error found - save the configuration ; : 389 | 1158.61 661.271 0.0204728 0.0018727 43010.6 0; : 390 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:54044,error,error,54044,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 373 | 1347.92 793.298 0.0201248 0.00181285 43687.4 0; : 374 Minimum Test error found - save the configuration ; : 374 | 1335.01 784.052 0.0201186 0.0018071 43688.4 0; : 375 Minimum Test error found - save the configuration ; : 375 | 1322.7 774.736 0.0201382 0.00181076 43650.3 0; : 376 Minimum Test error found - save the configuration ; : 376 | 1310.36 765.843 0.0201418 0.00181155 43643.7 0; : 377 Minimum Test error found - save the configuration ; : 377 | 1298.44 756.891 0.0201268 0.00181403 43685.4 0; : 378 Minimum Test error found - save the configuration ; : 378 | 1285.86 748.455 0.0201275 0.00181908 43695.6 0; : 379 Minimum Test error found - save the configuration ; : 379 | 1273.98 740.611 0.0201241 0.00181383 43691.2 0; : 380 Minimum Test error found - save the configuration ; : 380 | 1262.34 731.526 0.0201157 0.00181169 43706.2 0; : 381 Minimum Test error found - save the configuration ; : 381 | 1250.17 723.372 0.0201233 0.00181189 43688.6 0; : 382 Minimum Test error found - save the configuration ; : 382 | 1238.6 715.116 0.0201183 0.00181259 43702.2 0; : 383 Minimum Test error found - save the configuration ; : 383 | 1227 706.748 0.0201329 0.0018213 43688.2 0; : 384 Minimum Test error found - save the configuration ; : 384 | 1215.11 699.222 0.0201342 0.00181943 43680.7 0; : 385 Minimum Test error found - save the configuration ; : 385 | 1203.63 691.403 0.02014 0.00182334 43676.1 0; : 386 Minimum Test error found - save the configuration ; : 386 | 1192.53 683.241 0.0201197 0.00181992 43716.3 0; : 387 Minimum Test error found - save the configuration ; : 387 | 1181.2 675.7 0.0201175 0.00182002 43721.9 0; : 388 Minimum Test error found - save the configuration ; : 388 | 1170.08 667.761 0.0201168 0.00182403 43733.1 0; : 389 Minimum Test error found - save the configuration ; : 389 | 1158.61 661.271 0.0204728 0.0018727 43010.6 0; : 390 Minimum Test error found - save the configuration ; : 390 | 1148.13 652.893 0.0205991 0.00194136 42877.5 0; : 391 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:54158,error,error,54158,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 412 | 928.172 509.995 0.0202986 0.00182294 43300.2 0; : 413 Minimum Test error found - save the configuration ; : 413 | 918.166 504.988 0.0203305 0.00183515 43254.1 0; : 414 Minimum Test error found - save the configuration ; : 414 | 909.515 499.67 0.0201973 0.00182149 43535.5 0; : 415 Minimum Test error found - save the configuration ; : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Minimum Test error found - save the configuration ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Minimum Test error found - save the configuration ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Minimum Test error found - save the configuration ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Minimum Test error found - save the configuration ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Minimum Test error found - save the configuration ; : 423 | 832.226 453.261 0.0201773 0.00182876 43600.2 0; : 424 Minimum Test error found - save the configuration ; : 424 | 824.213 447.823 0.020172 0.00183242 43621.4 0; : 425 Minimum Test error found - save the configuration ; : 425 | 816.038 443.488 0.0201762 0.00183703 43622.6 0; : 426 Minimum Test error found - save the configuration ; : 426 | 807.627 438.586 0.0202495 0.00183837 43452 0; : 427 Minimum Test error found - save the configuration ; : 427 | 799.623 433.9 0.0201527 0.00181997 43637.7 0; : 428 Minimum Test error found - save the configuration ; : 428 | 791.762 429.014 0.0201231 0.00181389 43693.9 0; : 429 Minimum Test error found - save the configuration ; : 429 | 783.663 424.486 0.0202036 0.00181812 43512.5 0; : 430 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:58569,error,error,58569,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 413 | 918.166 504.988 0.0203305 0.00183515 43254.1 0; : 414 Minimum Test error found - save the configuration ; : 414 | 909.515 499.67 0.0201973 0.00182149 43535.5 0; : 415 Minimum Test error found - save the configuration ; : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Minimum Test error found - save the configuration ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Minimum Test error found - save the configuration ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Minimum Test error found - save the configuration ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Minimum Test error found - save the configuration ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Minimum Test error found - save the configuration ; : 423 | 832.226 453.261 0.0201773 0.00182876 43600.2 0; : 424 Minimum Test error found - save the configuration ; : 424 | 824.213 447.823 0.020172 0.00183242 43621.4 0; : 425 Minimum Test error found - save the configuration ; : 425 | 816.038 443.488 0.0201762 0.00183703 43622.6 0; : 426 Minimum Test error found - save the configuration ; : 426 | 807.627 438.586 0.0202495 0.00183837 43452 0; : 427 Minimum Test error found - save the configuration ; : 427 | 799.623 433.9 0.0201527 0.00181997 43637.7 0; : 428 Minimum Test error found - save the configuration ; : 428 | 791.762 429.014 0.0201231 0.00181389 43693.9 0; : 429 Minimum Test error found - save the configuration ; : 429 | 783.663 424.486 0.0202036 0.00181812 43512.5 0; : 430 Minimum Test error found - save the configuration ; : 430 | 776.025 420.47 0.020126 0.00182055 43702.9 0; : 431 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:58683,error,error,58683,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Minimum Test error found - save the configuration ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Minimum Test error found - save the configuration ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Minimum Test error found - save the configuration ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Minimum Test error found - save the configuration ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Minimum Test error found - save the configuration ; : 423 | 832.226 453.261 0.0201773 0.00182876 43600.2 0; : 424 Minimum Test error found - save the configuration ; : 424 | 824.213 447.823 0.020172 0.00183242 43621.4 0; : 425 Minimum Test error found - save the configuration ; : 425 | 816.038 443.488 0.0201762 0.00183703 43622.6 0; : 426 Minimum Test error found - save the configuration ; : 426 | 807.627 438.586 0.0202495 0.00183837 43452 0; : 427 Minimum Test error found - save the configuration ; : 427 | 799.623 433.9 0.0201527 0.00181997 43637.7 0; : 428 Minimum Test error found - save the configuration ; : 428 | 791.762 429.014 0.0201231 0.00181389 43693.9 0; : 429 Minimum Test error found - save the configuration ; : 429 | 783.663 424.486 0.0202036 0.00181812 43512.5 0; : 430 Minimum Test error found - save the configuration ; : 430 | 776.025 420.47 0.020126 0.00182055 43702.9 0; : 431 Minimum Test error found - save the configuration ; : 431 | 768.212 415.652 0.0201366 0.00182081 43678.1 0; : 432 Minimum Test error found - save the configuration ; : 432 | 761.012 411.218 0.02015 0.00183569 43681.6 0; : 433 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:58910,error,error,58910,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, : 450 | 634.906 340.694 0.0201841 0.00185283 43641.2 0; : 451 Minimum Test error found - save the configuration ; : 451 | 628.321 336.668 0.0202054 0.00184722 43577.2 0; : 452 Minimum Test error found - save the configuration ; : 452 | 621.73 333.236 0.0201956 0.00184565 43596.7 0; : 453 Minimum Test error found - save the configuration ; : 453 | 615.499 330.282 0.0202258 0.00184415 43521.7 0; : 454 Minimum Test error found - save the configuration ; : 454 | 608.831 326.391 0.0201257 0.00180567 43668.1 0; : 455 Minimum Test error found - save the configuration ; : 455 | 602.478 323.085 0.0201467 0.00181706 43645.1 0; : 456 Minimum Test error found - save the configuration ; : 456 | 596.625 319.828 0.0201415 0.00181382 43649.8 0; : 457 Minimum Test error found - save the configuration ; : 457 | 590.662 316.621 0.0201112 0.00181253 43718.9 0; : 458 Minimum Test error found - save the configuration ; : 458 | 584.171 313.672 0.0201179 0.00180966 43696.3 0; : 459 Minimum Test error found - save the configuration ; : 459 | 578.684 310.243 0.020117 0.00181196 43703.7 0; : 460 Minimum Test error found - save the configuration ; : 460 | 572.668 306.849 0.0201178 0.00181375 43706.2 0; : 461 Minimum Test error found - save the configuration ; : 461 | 566.644 303.945 0.0201078 0.00181369 43730 0; : 462 Minimum Test error found - save the configuration ; : 462 | 560.843 301.023 0.0201248 0.00180535 43669.5 0; : 463 Minimum Test error found - save the configuration ; : 463 | 555.13 298.085 0.0201287 0.00181104 43673.6 0; : 464 Minimum Test error found - save the configuration ; : 464 | 549.755 294.833 0.0201145 0.00181462 43716.1 0; : 465 Minimum Test error found - save the configuration ; : 465 | 543.742 292.285 0.0201004 0.00181141 43742.2 0; : 466 Minimum Test error found - save the configuration ; : 466 | 538.058 289.638 0.0201135 0.00181083 43709.6 0; : 467 Minimum Test error found - save the configuration ; : 467 | 532.551 286.201 0.0203237 0.00183254 43264 0; : 468 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:62875,error,error,62875,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability," : Class Pointer type given does not match the type expected by the branch; 2857/// - kMatch (0) : perfect match; 2858/// - kMatchConversion (1) : match with (I/O) conversion; 2859/// - kMatchConversionCollection (2) : match with (I/O) conversion of the content of a collection; 2860/// - kMakeClass (3) : MakeClass mode so we can not check.; 2861/// - kVoidPtr (4) : void* passed so no check was made.; 2862/// - kNoCheck (5) : Underlying TBranch not yet available so no check was made.; 2863/// In addition this can be multiplexed with the two bits:; 2864/// - kNeedEnableDecomposedObj : in order for the address (type) to be 'usable' the branch needs to be in Decomposed Object (aka MakeClass) mode.; 2865/// - kNeedDisableDecomposedObj : in order for the address (type) to be 'usable' the branch needs to not be in Decomposed Object (aka MakeClass) mode.; 2866/// This bits can be masked out by using kDecomposedObjMask; 2867 ; 2868Int_t TTree::CheckBranchAddressType(TBranch* branch, TClass* ptrClass, EDataType datatype, bool isptr); 2869{; 2870 if (GetMakeClass()) {; 2871 // If we are in MakeClass mode so we do not really use classes.; 2872 return kMakeClass;; 2873 }; 2874 ; 2875 // Let's determine what we need!; 2876 TClass* expectedClass = nullptr;; 2877 EDataType expectedType = kOther_t;; 2878 if (0 != branch->GetExpectedType(expectedClass,expectedType) ) {; 2879 // Something went wrong, the warning message has already been issued.; 2880 return kInternalError;; 2881 }; 2882 bool isBranchElement = branch->InheritsFrom( TBranchElement::Class() );; 2883 if (expectedClass && datatype == kOther_t && ptrClass == nullptr) {; 2884 if (isBranchElement) {; 2885 TBranchElement* bEl = (TBranchElement*)branch;; 2886 bEl->SetTargetClass( expectedClass->GetName() );; 2887 }; 2888 if (expectedClass && expectedClass->GetCollectionProxy() && dynamic_cast<TEmulatedCollectionProxy*>(expectedClass->GetCollectionProxy())) {; 2889 Error(""SetBranchAddress"", ""Unable to determine the type given for",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:113201,mask,masked,113201,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['mask'],['masked']
Availability," : ␛[1m================================================================␛[0m; : ; RuleFit : -------------------RULE ENSEMBLE SUMMARY------------------------; : Tree training method : AdaBoost; : Number of events per tree : 2000; : Number of trees : 20; : Number of generated rules : 196; : Idem, after cleanup : 80; : Average number of cuts per rule : 3.01; : Spread in number of cuts per rules : 1.23; : ----------------------------------------------------------------; : ; : GD path scan - the scan stops when the max num. of steps is reached or a min is found; : Estimating the cutoff parameter tau. The estimated time is a pessimistic maximum.; : Best path found with tau = 0.0000 after 2.21 sec ; : Fitting model...; <WARNING> : ; : Minimisation elapsed time : 1.23 sec ; : ----------------------------------------------------------------; : Found minimum at step 10000 with error = 0.552378; : Reason for ending loop: end of loop reached; : ----------------------------------------------------------------; : The error rate was still decreasing at the end of the path; : Increase number of steps (GDNSteps).; : Removed 28 out of a total of 80 rules with importance < 0.001; : ; : ================================================================; : M o d e l ; : ================================================================; RuleFit : Offset (a0) = 9.46803; : ------------------------------------; : Linear model (weights unnormalised); : ------------------------------------; : Variable : Weights : Importance; : ------------------------------------; : myvar1 : -6.338e-01 : 0.472; : myvar2 : -4.488e-01 : 0.209; : var3 : -2.810e-01 : 0.129; : var4 : 1.850e+00 : 1.000; : ------------------------------------; : Number of rules = 52; : Printing the first 10 rules, ordered in importance.; : Rule 1 : Importance = 0.4294; : Cut 1 : -0.708 < var4 ; : Rule 2 : Importance = 0.3676; : Cut 1 : var3 < -0.0812; : Rule 3 : Importance = 0.3363; : Cut 1 : -0.0812 < var3 ; : Rule 4 : Importance = 0.29",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAClassification_8C.html:58257,error,error,58257,doc/master/TMVAClassification_8C.html,https://root.cern,https://root.cern/doc/master/TMVAClassification_8C.html,1,['error'],['error']
Availability," ; (; Int_t ; code). inlineoverridevirtual . Forwards to the PDF's implementation. ; Reimplemented from RooAbsPdf.; Definition at line 87 of file RooBinSamplingPdf.h. ◆ integrate(). double RooBinSamplingPdf::integrate ; (; const RooArgSet * ; normSet, . double ; low, . double ; high . ); const. private . Integrate the wrapped PDF using our current integrator, with given norm set and limits. ; Definition at line 302 of file RooBinSamplingPdf.cxx. ◆ integrator(). std::unique_ptr< ROOT::Math::IntegratorOneDim > & RooBinSamplingPdf::integrator ; (; ); const. Direct access to the unique_ptr holding the integrator that's used to sample the bins. ; This can be used to change options such as sampling accuracy or to entirely exchange the integrator.; Example: Use the 61-point Gauss-Kronrod integration rule; ROOT::Math::IntegratorOneDimOptions intOptions = pdf.integrator()->Options();; intOptions.SetNPoints(6); // 61-point integration rule; intOptions.SetRelTolerance(1.E-9); // Smaller tolerance -> more subdivisions; pdf.integrator()->SetOptions(intOptions);; ROOT::Math::BaseIntegratorOptions::SetRelTolerancevoid SetRelTolerance(double tol)set the relative toleranceDefinition IntegratorOptions.h:80; ROOT::Math::IntegratorOneDimOptionsNumerical one dimensional integration options.Definition IntegratorOptions.h:113; ROOT::Math::IntegratorOneDimOptions::SetNPointsvoid SetNPoints(unsigned int n)Set number of points for active integration rule.Definition IntegratorOptions.h:140; See alsoROOT::Math::IntegratorOneDim::SetOptions for more details on integration options. ; NoteWhen RooBinSamplingPdf is loaded from files, integrator options will fall back to the default values. ; Definition at line 278 of file RooBinSamplingPdf.cxx. ◆ IsA(). TClass * RooBinSamplingPdf::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 134 of file RooBinSamplingPdf.h. ◆ isBinnedDistribution(). bool RooBinSamplingPdf::isB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinSamplingPdf.html:87071,toler,tolerance,87071,doc/master/classRooBinSamplingPdf.html,https://root.cern,https://root.cern/doc/master/classRooBinSamplingPdf.html,1,['toler'],['tolerance']
Availability," ; (; Long64_t ; offs, . Int_t ; len . ). virtual . Reimplemented from TFile.; Definition at line 774 of file TDavixFile.cxx. ◆ ReadBuffers(). Bool_t TDavixFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). virtual . Read the nbuf blocks described in arrays pos and len. ; The value pos[i] is the seek position of block i of length len[i]. Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer. This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 790 of file TDavixFile.cxx. ◆ Seek(). void TDavixFile::Seek ; (; Long64_t ; offset, . ERelativeTo ; pos = kBeg . ). virtual . Set position from where to start reading. ; Reimplemented from TFile.; Definition at line 710 of file TDavixFile.cxx. ◆ setCACheck(). void TDavixFile::setCACheck ; (; Bool_t ; check). Enable or disable certificate authority check. ; Definition at line 827 of file TDavixFile.cxx. ◆ Streamer(). virtual void TDavixFile::Streamer ; (; TBuffer & ; R__b). virtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TDavixFile::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 128 of file TDavixFile.h. ◆ WriteBuffer(). Bool_t TDavixFile::WriteBuffer ; (; const char * ; buf, . Int_t ; len . ). virtual . Write a buffer to the file. ; This is the basic low level write operation. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 809 of file TDavixFile.cxx. Member Data Documentation. ◆ d_ptr. TDavixFileInternal* TDavixFile::d_ptr. private . Definition at line 72 of file TDavixFile.h. Libraries for TDavixFile:. [legend]; The documentation for this class was generated from the following files:; net/davix/inc/TDavixFile.h; net/davix/src/TDavixFile.cxx. TDavixFile. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:42:27 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDavixFile.html:47868,failure,failure,47868,doc/master/classTDavixFile.html,https://root.cern,https://root.cern/doc/master/classTDavixFile.html,1,['failure'],['failure']
Availability," ; (; Pixel_t ; bg). protected . Initialize a text view widget. ; Definition at line 73 of file TGTextView.cxx. ◆ IsA(). TClass * TGTextView::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TGCompositeFrame.; Reimplemented in TGTextViewostream.; Definition at line 141 of file TGTextView.h. ◆ IsMarked(). Bool_t TGTextView::IsMarked ; (; ); const. inline . Definition at line 119 of file TGTextView.h. ◆ IsReadOnly(). Bool_t TGTextView::IsReadOnly ; (; ); const. inline . Definition at line 118 of file TGTextView.h. ◆ IsSaved(). virtual Bool_t TGTextView::IsSaved ; (; ). inlinevirtual . Definition at line 77 of file TGTextView.h. ◆ Layout(). void TGTextView::Layout ; (; ). overridevirtual . Layout the components of view. ; Reimplemented from TGCompositeFrame.; Definition at line 1329 of file TGTextView.cxx. ◆ LoadBuffer(). Bool_t TGTextView::LoadBuffer ; (; const char * ; txtbuf). virtual . Load text from a text buffer. Return false in case of failure. ; Definition at line 471 of file TGTextView.cxx. ◆ LoadFile(). Bool_t TGTextView::LoadFile ; (; const char * ; filename, . long ; startpos = 0, . long ; length = -1 . ). virtual . Load a file in the text view widget. ; Return false in case file does not exist. ; Definition at line 454 of file TGTextView.cxx. ◆ Mark(). void TGTextView::Mark ; (; Long_t ; xPos, . Long_t ; yPos . ). protectedvirtual . Mark a text region from xPos to yPos. ; Definition at line 1170 of file TGTextView.cxx. ◆ Marked(). virtual void TGTextView::Marked ; (; Bool_t ; mark). inlinevirtual . Definition at line 137 of file TGTextView.h. ◆ operator=(). TGTextView & TGTextView::operator= ; (; const TGTextView & ; ). privatedelete . ◆ ReturnHeighestColHeight(). virtual Long_t TGTextView::ReturnHeighestColHeight ; (; ). inlinevirtual . Definition at line 90 of file TGTextView.h. ◆ ReturnLineCount(). virtual Long_t TGTextView::ReturnLineCount ; (; ). inlinevirtual . Definition at line 94 of file TGText",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextView.html:49095,failure,failure,49095,doc/master/classTGTextView.html,https://root.cern,https://root.cern/doc/master/classTGTextView.html,1,['failure'],['failure']
Availability," ; (; TGHtmlElement * ; p, . TGHtmlElement * ; pEnd, . int ; y . ). protected . Set the y coordinate for every anchor in the given list. ; Definition at line 428 of file TGHtmlLayout.cxx. ◆ FixLine(). int TGHtmlLayoutContext::FixLine ; (; TGHtmlElement * ; p_start, . TGHtmlElement * ; p_end, . int ; mbottom, . int ; width, . int ; actualWidth, . int ; lMargin, . int * ; max_x . ). protected . This routine computes the X and Y coordinates for all elements of a line that has been gathered using GetLine() above. ; It also figures the ascent and descent for in-line images.; The value returned is the Y coordinate of the bottom edge of the new line. The X coordinates are computed by adding the left margin plus any extra space needed for centering or right-justification.; p_start - Start of tokens for this line p_end - First token past end of this line. Maybe NULL mbottom - Put the top of this line here width - This is the space available to the line actualWidth - This is the actual width needed by the line lMargin - The current left margin max_x - Write maximum X coordinate of ink here ; Definition at line 453 of file TGHtmlLayout.cxx. ◆ GetLine(). TGHtmlElement * TGHtmlLayoutContext::GetLine ; (; TGHtmlElement * ; p_start, . TGHtmlElement * ; p_end, . int ; width, . int ; minX, . int * ; actualWidth . ). protected . This routine gathers as many tokens as will fit on one line. ; The candidate tokens begin with fPStart and go thru the end of the list or to fPEnd, whichever comes first. The first token at the start of the next line is returned. NULL is returned if we exhaust data.; ""width"" is the maximum allowed width of the line. The actual width is returned in *actualWidth. The actual width does not include any trailing spaces. Sometimes the actual width will be greater than the maximum width. This will happen, for example, for text enclosed in .. that has lines longer than the width of the page.; If the list begins with text, at least one token is returned, even if that o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGHtmlLayoutContext.html:15253,avail,available,15253,doc/master/classTGHtmlLayoutContext.html,https://root.cern,https://root.cern/doc/master/classTGHtmlLayoutContext.html,1,['avail'],['available']
Availability," ; (; Window_t ; id). overridevirtual . The DestroySubwindows function destroys all inferior windows of the specified window, in bottom-to-top stacking order. ; Reimplemented from TVirtualX. ◆ DestroyWindow(). void TGWin32VirtualXProxy::DestroyWindow ; (; Window_t ; id). overridevirtual . Destroys the window ""id"" as well as all of its subwindows. ; The window should never be referenced again. If the window specified by the ""id"" argument is mapped, it is unmapped automatically. ; Reimplemented from TVirtualX. ◆ DisplayName(). const char * TGWin32VirtualXProxy::DisplayName ; (; const char * ; = nullptr). overridevirtual . Returns hostname on which the display is opened. ; Reimplemented from TVirtualX. ◆ DrawBox(). void TGWin32VirtualXProxy::DrawBox ; (; Int_t ; x1, . Int_t ; y1, . Int_t ; x2, . Int_t ; y2, . EBoxMode ; mode . ). overridevirtual . Draws a box between [x1,y1] and [x2,y2] according to the ""mode"". ; Parameters. [in]x1,y1left down corner ; [in]x2,y2right up corner ; [in]modedrawing mode:; mode = 0 hollow (kHollow); mode = 1 solid (kSolid) . Reimplemented from TVirtualX. ◆ DrawCellArray(). void TGWin32VirtualXProxy::DrawCellArray ; (; Int_t ; x1, . Int_t ; y1, . Int_t ; x2, . Int_t ; y2, . Int_t ; nx, . Int_t ; ny, . Int_t * ; ic . ). overridevirtual . Draws a cell array. ; The drawing is done with the pixel precision if (x2-x1)/nx (or y) is not a exact pixel number the position of the top right corner may be wrong.; Parameters. [in]x1,y1left down corner ; [in]x2,y2right up corner ; [in]nx,nyarray size ; [in]icarray . Reimplemented from TVirtualX. ◆ DrawFillArea(). void TGWin32VirtualXProxy::DrawFillArea ; (; Int_t ; n, . TPoint * ; xy . ). overridevirtual . Fills area described by the polygon. ; Parameters. [in]nnumber of points ; [in]xylist of points. xy(2,n) . Reimplemented from TVirtualX. ◆ DrawLine() [1/2]. void TGWin32VirtualXProxy::DrawLine ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x1, . Int_t ; y1, . Int_t ; x2, . Int_t ; y2 . ). overridevir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32VirtualXProxy.html:68698,down,down,68698,doc/master/classTGWin32VirtualXProxy.html,https://root.cern,https://root.cern/doc/master/classTGWin32VirtualXProxy.html,1,['down'],['down']
Availability," ; (; Window_t ; id, . Int_t ; keycode, . UInt_t ; modifier, . Bool_t ; grab = kTRUE . ). virtual . Establishes a passive grab on the keyboard. ; In the future, the keyboard is actively grabbed, the last-keyboard-grab time is set to the time at which the key was pressed (as transmitted in the KeyPress event), and the KeyPress event is reported if all of the following conditions are true:. the keyboard is not grabbed and the specified key (which can itself be a modifier key) is logically pressed when the specified modifier keys are logically down, and no other modifier keys are logically down;; either the grab window ""id"" is an ancestor of (or is) the focus window, or ""id"" is a descendant of the focus window and contains the pointer;; a passive grab on the same key combination does not exist on any ancestor of grab_window. Parameters. [in]idwindow id ; [in]keycodespecifies the KeyCode or AnyKey ; [in]modifierspecifies the set of keymasks or AnyModifier; the mask is the bitwise inclusive OR of the valid keymask bits ; [in]graba switch between grab/ungrab key grab = kTRUE grab the key and modifier grab = kFALSE ungrab the key and modifier . Reimplemented in TGWin32, TGWin32VirtualXProxy, TGX11, and TGCocoa.; Definition at line 1673 of file TVirtualX.cxx. ◆ GrabPointer(). void TVirtualX::GrabPointer ; (; Window_t ; id, . UInt_t ; evmask, . Window_t ; confine, . Cursor_t ; cursor, . Bool_t ; grab = kTRUE, . Bool_t ; owner_events = kTRUE . ). virtual . Establishes an active pointer grab. ; While an active pointer grab is in effect, further pointer events are only reported to the grabbing client window. ; Reimplemented in TGWin32, TGWin32VirtualXProxy, TGX11, and TGCocoa.; Definition at line 1696 of file TVirtualX.cxx. ◆ HasTTFonts(). Bool_t TVirtualX::HasTTFonts ; (; ); const. virtual . Returns True when TrueType fonts are used. ; Reimplemented in TGCocoa, TGWin32, TGWin32VirtualXProxy, and TGX11.; Definition at line 520 of file TVirtualX.cxx. ◆ IconifyWindow(). void TVir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualX.html:95107,mask,mask,95107,doc/master/classTVirtualX.html,https://root.cern,https://root.cern/doc/master/classTVirtualX.html,1,['mask'],['mask']
Availability," ; (; clang::CXXRecordDecl const * ; cl, . char const * ; methodname, . char const * ; proto, . const cling::Interpreter & ; interp, . bool ; diagnose . ). Return true, if the function (defined by the name and prototype) exists and is public. ; Definition at line 1202 of file TClingUtils.cxx. ◆ ClassInfo__HasMethod(). const clang::FunctionDecl * ROOT::TMetaUtils::ClassInfo__HasMethod ; (; const clang::DeclContext * ; cl, . char const * ; name, . const cling::Interpreter & ; interp . ). Definition at line 722 of file TClingUtils.cxx. ◆ DataMemberInfo__ValidArrayIndex(). llvm::StringRef ROOT::TMetaUtils::DataMemberInfo__ValidArrayIndex ; (; const cling::Interpreter & ; interp, . const clang::DeclaratorDecl & ; m, . int * ; errnum = nullptr, . llvm::StringRef * ; errstr = nullptr . ). ValidArrayIndex return a static string (so use it or copy it immediatly, do not call GrabIndex twice in the same expression) containing the size of the array data member. ; In case of error, or if the size is not specified, GrabIndex returns 0. If errnum is not null, *errnum updated with the error number: Cint::G__DataMemberInfo::G__VALID : valid array index Cint::G__DataMemberInfo::G__NOT_INT : array index is not an int Cint::G__DataMemberInfo::G__NOT_DEF : index not defined before array (this IS an error for streaming to disk) Cint::G__DataMemberInfo::G__IS_PRIVATE: index exist in a parent class but is private Cint::G__DataMemberInfo::G__UNKNOWN : index is not known If errstr is not null, *errstr is updated with the address of a static string containing the part of the index with is invalid. ; Definition at line 3078 of file TClingUtils.cxx. ◆ DemangleNameForDlsym(). static std::string ROOT::TMetaUtils::DemangleNameForDlsym ; (; const std::string & ; name). inlinestatic . Definition at line 574 of file TClingUtils.h. ◆ ElementStreamer(). int ROOT::TMetaUtils::ElementStreamer ; (; std::ostream & ; finalString, . const clang::NamedDecl & ; forcontext, . const clang::QualType & ; qti, . co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1TMetaUtils.html:22645,error,error,22645,doc/v632/namespaceROOT_1_1TMetaUtils.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1TMetaUtils.html,1,['error'],['error']
Availability," ; (; clang::CXXRecordDecl const * ; cl, . char const * ; methodname, . char const * ; proto, . const cling::Interpreter & ; interp, . bool ; diagnose . ). Return true, if the function (defined by the name and prototype) exists and is public. ; Definition at line 1242 of file TClingUtils.cxx. ◆ ClassInfo__HasMethod(). const clang::FunctionDecl * ROOT::TMetaUtils::ClassInfo__HasMethod ; (; const clang::DeclContext * ; cl, . char const * ; name, . const cling::Interpreter & ; interp . ). Definition at line 762 of file TClingUtils.cxx. ◆ DataMemberInfo__ValidArrayIndex(). llvm::StringRef ROOT::TMetaUtils::DataMemberInfo__ValidArrayIndex ; (; const cling::Interpreter & ; interp, . const clang::DeclaratorDecl & ; m, . int * ; errnum = nullptr, . llvm::StringRef * ; errstr = nullptr . ). ValidArrayIndex return a static string (so use it or copy it immediatly, do not call GrabIndex twice in the same expression) containing the size of the array data member. ; In case of error, or if the size is not specified, GrabIndex returns 0. If errnum is not null, *errnum updated with the error number: Cint::G__DataMemberInfo::G__VALID : valid array index Cint::G__DataMemberInfo::G__NOT_INT : array index is not an int Cint::G__DataMemberInfo::G__NOT_DEF : index not defined before array (this IS an error for streaming to disk) Cint::G__DataMemberInfo::G__IS_PRIVATE: index exist in a parent class but is private Cint::G__DataMemberInfo::G__UNKNOWN : index is not known If errstr is not null, *errstr is updated with the address of a static string containing the part of the index with is invalid. ; Definition at line 3118 of file TClingUtils.cxx. ◆ DemangleNameForDlsym(). static std::string ROOT::TMetaUtils::DemangleNameForDlsym ; (; const std::string & ; name). inlinestatic . Definition at line 597 of file TClingUtils.h. ◆ ElementStreamer(). int ROOT::TMetaUtils::ElementStreamer ; (; std::ostream & ; finalString, . const clang::NamedDecl & ; forcontext, . const clang::QualType & ; qti, . co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1TMetaUtils.html:22642,error,error,22642,doc/master/namespaceROOT_1_1TMetaUtils.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1TMetaUtils.html,1,['error'],['error']
Availability," ; (; const Char_t * ; name, . const Char_t * ; title, . Int_t ; np, . const Double_t * ; x, . const Double_t * ; y, . const Double_t * ; exL = nullptr, . const Double_t * ; exH = nullptr, . const Double_t * ; eyL = nullptr, . const Double_t * ; eyH = nullptr, . Int_t ; m = kOnlyFirst . ). TGraphMultiErrors normal constructor with name, title, np points and a single y-error. ; If exL,exH or eyL,exH are NULL, the corresponding values are preset to zero. ; Definition at line 191 of file TGraphMultiErrors.cxx. ◆ TGraphMultiErrors() [9/23]. TGraphMultiErrors::TGraphMultiErrors ; (; Int_t ; np, . Int_t ; ne, . const Float_t * ; x, . const Float_t * ; y, . const Float_t * ; exL, . const Float_t * ; exH, . std::vector< std::vector< Float_t > > ; eyL, . std::vector< std::vector< Float_t > > ; eyH, . Int_t ; m = kOnlyFirst . ). TGraphMultiErrors normal constructor with np points and ne y-errors. ; If exL,exH are NULL, the corresponding values are preset to zero. The multiple y-errors are passed as std::vectors of std::vectors. ; Definition at line 205 of file TGraphMultiErrors.cxx. ◆ TGraphMultiErrors() [10/23]. TGraphMultiErrors::TGraphMultiErrors ; (; const Char_t * ; name, . const Char_t * ; title, . Int_t ; np, . Int_t ; ne, . const Float_t * ; x, . const Float_t * ; y, . const Float_t * ; exL, . const Float_t * ; exH, . std::vector< std::vector< Float_t > > ; eyL, . std::vector< std::vector< Float_t > > ; eyH, . Int_t ; m = kOnlyFirst . ). TGraphMultiErrors normal constructor with name, title, np points and ne y-errors. ; If exL,exH are NULL, the corresponding values are preset to zero. The multiple y-errors are passed as std::vectors of std::vectors. ; Definition at line 244 of file TGraphMultiErrors.cxx. ◆ TGraphMultiErrors() [11/23]. TGraphMultiErrors::TGraphMultiErrors ; (; Int_t ; np, . Int_t ; ne, . const Double_t * ; x, . const Double_t * ; y, . const Double_t * ; exL, . const Double_t * ; exH, . std::vector< std::vector< Double_t > > ; eyL, . std::vector< std::v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:48673,error,errors,48673,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['error'],['errors']
Availability," ; (; const char * ; bname, . void * ; add, . TClass * ; realClass, . EDataType ; datatype, . bool ; isptr . ). overridevirtual . Check if bname is already in the status list, and if not, create a TChainElement object and set its address. ; See TTree::CheckBranchAddressType for the semantic of the return value.; Note: See the comments in TBranchElement::SetAddress() for a more detailed discussion of the meaning of the add parameter. ; Reimplemented from TTree.; Definition at line 2571 of file TChain.cxx. ◆ SetBranchStatus(). void TChain::SetBranchStatus ; (; const char * ; bname, . bool ; status = true, . UInt_t * ; found = nullptr . ). overridevirtual . Set branch status to Process or DoNotProcess. ; Parameters. [in]bnameis the name of a branch. if bname=""*"", apply to all branches. ; [in]status= 1 branch will be processed, = 0 branch will not be processed ; [out]found. See IMPORTANT REMARKS in TTree::SetBranchStatus and TChain::SetBranchAddress; If found is not 0, the number of branch(es) found matching the regular expression is returned in *found AND the error message 'unknown branch' is suppressed. ; Reimplemented from TTree.; Definition at line 2613 of file TChain.cxx. ◆ SetCacheSize(). Int_t TChain::SetCacheSize ; (; Long64_t ; cacheSize = -1). overridevirtual . Set maximum size of the file cache . . if cachesize = 0 the existing cache (if any) is deleted.; if cachesize = -1 (default) it is set to the AutoFlush value when writing the Tree (default is 30 MBytes). Returns:; 0 size set, cache was created if possible; -1 on error . Reimplemented from TTree.; Definition at line 2441 of file TChain.cxx. ◆ SetDirectory(). void TChain::SetDirectory ; (; TDirectory * ; dir). overridevirtual . Remove reference to this chain from current directory and add reference to new directory dir. ; dir can be 0 in which case the chain does not belong to any directory. ; Reimplemented from TTree.; Definition at line 2640 of file TChain.cxx. ◆ SetEntryList(). void TChain::SetEntryLis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTChain.html:96566,error,error,96566,doc/v632/classTChain.html,https://root.cern,https://root.cern/doc/v632/classTChain.html,1,['error'],['error']
Availability," ; (; const char * ; bname, . void * ; add, . TClass * ; realClass, . EDataType ; datatype, . bool ; isptr . ). overridevirtual . Check if bname is already in the status list, and if not, create a TChainElement object and set its address. ; See TTree::CheckBranchAddressType for the semantic of the return value.; Note: See the comments in TBranchElement::SetAddress() for a more detailed discussion of the meaning of the add parameter. ; Reimplemented from TTree.; Definition at line 2597 of file TChain.cxx. ◆ SetBranchStatus(). void TChain::SetBranchStatus ; (; const char * ; bname, . bool ; status = true, . UInt_t * ; found = nullptr . ). overridevirtual . Set branch status to Process or DoNotProcess. ; Parameters. [in]bnameis the name of a branch. if bname=""*"", apply to all branches. ; [in]status= 1 branch will be processed, = 0 branch will not be processed ; [out]found. See IMPORTANT REMARKS in TTree::SetBranchStatus and TChain::SetBranchAddress; If found is not 0, the number of branch(es) found matching the regular expression is returned in *found AND the error message 'unknown branch' is suppressed. ; Reimplemented from TTree.; Definition at line 2639 of file TChain.cxx. ◆ SetCacheSize(). Int_t TChain::SetCacheSize ; (; Long64_t ; cacheSize = -1). overridevirtual . Set maximum size of the file cache . . if cachesize = 0 the existing cache (if any) is deleted.; if cachesize = -1 (default) it is set to the AutoFlush value when writing the Tree (default is 30 MBytes). The cacheSize might be clamped, see TFileCacheRead::SetBufferSize; Returns:; 0 size set, cache was created if possible; -1 on error . Reimplemented from TTree.; Definition at line 2467 of file TChain.cxx. ◆ SetDirectory(). void TChain::SetDirectory ; (; TDirectory * ; dir). overridevirtual . Remove reference to this chain from current directory and add reference to new directory dir. ; dir can be 0 in which case the chain does not belong to any directory. ; Reimplemented from TTree.; Definition at line ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTChain.html:97120,error,error,97120,doc/master/classTChain.html,https://root.cern,https://root.cern/doc/master/classTChain.html,1,['error'],['error']
Availability," ; (; double ; a, . double ; b, . double ; x . ). Definition at line 581 of file SpecFuncCephes.cxx. ◆ incbd(). double ROOT::Math::Cephes::incbd ; (; double ; a, . double ; b, . double ; x . ). Definition at line 674 of file SpecFuncCephes.cxx. ◆ incbet(). double ROOT::Math::Cephes::incbet ; (; double ; aa, . double ; bb, . double ; xx . ). DESCRIPTION: ; Returns incomplete beta integral of the arguments, evaluated from zero to x. The function is defined as x; - -; | (a+b) | | a-1 b-1 . --------— t (1-t) dt. . (a) (b) - . 0; The domain of definition is 0 <= x <= 1. In this implementation a and b are restricted to positive values. The integral from x to 1 may be obtained by the symmetry relation; 1 - incbet( a, b, x ) = incbet( b, a, 1-x ).; The integral is evaluated by a continued fraction expansion or, when b*x is small, by a power series.; ACCURACY:; Tested at uniformly distributed random points (a,b,x) with a and b in ""domain"" and x between 0 and 1. Relative error arithmetic domain # trials peak rms IEEE 0,5 10000 6.9e-15 4.5e-16 IEEE 0,85 250000 2.2e-13 1.7e-14 IEEE 0,1000 30000 5.3e-12 6.3e-13 IEEE 0,10000 250000 9.3e-11 7.1e-12 IEEE 0,100000 10000 8.7e-10 4.8e-11 Outputs smaller than the IEEE gradual underflow threshold were excluded from these statistics.; ERROR MESSAGES: message condition value returned incbet domain x<0, x>1 0.0 incbet underflow 0.0; Cephes Math Library, Release 2.8: June, 2000 Copyright 1984, 1995, 2000 by Stephen L. Moshier ; Definition at line 484 of file SpecFuncCephes.cxx. ◆ incbi(). double ROOT::Math::Cephes::incbi ; (; double ; a, . double ; b, . double ; y . ). Definition at line 411 of file SpecFuncCephesInv.cxx. ◆ lgam(). double ROOT::Math::Cephes::lgam ; (; double ; x). Definition at line 197 of file SpecFuncCephes.cxx. ◆ ndtri(). double ROOT::Math::Cephes::ndtri ; (; double ; y). Definition at line 137 of file SpecFuncCephesInv.cxx. ◆ pseries(). double ROOT::Math::Cephes::pseries ; (; double ; a, . double ; b, . double ; x . ). D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Cephes.html:3487,error,error,3487,doc/master/namespaceROOT_1_1Math_1_1Cephes.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Math_1_1Cephes.html,1,['error'],['error']
Availability," ; (; std::string const & ; type). Choose the minimizer algorithm. ; Passing an empty string selects the default minimizer type returned by ROOT::Math::MinimizerOptions::DefaultMinimizerType(). ; Definition at line 246 of file RooMinimizer.cxx. ◆ setOffsetting(). void RooMinimizer::setOffsetting ; (; bool ; flag). Enable internal likelihood offsetting for enhanced numeric precision. ; Definition at line 234 of file RooMinimizer.cxx. ◆ setPrintEvalErrors(). void RooMinimizer::setPrintEvalErrors ; (; int ; numEvalErrors). inline . Definition at line 152 of file RooMinimizer.h. ◆ setPrintLevel(). void RooMinimizer::setPrintLevel ; (; int ; newLevel). Change the MINUIT internal printing level. ; Definition at line 472 of file RooMinimizer.cxx. ◆ setProfile(). void RooMinimizer::setProfile ; (; bool ; flag = true). inline . Definition at line 170 of file RooMinimizer.h. ◆ setRecoverFromNaNStrength(). void RooMinimizer::setRecoverFromNaNStrength ; (; double ; strength). Try to recover from invalid function values. ; When invalid function values are encountered, a penalty term is returned to the minimiser to make it back off. This sets the strength of this penalty. NoteA strength of zero is equivalent to a constant penalty (= the gradient vanishes, ROOT < 6.24). Positive values lead to a gradient pointing away from the undefined regions. Use ~10 to force the minimiser away from invalid function values. ; Definition at line 802 of file RooMinimizer.cxx. ◆ setStrategy(). void RooMinimizer::setStrategy ; (; int ; istrat). Change MINUIT strategy to istrat. ; Accepted codes are 0,1,2 and represent MINUIT strategies for dealing most efficiently with fast FCNs (0), expensive FCNs (2) and 'intermediate' FCNs (1) ; Definition at line 189 of file RooMinimizer.cxx. ◆ setVerbose(). void RooMinimizer::setVerbose ; (; bool ; flag = true). inline . Definition at line 153 of file RooMinimizer.h. ◆ simplex(). int RooMinimizer::simplex ; (; ). Execute SIMPLEX. ; Changes in parameter values a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMinimizer.html:28630,recover,recover,28630,doc/master/classRooMinimizer.html,https://root.cern,https://root.cern/doc/master/classRooMinimizer.html,1,['recover'],['recover']
Availability," ; .  . Loading...; Searching...; No Matches. List of all members |; Public Member Functions |; Static Public Member Functions |; Private Member Functions |; Private Attributes |; List of all members ; RooChiSquarePdf Class ReferenceRooFit » RooFit. ; The PDF of the Chi Square distribution for n degrees of freedom. ; Oddly, this is hard to find in ROOT (except via relation to GammaDist). Here we also implement the analytic integral. ; Definition at line 22 of file RooChiSquarePdf.h. Public Member Functions;  RooChiSquarePdf ();  ;  RooChiSquarePdf (const char *name, const char *title, RooAbsReal &x, RooAbsReal &ndof);  ;  RooChiSquarePdf (const RooChiSquarePdf &other, const char *name=nullptr);  ; double analyticalIntegral (Int_t code, const char *rangeName=nullptr) const override;  Implements the actual analytical integral(s) advertised by getAnalyticalIntegral. ;  ; TObject * clone (const char *newname) const override;  ; Int_t getAnalyticalIntegral (RooArgSet &allVars, RooArgSet &analVars, const char *rangeName=nullptr) const override;  No analytical calculation available (yet) of integrals over subranges. ;  ; TClass * IsA () const override;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from RooAbsPdf;  RooAbsPdf ();  Default constructor. ;  ;  RooAbsPdf (const char *name, const char *title, double minVal, double maxVal);  Constructor with name, title, and plot range. ;  ;  RooAbsPdf (const char *name, const char *title=nullptr);  Constructor with name and title only. ;  ;  ~RooAbsPdf () override;  Destructor. ;  ; double analyticalIntegralWN (Int_t code, const RooArgSet *normSet, const char *rangeName=nullptr) const override;  Analytical integral with normalization (see RooAbsReal::analyticalIntegralWN() for further information). ;  ; virtual RooAbsGenContext * autoGenContext (const RooArgSet &vars, const RooDataSet *prototype=nul",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooChiSquarePdf.html:1158,avail,available,1158,doc/master/classRooChiSquarePdf.html,https://root.cern,https://root.cern/doc/master/classRooChiSquarePdf.html,1,['avail'],['available']
Availability," ; // F i t f u l l r a n g e; // ---------------------------; ; // Fit pdf to all data; std::unique_ptr<RooFitResult> r_full{model.fitTo(*modelData, Save(true), PrintLevel(-1))};; ; // F i t p a r t i a l r a n g e; // ----------------------------------; ; // Define ""signal"" range in x as [-3,3]; x.setRange(""signal"", -3, 3);; ; // Fit pdf only to data in ""signal"" range; std::unique_ptr<RooFitResult> r_sig{model.fitTo(*modelData, Save(true), Range(""signal""), PrintLevel(-1))};; ; // P l o t / p r i n t r e s u l t s; // ---------------------------------------; ; // Make plot frame in x and add data and fitted model; RooPlot *frame = x.frame(Title(""Fitting a sub range""));; modelData->plotOn(frame);; model.plotOn(frame, Range(""""), LineStyle(kDashed), LineColor(kRed)); // Add shape in full ranged dashed; model.plotOn(frame); // By default only fitted range is shown; ; // Print fit results; cout << ""result of fit on all data "" << endl;; r_full->Print();; cout << ""result of fit in in signal region (note increased error on signal fraction)"" << endl;; r_sig->Print();; ; // Draw frame on canvas; new TCanvas(""rf203_ranges"", ""rf203_ranges"", 600, 600);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; ; return;; }; f#define f(i)Definition RSha256.hxx:104; RooAddPdf.h; RooDataSet.h; RooFitResult.h; RooGaussian.h; RooPlot.h; RooPolynomial.h; RooRealVar.h; kRed@ kRedDefinition Rtypes.h:66; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; mxOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf203__ranges_8C.html:2113,error,error,2113,doc/master/rf203__ranges_8C.html,https://root.cern,https://root.cern/doc/master/rf203__ranges_8C.html,1,['error'],['error']
Availability," ; //transport particle in magnetic field; helixStep(gstep.step, gstep.vect, vout); //make one step; ; //apply energy loss; gstep.destep = gstep.step*gRandom->Gaus(0.0002,0.00001);; gstep.gekin -= gstep.destep;; gstep.getot = gstep.gekin + mass;; gstep.vect[6] = charge*TMath::Sqrt(gstep.getot*gstep.getot - mass*mass);; gstep.vect[0] = vout[0];; gstep.vect[1] = vout[1];; gstep.vect[2] = vout[2];; gstep.vect[3] = vout[3];; gstep.vect[4] = vout[4];; gstep.vect[5] = vout[5];; gstep.nmec = (Int_t)(5*gRandom->Rndm());; for (Int_t l=0;l<gstep.nmec;l++) gstep.lmec[l] = l;; if (gstep.gekin < 0.001) newParticle = kTRUE;; if (TMath::Abs(gstep.vect[2]) > 30) newParticle = kTRUE;; }; ; //save the Tree header. The file will be automatically closed; //when going out of the function scope; t2.Write();; }; ; void tree2r(); {; //read the Tree generated by tree2w and fill one histogram; //we are only interested by the destep branch.; ; //note that we use ""new"" to create the TFile and TTree objects !; //because we want to keep these objects alive when we leave; //this function.; TFile *f = new TFile(""tree2.root"");; TTree *t2 = (TTree*)f->Get(""t2"");; static Float_t destep;; TBranch *b_destep = t2->GetBranch(""destep"");; b_destep->SetAddress(&destep);; ; //create one histogram; TH1F *hdestep = new TH1F(""hdestep"",""destep in Mev"",100,1e-5,3e-5);; ; //read only the destep branch for all entries; Long64_t nentries = t2->GetEntries();; for (Long64_t i=0;i<nentries;i++) {; b_destep->GetEntry(i);; hdestep->Fill(destep);; }; ; //we do not close the file.; //We want to keep the generated histograms; //We fill a 3-d scatter plot with the particle step coordinates; TCanvas *c1 = new TCanvas(""c1"",""c1"",600,800);; c1->SetFillColor(42);; c1->Divide(1,2);; c1->cd(1);; hdestep->SetFillColor(45);; hdestep->Fit(""gaus"");; c1->cd(2);; gPad->SetFillColor(37);; t2->SetMarkerColor(kRed);; t2->Draw(""vect[0]:vect[1]:vect[2]"");; ; // Allow to use the TTree after the end of the function.; t2->ResetBranchAddresses();;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tree2_8C.html:4635,alive,alive,4635,doc/master/tree2_8C.html,https://root.cern,https://root.cern/doc/master/tree2_8C.html,1,['alive'],['alive']
Availability," ; 1587////////////////////////////////////////////////////////////////////////////////; 1588/// Returns the effective group id. The effective group id corresponds; 1589/// to the set id bit on the file being executed.; 1590 ; 1591Int_t TSystem::GetEffectiveGid(); 1592{; 1593 AbstractMethod(""GetEffectiveGid"");; 1594 return 0;; 1595}; 1596 ; 1597////////////////////////////////////////////////////////////////////////////////; 1598/// Returns all user info in the UserGroup_t structure. The returned; 1599/// structure must be deleted by the user. In case of error 0 is returned.; 1600 ; 1601UserGroup_t *TSystem::GetUserInfo(Int_t /*uid*/); 1602{; 1603 AbstractMethod(""GetUserInfo"");; 1604 return nullptr;; 1605}; 1606 ; 1607////////////////////////////////////////////////////////////////////////////////; 1608/// Returns all user info in the UserGroup_t structure. If user = 0, returns; 1609/// current user's id info. The returned structure must be deleted by the; 1610/// user. In case of error 0 is returned.; 1611 ; 1612UserGroup_t *TSystem::GetUserInfo(const char * /*user*/); 1613{; 1614 AbstractMethod(""GetUserInfo"");; 1615 return nullptr;; 1616}; 1617 ; 1618////////////////////////////////////////////////////////////////////////////////; 1619/// Returns all group info in the UserGroup_t structure. The only active; 1620/// fields in the UserGroup_t structure for this call are:; 1621/// - fGid and fGroup; 1622/// The returned structure must be deleted by the user. In case of; 1623/// error 0 is returned.; 1624 ; 1625UserGroup_t *TSystem::GetGroupInfo(Int_t /*gid*/); 1626{; 1627 AbstractMethod(""GetGroupInfo"");; 1628 return nullptr;; 1629}; 1630 ; 1631////////////////////////////////////////////////////////////////////////////////; 1632/// Returns all group info in the UserGroup_t structure. The only active; 1633/// fields in the UserGroup_t structure for this call are:; 1634/// - fGid and fGroup; 1635/// If group = 0, returns current user's group. The returned structure; 16",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8cxx_source.html:51234,error,error,51234,doc/master/TSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8cxx_source.html,1,['error'],['error']
Availability," ; 1936void TProfile2D::SetBins(Int_t nx, const Double_t *xbins, Int_t ny, const Double_t *ybins); 1937{; 1938 TH1::SetBins(nx,xbins,ny,ybins);; 1939 fBinEntries.Set(fNcells);; 1940 if (fBinSumw2.fN) fBinSumw2.Set(fNcells);; 1941}; 1942 ; 1943////////////////////////////////////////////////////////////////////////////////; 1944/// Set total number of bins including under/overflow.; 1945/// Reallocate bin contents array; 1946 ; 1947void TProfile2D::SetBinsLength(Int_t n); 1948{; 1949 TH2D::SetBinsLength(n);; 1950 TProfileHelper::BuildArray(this);; 1951}; 1952 ; 1953////////////////////////////////////////////////////////////////////////////////; 1954/// Set the buffer size in units of 8 bytes (double).; 1955 ; 1956void TProfile2D::SetBuffer(Int_t buffersize, Option_t *); 1957{; 1958 if (fBuffer) {; 1959 BufferEmpty();; 1960 delete [] fBuffer;; 1961 fBuffer = nullptr;; 1962 }; 1963 if (buffersize <= 0) {; 1964 fBufferSize = 0;; 1965 return;; 1966 }; 1967 if (buffersize < 100) buffersize = 100;; 1968 fBufferSize = 1 + 4*buffersize;; 1969 fBuffer = new Double_t[fBufferSize];; 1970 memset(fBuffer,0,sizeof(Double_t)*fBufferSize);; 1971}; 1972 ; 1973////////////////////////////////////////////////////////////////////////////////; 1974/// Set option to compute profile2D errors.; 1975///; 1976/// The computation of the bin errors is based on the parameter option:; 1977/// - ' ' (Default) The bin errors are the standard error on the mean of the bin profiled values (Z),; 1978/// i.e. the standard error of the bin contents.; 1979/// Note that if TProfile::Approximate() is called, an approximation is used when; 1980/// the spread in Z is 0 and the number of bin entries is > 0; 1981/// - 's' The bin errors are the standard deviations of the Z bin values; 1982/// Note that if TProfile::Approximate() is called, an approximation is used when; 1983/// the spread in Z is 0 and the number of bin entries is > 0; 1984/// - 'i' Errors are as in default case (standard errors of the bin con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:71771,error,errors,71771,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,1,['error'],['errors']
Availability," ; 1942Int_t TColor::GetColor(Float_t r, Float_t g, Float_t b, Float_t a); 1943{; 1944 return GetColor(Int_t(r * 255), Int_t(g * 255), Int_t(b * 255), a);; 1945}; 1946 ; 1947////////////////////////////////////////////////////////////////////////////////; 1948/// Static method returning color number for color specified by; 1949/// system dependent pixel value. Pixel values can be obtained, e.g.,; 1950/// from the GUI color picker.; 1951///; 1952/// The color retrieval is done using a threshold defined by SetColorThreshold.; 1953 ; 1954 ; 1955Int_t TColor::GetColor(ULong_t pixel); 1956{; 1957 Int_t r, g, b;; 1958 ; 1959 Pixel2RGB(pixel, r, g, b);; 1960 ; 1961 return GetColor(r, g, b);; 1962}; 1963 ; 1964////////////////////////////////////////////////////////////////////////////////; 1965/// This method specifies the color threshold used by GetColor to retrieve a color.; 1966///; 1967/// \param[in] t Color threshold. By default is equal to 1./31. or 1./255.; 1968/// depending on the number of available color planes.; 1969///; 1970/// When GetColor is called, it scans the defined colors and compare them to the; 1971/// requested color.; 1972/// If the Red Green and Blue values passed to GetColor are Rr Gr Br; 1973/// and Rd Gd Bd the values of a defined color. These two colors are considered equal; 1974/// if (abs(Rr-Rd) < t & abs(Br-Bd) < t & abs(Br-Bd) < t). If this test passes,; 1975/// the color defined by Rd Gd Bd is returned by GetColor.; 1976///; 1977/// To make sure GetColor will return a color having exactly the requested; 1978/// R G B values it is enough to specify a nul :; 1979/// ~~~ {.cpp}; 1980/// TColor::SetColorThreshold(0.);; 1981/// ~~~; 1982///; 1983/// To reset the color threshold to its default value it is enough to do:; 1984/// ~~~ {.cpp}; 1985/// TColor::SetColorThreshold(-1.);; 1986/// ~~~; 1987 ; 1988void TColor::SetColorThreshold(Float_t t); 1989{; 1990 gColorThreshold = t;; 1991}; 1992 ; 1993/////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TColor_8cxx_source.html:70344,avail,available,70344,doc/master/TColor_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TColor_8cxx_source.html,1,['avail'],['available']
Availability," ; 19namespace ROOT {; 20 ; 21 namespace Fit; 22 {; 23 ; 24 BinData::BinData(unsigned int maxpoints, unsigned int dim,; 25 ErrorType err ) :; 26 FitData( maxpoints, dim ),; 27 fErrorType( err ),; 28 fDataPtr( nullptr ),; 29 fDataErrorPtr( nullptr ), fDataErrorHighPtr( nullptr ), fDataErrorLowPtr( nullptr ),; 30 fpTmpCoordErrorVector( nullptr ), fpTmpBinEdgeVector( nullptr ); 31 {; 32 InitializeErrors();; 33 InitDataVector( );; 34 }; 35 ; 36 ; 37 /**; 38 constructor from option and default range; 39 */; 40 BinData::BinData (const DataOptions & opt, unsigned int maxpoints,; 41 unsigned int dim, ErrorType err ) :; 42 FitData( opt, maxpoints, dim ),; 43 fErrorType( err ),; 44 fDataPtr( nullptr ),; 45 fDataErrorPtr( nullptr ), fDataErrorHighPtr( nullptr ), fDataErrorLowPtr( nullptr ),; 46 fpTmpCoordErrorVector( nullptr ), fpTmpBinEdgeVector( nullptr ); 47 {; 48 InitializeErrors();; 49 InitDataVector( );; 50 }; 51 ; 52 /**; 53 constructor from options and range; 54 efault is 1D and value errors; 55 */; 56 BinData::BinData (const DataOptions & opt, const DataRange & range,; 57 unsigned int maxpoints, unsigned int dim, ErrorType err ) :; 58 FitData( opt, range, maxpoints, dim ),; 59 fErrorType( err ),; 60 fDataPtr( nullptr ),; 61 fDataErrorPtr( nullptr ), fDataErrorHighPtr( nullptr ), fDataErrorLowPtr( nullptr ),; 62 fpTmpCoordErrorVector( nullptr ), fpTmpBinEdgeVector( nullptr ); 63 {; 64 InitializeErrors();; 65 InitDataVector( );; 66 }; 67 ; 68 /** constructors using external data */; 69 ; 70 /**; 71 constructor from external data for 1D with errors on coordinate and value; 72 */; 73 BinData::BinData (unsigned int n, const double * dataX, const double * val,; 74 const double * ex , const double * eval ) :; 75 FitData( n, dataX ),; 76 fDataPtr( nullptr ),; 77 fDataErrorPtr( nullptr ), fDataErrorHighPtr( nullptr ), fDataErrorLowPtr( nullptr ),; 78 fpTmpCoordErrorVector( nullptr ), fpTmpBinEdgeVector( nullptr ); 79 {; 80 assert( val );; 81 fDataPtr = val;; 82 ; 83 if ( nullpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/BinData_8cxx_source.html:1623,error,errors,1623,doc/master/BinData_8cxx_source.html,https://root.cern,https://root.cern/doc/master/BinData_8cxx_source.html,1,['error'],['errors']
Availability," ; 28#include <TROOT.h>; 29 ; 30#include <utility>; 31 ; 32ROOT::Experimental::RNTupleWriter::RNTupleWriter(std::unique_ptr<ROOT::Experimental::RNTupleModel> model,; 33 std::unique_ptr<ROOT::Experimental::Internal::RPageSink> sink); 34 : fFillContext(std::move(model), std::move(sink)), fMetrics(""RNTupleWriter""); 35{; 36#ifdef R__USE_IMT; 37 if (IsImplicitMTEnabled() &&; 38 fFillContext.fSink->GetWriteOptions().GetUseImplicitMT() == RNTupleWriteOptions::EImplicitMT::kDefault) {; 39 fZipTasks = std::make_unique<Internal::RNTupleImtTaskScheduler>();; 40 fFillContext.fSink->SetTaskScheduler(fZipTasks.get());; 41 }; 42#endif; 43 // Observe directly the sink's metrics to avoid an additional prefix from the fill context.; 44 fMetrics.ObserveMetrics(fFillContext.fSink->GetMetrics());; 45}; 46 ; 47ROOT::Experimental::RNTupleWriter::~RNTupleWriter(); 48{; 49 try {; 50 CommitCluster(true /* commitClusterGroup */);; 51 fFillContext.fSink->CommitDataset();; 52 } catch (const RException &err) {; 53 R__LOG_ERROR(NTupleLog()) << ""failure committing ntuple: "" << err.GetError().GetReport();; 54 }; 55}; 56 ; 57std::unique_ptr<ROOT::Experimental::RNTupleWriter>; 58ROOT::Experimental::RNTupleWriter::Create(std::unique_ptr<RNTupleModel> model,; 59 std::unique_ptr<Internal::RPageSink> sink, const RNTupleWriteOptions &options); 60{; 61 if (model->GetRegisteredSubfields().size() > 0) {; 62 throw RException(R__FAIL(""cannot create an RNTupleWriter from a model with registered subfields""));; 63 }; 64 if (options.GetUseBufferedWrite()) {; 65 sink = std::make_unique<Internal::RPageSinkBuf>(std::move(sink));; 66 }; 67 return std::unique_ptr<RNTupleWriter>(new RNTupleWriter(std::move(model), std::move(sink)));; 68}; 69 ; 70std::unique_ptr<ROOT::Experimental::RNTupleWriter>; 71ROOT::Experimental::RNTupleWriter::Recreate(std::unique_ptr<RNTupleModel> model, std::string_view ntupleName,; 72 std::string_view storage, const RNTupleWriteOptions &options); 73{; 74 auto sink = Internal::RPagePersistentSin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleWriter_8cxx_source.html:2271,failure,failure,2271,doc/master/RNTupleWriter_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleWriter_8cxx_source.html,1,['failure'],['failure']
Availability," ; 347////////////////////////////////////////////////////////////////////////////////; 348/// TGraphMultiErrors normal constructor with name, title, `np` points and `ne` y-errors.; 349///; 350/// If `exL`,`exH` are NULL, the corresponding values are preset to zero.; 351/// The multiple y-errors are passed as std::vectors of TArrayF objects.; 352 ; 353TGraphMultiErrors::TGraphMultiErrors(const Char_t *name, const Char_t *title, Int_t np, Int_t ne, const Float_t *x,; 354 const Float_t *y, const Float_t *exL, const Float_t *exH, std::vector<TArrayF> eyL,; 355 std::vector<TArrayF> eyH, Int_t m); 356 : TGraphMultiErrors(np, ne, x, y, exL, exH, eyL, eyH, m); 357{; 358 SetNameTitle(name, title);; 359}; 360 ; 361////////////////////////////////////////////////////////////////////////////////; 362/// TGraphMultiErrors normal constructor with `np` points and `ne` y-errors.; 363///; 364/// If `exL`,`exH` are NULL, the corresponding values are preset to zero.; 365/// The multiple y-errors are passed as std::vectors of TArrayD objects.; 366 ; 367TGraphMultiErrors::TGraphMultiErrors(Int_t np, Int_t ne, const Double_t *x, const Double_t *y, const Double_t *exL,; 368 const Double_t *exH, std::vector<TArrayD> eyL, std::vector<TArrayD> eyH, Int_t m); 369 : TGraph(np, x, y), fNYErrors(ne), fSumErrorsMode(m); 370{; 371 if (!CtorAllocate()); 372 return;; 373 ; 374 Int_t n = fNpoints * sizeof(Double_t);; 375 ; 376 if (exL); 377 memcpy(fExL, exL, n);; 378 else; 379 memset(fExL, 0, n);; 380 if (exH); 381 memcpy(fExH, exH, n);; 382 else; 383 memset(fExH, 0, n);; 384 ; 385 for (Int_t i = 0; i < fNpoints; i++) {; 386 for (Int_t j = 0; j < fNYErrors; j++) {; 387 if (Int_t(eyL.size()) > j && eyL[j].GetSize() > i); 388 fEyL[j][i] = eyL[j][i];; 389 else; 390 fEyL[j][i] = 0.;; 391 if (Int_t(eyH.size()) > j && eyH[j].GetSize() > i); 392 fEyH[j][i] = eyH[j][i];; 393 else; 394 fEyH[j][i] = 0.;; 395 }; 396 }; 397 ; 398 CalcYErrorsSum();; 399}; 400 ; 401/////////////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:13199,error,errors,13199,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['errors']
Availability," ; 37namespace ROOT {; 38namespace Experimental {; 39 ; 40class RNTupleWriteOptions;; 41 ; 42namespace Internal {; 43// Non-public factory method for an RNTuple writer that uses an already constructed page sink; 44std::unique_ptr<RNTupleWriter>; 45CreateRNTupleWriter(std::unique_ptr<RNTupleModel> model, std::unique_ptr<Internal::RPageSink> sink);; 46} // namespace Internal; 47 ; 48// clang-format off; 49/**; 50\class ROOT::Experimental::RNTupleWriter; 51\ingroup NTuple; 52\brief An RNTuple that gets filled with entries (data) and writes them to storage; 53 ; 54An output ntuple can be filled with entries. The caller has to make sure that the data that gets filled into an ntuple; 55is not modified for the time of the Fill() call. The fill call serializes the C++ object into the column format and; 56writes data into the corresponding column page buffers. Writing of the buffers to storage is deferred and can be; 57triggered by FlushCluster() or by destructing the writer. On I/O errors, an exception is thrown.; 58*/; 59// clang-format on; 60class RNTupleWriter {; 61 friend RNTupleModel::RUpdater;; 62 friend std::unique_ptr<RNTupleWriter>; 63 Internal::CreateRNTupleWriter(std::unique_ptr<RNTupleModel>, std::unique_ptr<Internal::RPageSink>);; 64 ; 65private:; 66 /// The page sink's parallel page compression scheduler if IMT is on.; 67 /// Needs to be destructed after the page sink (in the fill context) is destructed and so declared before.; 68 std::unique_ptr<Internal::RPageStorage::RTaskScheduler> fZipTasks;; 69 RNTupleFillContext fFillContext;; 70 Detail::RNTupleMetrics fMetrics;; 71 ; 72 NTupleSize_t fLastCommittedClusterGroup = 0;; 73 ; 74 RNTupleWriter(std::unique_ptr<RNTupleModel> model, std::unique_ptr<Internal::RPageSink> sink);; 75 ; 76 RNTupleModel &GetUpdatableModel() { return *fFillContext.fModel; }; 77 Internal::RPageSink &GetSink() { return *fFillContext.fSink; }; 78 ; 79 // Helper function that is called from CommitCluster() when necessary; 80 void CommitClus",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RNTupleWriter_8hxx_source.html:2393,error,errors,2393,doc/master/RNTupleWriter_8hxx_source.html,https://root.cern,https://root.cern/doc/master/RNTupleWriter_8hxx_source.html,1,['error'],['errors']
Availability," ; 37where m is the quantity of parameters.; 38 ; 39Expanding left part of (2) over parameter increments and; 40retaining only linear terms one gets; 41 ; 42\f[; 43\left(\partial\chi^2\over\theta_i\right)_{\vec\theta={\vec\theta}^0}; 44+\sum_k\left(\partial^2\chi^2\over\partial\theta_i\partial\theta_k\right)_{; 45\vec\theta={\vec\theta}^0}\cdot(\theta_k-\theta_k^0); 46= 0\tag{3}; 47\f]; 48 ; 49Here \f${\vec\theta}_0\f$ is some initial value of parameters. In general case:; 50 ; 51\f[; 52{\partial^2\chi^2\over\partial\theta_i\partial\theta_k}=; 53\sum^n_{j=1}{1\over\sigma^2_j}{\partial f_j\over\theta_i}; 54{\partial f_j\over\theta_k} +; 55\sum^n_{j=1}{(f_j - F_j)\over\sigma^2_j}\cdot; 56{\partial^2f_j\over\partial\theta_i\partial\theta_k}\tag{4}; 57\f]; 58 ; 59In FUMILI algorithm for second derivatives of Chi-square approximate; 60expression is used when last term in (4) is discarded. It is often; 61done, not always wittingly, and sometimes causes troubles, for example,; 62if user wants to limit parameters with positive values by writing down; 63\f$\theta_i^2\f$ instead of \f$\theta_i\f$. FUMILI will fail if one tries; 64minimize \f$\chi^2 = g^2(\vec\theta)\f$ where g is arbitrary function.; 65 ; 66Approximate value is:; 67\f[{\partial^2\chi^2\over\partial\theta_i\partial\theta_k}\approx; 68Z_{ik}=; 69\sum^n_{j=1}{1\over\sigma^2_j}{\partial f_j\over\theta_i}; 70{\partial f_j\over\theta_k}\tag{5}; 71\f]; 72 ; 73Then the equations for parameter increments are; 74\f[\left(\partial\chi^2\over\partial\theta_i\right)_{\vec\theta={\vec\theta}^0}; 75+\sum_k Z_{ik}\cdot(\theta_k-\theta^0_k) = 0,; 76\qquad i=1\ldots m\tag{6}; 77\f]; 78 ; 79Remarkable feature of algorithm is the technique for step; 80restriction. For an initial value of parameter \f${\vec\theta}^0\f$ a; 81parallelepiped \f$P_0\f$ is built with the center at \f${\vec\theta}^0\f$ and; 82axes parallel to coordinate axes \f$\theta_i\f$. The lengths of; 83parallelepiped sides along i-th axis is \f$2b_i\f$, where \f$",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFumili_8cxx_source.html:2383,down,down,2383,doc/master/TFumili_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFumili_8cxx_source.html,1,['down'],['down']
Availability," ; 5206 TClingClassInfo cl(GetInterpreterImpl(), name);; 5207 if (!cl.IsValid()) {; 5208 return ;; 5209 }; 5210 if (full) {; 5211 cl.FullName(output,*fNormalizedCtxt);; 5212 return;; 5213 }; 5214 // Well well well, for backward compatibility we need to act a bit too; 5215 // much like CINT.; 5216 TClassEdit::TSplitType splitname( cl.Name(), TClassEdit::kDropStd );; 5217 splitname.ShortType(output, TClassEdit::kDropStd );; 5218 ; 5219 return;; 5220}; 5221 ; 5222////////////////////////////////////////////////////////////////////////////////; 5223/// Execute a global function with arguments params.; 5224///; 5225/// FIXME: The cint-based version of this code does not check if the; 5226/// SetFunc() call works, and does not do any real checking; 5227/// for errors from the Exec() call. It did fetch the most; 5228/// recent cint security error and return that in error, but; 5229/// this does not really translate well to cling/clang. We; 5230/// should enhance these interfaces so that we can report; 5231/// compilation and runtime errors properly.; 5232 ; 5233void TCling::Execute(const char* function, const char* params, int* error); 5234{; 5235 R__LOCKGUARD_CLING(gInterpreterMutex);; 5236 if (error) {; 5237 *error = TInterpreter::kNoError;; 5238 }; 5239 TClingClassInfo cl(GetInterpreterImpl());; 5240 Longptr_t offset = 0L;; 5241 TClingCallFunc func(GetInterpreterImpl());; 5242 func.SetFunc(&cl, function, params, &offset);; 5243 func.Exec(nullptr);; 5244}; 5245 ; 5246////////////////////////////////////////////////////////////////////////////////; 5247/// Execute a method from class cl with arguments params.; 5248///; 5249/// FIXME: The cint-based version of this code does not check if the; 5250/// SetFunc() call works, and does not do any real checking; 5251/// for errors from the Exec() call. It did fetch the most; 5252/// recent cint security error and return that in error, but; 5253/// this does not really translate well to cling/clang. We; 5254/// should enhance the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:203515,error,errors,203515,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,1,['error'],['errors']
Availability, ; : 165 | 7913.46 6943.53 0.0204022 0.00180585 43019.2 0; : 166 Minimum Test error found - save the configuration ; : 166 | 7848.36 6879.88 0.0204674 0.00182719 42918 0; : 167 Minimum Test error found - save the configuration ; : 167 | 7784.6 6815.88 0.0200635 0.00180544 43816.2 0; : 168 Minimum Test error found - save the configuration ; : 168 | 7720.74 6752.64 0.0200614 0.00180502 43820.3 0; : 169 Minimum Test error found - save the configuration ; : 169 | 7657.59 6690.04 0.0201291 0.00181427 43680.6 0; : 170 Minimum Test error found - save the configuration ; : 170 | 7595.66 6626.52 0.0200669 0.00181066 43820.7 0; : 171 Minimum Test error found - save the configuration ; : 171 | 7532.11 6565.9 0.0201114 0.00182063 43737.9 0; : 172 Minimum Test error found - save the configuration ; : 172 | 7471.23 6504.71 0.0200897 0.00182205 43793.2 0; : 173 Minimum Test error found - save the configuration ; : 173 | 7410.53 6443.41 0.0204177 0.00187787 43150.4 0; : 174 Minimum Test error found - save the configuration ; : 174 | 7349.1 6383.77 0.0200981 0.00181163 43748.3 0; : 175 Minimum Test error found - save the configuration ; : 175 | 7289.39 6324 0.0200682 0.0018131 43823.4 0; : 176 Minimum Test error found - save the configuration ; : 176 | 7230 6264.47 0.0200687 0.00181285 43821.5 0; : 177 Minimum Test error found - save the configuration ; : 177 | 7171.82 6204.18 0.0200767 0.00181262 43801.8 0; : 178 Minimum Test error found - save the configuration ; : 178 | 7111.03 6147.7 0.0200764 0.00181324 43803.9 0; : 179 Minimum Test error found - save the configuration ; : 179 | 7053.87 6090.24 0.0200835 0.0018163 43794.3 0; : 180 Minimum Test error found - save the configuration ; : 180 | 6997.03 6032.07 0.0204217 0.00180691 42976.5 0; : 181 Minimum Test error found - save the configuration ; : 181 | 6939.07 5975.45 0.0200798 0.00180145 43767.5 0; : 182 Minimum Test error found - save the configuration ; : 182 | 6882.6 5919.11 0.0200699 0.00180792 43806.8 0; : 183 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:30585,error,error,30585,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 177 | 7171.82 6204.18 0.0200767 0.00181262 43801.8 0; : 178 Minimum Test error found - save the configuration ; : 178 | 7111.03 6147.7 0.0200764 0.00181324 43803.9 0; : 179 Minimum Test error found - save the configuration ; : 179 | 7053.87 6090.24 0.0200835 0.0018163 43794.3 0; : 180 Minimum Test error found - save the configuration ; : 180 | 6997.03 6032.07 0.0204217 0.00180691 42976.5 0; : 181 Minimum Test error found - save the configuration ; : 181 | 6939.07 5975.45 0.0200798 0.00180145 43767.5 0; : 182 Minimum Test error found - save the configuration ; : 182 | 6882.6 5919.11 0.0200699 0.00180792 43806.8 0; : 183 Minimum Test error found - save the configuration ; : 183 | 6826.1 5863.62 0.0200838 0.00180862 43775.3 0; : 184 Minimum Test error found - save the configuration ; : 184 | 6771.06 5807.61 0.0200991 0.00181199 43746.7 0; : 185 Minimum Test error found - save the configuration ; : 185 | 6714.64 5753.86 0.0200873 0.00180851 43766.7 0; : 186 Minimum Test error found - save the configuration ; : 186 | 6660.45 5699.55 0.0200713 0.00180648 43800 0; : 187 Minimum Test error found - save the configuration ; : 187 | 6606 5645.81 0.0200891 0.00180584 43755.9 0; : 188 Minimum Test error found - save the configuration ; : 188 | 6552.47 5592.04 0.0200898 0.00181079 43766 0; : 189 Minimum Test error found - save the configuration ; : 189 | 6500.15 5537.2 0.0201183 0.00181031 43696.6 0; : 190 Minimum Test error found - save the configuration ; : 190 | 6444.37 5487.05 0.0200871 0.00180586 43760.7 0; : 191 Minimum Test error found - save the configuration ; : 191 | 6394.21 5433.57 0.0200994 0.00180152 43720.8 0; : 192 Minimum Test error found - save the configuration ; : 192 | 6340.82 5382.29 0.0201748 0.00181779 43580.1 0; : 193 Minimum Test error found - save the configuration ; : 193 | 6289.73 5330.56 0.0202017 0.00183095 43547.4 0; : 194 Minimum Test error found - save the configuration ; : 194 | 6238.01 5279.82 0.0201002 0.00180964 43738.5 0; : 195 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:31941,error,error,31941,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 200 | 5938.96 4985.44 0.0201058 0.00181448 43736.6 0; : 201 Minimum Test error found - save the configuration ; : 201 | 5891.43 4936.26 0.0201175 0.00184013 43770 0; : 202 Minimum Test error found - save the configuration ; : 202 | 5842.14 4889.6 0.0203335 0.00187992 43352.1 0; : 203 Minimum Test error found - save the configuration ; : 203 | 5794.67 4843.13 0.0203128 0.00181164 43240.6 0; : 204 Minimum Test error found - save the configuration ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Test error found - save the configuration ; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Test error found - save the configuration ; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Test error found - save the configuration ; : 207 | 5608.52 4659.29 0.0205316 0.00181286 42737.8 0; : 208 Minimum Test error found - save the configuration ; : 208 | 5563.22 4613.51 0.0205774 0.00187424 42773.5 0; : 209 Minimum Test error found - save the configuration ; : 209 | 5517.39 4568.89 0.0206693 0.00189663 42615.1 0; : 210 Minimum Test error found - save the configuration ; : 210 | 5472.46 4524.65 0.0206417 0.0018492 42570.3 0; : 211 Minimum Test error found - save the configuration ; : 211 | 5426.81 4482.4 0.0206443 0.00186291 42595.5 0; : 212 Minimum Test error found - save the configuration ; : 212 | 5384.28 4437.99 0.020536 0.00181976 42743.7 0; : 213 Minimum Test error found - save the configuration ; : 213 | 5339.22 4395.34 0.0201574 0.00182356 43635.1 0; : 214 Minimum Test error found - save the configuration ; : 214 | 5296.23 4352.84 0.0204206 0.00182076 43011.2 0; : 215 Minimum Test error found - save the configuration ; : 215 | 5253.06 4310.52 0.0202066 0.00181743 43504 0; : 216 Minimum Test error found - save the configuration ; : 216 | 5210.68 4267.22 0.0201957 0.00182236 43541.2 0; : 217 Minimum Test error found - save the configuration ; : 217 | 5167.13 4226.2 0.0205987 0.00192627 42843.8 0; : 218 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:34545,error,error,34545,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 201 | 5891.43 4936.26 0.0201175 0.00184013 43770 0; : 202 Minimum Test error found - save the configuration ; : 202 | 5842.14 4889.6 0.0203335 0.00187992 43352.1 0; : 203 Minimum Test error found - save the configuration ; : 203 | 5794.67 4843.13 0.0203128 0.00181164 43240.6 0; : 204 Minimum Test error found - save the configuration ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Test error found - save the configuration ; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Test error found - save the configuration ; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Test error found - save the configuration ; : 207 | 5608.52 4659.29 0.0205316 0.00181286 42737.8 0; : 208 Minimum Test error found - save the configuration ; : 208 | 5563.22 4613.51 0.0205774 0.00187424 42773.5 0; : 209 Minimum Test error found - save the configuration ; : 209 | 5517.39 4568.89 0.0206693 0.00189663 42615.1 0; : 210 Minimum Test error found - save the configuration ; : 210 | 5472.46 4524.65 0.0206417 0.0018492 42570.3 0; : 211 Minimum Test error found - save the configuration ; : 211 | 5426.81 4482.4 0.0206443 0.00186291 42595.5 0; : 212 Minimum Test error found - save the configuration ; : 212 | 5384.28 4437.99 0.020536 0.00181976 42743.7 0; : 213 Minimum Test error found - save the configuration ; : 213 | 5339.22 4395.34 0.0201574 0.00182356 43635.1 0; : 214 Minimum Test error found - save the configuration ; : 214 | 5296.23 4352.84 0.0204206 0.00182076 43011.2 0; : 215 Minimum Test error found - save the configuration ; : 215 | 5253.06 4310.52 0.0202066 0.00181743 43504 0; : 216 Minimum Test error found - save the configuration ; : 216 | 5210.68 4267.22 0.0201957 0.00182236 43541.2 0; : 217 Minimum Test error found - save the configuration ; : 217 | 5167.13 4226.2 0.0205987 0.00192627 42843.8 0; : 218 Minimum Test error found - save the configuration ; : 218 | 5125.25 4184.98 0.0205604 0.00182022 42689.1 0; : 219 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:34659,error,error,34659,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 204 | 5748.17 4795.8 0.0204843 0.00186518 42966.5 0; : 205 Minimum Test error found - save the configuration ; : 205 | 5701.17 4749.25 0.0206407 0.00185898 42594.5 0; : 206 Minimum Test error found - save the configuration ; : 206 | 5653.72 4704.65 0.0205823 0.00187697 42768.5 0; : 207 Minimum Test error found - save the configuration ; : 207 | 5608.52 4659.29 0.0205316 0.00181286 42737.8 0; : 208 Minimum Test error found - save the configuration ; : 208 | 5563.22 4613.51 0.0205774 0.00187424 42773.5 0; : 209 Minimum Test error found - save the configuration ; : 209 | 5517.39 4568.89 0.0206693 0.00189663 42615.1 0; : 210 Minimum Test error found - save the configuration ; : 210 | 5472.46 4524.65 0.0206417 0.0018492 42570.3 0; : 211 Minimum Test error found - save the configuration ; : 211 | 5426.81 4482.4 0.0206443 0.00186291 42595.5 0; : 212 Minimum Test error found - save the configuration ; : 212 | 5384.28 4437.99 0.020536 0.00181976 42743.7 0; : 213 Minimum Test error found - save the configuration ; : 213 | 5339.22 4395.34 0.0201574 0.00182356 43635.1 0; : 214 Minimum Test error found - save the configuration ; : 214 | 5296.23 4352.84 0.0204206 0.00182076 43011.2 0; : 215 Minimum Test error found - save the configuration ; : 215 | 5253.06 4310.52 0.0202066 0.00181743 43504 0; : 216 Minimum Test error found - save the configuration ; : 216 | 5210.68 4267.22 0.0201957 0.00182236 43541.2 0; : 217 Minimum Test error found - save the configuration ; : 217 | 5167.13 4226.2 0.0205987 0.00192627 42843.8 0; : 218 Minimum Test error found - save the configuration ; : 218 | 5125.25 4184.98 0.0205604 0.00182022 42689.1 0; : 219 Minimum Test error found - save the configuration ; : 219 | 5082.85 4144.99 0.0201692 0.00184819 43665.6 0; : 220 Minimum Test error found - save the configuration ; : 220 | 5041.97 4104.3 0.0201733 0.00183631 43627.6 0; : 221 Minimum Test error found - save the configuration ; : 221 | 5000.63 4064.07 0.0203116 0.00186316 43364 0; : 222 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:34998,error,error,34998,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 229 | 4683.32 3755.52 0.0201311 0.00181167 43669.5 0; : 230 Minimum Test error found - save the configuration ; : 230 | 4644.47 3718.53 0.0201323 0.00180638 43654.1 0; : 231 Minimum Test error found - save the configuration ; : 231 | 4606.79 3681.43 0.020129 0.00181323 43678.1 0; : 232 Minimum Test error found - save the configuration ; : 232 | 4567.71 3646.94 0.0201545 0.0018103 43610.4 0; : 233 Minimum Test error found - save the configuration ; : 233 | 4531.87 3609.69 0.0200999 0.00180936 43738.5 0; : 234 Minimum Test error found - save the configuration ; : 234 | 4493.9 3574.45 0.0204352 0.00182946 42997.5 0; : 235 Minimum Test error found - save the configuration ; : 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:37831,error,error,37831,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 230 | 4644.47 3718.53 0.0201323 0.00180638 43654.1 0; : 231 Minimum Test error found - save the configuration ; : 231 | 4606.79 3681.43 0.020129 0.00181323 43678.1 0; : 232 Minimum Test error found - save the configuration ; : 232 | 4567.71 3646.94 0.0201545 0.0018103 43610.4 0; : 233 Minimum Test error found - save the configuration ; : 233 | 4531.87 3609.69 0.0200999 0.00180936 43738.5 0; : 234 Minimum Test error found - save the configuration ; : 234 | 4493.9 3574.45 0.0204352 0.00182946 42997.5 0; : 235 Minimum Test error found - save the configuration ; : 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:37945,error,error,37945,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 231 | 4606.79 3681.43 0.020129 0.00181323 43678.1 0; : 232 Minimum Test error found - save the configuration ; : 232 | 4567.71 3646.94 0.0201545 0.0018103 43610.4 0; : 233 Minimum Test error found - save the configuration ; : 233 | 4531.87 3609.69 0.0200999 0.00180936 43738.5 0; : 234 Minimum Test error found - save the configuration ; : 234 | 4493.9 3574.45 0.0204352 0.00182946 42997.5 0; : 235 Minimum Test error found - save the configuration ; : 235 | 4458.22 3537.88 0.0202146 0.00181434 43477.6 0; : 236 Minimum Test error found - save the configuration ; : 236 | 4420.27 3503.48 0.0201332 0.00182095 43686.7 0; : 237 Minimum Test error found - save the configuration ; : 237 | 4384.12 3469.32 0.020111 0.00181828 43733.2 0; : 238 Minimum Test error found - save the configuration ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:38059,error,error,38059,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 238 | 4349.33 3433.65 0.0201102 0.00181751 43733.3 0; : 239 Minimum Test error found - save the configuration ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minimum Test error found - save the configuration ; : 251 | 3905.19 3012.24 0.0207706 0.0018857 42361.9 0; : 252 Minimum Test error found - save the configuration ; : 252 | 3873.64 2981.7 0.0208833 0.0019031 42149.1 0; : 253 Minimum Test error found - save the configuration ; : 253 | 3841.98 2951.54 0.0208487 0.0019305 42287.4 0; : 254 Minimum Test error found - save the configuration ; : 254 | 3809.95 2921.87 0.0208755 0.00187363 42101.1 0; : 255 Minimum Test error found - save the configuration ; : 255 | 3779.13 2892.2 0.020905 0.00188208 42054.6 0; : 256 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:38853,error,error,38853,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 239 | 4312.94 3399.06 0.0201135 0.00181726 43724.7 0; : 240 Minimum Test error found - save the configuration ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minimum Test error found - save the configuration ; : 251 | 3905.19 3012.24 0.0207706 0.0018857 42361.9 0; : 252 Minimum Test error found - save the configuration ; : 252 | 3873.64 2981.7 0.0208833 0.0019031 42149.1 0; : 253 Minimum Test error found - save the configuration ; : 253 | 3841.98 2951.54 0.0208487 0.0019305 42287.4 0; : 254 Minimum Test error found - save the configuration ; : 254 | 3809.95 2921.87 0.0208755 0.00187363 42101.1 0; : 255 Minimum Test error found - save the configuration ; : 255 | 3779.13 2892.2 0.020905 0.00188208 42054.6 0; : 256 Minimum Test error found - save the configuration ; : 256 | 3747.34 2863.22 0.020356 0.00183152 43186 0; : 257 Minimum Te,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:38967,error,error,38967,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 240 | 4277.25 3365.37 0.0201097 0.00181862 43737.2 0; : 241 Minimum Test error found - save the configuration ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minimum Test error found - save the configuration ; : 251 | 3905.19 3012.24 0.0207706 0.0018857 42361.9 0; : 252 Minimum Test error found - save the configuration ; : 252 | 3873.64 2981.7 0.0208833 0.0019031 42149.1 0; : 253 Minimum Test error found - save the configuration ; : 253 | 3841.98 2951.54 0.0208487 0.0019305 42287.4 0; : 254 Minimum Test error found - save the configuration ; : 254 | 3809.95 2921.87 0.0208755 0.00187363 42101.1 0; : 255 Minimum Test error found - save the configuration ; : 255 | 3779.13 2892.2 0.020905 0.00188208 42054.6 0; : 256 Minimum Test error found - save the configuration ; : 256 | 3747.34 2863.22 0.020356 0.00183152 43186 0; : 257 Minimum Test error found - save the configuration ; : 257 | 3717.23 2832.96 0.0205175 0.00183548 42822 0; : 258 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:39081,error,error,39081,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 241 | 4241.69 3332.68 0.0201074 0.00181941 43744.5 0; : 242 Minimum Test error found - save the configuration ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minimum Test error found - save the configuration ; : 251 | 3905.19 3012.24 0.0207706 0.0018857 42361.9 0; : 252 Minimum Test error found - save the configuration ; : 252 | 3873.64 2981.7 0.0208833 0.0019031 42149.1 0; : 253 Minimum Test error found - save the configuration ; : 253 | 3841.98 2951.54 0.0208487 0.0019305 42287.4 0; : 254 Minimum Test error found - save the configuration ; : 254 | 3809.95 2921.87 0.0208755 0.00187363 42101.1 0; : 255 Minimum Test error found - save the configuration ; : 255 | 3779.13 2892.2 0.020905 0.00188208 42054.6 0; : 256 Minimum Test error found - save the configuration ; : 256 | 3747.34 2863.22 0.020356 0.00183152 43186 0; : 257 Minimum Test error found - save the configuration ; : 257 | 3717.23 2832.96 0.0205175 0.00183548 42822 0; : 258 Minimum Test error found - save the configuration ; : 258 | 3685.71 2804.1 0.0207306 0.00191201 42511.2 0; : 259 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:39195,error,error,39195,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 242 | 4208.08 3298.33 0.0201335 0.00181692 43676.3 0; : 243 Minimum Test error found - save the configuration ; : 243 | 4173.13 3264.81 0.0202242 0.00183569 43505.4 0; : 244 Minimum Test error found - save the configuration ; : 244 | 4137.61 3233.61 0.0204354 0.00200563 43408 0; : 245 Minimum Test error found - save the configuration ; : 245 | 4104.68 3201.11 0.0208426 0.00184317 42106.5 0; : 246 Minimum Test error found - save the configuration ; : 246 | 4071.07 3168.1 0.0203912 0.0018296 43099.8 0; : 247 Minimum Test error found - save the configuration ; : 247 | 4036.99 3136.52 0.0201725 0.00181637 43582.1 0; : 248 Minimum Test error found - save the configuration ; : 248 | 4004.73 3104.47 0.0201502 0.00182336 43651.8 0; : 249 Minimum Test error found - save the configuration ; : 249 | 3970.44 3073.93 0.0201703 0.00181858 43592.7 0; : 250 Minimum Test error found - save the configuration ; : 250 | 3939.05 3041.72 0.0204513 0.00185682 43023.5 0; : 251 Minimum Test error found - save the configuration ; : 251 | 3905.19 3012.24 0.0207706 0.0018857 42361.9 0; : 252 Minimum Test error found - save the configuration ; : 252 | 3873.64 2981.7 0.0208833 0.0019031 42149.1 0; : 253 Minimum Test error found - save the configuration ; : 253 | 3841.98 2951.54 0.0208487 0.0019305 42287.4 0; : 254 Minimum Test error found - save the configuration ; : 254 | 3809.95 2921.87 0.0208755 0.00187363 42101.1 0; : 255 Minimum Test error found - save the configuration ; : 255 | 3779.13 2892.2 0.020905 0.00188208 42054.6 0; : 256 Minimum Test error found - save the configuration ; : 256 | 3747.34 2863.22 0.020356 0.00183152 43186 0; : 257 Minimum Test error found - save the configuration ; : 257 | 3717.23 2832.96 0.0205175 0.00183548 42822 0; : 258 Minimum Test error found - save the configuration ; : 258 | 3685.71 2804.1 0.0207306 0.00191201 42511.2 0; : 259 Minimum Test error found - save the configuration ; : 259 | 3655.28 2775.93 0.0206157 0.0018465 42623 0; : 260 Minimum Test err,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:39309,error,error,39309,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 265 | 3477.42 2610.03 0.0202093 0.0018315 43530.8 0; : 266 Minimum Test error found - save the configuration ; : 266 | 3448.44 2583.82 0.0201348 0.00181129 43659.7 0; : 267 Minimum Test error found - save the configuration ; : 267 | 3419.61 2557.61 0.0201203 0.00181281 43697.9 0; : 268 Minimum Test error found - save the configuration ; : 268 | 3391.52 2531.71 0.0201083 0.00181098 43722.2 0; : 269 Minimum Test error found - save the configuration ; : 269 | 3363.52 2505.37 0.0201147 0.00180493 43692.5 0; : 270 Minimum Test error found - save the configuration ; : 270 | 3335.06 2479.9 0.0201599 0.00183615 43659.2 0; : 271 Minimum Test error found - save the configuration ; : 271 | 3308.12 2454.26 0.0202082 0.00181348 43490.8 0; : 272 Minimum Test error found - save the configuration ; : 272 | 3280.89 2427.73 0.020272 0.0018293 43377.6 0; : 273 Minimum Test error found - save the configuration ; : 273 | 3252.38 2403.22 0.0201521 0.00183383 43672.2 0; : 274 Minimum Test error found - save the configuration ; : 274 | 3225.54 2378.31 0.0201071 0.00180974 43722.2 0; : 275 Minimum Test error found - save the configuration ; : 275 | 3198.95 2353.31 0.0201145 0.00180932 43703.5 0; : 276 Minimum Test error found - save the configuration ; : 276 | 3171.39 2329.66 0.0201297 0.00182099 43695.1 0; : 277 Minimum Test error found - save the configuration ; : 277 | 3145.15 2305.54 0.0201561 0.00183399 43663.2 0; : 278 Minimum Test error found - save the configuration ; : 278 | 3119.15 2281.29 0.0205214 0.00187306 42899.3 0; : 279 Minimum Test error found - save the configuration ; : 279 | 3092.67 2258.03 0.0205194 0.00183787 42823.1 0; : 280 Minimum Test error found - save the configuration ; : 280 | 3067.15 2234.03 0.0206301 0.00183798 42571.1 0; : 281 Minimum Test error found - save the configuration ; : 281 | 3041.24 2210.43 0.0205967 0.00188294 42749.4 0; : 282 Minimum Test error found - save the configuration ; : 282 | 3015.05 2187.65 0.0203448 0.00180913 43160 0; : 283 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:41910,error,error,41910,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 297 | 2654.18 1863.4 0.0201209 0.00180649 43681.3 0; : 298 Minimum Test error found - save the configuration ; : 298 | 2631.44 1843.45 0.0201273 0.00181385 43683.7 0; : 299 Minimum Test error found - save the configuration ; : 299 | 2608.67 1823.73 0.0201716 0.0018196 43591.9 0; : 300 Minimum Test error found - save the configuration ; : 300 | 2587.28 1803.4 0.0201132 0.00181242 43714.1 0; : 301 Minimum Test error found - save the configuration ; : 301 | 2563.77 1785.09 0.0201182 0.00181092 43698.4 0; : 302 Minimum Test error found - save the configuration ; : 302 | 2542.68 1765.44 0.020145 0.00181496 43644.3 0; : 303 Minimum Test error found - save the configuration ; : 303 | 2520.76 1746.74 0.0201278 0.00181436 43683.8 0; : 304 Minimum Test error found - save the configuration ; : 304 | 2499.57 1727.02 0.0204166 0.00191205 43232.5 0; : 305 Minimum Test error found - save the configuration ; : 305 | 2477.45 1708.65 0.0204906 0.00190401 43041.7 0; : 306 Minimum Test error found - save the configuration ; : 306 | 2456.23 1690.14 0.0205827 0.00188115 42777.3 0; : 307 Minimum Test error found - save the configuration ; : 307 | 2435.47 1671.48 0.0207046 0.00184968 42429.2 0; : 308 Minimum Test error found - save the configuration ; : 308 | 2413.82 1653.88 0.0201781 0.00181945 43576.1 0; : 309 Minimum Test error found - save the configuration ; : 309 | 2393.9 1635.56 0.0203837 0.00183898 43138.9 0; : 310 Minimum Test error found - save the configuration ; : 310 | 2372.92 1617.74 0.0207665 0.00191074 42427.4 0; : 311 Minimum Test error found - save the configuration ; : 311 | 2352.45 1599.83 0.0207471 0.00187139 42382.5 0; : 312 Minimum Test error found - save the configuration ; : 312 | 2332.13 1582.05 0.0206387 0.00189784 42687.5 0; : 313 Minimum Test error found - save the configuration ; : 313 | 2311.44 1565.38 0.0203909 0.00182385 43087.1 0; : 314 Minimum Test error found - save the configuration ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Mi,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:45539,error,error,45539,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 314 | 2292.26 1547.75 0.0201333 0.00182196 43688.8 0; : 315 Minimum Test error found - save the configuration ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum Test error found - save the configuration ; : 327 | 2044.89 1339.01 0.0203662 0.00185106 43207.9 0; : 328 Minimum Test error found - save the configuration ; : 328 | 2027.08 1324.14 0.0205379 0.00189883 42920.6 0; : 329 Minimum Test error found - save the configuration ; : 329 | 2010.14 1308.4 0.0208465 0.00188706 42195.2 0; : 330 Minimum Test error found - save the configuration ; : 330 | 1991.48 1294.33 0.0203889 0.00185386 43161.4 0; : 331 Minimum Test error found - save the configuration ; : 331 | 1974 1281.47 0.020168 0.00182028 43602.2 0; : 332 Minimum ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:47472,error,error,47472,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 315 | 2272.08 1531.44 0.0203842 0.00191824 43322.9 0; : 316 Minimum Test error found - save the configuration ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum Test error found - save the configuration ; : 327 | 2044.89 1339.01 0.0203662 0.00185106 43207.9 0; : 328 Minimum Test error found - save the configuration ; : 328 | 2027.08 1324.14 0.0205379 0.00189883 42920.6 0; : 329 Minimum Test error found - save the configuration ; : 329 | 2010.14 1308.4 0.0208465 0.00188706 42195.2 0; : 330 Minimum Test error found - save the configuration ; : 330 | 1991.48 1294.33 0.0203889 0.00185386 43161.4 0; : 331 Minimum Test error found - save the configuration ; : 331 | 1974 1281.47 0.020168 0.00182028 43602.2 0; : 332 Minimum Test error found - save the configuration ; : 332 | 1957.4 1265.55 0.0201238 0.00181209 43687.9 0; : 333 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:47586,error,error,47586,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 316 | 2252.46 1514.26 0.0207323 0.00182901 42320.7 0; : 317 Minimum Test error found - save the configuration ; : 317 | 2232.67 1498.14 0.0203947 0.00181143 43049.5 0; : 318 Minimum Test error found - save the configuration ; : 318 | 2213.29 1481.14 0.0201416 0.00181311 43647.9 0; : 319 Minimum Test error found - save the configuration ; : 319 | 2194.1 1464.7 0.0201406 0.00182876 43687.5 0; : 320 Minimum Test error found - save the configuration ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum Test error found - save the configuration ; : 327 | 2044.89 1339.01 0.0203662 0.00185106 43207.9 0; : 328 Minimum Test error found - save the configuration ; : 328 | 2027.08 1324.14 0.0205379 0.00189883 42920.6 0; : 329 Minimum Test error found - save the configuration ; : 329 | 2010.14 1308.4 0.0208465 0.00188706 42195.2 0; : 330 Minimum Test error found - save the configuration ; : 330 | 1991.48 1294.33 0.0203889 0.00185386 43161.4 0; : 331 Minimum Test error found - save the configuration ; : 331 | 1974 1281.47 0.020168 0.00182028 43602.2 0; : 332 Minimum Test error found - save the configuration ; : 332 | 1957.4 1265.55 0.0201238 0.00181209 43687.9 0; : 333 Minimum Test error found - save the configuration ; : 333 | 1939.3 1251.56 0.020118 0.0018119 43701.4 0; : 334 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:47700,error,error,47700,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 320 | 2175.38 1447.67 0.0206862 0.00188802 42557.4 0; : 321 Minimum Test error found - save the configuration ; : 321 | 2155.9 1431.89 0.0202817 0.00182411 43342.5 0; : 322 Minimum Test error found - save the configuration ; : 322 | 2136.97 1416.3 0.0201745 0.00185513 43669.6 0; : 323 Minimum Test error found - save the configuration ; : 323 | 2118.43 1400.63 0.0201356 0.00181878 43675.8 0; : 324 Minimum Test error found - save the configuration ; : 324 | 2100.24 1384.53 0.0201342 0.00182071 43683.6 0; : 325 Minimum Test error found - save the configuration ; : 325 | 2081.68 1368.94 0.02014 0.00181951 43666.9 0; : 326 Minimum Test error found - save the configuration ; : 326 | 2062.99 1354.16 0.0201231 0.00181474 43695.9 0; : 327 Minimum Test error found - save the configuration ; : 327 | 2044.89 1339.01 0.0203662 0.00185106 43207.9 0; : 328 Minimum Test error found - save the configuration ; : 328 | 2027.08 1324.14 0.0205379 0.00189883 42920.6 0; : 329 Minimum Test error found - save the configuration ; : 329 | 2010.14 1308.4 0.0208465 0.00188706 42195.2 0; : 330 Minimum Test error found - save the configuration ; : 330 | 1991.48 1294.33 0.0203889 0.00185386 43161.4 0; : 331 Minimum Test error found - save the configuration ; : 331 | 1974 1281.47 0.020168 0.00182028 43602.2 0; : 332 Minimum Test error found - save the configuration ; : 332 | 1957.4 1265.55 0.0201238 0.00181209 43687.9 0; : 333 Minimum Test error found - save the configuration ; : 333 | 1939.3 1251.56 0.020118 0.0018119 43701.4 0; : 334 Minimum Test error found - save the configuration ; : 334 | 1922.28 1237.18 0.0201046 0.00181273 43735.3 0; : 335 Minimum Test error found - save the configuration ; : 335 | 1905.38 1223.07 0.0201485 0.00181696 43640.6 0; : 336 Minimum Test error found - save the configuration ; : 336 | 1888.23 1209.6 0.0201214 0.00181991 43712.2 0; : 337 Minimum Test error found - save the configuration ; : 337 | 1871.94 1195.83 0.0205304 0.00184821 42821.5 0; : 338 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:48154,error,error,48154,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 341 | 1806.12 1142.64 0.0202229 0.00182722 43488.6 0; : 342 Minimum Test error found - save the configuration ; : 342 | 1789.69 1130.02 0.0201502 0.00182055 43645.1 0; : 343 Minimum Test error found - save the configuration ; : 343 | 1774.23 1116.9 0.0201756 0.0018237 43592.2 0; : 344 Minimum Test error found - save the configuration ; : 344 | 1757.78 1104.57 0.0201146 0.00181274 43711.3 0; : 345 Minimum Test error found - save the configuration ; : 345 | 1742.23 1092.31 0.0201296 0.00180634 43660.4 0; : 346 Minimum Test error found - save the configuration ; : 346 | 1726.84 1079.76 0.0201287 0.00180534 43660.1 0; : 347 Minimum Test error found - save the configuration ; : 347 | 1711.03 1067.63 0.0201353 0.00181782 43674.2 0; : 348 Minimum Test error found - save the configuration ; : 348 | 1695.85 1055.38 0.0201691 0.00181876 43596 0; : 349 Minimum Test error found - save the configuration ; : 349 | 1680.85 1042.99 0.0201335 0.00181253 43665.7 0; : 350 Minimum Test error found - save the configuration ; : 350 | 1665.28 1031.67 0.0201289 0.00181121 43673.7 0; : 351 Minimum Test error found - save the configuration ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum Test error found - save the configuration ; : 352 | 1635.63 1008.56 0.0201479 0.00180795 43620.7 0; : 353 Minimum Test error found - save the configuration ; : 353 | 1620.78 996.719 0.0201232 0.001813 43691.5 0; : 354 Minimum Test error found - save the configuration ; : 354 | 1605.94 985.366 0.0201287 0.00181207 43676.2 0; : 355 Minimum Test error found - save the configuration ; : 355 | 1591.13 974.131 0.0204416 0.00182759 42978.3 0; : 356 Minimum Test error found - save the configuration ; : 356 | 1576.72 963.473 0.0201234 0.00181346 43692.1 0; : 357 Minimum Test error found - save the configuration ; : 357 | 1562.75 952.48 0.0201406 0.00181733 43660.4 0; : 358 Minimum Test error found - save the configuration ; : 358 | 1548.22 941.458 0.0201341 0.00182516 43694.5 0; : 359 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:50530,error,error,50530,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 342 | 1789.69 1130.02 0.0201502 0.00182055 43645.1 0; : 343 Minimum Test error found - save the configuration ; : 343 | 1774.23 1116.9 0.0201756 0.0018237 43592.2 0; : 344 Minimum Test error found - save the configuration ; : 344 | 1757.78 1104.57 0.0201146 0.00181274 43711.3 0; : 345 Minimum Test error found - save the configuration ; : 345 | 1742.23 1092.31 0.0201296 0.00180634 43660.4 0; : 346 Minimum Test error found - save the configuration ; : 346 | 1726.84 1079.76 0.0201287 0.00180534 43660.1 0; : 347 Minimum Test error found - save the configuration ; : 347 | 1711.03 1067.63 0.0201353 0.00181782 43674.2 0; : 348 Minimum Test error found - save the configuration ; : 348 | 1695.85 1055.38 0.0201691 0.00181876 43596 0; : 349 Minimum Test error found - save the configuration ; : 349 | 1680.85 1042.99 0.0201335 0.00181253 43665.7 0; : 350 Minimum Test error found - save the configuration ; : 350 | 1665.28 1031.67 0.0201289 0.00181121 43673.7 0; : 351 Minimum Test error found - save the configuration ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum Test error found - save the configuration ; : 352 | 1635.63 1008.56 0.0201479 0.00180795 43620.7 0; : 353 Minimum Test error found - save the configuration ; : 353 | 1620.78 996.719 0.0201232 0.001813 43691.5 0; : 354 Minimum Test error found - save the configuration ; : 354 | 1605.94 985.366 0.0201287 0.00181207 43676.2 0; : 355 Minimum Test error found - save the configuration ; : 355 | 1591.13 974.131 0.0204416 0.00182759 42978.3 0; : 356 Minimum Test error found - save the configuration ; : 356 | 1576.72 963.473 0.0201234 0.00181346 43692.1 0; : 357 Minimum Test error found - save the configuration ; : 357 | 1562.75 952.48 0.0201406 0.00181733 43660.4 0; : 358 Minimum Test error found - save the configuration ; : 358 | 1548.22 941.458 0.0201341 0.00182516 43694.5 0; : 359 Minimum Test error found - save the configuration ; : 359 | 1534.11 930.552 0.0201332 0.0018225 43690.3 0; : 360 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:50644,error,error,50644,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 344 | 1757.78 1104.57 0.0201146 0.00181274 43711.3 0; : 345 Minimum Test error found - save the configuration ; : 345 | 1742.23 1092.31 0.0201296 0.00180634 43660.4 0; : 346 Minimum Test error found - save the configuration ; : 346 | 1726.84 1079.76 0.0201287 0.00180534 43660.1 0; : 347 Minimum Test error found - save the configuration ; : 347 | 1711.03 1067.63 0.0201353 0.00181782 43674.2 0; : 348 Minimum Test error found - save the configuration ; : 348 | 1695.85 1055.38 0.0201691 0.00181876 43596 0; : 349 Minimum Test error found - save the configuration ; : 349 | 1680.85 1042.99 0.0201335 0.00181253 43665.7 0; : 350 Minimum Test error found - save the configuration ; : 350 | 1665.28 1031.67 0.0201289 0.00181121 43673.7 0; : 351 Minimum Test error found - save the configuration ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum Test error found - save the configuration ; : 352 | 1635.63 1008.56 0.0201479 0.00180795 43620.7 0; : 353 Minimum Test error found - save the configuration ; : 353 | 1620.78 996.719 0.0201232 0.001813 43691.5 0; : 354 Minimum Test error found - save the configuration ; : 354 | 1605.94 985.366 0.0201287 0.00181207 43676.2 0; : 355 Minimum Test error found - save the configuration ; : 355 | 1591.13 974.131 0.0204416 0.00182759 42978.3 0; : 356 Minimum Test error found - save the configuration ; : 356 | 1576.72 963.473 0.0201234 0.00181346 43692.1 0; : 357 Minimum Test error found - save the configuration ; : 357 | 1562.75 952.48 0.0201406 0.00181733 43660.4 0; : 358 Minimum Test error found - save the configuration ; : 358 | 1548.22 941.458 0.0201341 0.00182516 43694.5 0; : 359 Minimum Test error found - save the configuration ; : 359 | 1534.11 930.552 0.0201332 0.0018225 43690.3 0; : 360 Minimum Test error found - save the configuration ; : 360 | 1520 920.009 0.020131 0.00182161 43693.5 0; : 361 Minimum Test error found - save the configuration ; : 361 | 1506.11 909.801 0.0201272 0.00182148 43702.2 0; : 362 Minimum T,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:50870,error,error,50870,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 351 | 1649.82 1020.23 0.0201549 0.00183189 43661 0; : 352 Minimum Test error found - save the configuration ; : 352 | 1635.63 1008.56 0.0201479 0.00180795 43620.7 0; : 353 Minimum Test error found - save the configuration ; : 353 | 1620.78 996.719 0.0201232 0.001813 43691.5 0; : 354 Minimum Test error found - save the configuration ; : 354 | 1605.94 985.366 0.0201287 0.00181207 43676.2 0; : 355 Minimum Test error found - save the configuration ; : 355 | 1591.13 974.131 0.0204416 0.00182759 42978.3 0; : 356 Minimum Test error found - save the configuration ; : 356 | 1576.72 963.473 0.0201234 0.00181346 43692.1 0; : 357 Minimum Test error found - save the configuration ; : 357 | 1562.75 952.48 0.0201406 0.00181733 43660.4 0; : 358 Minimum Test error found - save the configuration ; : 358 | 1548.22 941.458 0.0201341 0.00182516 43694.5 0; : 359 Minimum Test error found - save the configuration ; : 359 | 1534.11 930.552 0.0201332 0.0018225 43690.3 0; : 360 Minimum Test error found - save the configuration ; : 360 | 1520 920.009 0.020131 0.00182161 43693.5 0; : 361 Minimum Test error found - save the configuration ; : 361 | 1506.11 909.801 0.0201272 0.00182148 43702.2 0; : 362 Minimum Test error found - save the configuration ; : 362 | 1492.5 899.632 0.0201236 0.00181792 43702.3 0; : 363 Minimum Test error found - save the configuration ; : 363 | 1478.85 889.132 0.0202194 0.00182105 43482.1 0; : 364 Minimum Test error found - save the configuration ; : 364 | 1465.26 879.602 0.0201188 0.00181401 43704.5 0; : 365 Minimum Test error found - save the configuration ; : 365 | 1452.04 868.451 0.0201338 0.00181986 43682.7 0; : 366 Minimum Test error found - save the configuration ; : 366 | 1438.22 858.822 0.0202933 0.00187199 43428 0; : 367 Minimum Test error found - save the configuration ; : 367 | 1424.9 849.517 0.0203705 0.00181778 43120.3 0; : 368 Minimum Test error found - save the configuration ; : 368 | 1411.97 839.213 0.020133 0.00180845 43657.3 0; : 369 Minimum Test,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:51664,error,error,51664,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 405 | 993.455 551.67 0.020178 0.00184829 43644.9 0; : 406 Minimum Test error found - save the configuration ; : 406 | 983.719 545.531 0.0202059 0.00184968 43581.9 0; : 407 Minimum Test error found - save the configuration ; : 407 | 974.381 539.309 0.0201407 0.00182369 43675.3 0; : 408 Minimum Test error found - save the configuration ; : 408 | 964.601 533.917 0.0201423 0.00181632 43653.8 0; : 409 Minimum Test error found - save the configuration ; : 409 | 955.421 527.595 0.0204236 0.00190128 43191.2 0; : 410 Minimum Test error found - save the configuration ; : 410 | 945.766 522.368 0.0209062 0.00188448 42057.3 0; : 411 Minimum Test error found - save the configuration ; : 411 | 936.425 516.53 0.0207319 0.00188678 42451.3 0; : 412 Minimum Test error found - save the configuration ; : 412 | 928.172 509.995 0.0202986 0.00182294 43300.2 0; : 413 Minimum Test error found - save the configuration ; : 413 | 918.166 504.988 0.0203305 0.00183515 43254.1 0; : 414 Minimum Test error found - save the configuration ; : 414 | 909.515 499.67 0.0201973 0.00182149 43535.5 0; : 415 Minimum Test error found - save the configuration ; : 415 | 900.387 494.174 0.0205436 0.00185058 42796.6 0; : 416 Minimum Test error found - save the configuration ; : 416 | 891.862 489.021 0.0204053 0.00183104 43070.4 0; : 417 Minimum Test error found - save the configuration ; : 417 | 883.257 483.108 0.0201356 0.00181777 43673.3 0; : 418 Minimum Test error found - save the configuration ; : 418 | 874.299 477.981 0.0201544 0.00181008 43610.1 0; : 419 Minimum Test error found - save the configuration ; : 419 | 866.108 472.505 0.0201451 0.00182964 43678.9 0; : 420 Minimum Test error found - save the configuration ; : 420 | 856.878 467.755 0.0201787 0.00183446 43610.4 0; : 421 Minimum Test error found - save the configuration ; : 421 | 849.297 462.722 0.0201682 0.00182292 43607.8 0; : 422 Minimum Test error found - save the configuration ; : 422 | 840.335 457.953 0.0201484 0.0018138 43633.4 0; : 423 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:57772,error,error,57772,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 433 | 753.136 407.298 0.0201476 0.00182106 43652.7 0; : 434 Minimum Test error found - save the configuration ; : 434 | 745.345 402.751 0.020133 0.00182099 43687.1 0; : 435 Minimum Test error found - save the configuration ; : 435 | 738.037 398.378 0.0201447 0.00181389 43642.5 0; : 436 Minimum Test error found - save the configuration ; : 436 | 730.692 394.216 0.0201655 0.00182279 43614.1 0; : 437 Minimum Test error found - save the configuration ; : 437 | 723.856 389.773 0.0201631 0.00181919 43611.2 0; : 438 Minimum Test error found - save the configuration ; : 438 | 716.113 386.163 0.0201299 0.00181919 43690.3 0; : 439 Minimum Test error found - save the configuration ; : 439 | 709.435 381.839 0.02057 0.00189456 42836.9 0; : 440 Minimum Test error found - save the configuration ; : 440 | 701.662 378.014 0.0205169 0.00184853 42853.2 0; : 441 Minimum Test error found - save the configuration ; : 441 | 695.167 373.877 0.0206789 0.00187467 42543.7 0; : 442 Minimum Test error found - save the configuration ; : 442 | 687.861 370.419 0.0206937 0.00187678 42514.9 0; : 443 Minimum Test error found - save the configuration ; : 443 | 681.656 366.359 0.0201552 0.00181904 43629.7 0; : 444 Minimum Test error found - save the configuration ; : 444 | 674.01 362.924 0.0201329 0.0018218 43689.4 0; : 445 Minimum Test error found - save the configuration ; : 445 | 667.37 358.699 0.0201197 0.00181899 43714.1 0; : 446 Minimum Test error found - save the configuration ; : 446 | 660.646 354.833 0.0201137 0.00181978 43730.3 0; : 447 Minimum Test error found - save the configuration ; : 447 | 654.211 352.003 0.0201333 0.00184653 43747.4 0; : 448 Minimum Test error found - save the configuration ; : 448 | 647.374 347.327 0.0201121 0.0018176 43729 0; : 449 Minimum Test error found - save the configuration ; : 449 | 641 344.618 0.0201064 0.00181317 43732 0; : 450 Minimum Test error found - save the configuration ; : 450 | 634.906 340.694 0.0201841 0.00185283 43641.2 0; : 451 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:60950,error,error,60950,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 434 | 745.345 402.751 0.020133 0.00182099 43687.1 0; : 435 Minimum Test error found - save the configuration ; : 435 | 738.037 398.378 0.0201447 0.00181389 43642.5 0; : 436 Minimum Test error found - save the configuration ; : 436 | 730.692 394.216 0.0201655 0.00182279 43614.1 0; : 437 Minimum Test error found - save the configuration ; : 437 | 723.856 389.773 0.0201631 0.00181919 43611.2 0; : 438 Minimum Test error found - save the configuration ; : 438 | 716.113 386.163 0.0201299 0.00181919 43690.3 0; : 439 Minimum Test error found - save the configuration ; : 439 | 709.435 381.839 0.02057 0.00189456 42836.9 0; : 440 Minimum Test error found - save the configuration ; : 440 | 701.662 378.014 0.0205169 0.00184853 42853.2 0; : 441 Minimum Test error found - save the configuration ; : 441 | 695.167 373.877 0.0206789 0.00187467 42543.7 0; : 442 Minimum Test error found - save the configuration ; : 442 | 687.861 370.419 0.0206937 0.00187678 42514.9 0; : 443 Minimum Test error found - save the configuration ; : 443 | 681.656 366.359 0.0201552 0.00181904 43629.7 0; : 444 Minimum Test error found - save the configuration ; : 444 | 674.01 362.924 0.0201329 0.0018218 43689.4 0; : 445 Minimum Test error found - save the configuration ; : 445 | 667.37 358.699 0.0201197 0.00181899 43714.1 0; : 446 Minimum Test error found - save the configuration ; : 446 | 660.646 354.833 0.0201137 0.00181978 43730.3 0; : 447 Minimum Test error found - save the configuration ; : 447 | 654.211 352.003 0.0201333 0.00184653 43747.4 0; : 448 Minimum Test error found - save the configuration ; : 448 | 647.374 347.327 0.0201121 0.0018176 43729 0; : 449 Minimum Test error found - save the configuration ; : 449 | 641 344.618 0.0201064 0.00181317 43732 0; : 450 Minimum Test error found - save the configuration ; : 450 | 634.906 340.694 0.0201841 0.00185283 43641.2 0; : 451 Minimum Test error found - save the configuration ; : 451 | 628.321 336.668 0.0202054 0.00184722 43577.2 0; : 452 Minimum Test ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:61064,error,error,61064,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 454 | 608.831 326.391 0.0201257 0.00180567 43668.1 0; : 455 Minimum Test error found - save the configuration ; : 455 | 602.478 323.085 0.0201467 0.00181706 43645.1 0; : 456 Minimum Test error found - save the configuration ; : 456 | 596.625 319.828 0.0201415 0.00181382 43649.8 0; : 457 Minimum Test error found - save the configuration ; : 457 | 590.662 316.621 0.0201112 0.00181253 43718.9 0; : 458 Minimum Test error found - save the configuration ; : 458 | 584.171 313.672 0.0201179 0.00180966 43696.3 0; : 459 Minimum Test error found - save the configuration ; : 459 | 578.684 310.243 0.020117 0.00181196 43703.7 0; : 460 Minimum Test error found - save the configuration ; : 460 | 572.668 306.849 0.0201178 0.00181375 43706.2 0; : 461 Minimum Test error found - save the configuration ; : 461 | 566.644 303.945 0.0201078 0.00181369 43730 0; : 462 Minimum Test error found - save the configuration ; : 462 | 560.843 301.023 0.0201248 0.00180535 43669.5 0; : 463 Minimum Test error found - save the configuration ; : 463 | 555.13 298.085 0.0201287 0.00181104 43673.6 0; : 464 Minimum Test error found - save the configuration ; : 464 | 549.755 294.833 0.0201145 0.00181462 43716.1 0; : 465 Minimum Test error found - save the configuration ; : 465 | 543.742 292.285 0.0201004 0.00181141 43742.2 0; : 466 Minimum Test error found - save the configuration ; : 466 | 538.058 289.638 0.0201135 0.00181083 43709.6 0; : 467 Minimum Test error found - save the configuration ; : 467 | 532.551 286.201 0.0203237 0.00183254 43264 0; : 468 Minimum Test error found - save the configuration ; : 468 | 527.38 283.018 0.0206168 0.00187635 42688.4 0; : 469 Minimum Test error found - save the configuration ; : 469 | 521.821 280.136 0.020536 0.00184948 42811.7 0; : 470 Minimum Test error found - save the configuration ; : 470 | 516.179 277.682 0.0201344 0.00181863 43678.3 0; : 471 Minimum Test error found - save the configuration ; : 471 | 510.8 274.83 0.02012 0.00181888 43713.2 0; : 472 Minimum Tes,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:63328,error,error,63328,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 475 | 490.186 263.742 0.0201189 0.00181234 43700.1 0; : 476 Minimum Test error found - save the configuration ; : 476 | 485.098 261.173 0.0201246 0.00180486 43668.7 0; : 477 Minimum Test error found - save the configuration ; : 477 | 480.019 258.868 0.0201244 0.00181187 43685.9 0; : 478 Minimum Test error found - save the configuration ; : 478 | 475.092 256.56 0.0201327 0.00181261 43667.9 0; : 479 Minimum Test error found - save the configuration ; : 479 | 470.459 253.447 0.0201134 0.00181351 43716.2 0; : 480 Minimum Test error found - save the configuration ; : 480 | 465.037 251.028 0.0201358 0.00183269 43708.4 0; : 481 Minimum Test error found - save the configuration ; : 481 | 460.485 248.77 0.0203198 0.00182444 43254.2 0; : 482 Minimum Test error found - save the configuration ; : 482 | 455.372 247.229 0.0201175 0.00180448 43684.8 0; : 483 Minimum Test error found - save the configuration ; : 483 | 451.061 243.731 0.0201278 0.0018159 43687.5 0; : 484 Minimum Test error found - save the configuration ; : 484 | 445.909 241.583 0.0201078 0.00181153 43724.8 0; : 485 Minimum Test error found - save the configuration ; : 485 | 441.645 238.817 0.0201252 0.00182817 43723 0; : 486 Minimum Test error found - save the configuration ; : 486 | 436.721 236.872 0.0201168 0.00181086 43701.6 0; : 487 Minimum Test error found - save the configuration ; : 487 | 432.036 234.838 0.0201083 0.00181291 43726.9 0; : 488 Minimum Test error found - save the configuration ; : 488 | 427.772 232.082 0.0201422 0.00181171 43643.2 0; : 489 Minimum Test error found - save the configuration ; : 489 | 423.017 229.997 0.0203149 0.00183693 43294.7 0; : 490 Minimum Test error found - save the configuration ; : 490 | 419.119 227.561 0.0201444 0.00181942 43656.3 0; : 491 Minimum Test error found - save the configuration ; : 491 | 414.431 225.611 0.0201416 0.00181918 43662.3 0; : 492 Minimum Test error found - save the configuration ; : 492 | 409.916 223.444 0.0201215 0.00181755 43706.4 0; : 493 Min,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:65708,error,error,65708,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 476 | 485.098 261.173 0.0201246 0.00180486 43668.7 0; : 477 Minimum Test error found - save the configuration ; : 477 | 480.019 258.868 0.0201244 0.00181187 43685.9 0; : 478 Minimum Test error found - save the configuration ; : 478 | 475.092 256.56 0.0201327 0.00181261 43667.9 0; : 479 Minimum Test error found - save the configuration ; : 479 | 470.459 253.447 0.0201134 0.00181351 43716.2 0; : 480 Minimum Test error found - save the configuration ; : 480 | 465.037 251.028 0.0201358 0.00183269 43708.4 0; : 481 Minimum Test error found - save the configuration ; : 481 | 460.485 248.77 0.0203198 0.00182444 43254.2 0; : 482 Minimum Test error found - save the configuration ; : 482 | 455.372 247.229 0.0201175 0.00180448 43684.8 0; : 483 Minimum Test error found - save the configuration ; : 483 | 451.061 243.731 0.0201278 0.0018159 43687.5 0; : 484 Minimum Test error found - save the configuration ; : 484 | 445.909 241.583 0.0201078 0.00181153 43724.8 0; : 485 Minimum Test error found - save the configuration ; : 485 | 441.645 238.817 0.0201252 0.00182817 43723 0; : 486 Minimum Test error found - save the configuration ; : 486 | 436.721 236.872 0.0201168 0.00181086 43701.6 0; : 487 Minimum Test error found - save the configuration ; : 487 | 432.036 234.838 0.0201083 0.00181291 43726.9 0; : 488 Minimum Test error found - save the configuration ; : 488 | 427.772 232.082 0.0201422 0.00181171 43643.2 0; : 489 Minimum Test error found - save the configuration ; : 489 | 423.017 229.997 0.0203149 0.00183693 43294.7 0; : 490 Minimum Test error found - save the configuration ; : 490 | 419.119 227.561 0.0201444 0.00181942 43656.3 0; : 491 Minimum Test error found - save the configuration ; : 491 | 414.431 225.611 0.0201416 0.00181918 43662.3 0; : 492 Minimum Test error found - save the configuration ; : 492 | 409.916 223.444 0.0201215 0.00181755 43706.4 0; : 493 Minimum Test error found - save the configuration ; : 493 | 405.856 221.079 0.0201212 0.00183714 43754 0; : 494 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:65822,error,error,65822,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 482 | 455.372 247.229 0.0201175 0.00180448 43684.8 0; : 483 Minimum Test error found - save the configuration ; : 483 | 451.061 243.731 0.0201278 0.0018159 43687.5 0; : 484 Minimum Test error found - save the configuration ; : 484 | 445.909 241.583 0.0201078 0.00181153 43724.8 0; : 485 Minimum Test error found - save the configuration ; : 485 | 441.645 238.817 0.0201252 0.00182817 43723 0; : 486 Minimum Test error found - save the configuration ; : 486 | 436.721 236.872 0.0201168 0.00181086 43701.6 0; : 487 Minimum Test error found - save the configuration ; : 487 | 432.036 234.838 0.0201083 0.00181291 43726.9 0; : 488 Minimum Test error found - save the configuration ; : 488 | 427.772 232.082 0.0201422 0.00181171 43643.2 0; : 489 Minimum Test error found - save the configuration ; : 489 | 423.017 229.997 0.0203149 0.00183693 43294.7 0; : 490 Minimum Test error found - save the configuration ; : 490 | 419.119 227.561 0.0201444 0.00181942 43656.3 0; : 491 Minimum Test error found - save the configuration ; : 491 | 414.431 225.611 0.0201416 0.00181918 43662.3 0; : 492 Minimum Test error found - save the configuration ; : 492 | 409.916 223.444 0.0201215 0.00181755 43706.4 0; : 493 Minimum Test error found - save the configuration ; : 493 | 405.856 221.079 0.0201212 0.00183714 43754 0; : 494 Minimum Test error found - save the configuration ; : 494 | 401.45 219.099 0.0201193 0.00182499 43729.5 0; : 495 Minimum Test error found - save the configuration ; : 495 | 397.399 217.296 0.020126 0.00182371 43710.3 0; : 496 Minimum Test error found - save the configuration ; : 496 | 393.093 215.198 0.0201176 0.0018173 43715.1 0; : 497 Minimum Test error found - save the configuration ; : 497 | 389.026 212.813 0.0201623 0.00182183 43619.4 0; : 498 Minimum Test error found - save the configuration ; : 498 | 384.957 210.725 0.0201097 0.00181178 43720.7 0; : 499 Minimum Test error found - save the configuration ; : 499 | 380.678 208.901 0.0201236 0.00180512 43671.8 0; : 500 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:66504,error,error,66504,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 483 | 451.061 243.731 0.0201278 0.0018159 43687.5 0; : 484 Minimum Test error found - save the configuration ; : 484 | 445.909 241.583 0.0201078 0.00181153 43724.8 0; : 485 Minimum Test error found - save the configuration ; : 485 | 441.645 238.817 0.0201252 0.00182817 43723 0; : 486 Minimum Test error found - save the configuration ; : 486 | 436.721 236.872 0.0201168 0.00181086 43701.6 0; : 487 Minimum Test error found - save the configuration ; : 487 | 432.036 234.838 0.0201083 0.00181291 43726.9 0; : 488 Minimum Test error found - save the configuration ; : 488 | 427.772 232.082 0.0201422 0.00181171 43643.2 0; : 489 Minimum Test error found - save the configuration ; : 489 | 423.017 229.997 0.0203149 0.00183693 43294.7 0; : 490 Minimum Test error found - save the configuration ; : 490 | 419.119 227.561 0.0201444 0.00181942 43656.3 0; : 491 Minimum Test error found - save the configuration ; : 491 | 414.431 225.611 0.0201416 0.00181918 43662.3 0; : 492 Minimum Test error found - save the configuration ; : 492 | 409.916 223.444 0.0201215 0.00181755 43706.4 0; : 493 Minimum Test error found - save the configuration ; : 493 | 405.856 221.079 0.0201212 0.00183714 43754 0; : 494 Minimum Test error found - save the configuration ; : 494 | 401.45 219.099 0.0201193 0.00182499 43729.5 0; : 495 Minimum Test error found - save the configuration ; : 495 | 397.399 217.296 0.020126 0.00182371 43710.3 0; : 496 Minimum Test error found - save the configuration ; : 496 | 393.093 215.198 0.0201176 0.0018173 43715.1 0; : 497 Minimum Test error found - save the configuration ; : 497 | 389.026 212.813 0.0201623 0.00182183 43619.4 0; : 498 Minimum Test error found - save the configuration ; : 498 | 384.957 210.725 0.0201097 0.00181178 43720.7 0; : 499 Minimum Test error found - save the configuration ; : 499 | 380.678 208.901 0.0201236 0.00180512 43671.8 0; : 500 Minimum Test error found - save the configuration ; : 500 | 376.893 206.954 0.0201138 0.00180496 43694.8 0; : 501 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:66618,error,error,66618,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 486 | 436.721 236.872 0.0201168 0.00181086 43701.6 0; : 487 Minimum Test error found - save the configuration ; : 487 | 432.036 234.838 0.0201083 0.00181291 43726.9 0; : 488 Minimum Test error found - save the configuration ; : 488 | 427.772 232.082 0.0201422 0.00181171 43643.2 0; : 489 Minimum Test error found - save the configuration ; : 489 | 423.017 229.997 0.0203149 0.00183693 43294.7 0; : 490 Minimum Test error found - save the configuration ; : 490 | 419.119 227.561 0.0201444 0.00181942 43656.3 0; : 491 Minimum Test error found - save the configuration ; : 491 | 414.431 225.611 0.0201416 0.00181918 43662.3 0; : 492 Minimum Test error found - save the configuration ; : 492 | 409.916 223.444 0.0201215 0.00181755 43706.4 0; : 493 Minimum Test error found - save the configuration ; : 493 | 405.856 221.079 0.0201212 0.00183714 43754 0; : 494 Minimum Test error found - save the configuration ; : 494 | 401.45 219.099 0.0201193 0.00182499 43729.5 0; : 495 Minimum Test error found - save the configuration ; : 495 | 397.399 217.296 0.020126 0.00182371 43710.3 0; : 496 Minimum Test error found - save the configuration ; : 496 | 393.093 215.198 0.0201176 0.0018173 43715.1 0; : 497 Minimum Test error found - save the configuration ; : 497 | 389.026 212.813 0.0201623 0.00182183 43619.4 0; : 498 Minimum Test error found - save the configuration ; : 498 | 384.957 210.725 0.0201097 0.00181178 43720.7 0; : 499 Minimum Test error found - save the configuration ; : 499 | 380.678 208.901 0.0201236 0.00180512 43671.8 0; : 500 Minimum Test error found - save the configuration ; : 500 | 376.893 206.954 0.0201138 0.00180496 43694.8 0; : 501 Minimum Test error found - save the configuration ; : 501 | 373.069 204.754 0.020131 0.0018136 43674.2 0; : 502 Minimum Test error found - save the configuration ; : 502 | 368.81 202.934 0.0201114 0.00181117 43715.3 0; : 503 Minimum Test error found - save the configuration ; : 503 | 365.178 200.54 0.0201169 0.00181058 43700.7 0; : 504 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:66957,error,error,66957,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 504 | 361.148 198.738 0.0201232 0.00180952 43683.3 0; : 505 Minimum Test error found - save the configuration ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minimum Test error found - save the configuration ; : 506 | 353.597 195.555 0.0201061 0.00181022 43725.7 0; : 507 Minimum Test error found - save the configuration ; : 507 | 349.908 193.134 0.0201154 0.00180497 43690.9 0; : 508 Minimum Test error found - save the configuration ; : 508 | 346.368 191.635 0.0201239 0.00180513 43671.2 0; : 509 Minimum Test error found - save the configuration ; : 509 | 342.684 189.987 0.020479 0.00183624 42912.1 0; : 510 Minimum Test error found - save the configuration ; : 510 | 338.936 187.68 0.0201257 0.00181109 43680.9 0; : 511 Minimum Test error found - save the configuration ; : 511 | 335.178 185.581 0.0201106 0.0018111 43716.9 0; : 512 Minimum Test error found - save the configuration ; : 512 | 331.755 184.666 0.0201452 0.00182488 43667.3 0; : 513 Minimum Test error found - save the configuration ; : 513 | 328.659 182.798 0.0201844 0.00187405 43691.2 0; : 514 Minimum Test error found - save the configuration ; : 514 | 324.836 180.622 0.0201448 0.00183693 43697 0; : 515 Minimum Test error found - save the configuration ; : 515 | 321.45 179.12 0.020437 0.00183763 43012.3 0; : 516 Minimum Test error found - save the configuration ; : 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:69000,error,error,69000,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 505 | 357.509 197.423 0.0201176 0.00181006 43697.8 0; : 506 Minimum Test error found - save the configuration ; : 506 | 353.597 195.555 0.0201061 0.00181022 43725.7 0; : 507 Minimum Test error found - save the configuration ; : 507 | 349.908 193.134 0.0201154 0.00180497 43690.9 0; : 508 Minimum Test error found - save the configuration ; : 508 | 346.368 191.635 0.0201239 0.00180513 43671.2 0; : 509 Minimum Test error found - save the configuration ; : 509 | 342.684 189.987 0.020479 0.00183624 42912.1 0; : 510 Minimum Test error found - save the configuration ; : 510 | 338.936 187.68 0.0201257 0.00181109 43680.9 0; : 511 Minimum Test error found - save the configuration ; : 511 | 335.178 185.581 0.0201106 0.0018111 43716.9 0; : 512 Minimum Test error found - save the configuration ; : 512 | 331.755 184.666 0.0201452 0.00182488 43667.3 0; : 513 Minimum Test error found - save the configuration ; : 513 | 328.659 182.798 0.0201844 0.00187405 43691.2 0; : 514 Minimum Test error found - save the configuration ; : 514 | 324.836 180.622 0.0201448 0.00183693 43697 0; : 515 Minimum Test error found - save the configuration ; : 515 | 321.45 179.12 0.020437 0.00183763 43012.3 0; : 516 Minimum Test error found - save the configuration ; : 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:69114,error,error,69114,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 515 | 321.45 179.12 0.020437 0.00183763 43012.3 0; : 516 Minimum Test error found - save the configuration ; : 516 | 317.804 177.214 0.0201516 0.00181548 43629.8 0; : 517 Minimum Test error found - save the configuration ; : 517 | 314.454 175.878 0.0201248 0.00181905 43702.1 0; : 518 Minimum Test error found - save the configuration ; : 518 | 311.376 174.038 0.0209489 0.00256909 43525.9 0; : 519 Minimum Test error found - save the configuration ; : 519 | 308.194 172.777 0.0312717 0.00294953 28246.5 0; : 520 Minimum Test error found - save the configuration ; : 520 | 304.608 170.454 0.0241719 0.00185008 35839.4 0; : 521 Minimum Test error found - save the configuration ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:70249,error,error,70249,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 521 | 301.091 169.057 0.0201646 0.00182965 43632.5 0; : 522 Minimum Test error found - save the configuration ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum Test error found - save the configuration ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimum Test error found - save the configuration ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimum Test error found - save the configuration ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum Test error found - save the configuration ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum Test error found - save the configuration ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimu,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:70930,error,error,70930,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 522 | 297.757 167.472 0.0204481 0.00183794 42987.2 0; : 523 Minimum Test error found - save the configuration ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum Test error found - save the configuration ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimum Test error found - save the configuration ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimum Test error found - save the configuration ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum Test error found - save the configuration ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum Test error found - save the configuration ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimum Test error found - save the configuration ; : 539 | 247.858 142.417 0.0201308 0.0018179 43685.2 0; : 540 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:71044,error,error,71044,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 523 | 294.843 165.895 0.0201197 0.00181783 43711.4 0; : 524 Minimum Test error found - save the configuration ; : 524 | 291.692 164.911 0.0201636 0.00183144 43639.1 0; : 525 Minimum Test error found - save the configuration ; : 525 | 288.615 162.74 0.0201168 0.0018126 43705.7 0; : 526 Minimum Test error found - save the configuration ; : 526 | 285.409 161.045 0.0201121 0.00181244 43716.6 0; : 527 Minimum Test error found - save the configuration ; : 527 | 282.171 159.772 0.0201445 0.00181159 43637.4 0; : 528 Minimum Test error found - save the configuration ; : 528 | 279.108 159.481 0.0201013 0.00180683 43729.2 0; : 529 Minimum Test error found - save the configuration ; : 529 | 276.719 156.675 0.0201429 0.0018175 43655.3 0; : 530 Minimum Test error found - save the configuration ; : 530 | 273.651 155.435 0.0201142 0.00181452 43716.7 0; : 531 Minimum Test error found - save the configuration ; : 531 | 270.462 154.476 0.0201154 0.00181212 43707.9 0; : 532 Minimum Test error found - save the configuration ; : 532 | 267.569 152.332 0.02019 0.00182583 43563.1 0; : 533 Minimum Test error found - save the configuration ; : 533 | 264.8 151.073 0.0201226 0.00181364 43694.6 0; : 534 Minimum Test error found - save the configuration ; : 534 | 261.885 150.199 0.0201859 0.00182138 43562.3 0; : 535 Minimum Test error found - save the configuration ; : 535 | 259.213 147.905 0.0201317 0.00182788 43706.7 0; : 536 Minimum Test error found - save the configuration ; : 536 | 255.833 146.796 0.0201182 0.0018174 43713.8 0; : 537 Minimum Test error found - save the configuration ; : 537 | 253.362 145.429 0.0201791 0.00183234 43604.5 0; : 538 Minimum Test error found - save the configuration ; : 538 | 250.467 143.959 0.0202125 0.00183528 43532.1 0; : 539 Minimum Test error found - save the configuration ; : 539 | 247.858 142.417 0.0201308 0.0018179 43685.2 0; : 540 Minimum Test error found - save the configuration ; : 540 | 245.006 140.909 0.0201459 0.00181688 43646.7 0; : 541 Minimum,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:71158,error,error,71158,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 655 | 59.5776 45.1172 0.0204622 0.00186914 43026.9 0; : 656 Minimum Test error found - save the configuration ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48.9056 38.9634 0.0204345 0.00193878 43253.1 0; : 671 Minimum Test error found - save the configuration ; : 671 | 47.9479 38.4436 0.0207053 0.00182816 42379.4 0; : 672 | 47.2853 39.0804 0.0202162 0.00175216 43327.4 1; : 673 Minimum Test error found - save the configuration ; : 673 | 47.0153 38.3207 0.0201285 0.00181671 43687.7 0; : 674 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:85707,error,error,85707,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 656 | 58.5813 44.6814 0.020214 0.00181641 43484.1 0; : 657 Minimum Test error found - save the configuration ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48.9056 38.9634 0.0204345 0.00193878 43253.1 0; : 671 Minimum Test error found - save the configuration ; : 671 | 47.9479 38.4436 0.0207053 0.00182816 42379.4 0; : 672 | 47.2853 39.0804 0.0202162 0.00175216 43327.4 1; : 673 Minimum Test error found - save the configuration ; : 673 | 47.0153 38.3207 0.0201285 0.00181671 43687.7 0; : 674 Minimum Test error found - save the configuration ; : 674 | 46.5986 38.0788 0.0201224 0.00182147 43713.7 0; : 675 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:85821,error,error,85821,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability, ; : 657 | 58.1075 44.2582 0.0201216 0.0018139 43697.5 0; : 658 Minimum Test error found - save the configuration ; : 658 | 57.7428 43.9646 0.0201606 0.00184632 43681.8 0; : 659 Minimum Test error found - save the configuration ; : 659 | 56.5877 43.7448 0.0201275 0.00181379 43683.2 0; : 660 Minimum Test error found - save the configuration ; : 660 | 56.1107 42.9226 0.0200887 0.00181275 43773.3 0; : 661 Minimum Test error found - save the configuration ; : 661 | 55.5039 42.6809 0.0201245 0.00180935 43679.7 0; : 662 Minimum Test error found - save the configuration ; : 662 | 54.3572 42.2723 0.0202587 0.00183315 43417.9 0; : 663 Minimum Test error found - save the configuration ; : 663 | 53.566 41.7624 0.0203991 0.00186617 43166.5 0; : 664 Minimum Test error found - save the configuration ; : 664 | 52.9086 41.2393 0.0201899 0.00182999 43573.1 0; : 665 Minimum Test error found - save the configuration ; : 665 | 52.1886 40.6761 0.020181 0.00182542 43583.6 0; : 666 Minimum Test error found - save the configuration ; : 666 | 51.2956 40.6256 0.0201396 0.00182896 43690.5 0; : 667 Minimum Test error found - save the configuration ; : 667 | 50.7315 40.0752 0.0201193 0.00182284 43724.4 0; : 668 | 49.9429 40.0919 0.0200598 0.00176937 43738.7 1; : 669 Minimum Test error found - save the configuration ; : 669 | 49.7924 39.9525 0.02013 0.00182828 43711.6 0; : 670 Minimum Test error found - save the configuration ; : 670 | 48.9056 38.9634 0.0204345 0.00193878 43253.1 0; : 671 Minimum Test error found - save the configuration ; : 671 | 47.9479 38.4436 0.0207053 0.00182816 42379.4 0; : 672 | 47.2853 39.0804 0.0202162 0.00175216 43327.4 1; : 673 Minimum Test error found - save the configuration ; : 673 | 47.0153 38.3207 0.0201285 0.00181671 43687.7 0; : 674 Minimum Test error found - save the configuration ; : 674 | 46.5986 38.0788 0.0201224 0.00182147 43713.7 0; : 675 Minimum Test error found - save the configuration ; : 675 | 45.6663 37.2199 0.020138 0.00182969 43696.1 0; : 676 Minim,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:85934,error,error,85934,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability," ; Abstract Minimizer class, defining the interface for the various minimizer (like Minuit2, Minuit, GSL, etc..) in ROOT. ; Plug-in's exist in ROOT to be able to instantiate the derived classes without linking the library using the static function ROOT::Math::Factory::CreateMinimizer.; Here is the list of all possible minimizers and their respective methods (algorithms) that can be instantiated: The name shown below can be used to create them. More documentation can be found in the respective class. Minuit (class TMinuitMinimizer); Migrad (default); MigradImproved (Migrad with adding a method to improve minimization when ends-up in a local minimum, see par. 6.3 of Minuit tutorial on Function Minimization); Simplex; Minimize (a combination of Simplex + Migrad); Minimize; Scan; Seek. Minuit2 (class ROOT::Minuit2::Minuit2Minimizer); Migrad (default); Simplex; Minimize; Fumili (Fumili2); Scan. Fumili (class TFumiliMinimizer); GSLMultiMin (class ROOT::Math::GSLMinimizer) available when ROOT is built with mathmore support; BFGS2 (Default); BFGS; ConjugateFR; ConjugatePR; SteepestDescent. GSLMultiFit (class ROOT::Math::GSLNLMinimizer) available when ROOT is built mathmore support; GSLSimAn (class ROOT::Math::GSLSimAnMinimizer) available when ROOT is built with mathmore support; Genetic (class ROOT::Math::GeneticMinimizer); RMinimizer (class ROOT::Math::RMinimizer) available when ROOT is built with r support; BFGS (default); L-BFGS-S; Nelder-Mead; CG; and more methods, see the Details in the documentation of the function optimix of the optmix R package. The Minimizer class provides the interface to perform the minimization including; In addition to provide the API for function minimization (via ROOT::Math::Minimizer::Minimize) the Minimizer class provides:; the interface for setting the function to be minimized. The objective function passed to the Minimizer must implement the multi-dimensional generic interface ROOT::Math::IBaseFunctionMultiDim. If the function provides gr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html:1340,avail,available,1340,doc/master/classROOT_1_1Math_1_1Minimizer.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Minimizer.html,1,['avail'],['available']
Availability," ; Definition at line 17 of file TFumili.h. ◆ fNfcn. Int_t TFumili::fNfcn. private . Number of FCN calls;. ; Definition at line 15 of file TFumili.h. ◆ fNlimMul. Int_t TFumili::fNlimMul. private . fNlimMul - after fNlimMul successful iterations permits four-fold increasing of fPL ; Definition at line 21 of file TFumili.h. ◆ fNlog. Int_t TFumili::fNlog. private . Definition at line 14 of file TFumili.h. ◆ fNmaxIter. Int_t TFumili::fNmaxIter. private . fNmaxIter - maximum number of iterations ; Definition at line 22 of file TFumili.h. ◆ fNpar. Int_t TFumili::fNpar. private . fNpar - number of parameters ; Definition at line 19 of file TFumili.h. ◆ fNstepDec. Int_t TFumili::fNstepDec. private . fNstepDec - maximum number of step decreasing counter ; Definition at line 20 of file TFumili.h. ◆ fNumericDerivatives. Bool_t TFumili::fNumericDerivatives. private . Definition at line 32 of file TFumili.h. ◆ fParamError. Double_t* TFumili::fParamError. private . [fMaxParam] Parameter errors ; Definition at line 39 of file TFumili.h. ◆ fPL. Double_t* TFumili::fPL. private . [fMaxParam] Limits for parameters step. If <0, then parameter is fixed ; Definition at line 46 of file TFumili.h. ◆ fPL0. Double_t* TFumili::fPL0. private . [fMaxParam] Step initial bounds ; Definition at line 45 of file TFumili.h. ◆ fR. Double_t* TFumili::fR. private . [fMaxParam] Correlation factors ; Definition at line 52 of file TFumili.h. ◆ fRP. Double_t TFumili::fRP. private . Precision of fit ( machine zero on CDC 6000) quite old yeh? ; Definition at line 59 of file TFumili.h. ◆ fS. Double_t TFumili::fS. private . fS - objective function value (return) ; Definition at line 57 of file TFumili.h. ◆ fSumLog. Double_t* TFumili::fSumLog. private . [fNlog] ; Definition at line 40 of file TFumili.h. ◆ fWARN. Bool_t TFumili::fWARN. private . warnings ; Definition at line 29 of file TFumili.h. ◆ fZ. Double_t* TFumili::fZ. private . [fMaxParam2] Inverse fZ0 matrix - covariance matrix ; Definition at line 37 of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFumili.html:43000,error,errors,43000,doc/master/classTFumili.html,https://root.cern,https://root.cern/doc/master/classTFumili.html,1,['error'],['errors']
Availability," ; Definition at line 346 of file FitResult.cxx. ◆ SetModelFunction(). void ROOT::Fit::FitResult::SetModelFunction ; (; const std::shared_ptr< IModelFunction > & ; func). inlineprotected . Definition at line 338 of file FitResult.h. ◆ Status(). int ROOT::Fit::FitResult::Status ; (; ); const. inline . minimizer status code ; Definition at line 128 of file FitResult.h. ◆ Update(). bool ROOT::Fit::FitResult::Update ; (; const std::shared_ptr< ROOT::Math::Minimizer > & ; min, . const ROOT::Fit::FitConfig & ; fconfig, . bool ; isValid, . unsigned int ; ncalls = 0 . ). Update the fit result with a new minimization status To be run only if same fit is performed with same configuration Note that in this case MINOS is not re-run. ; If one wants to run also MINOS a new result must be created ; Definition at line 224 of file FitResult.cxx. ◆ UpperError(). double ROOT::Fit::FitResult::UpperError ; (; unsigned int ; i); const. upper Minos error. If Minos has not run for parameter i return the parabolic error ; Definition at line 339 of file FitResult.cxx. ◆ Value(). double ROOT::Fit::FitResult::Value ; (; unsigned int ; i); const. inline . parameter value by index ; Definition at line 172 of file FitResult.h. Friends And Related Symbol Documentation. ◆ Fitter. friend class Fitter. friend . Definition at line 340 of file FitResult.h. Member Data Documentation. ◆ fBoundParams. std::map<unsigned int, unsigned int> ROOT::Fit::FitResult::fBoundParams. protected . list of limited parameters ; Definition at line 358 of file FitResult.h. ◆ fChi2. double ROOT::Fit::FitResult::fChi2. protected . fit chi2 value (different than fval in case of chi2 fits) ; Definition at line 352 of file FitResult.h. ◆ fCovMatrix. std::vector<double> ROOT::Fit::FitResult::fCovMatrix. protected . covariance matrix (size is npar*(npar+1)/2) where npar is total parameters ; Definition at line 362 of file FitResult.h. ◆ fCovStatus. int ROOT::Fit::FitResult::fCovStatus. protected . covariance matrix status code ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitResult.html:24457,error,error,24457,doc/master/classROOT_1_1Fit_1_1FitResult.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1FitResult.html,1,['error'],['error']
Availability," ; Definition at line 612 of file TSVDUnfold.cxx. ◆ GetCurvature(). Double_t TSVDUnfold::GetCurvature ; (; const TVectorD & ; vec, . const TMatrixD & ; curv . ). staticprivate . Compute curvature of vector. ; Definition at line 712 of file TSVDUnfold.cxx. ◆ GetD(). TH1D * TSVDUnfold::GetD ; (; ); const. Returns d vector (for choosing appropriate regularisation) ; Definition at line 576 of file TSVDUnfold.cxx. ◆ GetKReg(). Int_t TSVDUnfold::GetKReg ; (; ); const. inline . Definition at line 86 of file TSVDUnfold.h. ◆ GetSV(). TH1D * TSVDUnfold::GetSV ; (; ); const. Returns singular values vector. ; Definition at line 587 of file TSVDUnfold.cxx. ◆ GetUnfoldCovMatrix(). TH2D * TSVDUnfold::GetUnfoldCovMatrix ; (; const TH2D * ; cov, . Int_t ; ntoys, . Int_t ; seed = 1 . ). Determine for given input error matrix covariance matrix of unfolded spectrum from toy simulation given the passed covariance matrix on measured spectrum ""cov"" - covariance matrix on the measured spectrum, to be propagated ""ntoys"" - number of pseudo experiments used for the propagation ""seed"" - seed for pseudo experiments Note that this covariance matrix will contain effects of forced normalisation if spectrum is normalised to unit area. ; Definition at line 405 of file TSVDUnfold.cxx. ◆ GetXinv(). TH2D * TSVDUnfold::GetXinv ; (; ); const. Returns the computed inverse of the covariance matrix. ; Definition at line 604 of file TSVDUnfold.cxx. ◆ GetXtau(). TH2D * TSVDUnfold::GetXtau ; (; ); const. Returns the computed regularized covariance matrix corresponding to total uncertainties on measured spectrum as passed in the constructor. ; Note that this covariance matrix will not contain the effects of forced normalization if spectrum is normalized to unit area. ; Definition at line 596 of file TSVDUnfold.cxx. ◆ H2M(). void TSVDUnfold::H2M ; (; const TH2D * ; histo, . TMatrixD & ; mat . ). staticprivate . Fill 2D histogram into matrix. ; Definition at line 644 of file TSVDUnfold.cxx. ◆ H2V(). void TSVDUnfo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSVDUnfold.html:21289,error,error,21289,doc/master/classTSVDUnfold.html,https://root.cern,https://root.cern/doc/master/classTSVDUnfold.html,1,['error'],['error']
Availability," ; Implements TVirtualGeoPainter.; Definition at line 2007 of file TGeoPainter.cxx. ◆ SetNsegments(). void TGeoPainter::SetNsegments ; (; Int_t ; nseg = 20). overridevirtual . Set number of segments to approximate circles. ; Implements TVirtualGeoPainter.; Definition at line 1992 of file TGeoPainter.cxx. ◆ SetRaytracing(). void TGeoPainter::SetRaytracing ; (; Bool_t ; flag = kTRUE). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 171 of file TGeoPainter.h. ◆ SetTopVisible(). void TGeoPainter::SetTopVisible ; (; Bool_t ; vis = kTRUE). overridevirtual . Set top geometry volume as visible. ; Implements TVirtualGeoPainter.; Definition at line 2050 of file TGeoPainter.cxx. ◆ SetTopVolume(). void TGeoPainter::SetTopVolume ; (; TGeoVolume * ; vol). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 173 of file TGeoPainter.h. ◆ SetVisLevel(). void TGeoPainter::SetVisLevel ; (; Int_t ; level = 3). overridevirtual . Set default level down to which visualization is performed. ; Implements TVirtualGeoPainter.; Definition at line 2024 of file TGeoPainter.cxx. ◆ SetVisOption(). void TGeoPainter::SetVisOption ; (; Int_t ; option = 0). overridevirtual . Set drawing mode : . option=0 (default) all nodes drawn down to vislevel; option=1 leaves and nodes at vislevel drawn; option=2 path is drawn . Implements TVirtualGeoPainter.; Definition at line 2064 of file TGeoPainter.cxx. ◆ ShapeDistancetoPrimitive(). Int_t TGeoPainter::ShapeDistancetoPrimitive ; (; const TGeoShape * ; shape, . Int_t ; numpoints, . Int_t ; px, . Int_t ; py . ); const. overridevirtual . Returns distance between point px,py on the pad an a shape. ; Implements TVirtualGeoPainter.; Definition at line 2105 of file TGeoPainter.cxx. ◆ Test(). void TGeoPainter::Test ; (; Int_t ; npoints, . Option_t * ; option . ). overridevirtual . Check time of finding ""Where am I"" for n points. ; Implements TVirtualGeoPainter.; Definition at line 2170 of file TGeoPainter.cxx. ◆ TestOve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPainter.html:41152,down,down,41152,doc/master/classTGeoPainter.html,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html,1,['down'],['down']
Availability," ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome About ROOT. ROOT is a framework for data processing, born at CERN, at the heart of the research on high-energy physics. Every day, thousands of physicists use ROOT applications to analyze their data or to perform simulations. With ROOT you can:. Save data You can save your data (and any C++ object) in a compressed binary form in a ROOT file. The object format is also saved in the same file: the ROOT files are self-descriptive. Even in the case the source files describing the data model are not available, the information contained in a ROOT file is be always readable. ROOT provides a data structure, the tree, that is extremely powerful for fast access of huge amounts of data - orders of magnitude faster than accessing a normal file.; Access data Data saved into one or several ROOT files can be accessed from your PC, from the web and from large-scale file delivery systems used e.g. in the GRID. ROOT trees spread over several files can be chained and accessed as a unique object, allowing for loops over huge amounts of data.; Mine data Powerful mathematical and statistical tools are provided to operate on your data. The full power of a C++ application and of parallel processing is available for any kind of data manipulation. Data can also be generated following any statistical distribution and modeled, making it possible to simulate complex systems.; Publish results Results can be displayed with histograms, scatter plots, fitting functions. ROOT graphics may be adjusted real-time b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/about-root.html:2344,avail,available,2344,d/about-root.html,https://root.cern,https://root.cern/d/about-root.html,1,['avail'],['available']
Availability," ; Reimplemented from TFile.; Definition at line 247 of file TNetFile.cxx. ◆ Matches(). Bool_t TNetFile::Matches ; (; const char * ; url). overridevirtual . Return kTRUE if 'url' matches the coordinates of this file. ; Check the full URL, including port and FQDN. ; Reimplemented from TFile.; Definition at line 761 of file TNetFile.cxx. ◆ operator=(). TNetFile & TNetFile::operator= ; (; const TNetFile & ; ). protected . ◆ Print(). void TNetFile::Print ; (; Option_t * ; option); const. overrideprotectedvirtual . Print some info about the net file. ; Reimplemented from TFile.; Definition at line 255 of file TNetFile.cxx. ◆ PrintError(). void TNetFile::PrintError ; (; const char * ; where, . Int_t ; err . ). protected . Print error string depending on error code. ; Definition at line 270 of file TNetFile.cxx. ◆ ReadBuffer() [1/2]. Bool_t TNetFile::ReadBuffer ; (; char * ; buf, . Int_t ; len . ). overridevirtual . Read specified byte range from remote file via rootd daemon. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 300 of file TNetFile.cxx. ◆ ReadBuffer() [2/2]. Bool_t TNetFile::ReadBuffer ; (; char * ; buf, . Long64_t ; pos, . Int_t ; len . ). overridevirtual . Read specified byte range from remote file via rootd daemon. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 373 of file TNetFile.cxx. ◆ ReadBuffers(). Bool_t TNetFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). overridevirtual . Read a list of buffers given in pos[] and len[] and return it in a single buffer. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 384 of file TNetFile.cxx. ◆ Recv(). Int_t TNetFile::Recv ; (; Int_t & ; status, . EMessageTypes & ; kind . ). protected . Return status from rootd server and message kind. ; Returns -1 in case of error otherwise 8 (sizeof 2 words, status and kind). ; Definition at line 546 of file TNetFile.cxx. ◆ ReOpen(). Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTNetFile.html:49359,error,error,49359,doc/master/classTNetFile.html,https://root.cern,https://root.cern/doc/master/classTNetFile.html,1,['error'],['error']
Availability," ; Reimplemented from TSystem.; Definition at line 1425 of file TWinNTSystem.cxx. ◆ ResetSignals(). void TWinNTSystem::ResetSignals ; (; ). overridevirtual . Reset signals handlers to previous behaviour. ; Reimplemented from TSystem.; Definition at line 1433 of file TWinNTSystem.cxx. ◆ Select() [1/2]. Int_t TWinNTSystem::Select ; (; TFileHandler * ; h, . Long_t ; to . ). overridevirtual . Select on the file descriptor related to file handler h. ; The timeout to is in millisec. ; Reimplemented from TSystem.; Definition at line 4628 of file TWinNTSystem.cxx. ◆ Select() [2/2]. Int_t TWinNTSystem::Select ; (; TList * ; active, . Long_t ; timeout . ). overridevirtual . Select on file descriptors. The timeout to is in millisec. ; Reimplemented from TSystem.; Definition at line 4591 of file TWinNTSystem.cxx. ◆ SendBuf(). int TWinNTSystem::SendBuf ; (; int ; sock, . const void * ; buf, . int ; length . ). overridevirtual . Send a buffer headed by a length indicator. ; Returns length of sent buffer or -1 in case of error. ; Reimplemented from TSystem.; Definition at line 4945 of file TWinNTSystem.cxx. ◆ SendRaw(). int TWinNTSystem::SendRaw ; (; int ; sock, . const void * ; buf, . int ; length, . int ; opt . ). overridevirtual . Send exactly length bytes from buffer. ; Use opt to send out-of-band data (see TSocket). Returns the number of bytes sent or -1 in case of error. Returns -4 in case of kNoBlock and errno == EWOULDBLOCK. Returns -5 if pipe broken or reset by peer (EPIPE || ECONNRESET). ; Reimplemented from TSystem.; Definition at line 5010 of file TWinNTSystem.cxx. ◆ SetDynamicPath(). void TWinNTSystem::SetDynamicPath ; (; const char * ; path). overridevirtual . Set the dynamic path to a new value. ; If the value of 'path' is zero, the dynamic path is reset to its default value. ; Reimplemented from TSystem.; Definition at line 4100 of file TWinNTSystem.cxx. ◆ Setenv(). void TWinNTSystem::Setenv ; (; const char * ; name, . const char * ; value . ). overridevirtual . Se",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTWinNTSystem.html:69028,error,error,69028,doc/master/classTWinNTSystem.html,https://root.cern,https://root.cern/doc/master/classTWinNTSystem.html,1,['error'],['error']
Availability," ; Returns in kind the message type. Returns length of received string+4 (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented in TServerSocket, TPSocket, and TSSLSocket.; Definition at line 756 of file TSocket.cxx. ◆ Recv() [3/4]. Int_t TSocket::Recv ; (; Int_t & ; status, . Int_t & ; kind . ). virtual . Receives a status and a message type. ; Returns length of received integers, 2*sizeof(Int_t) (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read). ; Reimplemented in TServerSocket, TPSocket, and TSSLSocket.; Definition at line 789 of file TSocket.cxx. ◆ Recv() [4/4]. Int_t TSocket::Recv ; (; TMessage *& ; mess). virtual . Receive a TMessage object. ; The user must delete the TMessage object. Returns length of message in bytes (can be 0 if other side of connection is closed) or -1 in case of error or -4 in case a non-blocking socket would block (i.e. there is nothing to be read) or -5 if pipe broken or reset by peer (EPIPE || ECONNRESET). In those case mess == 0. ; Reimplemented in TServerSocket, TPSocket, and TSSLSocket.; Definition at line 818 of file TSocket.cxx. ◆ RecvProcessIDs(). Bool_t TSocket::RecvProcessIDs ; (; TMessage * ; mess). protected . Receive a message containing process ids. ; In case the message contains process ids they are imported, the message will be deleted and the method returns kTRUE. ; Definition at line 975 of file TSocket.cxx. ◆ RecvRaw(). Int_t TSocket::RecvRaw ; (; void * ; buffer, . Int_t ; length, . ESendRecvOptions ; opt = kDefault . ). virtual . Receive a raw buffer of specified length bytes. ; Using option kPeek one can peek at incoming data. Returns number of received bytes. Returns -1 in case of error. In case of opt == kOob: -2 means EWOULDBLOCK and -3 EINVAL. In case of non-blocking mode (kNoBlock) -4 means EWO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSocket.html:32718,error,error,32718,doc/master/classTSocket.html,https://root.cern,https://root.cern/doc/master/classTSocket.html,1,['error'],['error']
Availability," ; RooArgList*_randomPars! List of floating parameters with most recent random perturbation applied; Int_t_statusMINUIT status code; TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooFitResult(const char* name = 0, const char* title = 0); Constructor with name and title. RooFitResult(const RooFitResult& other); Copy constructor. ~RooFitResult(); Destructor. void setConstParList(const RooArgList& list); Fill the list of constant parameters. void setInitParList(const RooArgList& list); Fill the list of initial values of the floating parameters. void setFinalParList(const RooArgList& list); Fill the list of final values of the floating parameters. RooPlot * plotOn(RooPlot *frame, const char *parName1, const char *parName2,			 const char *options); Add objects to a 2D plot that represent the fit results for the; two named parameters. The input frame with the objects added is; returned, or zero in case of an error. Which objects are added; are determined by the options string which should be a concatenation; of the following (not case sensitive):. M - a marker at the best fit result; E - an error ellipse calculated at 1-sigma using the error matrix at the minimum; 1 - the 1-sigma error bar for parameter 1; 2 - the 1-sigma error bar for parameter 2; B - the bounding box for the error ellipse; H - a line and horizontal axis for reading off the correlation coefficient; V - a line and vertical axis for reading off the correlation coefficient; A - draw axes for reading off the correlation coefficients with the H or V options. You can change the attributes of objects in the returned RooPlot using the; various RooPlot::getAttXxx(name) member functions, e.g. plot->getAttLine(""contour"")->SetLineStyle(kDashed);. Use plot->Print() for a list of all objects and their names (unfortunately most; of the ROOT builtin graphics objects like TLine are unnamed). Drag the lef",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooFitResult.html:10701,error,error,10701,root/html526/RooFitResult.html,https://root.cern,https://root.cern/root/html526/RooFitResult.html,1,['error'],['error']
Availability," ; The projection is always of the type TH2D. if option ""E"" is specified the errors of the projected histogram are computed and set to be equal to the errors of the profile. Option ""E"" is defined as the default one in the header file.; if option """" is specified the histogram errors are simply the sqrt of its content; if option ""B"" is specified, the content of bin of the returned histogram will be equal to the GetBinEntries(bin) of the profile,; if option ""C=E"" the bin contents of the projection are set to the bin errors of the profile; if option ""W"" is specified the bin content of the projected histogram is set to the product of the bin content of the profile and the entries. With this option the returned histogram will be equivalent to the one obtained by filling directly a TH2D using the 3-rd value as a weight. This option makes sense only for profile filled with all weights =1. When the profile is weighted (filled with weights different than 1) the bin error of the projected histogram (obtained using this option ""W"") cannot be correctly computed from the information stored in the profile. In that case the obtained histogram contains as bin error square the weighted sum of the square of the profiled observable (TProfile2D::fSumw2[bin] ) . Definition at line 1287 of file TProfile2D.cxx. ◆ PutStats(). void TProfile2D::PutStats ; (; Double_t * ; stats). overridevirtual . Replace current statistics with the values in array stats. ; Reimplemented from TH2.; Definition at line 1474 of file TProfile2D.cxx. ◆ Rebin2D(). TProfile2D * TProfile2D::Rebin2D ; (; Int_t ; nxgroup = 2, . Int_t ; nygroup = 2, . const char * ; newname = """" . ). overridevirtual . Rebin this histogram grouping nxgroup/nygroup bins along the xaxis/yaxis together. ; if newname is not blank a new profile hnew is created. else the current histogram is modified (default) The parameter nxgroup/nygroup indicate how many bins along the xaxis/yaxis of this have to be merged into one bin of hnew If the original",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:97169,error,error,97169,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['error'],['error']
Availability," ; Use opt to receive out-of-band data or to have a peek at what is in the buffer (see TSocket). ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 2399 of file TSystem.cxx. ◆ RedirectOutput(). Int_t TSystem::RedirectOutput ; (; const char * ; name, . const char * ; mode = ""a"", . RedirectHandle_t * ; h = nullptr . ). virtual . Redirect standard output (stdout, stderr) to the specified file. ; If the file argument is 0 the output is set again to stderr, stdout. The second argument specifies whether the output should be added to the file (""a"", default) or the file be truncated before (""w""). The implementations of this function save internally the current state into a static structure.; The call can be made reentrant by specifying the opaque structure pointed by 'h', which is filled with the relevant information. The handle 'h' obtained on the first call must then be used in any subsequent call, included ShowOutput, to display the redirected output. Returns 0 on success, -1 in case of error. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 1715 of file TSystem.cxx. ◆ RemoveFileHandler(). TFileHandler * TSystem::RemoveFileHandler ; (; TFileHandler * ; h). virtual . Remove a file handler from the list of file handlers. ; Returns the handler or 0 if the handler was not in the list of file handlers. ; Reimplemented in TMacOSXSystem, TUnixSystem, and TWinNTSystem.; Definition at line 564 of file TSystem.cxx. ◆ RemoveOnExit(). void TSystem::RemoveOnExit ; (; TObject * ; obj). Objects that should be deleted on exit of the OS interface. ; Definition at line 292 of file TSystem.cxx. ◆ RemoveSignalHandler(). TSignalHandler * TSystem::RemoveSignalHandler ; (; TSignalHandler * ; h). virtual . Remove a signal handler from list of signal handlers. ; Returns the handler or 0 if the handler was not in the list of signal handlers. ; Reimplemented in TUnixSystem, and TWinNTSystem.; Definition at line 542 of file TSystem.cxx. ◆ RemoveStdExceptionHan",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSystem.html:78824,error,error,78824,doc/master/classTSystem.html,https://root.cern,https://root.cern/doc/master/classTSystem.html,1,['error'],['error']
Availability," ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation » Courses Introductory Tutorials. Overview; The goal of this tutorial session is to learn how to read a tree from a ROOT file, extract some data from it, display a histogram and then fit it.;  ; Information about the ROOT classes can be found on the ROOT reference guide, and there is also a web based documentation and the Root primer and other manuals available to download.; . Meet a TTree ›. Navigate through this book; Meet a TTree; Accessing a TTree With a TBrowser; Using TTree::Draw() to access a TTree; TTree and Its Data; Using a Macro to Read a TTree; Histogramming; Fit Panel; Compiling Your Code (also known as ACLiC); Accessing a TTree With a TSelector; Histogramming in a Selector; Using a TSelector with PROOF; The End. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jen",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/introductory-tutorials-1.html:2227,avail,available,2227,d/introductory-tutorials-1.html,https://root.cern,https://root.cern/d/introductory-tutorials-1.html,4,"['avail', 'down']","['available', 'download']"
Availability," ; return of()->asCATLV(of()->_args[idx].c_str()) ; }. RooAbsCategory& as_CATFUNC(UInt_t idx); { checkIndex(idx) ; return of()->asCATFUNC(of()->_args[idx].c_str()) ; }. RooArgSet as_SET(UInt_t idx); { checkIndex(idx) ; return of()->asSET(of()->_args[idx].c_str()) ; }. RooArgList as_LIST(UInt_t idx); { checkIndex(idx) ; return of()->asLIST(of()->_args[idx].c_str()) ; }. RooAbsData& as_DATA(UInt_t idx); { checkIndex(idx) ; return of()->asDATA(of()->_args[idx].c_str()) ; }. RooDataHist& as_DHIST(UInt_t idx); { checkIndex(idx) ; return of()->asDHIST(of()->_args[idx].c_str()) ; }. RooDataSet& as_DSET(UInt_t idx); { checkIndex(idx) ; return of()->asDSET(of()->_args[idx].c_str()) ; }. TObject& as_OBJ(UInt_t idx); { checkIndex(idx) ; return of()->asOBJ(of()->_args[idx].c_str()) ; }. const char* as_STRING(UInt_t idx); { checkIndex(idx) ; return of()->asSTRING(of()->_args[idx].c_str()) ; }. Int_t as_INT(UInt_t idx); { checkIndex(idx) ; return of()->asINT(of()->_args[idx].c_str()) ; }. Double_t as_DOUBLE(UInt_t idx); { checkIndex(idx) ; return of()->asDOUBLE(of()->_args[idx].c_str()) ; }. Int_t as_INT(UInt_t idx, Int_t defVal); { checkIndex(idx) ; if (idx>of()->_args.size()-1) return defVal ; return of()->asINT(of()->_args[idx].c_str()) ; }. Double_t as_DOUBLE(UInt_t idx, Double_t defVal); { checkIndex(idx) ; if (idx>of()->_args.size()-1) return defVal ; return of()->asDOUBLE(of()->_args[idx].c_str()) ; }. void logError(); { _errorCount++ ; }. const char* autoClassNamePostFix() const; { return _autoClassPostFix.c_str() ; }. void setAutoClassNamePostFix(const char* pfix); { _autoClassPostFix = pfix ; }. std::map<std::string,IFace*>& hooks(); Hooks for other tools. void clearError(); { _errorCount = 0 ; }. Int_t errorCount(); { return _errorCount ; }. » Last changed: Mon Jul 4 15:22:49 2011 » Last generated: 2011-07-04 15:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooFactoryWSTool.html:25034,error,errorCount,25034,root/html530/RooFactoryWSTool.html,https://root.cern,https://root.cern/root/html530/RooFactoryWSTool.html,1,['error'],['errorCount']
Availability," ; return of()->asCATLV(of()->_args[idx].c_str()) ; }. RooAbsCategory& as_CATFUNC(UInt_t idx); { checkIndex(idx) ; return of()->asCATFUNC(of()->_args[idx].c_str()) ; }. RooArgSet as_SET(UInt_t idx); { checkIndex(idx) ; return of()->asSET(of()->_args[idx].c_str()) ; }. RooArgList as_LIST(UInt_t idx); { checkIndex(idx) ; return of()->asLIST(of()->_args[idx].c_str()) ; }. RooAbsData& as_DATA(UInt_t idx); { checkIndex(idx) ; return of()->asDATA(of()->_args[idx].c_str()) ; }. RooDataHist& as_DHIST(UInt_t idx); { checkIndex(idx) ; return of()->asDHIST(of()->_args[idx].c_str()) ; }. RooDataSet& as_DSET(UInt_t idx); { checkIndex(idx) ; return of()->asDSET(of()->_args[idx].c_str()) ; }. TObject& as_OBJ(UInt_t idx); { checkIndex(idx) ; return of()->asOBJ(of()->_args[idx].c_str()) ; }. const char* as_STRING(UInt_t idx); { checkIndex(idx) ; return of()->asSTRING(of()->_args[idx].c_str()) ; }. Int_t as_INT(UInt_t idx); { checkIndex(idx) ; return of()->asINT(of()->_args[idx].c_str()) ; }. Double_t as_DOUBLE(UInt_t idx); { checkIndex(idx) ; return of()->asDOUBLE(of()->_args[idx].c_str()) ; }. Int_t as_INT(UInt_t idx, Int_t defVal); { checkIndex(idx) ; if (idx>of()->_args.size()-1) return defVal ; return of()->asINT(of()->_args[idx].c_str()) ; }. Double_t as_DOUBLE(UInt_t idx, Double_t defVal); { checkIndex(idx) ; if (idx>of()->_args.size()-1) return defVal ; return of()->asDOUBLE(of()->_args[idx].c_str()) ; }. void logError(); { _errorCount++ ; }. const char* autoClassNamePostFix() const; { return _autoClassPostFix.c_str() ; }. void setAutoClassNamePostFix(const char* pfix); { _autoClassPostFix = pfix ; }. std::map<std::string,IFace*>& hooks(); Hooks for other tools. void clearError(); { _errorCount = 0 ; }. Int_t errorCount(); { return _errorCount ; }. » Last changed: Thu Nov 3 20:08:07 2011 » Last generated: 2011-11-03 20:08; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooFactoryWSTool.html:25034,error,errorCount,25034,root/html532/RooFactoryWSTool.html,https://root.cern,https://root.cern/root/html532/RooFactoryWSTool.html,2,['error'],['errorCount']
Availability," ; return of()->asCATLV(of()->_args[idx].c_str()) ; }. RooAbsCategory& as_CATFUNC(UInt_t idx); { checkIndex(idx) ; return of()->asCATFUNC(of()->_args[idx].c_str()) ; }. RooArgSet as_SET(UInt_t idx); { checkIndex(idx) ; return of()->asSET(of()->_args[idx].c_str()) ; }. RooArgList as_LIST(UInt_t idx); { checkIndex(idx) ; return of()->asLIST(of()->_args[idx].c_str()) ; }. RooAbsData& as_DATA(UInt_t idx); { checkIndex(idx) ; return of()->asDATA(of()->_args[idx].c_str()) ; }. RooDataHist& as_DHIST(UInt_t idx); { checkIndex(idx) ; return of()->asDHIST(of()->_args[idx].c_str()) ; }. RooDataSet& as_DSET(UInt_t idx); { checkIndex(idx) ; return of()->asDSET(of()->_args[idx].c_str()) ; }. TObject& as_OBJ(UInt_t idx); { checkIndex(idx) ; return of()->asOBJ(of()->_args[idx].c_str()) ; }. const char* as_STRING(UInt_t idx); { checkIndex(idx) ; return of()->asSTRING(of()->_args[idx].c_str()) ; }. Int_t as_INT(UInt_t idx); { checkIndex(idx) ; return of()->asINT(of()->_args[idx].c_str()) ; }. Double_t as_DOUBLE(UInt_t idx); { checkIndex(idx) ; return of()->asDOUBLE(of()->_args[idx].c_str()) ; }. Int_t as_INT(UInt_t idx, Int_t defVal); { checkIndex(idx) ; if (idx>of()->_args.size()-1) return defVal ; return of()->asINT(of()->_args[idx].c_str()) ; }. Double_t as_DOUBLE(UInt_t idx, Double_t defVal); { checkIndex(idx) ; if (idx>of()->_args.size()-1) return defVal ; return of()->asDOUBLE(of()->_args[idx].c_str()) ; }. void logError(); { _errorCount++ ; }. const char* autoClassNamePostFix() const; { return _autoClassPostFix.c_str() ; }. void setAutoClassNamePostFix(const char* pfix); { _autoClassPostFix = pfix ; }. std::map<std::string,IFace*>& hooks(); Hooks for other tools. void clearError(); { _errorCount = 0 ; }. Int_t errorCount(); { return _errorCount ; }. » Last changed: Tue Jun 2 15:30:48 2015 » Last generated: 2015-06-02 15:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooFactoryWSTool.html:26015,error,errorCount,26015,root/html604/RooFactoryWSTool.html,https://root.cern,https://root.cern/root/html604/RooFactoryWSTool.html,2,['error'],['errorCount']
Availability," ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTNode::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTNode::DrawOnly(Option_t* option = """"); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTNode::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TList*TNode::GetListOfNodes() const; virtual TRotMatrix*TNode::GetMatrix() const; virtual const char*TNamed::GetName() const; virtual TNode*TNode::GetNode(const char* name) const; virtual char*TNode::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TNode::GetOpt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TNodeDiv.html:1921,error,error,1921,root/html528/TNodeDiv.html,https://root.cern,https://root.cern/root/html528/TNodeDiv.html,6,['error'],['error']
Availability," ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTNode::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTNode::DrawOnly(Option_t* option = """"); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTNode::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TList*TNode::GetListOfNodes() const; virtual TRotMatrix*TNode::GetMatrix() const; virtual const char*TNamed::GetName() const; virtual TNode*TNode::GetNode(const char* name) const; virtual char*TNode::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const Option_t*TNode::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNodeDiv.html:1656,error,error,1656,root/html602/TNodeDiv.html,https://root.cern,https://root.cern/root/html602/TNodeDiv.html,4,['error'],['error']
Availability," ; virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTPave::ConvertNDCtoPad(); virtual voidTPave::Copy(TObject& pave) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteText(); Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTPave::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTPaveText::Draw(Option_t* option = """"); virtual TBox*TBox::DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTPaveText::DrawFile(const char* filename, Option_t* option = """"); virtual voidTPave::DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize = 4, Option_t* option = ""br""); virtual voidTObject::Dump() constMENU ; virtual voidEditText(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTPave::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tTPave::GetBorderSize() const; Double_tTPave::GetCornerRadius() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*GetFitFormat() const; virtual const char*TObject::GetIconName() const; const char*TPaveText::GetLabel() const; virtual TText*TPaveText::GetLine(Int_t number) const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::Get",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPaveStats.html:6577,Error,Error,6577,root/html532/TPaveStats.html,https://root.cern,https://root.cern/root/html532/TPaveStats.html,1,['Error'],['Error']
Availability," ; virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTPave::ConvertNDCtoPad(); virtual voidTPave::Copy(TObject& pave) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteText(); Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTPave::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTPaveText::Draw(Option_t* option = """"); virtual TBox*TBox::DrawBox(Double_t x1, Double_t y1, Double_t x2, Double_t y2); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTPaveText::DrawFile(const char* filename, Option_t* option = """"); virtual voidTPave::DrawPave(Double_t x1, Double_t y1, Double_t x2, Double_t y2, Int_t bordersize = 4, Option_t* option = ""br""); virtual voidTObject::Dump() constMENU ; virtual voidEditText(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTPave::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Rectangle_tTBox::GetBBox(); virtual TPointTBox::GetBBoxCenter(); Int_tTPave::GetBorderSize() const; Double_tTPave::GetCornerRadius() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*GetFitFormat() const; virtual const char*TObject::GetIconName() const; const char*TPaveText::GetLabel() const; virtual TText*TPaveText::GetLine(Int_t number) const; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TPaveStats.html:7488,Error,Error,7488,root/html534/TPaveStats.html,https://root.cern,https://root.cern/root/html534/TPaveStats.html,3,['Error'],['Error']
Availability," ;  . Protected Member Functions;  TGSelectedPicture (const TGSelectedPicture &gp);  ; TGSelectedPicture & operator= (const TGSelectedPicture &gp);  ;  Protected Member Functions inherited from TGPicture;  TGPicture (const char *name, Bool_t scaled=kFALSE);  ;  TGPicture (const char *name, Pixmap_t pxmap, Pixmap_t mask=0);  ctor. Important: both pixmaps pxmap and mask must be unique (not shared) ;  ; void Draw (Option_t *="""") override;  Default Draw method for all objects. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Static Protected Member Functions; static TGGC & GetSelectedGC ();  Return selection graphics context in use. ;  . Protected Attributes; const TGClient * fClient;  ;  Protected Attributes inherited from TGPicture; PictureAttributes_t fAttributes;  picture attributes ;  ; Pixmap_t fMask;  picture mask pixmap ;  ; TString fName;  name of picture ;  ; Pixmap_t fPic;  picture pixmap ;  ; Bool_t fScaled;  kTRUE if picture is scaled ;  ;  Protected Attributes inherited from TRefCnt; UInt_t fRefs;  . Static Protected Attributes; static TGGC * fgSelectedGC = nullptr;  . Additional Inherited Members;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Types inherited from TRefCnt; enum  EReferenceFlag { kStaticI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGSelectedPicture.html:11003,mask,mask,11003,doc/master/classTGSelectedPicture.html,https://root.cern,https://root.cern/doc/master/classTGSelectedPicture.html,1,['mask'],['mask']
Availability," ;  ; Bool_t CtorAllocate ();  In constructors set fNpoints than call this method. ;  ; Double_t ** ExpandAndCopy (Int_t size, Int_t iend);  if size > fMaxSize allocate new arrays of 2*size points and copy iend first points. ;  ; TString SaveArray (std::ostream &out, const char *suffix, Int_t frameNumber, Double_t *arr);  Save array as C++ code Returns name of created array. ;  ; void SaveHistogramAndFunctions (std::ostream &out, const char *varname, Int_t &frameNumber, Option_t *option);  Save histogram and list of functions of TGraph as C++ statement Used in all TGraph-derived classes. ;  ; Double_t ** ShrinkAndCopy (Int_t size, Int_t iend);  if size*2 <= fMaxSize allocate new arrays of size points, copy points [0,oend). ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; std::vector< TAttFill > fAttFill;  The AttFill attributes of the different errors. ;  ; std::vector< TAttLine > fAttLine;  The AttLine attributes of the different errors. ;  ; Double_t * fExH;  [fNpoints] array of X high errors ;  ; Double_t * fExL;  [fNpoints] array of X low errors ;  ; std::vector< TArrayD > fEyH;  Two dimensional array of Y high errors. ;  ; Double_t * fEyHSum = nullptr;  ! Array of summed Y high errors for fitting ;  ; std::vector< TArrayD > fEyL;  Two dimensional array of Y low errors. ;  ; Double_t * fEyLSum = nullptr;  ! Array of summed Y low errors for fitting ;  ; Int_t fNYErrors;  The amount of different y-errors. ;  ; Int_t fSumErrorsMode;  How y errors are summed: kOnlyFirst = Only First; kSquareSum = Squared Sum; kSum = Absolute Addition. ;  ;  Protected Attributes inherited from TGraph; TList * fFunctions;  Pointer to list of functions (fits and user) ;  ; TH1F * fHistogram;  Pointer to histogram used for drawing axis. ;  ; Double_t fMaximum;  Maximum value for plotting along y. ;  ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:42210,error,errors,42210,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['error'],['errors']
Availability," ;  ; Int_t fLaunchDialog;  flag used for launching color dialog ;  ; const TGWindow * fMsgWindow;  window handling container messages ;  ;  Protected Attributes inherited from TGCompositeFrame; Bool_t fLayoutBroken;  no layout manager is used ;  ; TGLayoutManager * fLayoutManager;  layout manager ;  ; TList * fList;  container of frame elements ;  ; Bool_t fMapSubwindows;  kTRUE - map subwindows ;  ; Int_t fMustCleanup;  cleanup mode (see EFrameCleanup) ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  . Private Member Functions;  TGColorPopup (const TGColorPopup &)=delete;  ; TGColorPopup & operator= (const TGColorPopup &)=delete;  . Additional Inherited Members;  Public Types inherited from TGWindow; enum  EEditMode { ;   kEditEnable = 0; , kEditDisable = (1ULL << ( ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGColorPopup.html:26025,mask,mask,26025,doc/master/classTGColorPopup.html,https://root.cern,https://root.cern/doc/master/classTGColorPopup.html,1,['mask'],['mask']
Availability," ;  ; TProfile * ProfileX (const char *name=""_pfx"", Int_t firstybin=1, Int_t lastybin=-1, Option_t *option="""") const;  Project a 2-D histogram into a profile histogram along X. ;  ; TProfile * ProfileY (const char *name=""_pfy"", Int_t firstxbin=1, Int_t lastxbin=-1, Option_t *option="""") const;  Project a 2-D histogram into a profile histogram along Y. ;  ; TH1D * ProjectionX (const char *name=""_px"", Int_t firstybin=0, Int_t lastybin=-1, Option_t *option="""") const;  Project a 2-D histogram into a 1-D histogram along X. ;  ; TH1D * ProjectionY (const char *name=""_py"", Int_t firstxbin=0, Int_t lastxbin=-1, Option_t *option="""") const;  Project a 2-D histogram into a 1-D histogram along Y. ;  ; TH1D * QuantilesX (Double_t prob=0.5, const char *name=""_qx"") const;  Compute the X distribution of quantiles in the other variable Y name is the name of the returned histogram prob is the probability content for the quantile (0.5 is the default for the median) An approximate error for the quantile is computed assuming that the distribution in the other variable is normal. ;  ; TH1D * QuantilesY (Double_t prob=0.5, const char *name=""_qy"") const;  Compute the Y distribution of quantiles in the other variable X name is the name of the returned histogram prob is the probability content for the quantile (0.5 is the default for the median) An approximate error for the quantile is computed assuming that the distribution in the other variable is normal. ;  ; TH2 * Rebin (Int_t ngroup=2, const char *newname="""", const Double_t *xbins=nullptr) override;  Override TH1::Rebin as TH2::RebinX Rebinning in variable binning as for TH1 is not allowed If a non-null pointer is given an error is flagged see RebinX and Rebin2D. ;  ; void SetBinContent (Int_t bin, Double_t content) override;  Set bin content. ;  ; void SetBinContent (Int_t binx, Int_t biny, Double_t content) override;  ; void SetBinContent (Int_t binx, Int_t biny, Int_t, Double_t content) override;  ; virtual void SetShowProjectionX (In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2D.html:17813,error,error,17813,doc/master/classTProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProfile2D.html,1,['error'],['error']
Availability," ;  ; TString fBoostedMethodName;  details of the boosted classifier ;  ; TString fBoostedMethodOptions;  options ;  ; TString fBoostedMethodTitle;  title ;  ; UInt_t fBoostNum;  Number of times the classifier is boosted. ;  ; TString fBoostType;  string specifying the boost type ;  ; Double_t fBoostWeight;  the weight used to boost the next classifier ;  ; std::vector< TH1 * > fBTrainBgdMVAHist;  ; std::vector< TH1 * > fBTrainSigMVAHist;  ; DataSetManager * fDataSetManager;  DSMTEST. ;  ; Bool_t fDetailedMonitoring;  produce detailed monitoring histograms (boost-wise) ;  ; Bool_t fHistoricBoolOption;  historic variable, only needed for ""CompatibilityOptions"" ;  ; TString fHistoricOption;  historic variable, only needed for ""CompatibilityOptions"" ;  ; Double_t fMethodError;  estimation of the level error of the classifier ;  ; Bool_t fMonitorBoostedMethod;  monitor the MVA response of every classifier ;  ; TTree * fMonitorTree;  tree to monitor values during the boosting ;  ; std::vector< Float_t > * fMVAvalues;  mva values for the last trained method ;  ; Double_t fOverlap_integral;  ; UInt_t fRandomSeed;  seed for random number generator used for bagging ;  ; Double_t fROC_training;  roc integral of last trained method (on training sample) ;  ; std::vector< TH1 * > fTestBgdMVAHist;  ; std::vector< TH1 * > fTestSigMVAHist;  ; std::vector< TH1 * > fTrainBgdMVAHist;  ; std::vector< TH1 * > fTrainSigMVAHist;  ; TString fTransformString;  min and max values for the classifier response ;  . Friends; class Experimental::Classification;  ; class Factory;  ; class Reader;  . Additional Inherited Members;  Public Types inherited from TMVA::MethodBase; enum  EWeightFileType { kROOT =0; , kTEXT; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBoost.html:29516,error,error,29516,doc/master/classTMVA_1_1MethodBoost.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBoost.html,1,['error'],['error']
Availability," ;  ; ULong_t CheckedHash ();  Check and record whether this class has a consistent Hash/RecursiveRemove setup (*) and then return the regular Hash value for this object. ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual TObject * Clone (const char *newname="""") const;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the uniqu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGTextEdit.html:25152,error,error,25152,doc/master/classTGTextEdit.html,https://root.cern,https://root.cern/doc/master/classTGTextEdit.html,3,['error'],['error']
Availability," ;  ; file  inside.C;   Test the IsInside methods of various graphics primitives. ;  ; file  latex.C;   This macro draws 5 Latex-style formula in a canvas and prints the canvas as a Postscript file. ;  ; file  latex2.C;   This macro draws 4 Latex-style formula in a canvas and prints the canvas as a Postscript file. ;  ; file  latex3.C;   Example illustrating a TPaveText with Latex inside. ;  ; file  latex4.C;   Draw the Greek letters as a table and save the result as GIF, PS, PDF and SVG files. ;  ; file  latex5.C;   This draws the Mathematical Symbols letters as a table and save the result as GIF, PS, PDF and SVG files. ;  ; file  mandelbrot.C;   Using TExec to handle keyboard events and TComplex to draw the Mandelbrot set. ;  ; file  markerwarning.C;   This script illustrates the danger of using asymmetric symbols. ;  ; file  mass_spectrum.C;   This macro makes use of some basic graphics primitives such as line, arrow and text. ;  ; file  palettes.C;   This macro draws all the high definition palettes available in ROOT. ;  ; file  pavetext.C;   Draw a pave text. ;  ; file  perceptualcolormap.C;   A “Perceptual” colormap explicitly identifies a fixed value in the data ;  ; file  piechart.C;   Pie chart example. ;  ; file  polytest1.C;   This macro is testing the ""compacting"" algorithm in TPadPainter. ;  ; file  polytest2.C;   This macro is testing the ""compacting"" algorithm in TPadPainter. ;  ; file  pstable.C;   Display all possible types of ROOT/Postscript characters. ;  ; file  psview.C;   An example how to display PS, EPS, PDF files in canvas. ;  ; file  quarks.C;   Example illustrating divided pads and Latex. ;  ; file  save_batch.C;  This macro demonstrates batch image mode of web canvas When enabled - several images converted into JSON before all together provided to headless browser to produce image files. ;  ; file  saveall.C;   Creates many canvases and save as images or pdf. ;  ; file  schroedinger_hydrogen.C;   Plot the Amplitude of a Hydrogen Atom. ;  ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__graphics.html:3018,avail,available,3018,doc/master/group__tutorial__graphics.html,https://root.cern,https://root.cern/doc/master/group__tutorial__graphics.html,1,['avail'],['available']
Availability," ;  ; file  rf607_fitresult.py;   Likelihood and minimization: demonstration of options of the RooFitResult class ;  ; file  rf608_fitresultaspdf.C;   Likelihood and minimization: representing the parabolic approximation of the fit as a multi-variate Gaussian on the parameters of the fitted pdf ;  ; file  rf608_fitresultaspdf.py;   Likelihood and minimization: representing the parabolic approximation of the fit as a multi-variate Gaussian on the parameters of the fitted pdf ;  ; file  rf609_xychi2fit.C;   Likelihood and minimization: setting up a chi^2 fit to an unbinned dataset with X,Y,err(Y) values (and optionally err(X) values) ;  ; file  rf609_xychi2fit.py;   Likelihood and minimization: setting up a chi^2 fit to an unbinned dataset with X,Y,err(Y) values (and optionally err(X) values) ;  ; file  rf610_visualerror.C;   Likelihood and minimization: visualization of errors from a covariance matrix ;  ; file  rf610_visualerror.py;   Likelihood and minimization: visualization of errors from a covariance matrix ;  ; file  rf611_weightedfits.C;   Likelihood and minimization: Parameter uncertainties for weighted unbinned ML fits ;  ; file  rf612_recoverFromInvalidParameters.C;   Likelihood and minimization: Recover from regions where the function is not defined. ;  ; file  rf612_recoverFromInvalidParameters.py;   Likelihood and minimization: Recover from regions where the function is not defined. ;  ; file  rf613_global_observables.C;   This tutorial explains the concept of global observables in RooFit, and showcases how their values can be stored either in the model or in the dataset. ;  ; file  rf613_global_observables.py;   This tutorial explains the concept of global observables in RooFit, and showcases how their values can be stored either in the model or in the dataset. ;  ; file  rf614_binned_fit_problems.C;   A tutorial that explains you how to solve problems with binning effects and numerical stability in binned fits. ;  ; file  rf614_binned_fit_problems.py; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/group__tutorial__roofit.html:18058,error,errors,18058,doc/master/group__tutorial__roofit.html,https://root.cern,https://root.cern/doc/master/group__tutorial__roofit.html,1,['error'],['errors']
Availability," ;  ; static void SetDtorOnly (void *obj);  Set destructor only flag. ;  ; static void SetObjectStat (Bool_t stat);  Turn on/off tracking of objects in the TObjectTable. ;  . Protected Member Functions; void DefVar () override;  Define relevant variables. ;  ; void DoFill (Long64_t entry, Double_t w, const Double_t *v) override;  Fills the histogram with the given values. ;  ;  Protected Member Functions inherited from TProofDraw; virtual void ClearFormula ();  Delete internal buffers. ;  ; virtual Bool_t CompileVariables ();  Compiles each variable from fTreeDrawArgsParser for the tree fTree. ;  ; void FillWeight ();  Get weight from input list, if any. ;  ; virtual Bool_t ProcessSingle (Long64_t, Int_t);  Processes a single variable from an entry. ;  ; void SetCanvas (const char *objname);  Move to a canvas named <name>_canvas; create the canvas if not existing. ;  ; void SetDrawAtt (TObject *o);  Set the drawing attributes from the input list. ;  ; void SetError (const char *sub, const char *mesg);  Sets the error status. ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Protected Attributes; TProfile2D * fProfile;  ;  Protected Attributes inherited from TProofDraw; Int_t fDimension;  ; TString fInitialExp;  ; TTreeFormulaManager * fManager;  ; Int_t fMultiplicity;  ; Bool_t fObjEval;  ; TTreeFormula * fSelect;  ; TString fSelection;  ; TStatus * fStatus;  ; TTree * fTree;  ; TTreeDrawArgsParser fTreeDrawArgsParser;  ; TTreeFormula * fVar [4];  ; Double_t fWeight;  ;  Protected Attributes inherited from TSelector; EAbort fAbort;  Abort status. ;  ; TList * fInput;  List of objects available during processing. ;  ; TObject * fObject;  ! Current object if processing object (vs. TTree) ;  ; TString fOption;  Option given to TTree::Process. ;  ; TSelectorList * fOutput;  ! List of objects created during ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofDrawProfile2D.html:12404,error,error,12404,doc/master/classTProofDrawProfile2D.html,https://root.cern,https://root.cern/doc/master/classTProofDrawProfile2D.html,1,['error'],['error']
Availability," ;  ; virtual TClass * IsA () const;  ; void MakeClass (const TString &classFileName=TString("""")) const;  create reader class for classifier -> overwrites base class function create specific class for TMultiLayerPerceptron ;  ; virtual void ReadWeightsFromStream (std::istream &)=0;  ; void ReadWeightsFromStream (std::istream &istr);  read weights from stream since the MLP can not read from the stream, we 1st: write the weights to temporary file ;  ; virtual void ReadWeightsFromStream (TFile &);  ; void ReadWeightsFromXML (void *wghtnode);  rebuild temporary textfile from xml weightfile and load this file into MLP ;  ; void SetHiddenLayer (TString hiddenlayer="""");  ; virtual void Streamer (TBuffer &);  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; void Train (void);  performs TMlpANN training available learning methods: ;  ;  Public Member Functions inherited from TMVA::MethodBase;  MethodBase (const TString &jobName, Types::EMVA methodType, const TString &methodTitle, DataSetInfo &dsi, const TString &theOption="""");  standard constructor ;  ;  MethodBase (Types::EMVA methodType, DataSetInfo &dsi, const TString &weightFile);  constructor used for Testing + Application of the MVA, only (no training), using given WeightFiles ;  ; virtual ~MethodBase ();  destructor ;  ; void AddOutput (Types::ETreeType type, Types::EAnalysisType analysisType);  ; TDirectory * BaseDir () const;  returns the ROOT directory where info/histograms etc of the corresponding MVA method instance are stored ;  ; virtual void CheckSetup ();  check may be overridden by derived class (sometimes, eg, fitters are used which can only be implemented during training phase) ;  ; DataSet * Data () const;  ; DataSetInfo & DataInfo () const;  ; virtual void DeclareCompatibilityOptions ();  options that are used ONLY for the READER to ensure backward compatibility they are hence without any effect (the reader is only reading the training options that HAD been used at the training of the .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodTMlpANN.html:2291,avail,available,2291,doc/master/classTMVA_1_1MethodTMlpANN.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodTMlpANN.html,1,['avail'],['available']
Availability," ;  ; virtual const char * ClassName () const;  Returns name of class to which the object belongs. ;  ; virtual void Delete (Option_t *option="""");  Delete this object. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is known to have an inconsistent setup for Hash and RecursiveRemove (i.e. ;  ; virtual void Info (const char *method, const char *msgfmt,...) const;  Issue info ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling.html:39742,error,error,39742,doc/master/classTCling.html,https://root.cern,https://root.cern/doc/master/classTCling.html,4,['error'],['error']
Availability," ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins);  Redefine x and y axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, const Double_t *xBins, Int_t ny, const Double_t *yBins, Int_t nz, const Double_t *zBins);  Redefine x, y and z axis parameters with variable bin sizes. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax);  Redefine x axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax);  Redefine x and y axis parameters. ;  ; virtual void SetBins (Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax);  Redefine x, y and z axis parameters. ;  ; virtual void SetBuffer (Int_t buffersize, Option_t *option="""");  Set the maximum number of entries to be kept in the buffer. ;  ; virtual UInt_t SetCanExtend (UInt_t extendBitMask);  Make the histogram axes extendable / not extendable according to the bit mask returns the previous bit mask specifying which axes are extendable. ;  ; virtual void SetCellContent (Int_t binx, Int_t biny, Double_t content);  ; virtual void SetCellError (Int_t binx, Int_t biny, Double_t content);  ; virtual void SetColors (Color_t linecolor=-1, Color_t markercolor=-1, Color_t fillcolor=-1);  Shortcut to set the three histogram colors with a single call. ;  ; virtual void SetContent (const Double_t *content);  Replace bin contents by the contents of array content. ;  ; virtual void SetContour (Int_t nlevels, const Double_t *levels=nullptr);  Set the number and values of contour levels. ;  ; virtual void SetContourLevel (Int_t level, Double_t value);  Set value for one contour level. ;  ; virtual void SetDirectory (TDirectory *dir);  By default, when a histogram is created, it is added to the list of histogram objects in the current directory in memory. ;  ; virtual void SetEntries (Double_t n);  ; virtual void SetError (const Doub",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGLTH3Composition.html:29643,mask,mask,29643,doc/master/classTGLTH3Composition.html,https://root.cern,https://root.cern/doc/master/classTGLTH3Composition.html,38,['mask'],['mask']
Availability," ;  ; void Apply (TF1 *f) override;  Apply a function to all data points \( y = f(x,y) \). ;  ; virtual void BayesDivide (const TH1 *pass, const TH1 *total, Option_t *opt="""");  This function is only kept for backward compatibility. ;  ; void ComputeRange (Double_t &xmin, Double_t &ymin, Double_t &xmax, Double_t &ymax) const override;  Compute Range. ;  ; virtual void DeleteYError (Int_t e);  Deletes the y error with the index e. ;  ; void Divide (const TH1 *pass, const TH1 *total, Option_t *opt=""cp"");  This function was adapted from the TGraphAsymmErrors class. ;  ; virtual TAttFill * GetAttFill (Int_t e);  Get AttFill pointer for specified error dimension. ;  ; virtual TAttLine * GetAttLine (Int_t e);  Get AttLine pointer for specified error dimension. ;  ; Double_t GetErrorX (Int_t i) const override;  Get error on x coordinate for point i. ;  ; Double_t GetErrorXhigh (Int_t i) const override;  Get high error on x coordinate for point i. ;  ; Double_t GetErrorXlow (Int_t i) const override;  Get low error on x coordinate for point i. ;  ; Double_t GetErrorY (Int_t i) const override;  Get error on y coordinate for point i. ;  ; virtual Double_t GetErrorY (Int_t i, Int_t e) const;  Get error e on y coordinate for point i. ;  ; Double_t GetErrorYhigh (Int_t i) const override;  Get high error on y coordinate for point i. ;  ; virtual Double_t GetErrorYhigh (Int_t i, Int_t e) const;  Get high error e on y coordinate for point i. ;  ; Double_t GetErrorYlow (Int_t i) const override;  Get low error on y coordinate for point i. ;  ; virtual Double_t GetErrorYlow (Int_t i, Int_t e) const;  Get low error e on y coordinate for point i. ;  ; Double_t * GetEXhigh () const override;  ; Double_t * GetEXlow () const override;  ; Double_t * GetEYhigh () const override;  Get all high errors on y coordinates as an array summed according to fSumErrorsMode. ;  ; virtual Double_t * GetEYhigh (Int_t e);  Get all high errors e on y coordinates as an array. ;  ; Double_t * GetEYlow () const o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:10686,error,error,10686,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['error'],['error']
Availability," ;  ; void SetCursor (Int_t win, ECursor cursor) override;  The cursor ""cursor"" will be used when the pointer is in the window ""wid"". ;  ; void SetCursor (Window_t wid, Cursor_t curid) override;  Sets the cursor ""curid"" to be used when the pointer is in the window ""id"". ;  ; void SetDashes (GContext_t gc, Int_t offset, const char *dash_list, Int_t n) override;  Sets the dash-offset and dash-list attributes for dashed line styles in the specified GC. ;  ; void SetDNDAware (Window_t, Atom_t *) override;  Add XdndAware property and the list of drag and drop types to the Window win. ;  ; void SetDoubleBuffer (Int_t wid, Int_t mode) override;  Sets the double buffer on/off on the window ""wid"". ;  ; void SetDoubleBufferOFF () override;  Turns double buffer mode off. ;  ; void SetDoubleBufferON () override;  Turns double buffer mode on. ;  ; void SetDrawMode (EDrawMode mode) override;  Sets the drawing mode. ;  ; void SetForeground (GContext_t gc, ULong_t foreground) override;  Sets the foreground color for the specified GC (shortcut for ChangeGC with only foreground mask set). ;  ; void SetIconName (Window_t wid, char *name) override;  Sets the window icon name. ;  ; void SetIconPixmap (Window_t wid, Pixmap_t pix) override;  Sets the icon name pixmap. ;  ; void SetInputFocus (Window_t wid) override;  Changes the input focus to specified window ""id"". ;  ; void SetKeyAutoRepeat (Bool_t on=kTRUE) override;  Turns key auto repeat on (kTRUE) or off (kFALSE). ;  ; void SetMWMHints (Window_t winID, UInt_t value, UInt_t decorators, UInt_t inputMode) override;  Sets decoration style. ;  ; void SetPrimarySelectionOwner (Window_t wid) override;  Makes the window ""id"" the current owner of the primary selection. ;  ; void SetRGB (Int_t cindex, Float_t r, Float_t g, Float_t b) override;  Sets color intensities the specified color index ""cindex"". ;  ; Bool_t SetSelectionOwner (Window_t windowID, Atom_t &selectionID) override;  Changes the owner and last-change time for the specified sele",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCocoa.html:24173,mask,mask,24173,doc/master/classTGCocoa.html,https://root.cern,https://root.cern/doc/master/classTGCocoa.html,2,['mask'],['mask']
Availability," ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  . Static Public Member Functions; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static std::unique_ptr< RooRatio > makeRatio (const char *name, const char *title, RooArgList &nr, RooArgList &dr);  Return the RooRatio form of products and denominators of morphing functions. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (std::ostream &os=std::cout, Int_t maxPerNode=10000000);  Print all outstanding logged evaluation error on the given ostream. ;  ; static void setEvalErrorLoggingMode (ErrorLoggingMode m);  Set evaluation error logging mode. ;  ; static void setHideOffset (bool flag);  ;  Static Public Member Functions inherited from RooAbsArg; static void setDirtyInhibit (bool flag);  Control global dirty inhibit mode. ;  ; static vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLagrangianMorphFunc.html:56465,error,error,56465,doc/master/classRooLagrangianMorphFunc.html,https://root.cern,https://root.cern/doc/master/classRooLagrangianMorphFunc.html,1,['error'],['error']
Availability," ;  ;  Protected Attributes inherited from TVirtualDragManager; Bool_t fDragging;  in dragging mode? ;  ; EDragType fDragType;  dragging type ;  ; Bool_t fDropping;  drop is in progress ;  ; TGFrame * fFrameUnder;  frame under drag ;  ; Bool_t fMoveWaiting;  kTRUE if source is clicked but not moved ;  ; TGFrame * fPasteFrame;  ; Bool_t fPasting;  paste action is in progress ;  ; TGFrame * fSource;  frame being dragged ;  ; TGFrame * fTarget;  drop target ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGWindow; UInt_t fEditDisabled;  flags used for ""guibuilding"" ;  ; TString fName;  name of the window used in SavePrimitive() ;  ; Bool_t fNeedRedraw;  kTRUE if window needs to be redrawn ;  ; const TGWindow * fParent;  Parent window. ;  ;  Protected Attributes inherited from TGObject; TGClient * fClient;  Connection to display server. ;  ; Handle_t fId;  X11/Win32 Window identifier. ;  ;  Protected Attributes inherited from TQObject; TList * fListOfConnections;  list of signals from this object ;  ; TList * fListOfSignals;  ; Bool_t fSignalsBlocked;  list of connections to this object ;  ;  Static Protected Attributes inherited from TGFrame; static const TGGC * fgBckgndGC = nullptr;  ; static const TGGC * fgBlackGC = nullptr;  ; static Pixel_t fgBlackPixel = 0;  ; static Window_t fgDbw = 0;  ; static Int_t fgDbx = 0;  ; static Int_t fgDby = 0;  ; static ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGuiBldDragManager.html:37451,mask,mask,37451,doc/master/classTGuiBldDragManager.html,https://root.cern,https://root.cern/doc/master/classTGuiBldDragManager.html,1,['mask'],['mask']
Availability," ;  polytest1.C This macro is testing the ""compacting"" algorithm in TPadPainter ;  polytest2.C This macro is testing the ""compacting"" algorithm in TPadPainter ;  pstable.C Display all possible types of ROOT/Postscript characters ;  psview.C An example how to display PS, EPS, PDF files in canvas ;  quarks.C Example illustrating divided pads and Latex ;  tmathtext.CThis macro draws various formula in a canvas ;  tmathtext2.C This macro draw all possible symbols provided by TMathtext ;  tornado.C Show 3-d polymarker ;  transparency.C This macro demonstrates the use of color transparency ;  triangles.C Generate small triangles randomly in the canvas ;  ► graphs;  annotation3d.C This example show how to put some annotation on a 3D plot using 3D polylines ;  approx.C Macro to test interpolation function Approx ;  bent.C Bent error bars ;  exclusiongraph.C Draw three graphs with an exclusion zone ;  exclusiongraph2.C Draw several graphs with an exclusion zones ;  gerrors.C Draw a graph with error bars ;  gerrors2.C Draw two graphs with error bars ;  graph.C Draw a simple graph ;  graph2derrorsfit.C Draw and fit a TGraph2DErrors ;  graphApply.C A macro to demonstrate the functionality of TGraph::Apply() method ;  graphpalettecolor.C Palette coloring for graphs is activated thanks to the options PFC (Palette Fill Color), PLC (Palette Line Color) and AMC (Palette Marker Color) ;  graphpolar.C Create and draw a polar graph ;  graphpolar2.C Create and draw a polar graph with PI axis ;  graphpolar3.C Create and draw a polar graph with PI axis using a TF1 ;  graphShade.C Show how to shade an area between two graphs ;  graphstruct.C Draw a simple graph structure ;  graphtext.C Draw a graph with text attached to each point ;  gtime.C Example of TGraphTime ;  gtime2.C Example of TGraphTime showing how the class could be used to visualize a set of particles with their time stamp in a MonteCarlo program ;  labels1.C Setting alphanumeric labels in a 1-d histogram ;  labels2.C Setting al",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v610/files.html:116217,error,error,116217,doc/v610/files.html,https://root.cern,https://root.cern/doc/v610/files.html,1,['error'],['error']
Availability," < allCoords.size(); i += 3) {; x[0] = allCoords[i + 0].first;; y[0] = allCoords[i + 0].second;; x[1] = allCoords[i + 1].first;; y[1] = allCoords[i + 1].second;; x[2] = allCoords[i + 2].first;; y[2] = allCoords[i + 2].second;; th2p->AddBin(3, x, y);; avg->AddBin(3, x, y);; err->AddBin(3, x, y);; }; ; // -------------------- Generate particles ------------------------; TRandom ran;; for (int j = 0; j < numEvents; ++j) {; Double_t r1 = ran.Gaus(0, 10);; Double_t r2 = ran.Gaus(0, 8);; Double_t rok = ran.Gaus(20, 2);; Double_t rbad1 = ran.Gaus(1, 2);; Double_t rbad2 = ran.Gaus(2, 0);; ; Double_t val = rok;; // -------------------- Malfunctioning panels -------------------; if (th2p->IsInsideBin(4, r1, r2)) val = rok - rbad1;; if (th2p->IsInsideBin(20, r1, r2)) val = rok - rbad2;; if (th2p->IsInsideBin(13, r1, r2)) val = rok + rbad1;; if (th2p->IsInsideBin(37, r1, r2)) val = rok + rbad2;; ; // -------------------- Fill histograms ------------------------; th2p->Fill(r1, r2, val);; avg->Fill(r1, r2, val);; err->Fill(r1, r2, val);; }; ; // -------------------- Display end state ------------------------; c1->cd(1);; th2p->SetStats(0);; th2p->SetTitle(""total hits"");; th2p->Draw(""COLZ"");; ; c1->cd(2);; avg->SetStats(0);; avg->SetTitle(""average charge"");; avg->Draw(""COLZ"");; ; c1->cd(3);; err->SetStats(0);; err->SetContentToError();; err->SetTitle(""error"");; err->Draw(""COLZ"");; }; b#define b(i)Definition RSha256.hxx:100; a#define a(i)Definition RSha256.hxx:99; Int_tint Int_tDefinition RtypesCore.h:45; Double_tdouble Double_tDefinition RtypesCore.h:59; gROOT#define gROOTDefinition TROOT.h:406; TCanvasThe Canvas class.Definition TCanvas.h:23; TH2Poly2D Histogram with Polygonal BinsDefinition TH2Poly.h:66; TProfile2Poly2D Profile Histogram with Polygonal Bins.Definition TProfile2Poly.h:58; TRandomThis is the base class for the ROOT Random number generators.Definition TRandom.h:27; TRandom::Gausvirtual Double_t Gaus(Double_t mean=0, Double_t sigma=1)Samples a random number from th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tprofile2polyRealisticModuleError_8C.html:2714,error,error,2714,doc/master/tprofile2polyRealisticModuleError_8C.html,https://root.cern,https://root.cern/doc/master/tprofile2polyRealisticModuleError_8C.html,1,['error'],['error']
Availability," << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TPackMgr (const char *dir, const char *key=""L0"");  Create a PROOF package manager. ;  ;  ~TPackMgr () override;  Destroy a TPackMgr instance. ;  ; Int_t Build (const char *pack, Int_t opt=TPackMgr::kCheckROOT);  Method to build a package. ;  ; Int_t Clean (const char *pack);  Clean dir for package 'pack' Return -1 in case of error, 0 otherwise. ;  ; const char * GetDir () const;  ; Int_t GetDownloadDir (TString &dldir);  Method to get the download dir; create if not existing Return -1 in case of error (not found; not created), 0 otherwise. ;  ; void GetEnabledPackages (TString &packlist);  Method to get a semi-colon separated list with the names of the enabled packages. ;  ; TList * GetList () const;  Get list of available packages Returns a pointer to a TList object, transferring ownership to the caller. ;  ; TList * GetListOfEnabled () const;  Get list of enabled packages Returns a pointer to a TList object, transferring ownership to the caller. ;  ; TLockPath * GetLock ();  ; TMD5 * GetMD5 (const char *pack);  Get MD5 checksum of the PAR file corresponding to given package Returns a pointer to a TMD5 object, transferring ownership to the caller. ;  ; const char * GetName () const override;  Returns name of object. ;  ; Int_t GetPackDir (const char *pack, TString &pdir);  Method to get the path of the dir for package 'pack'. ;  ; Int_t GetParPath (const char *pack, TString &path);  Method to get the path of the PAR file for package 'pack'. ;  ; const char * GetTitle () const override;  Returns title of object. ;  ; Bool_t Has (const char *pack);  Method to check if this package manager has package 'pack'. ;  ; Int_t Install (const char *par, Bool_t rmold=kFALSE);  Install package from par (unpack the file in the dir",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPackMgr.html:2054,avail,available,2054,doc/master/classTPackMgr.html,https://root.cern,https://root.cern/doc/master/classTPackMgr.html,1,['avail'],['available']
Availability," << ( 13 )). };  ;  Public Types inherited from RooPrintable; enum  ContentsOption { ;   kName =1; , kClassName =2; , kValue =4; , kArgs =8; , ;   kExtras =16; , kAddress =32; , kTitle =64; , kCollectionHeader =128. };  ; enum  StyleOption { ;   kInline =1; , kSingleLine =2; , kStandard =3; , kVerbose =4; , ;   kTreeStructure =5. };  ;  Static Public Member Functions inherited from RooAbsPdf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooNumGenConfig * defaultGeneratorConfig ();  Returns the default numeric MC generator configuration for all RooAbsReals. ;  ; static int verboseEval ();  Return global level of verbosity for p.d.f. evaluations. ;  ; static void verboseEval (Int_t stat);  Change global level of verbosity for p.d.f. evaluations. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooFixedProdPdf.html:58214,error,error,58214,doc/master/classRooFixedProdPdf.html,https://root.cern,https://root.cern/doc/master/classRooFixedProdPdf.html,3,['error'],['error']
Availability," << GetXaxis()->GetXbins()->fArray[i];; 1629 }; 1630 out << ""}; "" << std::endl;; 1631 }; 1632 ; 1633 char quote = '""';; 1634 out<<"" ""<<std::endl;; 1635 out<<"" ""<<ClassName()<<"" *"";; 1636 ; 1637 //histogram pointer has by default the histogram name.; 1638 //however, in case histogram has no directory, it is safer to add a incremental suffix; 1639 static Int_t hcounter = 0;; 1640 TString histName = gInterpreter->MapCppName(GetName());; 1641 if (!fDirectory) {; 1642 hcounter++;; 1643 histName += ""__"";; 1644 histName += hcounter;; 1645 }; 1646 const char *hname = histName.Data();; 1647 ; 1648 out << hname << "" = new "" << ClassName() << ""("" << quote << hname << quote << "","" << quote << GetTitle() << quote; 1649 << "","" << GetXaxis()->GetNbins();; 1650 if (nonEqiX); 1651 out << "", xAxis"";; 1652 else; 1653 out << "","" << GetXaxis()->GetXmin(); 1654 << "","" << GetXaxis()->GetXmax(); 1655 <<"",""<<quote<<GetErrorOption()<<quote<<"");""<<std::endl;; 1656 ; 1657 // save bin entries; 1658 Int_t bin;; 1659 for (bin=0;bin<fNcells;bin++) {; 1660 Double_t bi = GetBinEntries(bin);; 1661 if (bi) {; 1662 out<<"" ""<<hname<<""->SetBinEntries(""<<bin<<"",""<<bi<<"");""<<std::endl;; 1663 }; 1664 }; 1665 //save bin contents; 1666 for (bin=0;bin<fNcells;bin++) {; 1667 Double_t bc = fArray[bin];; 1668 if (bc) {; 1669 out<<"" ""<<hname<<""->SetBinContent(""<<bin<<"",""<<bc<<"");""<<std::endl;; 1670 }; 1671 }; 1672 // save bin errors; 1673 if (fSumw2.fN) {; 1674 for (bin=0;bin<fNcells;bin++) {; 1675 Double_t be = TMath::Sqrt(fSumw2.fArray[bin]);; 1676 if (be) {; 1677 out<<"" ""<<hname<<""->SetBinError(""<<bin<<"",""<<be<<"");""<<std::endl;; 1678 }; 1679 }; 1680 }; 1681 ; 1682 TH1::SavePrimitiveHelp(out, hname, option);; 1683}; 1684 ; 1685////////////////////////////////////////////////////////////////////////////////; 1686/// Multiply this profile by a constant c1.; 1687///; 1688/// `this = c1*this`; 1689///; 1690/// This function uses the services of TProfile::Add; 1691 ; 1692void TProfile::Scale(Double_t c1, Option_t * o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile_8cxx_source.html:61213,error,errors,61213,doc/master/TProfile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile_8cxx_source.html,1,['error'],['errors']
Availability," <atomic>; 42 ; 43#include ""RtypesCore.h""; 44 ; 45#include ""TString.h""; 46 ; 47namespace TMVA {; 48 ; 49 typedef UInt_t TMVAVersion_t;; 50 ; 51 class MsgLogger;; 52 ; 53 // message types for MsgLogger; 54 // define outside of Types class to facilite access; 55 enum EMsgType {; 56 kDEBUG = 1,; 57 kVERBOSE = 2,; 58 kINFO = 3,; 59 kWARNING = 4,; 60 kERROR = 5,; 61 kFATAL = 6,; 62 kSILENT = 7,; 63 kHEADER = 8; 64 };; 65 ; 66 enum HistType { kMVAType = 0, kProbaType = 1, kRarityType = 2, kCompareType = 3 };; 67 ; 68 //Variable Importance type; 69 enum VIType {kShort=0,kAll=1,kRandom=2};; 70 ; 71 class Types {; 72 ; 73 public:; 74 ; 75 // available MVA methods; 76 enum EMVA {; 77 kVariable = 0,; 78 kCuts ,; 79 kLikelihood ,; 80 kPDERS ,; 81 kHMatrix ,; 82 kFisher ,; 83 kKNN ,; 84 kCFMlpANN ,; 85 kTMlpANN ,; 86 kBDT ,; 87 kDT ,; 88 kRuleFit ,; 89 kSVM ,; 90 kMLP ,; 91 kBayesClassifier,; 92 kFDA ,; 93 kBoost ,; 94 kPDEFoam ,; 95 kLD ,; 96 kPlugins ,; 97 kCategory ,; 98 kDNN ,; 99 kDL ,; 100 kPyRandomForest ,; 101 kPyAdaBoost ,; 102 kPyGTB ,; 103 kPyKeras ,; 104 kPyTorch ,; 105 kC50 ,; 106 kRSNNS ,; 107 kRSVM ,; 108 kRXGB ,; 109 kCrossValidation,; 110 kMaxMethod; 111 };; 112 ; 113 // available variable transformations; 114 enum EVariableTransform {; 115 kIdentity = 0,; 116 kDecorrelated,; 117 kNormalized,; 118 kPCA,; 119 kRearranged,; 120 kGauss,; 121 kUniform,; 122 kMaxVariableTransform; 123 };; 124 ; 125 // type of analysis; 126 enum EAnalysisType {; 127 kClassification = 0,; 128 kRegression,; 129 kMulticlass,; 130 kNoAnalysisType,; 131 kMaxAnalysisType; 132 };; 133 ; 134 enum ESBType {; 135 kSignal = 0, ///< Never change this number - it is elsewhere assumed to be zero !; 136 kBackground,; 137 kSBBoth,; 138 kMaxSBType,; 139 kTrueType; 140 };; 141 ; 142 enum ETreeType {; 143 kTraining = 0,; 144 kTesting,; 145 kMaxTreeType, ///< also used as temporary storage for trees not yet assigned for testing;training...; 146 kValidation, ///< these are placeholders... currently not us",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Types_8h_source.html:2272,avail,available,2272,doc/master/tmva_2tmva_2inc_2TMVA_2Types_8h_source.html,https://root.cern,https://root.cern/doc/master/tmva_2tmva_2inc_2TMVA_2Types_8h_source.html,2,['avail'],['available']
Availability," = """") const; THnBase*THnBase::RebinBase(Int_t group) const; THnBase*THnBase::RebinBase(const Int_t* group) const; virtual voidTHnBase::Reserve(Long64_t); voidTHnBase::ResetBase(Option_t* option = """"); virtual voidTHnBase::SetFilledBins(Long64_t); voidTHnBase::UpdateXStat(const Double_t* x, Double_t w = 1.). Data Members; public:. enum THnBase::[unnamed] { kNoInt; kValidInt; kInvalidInt; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TNDArrayT<unsigned int>fArraybin content; TObjArrayTHnBase::fAxesaxes of the histogram; TObjArrayTHnBase::fBrowsables! browser-helpers for each axis; Int_t*THn::fCoordBuf! Temporary buffer; Double_tTHnBase::fEntriesnumber of entries, spread over chunks; Double_t*THnBase::fIntegral! array with bin weight sums; enum THnBase::THnBase::fIntegralStatus! status of integral; TStringTNamed::fNameobject identifier; Int_tTHnBase::fNdimensionsnumber of dimensions; TNDArrayT<Double_t>THn::fSumw2bin error, lazy allocation happens in TNDArrayT; TStringTNamed::fTitleobject title; Double_tTHnBase::fTsumwtotal sum of weights; Double_tTHnBase::fTsumw2total sum of weights squared; -1 if no errors are calculated; TArrayDTHnBase::fTsumwxtotal sum of weight*X for each dimension; TArrayDTHnBase::fTsumwx2total sum of weight*X*X for each dimension. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GetArray(); Increment the bin content of ""bin"" by ""w"",; return the bin index. return GetArray(). » Author: Axel Naumann, Nov 2011 » Copyright (C) 1995-2012, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id$ » Last generated: 2015-09-08 17:04; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THnT_unsigned_int_.html:12305,error,error,12305,root/html534/THnT_unsigned_int_.html,https://root.cern,https://root.cern/root/html534/THnT_unsigned_int_.html,4,['error'],"['error', 'errors']"
Availability," = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; TDSetElement*Current() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* opt); virtual Long64_tDraw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual Long64_tDraw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; Bool_tElementsValid(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); Int_tExportFileList(const char* filepath, Option_t* opt = """"); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetDirectory() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static Long64_tGetEntries(Bool_t isTree, const char* filename, const char* path, TString& objname); TObject*GetEntryList() const; virtual const char*TObject::GetIconName() const; TList*GetListOfElements() const; virtual const char*TNamed::GetName() const; Int_tGetNumOfFiles(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); const char*GetObjName() const; virtual Option_t*TObject::GetOption() const; TObject*GetOutput(const char* name); TLi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDSet.html:3110,error,error,3110,root/html528/TDSet.html,https://root.cern,https://root.cern/root/html528/TDSet.html,10,['error'],['error']
Availability," = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; static TStringConvertToJSON(const TObject* obj, Int_t compact = 0); static TStringConvertToJSON(const void* obj, const TClass* cl, Int_t compact = 0); static TStringConvertToJSON(const void* obj, TDataMember* member, Int_t compact = 0); virtual voidTObject::Copy(TObject& object) const; virtual voidDecrementLevel(TVirtualStreamerInfo*); virtual voidTObject::Delete(Option_t* option = """")MENU ; voidTBuffer::DetachBuffer(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); voidTBuffer::Expand(Int_t newsize, Bool_t copy = kTRUE); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidForceWriteInfo(TVirtualStreamerInfo*, Bool_t); virtual voidForceWriteInfoClones(TClonesArray*); virtual Int_tGetBufferDisplacement() const; Int_tTBuffer::GetBufferVersion() const; static TClass*TBuffer::GetClass(const type_info& typeinfo); static TClass*TBuffer::GetClass(const char* className); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static const char*GetFloatFormat(); virtual const char*TObject::GetIconName() const; virtual TVirtualStreamerInfo*GetInfo(); virtual TProcessID*GetLastProcessID(TRefTable*) const; virtual Int_tGetMapCount() const; virtual voidGetMappedObject(UInt_t, void*&, TClass*&) const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TBufferJSON.html:3255,error,error,3255,root/html602/TBufferJSON.html,https://root.cern,https://root.cern/root/html602/TBufferJSON.html,4,['error'],['error']
Availability," = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static TView*TView::CreateView(Int_t system = 1, const Double_t* rmin = 0, const Double_t* rmax = 0); virtual voidDefinePerspectiveView(); virtual voidDefineViewDirection(const Double_t* s, const Double_t* c, Double_t cosphi, Double_t sinphi, Double_t costhe, Double_t sinthe, Double_t cospsi, Double_t sinpsi, Double_t* tnorm, Double_t* tback); virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidDrawOutlineCube(TList* outline, Double_t* rmin, Double_t* rmax); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidExecuteRotateView(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidFindNormal(Double_t x, Double_t y, Double_t z, Double_t& zn); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFindPhiSectors(Int_t iopt, Int_t& kphi, Double_t* aphi, Int_t& iphi1, Int_t& iphi2); virtual voidFindScope(Double_t* scale, Double_t* center, Int_t& irep); virtual voidFindThetaSectors(Int_t iopt, Double_t phi, Int_t& kth, Double_t* ath, Int_t& ith1, Int_t& ith2); virtual voidFront()MENU ; virtual voidFrontView(TVirtualPad* pad = 0); virtual Bool_tGetAutoRange(); virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TView3D.html:2900,Error,Error,2900,root/html532/TView3D.html,https://root.cern,https://root.cern/root/html532/TView3D.html,4,['Error'],['Error']
Availability," = """"); virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTDirectoryFile::Copy(TObject&) const; static TDirectory*&TDirectory::CurrentDirectory(); static voidTDirectory::DecodeNameCycle(const char* namecycle, char* name, Short_t& cycle, const size_t namesize = 0); virtual voidTDirectoryFile::Delete(const char* namecycle = """"); virtual voidTDirectory::DeleteAll(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTDirectory::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; static voidTDirectory::EncodeNameCycle(char* buffer, const char* name, Short_t cycle); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTDirectoryFile::FillBuffer(char*& buffer); virtual TKey*TDirectoryFile::FindKey(const char* keyname) const; virtual TKey*TDirectoryFile::FindKeyAny(const char* keyname) const; virtual TObject*TDirectory::FindObject(const char* name) const; virtual TObject*TDirectory::FindObject(const TObject* obj) const; virtual TObject*TDirectoryFile::FindObjectAny(const char* name) const; virtual TObject*TDirectoryFile::FindObjectAnyFile(const char* name) const; virtual TObject*TDirectoryFile::Get(const char* namecycle); virtual Int_tTDirectoryFile::GetBufferSize() const; const TDatime&TDirectoryFile::GetCreationDate() const; virtual TDirectory*TDirectoryFile::GetDirectory(const char* apath, Bool_t printError = false, const char* funcname = ""GetDirectory""); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooWorkspace__WSDir.html:3259,error,error,3259,root/html534/RooWorkspace__WSDir.html,https://root.cern,https://root.cern/root/html534/RooWorkspace__WSDir.html,6,['error'],['error']
Availability," = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Double_tDerivative(Double_t x) const; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTSpline::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTSpline::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Double_tEval(Double_t x) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTSpline::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tFindX(Double_t x) const; voidGetCoeff(Int_t i, Double_t& x, Double_t& y, Double_t& b, Double_t& c, Double_t& d); virtual Double_tTSpline::GetDelta() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; TH1F*TSpline::GetHistogram() const; virtual const char*TObject::GetIconName() const; virtual voidGetKnot(Int_t i, Double_t& x, Double_t& y) const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Widt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpline3.html:2308,error,error,2308,root/html528/TSpline3.html,https://root.cern,https://root.cern/root/html528/TSpline3.html,10,['error'],['error']
Availability," = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Double_tDerivative(Double_t x) const; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTSpline::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTSpline::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Double_tEval(Double_t x) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTSpline::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tFindX(Double_t x) const; voidGetCoeff(Int_t i, Double_t& x, Double_t& y, Double_t& b, Double_t& c, Double_t& d, Double_t& e, Double_t& f); virtual Double_tTSpline::GetDelta() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; TH1F*TSpline::GetHistogram() const; virtual const char*TObject::GetIconName() const; virtual voidGetKnot(Int_t i, Double_t& x, Double_t& y) const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSpline5.html:2464,error,error,2464,root/html528/TSpline5.html,https://root.cern,https://root.cern/root/html528/TSpline5.html,10,['error'],['error']
Availability," = """"); virtual voidTObject::Browse(TBrowser* b); virtual voidCarver(Int_t&, Double_t&, Double_t&); virtual Int_tCellFill(Int_t, TFoamCell*); virtual voidCheckAll(Int_t); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual Int_tDivide(TFoamCell*); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Double_tEval(Double_t*); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidExplore(TFoamCell* Cell); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidFinalize(Double_t&, Double_t&); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidGenerCel2(TFoamCell*&); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual voidGetIntegMC(Double_t&, Double_t&); virtual voidGetIntNorm(Double_t&, Double_t&); virtual voidGetMCvect(Double_t*); virtual Double_tGetMCwt(); virtual voidGetMCwt(Double_t&); virtual const char*TObject::GetName() const; virtual Long_tGetnCalls() const; virtual Long_tGetnEffev() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFoam.html:5966,error,error,5966,root/html528/TFoam.html,https://root.cern,https://root.cern/root/html528/TFoam.html,10,['error'],['error']
Availability," = ""tcp""); virtual voidTNamed::Copy(TObject& named) const; virtual intCopyFile(const char* from, const char* to, Bool_t overwrite = kFALSE); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual const char*TSystem::DirName(const char* pathname); virtual voidDispatchOneEvent(Bool_t pendingOnly = kFALSE); voidDispatchSignals(ESignals sig); Bool_tDispatchTimers(Bool_t mode); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual Func_tDynFindSymbol(const char* module, const char* entry); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Int_tExec(const char* shellcmd); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidExit(int code, Bool_t mode = kTRUE); virtual voidTSystem::ExitLoop(); virtual Bool_tExpandPathName(TString& patbuf); virtual char*ExpandPathName(const char* path); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual const char*FindFile(const char* search, TString& file, EAccessMode mode = kFileExists); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFreeDirectory(void* dirp); virtual TSystem::EAclicModeTSystem::GetAclicMode() const; virtual Int_tTSystem::GetAclicProperties() const; voidTSystem::GetBeepDefaults(Int_t& freq, Int_t& duration) const; virtual const char*TSystem::GetBuildArch() const; virtual const char*TSystem::GetBuildCompiler() const; virtual const char*TSystem::GetBuildCompilerVersion() const; virtual const char*TSystem::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TUnixSystem.html:3453,error,error,3453,root/html532/TUnixSystem.html,https://root.cern,https://root.cern/root/html532/TUnixSystem.html,4,['error'],['error']
Availability," = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TMultiDimFit ();  Empty CTOR. Do not use. ;  ;  TMultiDimFit (Int_t dimension, EMDFPolyType type=kMonomials, Option_t *option="""");  Constructor Second argument is the type of polynomials to use in parameterisation, one of: TMultiDimFit::kMonomials TMultiDimFit::kChebyshev TMultiDimFit::kLegendre. ;  ;  ~TMultiDimFit () override;  Destructor. ;  ; virtual void AddRow (const Double_t *x, Double_t D, Double_t E=0);  Add a row consisting of fNVariables independent variables, the known, dependent quantity, and optionally, the square error in the dependent quantity, to the training sample to be used for the parameterization. ;  ; virtual void AddTestRow (const Double_t *x, Double_t D, Double_t E=0);  Add a row consisting of fNVariables independent variables, the known, dependent quantity, and optionally, the square error in the dependent quantity, to the test sample to be used for the test of the parameterization. ;  ; void Browse (TBrowser *b) override;  Browse the TMultiDimFit object in the TBrowser. ;  ; void Clear (Option_t *option="""") override;  Clear internal structures and variables. ;  ; void Draw (Option_t *=""d"") override;  Default Draw method for all objects. ;  ; virtual Double_t Eval (const Double_t *x, const Double_t *coeff=nullptr) const;  Evaluate parameterization at point x. ;  ; virtual Double_t EvalError (const Double_t *x, const Double_t *coeff=nullptr) const;  Evaluate parameterization error at point x. ;  ; virtual void FindParameterization (Option_t *option="""");  Find the parameterization. ;  ; virtual void Fit (Option_t *option="""");  Try to fit the found parameterisation to the test sample. ;  ; Double_t GetChi2 () const;  ; const TVectorD * GetCoefficients () const;  ; const TVectorD * GetCoefficientsRMS () const;  ; const TMa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMultiDimFit.html:19349,error,error,19349,doc/master/classTMultiDimFit.html,https://root.cern,https://root.cern/doc/master/classTMultiDimFit.html,1,['error'],['error']
Availability," = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TFileHandler (int fd, int mask);  Create a file descriptor event handler. ;  ; virtual ~TFileHandler ();  ; void Add () override;  Add file event handler to system file handler list. ;  ; int GetFd () const;  ; virtual Bool_t HasReadInterest ();  True if handler is interested in read events. ;  ; virtual Bool_t HasWriteInterest ();  True if handler is interested in write events. ;  ; TClass * IsA () const override;  ; virtual Bool_t IsReadReady () const;  ; virtual Bool_t IsWriteReady () const;  ; Bool_t Notify () override;  Notify when event occurred on descriptor associated with this handler. ;  ; virtual Bool_t ReadNotify ();  Notify when something can be read from the descriptor associated with this handler. ;  ; void Remove () override;  Remove file event handler from system file handler list. ;  ; virtual void ResetReadyMask ();  ; void SetFd (int fd);  ; virtual void SetInterest (Int_t mask);  Set interest mask to 'mask'. ;  ; virtual void SetReadReady ();  ; virtual void SetWriteReady ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; virtual Bool_t WriteNotify ();  Notify when something can be written to the descriptor associated with this handler. ;  ;  Public Member Functions inherited from TSysEvtHandler;  TSysEvtHandler ();  ; virtual ~TSysEvtHandler ();  ; void Activate ();  Activate a system event handler. ;  ; virtual void Activated ();  ; virtual void Added ();  ; void DeActivate ();  De-activate a system event handler. ;  ; virtual void DeActivated ();  ; TClass * IsA () const override;  ; Bool_t IsActive () const;  ; virtual void Notified ();  ; virtual void Removed ();  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFileHandler.html:1998,mask,mask,1998,doc/master/classTFileHandler.html,https://root.cern,https://root.cern/doc/master/classTFileHandler.html,3,['mask'],['mask']
Availability," = -4.0, Double_t reMax = 4.0, Int_t imBins = 1000, Double_t imMin = -4.0, Double_t imMax = 6.0); Allocate and initialize lookup table for interpolated complex error function; for given grid parameters. void cleanup(). RooComplex ITPComplexErrFunc(const RooComplex& z, Int_t nOrder); Return complex error function interpolated from lookup tabel created; by initFastCERF(). Interpolation is performed in Im and Re plane; to specified order. Double_t ITPComplexErrFuncRe(const RooComplex& z, Int_t nOrder); Return real component of complex error function interpolated from; lookup table created by initFastCERF(). Interpolation is performed in; Im and Re plane to specified order. This functions is noticably faster; than ITPComplexErrrFunc().re() because only the real lookup table; is interpolated. Double_t ITPComplexErrFuncIm(const RooComplex& z, Int_t nOrder); Return real component of complex error function interpolated from; lookup table created by initFastCERF(). Interpolation is performed in; Im and Re plane to specified order. This functions is noticably faster; than ITPComplexErrrFunc().im() because only the imaginary lookup table; is interpolated. Double_t interpolate(Double_t* yArr, Int_t nOrder, Double_t x); Interpolate array 'ya' with 'n' elements for 'x' (between 0 and 'n'-1). Double_t interpolate(Double_t* xa, Double_t* ya, Int_t n, Double_t x); Interpolate array 'ya' with 'n' elements for 'xa'. Bool_t loadCache(); Load the complex error function lookup table from the cache file. void storeCache(); Store the complex error function lookup table in the cache file. const char* cacheFileName(); Construct and return the name of the complex error function cache file. Double_t erf(Double_t x). Double_t erfc(Double_t x). virtual ~RooMath(); {}. » Last changed: Mon Dec 7 13:48:13 2009 » Last generated: 2009-12-07 13:48; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMath.html:4676,error,error,4676,root/html526/RooMath.html,https://root.cern,https://root.cern/root/html526/RooMath.html,3,['error'],['error']
Availability," = -4.0, Double_t reMax = 4.0, Int_t imBins = 1000, Double_t imMin = -4.0, Double_t imMax = 6.0); Allocate and initialize lookup table for interpolated complex error function; for given grid parameters. void cleanup(). RooComplex ITPComplexErrFunc(const RooComplex& z, Int_t nOrder); Return complex error function interpolated from lookup tabel created; by initFastCERF(). Interpolation is performed in Im and Re plane; to specified order. Double_t ITPComplexErrFuncRe(const RooComplex& z, Int_t nOrder); Return real component of complex error function interpolated from; lookup table created by initFastCERF(). Interpolation is performed in; Im and Re plane to specified order. This functions is noticably faster; than ITPComplexErrrFunc().re() because only the real lookup table; is interpolated. Double_t ITPComplexErrFuncIm(const RooComplex& z, Int_t nOrder); Return real component of complex error function interpolated from; lookup table created by initFastCERF(). Interpolation is performed in; Im and Re plane to specified order. This functions is noticably faster; than ITPComplexErrrFunc().im() because only the imaginary lookup table; is interpolated. Double_t interpolate(Double_t* yArr, Int_t nOrder, Double_t x); Interpolate array 'ya' with 'n' elements for 'x' (between 0 and 'n'-1). Double_t interpolate(Double_t* xa, Double_t* ya, Int_t n, Double_t x); Interpolate array 'ya' with 'n' elements for 'xa'. Bool_t loadCache(); Load the complex error function lookup table from the cache file. void storeCache(); Store the complex error function lookup table in the cache file. const char* cacheFileName(); Construct and return the name of the complex error function cache file. Double_t erf(Double_t x). Double_t erfc(Double_t x). virtual ~RooMath(); {}. » Last changed: Mon Jul 4 15:23:19 2011 » Last generated: 2011-07-04 15:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooMath.html:4662,error,error,4662,root/html530/RooMath.html,https://root.cern,https://root.cern/root/html530/RooMath.html,3,['error'],['error']
Availability," = -4.0, Double_t reMax = 4.0, Int_t imBins = 1000, Double_t imMin = -4.0, Double_t imMax = 6.0); Allocate and initialize lookup table for interpolated complex error function; for given grid parameters. void cleanup(). RooComplex ITPComplexErrFunc(const RooComplex& z, Int_t nOrder); Return complex error function interpolated from lookup tabel created; by initFastCERF(). Interpolation is performed in Im and Re plane; to specified order. Double_t ITPComplexErrFuncRe(const RooComplex& z, Int_t nOrder); Return real component of complex error function interpolated from; lookup table created by initFastCERF(). Interpolation is performed in; Im and Re plane to specified order. This functions is noticably faster; than ITPComplexErrrFunc().re() because only the real lookup table; is interpolated. Double_t ITPComplexErrFuncIm(const RooComplex& z, Int_t nOrder); Return real component of complex error function interpolated from; lookup table created by initFastCERF(). Interpolation is performed in; Im and Re plane to specified order. This functions is noticably faster; than ITPComplexErrrFunc().im() because only the imaginary lookup table; is interpolated. Double_t interpolate(Double_t* yArr, Int_t nOrder, Double_t x); Interpolate array 'ya' with 'n' elements for 'x' (between 0 and 'n'-1). Double_t interpolate(Double_t* xa, Double_t* ya, Int_t n, Double_t x); Interpolate array 'ya' with 'n' elements for 'xa'. Bool_t loadCache(); Load the complex error function lookup table from the cache file. void storeCache(); Store the complex error function lookup table in the cache file. const char* cacheFileName(); Construct and return the name of the complex error function cache file. Double_t erf(Double_t x). Double_t erfc(Double_t x). virtual ~RooMath(); {}. » Last changed: Sat Oct 9 22:38:43 2010 » Last generated: 2010-10-09 22:38; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooMath.html:4662,error,error,4662,root/html528/RooMath.html,https://root.cern,https://root.cern/root/html528/RooMath.html,3,['error'],['error']
Availability," = -4.0, Double_t reMax = 4.0, Int_t imBins = 1000, Double_t imMin = -4.0, Double_t imMax = 6.0); Allocate and initialize lookup table for interpolated complex error function; for given grid parameters. void cleanup(). RooComplex ITPComplexErrFunc(const RooComplex& z, Int_t nOrder); Return complex error function interpolated from lookup tabel created; by initFastCERF(). Interpolation is performed in Im and Re plane; to specified order. Double_t ITPComplexErrFuncRe(const RooComplex& z, Int_t nOrder); Return real component of complex error function interpolated from; lookup table created by initFastCERF(). Interpolation is performed in; Im and Re plane to specified order. This functions is noticably faster; than ITPComplexErrrFunc().re() because only the real lookup table; is interpolated. Double_t ITPComplexErrFuncIm(const RooComplex& z, Int_t nOrder); Return real component of complex error function interpolated from; lookup table created by initFastCERF(). Interpolation is performed in; Im and Re plane to specified order. This functions is noticably faster; than ITPComplexErrrFunc().im() because only the imaginary lookup table; is interpolated. Double_t interpolate(Double_t* yArr, Int_t nOrder, Double_t x); Interpolate array 'ya' with 'n' elements for 'x' (between 0 and 'n'-1). Double_t interpolate(Double_t* xa, Double_t* ya, Int_t n, Double_t x); Interpolate array 'ya' with 'n' elements for 'xa'. Bool_t loadCache(); Load the complex error function lookup table from the cache file. void storeCache(); Store the complex error function lookup table in the cache file. const char* cacheFileName(); Construct and return the name of the complex error function cache file. Double_t erf(Double_t x). Double_t erfc(Double_t x). virtual ~RooMath(); {}. » Last changed: Thu Nov 3 20:08:36 2011 » Last generated: 2011-11-03 20:08; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMath.html:4662,error,error,4662,root/html532/RooMath.html,https://root.cern,https://root.cern/root/html532/RooMath.html,6,['error'],['error']
Availability," = -inf, ymax = +inf). option: this is the option for the computation of the y error of the profile ( TProfile::GetBinError ); possible values for the options are:. ' ' (Default) the bin errors are the standard error on the mean of Y = S(Y)/SQRT(N); where S(Y) is the standard deviation (RMS) of the Y data in the bin; and N is the number of bin entries (from TProfile::GetBinEntries(ibin) ); (i.e the errors are the standard error on the bin content of the profile). 's' Errors are the standard deviation of Y, S(Y). 'i' Errors are S(Y)/SQRT(N) (standard error on the mean as in the default); The only difference is only when the standard deviation in Y is zero.; In this case the error a standard deviation = 1/SQRT(12) is assumed and the error is; 1./SQRT(12*N).; This approximation assumes that the Y values are integer (e.g. ADC counts); and have an implicit uncertainty of y +/- 0.5. With the assumption that the probability that y; takes any value between y-0.5 and y+0.5 is uniform, its standard error is 1/SQRT(12). 'g' Errors are 1./SQRT(W) where W is the sum of the weights for the bin J; W is obtained as from TProfile::GetBinEntries(ibin); This errors corresponds to the standard deviation of weighted mean where each; measurement Y is uncorrelated and has an error sigma, which is expressed in the; weight used to fill the Profile: w = 1/sigma^2; The resulting error in TProfile is then 1./SQRT( Sum(1./sigma^2) ). TProfile(const TProfile& profile); Copy constructor. Bool_t Add(TF1* h1, Double_t c1 = 1, Option_t* option = """"); Performs the operation: this = this + c1*f1. Bool_t Add(const TH1* h1, Double_t c1 = 1); Performs the operation: this = this + c1*h1. Bool_t Add(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1); -*-*Replace contents of this profile by the addition of h1 and h2; *-* =============================================================. this = c1*h1 + c2*h2. c1 and c2 are considered as weights applied to the two summed profiles.; The operation acts ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProfile.html:31573,error,error,31573,root/html534/TProfile.html,https://root.cern,https://root.cern/root/html534/TProfile.html,6,['error'],['error']
Availability," = 0) const; voidzeroEvalCount(). protected:. voidapplyCovarianceMatrix(TMatrixDSym& V); voidbackProp(); voidclearPdfParamAsymErr(Int_t index); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; Int_tgetNPar() const; Double_tgetPdfParamErr(Int_t index); Double_tgetPdfParamVal(Int_t index); ofstream*logfile() const; voidTObject::MakeZombie(); Double_t&maxFCN(); voidprofileStart(); voidprofileStop(); voidsaveStatus(const char* label, Int_t status); voidsetPdfParamErr(Int_t index, Double_t value); voidsetPdfParamErr(Int_t index, Double_t loVal, Double_t hiVal); virtual Bool_tsetPdfParamVal(Int_t index, Double_t value, Bool_t verbose = kFALSE); Bool_tsynchronize(Bool_t verbose); voidupdateFloatVec(). private:. RooMinuit(const RooMinuit&). Data Members; public:. enum Strategy { Speed; Balance; Robustness; };; enum PrintLevel { None; Reduced; Normal; ExtraForProblem; Maximum; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. private:. RooArgList*_constParamList; TStopwatch_cumulTimer; Bool_t_doEvalErrorWall; Int_t_evalCounter; TMatrixDSym*_extV; RooArgList*_floatParamList; vector<RooAbsArg*>_floatParamVec; RooAbsReal*_func; Bool_t_handleLocalErrors; RooArgList*_initConstParamList; RooArgList*_initFloatParamList; ofstream*_logfile; Int_t_maxEvalMult; Double_t_maxFCN; Int_t_nPar; Int_t_numBadNLL; Int_t_optConst; Int_t_printEvalErrors; Int_t_printLevel; Bool_t_profile; Int_t_status; vector<std::pair<std::string,int> >_statusHistory; static TVirtualFitter*_theFitter; TStopwatch_timer; Bool_t_verbose; Int_t_warnLevel. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void cleanup(); Cleanup method called by atexit handler installed by RooSentinel; to delete all global heap objects when t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMinuit.html:7267,Robust,Robustness,7267,root/html534/RooMinuit.html,https://root.cern,https://root.cern/root/html534/RooMinuit.html,1,['Robust'],['Robustness']
Availability," = 0); Constructor: check PROOF and load selectors PAR. ~TProofBench(); Destructor. Int_t OpenOutFile(Bool_t wrt = kFALSE, Bool_t verbose = kTRUE); Set the otuput file; Return 0 on success, -1 on error. Int_t SetOutFile(const char* outfile, Bool_t verbose = kTRUE); Set the output file; Return 0 on success, -1 on error. Int_t RunCPU(Long64_t nevents = -1, Int_t start = -1, Int_t stop = -1, Int_t step = -1); Perform the CPU run; Return 0 on success, -1 on error. Int_t RunCPUx(Long64_t nevents = -1, Int_t start = -1, Int_t stop = -1); Perform the CPU run scanning over the number of workers per node; Return 0 on success, -1 on error. void DrawCPU(const char* outfile, const char* opt = ""std:""); Draw the CPU speedup plot.; opt = 'std:' draw standard evt/s plot; 'stdx:' draw standard evt/s plot, 1 worker per node; 'norm:' draw normalized plot; 'normx:' draw normalized plot, 1 worker per node. Int_t RunDataSet(const char* dset = ""BenchDataSet"", Int_t start = 1, Int_t stop = -1, Int_t step = 1); Perform a test using dataset 'dset'; Return 0 on success, -1 on error; Open the file for the results. Int_t RunDataSetx(const char* dset = ""BenchDataSet"", Int_t start = 1, Int_t stop = -1); Perform a test using dataset 'dset' scanning over the number of workers; per node.; Return 0 on success, -1 on error; Open the file for the results. void DrawDataSet(const char* outfile, const char* opt = ""std:"", const char* type = ""mbs""); Draw the CPU speedup plot.; opt = 'std:' Standard scaling plot; 'norm:' Normalized scaling plot; 'stdx:' Standard scaling plot, 1 worker per node; 'normx:' Normalized scaling plot, 1 worker per node; type = 'mbs' MB/s scaling plots (default); 'evts' Event/s scaling plots. Int_t ReleaseCache(const char* dset); Release memory cache for dataset 'dset'; Return 0 on success, -1 on error. Int_t RemoveDataSet(const char* dset); Physically remove the dataset 'dset', i.e. remove the dataset and the files; it describes; Return 0 on success, -1 on error. Int_t MakeDataSet(c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofBench.html:8897,error,error,8897,root/html530/TProofBench.html,https://root.cern,https://root.cern/root/html530/TProofBench.html,1,['error'],['error']
Availability," = 0); RooCFunction1Binding<double,double>(const char* name, const char* title, double(*)(double) _func, RooAbsReal& _x); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooCFunction1Binding_double_double_.html:24656,Error,ErrorLoggingMode,24656,root/html602/RooCFunction1Binding_double_double_.html,https://root.cern,https://root.cern/root/html602/RooCFunction1Binding_double_double_.html,2,['Error'],['ErrorLoggingMode']
Availability," = 0); We try to shrink the cache to the desired size.; With the clenupinterval you can specify the minimum amount of time after; the previous cleanup before the cleanup operation is repeated in; the cache directory. UInt_t SetOpenTimeout(UInt_t timeout); Sets open timeout time (in ms). Returns previous timeout value. UInt_t GetOpenTimeout(); Returns open timeout (in ms). Bool_t SetOnlyStaged(Bool_t onlystaged); Sets only staged flag. Returns previous value of flag.; When true we check before opening the file if it is staged, if not,; the open fails. Bool_t GetOnlyStaged(); Returns staged only flag. Bool_t Matches(const char* name); Return kTRUE if 'url' matches the coordinates of this file.; The check is implementation dependent and may need to be overload; by each TFile implememtation relying on this check.; The default implementation checks the file name only. const TUrl * GetEndpointUrl(const char* name); Get final URL for file being opened asynchronously.; Returns 0 is the information is not yet available. void CpProgress(Long64_t bytesread, Long64_t size, TStopwatch& watch); Print file copy progress. Bool_t Cp(const char* dst, Bool_t progressbar = kTRUE, UInt_t buffersize = 1000000); Allows to copy this file to the dst URL. Returns kTRUE in case of success,; kFALSE otherwise. Bool_t Cp(const char* src, const char* dst, Bool_t progressbar = kTRUE, UInt_t buffersize = 1000000); Allows to copy file from src to dst URL. Returns kTRUE in case of success,; kFALSE otherwise. Bool_t ReadBufferAsync(Long64_t offs, Int_t len); Read specified byte range asynchronously. Actually we tell the kernel; which blocks we are going to read so it can start loading these blocks; in the buffer cache. Int_t GetBytesToPrefetch() const; Max number of bytes to prefetch. By default this is 75% of the; read cache size. But specific TFile implementations may need to change it. Int_t GetCompressionAlgorithm() const. Int_t GetCompressionLevel() const. Int_t GetCompressionSettings() const. EA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFile.html:53766,avail,available,53766,root/html532/TFile.html,https://root.cern,https://root.cern/root/html532/TFile.html,8,['avail'],['available']
Availability," = 0); We try to shrink the cache to the desired size.; With the clenupinterval you can specify the minimum amount of time after; the previous cleanup before the cleanup operation is repeated in; the cache directory. UInt_t SetOpenTimeout(UInt_t timeout); Sets open timeout time (in ms). Returns previous timeout value. UInt_t GetOpenTimeout(); Returns open timeout (in ms). Bool_t SetOnlyStaged(Bool_t onlystaged); Sets only staged flag. Returns previous value of flag.; When true we check before opening the file if it is staged, if not,; the open fails. Bool_t GetOnlyStaged(); Returns staged only flag. Bool_t Matches(const char* name); Return kTRUE if 'url' matches the coordinates of this file.; The check is implementation dependent and may need to be overload; by each TFile implememtation relying on this check.; The default implementation checks the file name only. const TUrl * GetEndpointUrl(const char* name); Get final URL for file being opened asynchronously.; Returns 0 is the information is not yet available. void CpProgress(Long64_t bytesread, Long64_t size, TStopwatch& watch); Print file copy progress. Bool_t Cp(const char* src, const char* dst, Bool_t progressbar = kTRUE, UInt_t buffersize = 1000000); Allows to copy file from src to dst URL. Returns kTRUE in case of success,; kFALSE otherwise. Bool_t ReadBufferAsync(Long64_t offs, Int_t len); Read specified byte range asynchronously. Actually we tell the kernel; which blocks we are going to read so it can start loading these blocks; in the buffer cache. Int_t GetBytesToPrefetch() const; Max number of bytes to prefetch. By default this is 75% of the; read cache size. But specific TFile implementations may need to change it. EAsyncOpenStatus GetAsyncOpenStatus(); { return fAsyncOpenStatus; }. Long64_t DirCreateEntry(TDirectory* ); Interface for text-based TDirectory I/O. { return 0; }. Int_t DirReadKeys(TDirectory* ); { return 0; }. void DirWriteKeys(TDirectory* ); {}. void DirWriteHeader(TDirectory* ); {}. void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFile.html:50979,avail,available,50979,root/html528/TFile.html,https://root.cern,https://root.cern/root/html528/TFile.html,1,['avail'],['available']
Availability," = 0); We try to shrink the cache to the desired size.; With the clenupinterval you can specify the minimum amount of time after; the previous cleanup before the cleanup operation is repeated in; the cache directory. UInt_t SetOpenTimeout(UInt_t timeout); Sets open timeout time (in ms). Returns previous timeout value. UInt_t GetOpenTimeout(); Returns open timeout (in ms). Bool_t SetOnlyStaged(Bool_t onlystaged); Sets only staged flag. Returns previous value of flag.; When true we check before opening the file if it is staged, if not,; the open fails. Bool_t GetOnlyStaged(); Returns staged only flag. Bool_t Matches(const char* name); Return kTRUE if 'url' matches the coordinates of this file.; The check is implementation dependent and may need to be overload; by each TFile implememtation relying on this check.; The default implementation checks the file name only. const TUrl * GetEndpointUrl(const char* name); Get final URL for file being opened asynchronously.; Returns 0 is the information is not yet available. void CpProgress(Long64_t bytesread, Long64_t size, TStopwatch& watch); Print file copy progress. Bool_t Cp(const char* src, const char* dst, Bool_t progressbar = kTRUE, UInt_t buffersize = 1000000); Allows to copy file from src to dst URL. Returns kTRUE in case of success,; kFALSE otherwise. Bool_t ReadBufferAsync(Long64_t offs, Int_t len); Read specified byte range asynchronously. Actually we tell the kernel; which blocks we are going to read so it can start loading these blocks; in the buffer cache. Int_t GetBytesToPrefetch() const; Max number of bytes to prefetch. By default this is 75% of the; read cache size. But specific TFile implementations may need to change it. Int_t GetCompressionAlgorithm() const. Int_t GetCompressionLevel() const. Int_t GetCompressionSettings() const. EAsyncOpenStatus GetAsyncOpenStatus(); { return fAsyncOpenStatus; }. Long64_t DirCreateEntry(TDirectory* ); Interface for text-based TDirectory I/O. { return 0; }. Int_t DirReadKeys",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFile.html:52409,avail,available,52409,root/html530/TFile.html,https://root.cern,https://root.cern/root/html530/TFile.html,1,['avail'],['available']
Availability," = 0); static voidSetDefaultPrecision(double prec); static voidSetDefaultPrintLevel(int level); static voidSetDefaultStrategy(int strat); static voidSetDefaultTolerance(double tol); voidSetErrorDef(double err); voidSetMaxFunctionCalls(unsigned int maxfcn); voidSetMaxIterations(unsigned int maxiter); voidSetMinimizerAlgorithm(const char* type); voidSetMinimizerType(const char* type); voidSetPrecision(double prec); voidSetPrintLevel(int level); voidSetStrategy(int stra); voidSetTolerance(double tol); intStrategy() const; doubleTolerance() const. Data Members; private:. stringfAlgoTypeMinimizer algorithmic specification (Migrad, Minimize, ...); doublefErrorDeferror definition (=1. for getting 1 sigma error for chi2 fits); intfLeveldebug print level ; intfMaxCallsmaximum number of function calls; intfMaxItermaximum number of iterations; stringfMinimTypeMinimizer type (Minuit, Minuit2, etc..; doublefPrecisionprecision of the objective funciton evaluation (value <=0 means left to default); intfStrategyminimizer strategy (used by Minuit); doublefToleranceminimize tolerance to reach solution. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void SetDefaultMinimizer(const char* type, const char* algo = 0); static methods for setting and retrieving the default options. void SetDefaultErrorDef(double up). void SetDefaultTolerance(double tol). void SetDefaultPrecision(double prec). void SetDefaultMaxFunctionCalls(int maxcall). void SetDefaultMaxIterations(int maxiter). void SetDefaultStrategy(int strat). void SetDefaultPrintLevel(int level). const std::string & DefaultMinimizerType(). const std::string & DefaultMinimizerAlgo(). double DefaultErrorDef(). double DefaultTolerance(). double DefaultPrecision(). int DefaultMaxFunctionCalls(). int DefaultMaxIterations(). int DefaultStrategy(). int DefaultPrintLevel(). MinimizerOptions(); constructor using the default options. int PrintLevel() const; non-static methods for retrivieng options ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__MinimizerOptions.html:2431,toler,tolerance,2431,root/html526/ROOT__Math__MinimizerOptions.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__MinimizerOptions.html,1,['toler'],['tolerance']
Availability," = 0); virtual~RooGenFitStudy(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual Bool_tattach(RooWorkspace& w); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual RooAbsStudy*clone(const char* newname = """") const; virtual TObject*RooAbsStudy::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; RooLinkedList*RooAbsStudy::detailedData(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidRooAbsStudy::dump(); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Bool_texecute(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual Bool_tfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooGenFitStudy.html:1520,Error,Error,1520,root/html534/RooGenFitStudy.html,https://root.cern,https://root.cern/root/html534/RooGenFitStudy.html,1,['Error'],['Error']
Availability," = 0)MENU ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """")MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidDrawOnly(Option_t* option = """"); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TList*GetListOfNodes() const; virtual TRotMatrix*GetMatrix() const; virtual const char*TNamed::GetName() const; virtual TNode*GetNode(const char* name) const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*GetOption() const; virtual TNode*GetParent() con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TNode.html:2261,error,error,2261,root/html528/TNode.html,https://root.cern,https://root.cern/root/html528/TNode.html,6,['error'],['error']
Availability," = 0)MENU ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """")MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidDrawOnly(Option_t* option = """"); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; TList*GetListOfNodes() const; virtual TRotMatrix*GetMatrix() const; virtual const char*TNamed::GetName() const; virtual TNode*GetNode(const char* name) const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual const Option_t*GetOption() const; virtual TNode*GetParent",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TNode.html:1931,error,error,1931,root/html602/TNode.html,https://root.cern,https://root.cern/root/html602/TNode.html,4,['error'],['error']
Availability," = 0, Double_t y = 0, Double_t z = 0, Option_t* option = """"); voidCheckShape(TGeoShape* shape, Int_t testNo, Int_t nsamples, Option_t* option); Double_tCheckVoxels(TGeoVolume* vol, TGeoVoxelFinder* voxels, Double_t* xyz, Int_t npoints); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGeoChecker.html:4304,error,error,4304,root/html530/TGeoChecker.html,https://root.cern,https://root.cern/root/html530/TGeoChecker.html,9,['error'],['error']
Availability," = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. voidTSQLServer::ClearError(); virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(); voidTSQLServer::SetError(Int_t code, const char* msg, const char* method = 0). Data Members; public:. enum TSQLServer::ESQLDataTypes { kSQL_NONE; kSQL_CHAR; kSQL_VARCHAR; kSQL_INTEGER; kSQL_FLOAT; kSQL_DOUBLE; kSQL_NUMERIC; kSQL_BINARY; kSQL_TIMESTAMP; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTSQLServer::fDBcurrently selected DB; Int_tTSQLServer::fErrorCodeerror code of last operation; TStringTSQLServer::fErrorMsgerror message of last operation; Bool_tTSQLServer::fErrorOutenable error output; TStringTSQLServer::fHosthost to which we are connected; Int_tTSQLServer::fPortport to which we are connected; TStringTSQLServer::fTypetype of DBMS (MySQL, Oracle, SysBase, ...); static const char*TSQLServer::fgFloatFmt! printf argument for floats and doubles, either ""%f"" or ""%e"" or ""%10f"" and so on. private:. Connection*fConnconnection to Oracle server; Environment*fEnvenvironment of Oracle access; TStringfInfoinfo string with Oracle version information; static const char*fgDatimeFormat! format for converting date and time stamps into string . Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TOracleServer(const char* db, const char* uid, const char* pw); Open a connection to a Oracle DB server. The db arguments should be; of the form ""oracle://connection_identifier[/<database>]"", e.g.:; ""oracle://cmscald.fnal.gov/test"". The uid is the username and pw; the password that should be used for the connection. ~TOracleServer(); Clos",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TOracleServer.html:8736,error,error,8736,root/html528/TOracleServer.html,https://root.cern,https://root.cern/root/html528/TOracleServer.html,1,['error'],['error']
Availability," = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; hcol2->Fill(px,5*py);; }; hcol2->Fill(0,0,-200);; gStyle->SetPalette(1);; hcol2->Draw(""COLZ"");; return c1;; }; The TEXT and TEXTnn Option; For each bin the content is printed. The text attributes are:. text font = current TStyle font (gStyle->SetTextFont()).; text size = 0.02*padheight*markersize (if h is the histogram drawn; with the option ""TEXT"" the marker size can be changed with; h->SetMarkerSize(markersize)).; text color = marker color. By default the format ""g"" is used. This format can be redefined; by calling gStyle->SetPaintTextFormat().; It is also possible to use ""TEXTnn"" in order to draw the text with; the angle nn (0 < nn < 90).; For 2D histograms the text is plotted in the center of each non empty cells.; It is possible to plot empty cells by calling gStyle->SetHistMinimumZero().; For 1D histogram the text is plotted at a y position equal to the bin content.; For 2D histograms when the option ""E"" (errors) is combined with the option; text (""TEXTE""), the error for each bin is also printed. Picture; Source. {; TCanvas *c01 = new TCanvas(""c01"",""c01"",700,400);; c01->Divide(2,1);; TH1F *htext1 = new TH1F(""htext1"",""Option TEXT on 1D histograms "",10,-4,4);; TH2F *htext2 = new TH2F(""htext2"",""Option TEXT on 2D histograms "",10,-4,4,10,-20,20);; Float_t px, py;; for (Int_t i = 0; i < 25000; i++) {; gRandom->Rannor(px,py);; htext1->Fill(px,0.1);; htext2->Fill(px,5*py,0.1);; }; gStyle->SetPaintTextFormat(""4.1f m"");; htext2->SetMarkerSize(1.8);; c01->cd(1);; htext2->Draw(""TEXT45"");; c01->cd(2);; htext1->Draw();; htext1->Draw(""TEXT0 SAME"");; return c01;; }; In the case of profile histograms it is possible to print the number; of entries instead of the bin content. It is enough to combine the; option ""E"" (for entries) with the option ""TEXT"". Picture; Source. {; TCanvas *c02 = new TCanvas(""c02"",""c02"",700,400);; c02->Divide(2,1);; gStyle->SetPaintTextFormat(""g"");. TProfile *profile = new TProfile(""profile"",""profile"",10,0,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THistPainter.html:30207,error,errors,30207,root/html528/THistPainter.html,https://root.cern,https://root.cern/root/html528/THistPainter.html,8,['error'],"['error', 'errors']"
Availability," = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  . Public Member Functions;  TBuffer3D (Int_t type, UInt_t reqPnts=0, UInt_t reqPntsCapacity=0, UInt_t reqSegs=0, UInt_t reqSegsCapacity=0, UInt_t reqPols=0, UInt_t reqPolsCapacity=0);  Destructor. ;  ; virtual ~TBuffer3D ();  Destructor. ;  ; void ClearSectionsValid ();  Clear any sections marked valid. ;  ; UInt_t GetSections (UInt_t mask) const;  ; TClass * IsA () const override;  ; UInt_t NbPnts () const;  ; UInt_t NbPols () const;  ; UInt_t NbSegs () const;  ; Bool_t SectionsValid (UInt_t mask) const;  ; void SetAABoundingBox (const Double_t origin[3], const Double_t halfLengths[3]);  Set fBBVertex in kBoundingBox section to a axis aligned (local) BB using supplied origin and box half lengths. ;  ; void SetLocalMasterIdentity ();  Set kRaw tessellation section of buffer with supplied sizes. ;  ; Bool_t SetRawSizes (UInt_t reqPnts, UInt_t reqPntsCapacity, UInt_t reqSegs, UInt_t reqSegsCapacity, UInt_t reqPols, UInt_t reqPolsCapacity);  Set kRaw tessellation section of buffer with supplied sizes. ;  ; void SetSectionsValid (UInt_t mask);  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ; Int_t Type () const;  ;  Public Member Functions inherited from TObject;  TObject ();  TObject constructor. ;  ;  TObject (const TObject &object);  TObject copy ctor. ;  ; virtual ~TObject ();  TObject destructor. ;  ; void AbstractMethod (const char *method) const;  Use this method to implement an ""abs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBuffer3D.html:10826,mask,mask,10826,doc/master/classTBuffer3D.html,https://root.cern,https://root.cern/doc/master/classTBuffer3D.html,2,['mask'],['mask']
Availability," = 1 minimal compression level but fast. compress = 9 maximal compression level but slow. Note that the compression level may be changed at any time.; The new compression level will only apply to newly written objects.; The function TFile::Map() shows the compression factor; for each object written to this file.; The function TFile::GetCompressionFactor returns the global; compression factor for this file. In case the file does not exist or is not a valid ROOT file,; it is made a Zombie. One can detect this situation with a code like:; TFile f(""file.root"");; if (f.IsZombie()) {; cout << ""Error opening file"" << endl;; exit(-1);; }. When opening the file, the system checks the validity of this directory.; If something wrong is detected, an automatic Recovery is performed. In; this case, the file is scanned sequentially reading all logical blocks; and attempting to rebuild a correct directory (see TFile::Recover).; One can disable the automatic recovery procedure when reading one; or more files by setting the environment variable ""TFile::Recover 0""; in the system.rootrc file. TFile(const TFile& ); TFile objects can not be copied. ~TFile(); File destructor. void Init(Bool_t create); Initialize a TFile object.; TFile implementations providing asynchronous open functionality need to; override this method to run the appropriate checks before calling this; standard initialization part. See TXNetFile::Init for an example. void Close(Option_t* option = """"); Close a file.; If option == ""R"", all TProcessIDs referenced by this file are deleted.; Calling TFile::Close(""R"") might be necessary in case one reads a long list; of files having TRef, writing some of the referenced objects or TRef; to a new file. If the TRef or referenced objects of the file being closed; will not be referenced again, it is possible to minimize the size; of the TProcessID data structures in memory by forcing a delete of; the unused TProcessID. TKey* CreateKey(TDirectory* mother, const TObject* obj, const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFile.html:26316,recover,recovery,26316,root/html528/TFile.html,https://root.cern,https://root.cern/root/html528/TFile.html,1,['recover'],['recovery']
Availability," = 1.0;; 99}; 100 ; 101LorentzRotation::LorentzRotation(RotationY const & r) {; 102 // construct from RotationY; 103 Scalar s = r.SinAngle();; 104 Scalar c = r.CosAngle();; 105 fM[kXX] = c ; fM[kXY] = 0.0; fM[kXZ] = s ; fM[kXT] = 0.0;; 106 fM[kYX] = 0.0; fM[kYY] = 1.0; fM[kYZ] = 0.0; fM[kYT] = 0.0;; 107 fM[kZX] = -s ; fM[kZY] = 0.0; fM[kZZ] = c ; fM[kZT] = 0.0;; 108 fM[kTX] = 0.0; fM[kTY] = 0.0; fM[kTZ] = 0.0; fM[kTT] = 1.0;; 109}; 110 ; 111LorentzRotation::LorentzRotation(RotationZ const & r) {; 112 // construct from RotationX; 113 Scalar s = r.SinAngle();; 114 Scalar c = r.CosAngle();; 115 fM[kXX] = c ; fM[kXY] = -s ; fM[kXZ] = 0.0; fM[kXT] = 0.0;; 116 fM[kYX] = s ; fM[kYY] = c ; fM[kYZ] = 0.0; fM[kYT] = 0.0;; 117 fM[kZX] = 0.0; fM[kZY] = 0.0; fM[kZZ] = 1.0; fM[kZT] = 0.0;; 118 fM[kTX] = 0.0; fM[kTY] = 0.0; fM[kTZ] = 0.0; fM[kTT] = 1.0;; 119}; 120 ; 121void; 122LorentzRotation::Rectify() {; 123 // Assuming the representation of this is close to a true Lorentz Rotation,; 124 // but may have drifted due to round-off error from many operations,; 125 // this forms an ""exact"" orthosymplectic matrix for the Lorentz Rotation; 126 // again.; 127 ; 128 typedef LorentzVector< PxPyPzE4D<Scalar> > FourVector;; 129 if (fM[kTT] <= 0) {; 130 GenVector::Throw (; 131 ""LorentzRotation:Rectify(): Non-positive TT component - cannot rectify"");; 132 return;; 133 }; 134 FourVector t ( fM[kTX], fM[kTY], fM[kTZ], fM[kTT] );; 135 Scalar m2 = t.M2();; 136 if ( m2 <= 0 ) {; 137 GenVector::Throw (; 138 ""LorentzRotation:Rectify(): Non-timelike time row - cannot rectify"");; 139 return;; 140 }; 141 t /= std::sqrt(m2);; 142 FourVector z ( fM[kZX], fM[kZY], fM[kZZ], fM[kZT] );; 143 z = z - z.Dot(t)*t;; 144 m2 = z.M2();; 145 if ( m2 >= 0 ) {; 146 GenVector::Throw (; 147 ""LorentzRotation:Rectify(): Non-spacelike Z row projection - ""; 148 ""cannot rectify"");; 149 return;; 150 }; 151 z /= std::sqrt(-m2);; 152 FourVector y ( fM[kYX], fM[kYY], fM[kYZ], fM[kYT] );; 153 y = y - y.Dot(t)*t - y.Dot(z)*z;; 15",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/LorentzRotation_8cxx_source.html:4397,error,error,4397,doc/master/LorentzRotation_8cxx_source.html,https://root.cern,https://root.cern/doc/master/LorentzRotation_8cxx_source.html,1,['error'],['error']
Availability," = 10 ) Filter ( W = 3 , H = 3 ) Output = ( 100 , 10 , 10 , 256 ) Activation Function = Relu; Layer 3 POOL Layer: ( W = 15 , H = 15 , D = 10 ) Filter ( W = 2 , H = 2 ) Output = ( 100 , 10 , 10 , 225 ) ; Layer 4 RESHAPE Layer Input = ( 10 , 15 , 15 ) Output = ( 1 , 100 , 2250 ) ; Layer 5 DENSE Layer: ( Input = 2250 , Width = 100 ) Output = ( 1 , 100 , 100 ) Activation Function = Relu; Layer 6 DENSE Layer: ( Input = 100 , Width = 1 ) Output = ( 1 , 100 , 1 ) Activation Function = Identity; : Using 1280 events for training and 320 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 13.2274; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 1.28042 0.721714 1.40039 0.112743 931.931 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.744775 0.695682 1.39558 0.112793 935.465 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.694124 0.686492 1.40809 0.112179 925.986 0; : 4 | 0.679848 0.699399 1.40006 0.109116 929.552 1; : 5 Minimum Test error found - save the configuration ; : 5 | 0.670651 0.682024 1.40299 0.112234 929.685 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.652355 0.665731 1.40537 0.11341 928.823 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.647198 0.663594 1.40991 0.11661 927.858 0; : 8 | 0.624112 0.674678 1.40336 0.112656 929.728 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.597489 0.647076 1.41653 0.119736 925.361 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.561268 0.630455 1.40233 0.116045 932.919 0; : ; : Elapsed time for training with 1600 events: 14.2 sec ; : E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:14401,error,error,14401,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,1,['error'],['error']
Availability," = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; TGraphBentErrors *gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""TGraphBentErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; return c45;; }; TGraphPolar options; The drawing options for the polar graphs are the following:. ""O""; Polar labels are drawn orthogonally to the polargram radius. ""P""; Polymarker are drawn at each point position. ""E""; Draw error bars. ""F""; Draw fill area (closed polygon). ""A""; Force axis redrawing even if a polargram already exists. ""N""; Disable the display of the polar labels. Picture; Source. {; TCanvas *c46 = new TCanvas(""c46"",""c46"",500,500);; TGraphPolar * grP1 = new TGraphPolar();; grP1->SetTitle(""TGraphPolar example"");. grP1->SetPoint(0, (1*TMath::Pi())/4., 0.05);; grP1->SetPoint(1, (2*TMath::Pi())/4., 0.10);; grP1->SetPoint(2, (3*TMath::Pi())/4., 0.15);; grP1->SetPoint(3, (4*TMath::Pi())/4., 0.20);; grP1->SetPoint(4, (5*TMath::Pi())/4., 0.25);; grP1->SetPoint(5, (6*TMath::Pi())/4., 0.30);; grP1->SetPoint(6, (7*TMath::Pi())/4., 0.35);; grP1->SetPoint(7, (8*TMath::Pi())/4., 0.40);. grP1->SetMarkerStyle(20);; grP1->SetMarkerSize(1.);; grP1->SetMarkerColor(4);; grP1->SetLineColor(4);; grP1->Draw(""ALP"");. // Update, otherwise GetPolargram returns 0; c46->Update();; grP1->GetPolargram()->SetToRadian();. return c46;; }; . Function Members (Methods); public:. TGraphPainter(); TGraphPainter(const TGraphPai",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphPainter.html:12543,error,error,12543,root/html532/TGraphPainter.html,https://root.cern,https://root.cern/root/html532/TGraphPainter.html,4,['error'],['error']
Availability," = 10;; Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; TGraphBentErrors *gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""TGraphBentErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; return c45;; }; TGraphPolar options; The drawing options for the polar graphs are the following:. ""O""; Polar labels are drawn orthogonally to the polargram radius. ""P""; Polymarker are drawn at each point position. ""E""; Draw error bars. ""F""; Draw fill area (closed polygon). ""A""; Force axis redrawing even if a polargram already exists. ""N""; Disable the display of the polar labels. Picture; Source. {; TCanvas *c46 = new TCanvas(""c46"",""c46"",500,500);; TGraphPolar * grP1 = new TGraphPolar();; grP1->SetTitle(""TGraphPolar example"");. grP1->SetPoint(0, (1*TMath::Pi())/4., 0.05);; grP1->SetPoint(1, (2*TMath::Pi())/4., 0.10);; grP1->SetPoint(2, (3*TMath::Pi())/4., 0.15);; grP1->SetPoint(3, (4*TMath::Pi())/4., 0.20);; grP1->SetPoint(4, (5*TMath::Pi())/4., 0.25);; grP1->SetPoint(5, (6*TMath::Pi())/4., 0.30);; grP1->SetPoint(6, (7*TMath::Pi())/4., 0.35);; grP1->SetPoint(7, (8*TMath::Pi())/4., 0.40);. grP1->SetMarkerStyle(20);; grP1->SetMarkerSize(1.);; grP1->SetMarkerColor(4);; grP1->SetLineColor(4);; grP1->Draw(""ALP"");. // Update, otherwise GetPolargram returns 0; c46->Update();; grP1->GetPolargram()->SetToRadian();. return c46;; }; . Function Members (Methods); public:. virtual~TGraphPainter(); voidTObject::Abstract",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGraphPainter.html:12544,error,error,12544,root/html602/TGraphPainter.html,https://root.cern,https://root.cern/root/html602/TGraphPainter.html,4,['error'],['error']
Availability," = 1;; 4469 (i < 32) && (tstr[i] != 0) && (tstr[i] != ',');; 4470 i++) {; 4471 /* buffer overrun is not possible here, since; 4472 * (i < 32) && (len < sizeof(path_buf) - 32); 4473 * ==> (i + len) < sizeof(path_buf) */; 4474 path_buf[len + i - 1] = tstr[i];; 4475 }; 4476 /* buffer overrun is not possible here, since; 4477 * (i <= 32) && (len < sizeof(path_buf) - 32); 4478 * ==> (i + len) <= sizeof(path_buf) */; 4479 path_buf[len + i - 1] = 0;; 4480 ; 4481 if (mg_stat(conn, path_buf, &error_page_file.stat)) {; 4482 DEBUG_TRACE(""Check error page %s - found"",; 4483 path_buf);; 4484 page_handler_found = 1;; 4485 break;; 4486 }; 4487 DEBUG_TRACE(""Check error page %s - not found"",; 4488 path_buf);; 4489 ; 4490 /* Continue with the next file extenstion from the; 4491 * configuration (if there is a next one). */; 4492 tstr = strchr(tstr + i, '.');; 4493 }; 4494 }; 4495 }; 4496 ; 4497 if (page_handler_found) {; 4498 conn->in_error_handler = 1;; 4499 handle_file_based_request(conn, path_buf, &error_page_file);; 4500 conn->in_error_handler = 0;; 4501 return 0;; 4502 }; 4503#endif /* NO_FILESYSTEMS */; 4504 }; 4505 ; 4506 /* No custom error page. Send default error page. */; 4507 conn->must_close = 1;; 4508 mg_response_header_start(conn, status);; 4509 send_no_cache_header(conn);; 4510 send_additional_header(conn);; 4511 if (has_body) {; 4512 mg_response_header_add(conn,; 4513 ""Content-Type"",; 4514 ""text/plain; charset=utf-8"",; 4515 -1);; 4516 }; 4517 mg_response_header_send(conn);; 4518 ; 4519 /* HTTP responses 1xx, 204 and 304 MUST NOT send a body */; 4520 if (has_body) {; 4521 /* For other errors, send a generic error message. */; 4522 const char *status_text = mg_get_response_code_text(conn, status);; 4523 mg_printf(conn, ""Error %d: %s\n"", status, status_text);; 4524 mg_write(conn, errmsg_buf, strlen(errmsg_buf));; 4525 ; 4526 } else {; 4527 /* No body allowed. Close the connection. */; 4528 DEBUG_TRACE(""Error %i"", status);; 4529 }; 4530 }; 4531 return 0;; 4532}; 4533 ; 453",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:134756,error,error,134756,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability," = 1;; 4470 (i < 32) && (tstr[i] != 0) && (tstr[i] != ',');; 4471 i++) {; 4472 /* buffer overrun is not possible here, since; 4473 * (i < 32) && (len < sizeof(path_buf) - 32); 4474 * ==> (i + len) < sizeof(path_buf) */; 4475 path_buf[len + i - 1] = tstr[i];; 4476 }; 4477 /* buffer overrun is not possible here, since; 4478 * (i <= 32) && (len < sizeof(path_buf) - 32); 4479 * ==> (i + len) <= sizeof(path_buf) */; 4480 path_buf[len + i - 1] = 0;; 4481 ; 4482 if (mg_stat(conn, path_buf, &error_page_file.stat)) {; 4483 DEBUG_TRACE(""Check error page %s - found"",; 4484 path_buf);; 4485 page_handler_found = 1;; 4486 break;; 4487 }; 4488 DEBUG_TRACE(""Check error page %s - not found"",; 4489 path_buf);; 4490 ; 4491 /* Continue with the next file extenstion from the; 4492 * configuration (if there is a next one). */; 4493 tstr = strchr(tstr + i, '.');; 4494 }; 4495 }; 4496 }; 4497 ; 4498 if (page_handler_found) {; 4499 conn->in_error_handler = 1;; 4500 handle_file_based_request(conn, path_buf, &error_page_file);; 4501 conn->in_error_handler = 0;; 4502 return 0;; 4503 }; 4504#endif /* NO_FILESYSTEMS */; 4505 }; 4506 ; 4507 /* No custom error page. Send default error page. */; 4508 conn->must_close = 1;; 4509 mg_response_header_start(conn, status);; 4510 send_no_cache_header(conn);; 4511 send_additional_header(conn);; 4512 if (has_body) {; 4513 mg_response_header_add(conn,; 4514 ""Content-Type"",; 4515 ""text/plain; charset=utf-8"",; 4516 -1);; 4517 }; 4518 mg_response_header_send(conn);; 4519 ; 4520 /* HTTP responses 1xx, 204 and 304 MUST NOT send a body */; 4521 if (has_body) {; 4522 /* For other errors, send a generic error message. */; 4523 const char *status_text = mg_get_response_code_text(conn, status);; 4524 mg_printf(conn, ""Error %d: %s\n"", status, status_text);; 4525 mg_write(conn, errmsg_buf, strlen(errmsg_buf));; 4526 ; 4527 } else {; 4528 /* No body allowed. Close the connection. */; 4529 DEBUG_TRACE(""Error %i"", status);; 4530 }; 4531 }; 4532 return 0;; 4533}; 4534 ; 453",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:134788,error,error,134788,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability," = 50 ) Output = ( 1 , 100 , 50 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 50 , Width = 10 ) Output = ( 1 , 100 , 10 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 10 , Width = 4 ) Output = ( 1 , 100 , 4 ) Activation Function = Identity; : Using 3200 events for training and 800 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.691476; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.605916 0.542204 0.0761789 0.00657979 45977.6 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.512732 0.499825 0.0771995 0.00657724 45311.5 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.477495 0.458718 0.0776312 0.00665553 45085.9 0; : 4 Minimum Test error found - save the configuration ; : 4 | 0.438338 0.418147 0.0780597 0.00669006 44837 0; : 5 Minimum Test error found - save the configuration ; : 5 | 0.407569 0.391703 0.0786075 0.00678976 44557.2 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.387736 0.373696 0.0792581 0.00678916 44156.9 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.373399 0.360485 0.0791536 0.00677002 44208.9 0; : 8 Minimum Test error found - save the configuration ; : 8 | 0.362792 0.352336 0.0796639 0.00682572 43933 0; : 9 Minimum Test error found - save the configuration ; : 9 | 0.353594 0.340526 0.0805399 0.00700876 43519 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.345712 0.336826 0.080966 0.0069933 43259.2 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.338399 0.329567 0.0802544 0.00691181 43630.9 0; : 12 Minimum Test error fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:15038,error,error,15038,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['error'],['error']
Availability," = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 64 ) Output = ( 1 , 128 , 64 ) Activation Function = Tanh; Layer 4 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 128 , 1 ) Activation Function = Identity; : Using 11200 events for training and 2800 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 1.171; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.66619 0.628056 0.587341 0.0468945 20605.2 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.605139 0.593298 0.586597 0.0468674 20632.5 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.581823 0.587355 0.586416 0.0468644 20639.4 0; : 4 | 0.575813 0.593823 0.586862 0.0466947 20615.8 1; : 5 Minimum Test error found - save the configuration ; : 5 | 0.572257 0.578309 0.587324 0.0469531 20608.1 0; : 6 | 0.567347 0.582461 0.586969 0.0467966 20615.6 1; : 7 Minimum Test error found - save the configuration ; : 7 | 0.564553 0.577241 0.588162 0.0470086 20578.3 0; : 8 | 0.56278 0.582039 0.588324 0.0468355 20565.5 1; : 9 | 0.559377 0.582454 0.588676 0.0469029 20554.7 2; : 10 | 0.55743 0.581686 0.590386 0.0469245 20490.9 3; : 11 | 0.555638 0.57854 0.591068 0.0469776 20467.2 4; : 12 | 0.556914 0.579893 0.589121 0.0470111 20542 5; : 13 | 0.553226 0.579356 0.590241 0.0470372 20500.6 6; : 14 Minimum Test error found - save the configuration ; : 14 | 0.551359 0.575116 0.590392 0.0472515 20503 0; : 15 | 0.550484 0.575412 0.59006 0.0471061 20510 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html:24430,error,error,24430,doc/master/TMVA__Higgs__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__Higgs__Classification_8C.html,1,['error'],['error']
Availability," = HistFactory ; [#1] INFO:Integration -- RooRealIntegral::ctor(g_Int[x]) Constructing integral of function g over observables(x) with normalization () with range identifier <none>; [#1] INFO:Integration -- g: Observable x is suitable for analytical integration (if supported by p.d.f); [#1] INFO:Integration -- g: Function integrated observables (x) internally with code 1; [#1] INFO:Integration -- g: Observables (x) are analytically integrated with code 1; RooRealIntegral::g_Int[x][ Int gd[Ana](x) ] = 2.50663; Active Message streams; [0] MinLevel = PROGRESS Topic = Generation Minimization Plotting Fitting Integration LinkStateMgmt Eval Caching Optimization ObjectHandling InputArguments Tracing Contents DataHandling NumericIntegration FastEvaluations ; [1] MinLevel = INFO Topic = Minimization Plotting Fitting Integration Eval Caching ObjectHandling InputArguments DataHandling NumericIntegration ; [2] MinLevel = INFO Topic = HistFactory ; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for f: using 0.1; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for m: using 2; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for p0: using 0.005; [#0] WARNING:Minimization -- RooAbsMinimizerFcn::synchronize: WARNING: no initial error estimate available for s: using 2; Minuit2Minimizer: Minimize with max-calls 2000 convergence for edm < 1 strategy 1; p0=0.01, ; prevFCN = 31.75882326 f=0.501, ; prev",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf506__msgservice_8py.html:5441,error,error,5441,doc/master/rf506__msgservice_8py.html,https://root.cern,https://root.cern/doc/master/rf506__msgservice_8py.html,3,"['avail', 'error']","['available', 'error']"
Availability," = Identity; : Using 1280 events for training and 320 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 13.2274; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 1.28042 0.721714 1.40039 0.112743 931.931 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.744775 0.695682 1.39558 0.112793 935.465 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.694124 0.686492 1.40809 0.112179 925.986 0; : 4 | 0.679848 0.699399 1.40006 0.109116 929.552 1; : 5 Minimum Test error found - save the configuration ; : 5 | 0.670651 0.682024 1.40299 0.112234 929.685 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.652355 0.665731 1.40537 0.11341 928.823 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.647198 0.663594 1.40991 0.11661 927.858 0; : 8 | 0.624112 0.674678 1.40336 0.112656 929.728 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.597489 0.647076 1.41653 0.119736 925.361 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.561268 0.630455 1.40233 0.116045 932.919 0; : ; : Elapsed time for training with 1600 events: 14.2 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_CNN_CPU : [dataset] : Evaluation of TMVA_CNN_CPU on training sample (1600 events); : Elapsed time for evaluation of 1600 events: 0.629 sec ; : Creating xml weight file: ␛[0;36mdataset/weights/TMVA_CNN_Classification_TMVA_CNN_CPU.weights.xml␛[0m; : Creating standalone class: ␛[0;36mdataset/weights/TMVA_CNN_Classification_TMVA_CNN_CPU.class.C␛[0m; Factory : Training finished; : ; Factory : Train method: P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:14884,error,error,14884,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,1,['error'],['error']
Availability," = ROOT.TCanvas(); c1.Divide(ntime, 2); for j in range(ntime):; c1.cd(j + 1); v1[j].Draw(); for j in range(ntime):; c1.cd(ntime + j + 1); v2[j].Draw(); ; ROOT.gPad.Update(); ; if n > 1:; sgn.Write(); bkg.Write(); sgn.Print(); bkg.Print(); f.Close(); ; ; ## macro for performing a classification using a Recurrent Neural Network; ## @param use_type; ## use_type = 0 use Simple RNN network; ## use_type = 1 use LSTM network; ## use_type = 2 use GRU; ## use_type = 3 build 3 different networks with RNN, LSTM and GRU; ; ; use_type = 1; ninput = 30; ntime = 10; batchSize = 100; maxepochs = 10; ; nTotEvts = 2000 # total events to be generated for signal or background; ; useKeras = True; ; useTMVA_RNN = True; useTMVA_DNN = True; useTMVA_BDT = False; ; tf_spec = importlib.util.find_spec(""tensorflow""); if tf_spec is None:; useKeras = False; ROOT.Warning(""TMVA_RNN_Classificaton"",""Skip using Keras since tensorflow is not installed""); ; ; rnn_types = [""RNN"", ""LSTM"", ""GRU""]; use_rnn_type = [1, 1, 1]; ; if 0 <= use_type < 3:; use_rnn_type = [0, 0, 0]; use_rnn_type[use_type] = 1; ; useGPU = True # use GPU for TMVA if available; ; useGPU = ""tmva-gpu"" in ROOT.gROOT.GetConfigFeatures(); useTMVA_RNN = (""tmva-cpu"" in ROOT.gROOT.GetConfigFeatures()) or useGPU; ; if useTMVA_RNN:; ROOT.Warning(; ""TMVA_RNN_Classification"",; ""TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for RNN"",; ); ; archString = ""GPU"" if useGPU else ""CPU""; ; writeOutputFile = True; ; rnn_type = ""RNN""; ; if ""tmva-pymva"" in ROOT.gROOT.GetConfigFeatures():; TMVA.PyMethodBase.PyInitialize(); else:; useKeras = False; ; ; ; inputFileName = ""time_data_t10_d30.root""; ; fileDoesNotExist = ROOT.gSystem.AccessPathName(inputFileName); ; # if file does not exists create it; if fileDoesNotExist:; MakeTimeData(nTotEvts, ntime, ninput); ; ; inputFile = TFile.Open(inputFileName); if inputFile is None:; raise ROOT.Error(""Error opening input file %s - exit"", inputFileName.Data()); ; ; print(""--- RNNClass",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html:52984,avail,available,52984,doc/master/TMVA__RNN__Classification_8py.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8py.html,1,['avail'],['available']
Availability," = RooCmdArg()); static Bool_tanyDebug(); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; static voidcleanup(); virtual voidTObject::Clear(Option_t* = """"); voidclearErrorCount(); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; voiddeleteStream(Int_t id); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; Int_terrorCount() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; RooMsgService::StreamConfig&getStream(Int_t id); Bool_tgetStreamStatus(Int_t id) const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; RooFit::MsgLevelglobalKillBelow() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMsgService.html:2806,error,error,2806,root/html526/RooMsgService.html,https://root.cern,https://root.cern/root/html526/RooMsgService.html,1,['error'],['error']
Availability," = Tanh; Layer 3 DENSE Layer: ( Input = 64 , Width = 1 ) Output = ( 1 , 100 , 1 ) Activation Function = Identity; : Using 2560 events for training and 640 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.70799; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.70053 0.692869 0.629389 0.0419042 4255.43 0; : 2 | 0.694153 0.694394 0.642643 0.0421501 4163.24 1; : 3 | 0.689625 0.697522 0.642119 0.0416746 4163.58 2; : 4 | 0.681203 0.694822 0.637781 0.0412238 4190.71 3; : 5 Minimum Test error found - save the configuration ; : 5 | 0.673678 0.681248 0.623882 0.0409529 4288.69 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.660284 0.667264 0.616834 0.0410715 4342.07 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.640131 0.636981 0.607427 0.0404816 4409.59 0; : 8 | 0.616397 0.638352 0.60791 0.0403928 4405.16 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.599679 0.608826 0.606268 0.0407993 4421.11 0; : 10 Minimum Test error found - save the configuration ; : 10 | 0.585295 0.60026 0.604906 0.0402508 4427.48 0; : 11 Minimum Test error found - save the configuration ; : 11 | 0.568589 0.592822 0.598106 0.0406425 4484.6 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.559657 0.589421 0.600393 0.0404151 4464.46 0; : 13 Minimum Test error found - save the configuration ; : 13 | 0.552318 0.583187 0.601709 0.0405559 4455.11 0; : 14 Minimum Test error found - save the configuration ; : 14 | 0.540541 0.58147 0.593964 0.0401674 4514.29 0; : 15 Minimum Test error found - save the configuration ; : 15 | 0.532596 0.581192 0.58963",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:15910,error,error,15910,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['error'],['error']
Availability," = binwidthx*n/4;; 437 ; 438 if (rmsy > 0); 439 rmsy = std::sqrt(rmsy);; 440 else; 441 rmsy = binwidthy*n/4;; 442 ; 443 ; 444 //if the distribution is really gaussian, the best approximation; 445 //is binwidx*allcha/(sqrtpi*rmsx); 446 //However, in case of non-gaussian tails, this underestimates; 447 //the normalisation constant. In this case the maximum value; 448 //is a better approximation.; 449 //We take the average of both quantities; 450 ; 451 double constant = 0.5 * (valmax+ binwidthx*allcha/(sqrtpi*rmsx))*; 452 (valmax+ binwidthy*allcha/(sqrtpi*rmsy));; 453 ; 454 f1->SetParameter(0,constant);; 455 f1->SetParameter(1,meanx);; 456 f1->SetParameter(2,rmsx);; 457 f1->SetParLimits(2,0,10*rmsx);; 458 f1->SetParameter(3,meany);; 459 f1->SetParameter(4,rmsy);; 460 f1->SetParLimits(4,0,10*rmsy);; 461 ; 462#ifdef DEBUG; 463 std::cout << ""2D Gaussian initial par values""; 464 << constant << "" ""; 465 << meanx << "" ""; 466 << rmsx; 467 << meany << "" ""; 468 << rmsy; 469 << std::endl;; 470#endif; 471 ; 472}; 473 ; 474// filling fit data from TGraph objects; 475 ; 476BinData::ErrorType GetDataType(const TGraph * gr, DataOptions & fitOpt) {; 477 // get type of data for TGraph objects; 478 double *ex = gr->GetEX();; 479 double *ey = gr->GetEY();; 480 double * eyl = gr->GetEYlow();; 481 double * eyh = gr->GetEYhigh();; 482 ; 483 ; 484 // default case for graphs (when they have errors); 485 BinData::ErrorType type = BinData::kValueError;; 486 // if all errors are zero set option of using errors to 1; 487 if (fitOpt.fErrors1 || ( ey == nullptr && ( eyl == nullptr || eyh == nullptr ) ) ) {; 488 type = BinData::kNoError;; 489 }; 490 // need to treat case when all errors are zero; 491 // note that by default fitOpt.fCoordError is true; 492 else if ( ex != nullptr && fitOpt.fCoordErrors) {; 493 // check that all errors are not zero; 494 int i = 0;; 495 while (i < gr->GetN() && type != BinData::kCoordError) {; 496 if (ex[i] > 0) type = BinData::kCoordError;; 497 ++i;; 498 }; 499 }; 500 ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitInterface_8cxx_source.html:15545,error,errors,15545,doc/master/HFitInterface_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitInterface_8cxx_source.html,3,['error'],['errors']
Availability," = dynamic_cast<Chi2GradFunction*>(f);; 624// if (chi2gradfunc) return &(chi2gradfunc->Data());; 625// PoissonLLGradFunction * pllgradfunc = dynamic_cast<PoissonLLFunction*>(f);; 626// if (pllgradfunc) return &(pllgradfunc->Data());; 627// MATH_WARN_MSG(""FitResult::GetFitBinData"",""Cannot return fit bin data set if objective function is not of a known type"");; 628// return nullptr;; 629// }; 630 ; 631const BinData * FitResult::FittedBinData() const {; 632 return dynamic_cast<const BinData*> ( fFitData.get() );; 633}; 634 ; 635////////////////////////////////////////////////////////////////////////////////; 636/// Scan parameter ipar between value of xmin and xmax; 637/// A array for x and y points should be provided; 638 ; 639bool FitResult::Scan(unsigned int ipar, unsigned int &npoints, double *pntsx, double *pntsy, double xmin, double xmax); 640{; 641 if (!pntsx || !pntsy || !npoints); 642 return false;; 643 ; 644 if (!fMinimizer) {; 645 MATH_ERROR_MSG(""FitResult::Scan"", ""Minimizer is not available - cannot Scan"");; 646 return false;; 647 }; 648 ; 649 return fMinimizer->Scan(ipar, npoints, pntsx, pntsy, xmin, xmax);; 650}; 651 ; 652////////////////////////////////////////////////////////////////////////////////; 653/// Create a 2D contour around the minimum for the parameter ipar and jpar; 654/// if a minimum does not exist or is invalid it will return false; 655/// A array for x and y points should be provided; 656/// Pass optionally the confidence level, default is 0.683; 657/// it is assumed that ErrorDef() defines the right error definition; 658/// (i.e 1 sigma error for one parameter). If not the confidence level are scaled to new level; 659 ; 660bool FitResult::Contour(unsigned int ipar, unsigned int jpar, unsigned int &npoints, double *pntsx, double *pntsy, double confLevel); 661{; 662 if (!pntsx || !pntsy || !npoints); 663 return false;; 664 ; 665 if (!fMinimizer) {; 666 MATH_ERROR_MSG(""FitResult::Contour"", ""Minimizer is not available - cannot produce Contou",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitResult_8cxx_source.html:23812,avail,available,23812,doc/master/FitResult_8cxx_source.html,https://root.cern,https://root.cern/doc/master/FitResult_8cxx_source.html,1,['avail'],['available']
Availability," = fXaxis.GetFirst();; 8740 Int_t xlast = fXaxis.GetLast();; 8741 Int_t yfirst = fYaxis.GetFirst();; 8742 Int_t ylast = fYaxis.GetLast();; 8743 Int_t zfirst = fZaxis.GetFirst();; 8744 Int_t zlast = fZaxis.GetLast();; 8745 min=TMath::Infinity();; 8746 max=-TMath::Infinity();; 8747 Double_t value;; 8748 for (binz=zfirst;binz<=zlast;binz++) {; 8749 for (biny=yfirst;biny<=ylast;biny++) {; 8750 for (binx=xfirst;binx<=xlast;binx++) {; 8751 bin = GetBin(binx,biny,binz);; 8752 value = RetrieveBinContent(bin);; 8753 if (value < min) min = value;; 8754 if (value > max) max = value;; 8755 }; 8756 }; 8757 }; 8758}; 8759 ; 8760////////////////////////////////////////////////////////////////////////////////; 8761/// Redefine x axis parameters.; 8762///; 8763/// The X axis parameters are modified.; 8764/// The bins content array is resized; 8765/// if errors (Sumw2) the errors array is resized; 8766/// The previous bin contents are lost; 8767/// To change only the axis limits, see TAxis::SetRange; 8768 ; 8769void TH1::SetBins(Int_t nx, Double_t xmin, Double_t xmax); 8770{; 8771 if (GetDimension() != 1) {; 8772 Error(""SetBins"",""Operation only valid for 1-d histograms"");; 8773 return;; 8774 }; 8775 fXaxis.SetRange(0,0);; 8776 fXaxis.Set(nx,xmin,xmax);; 8777 fYaxis.Set(1,0,1);; 8778 fZaxis.Set(1,0,1);; 8779 fNcells = nx+2;; 8780 SetBinsLength(fNcells);; 8781 if (fSumw2.fN) {; 8782 fSumw2.Set(fNcells);; 8783 }; 8784}; 8785 ; 8786////////////////////////////////////////////////////////////////////////////////; 8787/// Redefine x axis parameters with variable bin sizes.; 8788///; 8789/// The X axis parameters are modified.; 8790/// The bins content array is resized; 8791/// if errors (Sumw2) the errors array is resized; 8792/// The previous bin contents are lost; 8793/// To change only the axis limits, see TAxis::SetRange; 8794/// xBins is supposed to be of length nx+1; 8795 ; 8796void TH1::SetBins(Int_t nx, const Double_t *xBins); 8797{; 8798 if (GetDimension() != 1) {; 8799 Error(""SetB",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:342915,error,errors,342915,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,2,['error'],['errors']
Availability," = false;  Set of owned component. ;  ; RooRefArray _proxyList;  ; ProxyListCache _proxyListCache;  ; RefCountList_t _serverList;  ; bool _shapeDirty = true;  ; std::map< std::string, std::string > _stringAttrib;  ; bool _valueDirty = true;  ;  Protected Attributes inherited from TNamed; TString fName;  ; TString fTitle;  . Static Protected Attributes; static Int_t _evalErrorCount = 0;  ; static std::map< const RooAbsArg *, std::pair< std::string, std::list< EvalError > > > _evalErrorList;  ; static ErrorLoggingMode _evalErrorMode = RooAbsReal::PrintErrors;  ; static bool _globalSelectComp = false;  ; static bool _hideOffset = true;  Offset hiding flag. ;  ;  Static Protected Attributes inherited from RooAbsArg; static bool _inhibitDirty;  ; static bool _verboseDirty;  cache of the list of proxies. Avoids type casting. ;  ;  Static Protected Attributes inherited from RooPrintable; static Int_t _nameLength;  . Private Member Functions; double _DEBUG_getVal (const RooArgSet *normalisationSet) const;  Debug version of getVal(), which is slow and does error checking. ;  . Friends; class AddCacheElem;  ; class BatchInterfaceAccessor;  ; class RooAddHelpers;  ; class RooAddModel;  ; class RooAddPdf;  ; class RooFit::EvalContext;  ; class RooRealBinding;  ; class RooRealSumFunc;  ; class RooRealSumPdf;  ; class RooVectorDataStore;  . Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <RooAbsReal.h>. Inheritance diagram for RooAbsReal:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Typedef Documentation. ◆ EvalErrorIter. typedef std::map<constRooAbsArg*,std::pair<std::string,std::list<EvalError>>>::const_iterator RooAbsReal::EvalErrorIter. Definition at line 347 of file RooAbsReal.h. ◆ value_type. using RooAbsReal::value_type = double. Definition at line 61 of file RooAbsReal.h. Member Enumeration Documentation. ◆ ErrorLoggingMode. enum RooAbsR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:61251,error,error,61251,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['error'],['error']
Availability, = gROOT->GetListOfFiles();; 4914 if (of && (of->GetSize() > 0)) {; 4915 TIter nxf(of);; 4916 TFile *f = nullptr;; 4917 while ((f = (TFile *)nxf())); 4918 if (f->Matches(name)); 4919 return f->GetAsyncOpenStatus();; 4920 }; 4921 ; 4922 // Default is synchronous mode; 4923 return kAOSNotAsync;; 4924}; 4925 ; 4926////////////////////////////////////////////////////////////////////////////////; 4927/// Get status of the async open request related to 'handle'.; 4928 ; 4929TFile::EAsyncOpenStatus TFile::GetAsyncOpenStatus(TFileOpenHandle *handle); 4930{; 4931 if (handle && handle->fFile) {; 4932 if (!handle->fFile->IsZombie()); 4933 return handle->fFile->GetAsyncOpenStatus();; 4934 else; 4935 return TFile::kAOSFailure;; 4936 }; 4937 ; 4938 // Default is synchronous mode; 4939 return TFile::kAOSNotAsync;; 4940}; 4941 ; 4942////////////////////////////////////////////////////////////////////////////////; 4943/// Get final URL for file being opened asynchronously.; 4944/// Returns 0 is the information is not yet available.; 4945 ; 4946const TUrl *TFile::GetEndpointUrl(const char* name); 4947{; 4948 // Check the list of pending async open requests; 4949 if (fgAsyncOpenRequests && (fgAsyncOpenRequests->GetSize() > 0)) {; 4950 TIter nxr(fgAsyncOpenRequests);; 4951 TFileOpenHandle *fh = nullptr;; 4952 while ((fh = (TFileOpenHandle *)nxr())); 4953 if (fh->Matches(name)); 4954 if (fh->fFile); 4955 return fh->fFile->GetEndpointUrl();; 4956 }; 4957 ; 4958 // Check also the list of files open; 4959 R__LOCKGUARD(gROOTMutex);; 4960 TSeqCollection *of = gROOT->GetListOfFiles();; 4961 if (of && (of->GetSize() > 0)) {; 4962 TIter nxf(of);; 4963 TFile *f = nullptr;; 4964 while ((f = (TFile *)nxf())); 4965 if (f->Matches(name)); 4966 return f->GetEndpointUrl();; 4967 }; 4968 ; 4969 // Information not yet available; 4970 return (const TUrl *)nullptr;; 4971}; 4972 ; 4973////////////////////////////////////////////////////////////////////////////////; 4974/// Print file copy progress.; 4975 ;,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:180901,avail,available,180901,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['avail'],['available']
Availability," = gStyle->GetOptLogx();; 311 fLogy = gStyle->GetOptLogy();; 312 fLogz = gStyle->GetOptLogz();; 313 ; 314 fFixedAspectRatio = kFALSE;; 315 fAspectRatio = 0.;; 316 ; 317 fNumPaletteColor = 0;; 318 fNextPaletteColor = 0;; 319 fCGnx = 0;; 320 fCGny = 0;; 321 ; 322 fViewer3D = nullptr;; 323 ; 324 if (fCanvas) fGLDevice = fCanvas->GetGLDevice();; 325 // Set default world coordinates to NDC [0,1]; 326 fX1 = 0;; 327 fX2 = 1;; 328 fY1 = 0;; 329 fY2 = 1;; 330 ; 331 if (!gPad) {; 332 Error(""TPad"", ""You must create a TCanvas before creating a TPad"");; 333 MakeZombie();; 334 return;; 335 }; 336 ; 337 TContext ctxt(kTRUE);; 338 ; 339 Bool_t zombie = kFALSE;; 340 ; 341 if ((xlow < 0) || (xlow > 1) || (ylow < 0) || (ylow > 1)) {; 342 Error(""TPad"", ""illegal bottom left position: x=%f, y=%f"", xlow, ylow);; 343 zombie = kTRUE;; 344 } else if ((xup < 0) || (xup > 1) || (yup < 0) || (yup > 1)) {; 345 Error(""TPad"", ""illegal top right position: x=%f, y=%f"", xup, yup);; 346 zombie = kTRUE;; 347 } else if (xup-xlow <= 0) {; 348 Error(""TPad"", ""illegal width: %f"", xup-xlow);; 349 zombie = kTRUE;; 350 } else if (yup-ylow <= 0) {; 351 Error(""TPad"", ""illegal height: %f"", yup-ylow);; 352 zombie = kTRUE;; 353 }; 354 ; 355 if (zombie) {; 356 // error in creating pad occurred, make this pad a zombie; 357 MakeZombie();; 358 return;; 359 }; 360 ; 361 ; 362 fLogx = gStyle->GetOptLogx();; 363 fLogy = gStyle->GetOptLogy();; 364 fLogz = gStyle->GetOptLogz();; 365 ; 366 fUxmin = fUymin = fUxmax = fUymax = 0;; 367 ; 368 // Set pad parameters and Compute conversion coefficients; 369 SetPad(name, title, xlow, ylow, xup, yup, color, bordersize, bordermode);; 370 Range(0, 0, 1, 1);; 371 SetBit(kMustCleanup);; 372 SetBit(kCanDelete);; 373}; 374 ; 375 ; 376////////////////////////////////////////////////////////////////////////////////; 377/// Pad destructor.; 378 ; 379TPad::~TPad(); 380{; 381 if (ROOT::Detail::HasBeenDeleted(this)) return;; 382 Close();; 383 CloseToolTip(fTip);; 384 DeleteToolTip(fTip);; 385 au",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8cxx_source.html:10417,error,error,10417,doc/master/TPad_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TPad_8cxx_source.html,1,['error'],['error']
Availability," = kFALSE); Returns path of the indicated dataset. The extension is '.root' for all files; except for 'dsName==ls' which have extension '.txt'.; If 'local' is kTRUE the local cache path is returned instead in the form; <cachedir>/<group>.<user>.<dsName>.<ext>.; NB: contains a static TString for result, so copy result before using twice. Int_t NotifyUpdate(const char* group, const char* user, const char* dspath, Long_t mtime, const char* checksum = 0); Save into the <datasetdir>/kDataSet_DataSetList file the name of the updated; or created or modified dataset. For still existing datasets, fill the; modification date in seconds anf the checksum.; Returns 0 on success, -1 on error. Int_t CreateLsFile(const char* group, const char* user, Long_t& mtime, TString& checksum); Create or recreate the dataset lists for 'uri'.; The list are saved in text form in 'uri'/ls.txt for fast browsing and in; 'uri'/ls.root in form of TMacro for optimized and portable transfer.; Return 0 on success, 1 if the file was empty, -1 on error. Bool_t BrowseDataSets(const char* group, const char* user, const char* dsName, UInt_t option, TObject* target); Adds the dataset in the folder of group, user to the list in target.; If dsName is defined, only the information about the specified dataset; is processed. The unsigned int 'option' is forwarded to GetDataSet and BrowseDataSet.; Available options (to be .or.ed):; kPrint print the dataset content; kQuotaUpdate update quotas; kExport use export naming; kList get a list of dataset names. NB1: options ""kPrint"", ""kQuoatUpdate"" and ""kExport"" are mutually exclusive; NB2: for options ""kPrint"" and ""kQuotaUpdate"" return is null. TMap * GetDataSets(const char* group, const char* user, const char* dsName = 0, UInt_t option = 0); General purpose call to go through the existing datasets.; If <user> is 0 or ""*"", act on all datasets for the given <group>.; If <group> is 0 or ""*"", act on all datasets.; If <dsName> is defined, only the information about the speci",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetManagerFile.html:13525,error,error,13525,root/html528/TDataSetManagerFile.html,https://root.cern,https://root.cern/root/html528/TDataSetManagerFile.html,10,['error'],['error']
Availability," = kFALSE); virtual~TMutex(); voidTObject::AbstractMethod(const char* method) const; Int_tTVirtualMutex::Acquire(); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual Int_tCleanUp(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual TVirtualMutex*Factory(Bool_t recursive = kFALSE); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMutex.html:1510,error,error,1510,root/html528/TMutex.html,https://root.cern,https://root.cern/root/html528/TMutex.html,6,['error'],['error']
Availability," = kFALSE); voidRooAbsArg::setProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooObjCacheManager_cacheMgrThe cache manager; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty fl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooProduct.html:29949,Error,ErrorLoggingMode,29949,root/html532/RooProduct.html,https://root.cern,https://root.cern/root/html532/RooProduct.html,1,['Error'],['ErrorLoggingMode']
Availability," = kFALSE); voidRooAbsArg::setProxyNormSet(const RooArgSet* nset); voidRooAbsArg::setShapeDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::setTreeBranchStatus(TTree& t, Bool_t active); voidRooAbsArg::setValueDirty(const RooAbsArg* source) const; virtual voidRooAbsReal::syncCache(const RooArgSet* set = 0); Double_tRooAbsReal::traceEval(const RooArgSet* set) const; virtual Bool_tRooAbsReal::traceEvalHook(Double_t) const; voidRooAbsArg::unRegisterProxy(RooArgProxy& proxy); voidRooAbsArg::unRegisterProxy(RooSetProxy& proxy); voidRooAbsArg::unRegisterProxy(RooListProxy& proxy). Data Members; public:. enum RooAbsReal::ScaleType { Raw; Relative; NumEvent; RelativeExpected; };; enum RooAbsReal::ErrorLoggingMode { PrintErrors; CollectErrors; CountErrors; Ignore; };; enum RooAbsArg::ConstOpCode { Activate; DeActivate; ConfigChange; ValueChange; };; enum RooAbsArg::OperMode { Auto; AClean; ADirty; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };; enum RooPrintable::ContentsOption { kName; kClassName; kValue; kArgs; kExtras; kAddress; kTitle; kCollectionHeader; };; enum RooPrintable::StyleOption { kInline; kSingleLine; kStandard; kVerbose; kTreeStructure; };. protected:. set<std::string>RooAbsArg::_boolAttribBoolean attributes; set<std::string>RooAbsArg::_boolAttribTransient! Transient boolean attributes (not copied in ctor); UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_cli",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooConstVar.html:29636,Error,ErrorLoggingMode,29636,root/html532/RooConstVar.html,https://root.cern,https://root.cern/root/html532/RooConstVar.html,2,['Error'],['ErrorLoggingMode']
Availability," = kTRUE, UInt_t buffersize = 1000000); virtual TKey*CreateKey(TDirectory* mother, const TObject* obj, const char* name, Int_t bufsize); virtual TKey*CreateKey(TDirectory* mother, const void* obj, const TClass* cl, const char* name, Int_t bufsize); static TDirectory*&TDirectory::CurrentDirectory(); static TFile*&TFile::CurrentFile(); static voidTDirectory::DecodeNameCycle(const char* namecycle, char* name, Short_t& cycle, const size_t namesize = 0); virtual voidTFile::Delete(const char* namecycle = """"); virtual voidTDirectory::DeleteAll(Option_t* option = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTFile::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidDrawMap(const char* = ""*"", Option_t* = """"); virtual voidTObject::Dump() constMENU ; static voidTDirectory::EncodeNameCycle(char* buffer, const char* name, Short_t cycle); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidFillBuffer(char*&); virtual TKey*TDirectoryFile::FindKey(const char* keyname) const; virtual TKey*TDirectoryFile::FindKeyAny(const char* keyname) const; virtual TObject*TDirectory::FindObject(const char* name) const; virtual TObject*TDirectory::FindObject(const TObject* obj) const; virtual TObject*TDirectoryFile::FindObjectAny(const char* name) const; virtual TObject*TDirectoryFile::FindObjectAnyFile(const char* name) const; virtual voidFlush(); virtual TObject*TDirectoryFile::Get(const char* namecycle); TArchiveFile*TFile::GetArchive() const; Long64_tTFile::GetArchiveOffset() const; Int_tGetArrayLimit() const; stati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSQLFile.html:9608,Error,Error,9608,root/html534/TSQLFile.html,https://root.cern,https://root.cern/root/html534/TSQLFile.html,3,['Error'],['Error']
Availability," = x.frame(Title=""Imported ROOT.TH1 with Poisson error bars""); dh.plotOn(frame); ; # Fit a Gaussian p.d.f to the data; mean = ROOT.RooRealVar(""mean"", ""mean"", 0, -10, 10); sigma = ROOT.RooRealVar(""sigma"", ""sigma"", 3, 0.1, 10); gauss = ROOT.RooGaussian(""gauss"", ""gauss"", x, mean, sigma); gauss.fitTo(dh, PrintLevel=-1); gauss.plotOn(frame); ; # Plot and fit a RooDataHist with internal errors; # ---------------------------------------------------------------------------------------------; ; # If histogram has custom error (i.e. its contents is does not originate from a Poisson process; # but e.g. is a sum of weighted events) you can data with symmetric 'sum-of-weights' error instead; # (same error bars as shown by ROOT); frame2 = x.frame(Title=""Imported ROOT.TH1 with internal errors""); dh.plotOn(frame2, DataError=""SumW2""); gauss.plotOn(frame2); ; # Please note that error bars shown (Poisson or SumW2) are for visualization only, the are NOT used; # in a maximum likelihood fit; #; # A (binned) ML fit will ALWAYS assume the Poisson error interpretation of data (the mathematical definition; # of likelihood does not take any external definition of errors). Data with non-unit weights can only be correctly; # fitted with a chi^2 fit (see rf602_chi2fit.py); #; # Importing ROOT TTrees; # -----------------------------------------------------------; # Import ROOT TTree into a RooDataSet; ; tree = makeTTree(); ; # Define 2nd observable y; y = ROOT.RooRealVar(""y"", ""y"", -10, 10); ; # Construct unbinned dataset importing tree branches x and y matching between branches and ROOT.RooRealVars; # is done by name of the branch/RRV; #; # Note that ONLY entries for which x,y have values within their allowed ranges as defined in; # ROOT.RooRealVar x and y are imported. Since the y values in the import tree are in the range [-15,15]; # and RRV y defines a range [-10,10] this means that the ROOT.RooDataSet; # below will have less entries than the ROOT.TTree 'tree'; ; ds = ROOT.RooDataSet(""ds"", ""d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf102__dataimport_8py.html:2469,error,error,2469,doc/master/rf102__dataimport_8py.html,https://root.cern,https://root.cern/doc/master/rf102__dataimport_8py.html,3,['error'],"['error', 'errors']"
Availability," = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};. // create TGraphAsymmErrors with the arrays; gr = new TGraphAsymmErrors(n,x,y,exl,exh,eyl,eyh);; gr->SetTitle(""TGraphAsymmErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; }; 4.5 Graphs with Asymmetric Bent Errors. A graph with asymmetric bent error bars. A TGraphBentErrors is a TGraph with bent, asymmetric error bars. The various format options to draw a TGraphBentErrors are explained in TGraphBentErrors::Paint method. The TGraphBentErrors is drawn by default with error bars and small horizontal and vertical lines at the end of the error bars. If option “z” or “Z” is specified, these small lines are not drawn. If the option “X” is specified, the errors are not drawn (the TGraph::Paint method equivalent). if option contains “>”, an arrow is drawn at the end of the error bars; if option contains “|>”, a full arrow is drawn at the end of the error bars; the size of the arrow is set to 2/3 of the marker size; if option “[]” is specified, only the end vertical/horizontal lines of the error bars are drawn. This option is interesting to superimpose systematic errors on top of a graph with statistical errors. This figure has been generated by the following macro:; {; Int_t n = 10;; Double_t x[n] = {-0.22,0.05,0.25,0.35,0.5,0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; gr = new TGraphBentErrors(n,x,y,; exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""TGraphBentErrors Exam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:149967,error,error,149967,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,6,['error'],['error']
Availability," == 0 && ut == 0) ||; 5549 (TMath::Abs(delu) / (TMath::Abs(ut) + TMath::Abs(fU[ilax-1])) < fEpsmac)) goto L440;; 5550 fac = delu / fMNOTw[it-1];; 5551 for (i = 1; i <= fNpar; ++i) {; 5552 fX[i-1] = fXt[i-1] + fac*fMNOTxdev[i-1];; 5553 }; 5554 if (fISW[4] > 1) {; 5555 Printf("" PARAMETER %4d SET TO%11.3e + %10.3e = %12.3e"",ilax,ut,delu,fU[ilax-1]);; 5556 }; 5557// loop to hit AMIN+UP; 5558 fKe1cr = ilax;; 5559 fKe2cr = 0;; 5560 fXmidcr = fU[ilax-1];; 5561 fXdircr = delu;; 5562 ; 5563 fAmin = abest;; 5564 fNfcnmx = nlimit - fNfcn;; 5565 mncros(aopt, iercr);; 5566 if (abest - fAmin > fUp*.01) goto L650;; 5567 if (iercr == 1) goto L440;; 5568 if (iercr == 2) goto L450;; 5569 if (iercr == 3) goto L460;; 5570// error successfully calculated; 5571 eros = fXmidcr - ut + aopt*fXdircr;; 5572 if (fISW[4] > 1) {; 5573 Printf("" THE %4sTIVE MINOS ERROR OF PARAMETER %3d %10s, IS %12.4e""; 5574 ,(const char*)csig,ilax; 5575 ,(const char*)fCpnam[ilax-1],eros);; 5576 }; 5577 goto L480;; 5578// failure returns; 5579L440:; 5580 if (fISW[4] >= 1) {; 5581 Printf("" THE %4sTIVE MINOS ERROR OF PARAMETER %3d, %s EXCEEDS ITS LIMIT.""; 5582 ,(const char*)csig,ilax; 5583 ,(const char*)fCpnam[ilax-1]);; 5584 }; 5585 eros = fUndefi;; 5586 goto L480;; 5587L450:; 5588 if (fISW[4] >= 1) {; 5589 Printf("" THE %4sTIVE MINOS ERROR %4d REQUIRES MORE THAN %5d FUNCTION CALLS.""; 5590 ,(const char*)csig,ilax,nfmxin);; 5591 }; 5592 eros = 0;; 5593 goto L480;; 5594L460:; 5595 if (fISW[4] >= 1) {; 5596 Printf("" %4sTIVE MINOS ERROR NOT CALCULATED FOR PARAMETER %d""; 5597 ,(const char*)csig,ilax);; 5598 }; 5599 eros = 0;; 5600 ; 5601L480:; 5602 if (fISW[4] > 1) {; 5603 Printf("" **************************************************************************"");; 5604 }; 5605 if (sig < 0) {; 5606 fErn[it-1] = eros;; 5607 if (ilax2 > 0 && ilax2 <= fNu) val2mi = fU[ilax2-1];; 5608 } else {; 5609 fErp[it-1] = eros;; 5610 if (ilax2 > 0 && ilax2 <= fNu) val2pl = fU[ilax2-1];; 5611 }; 5612 }; 5613// parameter finished. reset v; 56",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:182375,failure,failure,182375,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['failure'],['failure']
Availability," == ECONNRESET) {; 17048#endif; 17049 /* Socket already closed by client/peer, close socket without linger; 17050 */; 17051 } else {; 17052 ; 17053 /* Set linger timeout */; 17054 if (setsockopt(conn->client.sock,; 17055 SOL_SOCKET,; 17056 SO_LINGER,; 17057 (char *)&linger,; 17058 sizeof(linger)); 17059 != 0) {; 17060 mg_cry_internal(; 17061 conn,; 17062 ""%s: setsockopt(SOL_SOCKET SO_LINGER(%i,%i)) failed: %s"",; 17063 __func__,; 17064 linger.l_onoff,; 17065 linger.l_linger,; 17066 strerror(ERRNO));; 17067 }; 17068 }; 17069 ; 17070 /* Now we know that our FIN is ACK-ed, safe to close */; 17071 closesocket(conn->client.sock);; 17072 conn->client.sock = INVALID_SOCKET;; 17073}; 17074#endif; 17075 ; 17076 ; 17077static void; 17078close_connection(struct mg_connection *conn); 17079{; 17080#if defined(USE_SERVER_STATS); 17081 conn->conn_state = 6; /* to close */; 17082#endif; 17083 ; 17084#if defined(USE_LUA) && defined(USE_WEBSOCKET); 17085 if (conn->lua_websocket_state) {; 17086 lua_websocket_close(conn, conn->lua_websocket_state);; 17087 conn->lua_websocket_state = NULL;; 17088 }; 17089#endif; 17090 ; 17091 mg_lock_connection(conn);; 17092 ; 17093 /* Set close flag, so keep-alive loops will stop */; 17094 conn->must_close = 1;; 17095 ; 17096 /* call the connection_close callback if assigned */; 17097 if (conn->phys_ctx->callbacks.connection_close != NULL) {; 17098 if (conn->phys_ctx->context_type == CONTEXT_SERVER) {; 17099 conn->phys_ctx->callbacks.connection_close(conn);; 17100 }; 17101 }; 17102 ; 17103 /* Reset user data, after close callback is called.; 17104 * Do not reuse it. If the user needs a destructor,; 17105 * it must be done in the connection_close callback. */; 17106 mg_set_user_connection_data(conn, NULL);; 17107 ; 17108 ; 17109#if defined(USE_SERVER_STATS); 17110 conn->conn_state = 7; /* closing */; 17111#endif; 17112 ; 17113#if defined(USE_MBEDTLS); 17114 if (conn->ssl != NULL) {; 17115 mbed_ssl_close(conn->ssl);; 17116 conn->ssl = NULL;; 17117 }; 17118",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:507469,alive,alive,507469,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['alive'],['alive']
Availability," == ECONNRESET) {; 17049#endif; 17050 /* Socket already closed by client/peer, close socket without linger; 17051 */; 17052 } else {; 17053 ; 17054 /* Set linger timeout */; 17055 if (setsockopt(conn->client.sock,; 17056 SOL_SOCKET,; 17057 SO_LINGER,; 17058 (char *)&linger,; 17059 sizeof(linger)); 17060 != 0) {; 17061 mg_cry_internal(; 17062 conn,; 17063 ""%s: setsockopt(SOL_SOCKET SO_LINGER(%i,%i)) failed: %s"",; 17064 __func__,; 17065 linger.l_onoff,; 17066 linger.l_linger,; 17067 strerror(ERRNO));; 17068 }; 17069 }; 17070 ; 17071 /* Now we know that our FIN is ACK-ed, safe to close */; 17072 closesocket(conn->client.sock);; 17073 conn->client.sock = INVALID_SOCKET;; 17074}; 17075#endif; 17076 ; 17077 ; 17078static void; 17079close_connection(struct mg_connection *conn); 17080{; 17081#if defined(USE_SERVER_STATS); 17082 conn->conn_state = 6; /* to close */; 17083#endif; 17084 ; 17085#if defined(USE_LUA) && defined(USE_WEBSOCKET); 17086 if (conn->lua_websocket_state) {; 17087 lua_websocket_close(conn, conn->lua_websocket_state);; 17088 conn->lua_websocket_state = NULL;; 17089 }; 17090#endif; 17091 ; 17092 mg_lock_connection(conn);; 17093 ; 17094 /* Set close flag, so keep-alive loops will stop */; 17095 conn->must_close = 1;; 17096 ; 17097 /* call the connection_close callback if assigned */; 17098 if (conn->phys_ctx->callbacks.connection_close != NULL) {; 17099 if (conn->phys_ctx->context_type == CONTEXT_SERVER) {; 17100 conn->phys_ctx->callbacks.connection_close(conn);; 17101 }; 17102 }; 17103 ; 17104 /* Reset user data, after close callback is called.; 17105 * Do not reuse it. If the user needs a destructor,; 17106 * it must be done in the connection_close callback. */; 17107 mg_set_user_connection_data(conn, NULL);; 17108 ; 17109 ; 17110#if defined(USE_SERVER_STATS); 17111 conn->conn_state = 7; /* closing */; 17112#endif; 17113 ; 17114#if defined(USE_MBEDTLS); 17115 if (conn->ssl != NULL) {; 17116 mbed_ssl_close(conn->ssl);; 17117 conn->ssl = NULL;; 17118 }; 17119",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:507502,alive,alive,507502,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['alive'],['alive']
Availability," > &map1, const std::vector< int > &map2, TMatrixDSym &S11, TMatrixD &S12, TMatrixD &S21, TMatrixDSym &S22);  Block decomposition of covI according to given maps of observables. ;  ; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ;  Static Public Member Functions inherited from RooAbsPdf; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static const char * DeclFileName ();  ; static RooNumGenConfig * defaultGeneratorConfig ();  Returns the default numeric MC generator configuration for all RooAbsReals. ;  ; static int verboseEval ();  Return global level of verbosity for p.d.f. evaluations. ;  ; static void verboseEval (Int_t stat);  Change global level of verbosity for p.d.f. evaluations. ;  ;  Static Public Member Functions inherited from RooAbsReal; static TClass * Class ();  ; static const char * Class_Name ();  ; static constexpr Version_t Class_Version ();  ; static void clearEvalErrorLog ();  Clear the stack of evaluation error messages. ;  ; static const char * DeclFileName ();  ; static RooNumIntConfig * defaultIntegratorConfig ();  Returns the default numeric integration configuration for all RooAbsReals. ;  ; static std::map< constRooAbsArg *, std::pair< std::string, std::list< RooAbsReal::EvalError > > >::iterator evalErrorIter ();  ; static ErrorLoggingMode evalErrorLoggingMode ();  Return current evaluation error logging mode. ;  ; static bool hideOffset ();  ; static void logEvalError (const RooAbsReal *originator, const char *origName, const char *message, const char *serverValueString=nullptr);  Interface to insert remote error logging messages received by RooRealMPFE into current error logging stream. ;  ; static Int_t numEvalErrorItems ();  ; static Int_t numEvalErrors ();  Return the number of logged evaluation errors since the last clearing. ;  ; static void printEvalErrors (s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMultiVarGaussian.html:56917,error,error,56917,doc/master/classRooMultiVarGaussian.html,https://root.cern,https://root.cern/doc/master/classRooMultiVarGaussian.html,1,['error'],['error']
Availability," > . ROOT::Experimental::RResult< T >::RResult ; (; RError && ; error). inline . Definition at line 216 of file RError.hxx. ◆ RResult() [4/5]. template<typename T > . ROOT::Experimental::RResult< T >::RResult ; (; const RResult< T > & ; other). delete . ◆ RResult() [5/5]. template<typename T > . ROOT::Experimental::RResult< T >::RResult ; (; RResult< T > && ; other). default . ◆ ~RResult(). template<typename T > . ROOT::Experimental::RResult< T >::~RResult ; (; ). default . Member Function Documentation. ◆ Forward(). template<typename T > . RResult & ROOT::Experimental::RResult< T >::Forward ; (; RError::RLocation && ; sourceLocation). inline . Used by R__FORWARD_RESULT in order to keep track of the stack trace in case of errors. ; Definition at line 226 of file RError.hxx. ◆ Inspect(). template<typename T > . const T & ROOT::Experimental::RResult< T >::Inspect ; (; ). inline . If the operation was successful, returns a const reference to the inner type. ; If there was an error, Inspect() instead throws an exception. ; Definition at line 234 of file RError.hxx. ◆ operator bool(). template<typename T > . ROOT::Experimental::RResult< T >::operator bool ; (; ). inlineexplicit . Definition at line 251 of file RError.hxx. ◆ operator=() [1/2]. template<typename T > . RResult & ROOT::Experimental::RResult< T >::operator= ; (; const RResult< T > & ; other). delete . ◆ operator=() [2/2]. template<typename T > . RResult & ROOT::Experimental::RResult< T >::operator= ; (; RResult< T > && ; other). default . ◆ ThrowOnError(). template<typename T > . void ROOT::Experimental::RResult< T >::ThrowOnError ; (; ). inlineprivate . Definition at line 200 of file RError.hxx. ◆ Unwrap(). template<typename T > . T ROOT::Experimental::RResult< T >::Unwrap ; (; ). inline . If the operation was successful, returns the inner type by value. ; For move-only types, Unwrap can only be called once, as it yields ownership of the inner value to the caller using std::move, potentially leaving the RRes",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RResult.html:6414,error,error,6414,doc/master/classROOT_1_1Experimental_1_1RResult.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Experimental_1_1RResult.html,1,['error'],['error']
Availability," > 0);; 5956 ; 5957 /* timeout: return 0 */; 5958 return 0;; 5959}; 5960 ; 5961 ; 5962/* Write data to the IO channel - opened file descriptor, socket or SSL; 5963 * descriptor.; 5964 * Return value:; 5965 * >=0 .. number of bytes successfully written; 5966 * -1 .. timeout; 5967 * -2 .. error; 5968 */; 5969static int; 5970push_inner(struct mg_context *ctx,; 5971 FILE *fp,; 5972 SOCKET sock,; 5973 SSL *ssl,; 5974 const char *buf,; 5975 int len,; 5976 double timeout); 5977{; 5978 uint64_t start = 0, now = 0, timeout_ns = 0;; 5979 int n, err;; 5980 unsigned ms_wait = SOCKET_TIMEOUT_QUANTUM; /* Sleep quantum in ms */; 5981 ; 5982#if defined(_WIN32); 5983 typedef int len_t;; 5984#else; 5985 typedef size_t len_t;; 5986#endif; 5987 ; 5988 if (timeout > 0) {; 5989 now = mg_get_current_time_ns();; 5990 start = now;; 5991 timeout_ns = (uint64_t)(timeout * 1.0E9);; 5992 }; 5993 ; 5994 if (ctx == NULL) {; 5995 return -2;; 5996 }; 5997 ; 5998#if defined(NO_SSL) && !defined(USE_MBEDTLS); 5999 if (ssl) {; 6000 return -2;; 6001 }; 6002#endif; 6003 ; 6004 /* Try to read until it succeeds, fails, times out, or the server; 6005 * shuts down. */; 6006 for (;;) {; 6007 ; 6008#if defined(USE_MBEDTLS); 6009 if (ssl != NULL) {; 6010 n = mbed_ssl_write(ssl, (const unsigned char *)buf, len);; 6011 if (n <= 0) {; 6012 if ((n == MBEDTLS_ERR_SSL_WANT_READ); 6013 || (n == MBEDTLS_ERR_SSL_WANT_WRITE); 6014 || n == MBEDTLS_ERR_SSL_ASYNC_IN_PROGRESS) {; 6015 n = 0;; 6016 } else {; 6017 fprintf(stderr, ""SSL write failed, error %d\n"", n);; 6018 return -2;; 6019 }; 6020 } else {; 6021 err = 0;; 6022 }; 6023 } else; 6024#elif !defined(NO_SSL); 6025 if (ssl != NULL) {; 6026 ERR_clear_error();; 6027 n = SSL_write(ssl, buf, len);; 6028 if (n <= 0) {; 6029 err = SSL_get_error(ssl, n);; 6030 if ((err == SSL_ERROR_SYSCALL) && (n == -1)) {; 6031 err = ERRNO;; 6032 } else if ((err == SSL_ERROR_WANT_READ); 6033 || (err == SSL_ERROR_WANT_WRITE)) {; 6034 n = 0;; 6035 } else {; 6036 DEBUG_TRACE(""SSL_write() failed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:175924,down,down,175924,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['down'],['down']
Availability," > 0);; 5957 ; 5958 /* timeout: return 0 */; 5959 return 0;; 5960}; 5961 ; 5962 ; 5963/* Write data to the IO channel - opened file descriptor, socket or SSL; 5964 * descriptor.; 5965 * Return value:; 5966 * >=0 .. number of bytes successfully written; 5967 * -1 .. timeout; 5968 * -2 .. error; 5969 */; 5970static int; 5971push_inner(struct mg_context *ctx,; 5972 FILE *fp,; 5973 SOCKET sock,; 5974 SSL *ssl,; 5975 const char *buf,; 5976 int len,; 5977 double timeout); 5978{; 5979 uint64_t start = 0, now = 0, timeout_ns = 0;; 5980 int n, err;; 5981 unsigned ms_wait = SOCKET_TIMEOUT_QUANTUM; /* Sleep quantum in ms */; 5982 ; 5983#if defined(_WIN32); 5984 typedef int len_t;; 5985#else; 5986 typedef size_t len_t;; 5987#endif; 5988 ; 5989 if (timeout > 0) {; 5990 now = mg_get_current_time_ns();; 5991 start = now;; 5992 timeout_ns = (uint64_t)(timeout * 1.0E9);; 5993 }; 5994 ; 5995 if (ctx == NULL) {; 5996 return -2;; 5997 }; 5998 ; 5999#if defined(NO_SSL) && !defined(USE_MBEDTLS); 6000 if (ssl) {; 6001 return -2;; 6002 }; 6003#endif; 6004 ; 6005 /* Try to read until it succeeds, fails, times out, or the server; 6006 * shuts down. */; 6007 for (;;) {; 6008 ; 6009#if defined(USE_MBEDTLS); 6010 if (ssl != NULL) {; 6011 n = mbed_ssl_write(ssl, (const unsigned char *)buf, len);; 6012 if (n <= 0) {; 6013 if ((n == MBEDTLS_ERR_SSL_WANT_READ); 6014 || (n == MBEDTLS_ERR_SSL_WANT_WRITE); 6015 || n == MBEDTLS_ERR_SSL_ASYNC_IN_PROGRESS) {; 6016 n = 0;; 6017 } else {; 6018 fprintf(stderr, ""SSL write failed, error %d\n"", n);; 6019 return -2;; 6020 }; 6021 } else {; 6022 err = 0;; 6023 }; 6024 } else; 6025#elif !defined(NO_SSL); 6026 if (ssl != NULL) {; 6027 ERR_clear_error();; 6028 n = SSL_write(ssl, buf, len);; 6029 if (n <= 0) {; 6030 err = SSL_get_error(ssl, n);; 6031 if ((err == SSL_ERROR_SYSCALL) && (n == -1)) {; 6032 err = ERRNO;; 6033 } else if ((err == SSL_ERROR_WANT_READ); 6034 || (err == SSL_ERROR_WANT_WRITE)) {; 6035 n = 0;; 6036 } else {; 6037 DEBUG_TRACE(""SSL_write() failed",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:175956,down,down,175956,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['down'],['down']
Availability," > 40; if it is, fill the histogram (see TH1F::Fill()) with the fPosX value of that particle.; This step involves writing some code (similar to the code you have for the event size). If you get lost (SPOILER ALERT!): the solution is at the end of this page.; Fitting and Drawing the Histogram; Once the histogram is filled, fit it with a pol2 using TH1::Fit(""pol2""). Here ""pol2"" is ROOT's short name for ""polynomial of 2nd degree"", i.e. [0] + [1]x + [2]x*x, aka ""parabola"".; ""Fitting"" means using a function (in this case the pol2) with one or more free parameters ([0]..[2] in this case) and looking for those values of the parameters that result in the function passing as closely as possible through the data points, where ""close"" takes the points' uncertainties into account. You should first fit and then draw, to see the fit together with the histogram.; At the end, you should get something like this:. Figure 6: Distribution of ""fPosX"" leaf values, fitted with a pol2; If, for any reason, you don't manage to get it working, you can download the working macro file here: AnalyzeTree.C (or; wget http://root-mirror.github.io/training/intro/AnalyzeTree.C); . ‹ Using a Macro to Read a TTree; up; Fit Panel ›. Navigate through this book; Meet a TTree; Accessing a TTree With a TBrowser; Using TTree::Draw() to access a TTree; TTree and Its Data; Using a Macro to Read a TTree; Histogramming; Fit Panel; Compiling Your Code (also known as ACLiC); Accessing a TTree With a TSelector; Histogramming in a Selector; Using a TSelector with PROOF; The End. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/histogramming.html:4475,down,download,4475,d/histogramming.html,https://root.cern,https://root.cern/d/histogramming.html,1,['down'],['download']
Availability," ACLiC. The filename must have the format:; 2311/// [path/]macro.C[+|++[g|O]][(args)].; 2312/// The possible error codes are defined by TInterpreter::EErrorCode.; 2313/// If padUpdate is true (default) update the current pad.; 2314/// Returns the macro return value.; 2315 ; 2316Longptr_t TROOT::Macro(const char *filename, Int_t *error, Bool_t padUpdate); 2317{; 2318 Longptr_t result = 0;; 2319 ; 2320 if (fInterpreter) {; 2321 TString aclicMode;; 2322 TString arguments;; 2323 TString io;; 2324 TString fname = gSystem->SplitAclicMode(filename, aclicMode, arguments, io);; 2325 ; 2326 char *mac = gSystem->Which(GetMacroPath(), fname, kReadPermission);; 2327 if (!mac) {; 2328 Error(""Macro"", ""macro %s not found in path %s"", fname.Data(), GetMacroPath());; 2329 if (error); 2330 *error = TInterpreter::kFatal;; 2331 } else {; 2332 fname = mac;; 2333 fname += aclicMode;; 2334 fname += arguments;; 2335 fname += io;; 2336 result = gInterpreter->ExecuteMacro(fname, (TInterpreter::EErrorCode*)error);; 2337 }; 2338 delete [] mac;; 2339 ; 2340 if (padUpdate && gPad); 2341 gPad->Update();; 2342 }; 2343 ; 2344 return result;; 2345}; 2346 ; 2347////////////////////////////////////////////////////////////////////////////////; 2348/// Process message id called by obj.; 2349 ; 2350void TROOT::Message(Int_t id, const TObject *obj); 2351{; 2352 TIter next(fMessageHandlers);; 2353 TMessageHandler *mh;; 2354 while ((mh = (TMessageHandler*)next())) {; 2355 mh->HandleMessage(id,obj);; 2356 }; 2357}; 2358 ; 2359////////////////////////////////////////////////////////////////////////////////; 2360/// Process interpreter command via TApplication::ProcessLine().; 2361/// On Win32 the line will be processed asynchronously by sending; 2362/// it to the CINT interpreter thread. For explicit synchronous processing; 2363/// use ProcessLineSync(). On non-Win32 platforms there is no difference; 2364/// between ProcessLine() and ProcessLineSync().; 2365/// The possible error codes are defined by TInterpret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:88745,error,error,88745,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,6,['error'],['error']
Availability," ANSI #includes are not available on Windows CE and Zephyr */; 321#if !defined(_WIN32_WCE) && !defined(__ZEPHYR__); 322#include <errno.h>; 323#include <fcntl.h>; 324#include <signal.h>; 325#include <stdlib.h>; 326#include <sys/stat.h>; 327#include <sys/types.h>; 328#endif /* !_WIN32_WCE */; 329 ; 330 ; 331#if defined(__clang__); 332/* When using -Weverything, clang does not accept it's own headers; 333 * in a release build configuration. Disable what is too much in; 334 * -Weverything. */; 335#pragma clang diagnostic ignored ""-Wdisabled-macro-expansion""; 336#endif; 337 ; 338#if defined(__GNUC__) || defined(__MINGW32__); 339/* Who on earth came to the conclusion, using __DATE__ should rise; 340 * an ""expansion of date or time macro is not reproducible""; 341 * warning. That's exactly what was intended by using this macro.; 342 * Just disable this nonsense warning. */; 343 ; 344/* And disabling them does not work either:; 345 * #pragma clang diagnostic ignored ""-Wno-error=date-time""; 346 * #pragma clang diagnostic ignored ""-Wdate-time""; 347 * So we just have to disable ALL warnings for some lines; 348 * of code.; 349 * This seems to be a known GCC bug, not resolved since 2012:; 350 * https://gcc.gnu.org/bugzilla/show_bug.cgi?id=53431; 351 */; 352#endif; 353 ; 354 ; 355#if defined(__MACH__) /* Apple OSX section */; 356 ; 357#if defined(__clang__); 358#if (__clang_major__ == 3) && ((__clang_minor__ == 7) || (__clang_minor__ == 8)); 359/* Avoid warnings for Xcode 7. It seems it does no longer exist in Xcode 8 */; 360#pragma clang diagnostic ignored ""-Wno-reserved-id-macro""; 361#pragma clang diagnostic ignored ""-Wno-keyword-macro""; 362#endif; 363#endif; 364 ; 365#ifndef CLOCK_MONOTONIC; 366#define CLOCK_MONOTONIC (1); 367#endif; 368#ifndef CLOCK_REALTIME; 369#define CLOCK_REALTIME (2); 370#endif; 371 ; 372#include <mach/clock.h>; 373#include <mach/mach.h>; 374#include <mach/mach_time.h>; 375#include <sys/errno.h>; 376#include <sys/time.h>; 377 ; 378/* clock_gettime is not ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:12640,error,error,12640,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,2,['error'],['error']
Availability," Additional Inherited Members;  Protected Types inherited from TObject; enum  { kOnlyPrepStep = (1ULL << ( 3 )); };  . #include <TH1.h>. Inheritance diagram for TH1:. This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ anonymous enum. anonymous enum. Enumeration specifying which axes can be extended. . EnumeratorkNoAxis NOTE: Must always be 0 !!! . kXaxis ; kYaxis ; kZaxis ; kAllAxes . Definition at line 71 of file TH1.h. ◆ anonymous enum. anonymous enum. Size of statistics data (size of array used in GetStats()/ PutStats ) . s[0] = sumw s[1] = sumw2; s[2] = sumwx s[3] = sumwx2; s[4] = sumwy s[5] = sumwy2 s[6] = sumwxy; s[7] = sumwz s[8] = sumwz2 s[9] = sumwxz s[10] = sumwyz; s[11] = sumwt s[12] = sumwt2 (11 and 12 used only by TProfile3D) . EnumeratorkNstat Size of statistics data (up to TProfile3D) . Definition at line 183 of file TH1.h. ◆ EBinErrorOpt. enum TH1::EBinErrorOpt. Enumeration specifying type of statistics for bin errors. . EnumeratorkNormal Errors with Normal (Wald) approximation: errorUp=errorLow= sqrt(N) . kPoisson Errors from Poisson interval at 68.3% (1 sigma) . kPoisson2 Errors from Poisson interval at 95% CL (~ 2 sigma) . Definition at line 64 of file TH1.h. ◆ EStatOverflows. enum TH1::EStatOverflows. Enumeration specifying the way to treat statoverflow. . EnumeratorkIgnore Override global flag ignoring the overflows. . kConsider Override global flag considering the overflows. . kNeutral Adapt to the global flag. . Definition at line 80 of file TH1.h. ◆ EStatusBits. enum TH1::EStatusBits. TH1 status bits. . EnumeratorkNoStats Don't draw stats box. . kUserContour User specified contour levels. . kLogX X-axis in log scale. . kIsZoomed Bit set when zooming on Y axis. . kNoTitle Don't draw the histogram title. . kIsAverage Bin contents are average (used by Add) . kIsNotW Histogram is forced to be not weighted even when the histogram is filled with weighted. . kAutoBinPTw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:70745,error,errors,70745,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['error'],['errors']
Availability," Address of the ROOT application will be following: http://lighttpd_host_name/root.app/. Example of authorization configuration for FastCGI connection:; auth.require = ( ""/root.app"" => (; ""method"" => ""digest"",; ""realm"" => ""root"",; ""require"" => ""valid-user""; ) ); 1.8 Integration with existing applications; In many practical cases no change of existing code is required. Opened files (and all objects inside), existing canvas and histograms are automatically scanned by the server and will be available to the users. If necessary, any object can be registered directly to the server with a THttpServer::Register() call.; Central point of integration - when and how THttpServer get access to data from a running application. By default it is done during the gSystem->ProcessEvents() call - THttpServer uses a synchronous timer which is activated every 100 ms. Such approach works perfectly when running macros in an interactive ROOT session.; If an application runs in compiled code and does not contain gSystem->ProcessEvents() calls, two method are available.; 1.8.1 Asynchronous timer; The first method is to configure an asynchronous timer for the server, like for example:; serv->SetTimer(100, kFALSE);; Then, the timer will be activated even without any gSystem->ProcessEvents() method call. The main advantage of such method is that the application code can be used without any modifications. But there is no control when access to the application data is performed. It could happen just in-between of TH1::Fill() calls and an histogram object may be incomplete. Therefore such method is not recommended.; 1.8.2 Regular calls of THttpServer::ProcessRequests() method; The second method is preferable - one just inserts in the application regular calls of the THttpServer::ProcessRequests() method, like:; serv->ProcessRequests();; In such case, one can fully disable the timer of the server:; serv->SetTimer(0, kTRUE);; 1.9 Data access from command shell; The big advantage of the http protocol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html:12454,avail,available,12454,root/htmldoc/guides/HttpServer/HttpServer.html,https://root.cern,https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html,2,['avail'],['available']
Availability," Architecture_t > Class Template Reference. ; template<typename Architecture_t>; class TMVA::DNN::TReshapeLayer< Architecture_t >; Definition at line 41 of file ReshapeLayer.h. Public Types; using Matrix_t = typename Architecture_t::Matrix_t;  ; using Scalar_t = typename Architecture_t::Scalar_t;  ; using Tensor_t = typename Architecture_t::Tensor_t;  . Public Member Functions;  TReshapeLayer (const TReshapeLayer &);  Copy Constructor. ;  ;  TReshapeLayer (size_t BatchSize, size_t InputDepth, size_t InputHeight, size_t InputWidth, size_t Depth, size_t Height, size_t Width, size_t OutputNSlices, size_t OutputNRows, size_t OutputNCols, bool Flattening);  Constructor. ;  ;  TReshapeLayer (TReshapeLayer< Architecture_t > *layer);  Copy the reshape layer provided as a pointer. ;  ;  ~TReshapeLayer ();  Destructor. ;  ; virtual void AddWeightsXMLTo (void *parent);  Writes the information and the weights about the layer in an XML node. ;  ; void Backward (Tensor_t &gradients_backward, const Tensor_t &activations_backward);  Backpropagates the error. ;  ; void Forward (Tensor_t &input, bool applyDropout=false);  The input must be in 3D tensor form with the different matrices corresponding to different events in the batch. ;  ; bool isFlattening () const;  TODO Add documentation Does this layer flatten? (necessary for DenseLayer) B x D1 x D2 --> 1 x B x (D1 * D2) ;  ; void Print () const;  Prints the info about the layer. ;  ; virtual void ReadWeightsFromXML (void *parent);  Read the information and the weights about the layer from XML node. ;  ;  Public Member Functions inherited from TMVA::DNN::VGeneralLayer< Architecture_t >;  VGeneralLayer (const VGeneralLayer &);  Copy Constructor. ;  ;  VGeneralLayer (size_t BatchSize, size_t InputDepth, size_t InputHeight, size_t InputWidth, size_t Depth, size_t Height, size_t Width, size_t WeightsNSlices, size_t WeightsNRows, size_t WeightsNCols, size_t BiasesNSlices, size_t BiasesNRows, size_t BiasesNCols, size_t OutputNSlices, size",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TReshapeLayer.html:1345,error,error,1345,doc/master/classTMVA_1_1DNN_1_1TReshapeLayer.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1DNN_1_1TReshapeLayer.html,1,['error'],['error']
Availability," Area fill color; FillStyle Area fill style. TBranch * FindBranch(const char* name); Forwards the execution to the dummy tree header.; See TTree::FindBranch(). TLeaf * FindLeaf(const char* name); Forwards the execution to the dummy tree header.; See TTree::FindLeaf(). TBranch * GetBranch(const char* name); Forwards the execution to the dummy tree header.; See TTree::GetBranch(). Bool_t GetBranchStatus(const char* branchname) const; Forwards the execution to the dummy tree header.; See TTree::GetBranchStatus(). TVirtualTreePlayer * GetPlayer(); Forwards the execution to the dummy tree header.; See TTree::GetPlayer(). Long64_t Process(const char* filename, Option_t* option = """", Long64_t nentries = 1000000000, Long64_t firstentry = 0); Forwards the execution to the TDSet.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success.; See TDSet::Process(). Long64_t Process(TSelector* selector, Option_t* option = """", Long64_t nentries = 1000000000, Long64_t firstentry = 0); The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. void SetDebug(Int_t level = 1, Long64_t min = 0, Long64_t max = 9999999); See TTree::SetDebug. void SetName(const char* name); See TTree::GetName. Long64_t GetEntries() const; Returns the total number of entries in the TProofChain, which is; the number of entries in the TDSet that it holds. Long64_t GetEntries(const char* sel); See TTree::GetEntries(const char *selection); Not implemented in TProofChain. Shouldn't be used. void Progress(Long64_t total, Long64_t processed); Changes the number of processed entries. Long64_t GetReadEntry() const; Returns the number of processed entries. void ReleaseProof(); Releases PROOF. Disconnect the ""progress"" signal. void ConnectProof(); Connects the proof ""Progress"" signal. Int_t Debug() const; {return fDebug;}. Long64_t Draw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = 1000000000, Long64_t firstentry = ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProofChain.html:30642,error,error,30642,root/html534/TProofChain.html,https://root.cern,https://root.cern/root/html534/TProofChain.html,2,['error'],['error']
Availability," Area fill color; FillStyle Area fill style. TBranch * FindBranch(const char* name); Forwards the execution to the dummy tree header.; See TTree::FindBranch(). TLeaf * FindLeaf(const char* name); Forwards the execution to the dummy tree header.; See TTree::FindLeaf(). TBranch * GetBranch(const char* name); Forwards the execution to the dummy tree header.; See TTree::GetBranch(). Bool_t GetBranchStatus(const char* branchname) const; Forwards the execution to the dummy tree header.; See TTree::GetBranchStatus(). TVirtualTreePlayer * GetPlayer(); Forwards the execution to the dummy tree header.; See TTree::GetPlayer(). Long64_t Process(const char* filename, Option_t* option = """", Long64_t nentries = 1000000000, Long64_t firstentry = 0); Forwards the execution to the TDSet.; The return value is -1 in case of error and TSelector::GetStatus() in; in case of success.; See TDSet::Process(). Long64_t Process(TSelector* selector, Option_t* option = """", Long64_t nentries = 1000000000, Long64_t firstentry = 0); The return value is -1 in case of error and TSelector::GetStatus() in; in case of success. void SetDebug(Int_t level = 1, Long64_t min = 0, Long64_t max = 9999999); See TTree::SetDebug. void SetName(const char* name); See TTree::GetName. Long64_t GetEntries() const; Returns the total number of entries in the TProofChain, which is; the number of entries in the TDSet that it holds. Long64_t GetEntries(const char* sel); See TTree::GetEntries(const char *selection); Not implemented in TProofChain. Shouldn't be used. void Progress(Long64_t total, Long64_t processed); Changes the number of processed entries. Long64_t GetReadEntry() const; Returns the number of processed entries. void ReleaseProof(); Releases PROOF. Disconnect the ""progress"" signal. void ConnectProof(); Connects the proof ""Progress"" signal. TProofChain(). Int_t Debug() const; {return fDebug;}. Long64_t Draw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = 1000000000, Long64_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TProofChain.html:32420,error,error,32420,root/html602/TProofChain.html,https://root.cern,https://root.cern/root/html602/TProofChain.html,4,['error'],['error']
Availability," Associated functions. One or more object (typically a TF1*) can be added to the list; of functions (fFunctions) associated to each histogram.; When TH1::Fit is invoked, the fitted function is added to this list.; Given an histogram h, one can retrieve an associated function; with: TF1 *myfunc = h->GetFunction(""myfunc"");. Access to the fit result. The function returns a TFitResultPtr which can hold a pointer to a TFitResult object.; By default the TFitResultPtr contains only the status of the fit which is return by an; automatic conversion of the TFitResultPtr to an integer. One can write in this case directly:; Int_t fitStatus = h->Fit(myFunc). If the option ""S"" is instead used, TFitResultPtr contains the TFitResult and behaves as a smart; pointer to it. For example one can do:; TFitResultPtr r = h->Fit(myFunc,""S"");; TMatrixDSym cov = r->GetCovarianceMatrix(); // to access the covariance matrix; Double_t chi2 = r->Chi2(); // to retrieve the fit chi2; Double_t par0 = r->Parameter(0); // retrieve the value for the parameter 0; Double_t err0 = r->ParError(0); // retrieve the error for the parameter 0; r->Print(""V""); // print full information of fit including covariance matrix; r->Write(); // store the result in a file. The fit parameters, error and chi2 (but not covariance matrix) can be retrieved also; from the fitted function.; If the histogram is made persistent, the list of; associated functions is also persistent. Given a pointer (see above); to an associated function myfunc, one can retrieve the function/fit; parameters with calls such as:; Double_t chi2 = myfunc->GetChisquare();; Double_t par0 = myfunc->GetParameter(0); //value of 1st parameter; Double_t err0 = myfunc->GetParError(0); //error on first parameter. Access to the fit status. The status of the fit can be obtained converting the TFitResultPtr to an integer; independently if the fit option ""S"" is used or not:; TFitResultPtr r = h->Fit(myFunc,opt);; Int_t fitStatus = r;. The fitStatus is 0 if the fit is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH1.html:82472,error,error,82472,root/html534/TH1.html,https://root.cern,https://root.cern/root/html534/TH1.html,6,['error'],['error']
Availability," Associated functions. One or more object (typically a TF1*) can be added to the list; of functions (fFunctions) associated to each histogram.; When TH1::Fit is invoked, the fitted function is added to this list.; Given an histogram h, one can retrieve an associated function; with: TF1 *myfunc = h->GetFunction(""myfunc"");. Access to the fit result. The function returns a TFitResultPtr which can hold a pointer to a TFitResult object.; By default the TFitResultPtr contains only the status of the fit which is return by an; automatic conversion of the TFitResultPtr to an integer. One can write in this case directly:; Int_t fitStatus = h->Fit(myFunc). If the option ""S"" is instead used, TFitResultPtr contains the TFitResult and behaves as a smart; pointer to it. For example one can do:; TFitResultPtr r = h->Fit(myFunc,""S"");; TMatrixDSym cov = r->GetCovarianceMatrix(); // to access the covariance matrix; Double_t chi2 = r->Chi2(); // to retrieve the fit chi2; Double_t par0 = r->Parameter(0); // retrieve the value for the parameter 0; Double_t err0 = r->ParError(0); // retrieve the error for the parameter 0; r->Print(""V""); // print full information of fit including covariance matrix; r->Write(); // store the result in a file. The fit parameters, error and chi2 (but not covariance matrix) can be retrieved also; from the fitted function.; If the histogram is made persistent, the list of; associated functions is also persistent. Given a pointer (see above); to an associated function myfunc, one can retrieve the function/fit; parameters with calls such as:; Double_t chi2 = myfunc->GetChisquare();; Double_t par0 = myfunc->GetParameter(0); //value of 1st parameter; Double_t err0 = myfunc->GetParError(0); //error on first parameter. Access to the fit status. The status of the fit can be obtained converting the TFitResultPtr to an integer; independently if the fit option ""S"" is used or not:; TFitResultPtr r = h=>Fit(myFunc,opt);; Int_t fitStatus = r;. The fitStatus is 0 if the fit is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH1.html:79202,error,error,79202,root/html532/TH1.html,https://root.cern,https://root.cern/root/html532/TH1.html,2,['error'],['error']
Availability," Associated functions. One or more object (typically a TF1*) can be added to the list; of functions (fFunctions) associated to each histogram.; When TH1::Fit is invoked, the fitted function is added to this list.; Given an histogram h, one can retrieve an associated function; with: TF1 *myfunc = h->GetFunction(""myfunc"");. Access to the fit result. The function returns a TFitResultPtr which can hold a pointer to a TFitResult object.; By default the TFitResultPtr contains only the status of the fit which is return by an; automatic conversion of the TFitResultPtr to an integer. One can write in this case directly:; Int_t fitStatus = h->Fit(myFunc). If the option ""S"" is instead used, TFitResultPtr contains the TFitResult and behaves as a smart; pointer to it. For example one can do:; TFitResultPtr r = h->Fit(myFunc,""S"");; TMatrixDSym cov = r->GetCovarianceMatrix(); // to access the covariance matrix; Double_t chi2 = r->Chi2(); // to retrieve the fit chi2; Double_t par0 = r->Parameter(0); // retrieve the value for the parameter 0; Double_t err0 = r->ParError(0); // retrieve the error for the parameter 0; r->Print(""V""); // print full information of fit including covariance matrix; r->Write(); // store the result in a file. The fit parameters, error and chi2 (but not covariance matrix) can be retrieved also; from the fitted function.; If the histogram is made persistent, the list of; associated functions is also persistent. Given a pointer (see above); to an associated function myfunc, one can retrieve the function/fit; parameters with calls such as:; Double_t chi2 = myfunc->GetChisquare();; Double_t par0 = myfunc->GetParameter(0); //value of 1st parameter; Double_t err0 = myfunc->GetParError(0); //error on first parameter. Access to the fit status. The status of the fit can be obtained converting the TFitResultPtr to an integer; indipendently if the fit option ""S"" is used or not:; TFitResultPtr r = h=>Fit(myFunc,opt);; Int_t fitStatus = r;. The fitStatus is 0 if the fit is",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH1.html:77468,error,error,77468,root/html528/TH1.html,https://root.cern,https://root.cern/root/html528/TH1.html,2,['error'],['error']
Availability," Attributes |; List of all members ; TMVA::MinuitWrapper Class ReferenceTMVA. ; Wrapper around MINUIT. ; Definition at line 46 of file MinuitWrapper.h. Public Member Functions;  MinuitWrapper (IFitterTarget &target, Int_t maxpar);  constructor ;  ; virtual ~MinuitWrapper ();  ; void Clear (Option_t *=nullptr);  reset the fitter environment ;  ; TObject * Clone (char const *) const;  produces a clone of this MinuitWrapper ;  ; Int_t Eval (Int_t, Double_t *, Double_t &, Double_t *, Int_t);  std::vector<Double_t> parameters( npar ); ;  ; Int_t ExecuteCommand (const char *command, Double_t *args, Int_t nargs);  Execute a fitter command; command : command string args : list of nargs command arguments. ;  ; Int_t GetErrors (Int_t ipar, Double_t &eplus, Double_t &eminus, Double_t &eparab, Double_t &globcc);  return current errors for a parameter ;  ; Int_t GetStats (Double_t &amin, Double_t &edm, Double_t &errdef, Int_t &nvpar, Int_t &nparx);  return global fit parameters ;  ; virtual TClass * IsA () const;  ; void SetFitterTarget (IFitterTarget &target);  ; Int_t SetParameter (Int_t ipar, const char *parname, Double_t value, Double_t verr, Double_t vlow, Double_t vhigh);  set initial values for a parameter ;  ; virtual void Streamer (TBuffer &);  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TMinuit;  TMinuit ();  Minuit normal constructor. ;  ;  TMinuit (Int_t maxpar);  Minuit normal constructor. ;  ;  ~TMinuit () override;  Minuit default destructor. ;  ; virtual void BuildArrays (Int_t maxpar=15);  Create internal Minuit arrays for the maxpar parameters. ;  ; TObject * Clone (const char *newname="""") const override;  Make a clone of an object using the Streamer facility. ;  ; virtual Int_t Command (const char *command);  Execute a Minuit command. ;  ; virtual TObject * Contour (Int_t npoints=10, Int_t pa1=0, Int_t pa2=1);  Creates a TGraph object describing the n-sigma con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MinuitWrapper.html:1045,error,errors,1045,doc/master/classTMVA_1_1MinuitWrapper.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MinuitWrapper.html,1,['error'],['errors']
Availability," Ax. and chi**2 is minimized; (a) not constrained: minimisation is performed a function of x for fixed lambda=0; or; (b) constrained: minimisation is performed a function of x and lambda. This applies to a very large number of problems, where the measured; distribution y is a linear superposition of several Monte Carlo shapes; and the sum of these shapes gives the output distribution x. The constraint can be useful to reduce biases on the result x; in cases where the vector y follows non-Gaussian probability densities; (example: Poisson statistics at counting experiments in particle physics). Some random examples:. (1) measure a cross-section as a function of, say, E_T(detector); and unfold it to obtain the underlying distribution E_T(generator); (2) measure a lifetime distribution and unfold the contributions from; different flavours; (3) measure the transverse mass and decay angle; and unfold for the true mass distribution plus background. Documentation. Some technical documentation is available here:; http://www.desy.de/~sschmitt. References:. A nice overview of the method is given in:; The L-curve and Its Use in the Numerical Treatment of Inverse Problems; (2000) by P. C. Hansen, in Computational Inverse Problems in; Electrocardiology, ed. P. Johnston,; Advances in Computational Bioengineering; http://www.imm.dtu.dk/~pch/TR/Lcurve.ps; The relevant equations are (1), (2) for the unfolding; and (14) for the L-curve curvature definition. Related literature on unfolding:; The program package RUN and the web-page by V.Blobel; http://www.desy.de/~blobel/unfold.html; Talk by V. Blobel, Terascale Statistics school; https://indico.desy.de/contributionDisplay.py?contribId=23&confId=1149; References quoted in Blobel's talk:; Per Chistian Hansen, Rank-Deficient and Discrete Ill-posed Problems,; Siam (1998); Jari Kaipio and Erkki Somersalo, Statistical and Computational; Inverse problems, Springer (2005). Implementation. The result of the unfolding is calculated as follows:. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TUnfold.html:2009,avail,available,2009,root/html528/TUnfold.html,https://root.cern,https://root.cern/root/html528/TUnfold.html,4,['avail'],['available']
Availability," Beta(1,1)Definition TEfficiency.h:40; TEfficiency::kFFC@ kFFCFeldman-Cousins interval.Definition TEfficiency.h:38; TEfficiency::kBBayesian@ kBBayesianUser specified Prior ~ Beta(fBeta_alpha,fBeta_beta)Definition TEfficiency.h:41; TEfficiency::kFNormal@ kFNormalNormal approximation.Definition TEfficiency.h:35; TEfficiency::kFCP@ kFCPClopper-Pearson interval (recommended by PDG)Definition TEfficiency.h:34; TEfficiency::SetTitlevoid SetTitle(const char *title) overrideSets the title.Definition TEfficiency.cxx:3726; TEfficiency::FitTFitResultPtr Fit(TF1 *f1, Option_t *opt="""")Fits the efficiency using the TBinomialEfficiencyFitter class.Definition TEfficiency.cxx:2555; TEfficiency::fPaintHistoTH2 * fPaintHisto! Temporary histogram for paintingDefinition TEfficiency.h:57; TF11-Dim function classDefinition TF1.h:233; TFitResultPtrProvides an indirection to the TFitResult class and with a semantics identical to a TFitResult pointe...Definition TFitResultPtr.h:32; TGraph2DAsymmErrorsGraph 2D class with errors.Definition TGraph2DAsymmErrors.h:26; TGraphAsymmErrorsTGraph with asymmetric error bars.Definition TGraphAsymmErrors.h:26; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH2Service class for 2-D histogram classes.Definition TH2.h:30; TListA doubly linked list.Definition TList.h:38; TNamedThe TNamed class is the base class for all named ROOT classes.Definition TNamed.h:29; TObject::TestBitR__ALWAYS_INLINE Bool_t TestBit(UInt_t f) constDefinition TObject.h:199; TObject::SetBitvoid SetBit(UInt_t f, Bool_t set)Set or unset the user status bits as specified in f.Definition TObject.cxx:786; bool; double; int; unsigned int; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; f1TF1 * f1Definition legend1.C:11; graphDefinition graph.py:1; Drawth1 Draw(). histhistincTEfficiency.h. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:40:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TEfficiency_8h_source.html:28946,error,error,28946,doc/master/TEfficiency_8h_source.html,https://root.cern,https://root.cern/doc/master/TEfficiency_8h_source.html,1,['error'],['error']
Availability," Blog . ; Workshops . ; Support . ; Forum . ; Bug submission guidelines . ; Submit a Bug . ; RootTalk Digest . ; Discourse Mailing List Mode . ; About . ; Licence . ; Contact Us . ; Project Founders . ; Team . ; Previous Developers . ; Development . ; Program of Work . ; Code Owners . ; Release Checklist . ; Coding Conventions . ; Shifter's Instructions . ; Git Primer . ; Creating a Pull Request . ; Github ssh key . ; Git Tips and Tricks . ; Git How Tos . ; A suggested work flow for distributed projects: NoSY . ; Browse Sources . ; Meetings . ; ROOT 7 . ; Run the tests . ; Setup externals from AFS/CVMFS . ; Jenkins . ; Doxygen . ; Benchmarks . ; Contribute . ; Collaborate with Us . You are hereHome » Documentation Reference Guide. The Reference Guide is available for all major ROOT releases, and for the current HEAD of the git master:. HEAD of the git master - browse; 6.20 - browse | download; 6.18 - browse | download; 6.16 - browse | download; 6.14 - browse | download; 6.12 - browse | download; 6.10 - browse | download; 6.08 - browse | download; 6.06 - browse | download; 6.04 - browse | download; 6.02 - browse | download; 5.34 - browse | download; 5.32 - browse | download; 5.30 - browse | download; 5.28 - browse | download; 5.26 - browse | download; 5.24 - browse | download. Additionally, the source code is accessible via:. Browsing the Git repository using gitweb; Github. Sitemap. DownloadDownload ROOT; All Releases. DocumentationReference Manual; User's Guides; HowTo; Courses; Building ROOT; Tutorials; Javascript Root; ROOT and Spark; Publications; FAQ. NewsBlog; Workshops. SupportForum; Bug submission guidelines; Submit a Bug; Discourse Mailing List Mode; RootTalk Digest. AboutLicence; Contact Us; Project Founders; Team; Previous Developers. DevelopmentProgram of Work; Code Owners; Release Checklist; Coding Conventions; Shifter's Instructions; Git Primer; Browse Sources; Meetings; ROOT 7; Run the tests; Jenkins; Setup externals from AFS/CVMFS; Doxygen; Benchmark",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/guides/reference-guide.html:2143,down,download,2143,d/guides/reference-guide.html,https://root.cern,https://root.cern/d/guides/reference-guide.html,1,['down'],['download']
Availability," Bool_t efficiency = kFALSE, Double_t scaleFactor = 1.0); Create a histogram from the asymmetry between the specified TH1 objects; which may have fixed or variable bin widths, but which must both have; the same binning. The asymmetry is calculated as (1-2)/(1+2). Error bars are; calculated using Binomial statistics. Prints a warning and rounds; any bins with non-integer contents. Use the optional parameter to; specify the confidence level in units of sigma to use for; calculating error bars. The nominal bin width specifies the; default used by addAsymmetryBin(), and is used to set the relative; normalization of bins with different widths. If not set, the; nominal bin width is calculated as range/nbins. RooHist(const RooHist& hist1, const RooHist& hist2, Double_t wgt1 = 1.0, Double_t wgt2 = 1.0, RooAbsData::ErrorType etype = RooAbsData::Poisson, Double_t xErrorFrac = 1.0); Create histogram as sum of two existing histograms. If Poisson errors are selected the histograms are; added and Poisson confidence intervals are calculated for the summed content. If wgt1 and wgt2 are not; 1 in this mode, a warning message is printed. If SumW2 errors are selectd the histograms are added; and the histograms errors are added in quadrature, taking the weights into account. void initialize(); Perform common initialization for all constructors. Double_t getFitRangeNEvt() const; Return the number of events of the dataset associated with this RooHist.; This is the number of events in the RooHist itself, unless a different; value was specified through setRawEntries(). Double_t getFitRangeNEvt(Double_t xlo, Double_t xhi) const; Calculate integral of histogram in given range. Double_t getFitRangeBinW() const; Return (average) bin width of this RooHist. Int_t roundBin(Double_t y); Return the nearest positive integer to the input value; and print a warning if an adjustment is required. void addBin(Axis_t binCenter, Double_t n, Double_t binWidth = 0, Double_t xErrorFrac = 1.0, Double_t scaleFac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooHist.html:21511,error,errors,21511,root/html526/RooHist.html,https://root.cern,https://root.cern/root/html526/RooHist.html,7,['error'],['errors']
Availability," Bool_t nameChange); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTFormula::Clear(Option_t* option = """"); virtual TObject*Clone(const char* newName = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tTFormula::Compile(const char* expression = """"); virtual voidTFormula::Copy(TObject& formula) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual char*TFormula::DefinedString(Int_t code); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; voiddump(); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; Double_teval(const RooArgSet* nset = 0); virtual Double_tTFormula::Eval(Double_t x, Double_t y = 0, Double_t z = 0, Double_t t = 0) const; virtual Double_tTFormula::EvalPar(const Double_t* x, const Double_t* params = 0); virtual Double_tTFormula::EvalParOld(const Double_t* x, const Double_t* params = 0); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual TStringTFormula::GetExpFormula(Option_t* option = """") const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooFormula.html:2438,Error,Error,2438,root/html532/RooFormula.html,https://root.cern,https://root.cern/root/html532/RooFormula.html,3,['Error'],['Error']
Availability," Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Long_tExecPlugin(const char* name = 0, const char* fname = 0, const char* cmd = 0, Int_t pos = kRight, Int_t subpos = -1); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteDefaultAction(TObject* obj)SIGNAL ; virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TGFrame*GetActFrame() const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); TList*TGMainFrame::GetBindList() const; static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; virtual TBrowser*TBrowserImp::GetBrowser() const; voidTGMainFrame::GetClassHints(const char*& className, const char*& resourceName) const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRootBrowser.html:5236,error,error,5236,root/html528/TRootBrowser.html,https://root.cern,https://root.cern/root/html528/TRootBrowser.html,4,['error'],['error']
Availability," Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTQObject::EmitVA<>(const char* signal_name, Int_t); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); static Long_tExecuteFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); TApplication::EExitOnExceptionExitOnException(TApplication::EExitOnException opt = kExit); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TApplicationImp*GetApplicationImp(); static TList*GetApplications(); TApplication*GetAppRemote() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; const char*GetIdleCommand() const; TList*TQObject::GetListOfClassSignals() const; TList*TQObject::GetListOfConnections() const; TList*TQObject::GetListOfSignals() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual voidGetOptions(Int_t* argc, char** argv); TSignalHandler*GetSig",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TApplication.html:4109,error,error,4109,root/html602/TApplication.html,https://root.cern,https://root.cern/root/html602/TApplication.html,4,['error'],['error']
Availability," Bool_t zapOnError = kFALSE); TStringgetPunctuation() const; virtual TClass*IsA() const; Bool_tisPunctChar(char c) const; RooStreamParser&operator=(const RooStreamParser&); Bool_treadDouble(Double_t& value, Bool_t zapOnError = kFALSE); Bool_treadInteger(Int_t& value, Bool_t zapOnError = kFALSE); TStringreadLine(); Bool_treadString(TString& value, Bool_t zapOnError = kFALSE); TStringreadToken(); voidsetPunctuation(const TString& punct); virtual voidShowMembers(TMemberInspector& insp, char* parent); virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); voidzapToEnd(Bool_t inclContLines = kFALSE). Data Members; protected:. Bool_t_atEOF; Bool_t_atEOL; istream*_is; TString_prefix; TString_punct. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooStreamParser(istream& is); Construct parser on given input stream. RooStreamParser(istream& is, const TString& errPrefix); Construct parser on given input stream. Use given errorPrefix to; prefix any parsing error messages. ~RooStreamParser(); Destructor. Bool_t atEOL(); If true, parser is at end of line in stream. void setPunctuation(const TString& punct); Change list of characters interpreted as punctuation. Bool_t isPunctChar(char c) const; Check if given char is considered punctuation. TString readToken(); Read one token separated by any of the know punctuation characters; This function recognizes and handles comment lines in the istream (those; starting with '#', quoted strings ("""") the content of which is not tokenized; and '+-.' characters that are part of a floating point numbers and are exempt; from being interpreted as a token separator in case '+-.' are defined as; token separators. TString readLine(); Read an entire line from the stream and return as TString; This method recognizes the use of '\\' in the istream; as line continuation token. void zapToEnd(Bool_t inclContLines = kFALSE); Eat all characters up to and including then end of the; current line. If inclC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooStreamParser.html:2503,error,errorPrefix,2503,root/html526/RooStreamParser.html,https://root.cern,https://root.cern/root/html526/RooStreamParser.html,2,['error'],"['error', 'errorPrefix']"
Availability," Bool_tBinarySearchReadList(TFPBlock*, Long64_t, Int_t, Int_t*); virtual voidTObject::Browse(TBrowser* b); Bool_tCheckBlockInCache(char*&, TFPBlock*); Bool_tCheckCachePath(const char*); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; TFPBlock*CreateBlockObj(Long64_t*, Int_t*, Int_t); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; char*GetBlockFromCache(const char*, Int_t); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TMutex*GetMutexSynch() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TFPBlock*GetPendingBlock(); TThread*GetThread() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Long64_tGetWaitTime(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFilePrefetch.html:1585,error,error,1585,root/html532/TFilePrefetch.html,https://root.cern,https://root.cern/root/html532/TFilePrefetch.html,2,['error'],['error']
Availability," Bool_tBinarySearchReadList(TFPBlock*, Long64_t, Int_t, Int_t*); virtual voidTObject::Browse(TBrowser* b); Bool_tCheckBlockInCache(char*&, TFPBlock*); Bool_tCheckCachePath(const char*); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; TFPBlock*CreateBlockObj(Long64_t*, Int_t*, Int_t); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; char*GetBlockFromCache(const char*, Int_t); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TFPBlock*GetPendingBlock(); TThread*GetThread() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; Long64_tGetWaitTime(); virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFilePrefetch.html:1585,error,error,1585,root/html530/TFilePrefetch.html,https://root.cern,https://root.cern/root/html530/TFilePrefetch.html,1,['error'],['error']
Availability," Bool_tBuildingScene() const; virtual Bool_tCanLoopOnPrimitives() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidCloseComposite(); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidDrawViewer(); virtual voidTObject::Dump() constMENU ; virtual voidEndScene(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject::InheritsFrom(const TClass* cl) const; virtual voidTObject",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TVirtualViewer3D.html:12615,error,error,12615,root/html528/TVirtualViewer3D.html,https://root.cern,https://root.cern/root/html528/TVirtualViewer3D.html,10,['error'],['error']
Availability," Bool_tCheckProofAuth(Int_t cSec, TString& det); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static Int_tDecodeRSAPublic(const char* rsapubexport, rsa_NUMBER& n, rsa_NUMBER& d, char** rsassl = 0); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static TList*GetAuthInfo(); static const char*GetAuthMethod(Int_t idx); static Int_tGetAuthMethodIdx(const char* meth); static Bool_tGetAuthReUse(); static Int_tGetClientProtocol(); static char*GetDefaultDetails(Int_t method, Int_t opt, const char* user); static const char*GetDefaultUser(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); static TDatimeGetGlobalExpDate(); static Bool_tGetGlobalPwHash(); static Bool_tGetGlobalSRPPwd(); static const char*GetGlobalUser(); static GlobusAuth_tGetGlobusAuthHook(); THostAuth*GetHostAuth() const; static THostAuth*GetHostAuth(const char* host, const char* user = """", Option_t* opt = ""R"", Int_t* Exact = 0); virtual const char*TObject::GetIc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAuthenticate.html:2089,error,error,2089,root/html526/TAuthenticate.html,https://root.cern,https://root.cern/root/html526/TAuthenticate.html,11,['error'],['error']
Availability," Bool_tRooAbsReal::_boolValue! Transient cache for bool values from tree branches ; UChar_tRooAbsReal::_byteValue! Transient cache for byte values from tree branches ; static Bool_tRooAbsReal::_cacheCheckIf true, always validate contents of clean which outcome of evaluate(); deque<RooAbsCache*>RooAbsArg::_cacheListlist of caches; RooCategoryProxy_catAccept/reject categort; RooRefCountListRooAbsArg::_clientListlist of client objects; RooRefCountListRooAbsArg::_clientListShapesubset of clients that requested shape dirty flag propagation; RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooRealProxy_effFuncEfficiency modeling function; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; Bool_tRooAbsArg::_fastAllow fast access mode in getVal() and proxies; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsReal::_hideOffsetOffset hiding flag; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsArg::_isConstant! Cached isConstant status ; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Bool_tRooAbsArg::_localNoInhibitDirty! Prevent 'AlwaysDirty' mode for this node; static Int_tRooPrintable::_nameLength; TNamed*RooAbsArg::_namePtr! Do not persist.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooEfficiency.html:40295,error,errors,40295,root/html534/RooEfficiency.html,https://root.cern,https://root.cern/root/html534/RooEfficiency.html,2,['error'],['errors']
Availability," Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fClosecancel button; TGColorSelect*fConfColorColor for the graph; TGVerticalFrame*fConfFrameConfidence Intervals Frame; TGNumberEntry*fConfLevelConfidence Level; TGColorSelect*fContourColorColor for the graph; TGNumberEntry*fContourErrorError Level for Contour; TGVerticalFrame*fContourFrameContour Frame; TGCheckButton*fContourOverSuperimpose the graphics; TGComboBox*fContourPar1Parameter 1 for Contour; TGComboBox*fContourPar2Parameter 2 for Contour; TGNumberEntry*fContourPointsNumber of points for the graph; TGTextButton*fDrawok button; TBackCompFitter*fFitterFitter.; TGVerticalFrame*fMainFrameMain Vertical Frame; TGVerticalFrame*fScanFrameScan Frame; TGNumberEntry*fScanMaxMax Value for Contour; TGNumberEntry*fScanMinMin Value for Contour; TGComboBox*fScanParParameter for Scan; TGNumberEntry*fScanPointsNumber of points for the graph; TGTab*fTabTab containing the available methods. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void CreateContourFrame(). void CreateScanFrame(). void CreateConfFrame(). void AddParameters(TGComboBox* ). void DrawContour(). void DrawScan(). void DrawConfidenceLevels(). void ConnectSlots(). TAdvancedGraphicsDialog(const TAdvancedGraphicsDialog& ). TAdvancedGraphicsDialog & operator=(const TAdvancedGraphicsDialog& ). TAdvancedGraphicsDialog(const TGWindow* p, const TGWindow* main). ~TAdvancedGraphicsDialog(). void DoDraw(). void DoChangedScanPar(Int_t selected). » Author: David Gonzalez Maline 11/12/2008 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/fitpanel:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TAdvancedGraphicsDialog.html:23070,avail,available,23070,root/html534/TAdvancedGraphicsDialog.html,https://root.cern,https://root.cern/root/html534/TAdvancedGraphicsDialog.html,2,['avail'],['available']
Availability," Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fClosecancel button; TGColorSelect*fConfColorColor for the graph; TGVerticalFrame*fConfFrameConfidence Intervals Frame; TGNumberEntry*fConfLevelConfidence Level; TGColorSelect*fContourColorColor for the graph; TGNumberEntry*fContourErrorError Level for Contour; TGVerticalFrame*fContourFrameContour Frame; TGCheckButton*fContourOverSuperimpose the graphics; TGComboBox*fContourPar1Parameter 1 for Contour; TGComboBox*fContourPar2Parameter 2 for Contour; TGNumberEntry*fContourPointsNumber of points for the graph; TGTextButton*fDrawok button; TBackCompFitter*fFitterFitter.; TGVerticalFrame*fMainFrameMain Vertical Frame; TGVerticalFrame*fScanFrameScan Frame; TGNumberEntry*fScanMaxMax Value for Contour; TGNumberEntry*fScanMinMin Value for Contour; TGComboBox*fScanParParameter for Scan; TGNumberEntry*fScanPointsNumber of points for the graph; TGTab*fTabTab containing the available methods. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void CreateContourFrame(). void CreateScanFrame(). void CreateConfFrame(). void AddParameters(TGComboBox* ). void DrawContour(). void DrawScan(). void DrawConfidenceLevels(). void ConnectSlots(). TAdvancedGraphicsDialog(const TAdvancedGraphicsDialog& ). TAdvancedGraphicsDialog & operator=(const TAdvancedGraphicsDialog& ). TAdvancedGraphicsDialog(const TGWindow* p, const TGWindow* main). ~TAdvancedGraphicsDialog(). void DoDraw(). void DoChangedScanPar(Int_t selected). » Author: David Gonzalez Maline 11/12/2008 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/fitpanel:$Id: TAdvancedGraphicsDialog.h 31212 2009-11-16 17:30:21Z moneta $ » Last generated: 2009-12-07 13:49; This page has been automatically genera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAdvancedGraphicsDialog.html:22910,avail,available,22910,root/html526/TAdvancedGraphicsDialog.html,https://root.cern,https://root.cern/root/html526/TAdvancedGraphicsDialog.html,1,['avail'],['available']
Availability," Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fClosecancel button; TGColorSelect*fConfColorColor for the graph; TGVerticalFrame*fConfFrameConfidence Intervals Frame; TGNumberEntry*fConfLevelConfidence Level; TGColorSelect*fContourColorColor for the graph; TGNumberEntry*fContourErrorError Level for Contour; TGVerticalFrame*fContourFrameContour Frame; TGCheckButton*fContourOverSuperimpose the graphics; TGComboBox*fContourPar1Parameter 1 for Contour; TGComboBox*fContourPar2Parameter 2 for Contour; TGNumberEntry*fContourPointsNumber of points for the graph; TGTextButton*fDrawok button; TBackCompFitter*fFitterFitter.; TGVerticalFrame*fMainFrameMain Vertical Frame; TGVerticalFrame*fScanFrameScan Frame; TGNumberEntry*fScanMaxMax Value for Contour; TGNumberEntry*fScanMinMin Value for Contour; TGComboBox*fScanParParameter for Scan; TGNumberEntry*fScanPointsNumber of points for the graph; TGTab*fTabTab containing the available methods. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void CreateContourFrame(). void CreateScanFrame(). void CreateConfFrame(). void AddParameters(TGComboBox* ). void DrawContour(). void DrawScan(). void DrawConfidenceLevels(). void ConnectSlots(). TAdvancedGraphicsDialog(const TAdvancedGraphicsDialog& ). TAdvancedGraphicsDialog & operator=(const TAdvancedGraphicsDialog& ). TAdvancedGraphicsDialog(const TGWindow* p, const TGWindow* main). ~TAdvancedGraphicsDialog(). void DoDraw(). void DoChangedScanPar(Int_t selected). » Author: David Gonzalez Maline 11/12/2008 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/fitpanel:$Id: TAdvancedGraphicsDialog.h 31212 2009-11-16 17:30:21Z moneta $ » Last generated: 2010-09-23 20:01; This page has been automatically genera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TAdvancedGraphicsDialog.html:22896,avail,available,22896,root/html528/TAdvancedGraphicsDialog.html,https://root.cern,https://root.cern/root/html528/TAdvancedGraphicsDialog.html,1,['avail'],['available']
Availability," Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fClosecancel button; TGColorSelect*fConfColorColor for the graph; TGVerticalFrame*fConfFrameConfidence Intervals Frame; TGNumberEntry*fConfLevelConfidence Level; TGColorSelect*fContourColorColor for the graph; TGNumberEntry*fContourErrorError Level for Contour; TGVerticalFrame*fContourFrameContour Frame; TGCheckButton*fContourOverSuperimpose the graphics; TGComboBox*fContourPar1Parameter 1 for Contour; TGComboBox*fContourPar2Parameter 2 for Contour; TGNumberEntry*fContourPointsNumber of points for the graph; TGTextButton*fDrawok button; TBackCompFitter*fFitterFitter.; TGVerticalFrame*fMainFrameMain Vertical Frame; TGVerticalFrame*fScanFrameScan Frame; TGNumberEntry*fScanMaxMax Value for Contour; TGNumberEntry*fScanMinMin Value for Contour; TGComboBox*fScanParParameter for Scan; TGNumberEntry*fScanPointsNumber of points for the graph; TGTab*fTabTab containing the available methods. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void CreateContourFrame(). void CreateScanFrame(). void CreateConfFrame(). void AddParameters(TGComboBox* ). void DrawContour(). void DrawScan(). void DrawConfidenceLevels(). void ConnectSlots(). TAdvancedGraphicsDialog(const TAdvancedGraphicsDialog& ). TAdvancedGraphicsDialog & operator=(const TAdvancedGraphicsDialog& ). TAdvancedGraphicsDialog(const TGWindow* p, const TGWindow* main). ~TAdvancedGraphicsDialog(). void DoDraw(). void DoChangedScanPar(Int_t selected). » Author: David Gonzalez Maline 11/12/2008 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/fitpanel:$Id: TAdvancedGraphicsDialog.h 31212 2009-11-16 17:30:21Z moneta $ » Last generated: 2011-07-04 15:24; This page has been automatically genera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TAdvancedGraphicsDialog.html:23051,avail,available,23051,root/html530/TAdvancedGraphicsDialog.html,https://root.cern,https://root.cern/root/html530/TAdvancedGraphicsDialog.html,1,['avail'],['available']
Availability," Bool_tTGFrame::fgInit; static UInt_tTGFrame::fgLastButton; static Time_tTGFrame::fgLastClick; static const TGGC*TGFrame::fgShadowGC; static UInt_tTGFrame::fgUserColor; static const TGGC*TGFrame::fgWhiteGC; static Pixel_tTGFrame::fgWhitePixel. private:. TGTextButton*fClosecancel button; TGColorSelect*fConfColorColor for the graph; TGVerticalFrame*fConfFrameConfidence Intervals Frame; TGNumberEntry*fConfLevelConfidence Level; TGColorSelect*fContourColorColor for the graph; TGNumberEntry*fContourErrorError Level for Contour; TGVerticalFrame*fContourFrameContour Frame; TGCheckButton*fContourOverSuperimpose the graphics; TGComboBox*fContourPar1Parameter 1 for Contour; TGComboBox*fContourPar2Parameter 2 for Contour; TGNumberEntry*fContourPointsNumber of points for the graph; TGTextButton*fDrawok button; TBackCompFitter*fFitterFitter.; TGVerticalFrame*fMainFrameMain Vertical Frame; TGVerticalFrame*fScanFrameScan Frame; TGNumberEntry*fScanMaxMax Value for Contour; TGNumberEntry*fScanMinMin Value for Contour; TGComboBox*fScanParParameter for Scan; TGNumberEntry*fScanPointsNumber of points for the graph; TGTab*fTabTab containing the available methods. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void CreateContourFrame(). void CreateScanFrame(). void CreateConfFrame(). void AddParameters(TGComboBox* ). void DrawContour(). void DrawScan(). void DrawConfidenceLevels(). void ConnectSlots(). TAdvancedGraphicsDialog(const TAdvancedGraphicsDialog& ). TAdvancedGraphicsDialog & operator=(const TAdvancedGraphicsDialog& ). TAdvancedGraphicsDialog(const TGWindow* p, const TGWindow* main). ~TAdvancedGraphicsDialog(). void DoDraw(). void DoChangedScanPar(Int_t selected). » Author: David Gonzalez Maline 11/12/2008 » Copyright (C) 1995-2006, Rene Brun and Fons Rademakers. *; » Last changed: root/fitpanel:$Id: TAdvancedGraphicsDialog.h 31212 2009-11-16 17:30:21Z moneta $ » Last generated: 2011-11-03 20:10; This page has been automatically genera",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TAdvancedGraphicsDialog.html:23051,avail,available,23051,root/html532/TAdvancedGraphicsDialog.html,https://root.cern,https://root.cern/root/html532/TAdvancedGraphicsDialog.html,2,['avail'],['available']
Availability," Bool_tTObject::Notify(); virtual Int_tTQObject::NumberOfConnections() const; virtual Int_tTQObject::NumberOfSignals() const; voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; virtual voidTApplication::Open(); voidTObject::operator delete(void* ptr); voidTObject::operator delete(void* ptr, void* vp); voidTObject::operator delete[](void* ptr); voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); TGApplication&operator=(const TGApplication&); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTObject::Print(Option_t* option = """") const; virtual Long_tTApplication::ProcessFile(const char* file, Int_t* error = 0, Bool_t keep = kFALSE); virtual Long_tTApplication::ProcessLine(const char* line, Bool_t sync = kFALSE, Int_t* error = 0); Bool_tTApplication::QuitOpt() const; virtual voidTApplication::Raise(); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); virtual voidTApplication::RemoveIdleTimer(); voidTObject::ResetBit(UInt_t f); Bool_tTApplication::ReturnFromRun() const; virtual voidTApplication::ReturnPressed(char* text)SIGNAL ; virtual voidTApplication::Run(Bool_t retrn = kFALSE); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTApplication::SetEchoMode(Bool_t mode); virtual voidTApplication::SetIdleTimer(UInt_t idleTimeInSec, const char* command); static voidTObject::SetObjectStat(Bool_t stat); voidTApplication::SetReturnFromRun(Bool_t ret); virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGApplication.html:7954,error,error,7954,root/html602/TGApplication.html,https://root.cern,https://root.cern/root/html602/TGApplication.html,4,['error'],['error']
Availability," Bool_tfErrorOutenable error output; TStringfHosthost to which we are connected; Int_tfPortport to which we are connected; TStringfTypetype of DBMS (MySQL, Oracle, SysBase, ...); static const char*fgFloatFmt! printf argument for floats and doubles, either ""%f"" or ""%e"" or ""%10f"" and so on. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSQLServer * Connect(const char* db, const char* uid, const char* pw); The db should be of the form: <dbms>://<host>[:<port>][/<database>],; e.g.: mysql://pcroot.cern.ch:3456/test, oracle://srv1.cern.ch/main,; pgsql://... or sapdb://...; The uid is the username and pw the password that should be used for; the connection. Depending on the <dbms> the shared library (plugin); for the selected system will be loaded. When the connection could not; be opened 0 is returned. Bool_t Exec(const char* sql); Execute sql query.; Usefull for commands like DROP TABLE or INSERT, where result set; is not interested. Return kTRUE if no error. Int_t GetErrorCode() const; returns error code of last operation; if res==0, no error; Each specific implementation of TSQLServer provides its own error coding. const char* GetErrorMsg() const; returns error message of last operation; if no errors, return 0; Each specific implementation of TSQLServer provides its own error messages. void ClearError(); reset error fields. void SetError(Int_t code, const char* msg, const char* method = 0); set new values for error fields; if method is specified, displays error message. Bool_t StartTransaction(); submit ""START TRANSACTION"" query to database; return kTRUE, if succesfull. Bool_t Commit(); submit ""COMMIT"" query to database; return kTRUE, if succesfull. Bool_t Rollback(); submit ""ROLLBACK"" query to database; return kTRUE, if succesfull. TList* GetTablesList(const char* wild = 0); Return list of user tables; Parameter wild specifies wildcard for table names.; It either contains exact table name to verify that table is exists or; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSQLServer.html:8346,error,error,8346,root/html528/TSQLServer.html,https://root.cern,https://root.cern/root/html528/TSQLServer.html,4,['error'],['error']
Availability," Bool_tfErrorOutenable error output; TStringfHosthost to which we are connected; Int_tfPortport to which we are connected; TStringfTypetype of DBMS (MySQL, Oracle, SysBase, ...); static const char*fgFloatFmt! printf argument for floats and doubles, either ""%f"" or ""%e"" or ""%10f"" and so on. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSQLServer * Connect(const char* db, const char* uid, const char* pw); The db should be of the form: <dbms>://<host>[:<port>][/<database>],; e.g.: mysql://pcroot.cern.ch:3456/test, oracle://srv1.cern.ch/main,; pgsql://... or sapdb://...; The uid is the username and pw the password that should be used for; the connection. Depending on the <dbms> the shared library (plugin); for the selected system will be loaded. When the connection could not; be opened 0 is returned. Bool_t Exec(const char* sql); Execute sql query.; Usefull for commands like DROP TABLE or INSERT, where result set; is not interested. Return kTRUE if no error. Int_t GetErrorCode() const; returns error code of last operation; if res==0, no error; Each specific implementation of TSQLServer provides its own error coding. const char* GetErrorMsg() const; returns error message of last operation; if no errors, return 0; Each specific implementation of TSQLServer provides its own error messages. void ClearError(); reset error fields. void SetError(Int_t code, const char* msg, const char* method = 0); set new values for error fields; if method is specified, displays error message. Bool_t StartTransaction(); submit ""START TRANSACTION"" query to database; return kTRUE, if successful. Bool_t Commit(); submit ""COMMIT"" query to database; return kTRUE, if successful. Bool_t Rollback(); submit ""ROLLBACK"" query to database; return kTRUE, if successful. TList* GetTablesList(const char* wild = 0); Return list of user tables; Parameter wild specifies wildcard for table names.; It either contains exact table name to verify that table is exists or; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSQLServer.html:8722,error,error,8722,root/html534/TSQLServer.html,https://root.cern,https://root.cern/root/html534/TSQLServer.html,2,['error'],['error']
Availability," Broadcast a raw buffer of specified length to all slaves in the specified list. ; Returns the number of slaves the buffer was sent to. Returns -1 in case of error. ; Definition at line 2567 of file TProof.cxx. ◆ Browse(). void TProof::Browse ; (; TBrowser * ; b). overridevirtual . Build the PROOF's structure in the browser. ; Reimplemented from TObject.; Definition at line 10179 of file TProof.cxx. ◆ BuildPackage(). Int_t TProof::BuildPackage ; (; const char * ; package, . EBuildPackageOpt ; opt = kBuildAll, . Int_t ; chkveropt = TPackMgr::kCheckROOT, . TList * ; workers = 0 . ). private . Build specified package. ; Executes the PROOF-INF/BUILD.sh script if it exists on all unique nodes. If opt is kBuildOnSlavesNoWait then submit build command to slaves, but don't wait for results. If opt is kCollectBuildResults then collect result from slaves. To be used on the master. If opt = kBuildAll (default) then submit and wait for results (to be used on the client). Returns 0 in case of success and -1 in case of error. ; Definition at line 7990 of file TProof.cxx. ◆ CancelStagingDataSet(). Bool_t TProof::CancelStagingDataSet ; (; const char * ; dataset). virtual . Cancels a dataset staging request. ; Returns kTRUE on success, kFALSE on failure. Dataset not found equals to a failure. ; Reimplemented in TProofLite.; Definition at line 11046 of file TProof.cxx. ◆ cd(). void TProof::cd ; (; Int_t ; id = -1). Set session with 'id' the default one. ; If 'id' is not found in the list, the current session is set as default ; Definition at line 10496 of file TProof.cxx. ◆ CheckFile(). Bool_t TProof::CheckFile ; (; const char * ; file, . TSlave * ; slave, . Long_t ; modtime, . Int_t ; cpopt = (kCp | kCpBin) . ). private . Check if a file needs to be send to the slave. ; Use the following algorithm:; check if file appears in file map; if yes, get file's modtime and check against time in map, if modtime not same get md5 and compare against md5 in map, if not same return kTRUE.; if no,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:72095,error,error,72095,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['error'],['error']
Availability," BroadcastObject(const TObject* obj, Int_t kind, TList* slaves); Broadcast an object to all slaves in the specified list. Use kind to; set the TMEssage what field. Returns the number of slaves the message; was sent to. Returns -1 in case of error. Int_t BroadcastObject(const TObject* obj, Int_t kind = kMESS_OBJECT, TProof::ESlaves list = kActive); Broadcast an object to all slaves in the specified list. Use kind to; set the TMEssage what field. Returns the number of slaves the message; was sent to. Returns -1 in case of error. Int_t BroadcastRaw(const void* buffer, Int_t length, TList* slaves); Broadcast a raw buffer of specified length to all slaves in the; specified list. Returns the number of slaves the buffer was sent to.; Returns -1 in case of error. Int_t BroadcastRaw(const void* buffer, Int_t length, TProof::ESlaves list = kActive); Broadcast a raw buffer of specified length to all slaves in the; specified list. Returns the number of slaves the buffer was sent to.; Returns -1 in case of error. Int_t BroadcastFile(const char* file, Int_t opt, const char* rfile, TList* wrks); Broadcast file to all workers in the specified list. Returns the number of workers; the buffer was sent to.; Returns -1 in case of error. Int_t BroadcastFile(const char* file, Int_t opt, const char* rfile = 0, TProof::ESlaves list = kAllUnique); Broadcast file to all workers in the specified list. Returns the number of workers; the buffer was sent to.; Returns -1 in case of error. void ReleaseMonitor(TMonitor* mon); Release the used monitor to be used, making sure to delete newly created; monitors. Int_t Collect(const TSlave* sl, Long_t timeout = -1, Int_t endtype = -1, Bool_t deactonfail = kFALSE); Collect responses from slave sl. Returns the number of slaves that; responded (=1).; If timeout >= 0, wait at most timeout seconds (timeout = -1 by default,; which means wait forever).; If defined (>= 0) endtype is the message that stops this collection. Int_t Collect(TList* slaves, Long_t time",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProof.html:40992,error,error,40992,root/html528/TProof.html,https://root.cern,https://root.cern/root/html528/TProof.html,10,['error'],['error']
Availability," C++ type_info, we must be in the case of; 1669 // a template of Double32_t. This is actually a correct case.; 1670 } else {; 1671 Error(""Branch"", ""The actual class (%s) of the object provided for the definition of the branch \""%s\"" does not inherit from %s"",; 1672 actualClass->GetName(), branchname, claim->GetName());; 1673 }; 1674 }; 1675 }; 1676 if (!actualClass) {; 1677 Warning(""Branch"", ""The actual TClass corresponding to the object provided for the definition of the branch \""%s\"" is missing.\n\tThe object will be truncated down to its %s part"",; 1678 branchname, ptrClass->GetName());; 1679 actualClass = ptrClass;; 1680 } else if ((ptrClass != actualClass) && !actualClass->InheritsFrom(ptrClass)) {; 1681 Error(""Branch"", ""The actual class (%s) of the object provided for the definition of the branch \""%s\"" does not inherit from %s"", actualClass->GetName(), branchname, ptrClass->GetName());; 1682 return nullptr;; 1683 }; 1684 if (actualClass && actualClass->GetCollectionProxy() && dynamic_cast<TEmulatedCollectionProxy*>(actualClass->GetCollectionProxy())) {; 1685 Error(""Branch"", writeStlWithoutProxyMsg,; 1686 actualClass->GetName(), branchname, actualClass->GetName());; 1687 return nullptr;; 1688 }; 1689 return BronchExec(branchname, actualClass->GetName(), (void*) addobj, false, bufsize, splitlevel);; 1690}; 1691 ; 1692////////////////////////////////////////////////////////////////////////////////; 1693/// Same as TTree::Branch but automatic detection of the class name.; 1694/// \see TTree::Branch for other details.; 1695 ; 1696TBranch* TTree::BranchImpRef(const char* branchname, TClass* ptrClass, EDataType datatype, void* addobj, Int_t bufsize, Int_t splitlevel); 1697{; 1698 if (!ptrClass) {; 1699 if (datatype == kOther_t || datatype == kNoType_t) {; 1700 Error(""Branch"", ""The pointer specified for %s is not of a class or type known to ROOT"", branchname);; 1701 } else {; 1702 TString varname; varname.Form(""%s/%c"",branchname,DataTypeToChar(datatype));; 1703 retur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:64455,down,down,64455,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['down'],['down']
Availability," CALL FCN"");; 3531 Printf("" with IFLAG=3, to allow FCN to perform any calculations"");; 3532 Printf("" associated with the final fitted parameter values, unless a"");; 3533 Printf("" CALL FCN 3 command has already been executed."");; 3534 goto L99;; 3535 }; 3536//______________________________________________________________________________; 3537//; 3538// Command FIX; 3539//; 3540 if( !strncmp(comd.Data(),""FIX"",3) ) {; 3541 Printf("" ***>FIX} <parno> [parno] ... [parno]"");; 3542 Printf("" Causes parameter(s) <parno> to be removed from the list of"");; 3543 Printf("" variable parameters, and their value(s) will remain constant"");; 3544 Printf("" during subsequent minimizations, etc., until another command"");; 3545 Printf("" changes their value(s) or status."");; 3546 goto L99;; 3547 }; 3548//______________________________________________________________________________; 3549//; 3550// Command HESSE; 3551//; 3552 if( !strncmp(comd.Data(),""HES"",3) ) {; 3553 Printf("" ***>HESse [maxcalls]"");; 3554 Printf("" Calculate, by finite differences, the Hessian or error matrix."");; 3555 Printf("" That is, it calculates the full matrix of second derivatives"");; 3556 Printf("" of the function with respect to the currently variable"");; 3557 Printf("" parameters, and inverts it, printing out the resulting error"");; 3558 Printf("" matrix. The optional argument [maxcalls] specifies the"");; 3559 Printf("" (approximate) maximum number of function calls after which"");; 3560 Printf("" the calculation will be stopped."");; 3561 goto L99;; 3562 }; 3563//______________________________________________________________________________; 3564//; 3565// Command IMPROVE; 3566//; 3567 if( !strncmp(comd.Data(),""IMP"",3) ) {; 3568 Printf("" ***>IMPROVE [maxcalls]"");; 3569 Printf("" If a previous minimization has converged, and the current"");; 3570 Printf("" values of the parameters therefore correspond to a local"");; 3571 Printf("" minimum of the function, this command requests a search for"");; 3572 Printf("" additional distin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:113581,error,error,113581,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,1,['error'],['error']
Availability," CANDLE or VIOLIN will initiate the drawing of the corresponding plots. Followed by the keyword the user can select a plot direction (X or V for vertical projections, or Y or H for horizontal projections) and/or predefined definitions (1-6 for candles, 1-2 for violins). The order doesn't matter. Default is X and 1.; Instead of using the predefined representations, the candle and violin parameters can be changed individually. In that case the option have the following form: CANDLEX(<option-string>); CANDLEY(<option-string>); VIOLINX(<option-string>); VIOLINY(<option-string>).; All zeros at the beginning of option-string can be omitted.; option-string consists eight values, defined as follow: ""CANDLEX(zhpawMmb)""; Where:. b = 0; no box drawn; b = 1; the box is drawn. As the candle-plot is also called a box-plot it makes sense in the very most cases to always draw the box; b = 2; draw a filled box with border; m = 0; no median drawn; m = 1; median is drawn as a line; m = 2; median is drawn with errors (notches); m = 3; median is drawn as a circle; M = 0; no mean drawn; M = 1; mean is drawn as a dashed line; M = 3; mean is drawn as a circle; w = 0; no whisker drawn; w = 1; whisker is drawn to end of distribution.; w = 2; whisker is drawn to max 1.5*iqr; a = 0; no anchor drawn; a = 1; the anchors are drawn; p = 0; no points drawn; p = 1; only outliers are drawn; p = 2; all datapoints are drawn; p = 3: all datapoints are drawn scattered; h = 0; no histogram is drawn; h = 1; histogram at the left or bottom side is drawn; h = 2; histogram at the right or top side is drawn; h = 3; histogram at left and right or top and bottom (violin-style) is drawn; z = 0; no zero indicator line is drawn; z = 1; zero indicator line is drawn. As one can see all individual options for both candle and violin plots can be accessed by this mechanism. In deed the keywords CANDLE(<option-string>) and VIOLIN(<option-string>) have the same meaning. So you can parametrise an option-string for a candle ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHistPainter.html:50468,error,errors,50468,doc/master/classTHistPainter.html,https://root.cern,https://root.cern/doc/master/classTHistPainter.html,1,['error'],['errors']
Availability," Called when the client is not alive anymore; terminate the session. ; Reimplemented from TProofServ.; Definition at line 321 of file TProofServLite.cxx. ◆ HandleTermination(). void TProofServLite::HandleTermination ; (; ). overridevirtual . Called when the client is not alive anymore; terminate the session. ; Reimplemented from TProofServ.; Definition at line 329 of file TProofServLite.cxx. ◆ IsA(). TClass * TProofServLite::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TProofServ.; Definition at line 55 of file TProofServLite.h. ◆ Setup(). Int_t TProofServLite::Setup ; (; ). overrideprivatevirtual . Print the ProofServ logo on standard output. ; Return 0 on success, -1 on error ; Reimplemented from TProofServ.; Definition at line 338 of file TProofServLite.cxx. ◆ SetupOnFork(). Int_t TProofServLite::SetupOnFork ; (; const char * ; ord). private . Finalize the server setup afetr forking. ; Return 0 on success, -1 on error ; Definition at line 506 of file TProofServLite.cxx. ◆ Streamer(). void TProofServLite::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TProofServ. ◆ StreamerNVirtual(). void TProofServLite::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 55 of file TProofServLite.h. ◆ Terminate(). void TProofServLite::Terminate ; (; Int_t ; status). overridevirtual . Terminate the proof server. ; Reimplemented from TProofServ.; Definition at line 428 of file TProofServLite.cxx. Member Data Documentation. ◆ fInterruptHandler. TProofServLiteInterruptHandler* TProofServLite::fInterruptHandler. private . Definition at line 33 of file TProofServLite.h. ◆ fSockPath. TString TProofServLite::fSockPath. private . Definition at line 34 of file TProofServLite.h. ◆ fTerminated. Bool_t TProofServLite::fTerminated. private . Definition at line 36 of file TProofServLite.h. proof/proof/inc/TProofServLite.h; proof/proof/sr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProofServLite.html:31798,error,error,31798,doc/master/classTProofServLite.html,https://root.cern,https://root.cern/doc/master/classTProofServLite.html,1,['error'],['error']
Availability," Carlo distribution. The number of pseudo-experiments NEXPT is currently fixed at 1000. The function returns the integral. Note that this option “X” is much slower.; TH1::Smooth - smoothes the bin contents of a 1D histogram.; TH1::Integral(Option_t *opt)-returns the integral of bin contents in a given bin range. If the option “width” is specified, the integral is the sum of the bin contents multiplied by the bin width in x .; TH1::GetMean(int axis) - returns the mean value along axis.; TH1::GetStdDev(int axis) - returns the sigma distribution along axis.; TH1::GetRMS(int axis) - returns the Root Mean Square along axis.; TH1::GetEntries() - returns the number of entries.; TH1::GetAsymmetry(TH1 *h2,Double_t c2,Double_tdc2). returns an histogram containing the asymmetry of this histogram with h2, where the asymmetry is defined as:. Asymmetry = (h1 - h2)/(h1 + h2); //where h1 = this. It works for 1D , 2D , etc. histograms. The parameter c2 is an optional argument that gives a relative weight between the two histograms, and dc 2 is the error on this weight. This is useful, for example, when forming an asymmetry between two histograms from two different data sets that need to be normalized to each other in some way. The function calculates the errors assuming Poisson statistics on h1 and h2 (that is, dh=sqrt(h)). In the next example we assume that h1 and h2 are already filled:. h3 = h1->GetAsymmetry(h2);. Then h3 is created and filled with the asymmetry between h1 and h2 ; h1 and h2 are left intact.; Note that the user’s responsibility is to manage the created histograms.; TH1::Reset() - resets the bin contents and errors of a histogram. 3.13 Important note on returned statistics (GetMean, GetStdDev, etc.); By default, histogram statistics are computed at fill time using the unbinned data used to update the bin content. This means the values returned by GetMean, GetStdDev, etc., are those of the dataset used to fill the histogram, not those of the binned content of the hi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:117465,error,error,117465,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['error'],['error']
Availability," Char_t * ; name, . const Char_t * ; title, . Int_t ; np, . Int_t ; ne, . const Float_t * ; x, . const Float_t * ; y, . const Float_t * ; exL, . const Float_t * ; exH, . std::vector< TArrayF > ; eyL, . std::vector< TArrayF > ; eyH, . Int_t ; m = kOnlyFirst . ). TGraphMultiErrors normal constructor with name, title, np points and ne y-errors. ; If exL,exH are NULL, the corresponding values are preset to zero. The multiple y-errors are passed as std::vectors of TArrayF objects. ; Definition at line 353 of file TGraphMultiErrors.cxx. ◆ TGraphMultiErrors() [15/23]. TGraphMultiErrors::TGraphMultiErrors ; (; Int_t ; np, . Int_t ; ne, . const Double_t * ; x, . const Double_t * ; y, . const Double_t * ; exL, . const Double_t * ; exH, . std::vector< TArrayD > ; eyL, . std::vector< TArrayD > ; eyH, . Int_t ; m = kOnlyFirst . ). TGraphMultiErrors normal constructor with np points and ne y-errors. ; If exL,exH are NULL, the corresponding values are preset to zero. The multiple y-errors are passed as std::vectors of TArrayD objects. ; Definition at line 367 of file TGraphMultiErrors.cxx. ◆ TGraphMultiErrors() [16/23]. TGraphMultiErrors::TGraphMultiErrors ; (; const Char_t * ; name, . const Char_t * ; title, . Int_t ; np, . Int_t ; ne, . const Double_t * ; x, . const Double_t * ; y, . const Double_t * ; exL, . const Double_t * ; exH, . std::vector< TArrayD > ; eyL, . std::vector< TArrayD > ; eyH, . Int_t ; m = kOnlyFirst . ). TGraphMultiErrors normal constructor with name, title, np points and ne y-errors. ; If exL,exH are NULL, the corresponding values are preset to zero. The multiple y-errors are passed as std::vectors of TArrayD objects. ; Definition at line 407 of file TGraphMultiErrors.cxx. ◆ TGraphMultiErrors() [17/23]. TGraphMultiErrors::TGraphMultiErrors ; (; const TVectorF & ; tvX, . const TVectorF & ; tvY, . const TVectorF & ; tvExL, . const TVectorF & ; tvExH, . const TVectorF & ; tvEyL, . const TVectorF & ; tvEyH, . Int_t ; m = kOnlyFirst . ). Constructor with six vect",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:52265,error,errors,52265,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['error'],['errors']
Availability," Chart:. TObject. ←; TSlave. TXHandler. ←; TXSlave. Function documentation; void DoError(int level, const char* location, const char* fmt, va_list va) const; Interface to ErrorHandler (protected). TXSlave(const char* url, const char* ord, Int_t perf, const char* image, TProof* proof, Int_t stype, const char* workdir, const char* msd, Int_t nwk = 1); Create a PROOF slave object. Called via the TProof ctor. void Init(const char* host, Int_t stype); Init a PROOF slave object. Called via the TXSlave ctor.; The Init method is technology specific and is overwritten by derived; classes. void ParseBuffer(); Parse fBuffer after a connection attempt. Int_t SetupServ(Int_t stype, const char* conffile); Init a PROOF slave object. Called via the TXSlave ctor.; The Init method is technology specific and is overwritten by derived; classes. ~TXSlave(); Destroy slave. void Close(Option_t* opt = """"); Close slave socket. Int_t Ping(); Ping the remote master or slave servers.; Returns 0 if ok, -1 if it did not ping or in case of error. void Touch(); Touch the client admin file to proof we are alive. void Interrupt(Int_t type); Send interrupt to master or slave servers.; Returns 0 if ok, -1 in case of error. void StopProcess(Bool_t abort, Int_t timeout); Sent stop/abort request to PROOF server. It will be; processed asynchronously by a separate thread. Int_t GetProofdProtocol(TSocket* s); Find out the remote proofd protocol version.; Returns -1 in case of error. TObjString * SendCoordinator(Int_t kind, const char* msg = 0, Int_t int2 = 0); Send message to intermediate coordinator.; If any output is due, this is returned as a generic message. void SetAlias(const char* alias); Set an alias for this session. If reconnection is supported, the alias; will be communicated to the remote coordinator so that it can be recovered; when reconnecting. Int_t SendGroupPriority(const char* grp, Int_t priority); Communicate to the coordinator the priprity of the group to which the; user belongs; Return 0",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXSlave.html:10440,ping,ping,10440,root/html602/TXSlave.html,https://root.cern,https://root.cern/root/html602/TXSlave.html,8,"['error', 'ping']","['error', 'ping']"
Availability," Chrome, Safari, or Opera instead.; [legend]; Member Enumeration Documentation. ◆ ESecurity. enum TAuthenticate::ESecurity. EnumeratorkClear ; kUnsupported ; kKrb5 ; kGlobus ; kSSH ; kRfio . Definition at line 60 of file TAuthenticate.h. Constructor & Destructor Documentation. ◆ TAuthenticate(). TAuthenticate::TAuthenticate ; (; TSocket * ; sock, . const char * ; remote, . const char * ; proto, . const char * ; user = """" . ). Create authentication object. ; Definition at line 164 of file TAuthenticate.cxx. ◆ ~TAuthenticate(). virtual TAuthenticate::~TAuthenticate ; (; ). inlinevirtual . Definition at line 131 of file TAuthenticate.h. Member Function Documentation. ◆ Authenticate(). Bool_t TAuthenticate::Authenticate ; (; ). Authenticate to remote rootd or proofd server. ; Return kTRUE if authentication succeeded. ; Definition at line 369 of file TAuthenticate.cxx. ◆ AuthError(). void TAuthenticate::AuthError ; (; const char * ; where, . Int_t ; error . ). static . Print error string depending on error code. ; Definition at line 1261 of file TAuthenticate.cxx. ◆ AuthExists(). Int_t TAuthenticate::AuthExists ; (; TString ; username, . Int_t ; method, . const char * ; options, . Int_t * ; message, . Int_t * ; rflag, . CheckSecCtx_t ; checksecctx . ). Check if we have a valid established sec context in memory Retrieves relevant info and negotiates with server. ; options = ""Opt,strlen(username),username.Data()"" message = kROOTD_USER, ... ; Definition at line 2276 of file TAuthenticate.cxx. ◆ CatchTimeOut(). void TAuthenticate::CatchTimeOut ; (; ). Called in connection with a timer timeout. ; Definition at line 353 of file TAuthenticate.cxx. ◆ CheckHost(). Bool_t TAuthenticate::CheckHost ; (; const char * ; Host, . const char * ; host . ). staticprivate . Check if 'host' matches 'href': this means either equal or ""containing"" it, even with wild cards * in the first field (in the case 'href' is a name, ie not IP address) Returns kTRUE if the two matches. ; Definition at li",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAuthenticate.html:21651,error,error,21651,doc/master/classTAuthenticate.html,https://root.cern,https://root.cern/doc/master/classTAuthenticate.html,2,['error'],['error']
Availability," Class Charts. Inheritance Chart:. TObject. ←; TVirtualPacketizer. ←. TPacketizer. TPacketizerAdaptive. TPacketizerFile. TPacketizerMulti. TPacketizerUnit. Function documentation; TVirtualPacketizer(TList* input, TProofProgressStatus* st = 0); Constructor. ~TVirtualPacketizer(); Destructor. Long64_t GetEntries(Bool_t tree, TDSetElement* e); Get entries. TDSetElement * GetNextPacket(TSlave* sl, TMessage* r); Get next packet. void StopProcess(Bool_t abort, Bool_t stoptimer = kFALSE); Stop process. TDSetElement* CreateNewPacket(TDSetElement* base, Long64_t first, Long64_t num); Creates a new TDSetElement from from base packet starting from; the first entry with num entries.; The function returns a new created objects which have to be deleted. Bool_t HandleTimer(TTimer* timer); Send progress message to client. void SetInitTime(); Set the initialization time. Int_t AddWorkers(TList* workers); Adds new workers. Must be implemented by each real packetizer properly.; Returns the number of workers added, or -1 on failure. TVirtualPacketizer(TList* input, TProofProgressStatus* st = 0). void operator=(const TVirtualPacketizer& ). Int_t AssignWork(TDSet* , Long64_t , Long64_t ); { return -1; }. Bool_t IsValid() const; { return fValid; }. Long64_t GetEntriesProcessed() const; { return (fProgressStatus? fProgressStatus->GetEntries() : 0); }. Int_t GetEstEntriesProcessed(Float_t , Long64_t& ent, Long64_t& bytes, Long64_t& calls); { ent = GetEntriesProcessed(); bytes = GetBytesRead(); calls = GetReadCalls(); return 0; }. Float_t GetCurrentRate(Bool_t& all); { all = kTRUE; return (fProgressStatus? fProgressStatus->GetCurrentRate() : 0.); }. Long64_t GetTotalEntries() const; { return fTotalEntries; }. TList * GetFailedPackets(); { return fFailedPackets; }. void SetFailedPackets(TList* list); { fFailedPackets = list; }. Long64_t GetBytesRead() const; { return (fProgressStatus? fProgressStatus->GetBytesRead() : 0); }. Long64_t GetReadCalls() const; { return (fProgressStatus? fProgressS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TVirtualPacketizer.html:10431,failure,failure,10431,root/html602/TVirtualPacketizer.html,https://root.cern,https://root.cern/root/html602/TVirtualPacketizer.html,4,['failure'],['failure']
Availability," ClassName() << ""::"" << GetName() << "":plotOnWithErrorBand: no curve for central value available"" << std::endl;; 2633 return frame;; 2634 }; 2635 frame->remove(nullptr,false) ;; 2636 ; 2637 RooCurve* band(nullptr) ;; 2638 if (!linMethod) {; 2639 ; 2640 // *** Interval method ***; 2641 //; 2642 // Make N variations of parameters samples from V and visualize N% central interval where N% is defined from Z; 2643 ; 2644 // Clone self for internal use; 2645 RooAbsReal* cloneFunc = static_cast<RooAbsReal*>(cloneTree()) ;; 2646 RooArgSet cloneParams;; 2647 cloneFunc->getObservables(&fr.floatParsFinal(), cloneParams) ;; 2648 RooArgSet errorParams{cloneParams};; 2649 if(params) {; 2650 // clear and fill errorParams only with parameters that both in params and cloneParams; 2651 cloneParams.selectCommon(*params, errorParams);; 2652 }; 2653 ; 2654 // Generate 100 random parameter points distributed according to fit result covariance matrix; 2655 RooAbsPdf* paramPdf = fr.createHessePdf(errorParams) ;; 2656 Int_t n = Int_t(100./TMath::Erfc(Z/sqrt(2.))) ;; 2657 if (n<100) n=100 ;; 2658 ; 2659 coutI(Plotting) << ""RooAbsReal::plotOn("" << GetName() << "") INFO: visualizing "" << Z << ""-sigma uncertainties in parameters ""; 2660 << errorParams << "" from fit result "" << fr.GetName() << "" using "" << n << "" samplings."" << std::endl ;; 2661 ; 2662 // Generate variation curves with above set of parameter values; 2663 double ymin = frame->GetMinimum() ;; 2664 double ymax = frame->GetMaximum() ;; 2665 std::unique_ptr<RooDataSet> generatedData{paramPdf->generate(errorParams,n)};; 2666 std::vector<RooCurve*> cvec ;; 2667 for (int i=0 ; i<generatedData->numEntries() ; i++) {; 2668 cloneParams.assign(*generatedData->get(i)) ;; 2669 plotFunc(*cloneFunc);; 2670 cvec.push_back(frame->getCurve()) ;; 2671 frame->remove(nullptr,false) ;; 2672 }; 2673 frame->SetMinimum(ymin) ;; 2674 frame->SetMaximum(ymax) ;; 2675 ; 2676 ; 2677 // Generate upper and lower curve points from 68% interval around each point of",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:117046,error,errorParams,117046,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,1,['error'],['errorParams']
Availability," Computes the numerical derivative of a function f at a point x using an adaptive central; difference algorithm with a step size h. double EvalForward(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8). Computes the numerical derivative of a function f at a point x using an adaptive forward; difference algorithm with a step size h.; The function is evaluated only at points greater than x and at x itself. double EvalBackward(const ROOT::Math::IGenFunction& f, double x, double h = 1E-8). Computes the numerical derivative of a function f at a point x using an adaptive backward; difference algorithm with a step size h.; The function is evaluated only at points less than x and at x itself. double Eval(const ROOT::Math::IMultiGenFunction& f, const double* x, unsigned int icoord = 0, double h = 1E-8); Derivatives for multi-dimension functions. Evaluate the partial derivative of a multi-dim function; with respect coordinate x_icoord at the point x[]. double Eval(IParamFunction & f, double x, const double * p, unsigned int ipar = 0, double h = 1E-8). Evaluate the derivative with respect a parameter for one-dim parameteric function; at the point ( x,p[]) with respect the parameter p_ipar. double Eval(IParamMultiFunction & f, const double * x, const double * p, unsigned int ipar = 0, double h = 1E-8). Evaluate the derivative with respect a parameter for a multi-dim parameteric function; at the point ( x[],p[]) with respect the parameter p_ipar. int Status() const. return the error status of the last derivative calculation. double Result() const. return the result of the last derivative calculation. double Error() const. return the estimate of the absolute error of the last derivative calculation. » Last changed: root/mathmore:$Id: Derivator.h 21503 2007-12-19 17:34:54Z moneta $ » Last generated: 2009-12-07 13:43; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__Derivator.html:6024,error,error,6024,root/html526/ROOT__Math__Derivator.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__Derivator.html,2,['error'],['error']
Availability," Computing errors: A moving field; 730///; 731/// The computation of errors for a TProfile3D has evolved with the versions; 732/// of ROOT. The difficulty is in computing errors for bins with low statistics.; 733///; 734/// - prior to version 3.10, we had no special treatment of low statistic bins.; 735/// As a result, these bins had huge errors. The reason is that the; 736/// expression eprim2 is very close to 0 (rounding problems) or 0.; 737/// - The algorithm is modified/protected for the case; 738/// when a TProfile3D is projected (ProjectionX). The previous algorithm; 739/// generated a N^2 problem when projecting a TProfile3D with a large number of; 740/// bins (eg 100000).; 741/// - in version 3.10/02, a new static function TProfile::Approximate; 742/// is introduced to enable or disable (default) the approximation.; 743/// (see also comments in TProfile::GetBinError); 744 ; 745Double_t TProfile3D::GetBinError(Int_t bin) const; 746{; 747 return TProfileHelper::GetBinError((TProfile3D*)this, bin);; 748}; 749 ; 750////////////////////////////////////////////////////////////////////////////////; 751/// Return option to compute profile2D errors.; 752 ; 753Option_t *TProfile3D::GetErrorOption() const; 754{; 755 if (fErrorMode == kERRORSPREAD) return ""s"";; 756 if (fErrorMode == kERRORSPREADI) return ""i"";; 757 if (fErrorMode == kERRORSPREADG) return ""g"";; 758 return """";; 759}; 760 ; 761////////////////////////////////////////////////////////////////////////////////; 762/// fill the array stats from the contents of this profile.; 763///; 764/// The array stats must be correctly dimensioned in the calling program.; 765///; 766/// - stats[0] = sumw; 767/// - stats[1] = sumw2; 768/// - stats[2] = sumwx; 769/// - stats[3] = sumwx2; 770/// - stats[4] = sumwy; 771/// - stats[5] = sumwy2; 772/// - stats[6] = sumwxy; 773/// - stats[7] = sumwz; 774/// - stats[8] = sumwz2; 775/// - stats[9] = sumwxz; 776/// - stats[10]= sumwyz; 777/// - stats[11]= sumwt; 778/// - stats[12]= su",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8cxx_source.html:26322,error,errors,26322,doc/master/TProfile3D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8cxx_source.html,1,['error'],['errors']
Availability," CoordSystem , class Tag1 , class Tag2 > ; void Transform (const DisplacementVector3D< CoordSystem, Tag1 > &v1, DisplacementVector3D< CoordSystem, Tag2 > &v2) const;  Transformation operation for Displacement Vector of different coordinate systems. ;  ; template<class CoordSystem , class Tag1 , class Tag2 > ; void Transform (const PositionVector3D< CoordSystem, Tag1 > &p1, PositionVector3D< CoordSystem, Tag2 > &p2) const;  Transformation operation for points between different coordinate system tags. ;  ; Translation3D< T > Translation () const;  Get the translation representing the 3D transformation in a Cartesian vector. ;  . Protected Member Functions; void AssignFrom (const Rotation3D &r);  make transformation from only rotations (zero translation) ;  ; void AssignFrom (const Rotation3D &r, const Vector &v);  make transformation from first a rotation then a translation ;  ; void AssignFrom (const Vector &v);  make transformation from only translation (identity rotations) ;  ; void SetIdentity ();  Set identity transformation (identity rotation , zero translation) ;  ; template<typename SCALAR = T, typename std::enable_if<!std::is_arithmetic< SCALAR >::value >::type * = nullptr> ; void SetIdentity (const typename SCALAR::mask_type m);  Set identity transformation (identity rotation , zero translation) vectorised version that sets using a mask. ;  . Private Attributes; T fM [12];  . #include <Math/GenVector/Transform3D.h>; Member Typedef Documentation. ◆ Point. template<typename T = double> . typedef PositionVector3D<Cartesian3D<T>, DefaultCoordinateSystemTag> ROOT::Math::Impl::Transform3D< T >::Point. Definition at line 86 of file Transform3D.h. ◆ Scalar. template<typename T = double> . typedef T ROOT::Math::Impl::Transform3D< T >::Scalar. Definition at line 83 of file Transform3D.h. ◆ Vector. template<typename T = double> . typedef DisplacementVector3D<Cartesian3D<T>, DefaultCoordinateSystemTag> ROOT::Math::Impl::Transform3D< T >::Vector. Definition at line 85 of ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1Impl_1_1Transform3D.html:12961,mask,mask,12961,doc/master/classROOT_1_1Math_1_1Impl_1_1Transform3D.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1Impl_1_1Transform3D.html,1,['mask'],['mask']
Availability," Copy errors from fEX and fEY to arrays[0] and arrays[1]; or to fX and fY. Copy points. Bool_t CtorAllocate(); Constructor allocate. void FillZero(Int_t begin, Int_t end, Bool_t from_ctor = kTRUE); Set zero values for point arrays in the range [begin, end]. Double_t GetErrorX(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. Double_t GetErrorY(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along Y at point i. Double_t GetErrorXhigh(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. Double_t GetErrorXlow(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. Double_t GetErrorYhigh(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. Double_t GetErrorYlow(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. void Print(Option_t* chopt = """") const; Print graph and errors values. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void SetPointError(Double_t ex, Double_t ey); Set ex and ey values for point pointed by the mouse. void SetPointError(Int_t i, Double_t ex, Double_t ey); Set ex and ey values for point number i. void Streamer(TBuffer& b); Stream an object of class TGraphErrors. void SwapPoints(Int_t pos1, Int_t pos2); Swap points. Double_t ** Allocate(Int_t size). Double_t * GetEX() const; {return fEX;}. Double_t * GetEY() const; {return fEY;}. » Author: Rene Brun 15/09/96 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id: TGraphErrors.h 24702 2008-07-08 12:01:46Z brun $ » Last generated: 2010-09-23 20:10; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraphErrors.html:18313,error,error,18313,root/html528/TGraphErrors.html,https://root.cern,https://root.cern/root/html528/TGraphErrors.html,1,['error'],['error']
Availability," Copy errors from fEX and fEY to arrays[0] and arrays[1]; or to fX and fY. Copy points. Bool_t CtorAllocate(); Constructor allocate. void FillZero(Int_t begin, Int_t end, Bool_t from_ctor = kTRUE); Set zero values for point arrays in the range [begin, end]. Double_t GetErrorX(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. Double_t GetErrorY(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along Y at point i. Double_t GetErrorXhigh(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. Double_t GetErrorXlow(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. Double_t GetErrorYhigh(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. Double_t GetErrorYlow(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. void Print(Option_t* chopt = """") const; Print graph and errors values. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void SetPointError(Double_t ex, Double_t ey); Set ex and ey values for point pointed by the mouse. void SetPointError(Int_t i, Double_t ex, Double_t ey); Set ex and ey values for point number i. void Streamer(TBuffer& b); Stream an object of class TGraphErrors. void SwapPoints(Int_t pos1, Int_t pos2); Swap points. Double_t ** Allocate(Int_t size). Double_t * GetEX() const; {return fEX;}. Double_t * GetEY() const; {return fEY;}. » Author: Rene Brun 15/09/96 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id: TGraphErrors.h 24702 2008-07-08 12:01:46Z brun $ » Last generated: 2011-07-04 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGraphErrors.html:18475,error,error,18475,root/html530/TGraphErrors.html,https://root.cern,https://root.cern/root/html530/TGraphErrors.html,1,['error'],['error']
Availability," Copy errors from fEX and fEY to arrays[0] and arrays[1]; or to fX and fY. Copy points. Bool_t CtorAllocate(); Constructor allocate. void FillZero(Int_t begin, Int_t end, Bool_t from_ctor = kTRUE); Set zero values for point arrays in the range [begin, end]. Double_t GetErrorX(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. Double_t GetErrorY(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along Y at point i. Double_t GetErrorXhigh(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. Double_t GetErrorXlow(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. Double_t GetErrorYhigh(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. Double_t GetErrorYlow(Int_t bin) const; This function is called by GraphFitChisquare.; It returns the error along X at point i. void Print(Option_t* chopt = """") const; Print graph and errors values. void SavePrimitive(ostream& out, Option_t* option = """"); Save primitive as a C++ statement(s) on output stream out. void SetPointError(Double_t ex, Double_t ey); Set ex and ey values for point pointed by the mouse. void SetPointError(Int_t i, Double_t ex, Double_t ey); Set ex and ey values for point number i. void Streamer(TBuffer& b); Stream an object of class TGraphErrors. void SwapPoints(Int_t pos1, Int_t pos2); Swap points. Double_t ** Allocate(Int_t size). Double_t * GetEX() const; {return fEX;}. Double_t * GetEY() const; {return fEY;}. » Author: Rene Brun 15/09/96 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/hist:$Id: TGraphErrors.h 24702 2008-07-08 12:01:46Z brun $ » Last generated: 2011-11-03 20:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphErrors.html:18892,error,error,18892,root/html532/TGraphErrors.html,https://root.cern,https://root.cern/root/html532/TGraphErrors.html,2,['error'],['error']
Availability," Create a character string of parameters from TObjArray; 5339 TIter next(params);; 5340 for (Int_t i = 0; i < argc; i ++) {; 5341 TMethodArg* arg = (TMethodArg*) argList->At(i);; 5342 TClingTypeInfo type(GetInterpreterImpl(), arg->GetFullTypeName());; 5343 TObjString* nxtpar = (TObjString*) next();; 5344 if (i) {; 5345 complete += ',';; 5346 }; 5347 if (strstr(type.TrueName(*fNormalizedCtxt), ""char"")) {; 5348 TString chpar('\""');; 5349 chpar += (nxtpar->String()).ReplaceAll(""\"""", ""\\\"""");; 5350 // At this point we have to check if string contains \\""; 5351 // and apply some more sophisticated parser. Not implemented yet!; 5352 complete += chpar;; 5353 complete += '\""';; 5354 }; 5355 else {; 5356 complete += nxtpar->String();; 5357 }; 5358 }; 5359 listpar = complete.Data();; 5360 }; 5361 ; 5362 // And now execute it.; 5363 R__LOCKGUARD_CLING(gInterpreterMutex);; 5364 if (error) {; 5365 *error = TInterpreter::kNoError;; 5366 }; 5367 // If the actual class of this object inherits 2nd (or more) from TObject,; 5368 // 'obj' is unlikely to be the start of the object (as described by IsA()),; 5369 // hence gInterpreter->Execute will improperly correct the offset.; 5370 void* addr = cl->DynamicCast(TObject::Class(), obj, kFALSE);; 5371 TClingCallFunc func(GetInterpreterImpl());; 5372 TClingMethodInfo *minfo = (TClingMethodInfo*)method->fInfo;; 5373 func.Init(*minfo);; 5374 func.SetArgs(listpar);; 5375 // Now calculate the 'this' pointer offset for the method; 5376 // when starting from the class described by cl.; 5377 const CXXMethodDecl * mdecl = dyn_cast<CXXMethodDecl>(minfo->GetTargetFunctionDecl());; 5378 Longptr_t offset = ((TClingClassInfo*)cl->GetClassInfo())->GetOffset(mdecl);; 5379 void* address = (void*)((Longptr_t)addr + offset);; 5380 func.Exec(address);; 5381}; 5382 ; 5383////////////////////////////////////////////////////////////////////////////////; 5384 ; 5385void TCling::ExecuteWithArgsAndReturn(TMethod* method, void* address,; 5386 const void* args[] /*=0*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:208776,error,error,208776,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,2,['error'],['error']
Availability," Create a socket. The socket will adopt previously opened Unix socket with; descriptor desc. The sockpath arg is for info purposes only. Use; this method to adopt e.g. a socket created via socketpair(). TSocket(const TSocket& s); TSocket copy ctor. void Close(Option_t* opt = """"); Close the socket. If option is ""force"", calls shutdown(id,2) to; shut down the connection. This will close the connection also; for the parent of this process. Also called via the dtor (without; option ""force"", call explicitely Close(""force"") if this is desired). TInetAddress GetLocalInetAddress(); Return internet address of local host to which the socket is bound.; In case of error TInetAddress::IsValid() returns kFALSE. Int_t GetLocalPort(); Return the local port # to which the socket is bound.; In case of error return -1. Int_t Select(Int_t interest = kRead, Long_t timeout = -1); Waits for this socket to change status. If interest=kRead,; the socket will be watched to see if characters become available for; reading; if interest=kWrite the socket will be watched to; see if a write will not block.; The argument 'timeout' specifies a maximum time to wait in millisec.; Default no timeout.; Returns 1 if a change of status of interest has been detected within; timeout; 0 in case of timeout; < 0 if an error occured. Int_t Send(Int_t kind); Send a single message opcode. Use kind (opcode) to set the; TMessage ""what"" field. Returns the number of bytes that were sent; (always sizeof(Int_t)) and -1 in case of error. In case the kind has; been or'ed with kMESS_ACK, the call will only return after having; received an acknowledgement, making the sending process synchronous. Int_t Send(Int_t status, Int_t kind); Send a status and a single message opcode. Use kind (opcode) to set the; TMessage ""what"" field. Returns the number of bytes that were sent; (always 2*sizeof(Int_t)) and -1 in case of error. In case the kind has; been or'ed with kMESS_ACK, the call will only return after having; received an ackno",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSocket.html:13400,avail,available,13400,root/html528/TSocket.html,https://root.cern,https://root.cern/root/html528/TSocket.html,4,['avail'],['available']
Availability," Create and draw a TH2 with the error contours in parameters var1 and v2 at up to 6 'sigma' settings; where 'sigma' is calculated as n*n*errorLevel. Bool_t setLogFile(const char* logfile = 0); Change the file name for logging of a RooMinuit of all MINUIT steppings; through the parameter space. If inLogfile is null, the current log file; is closed and logging is stopped. Double_t getPdfParamVal(Int_t index); Access PDF parameter value by ordinal index (needed by MINUIT). Double_t getPdfParamErr(Int_t index); Access PDF parameter error by ordinal index (needed by MINUIT). Bool_t setPdfParamVal(Int_t index, Double_t value, Bool_t verbose = kFALSE); Modify PDF parameter value by ordinal index (needed by MINUIT). void setPdfParamErr(Int_t index, Double_t value); Modify PDF parameter error by ordinal index (needed by MINUIT). void clearPdfParamAsymErr(Int_t index); Modify PDF parameter error by ordinal index (needed by MINUIT). void setPdfParamErr(Int_t index, Double_t loVal, Double_t hiVal); Modify PDF parameter error by ordinal index (needed by MINUIT). void profileStart(); Start profiling timer. void profileStop(); Stop profiling timer and report results of last session. void backProp(); Transfer MINUIT fit results back into RooFit objects. void applyCovarianceMatrix(TMatrixDSym& V); Apply results of given external covariance matrix. i.e. propagate its errors; to all RRV parameter representations and give this matrix instead of the; HESSE matrix at the next save() call. RooMinuit(RooAbsReal& function). void setEvalErrorWall(Bool_t flag); { _doEvalErrorWall = flag ; }. void setPrintEvalErrors(Int_t numEvalErrors); { _printEvalErrors = numEvalErrors ; }. void setVerbose(Bool_t flag = kTRUE); { _verbose = flag ; }. void setProfile(Bool_t flag = kTRUE); { _profile = flag ; }. Int_t evalCounter() const; { return _evalCounter ; }. void zeroEvalCount(); { _evalCounter = 0 ; }. Int_t getNPar() const; { return _nPar ; }. ofstream* logfile() const; { return _logfile ; }. Double_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooMinuit.html:13320,error,error,13320,root/html530/RooMinuit.html,https://root.cern,https://root.cern/root/html530/RooMinuit.html,1,['error'],['error']
Availability," Create and draw a TH2 with the error contours in parameters var1 and v2 at up to 6 'sigma' settings; where 'sigma' is calculated as n*n*errorLevel. Bool_t setLogFile(const char* logfile = 0); Change the file name for logging of a RooMinuit of all MINUIT steppings; through the parameter space. If inLogfile is null, the current log file; is closed and logging is stopped. Double_t getPdfParamVal(Int_t index); Access PDF parameter value by ordinal index (needed by MINUIT). Double_t getPdfParamErr(Int_t index); Access PDF parameter error by ordinal index (needed by MINUIT). Bool_t setPdfParamVal(Int_t index, Double_t value, Bool_t verbose = kFALSE); Modify PDF parameter value by ordinal index (needed by MINUIT). void setPdfParamErr(Int_t index, Double_t value); Modify PDF parameter error by ordinal index (needed by MINUIT). void clearPdfParamAsymErr(Int_t index); Modify PDF parameter error by ordinal index (needed by MINUIT). void setPdfParamErr(Int_t index, Double_t loVal, Double_t hiVal); Modify PDF parameter error by ordinal index (needed by MINUIT). void profileStart(); Start profiling timer. void profileStop(); Stop profiling timer and report results of last session. void backProp(); Transfer MINUIT fit results back into RooFit objects. void applyCovarianceMatrix(TMatrixDSym& V); Apply results of given external covariance matrix. i.e. propagate its errors; to all RRV parameter representations and give this matrix instead of the; HESSE matrix at the next save() call. RooMinuit(RooAbsReal& function). void setEvalErrorWall(Bool_t flag); { _doEvalErrorWall = flag ; }. void setPrintEvalErrors(Int_t numEvalErrors); { _printEvalErrors = numEvalErrors ; }. void setVerbose(Bool_t flag = kTRUE); { _verbose = flag ; }. void setProfile(Bool_t flag = kTRUE); { _profile = flag ; }. Int_t getNPar() const; { return _nPar ; }. ofstream* logfile() const; { return _logfile ; }. Double_t& maxFCN(); { return _maxFCN ; }. » Last changed: Mon Dec 7 13:48:15 2009 » Last generated: 2009-12",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMinuit.html:13199,error,error,13199,root/html526/RooMinuit.html,https://root.cern,https://root.cern/root/html526/RooMinuit.html,1,['error'],['error']
Availability," Create and draw a TH2 with the error contours in parameters var1 and v2 at up to 6 'sigma' settings; where 'sigma' is calculated as n*n*errorLevel. Bool_t setLogFile(const char* logfile = 0); Change the file name for logging of a RooMinuit of all MINUIT steppings; through the parameter space. If inLogfile is null, the current log file; is closed and logging is stopped. Double_t getPdfParamVal(Int_t index); Access PDF parameter value by ordinal index (needed by MINUIT). Double_t getPdfParamErr(Int_t index); Access PDF parameter error by ordinal index (needed by MINUIT). Bool_t setPdfParamVal(Int_t index, Double_t value, Bool_t verbose = kFALSE); Modify PDF parameter value by ordinal index (needed by MINUIT). void setPdfParamErr(Int_t index, Double_t value); Modify PDF parameter error by ordinal index (needed by MINUIT). void clearPdfParamAsymErr(Int_t index); Modify PDF parameter error by ordinal index (needed by MINUIT). void setPdfParamErr(Int_t index, Double_t loVal, Double_t hiVal); Modify PDF parameter error by ordinal index (needed by MINUIT). void profileStart(); Start profiling timer. void profileStop(); Stop profiling timer and report results of last session. void backProp(); Transfer MINUIT fit results back into RooFit objects. void applyCovarianceMatrix(TMatrixDSym& V); Apply results of given external covariance matrix. i.e. propagate its errors; to all RRV parameter representations and give this matrix instead of the; HESSE matrix at the next save() call. RooMinuit(RooAbsReal& function). void setEvalErrorWall(Bool_t flag); { _doEvalErrorWall = flag ; }. void setPrintEvalErrors(Int_t numEvalErrors); { _printEvalErrors = numEvalErrors ; }. void setVerbose(Bool_t flag = kTRUE); { _verbose = flag ; }. void setProfile(Bool_t flag = kTRUE); { _profile = flag ; }. Int_t getNPar() const; { return _nPar ; }. ofstream* logfile() const; { return _logfile ; }. Double_t& maxFCN(); { return _maxFCN ; }. » Last changed: Sat Oct 9 20:48:31 2010 » Last generated: 2010-10",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooMinuit.html:13185,error,error,13185,root/html528/RooMinuit.html,https://root.cern,https://root.cern/root/html528/RooMinuit.html,1,['error'],['error']
Availability," Create and draw a TH2 with the error contours in parameters var1 and v2 at up to 6 'sigma' settings; where 'sigma' is calculated as n*n*errorLevel. Bool_t setLogFile(const char* logfile = 0); Change the file name for logging of a RooMinuit of all MINUIT steppings; through the parameter space. If inLogfile is null, the current log file; is closed and logging is stopped. Double_t getPdfParamVal(Int_t index); Access PDF parameter value by ordinal index (needed by MINUIT). Double_t getPdfParamErr(Int_t index); Access PDF parameter error by ordinal index (needed by MINUIT). Bool_t setPdfParamVal(Int_t index, Double_t value, Bool_t verbose = kFALSE); Modify PDF parameter value by ordinal index (needed by MINUIT). void setPdfParamErr(Int_t index, Double_t value); Modify PDF parameter error by ordinal index (needed by MINUIT). void clearPdfParamAsymErr(Int_t index); Modify PDF parameter error by ordinal index (needed by MINUIT). void setPdfParamErr(Int_t index, Double_t loVal, Double_t hiVal); Modify PDF parameter error by ordinal index (needed by MINUIT). void profileStart(); Start profiling timer. void profileStop(); Stop profiling timer and report results of last session. void backProp(); Transfer MINUIT fit results back into RooFit objects. void applyCovarianceMatrix(TMatrixDSym& V); Apply results of given external covariance matrix. i.e. propagate its errors; to all RRV parameter representations and give this matrix instead of the; HESSE matrix at the next save() call. RooMinuit(RooAbsReal& function). void setEvalErrorWall(Bool_t flag); { _doEvalErrorWall = flag ; }. void setPrintEvalErrors(Int_t numEvalErrors); { _printEvalErrors = numEvalErrors ; }. void setVerbose(Bool_t flag = kTRUE); { _verbose = flag ; }. void setProfile(Bool_t flag = kTRUE); { _profile = flag ; }. void setMaxEvalMultiplier(Int_t n); { _maxEvalMult = n ; }. Int_t evalCounter() const; { return _evalCounter ; }. void zeroEvalCount(); { _evalCounter = 0 ; }. Int_t getNPar() const; { return _nPar ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMinuit.html:13471,error,error,13471,root/html532/RooMinuit.html,https://root.cern,https://root.cern/root/html532/RooMinuit.html,2,['error'],['error']
Availability," Create and draw a TH2 with the error contours in parameters var1 and v2 at up to 6 'sigma' settings; where 'sigma' is calculated as n*n*errorLevel. Bool_t setLogFile(const char* logfile = 0); Change the file name for logging of a RooMinuit of all MINUIT steppings; through the parameter space. If inLogfile is null, the current log file; is closed and logging is stopped. Double_t getPdfParamVal(Int_t index); Access PDF parameter value by ordinal index (needed by MINUIT). Double_t getPdfParamErr(Int_t index); Access PDF parameter error by ordinal index (needed by MINUIT). Bool_t setPdfParamVal(Int_t index, Double_t value, Bool_t verbose = kFALSE); Modify PDF parameter value by ordinal index (needed by MINUIT). void setPdfParamErr(Int_t index, Double_t value); Modify PDF parameter error by ordinal index (needed by MINUIT). void clearPdfParamAsymErr(Int_t index); Modify PDF parameter error by ordinal index (needed by MINUIT). void setPdfParamErr(Int_t index, Double_t loVal, Double_t hiVal); Modify PDF parameter error by ordinal index (needed by MINUIT). void profileStart(); Start profiling timer. void profileStop(); Stop profiling timer and report results of last session. void backProp(); Transfer MINUIT fit results back into RooFit objects. void updateFloatVec(). void applyCovarianceMatrix(TMatrixDSym& V); Apply results of given external covariance matrix. i.e. propagate its errors; to all RRV parameter representations and give this matrix instead of the; HESSE matrix at the next save() call. RooMinuit(RooAbsReal& function). void setEvalErrorWall(Bool_t flag); { _doEvalErrorWall = flag ; }. void setPrintEvalErrors(Int_t numEvalErrors); { _printEvalErrors = numEvalErrors ; }. void setVerbose(Bool_t flag = kTRUE); { _verbose = flag ; }. void setProfile(Bool_t flag = kTRUE); { _profile = flag ; }. void setMaxEvalMultiplier(Int_t n); { _maxEvalMult = n ; }. Int_t evalCounter() const; { return _evalCounter ; }. void zeroEvalCount(); { _evalCounter = 0 ; }. Int_t getNPar() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMinuit.html:13681,error,error,13681,root/html534/RooMinuit.html,https://root.cern,https://root.cern/root/html534/RooMinuit.html,6,['error'],['error']
Availability," Create copy of TGX11 but now use TrueType fonts. void Activate(); Static method setting TGX11TTF as the acting gVirtualX. Bool_t Init(void* display); Initialize X11 system. Returns kFALSE in case of failure. void Align(void); Compute alignment variables. The alignment is done on the horizontal string; then the rotation is applied on the alignment variables.; SetRotation and LayoutGlyphs should have been called before. void DrawImage(FT_Bitmap* source, ULong_t fore, ULong_t back, XImage* xim, Int_t bx, Int_t by); Draw FT_Bitmap bitmap to xim image at position bx,by using specified; foreground color. void DrawText(Int_t x, Int_t y, Float_t angle, Float_t mgn, const char* text, TVirtualX::ETextMode mode); Draw text using TrueType fonts. If TrueType fonts are not available the; text is drawn with TGX11::DrawText. void DrawText(Int_t x, Int_t y, Float_t angle, Float_t mgn, const wchar_t* text, TVirtualX::ETextMode mode); Draw text using TrueType fonts. If TrueType fonts are not available the; text is drawn with TGX11::DrawText. XImage * GetBackground(Int_t x, Int_t y, UInt_t w, UInt_t h); Get the background of the current window in an XImage. Bool_t IsVisible(Int_t x, Int_t y, UInt_t w, UInt_t h); Test if there is really something to render. void RenderString(Int_t x, Int_t y, TVirtualX::ETextMode mode); Perform the string rendering in the pad.; LayoutGlyphs should have been called before. void SetTextFont(Font_t fontnumber); Set specified font. Int_t SetTextFont(char* fontname, TVirtualX::ETextSetMode mode); Set text font to specified name.; mode : loading flag; mode=0 : search if the font exist (kCheck); mode=1 : search the font and load it if it exists (kLoad); font : font name. Set text font to specified name. This function returns 0 if; the specified font is found, 1 if not. void SetTextSize(Float_t textsize); Set current text size. FontStruct_t LoadQueryFont(const char* font_name); Parses an XLFD name and opens a font. void DeleteFont(FontStruct_t fs); Explicitely ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGX11TTF.html:27257,avail,available,27257,root/html534/TGX11TTF.html,https://root.cern,https://root.cern/root/html534/TGX11TTF.html,2,['avail'],['available']
Availability," Definition at line 102 of file Fitter.h. ◆ Fitter() [2/3]. ROOT::Fit::Fitter::Fitter ; (; const std::shared_ptr< FitResult > & ; result). Constructor from a result. ; Definition at line 51 of file Fitter.cxx. ◆ ~Fitter(). virtual ROOT::Fit::Fitter::~Fitter ; (; ). inlinevirtual . Destructor. ; Make it virtual in case users derive from Fitter class to extend it by adding new methods. This is needed to avoid a warning seen when doing from Python (see ROOT issue #12391 ). Note that the Fitter class does not provide virtual functions to be re-implemented by derived classes. ; Definition at line 117 of file Fitter.h. ◆ Fitter() [3/3]. ROOT::Fit::Fitter::Fitter ; (; const Fitter & ; ). delete . Copy constructor (disabled, class is not copyable) . Member Function Documentation. ◆ ApplyWeightCorrection(). bool ROOT::Fit::Fitter::ApplyWeightCorrection ; (; const ROOT::Math::IMultiGenFunction & ; loglw2, . bool ; minimizeW2L = false . ). apply correction in the error matrix for the weights for likelihood fits This method can be called only after a fit. ; The passed function (loglw2) is a log-likelihood function implemented using the sum of weight squared When using FitConfig.SetWeightCorrection() this correction is applied automatically when doing a likelihood fit (binned or unbinned) ; Definition at line 886 of file Fitter.cxx. ◆ CalculateHessErrors(). bool ROOT::Fit::Fitter::CalculateHessErrors ; (; ). perform an error analysis on the result using the Hessian Errors are obtained from the inverse of the Hessian matrix To be called only after fitting and when a minimizer supporting the Hessian calculations is used otherwise an error (false) is returned. ; A new FitResult with the Hessian result will be produced ; Definition at line 530 of file Fitter.cxx. ◆ CalculateMinosErrors(). bool ROOT::Fit::Fitter::CalculateMinosErrors ; (; ). perform an error analysis on the result using MINOS To be called only after fitting and when a minimizer supporting MINOS is used otherwise an er",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html:17040,error,error,17040,doc/master/classROOT_1_1Fit_1_1Fitter.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1Fitter.html,1,['error'],['error']
Availability," Definition at line 105 of file TProfile.h. ◆ GetBinEffectiveEntries(). Double_t TProfile::GetBinEffectiveEntries ; (; Int_t ; bin); const. virtual . Return bin effective entries for a weighted filled Profile histogram. ; In case of an unweighted profile, it is equivalent to the number of entries per bin The effective entries is defined as the square of the sum of the weights divided by the sum of the weights square. TProfile::Sumw2() must be called before filling the profile with weights. Only by calling this method the sum of the square of the weights per bin is stored. ; Definition at line 853 of file TProfile.cxx. ◆ GetBinEntries(). Double_t TProfile::GetBinEntries ; (; Int_t ; bin); const. virtual . Return bin entries of a Profile histogram. ; Definition at line 837 of file TProfile.cxx. ◆ GetBinError() [1/3]. Double_t TProfile::GetBinError ; (; Int_t ; bin); const. overridevirtual . Return bin error of a Profile histogram. ; Computing errors: A moving field; The computation of errors for a TProfile has evolved with the versions of ROOT. The difficulty is in computing errors for bins with low statistics. prior to version 3.00, we had no special treatment of low statistic bins. As a result, these bins had huge errors. The reason is that the expression eprim2 is very close to 0 (rounding problems) or 0.; in version 3.00 (18 Dec 2000), the algorithm is protected for values of eprim2 very small and the bin errors set to the average bin errors, following recommendations from a group of users.; in version 3.01 (19 Apr 2001), it is realized that the algorithm above should be applied only to low statistic bins.; in version 3.02 (26 Sep 2001), the same group of users recommend instead to take two times the average error on all bins for these low statistics bins giving a very small value for eprim2.; in version 3.04 (Nov 2002), the algorithm is modified/protected for the case when a TProfile is projected (ProjectionX). The previous algorithm generated a N^2 problem when ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:73174,error,errors,73174,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,2,['error'],['errors']
Availability, Definition at line 190 of file AdaptiveIntegratorMultiDim.h. ◆ fFun. const IMultiGenFunction* ROOT::Math::AdaptiveIntegratorMultiDim::fFun. private . Definition at line 195 of file AdaptiveIntegratorMultiDim.h. ◆ fMaxPts. unsigned int ROOT::Math::AdaptiveIntegratorMultiDim::fMaxPts. private . maximum number of function evaluation requested ; Definition at line 184 of file AdaptiveIntegratorMultiDim.h. ◆ fMinPts. unsigned int ROOT::Math::AdaptiveIntegratorMultiDim::fMinPts. private . minimum number of function evaluation requested ; Definition at line 183 of file AdaptiveIntegratorMultiDim.h. ◆ fNEval. int ROOT::Math::AdaptiveIntegratorMultiDim::fNEval. private . number of function evaluation ; Definition at line 192 of file AdaptiveIntegratorMultiDim.h. ◆ fRelError. double ROOT::Math::AdaptiveIntegratorMultiDim::fRelError. private . Relative error. ; Definition at line 191 of file AdaptiveIntegratorMultiDim.h. ◆ fRelTol. double ROOT::Math::AdaptiveIntegratorMultiDim::fRelTol. private . relative tolerance ; Definition at line 187 of file AdaptiveIntegratorMultiDim.h. ◆ fResult. double ROOT::Math::AdaptiveIntegratorMultiDim::fResult. private . last integration result ; Definition at line 189 of file AdaptiveIntegratorMultiDim.h. ◆ fSize. unsigned int ROOT::Math::AdaptiveIntegratorMultiDim::fSize. private . max size of working array (explode with dimension) ; Definition at line 185 of file AdaptiveIntegratorMultiDim.h. ◆ fStatus. int ROOT::Math::AdaptiveIntegratorMultiDim::fStatus. private . status of algorithm (error if not zero) ; Definition at line 193 of file AdaptiveIntegratorMultiDim.h. Libraries for ROOT::Math::AdaptiveIntegratorMultiDim:. [legend]; The documentation for this class was generated from the following files:; math/mathcore/inc/Math/AdaptiveIntegratorMultiDim.h; math/mathcore/src/AdaptiveIntegratorMultiDim.cxx. ROOTMathAdaptiveIntegratorMultiDim. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:45:19 (GVA Time) using Doxygen 1.9.8   ; . ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1AdaptiveIntegratorMultiDim.html:13853,toler,tolerance,13853,doc/master/classROOT_1_1Math_1_1AdaptiveIntegratorMultiDim.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1AdaptiveIntegratorMultiDim.html,2,"['error', 'toler']","['error', 'tolerance']"
Availability," Definition at line 37 of file TFoam.h. ◆ fHistDbg. TObjArray* TFoam::fHistDbg. protected . Histograms of wt, for debug. ; Definition at line 53 of file TFoam.h. ◆ fHistEdg. TObjArray* TFoam::fHistEdg. protected . Histograms of wt, one for each cell edge. ; Definition at line 52 of file TFoam.h. ◆ fHistWt. TH1D* TFoam::fHistWt. protected . Histogram of the MC wt. ; Definition at line 54 of file TFoam.h. ◆ fInhiDiv. Int_t* TFoam::fInhiDiv. protected . ! [fDim] Flags for inhibiting cell division ; Definition at line 40 of file TFoam.h. ◆ fLastCe. Int_t TFoam::fLastCe. protected . Index of the last cell. ; Definition at line 45 of file TFoam.h. ◆ fMaskDiv. Int_t* TFoam::fMaskDiv. protected . ! [fDim] Dynamic Mask for cell division ; Definition at line 39 of file TFoam.h. ◆ fMaxWtRej. Double_t TFoam::fMaxWtRej. protected . Maximum weight in rejection for getting wt=1 events. ; Definition at line 49 of file TFoam.h. ◆ fMCerror. Double_t TFoam::fMCerror. protected . and its error ; Definition at line 72 of file TFoam.h. ◆ fMCMonit. TFoamMaxwt* TFoam::fMCMonit. protected . Monitor of the MC weight for measuring MC efficiency. ; Definition at line 48 of file TFoam.h. ◆ fMCresult. Double_t TFoam::fMCresult. protected . True Integral R from MC series. ; Definition at line 71 of file TFoam.h. ◆ fMCvect. Double_t* TFoam::fMCvect. protected . [fDim] Generated MC vector for the outside user ; Definition at line 56 of file TFoam.h. ◆ fMCwt. Double_t TFoam::fMCwt. protected . MC weight. ; Definition at line 57 of file TFoam.h. ◆ fMethodCall. TMethodCall* TFoam::fMethodCall. protected . ! ROOT's pointer to user-defined global distribution function ; Definition at line 61 of file TFoam.h. ◆ fName. TString TFoam::fName. protected . Name of a given instance of the FOAM class. ; Definition at line 24 of file TFoam.h. ◆ fNBin. Int_t TFoam::fNBin. protected . No. of bins in the edge histogram for cell MC exploration. ; Definition at line 35 of file TFoam.h. ◆ fNCalls. Long_t TFoam::fNCalls",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFoam.html:42210,error,error,42210,doc/master/classTFoam.html,https://root.cern,https://root.cern/doc/master/classTFoam.html,1,['error'],['error']
Availability," Definition at line 80 of file TGraph2DAsymmErrors.h. ◆ operator=(). TGraph2DAsymmErrors & TGraph2DAsymmErrors::operator= ; (; const TGraph2DAsymmErrors & ; g). Assignment operator Copy everything except list of functions. ; Definition at line 197 of file TGraph2DAsymmErrors.cxx. ◆ Print(). void TGraph2DAsymmErrors::Print ; (; Option_t * ; chopt = """"); const. overridevirtual . Print 2D graph and errors values. ; Reimplemented from TGraph2D.; Definition at line 415 of file TGraph2DAsymmErrors.cxx. ◆ RemovePoint(). Int_t TGraph2DAsymmErrors::RemovePoint ; (; Int_t ; ipoint). Deletes point number ipoint. ; Definition at line 477 of file TGraph2DAsymmErrors.cxx. ◆ Scale(). void TGraph2DAsymmErrors::Scale ; (; Double_t ; c1 = 1., . Option_t * ; option = ""z"" . ). overridevirtual . Multiply the values and errors of a TGraph2DAsymmErrors by a constant c1. ; If option contains ""x"" the x values and errors are scaled If option contains ""y"" the y values and errors are scaled If option contains ""z"" the z values and errors are scaled If option contains ""xyz"" all three x, y and z values and errors are scaled ; Reimplemented from TGraph2D.; Definition at line 431 of file TGraph2DAsymmErrors.cxx. ◆ Set(). void TGraph2DAsymmErrors::Set ; (; Int_t ; n). overridevirtual . Set number of points in the 2D graph. ; Existing coordinates are preserved. New coordinates above fNpoints are preset to 0. ; Reimplemented from TGraph2D.; Definition at line 466 of file TGraph2DAsymmErrors.cxx. ◆ SetPoint(). void TGraph2DAsymmErrors::SetPoint ; (; Int_t ; i, . Double_t ; x, . Double_t ; y, . Double_t ; z . ). overridevirtual . Set x, y and z values for point number i. ; Reimplemented from TGraph2D.; Definition at line 537 of file TGraph2DAsymmErrors.cxx. ◆ SetPointError(). void TGraph2DAsymmErrors::SetPointError ; (; Int_t ; i, . Double_t ; exl, . Double_t ; exh, . Double_t ; eyl, . Double_t ; eyh, . Double_t ; ezl, . Double_t ; ezh . ). virtual . Set ex, ey and ez values for point number i. ; Defini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2DAsymmErrors.html:37295,error,errors,37295,doc/master/classTGraph2DAsymmErrors.html,https://root.cern,https://root.cern/doc/master/classTGraph2DAsymmErrors.html,4,['error'],['errors']
Availability," Definition at line 87 of file RooBinSamplingPdf.h. ◆ integrate(). double RooBinSamplingPdf::integrate ; (; const RooArgSet * ; normSet, . double ; low, . double ; high . ); const. private . Integrate the wrapped PDF using our current integrator, with given norm set and limits. ; Definition at line 302 of file RooBinSamplingPdf.cxx. ◆ integrator(). std::unique_ptr< ROOT::Math::IntegratorOneDim > & RooBinSamplingPdf::integrator ; (; ); const. Direct access to the unique_ptr holding the integrator that's used to sample the bins. ; This can be used to change options such as sampling accuracy or to entirely exchange the integrator.; Example: Use the 61-point Gauss-Kronrod integration rule; ROOT::Math::IntegratorOneDimOptions intOptions = pdf.integrator()->Options();; intOptions.SetNPoints(6); // 61-point integration rule; intOptions.SetRelTolerance(1.E-9); // Smaller tolerance -> more subdivisions; pdf.integrator()->SetOptions(intOptions);; ROOT::Math::BaseIntegratorOptions::SetRelTolerancevoid SetRelTolerance(double tol)set the relative toleranceDefinition IntegratorOptions.h:80; ROOT::Math::IntegratorOneDimOptionsNumerical one dimensional integration options.Definition IntegratorOptions.h:113; ROOT::Math::IntegratorOneDimOptions::SetNPointsvoid SetNPoints(unsigned int n)Set number of points for active integration rule.Definition IntegratorOptions.h:140; See alsoROOT::Math::IntegratorOneDim::SetOptions for more details on integration options. ; NoteWhen RooBinSamplingPdf is loaded from files, integrator options will fall back to the default values. ; Definition at line 278 of file RooBinSamplingPdf.cxx. ◆ IsA(). TClass * RooBinSamplingPdf::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from RooAbsPdf.; Definition at line 134 of file RooBinSamplingPdf.h. ◆ isBinnedDistribution(). bool RooBinSamplingPdf::isBinnedDistribution ; (; const RooArgSet & ; ); const. inlineoverridevirtual . Returns true, since this PDF is meant",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinSamplingPdf.html:87245,toler,toleranceDefinition,87245,doc/master/classRooBinSamplingPdf.html,https://root.cern,https://root.cern/doc/master/classRooBinSamplingPdf.html,1,['toler'],['toleranceDefinition']
Availability," Definition at line 87 of file TGraph2DErrors.cxx. ◆ TGraph2DErrors() [3/4]. TGraph2DErrors::TGraph2DErrors ; (; Int_t ; n, . Double_t * ; x, . Double_t * ; y, . Double_t * ; z, . Double_t * ; ex = nullptr, . Double_t * ; ey = nullptr, . Double_t * ; ez = nullptr, . Option_t * ; option = """" . ). TGraph2DErrors constructor with doubles vectors as input. ; Definition at line 110 of file TGraph2DErrors.cxx. ◆ TGraph2DErrors() [4/4]. TGraph2DErrors::TGraph2DErrors ; (; const TGraph2DErrors & ; g). Copy constructor. ; Copy everything except list of functions ; Definition at line 148 of file TGraph2DErrors.cxx. ◆ ~TGraph2DErrors(). TGraph2DErrors::~TGraph2DErrors ; (; ). override . TGraph2DErrors destructor. ; Definition at line 137 of file TGraph2DErrors.cxx. Member Function Documentation. ◆ AddPointError(). void TGraph2DErrors::AddPointError ; (; Double_t ; x, . Double_t ; y, . Double_t ; z, . Double_t ; ex = 0., . Double_t ; ey = 0., . Double_t ; ez = 0. . ). virtual . Add a point with errorbars to the graph. ; Definition at line 196 of file TGraph2DErrors.cxx. ◆ Class(). static TClass * TGraph2DErrors::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TGraph2DErrors::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TGraph2DErrors::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 61 of file TGraph2DErrors.h. ◆ DeclFileName(). static const char * TGraph2DErrors::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 61 of file TGraph2DErrors.h. ◆ GetErrorX(). Double_t TGraph2DErrors::GetErrorX ; (; Int_t ; i); const. overridevirtual . This function is called by Graph2DFitChisquare. ; It returns the error along X at point i. ; Reimplemented from TGraph2D.; Definition at line 206 of file TGraph2DErrors.cxx. ◆ GetErrorY(). Double_t TGraph2DErrors::GetErrorY ; (; Int_t ; i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2DErrors.html:29508,error,errorbars,29508,doc/master/classTGraph2DErrors.html,https://root.cern,https://root.cern/doc/master/classTGraph2DErrors.html,1,['error'],['errorbars']
Availability," Definition at line 882 of file TFumili.cxx. ◆ GetNumberFreeParameters(). Int_t TFumili::GetNumberFreeParameters ; (; ); const. overridevirtual . Return the number of free parameters. ; Implements TVirtualFitter.; Definition at line 814 of file TFumili.cxx. ◆ GetNumberTotalParameters(). Int_t TFumili::GetNumberTotalParameters ; (; ); const. overridevirtual . Return the total number of parameters (free + fixed) ; Implements TVirtualFitter.; Definition at line 806 of file TFumili.cxx. ◆ GetParameter() [1/2]. Double_t TFumili::GetParameter ; (; Int_t ; ipar); const. overridevirtual . Return current value of parameter ipar. ; Implements TVirtualFitter.; Definition at line 835 of file TFumili.cxx. ◆ GetParameter() [2/2]. Int_t TFumili::GetParameter ; (; Int_t ; ipar, . char * ; cname, . Double_t & ; value, . Double_t & ; verr, . Double_t & ; vlow, . Double_t & ; vhigh . ); const. overridevirtual . Get various ipar parameter attributes: . cname: parameter name; value: parameter value; verr: parameter error; vlow: lower limit; vhigh: upper limit. WARNING! parname must be suitably dimensioned in the calling function. ; Implements TVirtualFitter.; Definition at line 852 of file TFumili.cxx. ◆ GetParError(). Double_t TFumili::GetParError ; (; Int_t ; ipar); const. overridevirtual . Return error of parameter ipar. ; Implements TVirtualFitter.; Definition at line 826 of file TFumili.cxx. ◆ GetParName(). const char * TFumili::GetParName ; (; Int_t ; ipar); const. overridevirtual . Return name of parameter ipar. ; Implements TVirtualFitter.; Definition at line 872 of file TFumili.cxx. ◆ GetPL0(). Double_t * TFumili::GetPL0 ; (; ); const. inline . Definition at line 95 of file TFumili.h. ◆ GetStats(). Int_t TFumili::GetStats ; (; Double_t & ; amin, . Double_t & ; edm, . Double_t & ; errdef, . Int_t & ; nvpar, . Int_t & ; nparx . ); const. overridevirtual . Return global fit parameters. . amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable param",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFumili.html:33916,error,error,33916,doc/master/classTFumili.html,https://root.cern,https://root.cern/doc/master/classTFumili.html,1,['error'],['error']
Availability, Definition at line 885 of file TGraphMultiErrors.cxx. Member Data Documentation. ◆ fAttFill. std::vector<TAttFill> TGraphMultiErrors::fAttFill. protected . The AttFill attributes of the different errors. ; Definition at line 41 of file TGraphMultiErrors.h. ◆ fAttLine. std::vector<TAttLine> TGraphMultiErrors::fAttLine. protected . The AttLine attributes of the different errors. ; Definition at line 42 of file TGraphMultiErrors.h. ◆ fExH. Double_t* TGraphMultiErrors::fExH. protected . [fNpoints] array of X high errors ; Definition at line 36 of file TGraphMultiErrors.h. ◆ fExL. Double_t* TGraphMultiErrors::fExL. protected . [fNpoints] array of X low errors ; Definition at line 35 of file TGraphMultiErrors.h. ◆ fEyH. std::vector<TArrayD> TGraphMultiErrors::fEyH. protected . Two dimensional array of Y high errors. ; Definition at line 38 of file TGraphMultiErrors.h. ◆ fEyHSum. Double_t* TGraphMultiErrors::fEyHSum = nullptr. mutableprotected . ! Array of summed Y high errors for fitting ; Definition at line 40 of file TGraphMultiErrors.h. ◆ fEyL. std::vector<TArrayD> TGraphMultiErrors::fEyL. protected . Two dimensional array of Y low errors. ; Definition at line 37 of file TGraphMultiErrors.h. ◆ fEyLSum. Double_t* TGraphMultiErrors::fEyLSum = nullptr. mutableprotected . ! Array of summed Y low errors for fitting ; Definition at line 39 of file TGraphMultiErrors.h. ◆ fNYErrors. Int_t TGraphMultiErrors::fNYErrors. protected . The amount of different y-errors. ; Definition at line 32 of file TGraphMultiErrors.h. ◆ fSumErrorsMode. Int_t TGraphMultiErrors::fSumErrorsMode. protected . How y errors are summed: kOnlyFirst = Only First; kSquareSum = Squared Sum; kSum = Absolute Addition. ; Definition at line 33 of file TGraphMultiErrors.h. Libraries for TGraphMultiErrors:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/TGraphMultiErrors.h; hist/hist/src/TGraphMultiErrors.cxx. TGraphMultiErrors. ROOT master - Reference Guide Gener,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:78473,error,errors,78473,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['error'],['errors']
Availability," Definition at line 97 of file TRatioPlot.h. ◆ fCi2Color. Color_t TRatioPlot::fCi2Color = kGreen. protected . Stores the color for the 2 sigma band. ; Definition at line 98 of file TRatioPlot.h. ◆ fCl1. Double_t TRatioPlot::fCl1 = 0.6827. protected . Stores the confidence level for the inner confidence interval band. ; Definition at line 102 of file TRatioPlot.h. ◆ fCl2. Double_t TRatioPlot::fCl2 = 0.9545. protected . Stores the confidence level for the outer confidence interval band. ; Definition at line 103 of file TRatioPlot.h. ◆ fConfidenceInterval1. TGraphErrors* TRatioPlot::fConfidenceInterval1 = nullptr. protected . Stores the graph for the 1 sigma band. ; Definition at line 95 of file TRatioPlot.h. ◆ fConfidenceInterval2. TGraphErrors* TRatioPlot::fConfidenceInterval2 = nullptr. protected . Stores the graph for the 2 sigma band. ; Definition at line 96 of file TRatioPlot.h. ◆ fErrorMode. Int_t TRatioPlot::fErrorMode = ErrorMode::kErrorSymmetric. protected . Stores the error mode, sym, asym or func. ; Definition at line 85 of file TRatioPlot.h. ◆ fFitDrawOpt. TString TRatioPlot::fFitDrawOpt. protected . Stores draw option for the fit function in the fit residual case. ; Definition at line 90 of file TRatioPlot.h. ◆ fFitResult. TFitResult* TRatioPlot::fFitResult = nullptr. protected . Stores the explicit fit result given in the fit residual case. Can be 0. ; Definition at line 108 of file TRatioPlot.h. ◆ fGraphDrawOpt. TString TRatioPlot::fGraphDrawOpt. protected . Stores draw option for the lower plot graph given in constructor. ; Definition at line 89 of file TRatioPlot.h. ◆ fGridlinePositions. std::vector<double> TRatioPlot::fGridlinePositions. protected . Stores the y positions for the gridlines. ; Definition at line 124 of file TRatioPlot.h. ◆ fGridlines. std::vector<TLine*> TRatioPlot::fGridlines. protected . Keeps TLine objects for the gridlines. ; Definition at line 123 of file TRatioPlot.h. ◆ fH1. TH1* TRatioPlot::fH1 = nullptr. protected . Stores the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTRatioPlot.html:46092,error,error,46092,doc/master/classTRatioPlot.html,https://root.cern,https://root.cern/doc/master/classTRatioPlot.html,1,['error'],['error']
Availability," Delete graphics context if it is not used anymore. ; Definition at line 933 of file TGGC.cxx. ◆ GetGC() [1/2]. TGGC * TGGCPool::GetGC ; (; GContext_t ; gct). returns graphics context based on its GContext_t handle. ; Definition at line 974 of file TGGC.cxx. ◆ GetGC() [2/2]. TGGC * TGGCPool::GetGC ; (; GCValues_t * ; values, . Bool_t ; rw = kFALSE . ). Get the best matching graphics context depending on values. ; If rw is false only a readonly, not modifiable graphics context is returned. If rw is true a new modifiable graphics context is returned. ; Definition at line 987 of file TGGC.cxx. ◆ IsA(). TClass * TGGCPool::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 139 of file TGGC.h. ◆ MatchGC(). Int_t TGGCPool::MatchGC ; (; const TGGC * ; gc, . GCValues_t * ; values . ). private . Try to find matching graphics context. ; On success returns the amount of matching bits (which may be zero if masks have no common bits), -1 on failure (when there are common bits but not a single match). ; Definition at line 1039 of file TGGC.cxx. ◆ operator=(). TGGCPool & TGGCPool::operator= ; (; const TGGCPool & ; gp). inlineprotected . Definition at line 116 of file TGGC.h. ◆ Print(). void TGGCPool::Print ; (; Option_t * ; option = """"); const. overridevirtual . List all graphics contexts in the pool. ; Reimplemented from TObject.; Definition at line 1161 of file TGGC.cxx. ◆ Streamer(). void TGGCPool::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerNVirtual(). void TGGCPool::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 139 of file TGGC.h. ◆ UpdateGC(). void TGGCPool::UpdateGC ; (; TGGC * ; gc, . GCValues_t * ; values . ). private . Update graphics context with the values spcified in values->fMask. ; Definition at line 1153 of file TGGC.cxx. Friends And Related Symbol Documentati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGGCPool.html:14905,mask,masks,14905,doc/master/classTGGCPool.html,https://root.cern,https://root.cern/doc/master/classTGGCPool.html,2,"['failure', 'mask']","['failure', 'masks']"
Availability," DoError(int level, const char *location, const char *fmt, va_list va) constTObjectprotectedvirtual; DoMerge(const TGraph *g) overrideTGraphErrorsprotectedvirtual; Draw(Option_t *chopt="""") overrideTGraphvirtual; DrawClass() constTObjectvirtual; DrawClone(Option_t *option="""") constTObjectvirtual; DrawGraph(Int_t n, const Int_t *x, const Int_t *y, Option_t *option="""")TGraphvirtual; DrawGraph(Int_t n, const Float_t *x, const Float_t *y, Option_t *option="""")TGraphvirtual; DrawGraph(Int_t n, const Double_t *x=nullptr, const Double_t *y=nullptr, Option_t *option="""")TGraphvirtual; DrawPanel()TGraphvirtual; Dump() constTObjectvirtual; EDeprecatedStatusBits enum nameTObject; Error(const char *method, const char *msgfmt,...) constTObjectvirtual; EStatusBits enum nameTGraph; Eval(Double_t x, TSpline *spline=nullptr, Option_t *option="""") constTGraphvirtual; Execute(const char *method, const char *params, Int_t *error=nullptr)TObjectvirtual; Execute(TMethod *method, TObjArray *params, Int_t *error=nullptr)TObjectvirtual; ExecuteEvent(Int_t event, Int_t px, Int_t py) overrideTGraphvirtual; Expand(Int_t newsize)TGraphvirtual; Expand(Int_t newsize, Int_t step)TGraphvirtual; ExpandAndCopy(Int_t size, Int_t iend)TGraphprotected; Fatal(const char *method, const char *msgfmt,...) constTObjectvirtual; fBitsTObjectprivate; fEXTGraphErrorsprotected; fEYTGraphErrorsprotected; fFillColorTAttFillprotected; fFillStyleTAttFillprotected; fFunctionsTGraphprotected; fgDtorOnlyTObjectprivatestatic; fgObjectStatTObjectprivatestatic; fHistogramTGraphprotected; FillBuffer(char *&buffer)TNamedvirtual; FillZero(Int_t begin, Int_t end, Bool_t from_ctor=kTRUE) overrideTGraphErrorsprotectedvirtual; FindObject(const char *name) const overrideTGraphvirtual; FindObject(const TObject *obj) const overrideTGraphvirtual; Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Axis_t xmin=0, Axis_t xmax=0)TGraphvirtual; Fit(TF1 *f1, Option_t *option="""", Option_t *goption="""", Axis_t xmin=0, Axis_t xmax",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphErrors-members.html:3248,error,error,3248,doc/master/classTGraphErrors-members.html,https://root.cern,https://root.cern/doc/master/classTGraphErrors-members.html,2,['error'],['error']
Availability," Documentation . Introduction; Welcome to ROOT; This documentation describes the software classes and functions that makes up the ROOT softare system as well as their application programming interface (API). This is not an introduction of ROOT, for this please refer to the ROOT User Guides and Manuals. This documentation is generated directly from the source code using Doxygen and in principle is kept up to date. The version of ROOT corresponding to this documentation is indicated at the page heading. You may also find in reference documentation page pointers to reference manuals for other ROOT versions.; How to use this reference documentation; The User’s Classes in the top bar provides the user API, mainly the list of main Users' classes organized by module or functionality. The full list of classes, both for the public API and for the implementation details are available under the All Classes tab. A classification of classes based on their C++ namespace can be found under the Namespace tab. The fully indexed list of all source code is available under the tab Files.; ROOT provides other types of documentation:. A general Users Guide is provided for a more in depth explanation of concepts and functionality available in the ROOT system.; A number of topical User Guides and Manuals for various components of the system.; A rich set of ROOT tutorials and code examples are offered to developers to exercise specific functionality.; A rich set of HowTo's is also present to discuss issues commonly faced by ROOT users. Caveat; We have moved recently to generate the documentation with Doxygen. To achieve this the comments in the source code needed to be formatted and written specifically for Doxygen to generated proper documentation. If you find missing documentation or inaccuracies please report them to our bug tracker. Detailed instructions on how to submit a bug can be found here. . ROOT 6.06/09 - Reference Guide Generated on Sun Dec 10 2017 22:29:05 using Doxygen 1.8.9. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html606/index.html:1244,avail,available,1244,root/html606/index.html,https://root.cern,https://root.cern/root/html606/index.html,4,['avail'],['available']
Availability," Double_t &);  calculates rms,mean, xmin, xmax of the event variable this can be either done for the variables as they are or for normalised variables (in the range of 0-1) if ""norm"" is set to kTRUE ;  ; Bool_t TxtWeightsOnly () const;  ; Bool_t Verbose () const;  ;  Protected Member Functions inherited from TMVA::Configurable; void EnableLooseOptions (Bool_t b=kTRUE);  ; const TString & GetReferenceFile () const;  ; Bool_t LooseOptionCheckingEnabled () const;  ; void ResetSetFlag ();  resets the IsSet flag for all declare options to be called before options are read from stream ;  ; void WriteOptionsReferenceToFile ();  write complete options to output stream ;  ;  Protected Member Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  . Private Member Functions; void DeclareOptions ();  define the options (their key words) that can be set in the option string ;  ; void ProcessOptions ();  the option string is decoded, for available options see ""DeclareOptions"" ;  . Additional Inherited Members;  Public Types inherited from TMVA::MethodBase; enum  EWeightFileType { kROOT =0; , kTEXT; };  ;  Public Types inherited from TObject; enum  { ;   kIsOnHeap = 0x01000000; , kNotDeleted = 0x02000000; , kZombie = 0x04000000; , kInconsistent = 0x08000000; , ;   kBitMask = 0x00ffffff. };  ; enum  { kSingleKey = (1ULL << ( 0 )); , kOverwrite = (1ULL << ( 1 )); , kWriteDelete = (1ULL << ( 2 )); };  ; enum  EDeprecatedStatusBits { kObjInCanvas = (1ULL << ( 3 )); };  ; enum  EStatusBits { ;   kCanDelete = (1ULL << ( 0 )); , kMustCleanup = (1ULL << ( 3 )); , kIsReferenced = (1ULL << ( 4 )); , kHasUUID = (1ULL << ( 5 )); , ;   kCannotPick = (1ULL << ( 6 )); , kNoContextMenu = (1ULL << ( 8 )); , kInvalidObject = (1ULL << ( 13 )). };  ;  Public Attributes inherited from TMVA::MethodBase; Bool_t fSetupCompleted;  ; TrainingHistory fTrainHistory;  ;  Prote",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodBayesClassifier.html:25699,avail,available,25699,doc/master/classTMVA_1_1MethodBayesClassifier.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodBayesClassifier.html,1,['avail'],['available']
Availability," Double_t * GetCovarianceMatrix() const; return a pointer to the covariance matrix. Double_t GetCovarianceMatrixElement(Int_t i, Int_t j) const; return element i,j from the covariance matrix. Int_t GetNumberTotalParameters() const; return the total number of parameters (free + fixed). Int_t GetNumberFreeParameters() const; return the number of free parameters. Double_t GetParError(Int_t ipar) const; return error of parameter ipar. Double_t GetParameter(Int_t ipar) const; return current value of parameter ipar. Int_t GetParameter(Int_t ipar, char* name, Double_t& value, Double_t& verr, Double_t& vlow, Double_t& vhigh) const; Get various ipar parameter attributs:. cname: parameter name; value: parameter value; verr: parameter error; vlow: lower limit; vhigh: upper limit; WARNING! parname must be suitably dimensionned in the calling function. const char * GetParName(Int_t ipar) const; return name of parameter ipar. Int_t GetErrors(Int_t ipar, Double_t& eplus, Double_t& eminus, Double_t& eparab, Double_t& globcc) const; Return errors after MINOs; not implemented. Int_t GetStats(Double_t& amin, Double_t& edm, Double_t& errdef, Int_t& nvpar, Int_t& nparx) const; return global fit parameters; amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable parameters; nparx : total number of parameters. Double_t GetSumLog(Int_t ); return Sum(log(i) i=0,n; used by log likelihood fits. void InvertZ(Int_t ); Inverts packed diagonal matrix Z by square-root method.; Matrix elements corresponding to; fix parameters are removed. n: number of variable parameters. Bool_t IsFixed(Int_t ipar) const; return kTRUE if parameter ipar is fixed, kFALSE othersise). Int_t Minimize(); *; FUMILI; Based on ideas, proposed by I.N. Silin; [See NIM A440, 2000 (p431)]; converted from FORTRAN to C by; Sergey Yaschenko <s.yaschenko@fz-juelich.de>. *. This function is called after setting theoretical function; by means of TFumili::SetUserFunc and initializing parameters.; Opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFumili.html:19647,error,errors,19647,root/html528/TFumili.html,https://root.cern,https://root.cern/root/html528/TFumili.html,10,['error'],['errors']
Availability, Double_t *p) const;  Valid if the bandwidth is small compared to nEvents**1/5. ;  . Private Attributes; Double_t fAdaptiveBandwidthFactor;  Geometric mean of the kernel density estimation from the data for adaptive iteration. ;  ; TF1 * fApproximateBias;  Output Kernel Density Estimation lower confidence interval PDF function. ;  ; Bool_t fAsymLeft;  ; Bool_t fAsymRight;  ; std::vector< Double_t > fBinCount;  Number of events per bin for binned data option. ;  ; EBinning fBinning;  ; std::vector< Double_t > fCanonicalBandwidths;  ; std::vector< Double_t > fData;  Data events. ;  ; std::vector< Double_t > fEvents;  Original data storage. ;  ; std::vector< Double_t > fEventWeights;  Original data weights. ;  ; TGraphErrors * fGraph;  Output Kernel Density Estimation approximate bias. ;  ; EIteration fIteration;  ; std::unique_ptr< TKernel > fKernel;  ! internal kernel class. Transient because it is recreated after reading from a file ;  ; KernelFunction_Ptr fKernelFunction;  ! pointer to kernel function ;  ; std::vector< Double_t > fKernelSigmas2;  ; EKernelType fKernelType;  Graph with the errors. ;  ; TF1 * fLowerPDF;  Output Kernel Density Estimation upper confidence interval PDF function. ;  ; Double_t fMean;  Data mean. ;  ; EMirror fMirror;  ; Bool_t fMirrorLeft;  ; Bool_t fMirrorRight;  ; UInt_t fNBins;  Number of bins for binned data option. ;  ; UInt_t fNEvents;  Data's number of events. ;  ; Bool_t fNewData;  Flag to control when new data are given. ;  ; TF1 * fPDF;  ; Double_t fRho;  Adjustment factor for sigma. ;  ; std::vector< Bool_t > fSettedOptions;  User input options flag. ;  ; Double_t fSigma;  Data std deviation. ;  ; Double_t fSigmaRob;  Data std deviation (robust estimation) ;  ; Double_t fSumOfCounts;  Data sum of weights. ;  ; TF1 * fUpperPDF;  Output Kernel Density Estimation PDF function. ;  ; Bool_t fUseBins;  ; UInt_t fUseBinsNEvents;  If the algorithm is allowed to use automatic (relaxed) binning this is the minimum number of events to do,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTKDE.html:19421,error,errors,19421,doc/master/classTKDE.html,https://root.cern,https://root.cern/doc/master/classTKDE.html,1,['error'],['errors']
Availability," Double_t *params=nullptr) const;  ; bool GenerateGradientPar ();  Generate gradient computation routine with respect to the parameters. ;  ; bool GenerateHessianPar ();  Generate hessian computation routine with respect to the parameters. ;  ; TString GetExpFormula (Option_t *option="""") const;  Return the expression formula. ;  ; TString GetGradientFormula () const;  ; TString GetHessianFormula () const;  ; const TObject * GetLinearPart (Int_t i) const;  Return linear part. ;  ; Int_t GetNdim () const;  ; Int_t GetNpar () const;  ; Int_t GetNumber () const;  ; Double_t GetParameter (const char *name) const;  Returns parameter value given by string. ;  ; Double_t GetParameter (Int_t param) const;  Return parameter value given by integer. ;  ; Double_t * GetParameters () const;  ; void GetParameters (Double_t *params) const;  ; const char * GetParName (Int_t ipar) const;  Return parameter name given by integer. ;  ; Int_t GetParNumber (const char *name) const;  Return parameter index given a name (return -1 for not existing parameters) non need to print an error. ;  ; TString GetUniqueFuncName () const;  ; Double_t GetVariable (const char *name) const;  Returns variable value. ;  ; TString GetVarName (Int_t ivar) const;  Returns variable name given its position in the array. ;  ; Int_t GetVarNumber (const char *name) const;  Returns variable number (positon in array) given its name. ;  ; void GradientPar (const Double_t *x, Double_t *result);  Compute the gradient with respect to the parameter passing a buffer with a size at least equal to the number of parameters. ;  ; void GradientPar (const Double_t *x, TFormula::CladStorage &result);  Compute the gradient employing automatic differentiation. ;  ; bool HasGeneratedGradient () const;  ; bool HasGeneratedHessian () const;  ; void HessianPar (const Double_t *x, Double_t *result);  ; void HessianPar (const Double_t *x, TFormula::CladStorage &result);  Compute the gradient employing automatic differentiation. ;  ; TClas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFormula.html:11404,error,error,11404,doc/master/classTFormula.html,https://root.cern,https://root.cern/doc/master/classTFormula.html,1,['error'],['error']
Availability," Double_t DecayWidth, Double_t Charge, const char* ParticleClass, Int_t PdgCode, Int_t Anti = -1, Int_t TrackingCode = 0); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual Int_tConvertGeant3ToPdg(Int_t Geant3Number); virtual Int_tConvertIsajetToPdg(Int_t isaNumber); virtual Int_tConvertPdgToGeant3(Int_t pdgNumber); virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; TParticlePDG*GetParticle(Int_t pdgCode) const; TParticlePDG*GetParticle(const char* name) const; TParticleClassPDG*GetParticleClass(const c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDatabasePDG.html:2324,Error,Error,2324,root/html532/TDatabasePDG.html,https://root.cern,https://root.cern/root/html532/TDatabasePDG.html,1,['Error'],['Error']
Availability," Double_t Z=1, Bool_t linearMethod=kTRUE); -- Visualize the uncertainty on the parameters, as given in fitres, at 'Z' sigma'. VisualizeError(const RooFitResult& fitres, const RooArgSet& param, Double_t Z=1, Bool_t linearMethod=kTRUE) ;; -- Visualize the uncertainty on the subset of parameters 'param', as given in fitres, at 'Z' sigma'. Details on error band visualization. By default (linMethod=kTRUE) a linearized error is shown which is calculated as follows; T; error(x) = Z* F_a(x) * Corr(a,a') F_a'(x). where F_a(x) = [ f(x,a+da) - f(x,a-da) ] / 2, with f(x) the plotted curve and 'da' taken from the fit result; Corr(a,a') = the correlation matrix from the fit result; Z = requested significance 'Z sigma band'. The linear method is fast (required 2*N evaluations of the curve, where N is the number of parameters), but may; not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and Gaussian approximations made. Alternatively (linMethod=kFALSE), a more robust error is calculated using a sampling method. In this method a number of curves; is calculated with variations of the parameter values, as drawn from a multi-variate Gaussian p.d.f. that is constructed; from the fit results covariance matrix. The error(x) is determined by calculating a central interval that capture N% of the variations; for each valye of x, where N% is controlled by Z (i.e. Z=1 gives N=68%). The number of sampling curves is chosen to be such; that at least 30 curves are expected to be outside the N% interval, and is minimally 100 (e.g. Z=1->Ncurve=100, Z=2->Ncurve=659, Z=3->Ncurve=11111); Intervals from the sampling method can be asymmetric, and may perform better in the presence of strong correlations, but may take (much); longer to calculate. RooPlot* plotOn(RooPlot* frame, RooLinkedList& argList); Internal back-end function of plotOn() with named arguments. RooPlot* plotOn(RooPlot *frame, PlotOpt o); Plotting engine function for internal use. Plot ourselves on give",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsReal.html:49074,robust,robust,49074,root/html526/RooAbsReal.html,https://root.cern,https://root.cern/root/html526/RooAbsReal.html,2,"['error', 'robust']","['error', 'robust']"
Availability," Double_t Z=1, Bool_t linearMethod=kTRUE); -- Visualize the uncertainty on the parameters, as given in fitres, at 'Z' sigma'. VisualizeError(const RooFitResult& fitres, const RooArgSet& param, Double_t Z=1, Bool_t linearMethod=kTRUE) ;; -- Visualize the uncertainty on the subset of parameters 'param', as given in fitres, at 'Z' sigma'. Details on error band visualization. By default (linMethod=kTRUE) a linearized error is shown which is calculated as follows; T; error(x) = Z* F_a(x) * Corr(a,a') F_a'(x). where F_a(x) = [ f(x,a+da) - f(x,a-da) ] / 2, with f(x) the plotted curve and 'da' taken from the fit result; Corr(a,a') = the correlation matrix from the fit result; Z = requested significance 'Z sigma band'. The linear method is fast (required 2*N evaluations of the curve, where N is the number of parameters), but may; not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and Gaussian approximations made. Alternatively (linMethod=kFALSE), a more robust error is calculated using a sampling method. In this method a number of curves; is calculated with variations of the parameter values, as drawn from a multi-variate Gaussian p.d.f. that is constructed; from the fit results covariance matrix. The error(x) is determined by calculating a central interval that capture N% of the variations; for each valye of x, where N% is controlled by Z (i.e. Z=1 gives N=68%). The number of sampling curves is chosen to be such; that at least 30 curves are expected to be outside the N% interval, and is minimally 100 (e.g. Z=1->Ncurve=100, Z=2->Ncurve=659, Z=3->Ncurve=11111); Intervals from the sampling method can be asymmetric, and may perform better in the presence of strong correlations, but may take (much); longer to calculate. RooPlot* plotOn(RooPlot* frame, RooLinkedList& cmdList) const; Internal back-end function of plotOn() with named arguments. RooPlot* plotOn(RooPlot* frame, RooAbsReal::PlotOpt o) const; Plotting engine function for internal use",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsReal.html:49769,robust,robust,49769,root/html528/RooAbsReal.html,https://root.cern,https://root.cern/root/html528/RooAbsReal.html,18,"['error', 'robust']","['error', 'robust']"
Availability," Double_t elow=0, ehigh=0;; 1127 if (fEXlow) elow = fEXlow[i];; 1128 if (fEXhigh) ehigh = fEXhigh[i];; 1129 return TMath::Sqrt(0.5*(elow*elow + ehigh*ehigh));; 1130}; 1131 ; 1132 ; 1133////////////////////////////////////////////////////////////////////////////////; 1134/// Returns the combined error along Y at point i by computing the average; 1135/// of the lower and upper variance.; 1136 ; 1137Double_t TGraphAsymmErrors::GetErrorY(Int_t i) const; 1138{; 1139 if (i < 0 || i >= fNpoints) return -1;; 1140 if (!fEYlow && !fEYhigh) return -1;; 1141 Double_t elow=0, ehigh=0;; 1142 if (fEYlow) elow = fEYlow[i];; 1143 if (fEYhigh) ehigh = fEYhigh[i];; 1144 return TMath::Sqrt(0.5*(elow*elow + ehigh*ehigh));; 1145}; 1146 ; 1147 ; 1148////////////////////////////////////////////////////////////////////////////////; 1149/// Get high error on X.; 1150 ; 1151Double_t TGraphAsymmErrors::GetErrorXhigh(Int_t i) const; 1152{; 1153 if (i<0 || i>fNpoints) return -1;; 1154 if (fEXhigh) return fEXhigh[i];; 1155 return -1;; 1156}; 1157 ; 1158 ; 1159////////////////////////////////////////////////////////////////////////////////; 1160/// Get low error on X.; 1161 ; 1162Double_t TGraphAsymmErrors::GetErrorXlow(Int_t i) const; 1163{; 1164 if (i<0 || i>fNpoints) return -1;; 1165 if (fEXlow) return fEXlow[i];; 1166 return -1;; 1167}; 1168 ; 1169 ; 1170////////////////////////////////////////////////////////////////////////////////; 1171/// Get high error on Y.; 1172 ; 1173Double_t TGraphAsymmErrors::GetErrorYhigh(Int_t i) const; 1174{; 1175 if (i<0 || i>fNpoints) return -1;; 1176 if (fEYhigh) return fEYhigh[i];; 1177 return -1;; 1178}; 1179 ; 1180 ; 1181////////////////////////////////////////////////////////////////////////////////; 1182/// Get low error on Y.; 1183 ; 1184Double_t TGraphAsymmErrors::GetErrorYlow(Int_t i) const; 1185{; 1186 if (i<0 || i>fNpoints) return -1;; 1187 if (fEYlow) return fEYlow[i];; 1188 return -1;; 1189}; 1190 ; 1191 ; 1192////////////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html:40255,error,error,40255,doc/master/TGraphAsymmErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphAsymmErrors_8cxx_source.html,1,['error'],['error']
Availability," Double_t error = h->GetBinError(bin);; Empty bins are excluded in the fit when using the Chi-square fit method. When fitting an histogram representing counts (i.e with Poisson statistics) it is recommended to use the Log-Likelihood method (option ‘L’ or “WL”), particularly in case of low statistics. When the histogram has been filled with weights different than one, a weighted likelihood method can be used and the errors retrieved from the fit are corrected following a procedure described in paragraph 8.5.2 of the book, F. James, Statistical Methods in Experimental Physics, 2nd Edition.; 5.5.4 Fit Statistics; You can change the statistics box to display the fit parameters with the TStyle::SetOptFit(mode) method. This parameter has four digits: mode = pcev (default = 0111). p = 1 print probability; c = 1 print Chi-square/number of degrees of freedom; e = 1 print errors (if e=1, v must be 1); v = 1 print name/values of parameters. For example, to print the fit probability, parameter names/values, and errors, use:; gStyle->SetOptFit(1011);; 5.6 The Fit Panel. The Fit Panel. To display the Fit Panel right click on a histogram to pop up the context menu, and then select the menu entry Fit Panel.; The new Fit Panel GUI is available in ROOT v5.14. Its goal is to replace the old Fit Panel and to provide more user friendly way for performing, exploring and comparing fits.; By design, this user interface is planned to contain two tabs: “General” and “Minimization”. Currently, the “General” tab provides user interface elements for setting the fit function, fit method and different fit, draw, print options. The “Minimization tab” provides the option to set the Minimizer to use in the fit and its specific options.; The new fit panel is a modeless dialog, i.e. when opened, it does not prevent users from interacting with other windows. Its first prototype is a singleton application. When the Fit Panel is activated, users can select an object for fitting in the usual way, i.e. by ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:181993,error,errors,181993,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['error'],['errors']
Availability," Double_t error); virtual voidTH1::SetBinError(Int_t binx, Int_t biny, Double_t error); virtual voidTH1::SetBinError(Int_t binx, Int_t biny, Int_t binz, Double_t error); virtual voidTH1::SetBins(Int_t nx, const Double_t* xBins); virtual voidTH1::SetBins(Int_t nx, Double_t xmin, Double_t xmax); virtual voidTH1::SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins); virtual voidTH1::SetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax); virtual voidTH1::SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins, Int_t nz, const Double_t* zBins); virtual voidTH1::SetBins(Int_t nx, Double_t xmin, Double_t xmax, Int_t ny, Double_t ymin, Double_t ymax, Int_t nz, Double_t zmin, Double_t zmax); virtual voidTH1::SetBinsLength(Int_t = -1); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTH1::SetBuffer(Int_t buffersize, Option_t* option = """"); virtual voidTH1::SetCellContent(Int_t binx, Int_t biny, Double_t content); virtual voidTH1::SetCellError(Int_t binx, Int_t biny, Double_t content); virtual voidTH1::SetContent(const Double_t* content); virtual voidTH1::SetContour(Int_t nlevels, const Double_t* levels = 0); virtual voidTH1::SetContourLevel(Int_t level, Double_t value); static voidTH1::SetDefaultBufferSize(Int_t buffersize = 1000); static voidTH1::SetDefaultSumw2(Bool_t sumw2 = kTRUE); virtual voidTH1::SetDirectory(TDirectory* dir); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTH1::SetEntries(Double_t n); virtual voidTH1::SetError(const Double_t* error); virtual voidTAttFill::SetFillAttributes()MENU ; virtual voidTAttFill::SetFillColor(Color_t fcolor); virtual voidTAttFill::SetFillStyle(Style_t fstyle); virtual voidTH1::SetLabelColor(Color_t color = 1, Option_t* axis = ""X""); virtual voidTH1::SetLabelFont(Style_t font = 62, Option_t* axis = ""X""); virtual voidTH1::SetLabelOffset(Float_t offset = 0.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH2.html:16680,error,error,16680,root/html528/TH2.html,https://root.cern,https://root.cern/root/html528/TH2.html,8,['error'],['error']
Availability," Double_t eyl=0., Double_t eyh=0., Double_t ezl=0., Double_t ezh=0.);  Add a 3D point with asymmetric errorbars to an existing graph. ;  ; Double_t GetErrorX (Int_t bin) const override;  Returns the combined error along X at point i by computing the average of the lower and upper variance. ;  ; Double_t GetErrorXhigh (Int_t i) const;  Returns the high error along X at point i. ;  ; Double_t GetErrorXlow (Int_t i) const;  Returns the low error along X at point i. ;  ; Double_t GetErrorY (Int_t bin) const override;  Returns the combined error along Y at point i by computing the average of the lower and upper variance. ;  ; Double_t GetErrorYhigh (Int_t i) const;  Returns the high error along Y at point i. ;  ; Double_t GetErrorYlow (Int_t i) const;  Returns the low error along Y at point i. ;  ; Double_t GetErrorZ (Int_t bin) const override;  Returns the combined error along Z at point i by computing the average of the lower and upper variance. ;  ; Double_t GetErrorZhigh (Int_t i) const;  Returns the high error along Z at point i. ;  ; Double_t GetErrorZlow (Int_t i) const;  Returns the low error along Z at point i. ;  ; Double_t * GetEXhigh () const override;  ; Double_t * GetEXlow () const override;  ; Double_t * GetEYhigh () const override;  ; Double_t * GetEYlow () const override;  ; Double_t * GetEZhigh () const override;  ; Double_t * GetEZlow () const override;  ; Double_t GetXmaxE () const override;  Returns the X maximum with errors. ;  ; Double_t GetXminE () const override;  Returns the X minimum with errors. ;  ; Double_t GetYmaxE () const override;  Returns the Y maximum with errors. ;  ; Double_t GetYminE () const override;  Returns the Y minimum with errors. ;  ; Double_t GetZmaxE () const override;  Returns the Z maximum with errors. ;  ; Double_t GetZminE () const override;  Returns the Z minimum with errors. ;  ; TClass * IsA () const override;  ; TGraph2DAsymmErrors & operator= (const TGraph2DAsymmErrors &);  Assignment operator Copy everything excep",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraph2DAsymmErrors.html:4826,error,error,4826,doc/master/classTGraph2DAsymmErrors.html,https://root.cern,https://root.cern/doc/master/classTGraph2DAsymmErrors.html,1,['error'],['error']
Availability," Double_t fTheta; ///< theta angle to view as lego/surface; 80 Double_t fPhi; ///< phi angle to view as lego/surface; 81 ; 82 Double_t fAspectRatio; ///< ratio of w/h in case of fixed ratio; 83 ; 84 Int_t fPixmapID; ///<! Off-screen pixmap identifier; 85 Int_t fGLDevice; ///<! OpenGL off-screen pixmap identifier; 86 Bool_t fCopyGLDevice; ///<!; 87 Bool_t fEmbeddedGL; ///<!; 88 Int_t fNumber; ///< pad number identifier; 89 Int_t fTickx; ///< Set to 1 if tick marks along X; 90 Int_t fTicky; ///< Set to 1 if tick marks along Y; 91 Int_t fLogx; ///< (=0 if X linear scale, =1 if log scale); 92 Int_t fLogy; ///< (=0 if Y linear scale, =1 if log scale); 93 Int_t fLogz; ///< (=0 if Z linear scale, =1 if log scale); 94 Int_t fPadPaint; ///< Set to 1 while painting the pad; 95 Int_t fCrosshair; ///< Crosshair type (0 if no crosshair requested); 96 Int_t fCrosshairPos; ///< Position of crosshair; 97 Short_t fBorderSize; ///< pad bordersize in pixels; 98 Short_t fBorderMode; ///< Bordermode (-1=down, 0 = no border, 1=up); 99 Bool_t fModified; ///< Set to true when pad is modified; 100 Bool_t fGridx; ///< Set to true if grid along X; 101 Bool_t fGridy; ///< Set to true if grid along Y; 102 Bool_t fAbsCoord; ///< Use absolute coordinates; 103 Bool_t fEditable; ///< True if canvas is editable; 104 Bool_t fFixedAspectRatio; ///< True if fixed aspect ratio; 105 TPad *fMother{nullptr}; ///<! pointer to mother of the list; 106 TCanvas *fCanvas{nullptr}; ///<! Pointer to mother canvas; 107 TList *fPrimitives{nullptr};///<->List of primitives (subpads); 108 TList *fExecs{nullptr}; ///< List of commands to be executed when a pad event occurs; 109 TString fName; ///< Pad name; 110 TString fTitle; ///< Pad title; 111 TFrame *fFrame{nullptr}; ///<! Pointer to 2-D frame (if one exists); 112 TView *fView{nullptr}; ///<! Pointer to 3-D view (if one exists); 113 TObject *fPadPointer{nullptr};///<! free pointer; 114 TObject *fPadView3D{nullptr};///<! 3D View of this TPad; 115 static Int_t fgMaxPi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TPad_8h_source.html:4513,down,down,4513,doc/master/TPad_8h_source.html,https://root.cern,https://root.cern/doc/master/TPad_8h_source.html,1,['down'],['down']
Availability," Double_t labAngle, Double_t labSize,; 1010 Int_t labAlign, Int_t labColor, Int_t labFont,; 1011 const TString &labText); 1012{; 1013 if (!fModLabs) fModLabs = new TList();; 1014 ; 1015 TAxisModLab *ml = FindModLab(0, labValue, 0.);; 1016 if (!ml) {; 1017 ml = new TAxisModLab();; 1018 ml->SetLabValue(labValue);; 1019 fModLabs->Add(ml);; 1020 }; 1021 ; 1022 ml->SetAngle(labAngle);; 1023 ml->SetSize(labSize);; 1024 ml->SetAlign(labAlign);; 1025 ml->SetColor(labColor);; 1026 ml->SetFont(labFont);; 1027 ml->SetText(labText);; 1028}; 1029 ; 1030 ; 1031////////////////////////////////////////////////////////////////////////////////; 1032/// Set the viewing range for the axis using bin numbers.; 1033///; 1034/// \param first First bin of the range.; 1035/// \param last Last bin of the range.; 1036/// To set a range using the axis coordinates, use TAxis::SetRangeUser.; 1037///; 1038/// If `first == last == 0` or if `first > last` or if the range specified does; 1039/// not intersect at all with the maximum available range `[0, fNbins + 1]`,; 1040/// then the viewing range is reset by removing the bit TAxis::kAxisRange. In this; 1041/// case, the functions TAxis::GetFirst() and TAxis::GetLast() will return 1; 1042/// and fNbins.; 1043///; 1044/// If the range specified partially intersects with `[0, fNbins + 1]`, then the; 1045/// intersection range is accepted. For instance, if `first == -2` and `last == fNbins`,; 1046/// the accepted range will be `[0, fNbins]` (`fFirst = 0` and `fLast = fNbins`).; 1047///; 1048/// \note For historical reasons, SetRange(0,0) resets the range even though bin 0 is; 1049/// technically reserved for the underflow; in order to set the range of the axis; 1050/// so that it only includes the underflow, use `SetRange(-1,0)`.; 1051 ; 1052void TAxis::SetRange(Int_t first, Int_t last); 1053{; 1054 ; 1055 Int_t nCells = fNbins + 1; // bins + overflow; 1056 ; 1057 // special reset range cases; 1058 if (last < first || (first < 0 && last < 0) ||; 1059 (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TAxis_8cxx_source.html:34859,avail,available,34859,doc/master/TAxis_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TAxis_8cxx_source.html,1,['avail'],['available']
Availability," Double_t parmin, parmax;; 3325 for (i = 0; i < GetNpar(); i++) {; 3326 out << "" "" << f1Name.Data() << ""->SetParameter("" << i << "","" << GetParameter(i) << "");"" << std::endl;; 3327 out << "" "" << f1Name.Data() << ""->SetParError("" << i << "","" << GetParError(i) << "");"" << std::endl;; 3328 GetParLimits(i, parmin, parmax);; 3329 out << "" "" << f1Name.Data() << ""->SetParLimits("" << i << "","" << parmin << "","" << parmax << "");"" << std::endl;; 3330 }; 3331 if (!strstr(option, ""nodraw"")) {; 3332 out << "" "" << f1Name.Data() << ""->Draw(""; 3333 << quote << option << quote << "");"" << std::endl;; 3334 }; 3335}; 3336 ; 3337 ; 3338////////////////////////////////////////////////////////////////////////////////; 3339/// Static function setting the current function.; 3340/// the current function may be accessed in static C-like functions; 3341/// when fitting or painting a function.; 3342 ; 3343void TF1::SetCurrent(TF1 *f1); 3344{; 3345 fgCurrent = f1;; 3346}; 3347 ; 3348////////////////////////////////////////////////////////////////////////////////; 3349/// Set the result from the fit; 3350/// parameter values, errors, chi2, etc...; 3351/// Optionally a pointer to a vector (with size fNpar) of the parameter indices in the FitResult can be passed; 3352/// This is useful in the case of a combined fit with different functions, and the FitResult contains the global result; 3353/// By default it is assume that indpar = {0,1,2,....,fNpar-1}.; 3354 ; 3355void TF1::SetFitResult(const ROOT::Fit::FitResult &result, const Int_t *indpar); 3356{; 3357 Int_t npar = GetNpar();; 3358 if (result.IsEmpty()) {; 3359 Warning(""SetFitResult"", ""Empty Fit result - nothing is set in TF1"");; 3360 return;; 3361 }; 3362 if (indpar == nullptr && npar != (int) result.NPar()) {; 3363 Error(""SetFitResult"", ""Invalid Fit result passed - number of parameter is %d , different than TF1::GetNpar() = %d"", npar, result.NPar());; 3364 return;; 3365 }; 3366 if (result.Chi2() > 0); 3367 SetChisquare(result.Chi2());; 3368 else; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TF1_8cxx_source.html:127849,error,errors,127849,doc/master/TF1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TF1_8cxx_source.html,1,['error'],['errors']
Availability," Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2, Double_t lx, Double_t ly, Double_t lz, Double_t tx, Double_t ty, Double_t tz); virtual voidSetDimensions(Double_t* param); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); voidTGeoShape::SetId(Int_t id); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidSetPoints(Double_t* points) const; virtual voidSetPoints(Float_t* points) const; voidTGeoShape::SetRuntime(Bool_t flag = kTRUE); virtual voidTGeoTubeSeg::SetSegsAndPols(TBuffer3D& buff) const; voidTGeoShape::SetShapeBit(UInt_t f); voidTGeoShape::SetShapeBit(UInt_t f, Bool_t set); virtual voidTNamed::SetTitle(const char* title = """")MENU ; static voidTGeoShape::SetTransform(TGeoMatrix* matrix); voidTGeoTube::SetTubeDimensions(Double_t rmin, Double_t rmax, Double_t dz); voidTGeoTubeSeg::SetTubsDimensions(Double_t rmin, Double_t rmax, Double_t dz, Double_t phi1, Double_t phi2); virtual voidTObject::SetUniqueID(UInt_t uid); Int_tTGeoShape::ShapeDistancetoPrimitive(Int_t numpoints, Int_t px, Int_t py) const; virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; virtual voidTGeoTubeSeg::Sizeof3D() const; virtual voidStreamer(TBuffer& b); voidStreamerNVirtual(TBuffer& b); virtual voidTObject::SysError(const char* method, const char* msgfmt) const; Bool_tTObject::TestBit(UInt_t f) const; Int_tTObject::TestBits(UInt_t f) const; Bool_tTGeoShape::TestShapeBit(UInt_t f) const; Int_tTGeoShape::TestShapeBits(UInt_t f) const; static Double_tTGeoShape::Tolerance(); virtual voidTObject::UseCurrentStyle(); virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoCtub.html:11750,Toler,Tolerance,11750,root/html532/TGeoCtub.html,https://root.cern,https://root.cern/root/html532/TGeoCtub.html,1,['Toler'],['Tolerance']
Availability," Double_t vx, Double_t vy, Double_t vz, Double_t time, Double_t timend, const char* type = """"); virtual~TPrimary(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Int_tGetFirstMother() const; virtual Int_tGetGeneration() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOptio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TPrimary.html:1629,Error,Error,1629,root/html532/TPrimary.html,https://root.cern,https://root.cern/root/html532/TPrimary.html,2,['Error'],['Error']
Availability," Double_t vz, Double_t time); virtual~TParticle(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Int_tBeauty() const; virtual voidTObject::Browse(TBrowser* b); Int_tCharm() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; Double_tEnergy() const; virtual voidTObject::Error(const char* method, const char* msgfmt) const; Double_tEta() const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetCalcMass() const; Int_tGetDaughter(Int_t i) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tGetFirstDaughter() const; Int_tGetFirstMother() const; virtual const char*TObject::GetIconName() const; Int_tGetLastDaughter() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; Double_tGetMass() const; Int_tGetMother(Int_t i) const; virtual const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TParticle.html:2687,Error,Error,2687,root/html532/TParticle.html,https://root.cern,https://root.cern/root/html532/TParticle.html,2,['Error'],['Error']
Availability," Double_t x[n] = {-0.22, 0.05, 0.25, 0.35, 0.5, 0.61,0.7,0.85,0.89,0.95};; Double_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};; Double_t exl[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Double_t eyl[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};; Double_t exh[n] = {.02,.08,.05,.05,.03,.03,.04,.05,.06,.03};; Double_t eyh[n] = {.6,.5,.4,.3,.2,.2,.3,.4,.5,.6};; Double_t exld[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyld[n] = {.0,.0,.05,.0,.0,.0,.0,.0,.0,.0};; Double_t exhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.0,.0};; Double_t eyhd[n] = {.0,.0,.0,.0,.0,.0,.0,.0,.05,.0};; TGraphBentErrors *gr = new TGraphBentErrors(n,x,y,exl,exh,eyl,eyh,exld,exhd,eyld,eyhd);; gr->SetTitle(""TGraphBentErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; return c45;; }; TGraphPolar options; The drawing options for the polar graphs are the following values:. ""O""; Polar labels are paint orthogonally to the polargram radius. ""P""; Polymarker are paint at each point position. ""E""; Paint error bars. ""F""; Paint fill area (closed polygon). ""A""; Force axis redrawing even if a polargram already exists. ""N""; Disable the display of the polar labels. Picture; Source. {; TCanvas *c46 = new TCanvas(""c46"",""c46"",500,500);; TGraphPolar * grP1 = new TGraphPolar();; grP1->SetTitle(""TGraphPolar example"");. grP1->SetPoint(0, (1*TMath::Pi())/4., 0.05);; grP1->SetPoint(1, (2*TMath::Pi())/4., 0.10);; grP1->SetPoint(2, (3*TMath::Pi())/4., 0.15);; grP1->SetPoint(3, (4*TMath::Pi())/4., 0.20);; grP1->SetPoint(4, (5*TMath::Pi())/4., 0.25);; grP1->SetPoint(5, (6*TMath::Pi())/4., 0.30);; grP1->SetPoint(6, (7*TMath::Pi())/4., 0.35);; grP1->SetPoint(7, (8*TMath::Pi())/4., 0.40);. grP1->SetMarkerStyle(20);; grP1->SetMarkerSize(1.);; grP1->SetMarkerColor(4);; grP1->SetLineColor(4);; grP1->Draw(""ALP"");. // Update, otherwise GetPolargram returns 0; c46->Update();; grP1->GetPolargram()->SetToRadian();. return c46;; }; . Function Members (Methods); public:. TGraphPainter(); TGraphPainter(const TGraphPa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGraphPainter.html:11581,error,error,11581,root/html530/TGraphPainter.html,https://root.cern,https://root.cern/root/html530/TGraphPainter.html,1,['error'],['error']
Availability," Double_t& xs, Double_t& ys, Int_t nleft, Int_t nright, Double_t* w, Bool_t userw, Double_t* rw, Bool_t& ok); virtual voidTNamed::ls(Option_t* option = """") const; voidTObject::MayNotUse(const char* method) const; virtual Bool_tTObject::Notify(); voidTObject::Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; static voidTObject::operator delete(void* ptr); static voidTObject::operator delete(void* ptr, void* vp); static voidTObject::operator delete[](void* ptr); static voidTObject::operator delete[](void* ptr, void* vp); void*TObject::operator new(size_t sz); void*TObject::operator new(size_t sz, void* vp); void*TObject::operator new[](size_t sz); void*TObject::operator new[](size_t sz, void* vp); virtual voidTObject::Paint(Option_t* option = """"); virtual voidTObject::Pop(); virtual voidTNamed::Print(Option_t* option = """") const; static voidPsort(Double_t* x, Int_t n, Int_t k); static voidRank(Int_t n, Double_t* a, Int_t* index, Int_t* rank, Bool_t down = kTRUE); static Int_tRcmp(Double_t x, Double_t y); virtual Int_tTObject::Read(const char* name); virtual voidTObject::RecursiveRemove(TObject* obj); voidTObject::ResetBit(UInt_t f); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); virtual voidTNamed::SetName(const char* name)MENU ; virtual voidTNamed::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTNamed::SetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp); virtual Int_tTNamed::Sizeof() const; voidSmoothin(TGraph* grin); TGraph*SmoothKern(TGraph* grin, Option_t* option = ""normal"", Double_t bandwidth ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGraphSmooth.html:4842,down,down,4842,root/html530/TGraphSmooth.html,https://root.cern,https://root.cern/root/html530/TGraphSmooth.html,3,['down'],['down']
Availability," Double_t&, Double_t&). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. Double_t*fAlpha[fDim] Internal parameters of the hyperrectangle; TMVA::PDEFoamCell**fCells[fNCells] Array of ALL cells; TMVA::EDTSeparationfDTSeparationBACKWARDS COMPATIBILITY: split cells according to decision tree logic; Int_tfDimDimension of the integration/simulation space; TMVA::PDEFoamDensityBase*fDistr! distribution of training events; Int_tfEvPerBinMaximum number of effective (wt=1) events per bin; Bool_tfFillFoamWithOrigWeightsBACKWARDS COMPATIBILITY: fill the foam with boost or orig. weights; TMVA::EFoamTypefFoamTypeBACKWARDS COMPATIBILITY: type of foam; TObjArray*fHistEdgHistograms of wt, one for each cell edge; Int_t*fInhiDiv! [fDim] Flags for inhibiting cell division; Int_tfLastCeIndex of the last cell; TMVA::MsgLogger*fLogger! message logger; Int_t*fMaskDiv! [fDim] Dynamic Mask for cell division; UInt_tfMaxDepthmaximum depth of cell tree; Int_tfNBinNo. of bins in the edge histogram for cell MC exploration; Int_tfNCellsMaximum number of cells; UInt_tfNElementsBACKWARDS COMPATIBILITY: number of variables in every cell; Int_tfNSamplNo. of MC events, when dividing (exploring) cell; TStringfNameName of a given instance of the FOAM class; UInt_tfNminminimal number of events in cell to split cell; Int_tfNoActNumber of active cells; Bool_tfPeekMaxBACKWARDS COMPATIBILITY: peek up cell with max. driver integral for split; TRandom3*fPseRanPointer to user-defined generator of pseudorandom numbers; Double_t*fRvec[fDim] random number vector from r.n. generator fDim+1 maximum elements; TMVA::Timer*fTimer! timer for graphical output; TObjArray*fVariableNamescollection of all variable names; Float_tfVolFracBACKWARDS COMPATIBILITY: volume fraction (with respect to",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMVA__PDEFoam.html:10103,Mask,Mask,10103,root/html532/TMVA__PDEFoam.html,https://root.cern,https://root.cern/root/html532/TMVA__PDEFoam.html,2,['Mask'],['Mask']
Availability," Double_t* TSpectrumFit::fAmpCalc. protected . [fNPeaks] array of calculated values of fitted amplitudes, output parameters ; Definition at line 34 of file TSpectrumFit.h. ◆ fAmpErr. Double_t* TSpectrumFit::fAmpErr. protected . [fNPeaks] array of amplitude errors ; Definition at line 35 of file TSpectrumFit.h. ◆ fAmpInit. Double_t* TSpectrumFit::fAmpInit. protected . [fNPeaks] array of initial values of peaks amplitudes, input parameters ; Definition at line 33 of file TSpectrumFit.h. ◆ fArea. Double_t* TSpectrumFit::fArea. protected . [fNPeaks] array of calculated areas of peaks ; Definition at line 36 of file TSpectrumFit.h. ◆ fAreaErr. Double_t* TSpectrumFit::fAreaErr. protected . [fNPeaks] array of errors of peak areas ; Definition at line 37 of file TSpectrumFit.h. ◆ fBCalc. Double_t TSpectrumFit::fBCalc. protected . calculated value of b parameter ; Definition at line 45 of file TSpectrumFit.h. ◆ fBErr. Double_t TSpectrumFit::fBErr. protected . error value of b parameter ; Definition at line 46 of file TSpectrumFit.h. ◆ fBInit. Double_t TSpectrumFit::fBInit. protected . initial value of b parameter (slope), for details see html manual and references ; Definition at line 44 of file TSpectrumFit.h. ◆ fChi. Double_t TSpectrumFit::fChi. protected . here the fitting functions return resulting chi square ; Definition at line 29 of file TSpectrumFit.h. ◆ fFitTaylor. Int_t TSpectrumFit::fFitTaylor. protected . order of Taylor expansion, possible values kFitTaylorOrderFirst, kFitTaylorOrderSecond. It applies only for Awmi fitting function. ; Definition at line 27 of file TSpectrumFit.h. ◆ fFixA0. Bool_t TSpectrumFit::fFixA0. protected . logical value of a0 parameter, which allows to fix the parameter (not to fit). ; Definition at line 65 of file TSpectrumFit.h. ◆ fFixA1. Bool_t TSpectrumFit::fFixA1. protected . logical value of a1 parameter, which allows to fix the parameter (not to fit). ; Definition at line 66 of file TSpectrumFit.h. ◆ fFixA2. Bool_t TSpectrumFit::fFi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpectrumFit.html:52288,error,error,52288,doc/master/classTSpectrumFit.html,https://root.cern,https://root.cern/doc/master/classTSpectrumFit.html,1,['error'],['error']
Availability," Double_t* point, const Double_t* dir, Int_t iact = 1, Double_t step = TGeoShape::Big(), Double_t* safe = 0) const; static Double_tDistFromOutside(const Double_t* point, const Double_t* dir, Double_t dx, Double_t dy, Double_t dz, const Double_t* origin, Double_t stepmax = TGeoShape::Big()); virtual voidDistFromOutside_v(const Double_t* points, const Double_t* dirs, Double_t* dists, Int_t vecsize, Double_t* step) const; static Double_tTGeoShape::DistToPhiMin(const Double_t* point, const Double_t* dir, Double_t s1, Double_t c1, Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in = kTRUE); virtual TGeoVolume*Divide(TGeoVolume* voldiv, const char* divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step); virtual voidTGeoShape::Draw(Option_t* option = """")MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; static Double_tTGeoShape::EpsMch(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTGeoShape::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const char*GetAxisName(Int_t iaxis) const; virtual Double_tGetAxisRange(Int_t iaxis, Double_t& xlo, Double_t& xhi) const; virtual voidGetBoundingCylinder(Double_t* param) const; virtual const TBuffer3D&GetBuffer3D(Int_t reqSections, Bool_t localFrame) const; virtual Int_tGetByteCount() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tGetDX() const; virtual Double_tGetDY() const; virtual Doubl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoBBox.html:5319,Error,Error,5319,root/html534/TGeoBBox.html,https://root.cern,https://root.cern/root/html534/TGeoBBox.html,3,['Error'],['Error']
Availability," Double_t* x, Double_t D, Double_t E = 0); Add a row consisting of fNVariables independent variables, the; known, dependent quantity, and optionally, the square error in; the dependent quantity, to the training sample to be used for the; parameterization.; The mean of the variables and quantity is calculated on the fly,; as outlined in TPrincipal::AddRow.; This sample should be representive of the problem at hand.; Please note, that if no error is given Poisson statistics is; assumed and the square error is set to the value of dependent; quantity. See also the; class description. void AddTestRow(const Double_t* x, Double_t D, Double_t E = 0); Add a row consisting of fNVariables independent variables, the; known, dependent quantity, and optionally, the square error in; the dependent quantity, to the test sample to be used for the; test of the parameterization.; This sample needn't be representive of the problem at hand.; Please note, that if no error is given Poisson statistics is; assumed and the square error is set to the value of dependent; quantity. See also the; class description. void Browse(TBrowser* b); Browse the TMultiDimFit object in the TBrowser. void Clear(Option_t* option = """"); Clear internal structures and variables. Double_t Eval(const Double_t* x, const Double_t* coeff = 0) const; Evaluate parameterization at point x. Optional argument coeff is; a vector of coefficients for the parameterisation, fNCoefficients; elements long. Double_t EvalError(const Double_t* x, const Double_t* coeff = 0) const; Evaluate parameterization error at point x. Optional argument coeff is; a vector of coefficients for the parameterisation, fNCoefficients; elements long. Double_t EvalControl(const Int_t* powers) const; PRIVATE METHOD:; Calculate the control parameter from the passed powers. Double_t EvalFactor(Int_t p, Double_t x) const; PRIVATE METHOD:; Evaluate function with power p at variable value x. void FindParameterization(Option_t* option = """"); Find the parameter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiDimFit.html:26351,error,error,26351,root/html528/TMultiDimFit.html,https://root.cern,https://root.cern/root/html528/TMultiDimFit.html,20,['error'],['error']
Availability," Double_tSinH(Double_t); Double_tSq(Double_t x); Double_tSqrt(Double_t x); Double_tSqrt2(); Double_tStruveH0(Double_t x); Double_tStruveH1(Double_t x); Double_tStruveL0(Double_t x); Double_tStruveL1(Double_t x); Double_tStudent(Double_t T, Double_t ndf); Double_tStudentI(Double_t T, Double_t ndf); Double_tStudentQuantile(Double_t p, Double_t ndf, Bool_t lower_tail = kTRUE); Double_tTan(Double_t); Double_tTanH(Double_t); Double_tTwoPi(); Double_tVavilov(Double_t x, Double_t kappa, Double_t beta2); Double_tVavilovI(Double_t x, Double_t kappa, Double_t beta2); Double_tVoigt(Double_t x, Double_t sigma, Double_t lg, Int_t r = 4). Class Charts; Function documentation; Long_t Hypot(Long_t x, Long_t y). Double_t Hypot(Double_t x, Double_t y). Double_t ASinH(Double_t ). Double_t ACosH(Double_t ). Double_t ATanH(Double_t ). Double_t Log2(Double_t x). Double_t DiLog(Double_t x); The DiLogarithm function; Code translated by R.Brun from CERNLIB DILOG function C332. Double_t Erf(Double_t x); Computation of the error function erf(x).; Erf(x) = (2/sqrt(pi)) Integral(exp(-t^2))dt between 0 and x. Double_t Erfc(Double_t x); Compute the complementary error function erfc(x).; Erfc(x) = (2/sqrt(pi)) Integral(exp(-t^2))dt between x and infinity. Double_t ErfInverse(Double_t x); returns the inverse error function; x must be <-1<x<1. Double_t ErfcInverse(Double_t x); returns the inverse of the complementary error function; x must be 0<x<2; implement using the quantile of the normal distribution; instead of ErfInverse for better numerical precision for large x. Double_t Factorial(Int_t i); Compute factorial(n). Double_t Freq(Double_t x); Computation of the normal frequency function freq(x).; Freq(x) = (1/sqrt(2pi)) Integral(exp(-t^2/2))dt between -infinity and x. Translated from CERNLIB C300 by Rene Brun. Double_t Gamma(Double_t z); Computation of gamma(z) for all z. C.Lanczos, SIAM Journal of Numerical Analysis B1 (1964), 86. Double_t Gamma(Double_t a, Double_t x); Computation of the norma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TMath.html:7153,error,error,7153,root/html604/TMath.html,https://root.cern,https://root.cern/root/html604/TMath.html,2,['error'],['error']
Availability," Double_t_imMaxHigh edge of imaginary dimension of CERF-LUT; static Double_t_imMinLow edge of imaginary dimension of CERF-LUT; static Double_t_imRangeRange in imaginary dimension of CERF-LUT; static Double_t_imStepGrid spacing in imaginary dimension of CERF-LUT; static Int_t_reBinsNumber of grid points in real dimension of CERF-LUT; static double**_reCerfArrayLookup table for Re part of complex error function; static Double_t_reMaxHigh edge of real dimension of CERF-LUT; static Double_t_reMinLow edge of real dimension of CERF-LUT; static Double_t_reRangeRange in real dimension of CERF-LUT; static Double_t_reStepGrid spacing in real dimension of CERF-LUT. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; RooComplex FastComplexErrFunc(const RooComplex& z). Double_t FastComplexErrFuncRe(const RooComplex& z). Double_t FastComplexErrFuncIm(const RooComplex& z). void cacheCERF(Bool_t flag = kTRUE). RooComplex ComplexErrFunc(Double_t re, Double_t im = 0); Return CERNlib complex error function for Z(re,im). RooComplex ComplexErrFunc(const RooComplex& z); Return CERNlib complex error function. This code is translated from the fortran version in the CERN mathlib.; (see ftp://asisftp.cern.ch/cernlib/share/pro/src/mathlib/gen/c/cwerf64.F). void initFastCERF(Int_t reBins = 800, Double_t reMin = -4.0, Double_t reMax = 4.0, Int_t imBins = 1000, Double_t imMin = -4.0, Double_t imMax = 6.0); Allocate and initialize lookup table for interpolated complex error function; for given grid parameters. void cleanup(). RooComplex ITPComplexErrFunc(const RooComplex& z, Int_t nOrder); Return complex error function interpolated from lookup tabel created; by initFastCERF(). Interpolation is performed in Im and Re plane; to specified order. Double_t ITPComplexErrFuncRe(const RooComplex& z, Int_t nOrder); Return real component of complex error function interpolated from; lookup table created by initFastCERF(). Interpolation is performed in; Im and Re plane t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMath.html:2904,error,error,2904,root/html526/RooMath.html,https://root.cern,https://root.cern/root/html526/RooMath.html,5,['error'],['error']
Availability," Double_tbinWidth(Int_t bin) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual RooAbsBinning*clone(const char* name = 0) const; virtual TObject*RooAbsBinning::Clone(const char* newname = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooLinTransBinning.html:2157,Error,Error,2157,root/html532/RooLinTransBinning.html,https://root.cern,https://root.cern/root/html532/RooLinTransBinning.html,15,['Error'],['Error']
Availability," Draw a lego plot with hidden surface removal, like LEGO1 but without the shadow effect on each lego-bar. . ""TEXT"" Draw bin contents as text (format set via gStyle->SetPaintTextFormat). . ""TEXTnn"" Draw bin contents as text at angle nn (0 < nn <= 90). . ""X+"" The X-axis is drawn on the top side of the plot. . ""Y+"" The Y-axis is drawn on the right side of the plot. . ""MIN0"" Set minimum value for the Y axis to 0, equivalent to gStyle->SetHistMinimumZero(). . Options supported for 1D histograms. Option Description . "" "" Default. . ""AH"" Draw histogram without axis. ""A"" can be combined with any drawing option. For instance, ""AC"" draws the histogram as a smooth Curve without axis. . ""]["" When this option is selected the first and last vertical lines of the histogram are not drawn. . ""B"" Bar chart option. . ""BAR"" Like option ""B"", but bars can be drawn with a 3D effect. . ""HBAR"" Like option ""BAR"", but bars are drawn horizontally. . ""C"" Draw a smooth Curve through the histogram bins. . ""E0"" Draw error bars. Markers are drawn for bins with 0 contents. Combined with E1 or E2 it avoids error bars clipping . ""E1"" Draw error bars with perpendicular lines at the edges. . ""E2"" Draw error bars with rectangles. . ""E3"" Draw a fill area through the end points of the vertical error bars. . ""E4"" Draw a smoothed filled area through the end points of the error bars. . ""E5"" Like E3 but ignore the bins with 0 contents. . ""E6"" Like E4 but ignore the bins with 0 contents. . ""X0"" When used with one of the ""E"" option, it suppress the error bar along X as gStyle->SetErrorX(0) would do. . ""L"" Draw a line through the bin contents. . ""P"" Draw current marker at each bin except empty bins. . ""P*"" Draw a star marker at each bin except empty bins. . ""P0"" Draw current marker at each bin including empty bins. . ""PIE"" Draw histogram as a Pie Chart. . ""*H"" Draw histogram with a * at each bin. . ""LF2"" Draw histogram like with option ""L"" but with a fill area. Note that ""L"" draws also a fill area if the hist fil",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTHistPainter.html:7412,error,error,7412,doc/master/classTHistPainter.html,https://root.cern,https://root.cern/doc/master/classTHistPainter.html,1,['error'],['error']
Availability," DropBaskets being called on the sub-branches. ; Definition at line 757 of file TBranch.cxx. ◆ ExpandBasketArrays(). void TBranch::ExpandBasketArrays ; (; ). Increase BasketEntry buffer of a minimum of 10 locations and a maximum of 50 per cent of current size. ; Definition at line 825 of file TBranch.cxx. ◆ Fill(). Int_t TBranch::Fill ; (; ). inline . Definition at line 205 of file TBranch.h. ◆ FillEntryBuffer(). Int_t TBranch::FillEntryBuffer ; (; TBasket * ; basket, . TBuffer * ; buf, . Int_t & ; lnew . ). private . Copy the data from fEntryBuffer into the current basket. ; Definition at line 935 of file TBranch.cxx. ◆ FillImpl(). Int_t TBranch::FillImpl ; (; ROOT::Internal::TBranchIMTHelper * ; imtHelper). virtual . Loop on all leaves of this branch to fill Basket buffer. ; If TBranchIMTHelper is non-null and it is time to WriteBasket, then we will use TBB to compress in parallel.; The function returns the number of bytes committed to the memory basket. If a write error occurs, the number of bytes returned is -1. If no data are written, because e.g. the branch is disabled, the number of bytes returned is 0. ; Reimplemented in TBranchClones, TBranchElement, TBranchObject, TBranchRef, and TBranchSTL.; Definition at line 856 of file TBranch.cxx. ◆ FillLeavesImpl(). void TBranch::FillLeavesImpl ; (; TBuffer & ; b). protected . Loop on all leaves of this branch to fill Basket buffer. ; Definition at line 2496 of file TBranch.cxx. ◆ FindBranch(). TBranch * TBranch::FindBranch ; (; const char * ; name). virtual . Find the immediate sub-branch with passed name. ; Reimplemented in TBranchElement.; Definition at line 1035 of file TBranch.cxx. ◆ FindLeaf(). TLeaf * TBranch::FindLeaf ; (; const char * ; name). virtual . Find the leaf corresponding to the name 'searchname'. ; Reimplemented in TBranchElement.; Definition at line 1081 of file TBranch.cxx. ◆ FlushBaskets(). Int_t TBranch::FlushBaskets ; (; ). Flush to disk all the baskets of this branch and any of subbranches. ; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranch.html:38834,error,error,38834,doc/master/classTBranch.html,https://root.cern,https://root.cern/doc/master/classTBranch.html,1,['error'],['error']
Availability," EMessageTypes& kind) const; Return status from rootd server and message kind. Returns -1 in; case of error otherwise 8 (sizeof 2 words, status and kind). void SetBlockSize(Int_t blockSize); Make sure the block size is a power of two, with a minimum of 32768. Long64_t PutFile(const char* file, const char* remoteName = 0); Transfer file to remote host. Returns number of bytes; sent or < 0 in case of error. Error -1 connection is still; open, error -2 connection has been closed. In case of failure; fRestartAt is set to the number of bytes correclty transfered.; Calling PutFile() immediately afterwards will restart at fRestartAt.; If this is not desired call SetRestartAt(0) before calling PutFile().; If rootd reports that the file is locked, and you are sure this is not; the case (e.g. due to a crash), you can force unlock it by prepending; the remoteName with a '-'. Long64_t GetFile(const char* file, const char* localName = 0); Transfer file from remote host. Returns number of bytes; received or < 0 in case of error. Error -1 connection is still; open, error -2 connection has been closed. In case of failure; fRestartAt is set to the number of bytes correclty transfered.; Calling GetFile() immediately afterwards will restart at fRestartAt.; If this is not desired call SetRestartAt(0) before calling GetFile().; If rootd reports that the file is locked, and you are sure this is not; the case (e.g. due to a crash), you can force unlock it by prepending; the file name with a '-'. Int_t ChangeDirectory(const char* dir) const; Change the remote directory. If the remote directory contains a .message; file and it is < 1024 characters then the contents is echoed back.; Returns 0 in case of success and -1 in case of failure. Int_t MakeDirectory(const char* dir, Bool_t print = kFALSE) const; Make a remote directory. Anonymous users may not create directories.; Returns 0 in case of success and -1 in case of failure. Int_t DeleteDirectory(const char* dir) const; Delete a remote dire",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFTP.html:9659,error,error,9659,root/html528/TFTP.html,https://root.cern,https://root.cern/root/html528/TFTP.html,10,['error'],['error']
Availability," Endl;; 1275 ; 1276 // test if enough events are available; 1277 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""availableundefined : "" << availableUndefined << Endl;; 1278 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""useForTraining : "" << useForTraining << Endl;; 1279 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""useForTesting : "" << useForTesting << Endl;; 1280 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""availableTraining : "" << availableTraining << Endl;; 1281 Log() << kDEBUG << Form(""Dataset[%s] : "",dsi.GetName())<< ""availableTesting : "" << availableTesting << Endl;; 1282 ; 1283 if( availableUndefined<(useForTraining-availableTraining) ||; 1284 availableUndefined<(useForTesting -availableTesting ) ||; 1285 availableUndefined<(useForTraining+useForTesting-availableTraining-availableTesting ) ){; 1286 Log() << kFATAL << Form(""Dataset[%s] : "",dsi.GetName())<< ""More events requested than available!"" << Endl;; 1287 }; 1288 ; 1289 // select the events; 1290 if (useForTraining>availableTraining){; 1291 eventVectorTraining.insert( eventVectorTraining.end() , eventVectorUndefined.begin(), eventVectorUndefined.begin()+ useForTraining- availableTraining );; 1292 eventVectorUndefined.erase( eventVectorUndefined.begin(), eventVectorUndefined.begin() + useForTraining- availableTraining);; 1293 }; 1294 if (useForTesting>availableTesting){; 1295 eventVectorTesting.insert( eventVectorTesting.end() , eventVectorUndefined.begin(), eventVectorUndefined.begin()+ useForTesting- availableTesting );; 1296 }; 1297 }; 1298 eventVectorUndefined.clear();; 1299 ; 1300 // finally shorten the event vectors to the requested size by removing random events; 1301 if (splitMode.Contains( ""RANDOM"" )){; 1302 UInt_t sizeTraining = eventVectorTraining.size();; 1303 if( sizeTraining > UInt_t(requestedTraining) ){; 1304 std::vector<UInt_t> indicesTraining( sizeTraining );; 1305 // make indices; 1306 std::generate( indicesTraining.begin(), indicesTraini",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/DataSetFactory_8cxx_source.html:56580,avail,available,56580,doc/master/DataSetFactory_8cxx_source.html,https://root.cern,https://root.cern/doc/master/DataSetFactory_8cxx_source.html,2,['avail'],"['available', 'availableTraining']"
Availability," Enter key was pressed and an error message shows up, if the function string is not accepted.; ‘Set Parameters’ button opens a dialog for parameters settings, which will be explained later.; 5.6.2 Fitter Settings; ‘Method’ combo box currently provides only two fit model choices: Chi-square and Binned Likelihood. The default one is Chi-square. The Binned Likelihood is recommended for bins with low statistics.; ‘Linear Fit’ check button sets the use of Linear fitter when is selected. Otherwise the minimization is done by Minuit, i.e. fit option “F” is applied. The Linear fitter can be selected only for functions linear in parameters (for example - polN).; ‘Robust’ number entry sets the robust value when fitting graphs.; ‘No Chi-square’ check button switch On/Off the fit option “C” - do not calculate Chi-square (for Linear fitter).; ‘Integral’ check button switch On/Off the option “I” - use integral of function instead of value in bin center.; ‘Best Errors’ sets On/Off the option “E” - better errors estimation by using Minos technique.; ‘All weights = 1’ sets On/Off the option “W”- all weights set to 1 excluding empty bins; error bars ignored.; ‘Empty bins, weights=1’ sets On/Off the option “WW” - all weights equal to 1 including empty bins; error bars ignored.; ‘Use range’ sets On/Off the option “R” - fit only data within the specified function range. Sliders settings are used if this option is set to On. Users can change the function range values by pressing the left mouse button near to the left/right slider edges. It is possible to change both values simultaneously by pressing the left mouse button near to the slider center and moving it to a new position.; ‘Improve fit results’ sets On/Off the option “M”- after minimum is found, search for a new one.; ‘Add to list’ sets On/Off the option “+”- add function to the list without deleting the previous one. When fitting a histogram, the function is attached to the histogram’s list of functions. By default, the previously",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:184738,error,errors,184738,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,3,"['Error', 'error']","['Errors', 'errors']"
Availability," EnumeratorkFileIsPipe . Definition at line 109 of file TApplicationServer.h. Constructor & Destructor Documentation. ◆ TASLogHandler() [1/2]. TASLogHandler::TASLogHandler ; (; const char * ; cmd, . TSocket * ; s, . const char * ; pfx = """" . ). Execute 'cmd' in a pipe and handle output messages from the related file. ; Definition at line 137 of file TApplicationServer.cxx. ◆ TASLogHandler() [2/2]. TASLogHandler::TASLogHandler ; (; FILE * ; f, . TSocket * ; s, . const char * ; pfx = """" . ). Handle available message from the open file 'f'. ; Definition at line 162 of file TApplicationServer.cxx. ◆ ~TASLogHandler(). TASLogHandler::~TASLogHandler ; (; ). virtual . Handle available message in the open file. ; Definition at line 179 of file TApplicationServer.cxx. Member Function Documentation. ◆ IsValid(). Bool_t TASLogHandler::IsValid ; (; ). inline . Definition at line 114 of file TApplicationServer.h. ◆ Notify(). Bool_t TASLogHandler::Notify ; (; ). overridevirtual . Handle available message in the open file. ; Implements TSysEvtHandler.; Definition at line 190 of file TApplicationServer.cxx. ◆ ReadNotify(). Bool_t TASLogHandler::ReadNotify ; (; ). inlineoverridevirtual . Notify when something can be read from the descriptor associated with this handler. ; Reimplemented from TFileHandler.; Definition at line 117 of file TApplicationServer.h. ◆ SetDefaultPrefix(). void TASLogHandler::SetDefaultPrefix ; (; const char * ; pfx). static . Static method to set the default prefix. ; Definition at line 221 of file TApplicationServer.cxx. Member Data Documentation. ◆ fFile. FILE* TASLogHandler::fFile. private . Definition at line 104 of file TApplicationServer.h. ◆ fgPfx. TString TASLogHandler::fgPfx = """". staticprivate . Definition at line 107 of file TApplicationServer.h. ◆ fPfx. TString TASLogHandler::fPfx. private . Definition at line 105 of file TApplicationServer.h. ◆ fSocket. TSocket* TASLogHandler::fSocket. private . Definition at line 103 of file TApplicationServer.h. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASLogHandler.html:18382,avail,available,18382,doc/master/classTASLogHandler.html,https://root.cern,https://root.cern/doc/master/classTASLogHandler.html,1,['avail'],['available']
Availability, Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.731202 0.712689 0.193045 0.0157486 14439.1 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.701214 0.698536 0.191577 0.0154545 14535.3 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.6901 0.69615 0.192163 0.0158037 14515.8 0; : 4 | 0.683586 0.700826 0.19294 0.0151654 14400.2 1; : 5 | 0.682085 0.701998 0.192893 0.0153949 14422.7 2; : 6 | 0.6867 0.696275 0.191869 0.0152227 14492.2 3; : 7 Minimum Test error found - save the configuration ; : 7 | 0.692231 0.691692 0.197632 0.0164904 14132.6 0; : 8 | 0.683383 0.694963 0.194299 0.0156318 14328.3 1; : 9 Minimum Test error found - save the configuration ; : 9 | 0.682898 0.684979 0.192122 0.0157399 14513.9 0; : 10 | 0.670592 0.688549 0.192796 0.0152906 14422.1 1; : 11 Minimum Test error found - save the configuration ; : 11 | 0.670202 0.684295 0.191832 0.0154715 14515.7 0; : 12 Minimum Test error found - save the configuration ; : 12 | 0.675447 0.682107 0.194058 0.0158608 14366.1 0; : 13 | 0.678105 0.691356 0.193716 0.0152633 14345.5 1; : 14 | 0.684972 0.687408 0.191852 0.0154194 14509.8 2; : 15 | 0.676423 0.689156 0.193176 0.0153404 14395.3 3; : 16 | 0.683185 0.689966 0.191807 0.0149908 14478.3 4; : 17 | 0.672717 0.689982 0.192316 0.0149466 14433.2 5; : 18 | 0.670449 0.68412 0.190877 0.0151753 14570.1 6; : 19 Minimum Test error found - save the configuration ; : 19 | 0.661329 0.670317 0.192098 0.0154074 14488.6 0; : 20 Minimum Test error found - save the configuration ; : 20 | 0.658253 0.661402 0.192014 0.0155677 14508.7 0; : ; : Elapsed time for training with 3200 events: 3.87 sec ; : Evaluate deep neural network on CPU using batches with size = 256; : ; TMVA_DNN : [dataset] : Evaluation of TMVA_DNN on training sample (3200 events); : Elapsed time for evaluation of 3200 ev,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html:19866,error,error,19866,doc/master/TMVA__RNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__RNN__Classification_8C.html,1,['error'],['error']
Availability," Error Bars; A TGraphErrors is a TGraph with error bars. The various draw format options of TGraphErrors::Paint() are derived from TGraph.; void TGraphErrors::Paint(Option_t *option). Graphs with different draw options of error bars. In addition, it can be drawn with the “Z” option to leave off the small lines at the end of the error bars. If option contains “>”, an arrow is drawn at the end of the error bars. If option contains “|>”, a full arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size.; The option “[]” is interesting to superimpose systematic errors on top of the graph with the statistical errors. When it is specified, only the end vertical/horizontal lines of the error bars are drawn.; To control the size of the lines at the end of the error bars (when option 1 is chosen) use SetEndErrorSize(np). By default np=1; np represents the number of pixels.; gStyle->SetEndErrorSize(np);; The four parameters of TGraphErrors are: X, Y (as in TGraph), X-errors, and Y-errors - the size of the errors in the x and y direction. Next example is $ROOTSYS/tutorials/graphs/gerrors.C.; {; c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);; c1->SetGrid();. // create the coordinate arrays; Int_t n = 10;; Float_t x[n] = {-.22,.05,.25,.35,.5,.61,.7,.85,.89,.95};; Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};. // create the error arrays; Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};. // create the TGraphErrors and draw it; gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetTitle(""TGraphErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; c1->Update();; }; 4.4 Graphs with Asymmetric Error Bars. A graph with asymmetric error bars. A TGraphAsymmErrors is a TGraph with asymmetric error bars. It inherits the various draw format options from TGraph. Its method Paint(Option_t *option) paints the TGraphAsymmErrors with the current ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:146877,error,errors,146877,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,6,['error'],['errors']
Availability," Error of the last derivative calculation. . { return fLastError; }. double Derivative1(double x). Returns the first derivative of the function at point x,; computed by Richardson's extrapolation method (use 2 derivative estimates; to compute a third, more accurate estimation); first, derivatives with steps h and h/2 are computed by central difference formulas. the final estimate ; ""Numerical Methods for Scientists and Engineers"", H.M.Antia, 2nd edition"". the argument eps may be specified to control the step size (precision).; the step size is taken as eps*(xmax-xmin).; the default value (0.001) should be good enough for the vast majority; of functions. Give a smaller value if your function has many changes; of the second derivative in the function range. Getting the error via TF1::DerivativeError:; (total error = roundoff error + interpolation error); the estimate of the roundoff error is taken as follows:. where k is the double precision, ai are coefficients used in; central difference formulas; interpolation error is decreased by making the step size h smaller. double operator()(double x); { return Derivative1(x); }. double Derivative1(const ROOT::Math::IGenFunction& f, double x, double h). First Derivative calculation passing function and step-size. double Derivative2(double x). Returns the second derivative of the function at point x,; computed by Richardson's extrapolation method (use 2 derivative estimates; to compute a third, more accurate estimation); first, derivatives with steps h and h/2 are computed by central difference formulas. the final estimate ; ""Numerical Methods for Scientists and Engineers"", H.M.Antia, 2nd edition"". the argument eps may be specified to control the step size (precision).; the step size is taken as eps*(xmax-xmin).; the default value (0.001) should be good enough for the vast majority; of functions. Give a smaller value if your function has many changes; of the second derivative in the function range. Getting the error via TF1::De",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__RichardsonDerivator.html:4447,error,error,4447,root/html526/ROOT__Math__RichardsonDerivator.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__RichardsonDerivator.html,11,['error'],['error']
Availability," EvaluateTestStatistic(RooAbsData& data, RooArgSet& paramsOfInterest); Main interface to evaluate the test statistic on a dataset. TestStatistic* GetTestStatistic() const; Get the TestStatistic. Double_t ConfidenceLevel() const; Get the Confidence level for the test. void Initialize(RooAbsArg& testStatistic, RooArgSet& paramsOfInterest, RooArgSet& nuisanceParameters); Common Initialization. void SetPdf(RooAbsPdf& ); Set the Pdf, add to the the workspace if not already there. void SetPriorNuisance(RooAbsPdf* ); How to randomize the prior. Set to NULL to deactivate randomization. void SetParametersForTestStat(const RooArgSet& ); specify the values of parameters used when evaluating test statistic. void SetNuisanceParameters(const RooArgSet& ); REMOVE THIS; specify the parameters of interest in the interval; virtual void SetParameters(const RooArgSet&) = 0;; specify the nuisance parameters (eg. the rest of the parameters). void SetObservables(const RooArgSet& ); specify the observables in the dataset (needed to evaluate the test statistic). void SetGlobalObservables(const RooArgSet& ); specify the conditional observables. void SetTestSize(Double_t size); set the size of the test (rate of Type I error) ( Eg. 0.05 for a 95% Confidence Interval). void SetConfidenceLevel(Double_t cl); set the confidence level for the interval (eg. 0.95 for a 95% Confidence Interval). void SetTestStatistic(RooStats::TestStatistic* testStatistic); Set the TestStatistic (want the argument to be a function of the data & parameter points. void SetSamplingDistName(const char* name); Set the name of the sampling distribution used for plotting. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-06-30 14:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooStats__TestStatSampler.html:3461,error,error,3461,root/html602/RooStats__TestStatSampler.html,https://root.cern,https://root.cern/root/html602/RooStats__TestStatSampler.html,2,['error'],['error']
Availability," EvaluateTestStatistic(RooAbsData& data, RooArgSet& paramsOfInterest); Main interface to evaluate the test statistic on a dataset. TestStatistic* GetTestStatistic() const; Get the TestStatistic. Double_t ConfidenceLevel() const; Get the Confidence level for the test. void Initialize(RooAbsArg& testStatistic, RooArgSet& paramsOfInterest, RooArgSet& nuisanceParameters); Common Initialization. void SetPdf(RooAbsPdf& ); Set the Pdf, add to the the workspace if not already there. void SetPriorNuisance(RooAbsPdf* ); How to randomize the prior. Set to NULL to deactivate randomization. void SetParametersForTestStat(const RooArgSet& ); specify the values of parameters used when evaluating test statistic. void SetNuisanceParameters(const RooArgSet& ); REMOVE THIS; specify the parameters of interest in the interval; virtual void SetParameters(const RooArgSet&) = 0;; specify the nuisance parameters (eg. the rest of the parameters). void SetObservables(const RooArgSet& ); specify the observables in the dataset (needed to evaluate the test statistic). void SetGlobalObservables(const RooArgSet& ); specify the conditional observables. void SetTestSize(Double_t size); set the size of the test (rate of Type I error) ( Eg. 0.05 for a 95% Confidence Interval). void SetConfidenceLevel(Double_t cl); set the confidence level for the interval (eg. 0.95 for a 95% Confidence Interval). void SetTestStatistic(RooStats::TestStatistic* testStatistic); Set the TestStatistic (want the argument to be a function of the data & parameter points. void SetSamplingDistName(const char* name); Set the name of the sampling distribution used for plotting. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-09-08 17:03; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooStats__TestStatSampler.html:3330,error,error,3330,root/html534/RooStats__TestStatSampler.html,https://root.cern,https://root.cern/root/html534/RooStats__TestStatSampler.html,2,['error'],['error']
Availability," EvaluateTestStatistic(RooAbsData& data, RooArgSet& paramsOfInterest); Main interface to evaluate the test statistic on a dataset. TestStatistic* GetTestStatistic() const; Get the TestStatistic. Double_t ConfidenceLevel() const; Get the Confidence level for the test. void Initialize(RooAbsArg& testStatistic, RooArgSet& paramsOfInterest, RooArgSet& nuisanceParameters); Common Initialization. void SetPdf(RooAbsPdf& ); Set the Pdf, add to the the workspace if not already there. void SetPriorNuisance(RooAbsPdf* ); How to randomize the prior. Set to NULL to deactivate randomization. void SetParametersForTestStat(const RooArgSet& ); specify the values of parameters used when evaluating test statistic. void SetNuisanceParameters(const RooArgSet& ); REMOVE THIS; specify the parameters of interest in the interval; virtual void SetParameters(const RooArgSet&) = 0;; specify the nuisance parameters (eg. the rest of the parameters). void SetObservables(const RooArgSet& ); specify the observables in the dataset (needed to evaluate the test statistic). void SetGlobalObservables(const RooArgSet& ); specify the conditional observables. void SetTestSize(Double_t size); set the size of the test (rate of Type I error) ( Eg. 0.05 for a 95% Confidence Interval). void SetConfidenceLevel(Double_t cl); set the confidence level for the interval (eg. 0.95 for a 95% Confidence Interval). void SetTestStatistic(RooStats::TestStatistic* testStatistic); Set the TestStatistic (want the argument to be a function of the data & parameter points. void SetSamplingDistName(const char* name); Set the name of the sampling distribution used for plotting. » Author: Kyle Cranmer, Lorenzo Moneta, Gregory Schott, Wouter Verkerke » Copyright (C) 1995-2008, Rene Brun and Fons Rademakers. *; » Last changed: root/roostats:$Id$ » Last generated: 2015-09-08 17:42; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooStats__TestStatSampler.html:3461,error,error,3461,root/html604/RooStats__TestStatSampler.html,https://root.cern,https://root.cern/root/html604/RooStats__TestStatSampler.html,2,['error'],['error']
Availability," Example illustrating how to draw the n-sigma contour of a Minuit fit. ;  ;  fitConvolution.C;   Tutorial for convolution of two functions ;  ;  fitConvolution.py;   Tutorial for convolution of two functions ;  ;  fitEllipseTGraphDLSF.cxx;  ;  fitEllipseTGraphRMM.cxx;  ;  fitExclude.C;   Illustrates how to fit excluding points in a given range. ;  ;  fithist.C;   Example of fit where the model is histogram + function ;  ;  FitHistoInFile.C;   ;  ;  fitLinear.C;   Example of fitting with a linear function, using TLinearFitter This example is for a TGraphErrors, but it can also be used when fitting a histogram, a TGraph2D or a TMultiGraph ;  ;  fitLinear2.C;   Fit a 5d hyperplane by n points, using the linear fitter directly ;  ;  fitLinearRobust.C;   This tutorial shows how the least trimmed squares regression, included in the TLinearFitter class, can be used for fitting in cases when the data contains outliers. ;  ;  fitMultiGraph.C;   fitting a parabola to a multigraph of 3 partly overlapping graphs with different errors ;  ;  fitNormSum.C;   Tutorial for normalized sum of two functions Here: a background exponential and a crystalball function Parameters can be set: ;  ;  fitNormSum.py;   Tutorial for normalized sum of two functions Here: a background exponential and a crystalball function Parameters can be set: ;  ;  fitpanel_playback.C;  This file will test all the transient frames (aka Dialog windows) displayed in the fitpanel, as the rest of the functionality is tried automatically with the UnitTest.C unit. ;  ;  fitslicesy.C;   Illustrates how to use the TH1::FitSlicesY function It uses the TH2F histogram generated in macro hsimple.C It invokes FitSlicesY and draw the fitted ""mean"" and ""sigma"" in 2 sepate pads. ;  ;  FittingDemo.C;   Example for fitting signal/background. ;  ;  graph2dfit.C;   Fitting a TGraph2D ;  ;  Ifit.C;   Example of a program to fit non-equidistant data points ;  ;  langaus.C;   Convoluted Landau and Gaussian Fitting Function (using ROOT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/dir_a29432302a7afdbe7cd0744ed0070754.html:2562,error,errors,2562,doc/master/dir_a29432302a7afdbe7cd0744ed0070754.html,https://root.cern,https://root.cern/doc/master/dir_a29432302a7afdbe7cd0744ed0070754.html,1,['error'],['errors']
Availability," Expontial resolution model; RooGamma Gaussian PDF; RooGaussKronrodIntegrator1D 1-dimensional Gauss-Kronrod numerical integration engine; RooGaussModel Gaussian Resolution Model; RooGaussian Gaussian PDF; RooGenCategory Generic category-to-category function based on user supplied mapping function; RooGenContext Universal context for generating toy MC data from any p.d.f; RooGenFitStudy Generate-and-Fit study module; RooGenFunction Export RooAbsReal as functor; RooGenProdProj General form of projected integral of product of PDFs, utility class for RooProdPdf; RooGenericPdf Generic PDF defined by string expression and list of variables; RooGlobalFunc ; RooGrid Utility class for RooMCIntegrator holding a multi-dimensional grid; RooHashTable Hash table; RooHist 1-dimensional histogram with error bars; RooHistConstraint Your description goes here...; RooHistError Utility class for calculating histogram errors; RooHistFunc Histogram based function; RooHistPdf Histogram based PDF; RooImproperIntegrator1D 1-dimensional improper integration engine; RooInt Container class for Int_t; RooIntegralMorph Linear shape interpolation operator p.d.f; RooIntegrator1D 1-dimensional numerical integration engine; RooIntegrator2D 2-dimensional numerical integration engine; RooIntegratorBinding Function binding representing output of numeric integrator; RooInvTransform Function binding returning inverse of other function binding; RooJeffreysPrior Sum of RooAbsReal objects; RooKeysPdf One-dimensional non-parametric kernel estimation p.d.f.; RooLandau Landau Distribution PDF; RooLegendre Legendre polynomial; RooLinTransBinning Linear transformation of binning specification; RooLinearVar Lvalue linear transformation function ; RooLinkedList Doubly linked list for storage of RooAbsArg objects; RooLinkedListElem Element of RooLinkedList container class; RooLinkedListIter Iterator for RooLinkedList container class; RooList TList with extra support for Option_t associations; RooListProxy Proxy clas",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ClassIndex.html:37709,error,errors,37709,root/html534/ClassIndex.html,https://root.cern,https://root.cern/root/html534/ClassIndex.html,2,['error'],['errors']
Availability," FUNCTION CALLS "";; 4935 Printf("" MNLINE DEBUG: steps="");; 4936 for (kk = 1; kk <= fNpar; ++kk) {; 4937 Printf("" %12.4g"",step[kk-1]);; 4938 }; 4939 }; 4940// stop because within tolerance; 4941 if (l70 && ldebug) cmess = "" LINE SEARCH HAS ATTAINED TOLERANCE "";; 4942 if (l80 && ldebug) cmess = "" STEP SIZE AT ARITHMETICALLY ALLOWED MINIMUM"";; 4943 ; 4944 fAmin = fvmin;; 4945 for (i = 1; i <= fNpar; ++i) {; 4946 fDirin[i-1] = step[i-1]*xvmin;; 4947 fX[i-1] = start[i-1] + fDirin[i-1];; 4948 }; 4949 mninex(fX);; 4950 if (xvmin < 0) {; 4951 mnwarn(""D"", ""MNLINE"", "" LINE MINIMUM IN BACKWARDS DIRECTION"");; 4952 }; 4953 if (fvmin == fstart) {; 4954 mnwarn(""D"", ""MNLINE"", "" LINE SEARCH FINDS NO IMPROVEMENT "");; 4955 }; 4956 if (ldebug) {; 4957 Printf("" AFTER %3d POINTS,%s"",nxypt,(const char*)cmess);; 4958 mnplot(xpq, ypq, chpq, nxypt, fNpagwd, fNpagln);; 4959 }; 4960}; 4961 ; 4962////////////////////////////////////////////////////////////////////////////////; 4963/// Prints the covariance matrix v when KODE=1; 4964///; 4965/// always prints the global correlations, and; 4966/// calculates and prints the individual correlation coefficients; 4967 ; 4968void TMinuit::mnmatu(Int_t kode); 4969{; 4970 /* Local variables */; 4971 Int_t ndex, i, j, m, n, ncoef, nparm, id, it, ix;; 4972 Int_t nsofar, ndi, ndj, iso, isw2, isw5;; 4973 TString ctemp;; 4974 ; 4975 isw2 = fISW[1];; 4976 if (isw2 < 1) {; 4977 Printf(""%s"",(const char*)fCovmes[isw2]);; 4978 return;; 4979 }; 4980 if (fNpar == 0) {; 4981 Printf("" MNMATU: NPAR=0"");; 4982 return;; 4983 }; 4984// external error matrix; 4985 if (kode == 1) {; 4986 isw5 = fISW[4];; 4987 fISW[4] = 2;; 4988 mnemat(fP, fMaxint);; 4989 if (isw2 < 3) {; 4990 Printf(""%s"",(const char*)fCovmes[isw2]);; 4991 }; 4992 fISW[4] = isw5;; 4993 }; 4994// correlation coeffs; 4995 if (fNpar <= 1) return;; 4996 mnwerr();; 4997// NCOEF is number of coeff. that fit on one line, not to exceed 20; 4998 ncoef = (fNpagwd - 19) / 6;; 4999 ncoef = TMath::Min(ncoef,20);; 5000 n",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMinuit_8cxx_source.html:163147,toler,tolerance,163147,doc/master/TMinuit_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TMinuit_8cxx_source.html,2,"['error', 'toler']","['error', 'tolerance']"
Availability," FastComplexErrFuncIm(const RooComplex& z). void cacheCERF(Bool_t flag = kTRUE). RooComplex ComplexErrFunc(Double_t re, Double_t im = 0); Return CERNlib complex error function for Z(re,im). RooComplex ComplexErrFunc(const RooComplex& z); Return CERNlib complex error function. This code is translated from the fortran version in the CERN mathlib.; (see ftp://asisftp.cern.ch/cernlib/share/pro/src/mathlib/gen/c/cwerf64.F). void initFastCERF(Int_t reBins = 800, Double_t reMin = -4.0, Double_t reMax = 4.0, Int_t imBins = 1000, Double_t imMin = -4.0, Double_t imMax = 6.0); Allocate and initialize lookup table for interpolated complex error function; for given grid parameters. void cleanup(). RooComplex ITPComplexErrFunc(const RooComplex& z, Int_t nOrder); Return complex error function interpolated from lookup tabel created; by initFastCERF(). Interpolation is performed in Im and Re plane; to specified order. Double_t ITPComplexErrFuncRe(const RooComplex& z, Int_t nOrder); Return real component of complex error function interpolated from; lookup table created by initFastCERF(). Interpolation is performed in; Im and Re plane to specified order. This functions is noticably faster; than ITPComplexErrrFunc().re() because only the real lookup table; is interpolated. Double_t ITPComplexErrFuncIm(const RooComplex& z, Int_t nOrder); Return real component of complex error function interpolated from; lookup table created by initFastCERF(). Interpolation is performed in; Im and Re plane to specified order. This functions is noticably faster; than ITPComplexErrrFunc().im() because only the imaginary lookup table; is interpolated. Double_t interpolate(Double_t* yArr, Int_t nOrder, Double_t x); Interpolate array 'ya' with 'n' elements for 'x' (between 0 and 'n'-1). Double_t interpolate(Double_t* xa, Double_t* ya, Int_t n, Double_t x); Interpolate array 'ya' with 'n' elements for 'xa'. Bool_t loadCache(); Load the complex error function lookup table from the cache file. void storeCache();",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMath.html:3756,error,error,3756,root/html526/RooMath.html,https://root.cern,https://root.cern/root/html526/RooMath.html,5,['error'],['error']
Availability," Files are read only if they changed since last reading If 'proofconf' is defined, check also file proofconf for directives ; Definition at line 3212 of file TAuthenticate.cxx. ◆ RemoveHostAuth(). void TAuthenticate::RemoveHostAuth ; (; THostAuth * ; ha, . Option_t * ; opt = """" . ). static . Remove THostAuth instance from the list. ; Definition at line 2203 of file TAuthenticate.cxx. ◆ RemoveSecContext(). void TAuthenticate::RemoveSecContext ; (; TRootSecContext * ; ctx). staticprivate . Tool for removing SecContext ctx from THostAuth listed in fgAuthInfo or fgProofAuthInfo. ; Definition at line 3661 of file TAuthenticate.cxx. ◆ RfioAuth(). Int_t TAuthenticate::RfioAuth ; (; TString & ; user). private . RFIO authentication (no longer supported) ; Definition at line 1498 of file TAuthenticate.cxx. ◆ SecureRecv(). Int_t TAuthenticate::SecureRecv ; (; TSocket * ; sock, . Int_t ; dec, . Int_t ; key, . char ** ; str . ). static . Receive str from sock and decode it using key indicated by key type Return number of received bytes or -1 in case of error. ; dec = 1 for private decoding, dec = 2 for public decoding ; Definition at line 2864 of file TAuthenticate.cxx. ◆ SecureSend(). Int_t TAuthenticate::SecureSend ; (; TSocket * ; sock, . Int_t ; enc, . Int_t ; key, . const char * ; str . ). static . Encode null terminated str using the session private key indicated by enc and sends it over the network Returns number of bytes sent, or -1 in case of error. ; enc = 1 for private encoding, enc = 2 for public encoding ; Definition at line 2803 of file TAuthenticate.cxx. ◆ SendRSAPublicKey(). Int_t TAuthenticate::SendRSAPublicKey ; (; TSocket * ; Socket, . Int_t ; key = 0 . ). static . Receives server RSA Public key Sends local RSA public key encoded. ; Definition at line 3117 of file TAuthenticate.cxx. ◆ SetAuthReUse(). void TAuthenticate::SetAuthReUse ; (; Bool_t ; authreuse). static . Set global AuthReUse flag. ; Definition at line 1377 of file TAuthenticate.cxx. ◆ SetDefaultRS",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAuthenticate.html:36593,error,error,36593,doc/master/classTAuthenticate.html,https://root.cern,https://root.cern/doc/master/classTAuthenticate.html,1,['error'],['error']
Availability," FitConfig.h:266; ROOT::Fit::FitConfig::SetMinimizervoid SetMinimizer(const char *type, const char *algo=nullptr)set minimizer typeDefinition FitConfig.h:179; ROOT::Fit::FitConfig::SetMinosErrorsvoid SetMinosErrors(bool on=true)set Minos errors computation to be performed after fittingDefinition FitConfig.h:229; ROOT::Fit::FitConfig::fNormErrorsbool fNormErrorsflag for error normalizationDefinition FitConfig.h:259; ROOT::Fit::FitConfig::ParamsValuesstd::vector< double > ParamsValues() constreturn a vector of stored parameter values (i.e initial fit parameters)Definition FitConfig.cxx:262; ROOT::Fit::FitConfig::MinimizerAlgoTypeconst std::string & MinimizerAlgoType() constreturn type of minimizer algorithmsDefinition FitConfig.h:192; ROOT::Fit::FitConfig::ParamsSettingsstd::vector< ROOT::Fit::ParameterSettings > & ParamsSettings()get the vector of parameter settings (non-const method)Definition FitConfig.h:91; ROOT::Fit::FitConfig::SetNormErrorsvoid SetNormErrors(bool on=true)set the option to normalize the error on the result according to chi2/ndfDefinition FitConfig.h:223; ROOT::Fit::FitConfig::SetParamsSettingsvoid SetParamsSettings(const std::vector< ROOT::Fit::ParameterSettings > &pars)Definition FitConfig.h:145; ROOT::Fit::FitConfig::NormalizeErrorsbool NormalizeErrors() constflag to check if resulting errors are be normalized according to chi2/ndfDefinition FitConfig.h:202; ROOT::Fit::FitConfig::SetMinosErrorsvoid SetMinosErrors(const std::vector< unsigned int > &paramInd)set parameter indices for running Minos this can be used for running Minos on a subset of parameters ...Definition FitConfig.h:237; ROOT::Fit::FitConfig::ParabErrorsbool ParabErrors() constdo analysis for parabolic errorsDefinition FitConfig.h:205; ROOT::Fit::FitConfig::SetMinimizerOptionsvoid SetMinimizerOptions(const ROOT::Math::MinimizerOptions &minopt)set all the minimizer options using class MinimizerOptionsDefinition FitConfig.cxx:257; ROOT::Fit::FitConfig::SetWeightCorrectionvoid SetWei",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8h_source.html:11385,error,error,11385,doc/master/FitConfig_8h_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8h_source.html,1,['error'],['error']
Availability," Fitter.h:422; ROOT::Fit::Fitter::SetFCNbool SetFCN(unsigned int npar, Function &fcn, const double *params=nullptr, unsigned int dataSize=0, int fitType=0)Set a generic FCN function as a C++ callable object implementing double () (const double *) Note that...Definition Fitter.h:656; ROOT::Fit::ParameterSettingsClass, describing value, limits and step size of the parameters Provides functionality also to set/re...Definition ParameterSettings.h:33; TAxisClass to manage histogram axis.Definition TAxis.h:31; TAxis::GetBinCentervirtual Double_t GetBinCenter(Int_t bin) constReturn center of bin.Definition TAxis.cxx:478; TCanvasThe Canvas class.Definition TCanvas.h:23; TF1::SetNDFvirtual void SetNDF(Int_t ndf)Set the number of degrees of freedom ndf should be the number of points used in a fit - the number of...Definition TF1.cxx:3419; TF1::SetChisquarevirtual void SetChisquare(Double_t chi2)Definition TF1.h:640; TF1::SetParErrorsvirtual void SetParErrors(const Double_t *errors)Set errors for all active parameters when calling this function, the array errors must have at least ...Definition TF1.cxx:3490; TF1::GetParNamevirtual const char * GetParName(Int_t ipar) constDefinition TF1.h:557; TF1::SetParametersvirtual void SetParameters(const Double_t *params)Definition TF1.h:677; TF1::GetParametervirtual Double_t GetParameter(Int_t ipar) constDefinition TF1.h:540; TF2A 2-Dim function with parameters.Definition TF2.h:29; TF2::DrawCopyTF1 * DrawCopy(Option_t *option="""") const overrideDraw a copy of this function with its current attributes-*.Definition TF2.cxx:286; TF2::Drawvoid Draw(Option_t *option="""") overrideDraw this function with its current attributes.Definition TF2.cxx:259; TF2::SetRangevoid SetRange(Double_t xmin, Double_t xmax) overrideInitialize the upper and lower bounds to draw the function.Definition TF2.h:146; TH1::GetNbinsYvirtual Int_t GetNbinsY() constDefinition TH1.h:298; TH1::GetBinErrorvirtual Double_t GetBinError(Int_t bin) constReturn value of error associ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/fit2dHist_8C.html:10456,error,errors,10456,doc/master/fit2dHist_8C.html,https://root.cern,https://root.cern/doc/master/fit2dHist_8C.html,3,['error'],['errors']
Availability," Float_t * ; eyl = nullptr, . const Float_t * ; eyh = nullptr . ). TGraphAsymmErrors normal constructor. ; if exl,h or eyl,h are null, the corresponding arrays are preset to zero ; Definition at line 132 of file TGraphAsymmErrors.cxx. ◆ TGraphAsymmErrors() [4/10]. TGraphAsymmErrors::TGraphAsymmErrors ; (; Int_t ; n, . const Double_t * ; x, . const Double_t * ; y, . const Double_t * ; exl = nullptr, . const Double_t * ; exh = nullptr, . const Double_t * ; eyl = nullptr, . const Double_t * ; eyh = nullptr . ). TGraphAsymmErrors normal constructor. ; if exl,h or eyl,h are null, the corresponding arrays are preset to zero ; Definition at line 155 of file TGraphAsymmErrors.cxx. ◆ TGraphAsymmErrors() [5/10]. TGraphAsymmErrors::TGraphAsymmErrors ; (; const TVectorF & ; vx, . const TVectorF & ; vy, . const TVectorF & ; vexl, . const TVectorF & ; vexh, . const TVectorF & ; veyl, . const TVectorF & ; veyh . ). Constructor with six vectors of floats in input A grapherrors is built with the X coordinates taken from vx and Y coord from vy and the errors from vectors vexl/h and veyl/h. ; The number of points in the graph is the minimum of number of points in vx and vy. ; Definition at line 187 of file TGraphAsymmErrors.cxx. ◆ TGraphAsymmErrors() [6/10]. TGraphAsymmErrors::TGraphAsymmErrors ; (; const TVectorD & ; vx, . const TVectorD & ; vy, . const TVectorD & ; vexl, . const TVectorD & ; vexh, . const TVectorD & ; veyl, . const TVectorD & ; veyh . ). Constructor with six vectors of doubles in input A grapherrors is built with the X coordinates taken from vx and Y coord from vy and the errors from vectors vexl/h and veyl/h. ; The number of points in the graph is the minimum of number of points in vx and vy. ; Definition at line 216 of file TGraphAsymmErrors.cxx. ◆ TGraphAsymmErrors() [7/10]. TGraphAsymmErrors::TGraphAsymmErrors ; (; const TGraphAsymmErrors & ; gr). TGraphAsymmErrors copy constructor. ; Definition at line 78 of file TGraphAsymmErrors.cxx. ◆ TGraphAsymmErrors() [8/1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphAsymmErrors.html:37444,error,errors,37444,doc/master/classTGraphAsymmErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphAsymmErrors.html,1,['error'],['errors']
Availability," Float_t * ; xbins, . Option_t * ; option = """" . ). Constructor for Profile histograms with variable bin size. ; See TProfile::BuildOptions() for more explanations on errors see also comments in the TH1 base class constructors ; Definition at line 138 of file TProfile.cxx. ◆ TProfile() [5/7]. TProfile::TProfile ; (; const char * ; name, . const char * ; title, . Int_t ; nbins, . const Double_t * ; xbins, . Option_t * ; option = """" . ). Constructor for Profile histograms with variable bin size. ; See TProfile::BuildOptions for more explanations on errors see also comments in the TH1 base class constructors ; Definition at line 150 of file TProfile.cxx. ◆ TProfile() [6/7]. TProfile::TProfile ; (; const char * ; name, . const char * ; title, . Int_t ; nbins, . const Double_t * ; xbins, . Double_t ; ylow, . Double_t ; yup, . Option_t * ; option = """" . ). Constructor for Profile histograms with variable bin size. ; See TProfile::BuildOptions for more explanations on errors; see also comments in the TH1 base class constructors ; Definition at line 162 of file TProfile.cxx. ◆ TProfile() [7/7]. TProfile::TProfile ; (; const TProfile & ; profile). Copy constructor. ; Definition at line 244 of file TProfile.cxx. ◆ ~TProfile(). TProfile::~TProfile ; (; ). override . Default destructor for Profile histograms. ; Definition at line 100 of file TProfile.cxx. Member Function Documentation. ◆ Add() [1/3]. Bool_t TProfile::Add ; (; const TH1 * ; h1, . const TH1 * ; h2, . Double_t ; c1 = 1, . Double_t ; c2 = 1 . ). overridevirtual . Replace contents of this profile by the addition of h1 and h2. ; this = c1*h1 + c2*h2; c1 and c2 are considered as weights applied to the two summed profiles. The operation acts therefore like merging the two profiles with a weight c1 and c2 ; Reimplemented from TH1.; Definition at line 291 of file TProfile.cxx. ◆ Add() [2/3]. Bool_t TProfile::Add ; (; const TH1 * ; h1, . Double_t ; c1 = 1 . ). overridevirtual . Performs the operation: this = this + c1*h1.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:60787,error,errors,60787,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,1,['error'],['errors']
Availability," Float_t mass, Float_t vx, Float_t vy, Float_t vz, Float_t time, Float_t lifetime); virtual~TMCParticle(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Float_tGetEnergy() const; Int_tGetFirstChild() const; virtual const char*TObject::GetIconName() const; Int_tGetKF() const; Int_tGetKS() const; Int_tGetLastChild() const; Float_tGetLifetime() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; Float_tGetMass() const; virtual const char*GetName() const; virtual char*TObject::GetOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMCParticle.html:1534,Error,Error,1534,root/html532/TMCParticle.html,https://root.cern,https://root.cern/root/html532/TMCParticle.html,1,['Error'],['Error']
Availability," Float_t rmin1, Float_t rmax1, Float_t rmin2, Float_t rmax2, Float_t phi1, Float_t phi2); virtual~TCONS(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTTUBS::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Float_tTTUBE::GetAspectRatio() const; virtual const TBuffer3D&TTUBS::GetBuffer3D(Int_t reqSections) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Float_tTTUBE::GetDz() const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TCONS.html:2036,Error,Error,2036,root/html532/TCONS.html,https://root.cern,https://root.cern/root/html532/TCONS.html,2,['Error'],['Error']
Availability," Float_tfgPointSize; static Float_tfgPointSizeScale. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GLUtesselator* GetDrawTesselator3fv(); Returns a tesselator for direct drawing when using 3-vertices with; single precision. GLUtesselator* GetDrawTesselator4fv(); Returns a tesselator for direct drawing when using 4-vertices with; single precision. GLUtesselator* GetDrawTesselator3dv(); Returns a tesselator for direct drawing when using 3-vertices with; double precision. GLUtesselator* GetDrawTesselator4dv(); Returns a tesselator for direct drawing when using 4-vertices with; double precision. UInt_t GetDrawQuality(); static: get draw quality. void SetDrawQuality(UInt_t dq); static: set draw quality. void ResetDrawQuality(); static: reset draw quality. UInt_t GetDefaultDrawQuality(); static: get default draw quality. void SetDefaultDrawQuality(UInt_t dq); static: set default draw quality. void CheckError(const char* loc); Check current GL error state, outputing details via ROOT; Error method if one. UInt_t LockColor(); Prevent further color changes. UInt_t UnlockColor(); Allow color changes. Bool_t IsColorLocked(); Returns true if color lockcount is greater than 0. void Color(const TGLColor& color); Set color from TGLColor. void ColorAlpha(const TGLColor& color, UChar_t alpha); Set color from TGLColor and alpha value. void ColorAlpha(const TGLColor& color, Float_t alpha); Set color from TGLColor and alpha value. void ColorAlpha(Color_t color_index, Float_t alpha = 1); Set color from color_index and GL-style alpha (default 1). void ColorTransparency(Color_t color_index, Char_t transparency = 0); Set color from color_index and ROOT-style transparency (default 0). void Color3ub(UChar_t r, UChar_t g, UChar_t b); Wrapper for glColor3ub. void Color4ub(UChar_t r, UChar_t g, UChar_t b, UChar_t a); Wrapper for glColor4ub. void Color3ubv(const UChar_t* rgb); Wrapper for glColor3ubv. void Color4ubv(const UChar_t* rgba); Wrapper for glC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLUtil.html:5289,error,error,5289,root/html528/TGLUtil.html,https://root.cern,https://root.cern/root/html528/TGLUtil.html,5,"['Error', 'error']","['Error', 'error']"
Availability, Font_tshort Font_tDefinition RtypesCore.h:81; Short_tshort Short_tDefinition RtypesCore.h:39; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; Long64_tlong long Long64_tDefinition RtypesCore.h:69; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; ClassImp#define ClassImp(name)Definition Rtypes.h:382; TColor.h; TEnv.h; gEnvR__EXTERN TEnv * gEnvDefinition TEnv.h:170; TExMap.h; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; pixOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void pixDefinition TGWin32VirtualXProxy.cxx:128; chupyOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void chupyDefinition TGWin32VirtualXProxy.cxx:116; maskOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t maskDefinition TGWin32VirtualXProxy.cxx:178; cindexOption_t Option_t cindexDefinition TGWin32VirtualXProxy.cxx:50; cursorOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t cursorDefinition TGWin32VirtualXProxy.cxx:160; cmapOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void cmapDefinition TGWin32VirtualXProxy.cxx:124; pixelOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void pixelDefinition TGWin32VirtualXProxy.cxx:124; offsetOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerSt,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGX11_8cxx_source.html:125658,mask,maskDefinition,125658,doc/master/TGX11_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGX11_8cxx_source.html,1,['mask'],['maskDefinition']
Availability," For each event, write temporary values into our servers' caches, and run a single-value computation.; 4407 ; 4408 for (std::size_t i=0; i < output.size(); ++i) {; 4409 for (auto& serv : ourServers) {; 4410 serv.server->setCachedValue(serv.batch[std::min(i, serv.batch.size()-1)], false);; 4411 }; 4412 ; 4413 output[i] = evaluate();; 4414 }; 4415}; 4416 ; 4417////////////////////////////////////////////////////////////////////////////////; 4418/// This function defines the analytical integral translation for the class.; 4419///; 4420/// \param[in] code The code that decides the integrands.; 4421/// \param[in] rangeName Name of the normalization range.; 4422/// \param[in] ctx An object to manage auxiliary information for code-squashing.; 4423///; 4424/// \returns The representative code string of the integral for the given object.; 4425std::string RooAbsReal::buildCallToAnalyticIntegral(Int_t /* code */, const char * /* rangeName */,; 4426 RooFit::Detail::CodeSquashContext & /*ctx*/) const; 4427{; 4428 std::stringstream errorMsg;; 4429 errorMsg << ""An analytical integral function for class \"""" << ClassName() << ""\"" has not yet been implemented."";; 4430 coutE(Minimization) << errorMsg.str() << std::endl;; 4431 throw std::runtime_error(errorMsg.str().c_str());; 4432}; 4433 ; 4434double RooAbsReal::_DEBUG_getVal(const RooArgSet* normalisationSet) const {; 4435 ; 4436 const bool tmpFast = _fast;; 4437 const double tmp = _value;; 4438 ; 4439 double fullEval = 0.;; 4440 try {; 4441 fullEval = getValV(normalisationSet);; 4442 }; 4443 catch (CachingError& error) {; 4444 throw CachingError(std::move(error),; 4445 FormatPdfTree() << *this);; 4446 }; 4447 ; 4448 const double ret = (_fast && !_inhibitDirty) ? _value : fullEval;; 4449 ; 4450 if (std::isfinite(ret) && ( ret != 0. ? (ret - fullEval)/ret : ret - fullEval) > 1.E-9) {; 4451#ifndef NDEBUG; 4452 gSystem->StackTrace();; 4453#endif; 4454 FormatPdfTree formatter;; 4455 formatter << ""--> (Scalar computation wrong here:)\n""; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/RooAbsReal_8cxx_source.html:195248,error,errorMsg,195248,doc/master/RooAbsReal_8cxx_source.html,https://root.cern,https://root.cern/doc/master/RooAbsReal_8cxx_source.html,2,['error'],['errorMsg']
Availability," Function SetDefaultFFT() allows to change the default library. Available transform types:; FFT:; ""C2CFORWARD"" - a complex input/output discrete Fourier transform (DFT) in one or more dimensions, -1 in the exponent; ""C2CBACKWARD""- a complex input/output discrete Fourier transform (DFT) in one or more dimensions, +1 in the exponent; ""R2C"" - a real-input/complex-output discrete Fourier transform (DFT) in one or more dimensions,; ""C2R"" - inverse transforms to ""R2C"", taking complex input (storing the non-redundant half of a logically Hermitian array) to real output; ""R2HC"" - a real-input DFT with output in ¡Èhalfcomplex¡É format, i.e. real and imaginary parts for a transform of size n stored as r0, r1, r2, ..., rn/2, i(n+1)/2-1, ..., i2, i1; ""HC2R"" - computes the reverse of FFTW_R2HC, above; ""DHT"" - computes a discrete Hartley transform. Sine/cosine transforms:; Different types of transforms are specified by parameter kind of the SineCosine() static function. 4 different kinds of sine and cosine transforms are available. DCT-I (REDFT00 in FFTW3 notation)- kind=0; DCT-II (REDFT01 in FFTW3 notation)- kind=1; DCT-III(REDFT10 in FFTW3 notation)- kind=2; DCT-IV (REDFT11 in FFTW3 notation)- kind=3; DST-I (RODFT00 in FFTW3 notation)- kind=4; DST-II (RODFT01 in FFTW3 notation)- kind=5; DST-III(RODFT10 in FFTW3 notation)- kind=6; DST-IV (RODFT11 in FFTW3 notation)- kind=7. Formulas and detailed descriptions can be found in the chapter ""What FFTW really computes"" of the FFTW manual; NOTE: FFTW computes unnormalized transforms, so doing a transform, followed by its inverse will give the original array, multiplied by normalization constant (transform size(N) for FFT, 2*(N-1) for DCT-I, 2*(N+1) for DST-I, 2*N for other sine/cosine transforms). How to use it:; Call to the static function FFT returns a pointer to a fast Fourier transform with requested parameters. Call to the static function SineCosine returns a pointer to a sine or cosine transform with requested parameters. Example: ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTVirtualFFT.html:1648,avail,available,1648,doc/master/classTVirtualFFT.html,https://root.cern,https://root.cern/doc/master/classTVirtualFFT.html,1,['avail'],['available']
Availability," Function documentation; unsigned int GetPointSize(ROOT::Fit::BinData::ErrorType err, unsigned int dim). ErrorType GetErrorType() const. explicit BinData(unsigned int maxpoints = 0, unsigned int dim = 1, ROOT::Fit::BinData::ErrorType err = kValueError). constructor from dimension of point and max number of points (to pre-allocate vector); Give a zero value and then use Initialize later one if the size is not known. explicit BinData(const ROOT::Fit::DataOptions& opt, unsigned int maxpoints = 0, unsigned int dim = 1, ROOT::Fit::BinData::ErrorType err = kValueError). constructor from option and default range. BinData(const DataOptions & opt, const DataRange & range, unsigned int maxpoints = 0, unsigned int dim = 1, ErrorType err = kValueError ). constructor from options and range; efault is 1D and value errors. BinData(unsigned int n, const double * dataX, const double * val, const double * ex , const double * eval ); constructurs using external data . constructor from external data for 1D with errors on coordinate and value. BinData(unsigned int n, const double* dataX, const double* dataY, const double* val, const double* ex, const double* ey, const double* eval). constructor from external data for 2D with errors on coordinate and value. BinData(unsigned int n, const double* dataX, const double* dataY, const double* dataZ, const double* val, const double* ex, const double* ey, const double* ez, const double* eval). constructor from external data for 3D with errors on coordinate and value. BinData(const ROOT::Fit::BinData& ). copy constructor. BinData & operator=(const ROOT::Fit::BinData& ). assignment operator. virtual ~BinData(). destructor. void Initialize(unsigned int maxpoints, unsigned int dim = 1, ROOT::Fit::BinData::ErrorType err = kValueError). preallocate a data set with given size , dimension and error type (to get the full point size); If the data set already exists and it is having the compatible point size space for the new points; is created in the data s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Fit__BinData.html:6611,error,errors,6611,root/html526/ROOT__Fit__BinData.html,https://root.cern,https://root.cern/root/html526/ROOT__Fit__BinData.html,1,['error'],['errors']
Availability," Functions inherited from TObject; virtual void DoError (int level, const char *location, const char *fmt, va_list va) const;  Interface to ErrorHandler (protected). ;  ; void MakeZombie ();  ;  Protected Member Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; Bool_t fOwnDisabledPic;  kTRUE if disabled picture was autogenerated ;  ; const TGPicture * fPic;  picture to be put in button ;  ; const TGPicture * fPicD;  picture shown when button disabled ;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fMinWidth;  minimal frame width ;  ; UInt_t fOptions;  frame options ;  ; UInt_t fWidth;  frame width ;  ; Int_t fX;  frame x position ;  ; Int_t fY;  frame y position ;  ;  Protected Attributes inherited from TGW",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGPictureButton.html:27648,down,down,27648,doc/master/classTGPictureButton.html,https://root.cern,https://root.cern/doc/master/classTGPictureButton.html,1,['down'],['down']
Availability, Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous check button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ; TGHotString * fLabel;  ; Int_t fMBottom;  ; Int_t fMLeft;  ; Int_t fMRight;  ; Int_t fMTop;  ; Bool_t fPrevStateOn;  ; Bool_t fStateOn;  ; TGTextLayout * fTLayout;  ; Int_t fTMode;  ; Int_t fWrapLength;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fM,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGCheckButton.html:31363,down,down,31363,doc/master/classTGCheckButton.html,https://root.cern,https://root.cern/doc/master/classTGCheckButton.html,1,['down'],['down']
Availability, Functions inherited from TQObject; virtual const char * GetSenderClassName () const;  ;  Protected Member Functions inherited from TGWidget;  TGWidget (const TGWidget &tgw);  ; Int_t ClearFlags (Int_t flags);  ; TGWidget & operator= (const TGWidget &tgw);  ; Int_t SetFlags (Int_t flags);  . Protected Attributes; const TGPicture * fDisOff;  button disabled and was OFF picture ;  ; const TGPicture * fDisOn;  button disabled and was ON picture ;  ; const TGPicture * fOff;  button OFF picture ;  ; const TGPicture * fOn;  button ON picture ;  ; EButtonState fPrevState;  previous radio button state ;  ;  Protected Attributes inherited from TGTextButton; FontStruct_t fFontStruct;  ; Bool_t fHasOwnFont;  ; Int_t fHKeycode;  ; TGHotString * fLabel;  ; Int_t fMBottom;  ; Int_t fMLeft;  ; Int_t fMRight;  ; Int_t fMTop;  ; Bool_t fPrevStateOn;  ; Bool_t fStateOn;  ; TGTextLayout * fTLayout;  ; Int_t fTMode;  ; Int_t fWrapLength;  ;  Protected Attributes inherited from TGButton; Pixel_t fBgndColor;  actual background color ;  ; TGButtonGroup * fGroup;  button group this button belongs to ;  ; Pixel_t fHighColor;  highlight color ;  ; GContext_t fNormGC;  graphics context used for drawing button ;  ; EButtonState fState;  button state ;  ; Bool_t fStayDown;  true if button has to stay down ;  ; UInt_t fStyle;  button style (modern or classic) ;  ; UInt_t fTHeight;  button height ;  ; TGToolTip * fTip;  tool tip associated with button ;  ; UInt_t fTWidth;  button width ;  ; void * fUserData;  pointer to user data structure ;  ;  Protected Attributes inherited from TGFrame; Pixel_t fBackground;  frame background color ;  ; Int_t fBorderWidth;  frame border width ;  ; Int_t fDNDState;  EDNDFlags. ;  ; UInt_t fEventMask;  currently active event mask ;  ; TGFrameElement * fFE;  pointer to frame element ;  ; UInt_t fHeight;  frame height ;  ; UInt_t fMaxHeight;  maximal frame height ;  ; UInt_t fMaxWidth;  maximal frame width ;  ; UInt_t fMinHeight;  minimal frame height ;  ; UInt_t fM,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGRadioButton.html:31468,down,down,31468,doc/master/classTGRadioButton.html,https://root.cern,https://root.cern/doc/master/classTGRadioButton.html,1,['down'],['down']
Availability," Functions; virtual ~TSQLStatement ()=default;  ; virtual void Close (Option_t *="""");  ; virtual void EnableErrorOutput (Bool_t on=kTRUE);  ; virtual Bool_t GetBinary (Int_t, void *&, Long_t &);  ; virtual Int_t GetBufferLength () const =0;  ; virtual Bool_t GetDate (Int_t, Int_t &, Int_t &, Int_t &);  ; TDatime GetDatime (Int_t);  return value of parameter in form of TDatime Be aware, that TDatime does not allow dates before 1995-01-01 ;  ; virtual Bool_t GetDatime (Int_t, Int_t &, Int_t &, Int_t &, Int_t &, Int_t &, Int_t &);  ; Int_t GetDay (Int_t);  return day value for parameter (if applicable) ;  ; virtual Double_t GetDouble (Int_t);  ; virtual Int_t GetErrorCode () const;  returns error code of last operation if res==0, no error Each specific implementation of TSQLStatement provides its own error coding ;  ; virtual const char * GetErrorMsg () const;  returns error message of last operation if no errors, return 0 Each specific implementation of TSQLStatement provides its own error messages ;  ; virtual const char * GetFieldName (Int_t)=0;  ; Int_t GetHour (Int_t);  return hours value for parameter (if applicable) ;  ; virtual Int_t GetInt (Int_t);  ; virtual Bool_t GetLargeObject (Int_t col, void *&mem, Long_t &size);  ; virtual Long_t GetLong (Int_t);  ; virtual Long64_t GetLong64 (Int_t);  ; Int_t GetMinute (Int_t);  return minutes value for parameter (if applicable) ;  ; Int_t GetMonth (Int_t);  return month value for parameter (if applicable) ;  ; virtual Int_t GetNumAffectedRows ();  ; virtual Int_t GetNumFields ()=0;  ; virtual Int_t GetNumParameters ()=0;  ; Int_t GetSecond (Int_t);  return seconds value for parameter (if applicable) ;  ; Int_t GetSecondsFraction (Int_t);  return seconds fraction value for parameter (if applicable) ;  ; virtual const char * GetString (Int_t);  ; virtual Bool_t GetTime (Int_t, Int_t &, Int_t &, Int_t &);  ; TDatime GetTimestamp (Int_t);  return value of parameter in form of TDatime Be aware, that TDatime does not allow ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLStatement.html:1378,error,error,1378,doc/master/classTSQLStatement.html,https://root.cern,https://root.cern/doc/master/classTSQLStatement.html,1,['error'],['error']
Availability," GCC diagnostic ignored ""-Wconversion""; 17006#endif; 17007 /* Data type of linger structure elements may differ,; 17008 * so we don't know what cast we need here.; 17009 * Disable type conversion warnings. */; 17010 ; 17011 linger.l_linger = (linger_timeout + 999) / 1000;; 17012 ; 17013#if defined(GCC_DIAGNOSTIC); 17014#pragma GCC diagnostic pop; 17015#endif; 17016#if defined(_MSC_VER); 17017#pragma warning(pop); 17018#endif; 17019 ; 17020 } else {; 17021 linger.l_onoff = 0;; 17022 linger.l_linger = 0;; 17023 }; 17024 ; 17025 if (linger_timeout < -1) {; 17026 /* Default: don't configure any linger */; 17027 } else if (getsockopt(conn->client.sock,; 17028 SOL_SOCKET,; 17029 SO_ERROR,; 17030#if defined(_WIN32) /* WinSock uses different data type here */; 17031 (char *)&error_code,; 17032#else; 17033 &error_code,; 17034#endif; 17035 &opt_len); 17036 != 0) {; 17037 /* Cannot determine if socket is already closed. This should; 17038 * not occur and never did in a test. Log an error message; 17039 * and continue. */; 17040 mg_cry_internal(conn,; 17041 ""%s: getsockopt(SOL_SOCKET SO_ERROR) failed: %s"",; 17042 __func__,; 17043 strerror(ERRNO));; 17044#if defined(_WIN32); 17045 } else if (error_code == WSAECONNRESET) {; 17046#else; 17047 } else if (error_code == ECONNRESET) {; 17048#endif; 17049 /* Socket already closed by client/peer, close socket without linger; 17050 */; 17051 } else {; 17052 ; 17053 /* Set linger timeout */; 17054 if (setsockopt(conn->client.sock,; 17055 SOL_SOCKET,; 17056 SO_LINGER,; 17057 (char *)&linger,; 17058 sizeof(linger)); 17059 != 0) {; 17060 mg_cry_internal(; 17061 conn,; 17062 ""%s: setsockopt(SOL_SOCKET SO_LINGER(%i,%i)) failed: %s"",; 17063 __func__,; 17064 linger.l_onoff,; 17065 linger.l_linger,; 17066 strerror(ERRNO));; 17067 }; 17068 }; 17069 ; 17070 /* Now we know that our FIN is ACK-ed, safe to close */; 17071 closesocket(conn->client.sock);; 17072 conn->client.sock = INVALID_SOCKET;; 17073}; 17074#endif; 17075 ; 17076 ; 17077static void; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:505996,error,error,505996,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability," GCC diagnostic ignored ""-Wconversion""; 17007#endif; 17008 /* Data type of linger structure elements may differ,; 17009 * so we don't know what cast we need here.; 17010 * Disable type conversion warnings. */; 17011 ; 17012 linger.l_linger = (linger_timeout + 999) / 1000;; 17013 ; 17014#if defined(GCC_DIAGNOSTIC); 17015#pragma GCC diagnostic pop; 17016#endif; 17017#if defined(_MSC_VER); 17018#pragma warning(pop); 17019#endif; 17020 ; 17021 } else {; 17022 linger.l_onoff = 0;; 17023 linger.l_linger = 0;; 17024 }; 17025 ; 17026 if (linger_timeout < -1) {; 17027 /* Default: don't configure any linger */; 17028 } else if (getsockopt(conn->client.sock,; 17029 SOL_SOCKET,; 17030 SO_ERROR,; 17031#if defined(_WIN32) /* WinSock uses different data type here */; 17032 (char *)&error_code,; 17033#else; 17034 &error_code,; 17035#endif; 17036 &opt_len); 17037 != 0) {; 17038 /* Cannot determine if socket is already closed. This should; 17039 * not occur and never did in a test. Log an error message; 17040 * and continue. */; 17041 mg_cry_internal(conn,; 17042 ""%s: getsockopt(SOL_SOCKET SO_ERROR) failed: %s"",; 17043 __func__,; 17044 strerror(ERRNO));; 17045#if defined(_WIN32); 17046 } else if (error_code == WSAECONNRESET) {; 17047#else; 17048 } else if (error_code == ECONNRESET) {; 17049#endif; 17050 /* Socket already closed by client/peer, close socket without linger; 17051 */; 17052 } else {; 17053 ; 17054 /* Set linger timeout */; 17055 if (setsockopt(conn->client.sock,; 17056 SOL_SOCKET,; 17057 SO_LINGER,; 17058 (char *)&linger,; 17059 sizeof(linger)); 17060 != 0) {; 17061 mg_cry_internal(; 17062 conn,; 17063 ""%s: setsockopt(SOL_SOCKET SO_LINGER(%i,%i)) failed: %s"",; 17064 __func__,; 17065 linger.l_onoff,; 17066 linger.l_linger,; 17067 strerror(ERRNO));; 17068 }; 17069 }; 17070 ; 17071 /* Now we know that our FIN is ACK-ed, safe to close */; 17072 closesocket(conn->client.sock);; 17073 conn->client.sock = INVALID_SOCKET;; 17074}; 17075#endif; 17076 ; 17077 ; 17078static void; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:506029,error,error,506029,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability," G__ateval. happens instead of this. root> G__at[TAB]; root> G__ateval(. because there are several overloaded versions of G__ateval().; (this could be fixed). Function Members (Methods); public:. TTabCom(); virtual~TTabCom(); static Char_tAllAgreeOnChar(int i, const TSeqCollection* pList, Int_t& nGoodStrings); static voidAppendListOfFilesInDirectory(const char* dirName, TSeqCollection* pList); static TClass*Class(); voidClearAll(); voidClearClasses(); voidClearCppDirectives(); voidClearEnvVars(); voidClearFiles(); voidClearGlobalFunctions(); voidClearGlobals(); voidClearPragmas(); voidClearSysIncFiles(); voidClearUsers(); static TStringDetermineClass(const char* varName); static Bool_tExcludedByFignore(TString s); const TSeqCollection*GetListOfClasses(); const TSeqCollection*GetListOfCppDirectives(); const TSeqCollection*GetListOfEnvVars(); const TSeqCollection*GetListOfFilesInPath(const char* path); const TSeqCollection*GetListOfGlobalFunctions(); const TSeqCollection*GetListOfGlobals(); const TSeqCollection*GetListOfPragmas(); const TSeqCollection*GetListOfSysIncFiles(); const TSeqCollection*GetListOfUsers(); static TStringGetSysIncludePath(); Int_tHook(char* buf, int* pLoc, ostream& out); virtual TClass*IsA() const; static Bool_tIsDirectory(const char* fileName); static TSeqCollection*NewListOfFilesInPath(const char* path); static voidNoMsg(Int_t errorLevel); static Bool_tPathIsSpecifiedInFileName(const TString& fileName); voidRehashAll(); voidRehashClasses(); voidRehashCppDirectives(); voidRehashEnvVars(); voidRehashFiles(); voidRehashGlobalFunctions(); voidRehashGlobals(); voidRehashPragmas(); voidRehashSysIncFiles(); voidRehashUsers(); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). private:. TTabCom(const TTabCom&); Int_tComplete(const TRegexp& re, const TSeqCollection* pListOfCandidates, const char* appendage, ostream& out, TString::ECaseCompare cmp = TString::kExact); vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTabCom.html:4398,error,errorLevel,4398,root/html534/TTabCom.html,https://root.cern,https://root.cern/root/html534/TTabCom.html,2,['error'],['errorLevel']
Availability," Gaussian pdf and use the resulting; RooDataSet with this constructor. The result is the projected distribution onto varName; marginalizing the other variables. If varName is not given, the first variable will be used.; This is useful mostly for RooDataSets with only one observable. SamplingDistribution(); SamplingDistribution default constructor. ~SamplingDistribution(); SamplingDistribution destructor. void Add(const RooStats::SamplingDistribution* other); Merge SamplingDistributions (does nothing if NULL is given).; If variable name was not set before, it is copied from the added; SamplingDistribution. Double_t Integral(Double_t low, Double_t high, Bool_t normalize = kTRUE, Bool_t lowClosed = kTRUE, Bool_t highClosed = kFALSE) const; Returns the integral in the open/closed/mixed interval. Default is [low,high) interval.; Normalization can be turned off. void SortValues() const. Double_t IntegralAndError(Double_t& error, Double_t low, Double_t high, Bool_t normalize = kTRUE, Bool_t lowClosed = kTRUE, Bool_t highClosed = kFALSE) const; Returns the integral in the open/closed/mixed interval. Default is [low,high) interval.; Normalization can be turned off.; compute also the error on the integral. Double_t CDF(Double_t x) const; returns the closed integral [-inf,x]. Double_t InverseCDF(Double_t pvalue); returns the inverse of the cumulative distribution function. Double_t InverseCDF(Double_t pvalue, Double_t sigmaVariaton, Double_t& inverseVariation); returns the inverse of the cumulative distribution function, with variations depending on number of samples. Double_t InverseCDFInterpolate(Double_t pvalue); returns the inverse of the cumulative distribution function. SamplingDistribution(const char* name, const char* title, vector<Double_t>& samplingDist, const char* varName = 0); Constructor for SamplingDistribution. Int_t GetSize() const; size of samples. {return fSamplingDist.size();}. const std::vector<Double_t> & GetSamplingDistribution() const; Get test statistic",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStats__SamplingDistribution.html:9297,error,error,9297,root/html532/RooStats__SamplingDistribution.html,https://root.cern,https://root.cern/root/html532/RooStats__SamplingDistribution.html,2,['error'],['error']
Availability," Get the branch address. If we are *not* owned by a MakeClass() tree:. If we are a top-level branch, return a pointer; to the pointer to our object. If we are *not* a top-level branch, return a pointer; to our object. If we are owned by a MakeClass() tree:. Return a pointer to our object. void InitInfo(); -- Init the streamer info for the branch class, try to compensate for class code unload/reload and schema evolution. TVirtualCollectionProxy* GetCollectionProxy(); -- Return the collection proxy describing the branch content, if any. TClass* GetCurrentClass(); -- Return a pointer to the current type of the data member corresponding to branch element. Int_t GetEntry(Long64_t entry = 0, Int_t getall = 0); -- Read all branches of a BranchElement and return total number of bytes. If entry = 0, then use current entry number + 1.; If entry < 0, then reset entry number to 0. Returns the number of bytes read from the input buffer.; If entry does not exist, then returns 0.; If an I/O error occurs, then returns -1. See IMPORTANT REMARKS in TTree::GetEntry. Int_t GetExpectedType(TClass*& clptr, EDataType& type); Fill expectedClass and expectedType with information on the data type of the; object/values contained in this branch (and thus the type of pointers; expected to be passed to Set[Branch]Address; return 0 in case of success and > 0 in case of failure. const char* GetIconName() const; -- Return icon name depending on type of branch element. Bool_t GetMakeClass() const; Return whether this branch is in a mode where the object are decomposed; or not (Also known as MakeClass mode). Int_t GetMaximum() const; -- Return maximum count value of the branchcount if any. char* GetObject() const; -- Return a pointer to our object. TClass* GetParentClass(); -- Return a pointer to the parent class of the branch element. const char* GetTypeName() const; -- Return type name of element in the branch. Double_t GetValue(Int_t i, Int_t len, Bool_t subarr = kFALSE) const; -- Returns the bran",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TBranchElement.html:22924,error,error,22924,root/html530/TBranchElement.html,https://root.cern,https://root.cern/root/html530/TBranchElement.html,3,['error'],['error']
Availability," Get the branch address. If we are *not* owned by a MakeClass() tree:. If we are a top-level branch, return a pointer; to the pointer to our object. If we are *not* a top-level branch, return a pointer; to our object. If we are owned by a MakeClass() tree:. Return a pointer to our object. void InitInfo(); -- Init the streamer info for the branch class, try to compensate for class code unload/reload and schema evolution. TVirtualCollectionProxy* GetCollectionProxy(); -- Return the collection proxy describing the branch content, if any. TClass* GetCurrentClass(); -- Return a pointer to the current type of the data member corresponding to branch element. Int_t GetEntry(Long64_t entry = 0, Int_t getall = 0); -- Read all branches of a BranchElement and return total number of bytes. If entry = 0, then use current entry number + 1.; If entry < 0, then reset entry number to 0. Returns the number of bytes read from the input buffer.; If entry does not exist, then returns 0.; If an I/O error occurs, then returns -1. See IMPORTANT REMARKS in TTree::GetEntry. Int_t GetExpectedType(TClass*& clptr, EDataType& type); Fill expectedClass and expectedType with information on the data type of the; object/values contained in this branch (and thus the type of pointers; expected to be passed to Set[Branch]Address; return 0 in case of success and > 0 in case of failure. const char* GetIconName() const; -- Return icon name depending on type of branch element. Bool_t GetMakeClass() const; Return whether this branch is in a mode where the object are decomposed; or not (Also known as MakeClass mode). Int_t GetMaximum() const; -- Return maximum count value of the branchcount if any. char* GetObject() const; -- Return a pointer to our object. TClass* GetParentClass(); -- Return a pointer to the parent class of the branch element. const char* GetTypeName() const; -- Return type name of element in the branch. void* GetValuePointer() const; -- Returns pointer to first data element of this branch.;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBranchElement.html:26001,error,error,26001,root/html534/TBranchElement.html,https://root.cern,https://root.cern/root/html534/TBranchElement.html,6,['error'],['error']
Availability," Get the branch address. If we are *not* owned by a MakeClass() tree:. If we are a top-level branch, return a pointer; to the pointer to our object. If we are *not* a top-level branch, return a pointer; to our object. If we are owned by a MakeClass() tree:. Return a pointer to our object. void InitInfo(); -- Init the streamer info for the branch class, try to compensate for class code unload/reload and schema evolution. TVirtualCollectionProxy* GetCollectionProxy(); -- Return the collection proxy describing the branch content, if any. TClass* GetCurrentClass(); -- Return a pointer to the current type of the data member corresponding to branch element. Int_t GetEntry(Long64_t entry = 0, Int_t getall = 0); -- Read all branches of a BranchElement and return total number of bytes. If entry = 0, then use current entry number + 1.; If entry < 0, then reset entry number to 0. Returns the number of bytes read from the input buffer.; If entry does not exist, then returns 0.; If an I/O error occurs, then returns -1. See IMPORTANT REMARKS in TTree::GetEntry. const char* GetIconName() const; -- Return icon name depending on type of branch element. Bool_t GetMakeClass() const; Return whether this branch is in a mode where the object are decomposed; or not (Also known as MakeClass mode). Int_t GetMaximum() const; -- Return maximum count value of the branchcount if any. char* GetObject() const; -- Return a pointer to our object. TClass* GetParentClass(); -- Return a pointer to the parent class of the branch element. const char* GetTypeName() const; -- Return type name of element in the branch. Double_t GetValue(Int_t i, Int_t len, Bool_t subarr = kFALSE) const; -- Returns the branch value. If the leaf is an array, j is the index in the array. If leaf is an array inside a TClonesArray, len should be the length; of the array. If subarr is true, then len is actually the index within the sub-array. void* GetValuePointer() const; -- Returns pointer to first data element of this branch.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TBranchElement.html:22019,error,error,22019,root/html528/TBranchElement.html,https://root.cern,https://root.cern/root/html528/TBranchElement.html,1,['error'],['error']
Availability," Get the branch address. If we are *not* owned by a MakeClass() tree:. If we are a top-level branch, return a pointer; to the pointer to our object. If we are *not* a top-level branch, return a pointer; to our object. If we are owned by a MakeClass() tree:. Return a pointer to our object. void InitInfo(); -- Init the streamer info for the branch class, try to compensate for class code unload/reload and schema evolution. TVirtualCollectionProxy* GetCollectionProxy(); -- Return the collection proxy describing the branch content, if any. TClass* GetCurrentClass(); -- Return a pointer to the current type of the data member corresponding to branch element. Int_t GetEntry(Long64_t entry = 0, Int_t getall = 0); -- Read all branches of a BranchElement and return total number of bytes. If entry = 0, then use current entry number + 1.; If entry < 0, then reset entry number to 0. Returns the number of bytes read from the input buffer.; If entry does not exist, then returns 0.; If an I/O error occurs, then returns -1. See IMPORTANT REMARKS in TTree::GetEntry. const char* GetIconName() const; -- Return icon name depending on type of branch element. Int_t GetMaximum() const; -- Return maximum count value of the branchcount if any. char* GetObject() const; -- Return a pointer to our object. TClass* GetParentClass(); -- Return a pointer to the parent class of the branch element. const char* GetTypeName() const; -- Return type name of element in the branch. Double_t GetValue(Int_t i, Int_t len, Bool_t subarr = kFALSE) const; -- Returns the branch value. If the leaf is an array, j is the index in the array. If leaf is an array inside a TClonesArray, len should be the length; of the array. If subarr is true, then len is actually the index within the sub-array. void* GetValuePointer() const; -- Returns pointer to first data element of this branch.; Currently used only for members of type character. void InitializeOffsets(); -- Initialize the base class subobjects offsets of our sub-bra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBranchElement.html:20767,error,error,20767,root/html526/TBranchElement.html,https://root.cern,https://root.cern/root/html526/TBranchElement.html,1,['error'],['error']
Availability," GetFileInfo(const char* type = ""TTree""); Return the content of this element in the form of a TFileInfo. const char * GetDirectory() const; Return directory where to look for object. void Print(Option_t* options = """") const; Print a TDSetElement. When option=""a"" print full data. void Validate(Bool_t isTree); Validate by opening the file. void Validate(TDSetElement* elem); Validate by checking against another element. Int_t Compare(const TObject* obj) const; Compare elements by filename (and the fFirst). void AddFriend(TDSetElement* friendElement, const char* alias); Add friend TDSetElement to this set. The friend element will be copied to this object. void DeleteFriends(); Deletes the list of friends and all the friends on the list. Long64_t GetEntries(Bool_t istree = kTRUE, Bool_t openfile = kTRUE); Returns number of entries in tree or objects in file.; If not yet defined and 'openfile' is TRUE, get the number from the file; (may considerably slow down the application).; Returns -1 in case of error. Int_t Lookup(Bool_t force = kFALSE); Resolve end-point URL for this element; Return 0 on success and -1 otherwise. void SetEntryList(TObject* aList, Long64_t first = -1, Long64_t num = -1); Set entry (or event) list for this element. void AddAssocObj(TObject* assocobj); Add an associated object to the list. TObject * GetAssocObj(Long64_t i, Bool_t isentry = kFALSE); Get i-th associated object.; If 'isentry' fFirst is subtracted, so that i == fFirst returns the first; object in the list.; If there are not enough elements in the list, the element i%list_size is; returned (if the list has only one element this only one element is always; returned.; This method is used when packet processing consist in processing the objects; in the associated object list. void Streamer(TBuffer& ); Stream an object of class TDSetElement. Bool_t HasBeenLookedUp() const; { return TestBit(kHasBeenLookedUp); }. TDSetElement& operator=(const TDSetElement& ). TList * GetListOfFriends() const; { r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDSetElement.html:10073,error,error,10073,root/html534/TDSetElement.html,https://root.cern,https://root.cern/root/html534/TDSetElement.html,6,['error'],['error']
Availability," GetFileInfo(const char* type = ""TTree""); Return the content of this element in the form of a TFileInfo. const char * GetDirectory() const; Return directory where to look for object. void Print(Option_t* options = """") const; Print a TDSetElement. When option=""a"" print full data. void Validate(Bool_t isTree); Validate by opening the file. void Validate(TDSetElement* elem); Validate by checking against another element. Int_t Compare(const TObject* obj) const; Compare elements by filename (and the fFirst). void AddFriend(TDSetElement* friendElement, const char* alias); Add friend TDSetElement to this set. The friend element will be copied to this object. void DeleteFriends(); Deletes the list of friends and all the friends on the list. Long64_t GetEntries(Bool_t istree = kTRUE, Bool_t openfile = kTRUE); Returns number of entries in tree or objects in file.; If not yet defined and 'openfile' is TRUE, get the number from the file; (may considerably slow down the application).; Returns -1 in case of error. Int_t Lookup(Bool_t force = kFALSE); Resolve end-point URL for this element; Return 0 on success and -1 otherwise. void SetEntryList(TObject* aList, Long64_t first = -1, Long64_t num = -1); Set entry (or event) list for this element. void AddAssocObj(TObject* assocobj); Add an associated object to the list. TObject * GetAssocObj(Long64_t i, Bool_t isentry = kFALSE); Get i-th associated object.; If 'isentry' fFirst is subtracted, so that i == fFirst returns the first; object in the list.; If there are not enough elements in the list, the element i%list_size is; returned (if the list has only one element this only one element is always; returned.; This method is used when packet processing consist in processing the objects; in the associated object list. void Streamer(TBuffer& b); Stream an object of class TDSetElement. Bool_t HasBeenLookedUp() const; (e.g. TObjString describing associated files). { return TestBit(kHasBeenLookedUp); }. TDSetElement& operator=(const TDSetE",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDSetElement.html:9860,error,error,9860,root/html528/TDSetElement.html,https://root.cern,https://root.cern/root/html528/TDSetElement.html,4,['error'],['error']
Availability," GetListOfPragmas(); Return the list of pragmas. const TSeqCollection * GetListOfSysIncFiles(); Return the list of system include files. const TSeqCollection * GetListOfUsers(); reads from ""/etc/passwd"". Char_t AllAgreeOnChar(int i, const TSeqCollection* pList, Int_t& nGoodStrings); [static utility function]. if all the strings in ""*pList"" have the same ith character,; that character is returned.; otherwise 0 is returned. any string ""s"" for which ""ExcludedByFignore(s)"" is true; will be ignored unless All the strings in ""*pList""; are ""ExcludedByFignore()"". in addition, the number of strings which were not; ""ExcludedByFignore()"" is returned in ""nGoodStrings"". void AppendListOfFilesInDirectory(const char[] dirName, TSeqCollection* pList); [static utility function]. adds a TObjString to ""*pList""; for each entry found in the system directory ""dirName"". directories that do not exist are silently ignored. TString DetermineClass(const char[] varName); [static utility function]. returns empty string on failure.; otherwise returns something like this: ""TROOT*"".; fails for non-class types (ie, int, char, etc).; fails for pointers to functions. Bool_t ExcludedByFignore(TString s); [static utility function]. returns true iff ""s"" ends with one of; the strings listed in the ""TabCom.FileIgnore"" resource. TString GetSysIncludePath(); [static utility function]. returns a colon-separated string of directories; that CINT will search when you call #include<...>. returns empty string on failure. Bool_t IsDirectory(const char[] fileName); [static utility function]. calls TSystem::GetPathInfo() to see if ""fileName""; is a system directory. TSeqCollection * NewListOfFilesInPath(const char[] path); [static utility function]. creates a list containing the full path name for each file; in the (colon separated) string ""path1"". memory is allocated with ""new"", so; whoever calls this function takes responsibility for deleting it. Bool_t PathIsSpecifiedInFileName(const TString& fileName); [static uti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TTabCom.html:10412,failure,failure,10412,root/html602/TTabCom.html,https://root.cern,https://root.cern/root/html602/TTabCom.html,4,['failure'],['failure']
Availability," Gigabytes).; 6445/// The function returns the total number of baskets read into memory; 6446/// if negative an error occurred while loading the branches.; 6447/// This method may be called to force branch baskets in memory; 6448/// when random access to branch entries is required.; 6449/// If random access to only a few branches is required, you should; 6450/// call directly TBranch::LoadBaskets.; 6451 ; 6452Int_t TTree::LoadBaskets(Long64_t maxmemory); 6453{; 6454 if (maxmemory > 0) SetMaxVirtualSize(maxmemory);; 6455 ; 6456 TIter next(GetListOfLeaves());; 6457 TLeaf *leaf;; 6458 Int_t nimported = 0;; 6459 while ((leaf=(TLeaf*)next())) {; 6460 nimported += leaf->GetBranch()->LoadBaskets();//break;; 6461 }; 6462 return nimported;; 6463}; 6464 ; 6465////////////////////////////////////////////////////////////////////////////////; 6466/// Set current entry.; 6467///; 6468/// Returns -2 if entry does not exist (just as TChain::LoadTree()).; 6469/// Returns -6 if an error occurs in the notification callback (just as TChain::LoadTree()).; 6470///; 6471/// Calls fNotify->Notify() (if fNotify is not null) when starting the processing of a new tree.; 6472///; 6473/// \note This function is overloaded in TChain.; 6474Long64_t TTree::LoadTree(Long64_t entry); 6475{; 6476 // We have already been visited while recursively looking; 6477 // through the friend trees, let's return; 6478 if (kLoadTree & fFriendLockStatus) {; 6479 // We need to return a negative value to avoid a circular list of friends; 6480 // to think that there is always an entry somewhere in the list.; 6481 return -1;; 6482 }; 6483 ; 6484 // create cache if wanted; 6485 if (fCacheDoAutoInit && entry >=0); 6486 SetCacheSizeAux();; 6487 ; 6488 if (fNotify) {; 6489 if (fReadEntry < 0) {; 6490 fNotify->Notify();; 6491 }; 6492 }; 6493 fReadEntry = entry;; 6494 ; 6495 bool friendHasEntry = false;; 6496 if (fFriends) {; 6497 // Set current entry in friends as well.; 6498 //; 6499 // An alternative would move this code",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:252862,error,error,252862,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['error'],['error']
Availability," Given a file read not in the miss cache, handle (possibly) loading the data. ; Process a cache miss; (pos, len) isn't in the buffer.; The first time we have a miss, we buffer as many baskets we can (up to the maximum size of the TTreeCache) in memory from all branches that are not in the prefetch list.; Subsequent times, we fetch all the buffers corresponding to branches that had previously seen misses. If it turns out the (pos, len) isn't in the list of branches, we treat this as if it was the first miss.; Returns true if we were able to pull the data into the miss cache. ; Definition at line 863 of file TTreeCache.cxx. ◆ ReadBuffer(). Int_t TTreeCache::ReadBuffer ; (; char * ; buf, . Long64_t ; pos, . Int_t ; len . ). overridevirtual . Read buffer at position pos if the request is in the list of prefetched blocks read from fBuffer. ; Otherwise try to fill the cache from the list of selected branches, and recheck if pos is now in the list. Returns:; -1 in case of read failure,; 0 in case not in cache,; 1 in case read from cache. This function overloads TFileCacheRead::ReadBuffer. . Reimplemented from TFileCacheRead.; Definition at line 2027 of file TTreeCache.cxx. ◆ ReadBufferNormal(). Int_t TTreeCache::ReadBufferNormal ; (; char * ; buf, . Long64_t ; pos, . Int_t ; len . ). virtual . Old method ReadBuffer before the addition of the prefetch mechanism. ; Definition at line 1927 of file TTreeCache.cxx. ◆ ReadBufferPrefetch(). Int_t TTreeCache::ReadBufferPrefetch ; (; char * ; buf, . Long64_t ; pos, . Int_t ; len . ). virtual . Used to read a chunk from a block previously fetched. ; It will call FillBuffer even if the cache lookup succeeds, because it will try to prefetch the next block as soon as we start reading from the current block. ; Definition at line 1986 of file TTreeCache.cxx. ◆ ResetCache(). void TTreeCache::ResetCache ; (; ). virtual . This will simply clear the cache. ; Reimplemented in TTreeCacheUnzip.; Definition at line 2040 of file TTreeCache.cxx. ◆ ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTTreeCache.html:46768,failure,failure,46768,doc/v632/classTTreeCache.html,https://root.cern,https://root.cern/doc/v632/classTTreeCache.html,2,['failure'],['failure']
Availability," Graphics pad. ; The Canvas class. ; A Canvas is an area mapped to a window directly under the control of the display manager. A ROOT session may have several canvases open at any given time.; A Canvas may be subdivided into independent graphical areas: the Pads. A canvas has a default pad which has the name of the canvas itself. An example of a Canvas layout is sketched in the picture below. This canvas contains two pads named P1 and P2. Both Canvas, P1 and P2 can be moved, grown, shrunk using the normal rules of the Display manager.; Once objects have been drawn in a canvas, they can be edited/moved by pointing directly to them. The cursor shape is changed to suggest the type of action that one can do on this object. Clicking with the right mouse button on an object pops-up a contextmenu with a complete list of actions possible on this object.; A graphical editor may be started from the canvas ""View"" menu under the menu entry ""Toolbar"".; An interactive HELP is available by clicking on the HELP button at the top right of the canvas. It gives a short explanation about the canvas' menus.; A canvas may be automatically divided into pads via TPad::Divide.; At creation time, no matter if in interactive or batch mode, the constructor defines the size of the canvas window (including the size of the window manager's decoration). To define precisely the graphics area size of a canvas in the interactive mode, the following four lines of code should be used: {; Double_t w = 600;; Double_t h = 600;; auto c = new TCanvas(""c"", ""c"", w, h);; c->SetWindowSize(w + (w - c->GetWw()), h + (h - c->GetWh()));; }; c#define c(i)Definition RSha256.hxx:101; h#define h(i)Definition RSha256.hxx:106; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; TCanvasThe Canvas class.Definition TCanvas.h:23; double; and in the batch mode simply do: c->SetCanvasSize(w,h);; If the canvas size exceeds the window size, scroll bars will be added to the canvas This allows to display very large canvases (even bigg",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCanvas.html:1383,avail,available,1383,doc/v632/classTCanvas.html,https://root.cern,https://root.cern/doc/v632/classTCanvas.html,2,['avail'],['available']
Availability," Graphs with different draw options of error bars. In addition, it can be drawn with the “Z” option to leave off the small lines at the end of the error bars. If option contains “>”, an arrow is drawn at the end of the error bars. If option contains “|>”, a full arrow is drawn at the end of the error bars. The size of the arrow is set to 2/3 of the marker size.; The option “[]” is interesting to superimpose systematic errors on top of the graph with the statistical errors. When it is specified, only the end vertical/horizontal lines of the error bars are drawn.; To control the size of the lines at the end of the error bars (when option 1 is chosen) use SetEndErrorSize(np). By default np=1; np represents the number of pixels.; gStyle->SetEndErrorSize(np);; The four parameters of TGraphErrors are: X, Y (as in TGraph), X-errors, and Y-errors - the size of the errors in the x and y direction. Next example is $ROOTSYS/tutorials/graphs/gerrors.C.; {; c1 = new TCanvas(""c1"",""A Simple Graph with error bars"",200,10,700,500);; c1->SetGrid();. // create the coordinate arrays; Int_t n = 10;; Float_t x[n] = {-.22,.05,.25,.35,.5,.61,.7,.85,.89,.95};; Float_t y[n] = {1,2.9,5.6,7.4,9,9.6,8.7,6.3,4.5,1};. // create the error arrays; Float_t ex[n] = {.05,.1,.07,.07,.04,.05,.06,.07,.08,.05};; Float_t ey[n] = {.8,.7,.6,.5,.4,.4,.5,.6,.7,.8};. // create the TGraphErrors and draw it; gr = new TGraphErrors(n,x,y,ex,ey);; gr->SetTitle(""TGraphErrors Example"");; gr->SetMarkerColor(4);; gr->SetMarkerStyle(21);; gr->Draw(""ALP"");; c1->Update();; }; 4.4 Graphs with Asymmetric Error Bars. A graph with asymmetric error bars. A TGraphAsymmErrors is a TGraph with asymmetric error bars. It inherits the various draw format options from TGraph. Its method Paint(Option_t *option) paints the TGraphAsymmErrors with the current attributes. You can set the following additional options for drawing:. “z” or “Z”the horizontal and vertical small lines are not drawn at the end of error bars; “>”an arrow is drawn a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:147049,error,error,147049,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['error'],['error']
Availability," Guide ; .  . Loading...; Searching...; No Matches. ErrorIntegral.C File ReferenceTutorials » Fit Tutorials. Detailed Description; Estimate the error in the integral of a fitted function taking into account the errors in the parameters resulting from the fit. ; The error is estimated also using the correlations values obtained from the fit; run the macro doing:; .x ErrorIntegral.C; After having computed the integral and its error using the integral and the integral error using the generic functions TF1::Integral and TF1::IntegralError, we compute the integrals and its error analytically using the fact that the fitting function is \( f(x) = p[1]* sin(p[0]*x) \).; Therefore we have:; integral in [0,1] : ic = p[1]* (1-std::cos(p[0]) )/p[0]; derivative of integral with respect to p0: c0c = p[1] * (std::cos(p[0]) + p[0]*std::sin(p[0]) -1.)/p[0]/p[0]; derivative of integral with respect to p1: c1c = (1-std::cos(p[0]) )/p[0]. and then we can compute the integral error using error propagation and the covariance matrix for the parameters p obtained from the fit.; integral error : sic = std::sqrt( c0c*c0c * covMatrix(0,0) + c1c*c1c * covMatrix(1,1) + 2.* c0c*c1c * covMatrix(0,1)); Note that, if possible, one should fit directly the function integral, which are the number of events of the different components (e.g. signal and background). In this way one obtains a better and more correct estimate of the integrals uncertainties, since they are obtained directly from the fit without using the approximation of error propagation. This is possible in ROOT. when using the TF1NormSum class, see the tutorial fitNormSum.C. ; ****************************************; Minimizer is Minuit2 / Migrad; Chi2 = 49.5952; NDf = 48; Edm = 1.61787e-06; NCalls = 58; p0 = 3.13205 +/- 0.0312726 ; p1 = 29.7625 +/- 1.00876 ; Covariance matrix from the fit ; 2x2 matrix is as follows; ; | 0 | 1 |; -------------------------------; 0 | 0.000978 0.009147 ; 1 | 0.009147 1.018 ; ; Integral = 19.0047 +/- 0.6164",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ErrorIntegral_8C.html:1053,error,error,1053,doc/master/ErrorIntegral_8C.html,https://root.cern,https://root.cern/doc/master/ErrorIntegral_8C.html,2,['error'],['error']
Availability," HYpoTestInverter) then the expected p-values are also merged. This is equivalent at merging the pseudo-data. However there can be an inconsistency if the expected p-values have been obtained with different toys. In this case the merge is done but a warning message is printed. ; Definition at line 318 of file HypoTestInverterResult.cxx. ◆ Add() [2/2]. bool HypoTestInverterResult::Add ; (; double ; x, . const HypoTestResult & ; result . ). add the result of a single point (an HypoTestRsult) ; Add a single point result (an HypoTestResult) ; Definition at line 407 of file HypoTestInverterResult.cxx. ◆ ArraySize(). int RooStats::HypoTestInverterResult::ArraySize ; (; ); const. inline . number of entries in the results array ; Definition at line 94 of file HypoTestInverterResult.h. ◆ CalculateEstimatedError(). double HypoTestInverterResult::CalculateEstimatedError ; (; double ; target, . bool ; lower = true, . double ; xmin = 1, . double ; xmax = 0.0 . ). private . Return an error estimate on the upper(lower) limit. ; This is the error on either CLs or CLsplusb divided by an estimate of the slope at this point. ; Definition at line 972 of file HypoTestInverterResult.cxx. ◆ Class(). static TClass * RooStats::HypoTestInverterResult::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooStats::HypoTestInverterResult::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooStats::HypoTestInverterResult::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 213 of file HypoTestInverterResult.h. ◆ CLb(). double HypoTestInverterResult::CLb ; (; int ; index); const. return the observed CLb value for the i-th entry ; function to return the observed CLb value for the i-th entry ; Definition at line 476 of file HypoTestInverterResult.cxx. ◆ CLbError(). double HypoTestInverterResult::CLbError ; (; int ; index); const. return the observed CLb value ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooStats_1_1HypoTestInverterResult.html:23809,error,error,23809,doc/master/classRooStats_1_1HypoTestInverterResult.html,https://root.cern,https://root.cern/doc/master/classRooStats_1_1HypoTestInverterResult.html,1,['error'],['error']
Availability," Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » GRAF3D; » EVE; » TEveCompositeFrame. class TEveCompositeFrame: public TGCompositeFrame. Abstract base-class for frame-slots that encompass EVE-windows; (sub-classes of TEveWindow). The EVE-frame classes are managed by their embedded EVE-windows and; mostly serve as an interface to particular ROOT widgets; (sub-classes of TGCompositeFrame) they are embedded into. This base-class, a sub-class of a vertical composite-frame, creates; also the title-bar which can be used to interact with the embedded; window. Optionally, the title-bar can be replaced with a mini-bar; (a 4-pixel thin bar at the top). By clicking on the mini-bar, the; title-bar is restored. Sub-classes provide for specific behaviour and expectations of; individual ROOT GUI container frames. POSSIBLE EXTENSIONS. No frame is drawn around this composite-frame - frame style could be; available as a (static) member. Menus of embedded windows could also be managed - hidden or transposed; to a top-level menubar. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~TEveCompositeFrame(); voidTObject::AbstractMethod(const char* method) const; virtual voidAcquireEveWindow(TEveWindow* ew); voidActionPressed(); virtual voidTGFrame::Activate(Bool_t); virtual voidTGCompositeFrame::AddFrame(TGFrame* f, TGLayoutHints* l = 0); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveCompositeFrame.html:1089,avail,available,1089,root/html528/TEveCompositeFrame.html,https://root.cern,https://root.cern/root/html528/TEveCompositeFrame.html,10,['avail'],['available']
Availability," Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » HIST; » HIST; » TMultiDimFit. class TMultiDimFit: public TNamed. /*. Multidimensional Fits in ROOT. Overview. A common problem encountered in different fields of applied science is; to find an expression for one physical quantity in terms of several; others, which are directly measurable. An example in high energy physics is the evaluation of the momentum of; a charged particle from the observation of its trajectory in a magnetic; field. The problem is to relate the momentum of the particle to the; observations, which may consists of of positional measurements at; intervals along the particle trajectory. The exact functional relationship between the measured quantities; (e.g., the space-points) and the dependent quantity (e.g., the; momentum) is in general not known, but one possible way of solving the; problem, is to find an expression which reliably approximates the; dependence of the momentum on the observations. This explicit function of the observations can be obtained by a; least squares fitting procedure applied to a representive; sample of the data, for which the dependent quantity (e.g., momentum); and the independent observations are known. The function can then be; used to compute the quantity of interest for new observations of the; independent variables. This class TMultiDimFit implements such a procedure in; ROOT. It is largely based on the CERNLIB MUDIFI package; [2]. Though the basic concepts are still sound, and; therefore kept, a few implementation details have changed, and this; class can take advantage of MINUIT [4] to improve the errors; of the fitting, thanks to the class TMinuit. In [5] and [6] H. Wind demonstrates the utility; of this procedure in the context of tracking, magnetic field; parameterisation, and so on. The outline of the method used in this; class is based on Winds",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiDimFit.html:1086,reliab,reliably,1086,root/html528/TMultiDimFit.html,https://root.cern,https://root.cern/root/html528/TMultiDimFit.html,4,['reliab'],['reliably']
Availability," Homepage; Class Index; Class Hierarchy. Search. Source:; header file. viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MINUIT2; » ROOT::Minuit2::MnStrategy. class ROOT::Minuit2::MnStrategy. API class for defining three levels of strategies: low (0), medium (1),; high (>=2);; acts on: Migrad (behavioural),; Minos (lowers strategy by 1 for Minos-own minimization),; 	 Hesse (iterations),; 	 Numerical2PDerivative (iterations). Function Members (Methods); public:. ~MnStrategy(); unsigned intGradientNCycles() const; doubleGradientStepTolerance() const; doubleGradientTolerance() const; doubleHessianG2Tolerance() const; unsigned intHessianGradientNCycles() const; unsigned intHessianNCycles() const; doubleHessianStepTolerance() const; boolIsHigh() const; boolIsLow() const; boolIsMedium() const; ROOT::Minuit2::MnStrategyMnStrategy(); ROOT::Minuit2::MnStrategyMnStrategy(unsigned int); ROOT::Minuit2::MnStrategyMnStrategy(const ROOT::Minuit2::MnStrategy&); ROOT::Minuit2::MnStrategy&operator=(const ROOT::Minuit2::MnStrategy&); voidSetGradientNCycles(unsigned int n); voidSetGradientStepTolerance(double stp); voidSetGradientTolerance(double toler); voidSetHessianG2Tolerance(double toler); voidSetHessianGradientNCycles(unsigned int n); voidSetHessianNCycles(unsigned int n); voidSetHessianStepTolerance(double stp); voidSetHighStrategy(); voidSetLowStrategy(); voidSetMediumStrategy(); unsigned intStrategy() const. Data Members; private:. unsigned intfGradNCyc; doublefGradTlr; doublefGradTlrStp; unsigned intfHessGradNCyc; unsigned intfHessNCyc; doublefHessTlrG2; doublefHessTlrStp; unsigned intfStrategy. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MnStrategy(); default strategy. explicit MnStrategy(unsigned int ); user defined strategy (0, 1, >=2). ~MnStrategy(); {}. unsigned int Strategy() const; {return fStrategy;}. unsigned int GradientNCycles() const; {return fGradNCyc;}. double",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Minuit2__MnStrategy.html:1250,toler,toler,1250,root/html528/ROOT__Minuit2__MnStrategy.html,https://root.cern,https://root.cern/root/html528/ROOT__Minuit2__MnStrategy.html,2,['toler'],['toler']
Availability," Homepage; Class Index; Class Hierarchy. Search. Source:; header file. viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MINUIT2; » ROOT::Minuit2::MnStrategy. class ROOT::Minuit2::MnStrategy. API class for defining three levels of strategies: low (0), medium (1),; high (>=2);; acts on: Migrad (behavioural),; Minos (lowers strategy by 1 for Minos-own minimization),; 	 Hesse (iterations),; 	 Numerical2PDerivative (iterations). Function Members (Methods); public:. ~MnStrategy(); unsigned intGradientNCycles() const; doubleGradientStepTolerance() const; doubleGradientTolerance() const; doubleHessianG2Tolerance() const; unsigned intHessianGradientNCycles() const; unsigned intHessianNCycles() const; doubleHessianStepTolerance() const; boolIsHigh() const; boolIsLow() const; boolIsMedium() const; ROOT::Minuit2::MnStrategyMnStrategy(); ROOT::Minuit2::MnStrategyMnStrategy(unsigned int); ROOT::Minuit2::MnStrategyMnStrategy(const ROOT::Minuit2::MnStrategy&); ROOT::Minuit2::MnStrategy&operator=(const ROOT::Minuit2::MnStrategy&); voidSetGradientNCycles(unsigned int n); voidSetGradientStepTolerance(double stp); voidSetGradientTolerance(double toler); voidSetHessianG2Tolerance(double toler); voidSetHessianGradientNCycles(unsigned int n); voidSetHessianNCycles(unsigned int n); voidSetHessianStepTolerance(double stp); voidSetHighStrategy(); voidSetLowStrategy(); voidSetMediumStrategy(); unsigned intStrategy() const. Data Members; private:. unsigned intfGradNCyc; doublefGradTlr; doublefGradTlrStp; unsigned intfHessGradNCyc; unsigned intfHessNCyc; doublefHessTlrG2; doublefHessTlrStp; unsigned intfStrategy. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; MnStrategy(); default strategy. explicit MnStrategy(unsigned int); user defined strategy (0, 1, >=2). ~MnStrategy(); {}. unsigned int Strategy() const; {return fStrategy;}. unsigned int GradientNCycles() const; {return fGradNCyc;}. double ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Minuit2__MnStrategy.html:1250,toler,toler,1250,root/html526/ROOT__Minuit2__MnStrategy.html,https://root.cern,https://root.cern/root/html526/ROOT__Minuit2__MnStrategy.html,2,['toler'],['toler']
Availability," I push_back a Track object in the vector, CINT complains. e.g.; vector testVector;; Track obj;; ...; testVector.push_back(obj);; gives:Error: Can't call vector::push_back(timeStamp) in current scope MyAnalysisMasterTreeMaker.C:358:; Possible candidates are...; (in vector); *** Interpreter error recovered ***. Although, if I use a vector or vector or vector push_back works fine.; ; . What is the difference between a TFolder and a TDirectory? . TFolder manages a hierrachy of objects in memory.; TDirectory is doing it for a file.; One can save the TFolder structure to a directory in a file.; ; . Ubuntu: No backtrace (stacktrace) when ROOT crashes . Enable /proc/sys/kernel/yama/ptrace_scope or edit /etc/sysctl.d/10-ptrace.conf. See this blog entry for details. ; . Can I integrate ROOT into my CMake build? . Absolutely. The CMake command find_package() will set all needed ROOT related variables, which can be used to compile and link one's own code. An example from the ROOT Event example (found in root/test) can be downloaded here. Just un-tar the attached file and run:. cd event/build; cmake ..; make. I use CMake to build my own code, and I would like to use ROOT in that code. Is there a way to wire ROOT into the CMake build files? Something like FindROOT.cmake? ; . Windows: Why must debug (non-debug) compiled code be linked against debug (non-debug) ROOT? . Microsoft's STL classes (std::string, std::vector,...) are different for debug and optimized mode. When calling a ROOT function that expects a STL object as an argument, the caller (e.g. your code) and ROOT must agree on what the object looks like. Thus if you link against ROOT libraries built as debug (non-debug) you must also compile your code as debug (non-debug). ACLiC does that automatically for you. ; . Changing the Displayed Title in Canvas. . Disable the title and add yourself your own title with a TPaveLabel: ; gStyle->SetOptTitle(0);; TPaveLabel *title = new TPaveLabel(.11,.95,.35,.99,""new title"",""brndc"");",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/d/faq-page.html:4928,down,downloaded,4928,d/faq-page.html,https://root.cern,https://root.cern/d/faq-page.html,1,['down'],['downloaded']
Availability," IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Multiply. The function return kFALSE if the Multiply operation failed. void Paint(Option_t* option = """"); Control routine to paint any kind of histograms. This function is automatically called by TCanvas::Update.; (see TH1::Draw for the list of options). TH1 * Rebin(Int_t ngroup = 2, const char* newname = """", const Double_t* xbins = 0); Rebin this histogram. -case 1 xbins=0; If newname is blank (default), the current histogram is modified and; a pointer to it is returned. If newname is not blank, the current histogram is not modified, and a; new histogram is returned which is a Clone of the current histogram; with its name set to newname. The parameter ngroup indicates how many bins of this have to be merged; into one bin of the result. If the original histogram has errors stored (via Sumw2), the resulting; histograms has new errors correctly calculated. examples: if h1 is an existing TH1F histogram with 100 bins; h1->Rebin(); //merges two bins in one in h1: previous contents of h1 are lost; h1->Rebin(5); //merges five bins in one in h1; TH1F *hnew = h1->Rebin(5,""hnew""); // creates a new histogram hnew; // merging 5 bins of h1 in one bin. NOTE: If ngroup is not an exact divider of the number of bins,; the top limit of the rebinned histogram is reduced; to the upper edge of the last bin that can make a complete; group. The remaining bins are added to the overflow bin.; Statistics will be recomputed from the new bin contents. -case 2 xbins!=0; A new histogram is created (you should specify newname).; The parameter ngroup is the number of variable size bins in the created histogram.; The array xbins must contain ngroup+1 elements that represent the low-edges; of the bins.; If the original histogram has errors stored (via Sumw2), the resulting; histograms has new errors correctly",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH1.html:102982,error,errors,102982,root/html602/TH1.html,https://root.cern,https://root.cern/root/html602/TH1.html,8,['error'],['errors']
Availability," IMPORTANT NOTE; 643/// You must call Draw before calling this function. The returned histogram; 644/// depends on the selected Draw options.; 645 ; 646TAxis *THStack::GetZaxis() const; 647{; 648 TH1 *h = GetHistogram();; 649 if (!h) return nullptr;; 650 if (h->GetDimension() == 1); 651 Warning(""GetZaxis"",""1D Histograms don't have a Z axis"");; 652 return h->GetZaxis();; 653}; 654 ; 655////////////////////////////////////////////////////////////////////////////////; 656/// List histograms in the stack.; 657 ; 658void THStack::ls(Option_t *option) const; 659{; 660 TROOT::IndentLevel();; 661 std::cout <<IsA()->GetName(); 662 <<"" Name= ""<<GetName()<<"" Title= ""<<GetTitle()<<"" Option=""<<option<<std::endl;; 663 TROOT::IncreaseDirLevel();; 664 if (fHists) fHists->ls(option);; 665 TROOT::DecreaseDirLevel();; 666}; 667////////////////////////////////////////////////////////////////////////////////; 668/// Merge the THStack in the TList into this stack.; 669/// Returns the total number of histograms in the result or -1 in case of an error.; 670 ; 671Long64_t THStack::Merge(TCollection* li, TFileMergeInfo * /* info */); 672{; 673 if (li==nullptr || li->GetEntries()==0) {; 674 return fHists->GetEntries();; 675 }; 676 TIter next(li);; 677 TList histLists;; 678 while (TObject* o = next()) {; 679 THStack *stack = dynamic_cast<THStack*> (o);; 680 if (!stack) {; 681 Error(""Merge"",; 682 ""Cannot merge - an object which doesn't inherit from THStack found in the list"");; 683 return -1;; 684 }; 685 histLists.Add(stack->GetHists());; 686 }; 687 fHists->Merge(&histLists);; 688 return fHists->GetEntries();; 689}; 690 ; 691////////////////////////////////////////////////////////////////////////////////; 692/// Note: this method invalidates the sum of histograms.; 693 ; 694void THStack::Modified(); 695{; 696 if (!fStack) return;; 697 fStack->Delete();; 698 delete fStack;; 699 fStack = nullptr;; 700 delete fHistogram;; 701 fHistogram = nullptr;; 702}; 703 ; 704//////////////////////////////////",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THStack_8cxx_source.html:22706,error,error,22706,doc/master/THStack_8cxx_source.html,https://root.cern,https://root.cern/doc/master/THStack_8cxx_source.html,1,['error'],['error']
Availability," IMT flush basketsDefinition TTree.h:160; TTree::SetCacheLearnEntriesvirtual void SetCacheLearnEntries(Int_t n=10)Interface to TTreeCache to set the number of entries for the learning phase.Definition TTree.cxx:8865; TTree::fEntryListTEntryList * fEntryList! Pointer to event selection list (if one)Definition TTree.h:126; TTree::GetTreeIndexvirtual TVirtualIndex * GetTreeIndex() constDefinition TTree.h:558; TTree::fExternalFriendsTList * fExternalFriends! List of TFriendsElement pointing to us and need to be notified of LoadTree. Content not owned.Definition TTree.h:131; TTree::Mergevirtual Long64_t Merge(TCollection *list, Option_t *option="""")Merge the trees in the TList into this tree.Definition TTree.cxx:6890; TTree::SetMaxVirtualSizevirtual void SetMaxVirtualSize(Long64_t size=0)Definition TTree.h:665; TTree::DropBasketsvirtual void DropBaskets()Remove some baskets from memory.Definition TTree.cxx:4518; TTree::SetAutoSavevirtual void SetAutoSave(Long64_t autos=-300000000)In case of a program crash, it will be possible to recover the data in the tree up to the last AutoSa...Definition TTree.cxx:8342; TTree::fMaxEntryLoopLong64_t fMaxEntryLoopMaximum number of entries to process.Definition TTree.h:98; TTree::SetParallelUnzipvirtual void SetParallelUnzip(bool opt=true, Float_t RelSize=-1)Enable or disable parallel unzipping of Tree buffers.Definition TTree.cxx:9291; TTree::SetDirectoryvirtual void SetDirectory(TDirectory *dir)Change the tree's directory.Definition TTree.cxx:8966; TTree::SortBranchesByTimevoid SortBranchesByTime()Sorts top-level branches by the last average task time recorded per branch.Definition TTree.cxx:5834; TTree::Deletevoid Delete(Option_t *option="""") overrideDelete this tree from memory or/and disk.Definition TTree.cxx:3747; TTree::GetBranchRefvirtual TBranchRef * GetBranchRef() constDefinition TTree.h:450; TTree::Processvirtual Long64_t Process(const char *filename, Option_t *option="""", Long64_t nentries=kMaxEntries, Long64_t firstentry=0)Pro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTree_8cxx_source.html:447232,recover,recover,447232,doc/master/TTree_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTree_8cxx_source.html,1,['recover'],['recover']
Availability," If a bin has N data points all with the same value Y (especially; possible when dealing with integers), the spread in Y for that bin; is zero, and the uncertainty assigned is also zero, and the bin is; ignored in making subsequent fits. If SQRT(Y) was the correct error; in the case above, then SQRT(Y)/SQRT(N) would be the correct error here.; In fact, any bin with non-zero number of entries N but with zero spread; should have an uncertainty SQRT(Y)/SQRT(N). Now, is SQRT(Y)/SQRT(N) really the correct uncertainty?; that it is only in the case where the Y variable is some sort; of counting statistics, following a Poisson distribution. This should; probably be set as the default case. However, Y can be any variable; from an original NTUPLE, not necessarily distributed ""Poissonly"".; The computation of errors is based on the parameter option:; option:; ' ' (Default) Errors are Spread/SQRT(N) for Spread.ne.0. ,; "" "" SQRT(Y)/SQRT(N) for Spread.eq.0,N.gt.0 ,; "" "" 0. for N.eq.0; 's' Errors are Spread for Spread.ne.0. ,; "" "" SQRT(Y) for Spread.eq.0,N.gt.0 ,; "" "" 0. for N.eq.0; 'i' Errors are Spread/SQRT(N) for Spread.ne.0. ,; "" "" 1./SQRT(12.*N) for Spread.eq.0,N.gt.0 ,; "" "" 0. for N.eq.0. The third case above corresponds to Integer Y values for which the; uncertainty is +-0.5, with the assumption that the probability that Y; takes any value between Y-0.5 and Y+0.5 is uniform (the same argument; goes for Y uniformly distributed between Y and Y+1); this would be; useful if Y is an ADC measurement, for example.; Other, fancier options; would be possible, at the cost of adding one more parameter to the PROFILE; command. For example, if all Y variables are distributed according to some; known Gaussian of standard deviation Sigma (which can be different for each measurement),; and the profile has been filled with a weight equal to 1/Sigma**2,; then one cam use the following option:. 'G' Errors are 1./SQRT(Sum(1/sigma**2)); For example, this would be useful when all Y's are experime",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProfile.html:29570,Error,Errors,29570,root/html532/TProfile.html,https://root.cern,https://root.cern/root/html532/TProfile.html,1,['Error'],['Errors']
Availability," If a collection is deleted, its objects are not. The user can force a collection to delete its objects, but that is the user’s choice.; 16.1.2 Determining the Class of Contained Objects; Most containers may hold heterogeneous collections of objects and then it is left to the user to correctly cast the TObject pointer to the right class. Casting to the wrong class will give wrong results and may well crash the program! Therefore, the user has to be very careful. Often a container only contains one class of objects, but if it really contains a mixture, it is possible to ask each object about its class using the InheritsFrom method.; For example if myObject is a TObject pointer:; if (myObject->InheritsFrom(""TParticle"") {; printf(""myObject is a TParticlen"");; }; As the name suggests, this test works even if the object is a subclass of TParticle. The member function IsA() can be used instead of InheritsFrom to make the test exact. The InheritsFrom and IsA methods use the extensive Run Time Type Information (RTTI) available via the ROOT meta-classes.; 16.1.3 Types of Collections; The ROOT system implements the following basic types of collections: unordered collections, ordered collections and sorted collections. Next figure shows the inheritance hierarchy for the primary collection classes. All primary collection classes derive from the abstract base class TCollection. The inheritance hierarchy of the primary collection classes. 16.1.4 Ordered Collections (Sequences); Sequences are collections that are externally ordered because they maintain internal elements according to the order in which they were added. The following sequences are available:. TList; THashList; TOrdCollection; TObjArray; TClonesArray. The TOrdCollection, TObjArray as well as the TClonesArray can be sorted using their Sort() member function (for this, the stored objects must provide a comparison function by overriding TObject::Compare() and also must enable sorting by overriding TObject::IsSortable() ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:842352,avail,available,842352,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['avail'],['available']
Availability," If a draw option is specified, it will be used to draw the graph,; otherwise the graph will be drawn with the option specified in; TMultiGraph::Draw. Use GetDrawOption to return the option specified; when drawing the TMultiGraph. TFitResultPtr Fit(const char* formula, Option_t* option = """", Option_t* goption = """", Axis_t xmin = 0, Axis_t xmax = 0); Fit this graph with function with name fname. interface to TF1::Fit(TF1 *f1... TFitResultPtr Fit(TF1* f1, Option_t* option = """", Option_t* goption = """", Axis_t rxmin = 0, Axis_t rxmax = 0); Fit this multigraph with function f1. In this function all graphs of the multigraph are fitted simultaneously. f1 is an already predefined function created by TF1.; Predefined functions such as gaus, expo and poln are automatically; created by ROOT. The list of fit options is given in parameter option.; option = ""W"" Set all errors to 1; = ""U"" Use a User specified fitting algorithm (via SetFCN); = ""Q"" Quiet mode (minimum printing); = ""V"" Verbose mode (default is between Q and V); = ""B"" Use this option when you want to fix one or more parameters; and the fitting function is like ""gaus"",""expo"",""poln"",""landau"".; = ""R"" Use the Range specified in the function range; = ""N"" Do not store the graphics function, do not draw; = ""0"" Do not plot the result of the fit. By default the fitted function; is drawn unless the option""N"" above is specified.; = ""+"" Add this new fitted function to the list of fitted functions; (by default, any previous function is deleted); = ""C"" In case of linear fitting, not calculate the chisquare; (saves time); = ""F"" If fitting a polN, switch to minuit fitter; = ""ROB"" In case of linear fitting, compute the LTS regression; coefficients (robust(resistant) regression), using; the default fraction of good points; ""ROB=0.x"" - compute the LTS regression coefficients, using; 0.x as a fraction of good points. When the fit is drawn (by default), the parameter goption may be used; to specify a list of graphics options. See TGraph::P",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TMultiGraph.html:14662,error,errors,14662,root/html530/TMultiGraph.html,https://root.cern,https://root.cern/root/html530/TMultiGraph.html,9,['error'],['errors']
Availability," If ignore is true ignore the specified signal, else restore previous behaviour. ; Reimplemented from TSystem.; Definition at line 895 of file TUnixSystem.cxx. ◆ Init(). Bool_t TUnixSystem::Init ; (; ). overridevirtual . Initialize Unix system interface. ; Reimplemented from TSystem.; Definition at line 595 of file TUnixSystem.cxx. ◆ IsA(). TClass * TUnixSystem::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TSystem.; Definition at line 219 of file TUnixSystem.h. ◆ IsPathLocal(). Bool_t TUnixSystem::IsPathLocal ; (; const char * ; path). overridevirtual . Returns TRUE if the url in 'path' points to the local file system. ; This is used to avoid going through the NIC card for local operations. ; Reimplemented from TSystem.; Definition at line 1643 of file TUnixSystem.cxx. ◆ Link(). int TUnixSystem::Link ; (; const char * ; from, . const char * ; to . ). overridevirtual . Create a link from file1 to file2. ; Returns 0 when successful, -1 in case of failure. ; Reimplemented from TSystem.; Definition at line 1686 of file TUnixSystem.cxx. ◆ ListLibraries(). void TUnixSystem::ListLibraries ; (; const char * ; regexp = """"). overridevirtual . List all loaded shared libraries. ; Reimplemented from TSystem.; Definition at line 2848 of file TUnixSystem.cxx. ◆ ListSymbols(). void TUnixSystem::ListSymbols ; (; const char * ; module, . const char * ; re = """" . ). overridevirtual . List symbols in a shared library. ; Reimplemented from TSystem.; Definition at line 2840 of file TUnixSystem.cxx. ◆ Load(). int TUnixSystem::Load ; (; const char * ; module, . const char * ; entry = """", . Bool_t ; system = kFALSE . ). overridevirtual . Load a shared library. ; Returns 0 on successful loading, 1 in case lib was already loaded and -1 in case lib does not exist or in case of error. ; Reimplemented from TSystem.; Definition at line 2824 of file TUnixSystem.cxx. ◆ MakeDirectory(). int TUnixSystem::MakeDirectory ; (; const char * ; name",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnixSystem.html:58155,failure,failure,58155,doc/master/classTUnixSystem.html,https://root.cern,https://root.cern/doc/master/classTUnixSystem.html,1,['failure'],['failure']
Availability," If it returns 1, civetweb assumes the calback already did this.; 16540 * If it returns -1, initializing ssl fails. */; 16541 if (callback_ret < 0) {; 16542 mg_cry_ctx_internal(phys_ctx,; 16543 ""SSL callback returned error: %i"",; 16544 callback_ret);; 16545 return 0;; 16546 }; 16547 if (callback_ret > 0) {; 16548 /* Callback did everything. */; 16549 return 1;; 16550 }; 16551 ; 16552 /* If a domain callback has been specified, call it. */; 16553 callback_ret = (phys_ctx->callbacks.init_ssl_domain == NULL); 16554 ? 0; 16555 : (phys_ctx->callbacks.init_ssl_domain(; 16556 dom_ctx->config[AUTHENTICATION_DOMAIN],; 16557 dom_ctx->ssl_ctx,; 16558 phys_ctx->user_data));; 16559 ; 16560 /* If domain callback returns 0, civetweb sets up the SSL certificate.; 16561 * If it returns 1, civetweb assumes the calback already did this.; 16562 * If it returns -1, initializing ssl fails. */; 16563 if (callback_ret < 0) {; 16564 mg_cry_ctx_internal(phys_ctx,; 16565 ""Domain SSL callback returned error: %i"",; 16566 callback_ret);; 16567 return 0;; 16568 }; 16569 if (callback_ret > 0) {; 16570 /* Domain callback did everything. */; 16571 return 1;; 16572 }; 16573 ; 16574 /* Use some combination of start time, domain and port as a SSL; 16575 * context ID. This should be unique on the current machine. */; 16576 md5_init(&md5state);; 16577 clock_gettime(CLOCK_MONOTONIC, &now_mt);; 16578 md5_append(&md5state, (const md5_byte_t *)&now_mt, sizeof(now_mt));; 16579 md5_append(&md5state,; 16580 (const md5_byte_t *)phys_ctx->dd.config[LISTENING_PORTS],; 16581 strlen(phys_ctx->dd.config[LISTENING_PORTS]));; 16582 md5_append(&md5state,; 16583 (const md5_byte_t *)dom_ctx->config[AUTHENTICATION_DOMAIN],; 16584 strlen(dom_ctx->config[AUTHENTICATION_DOMAIN]));; 16585 md5_append(&md5state, (const md5_byte_t *)phys_ctx, sizeof(*phys_ctx));; 16586 md5_append(&md5state, (const md5_byte_t *)dom_ctx, sizeof(*dom_ctx));; 16587 md5_finish(&md5state, ssl_context_id);; 16588 ; 16589 SSL_CTX_set_session_id_context(do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/civetweb_8c_source.html:490914,error,error,490914,doc/master/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/master/civetweb_8c_source.html,1,['error'],['error']
Availability," If it returns 1, civetweb assumes the calback already did this.; 16541 * If it returns -1, initializing ssl fails. */; 16542 if (callback_ret < 0) {; 16543 mg_cry_ctx_internal(phys_ctx,; 16544 ""SSL callback returned error: %i"",; 16545 callback_ret);; 16546 return 0;; 16547 }; 16548 if (callback_ret > 0) {; 16549 /* Callback did everything. */; 16550 return 1;; 16551 }; 16552 ; 16553 /* If a domain callback has been specified, call it. */; 16554 callback_ret = (phys_ctx->callbacks.init_ssl_domain == NULL); 16555 ? 0; 16556 : (phys_ctx->callbacks.init_ssl_domain(; 16557 dom_ctx->config[AUTHENTICATION_DOMAIN],; 16558 dom_ctx->ssl_ctx,; 16559 phys_ctx->user_data));; 16560 ; 16561 /* If domain callback returns 0, civetweb sets up the SSL certificate.; 16562 * If it returns 1, civetweb assumes the calback already did this.; 16563 * If it returns -1, initializing ssl fails. */; 16564 if (callback_ret < 0) {; 16565 mg_cry_ctx_internal(phys_ctx,; 16566 ""Domain SSL callback returned error: %i"",; 16567 callback_ret);; 16568 return 0;; 16569 }; 16570 if (callback_ret > 0) {; 16571 /* Domain callback did everything. */; 16572 return 1;; 16573 }; 16574 ; 16575 /* Use some combination of start time, domain and port as a SSL; 16576 * context ID. This should be unique on the current machine. */; 16577 md5_init(&md5state);; 16578 clock_gettime(CLOCK_MONOTONIC, &now_mt);; 16579 md5_append(&md5state, (const md5_byte_t *)&now_mt, sizeof(now_mt));; 16580 md5_append(&md5state,; 16581 (const md5_byte_t *)phys_ctx->dd.config[LISTENING_PORTS],; 16582 strlen(phys_ctx->dd.config[LISTENING_PORTS]));; 16583 md5_append(&md5state,; 16584 (const md5_byte_t *)dom_ctx->config[AUTHENTICATION_DOMAIN],; 16585 strlen(dom_ctx->config[AUTHENTICATION_DOMAIN]));; 16586 md5_append(&md5state, (const md5_byte_t *)phys_ctx, sizeof(*phys_ctx));; 16587 md5_append(&md5state, (const md5_byte_t *)dom_ctx, sizeof(*dom_ctx));; 16588 md5_finish(&md5state, ssl_context_id);; 16589 ; 16590 SSL_CTX_set_session_id_context(do",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/civetweb_8c_source.html:490947,error,error,490947,doc/v632/civetweb_8c_source.html,https://root.cern,https://root.cern/doc/v632/civetweb_8c_source.html,1,['error'],['error']
Availability," If no data are written, because e.g. the branch is disabled, the number of bytes returned is 0. ; Reimplemented in TBranchClones, TBranchElement, TBranchObject, TBranchRef, and TBranchSTL.; Definition at line 856 of file TBranch.cxx. ◆ FillLeavesImpl(). void TBranch::FillLeavesImpl ; (; TBuffer & ; b). protected . Loop on all leaves of this branch to fill Basket buffer. ; Definition at line 2496 of file TBranch.cxx. ◆ FindBranch(). TBranch * TBranch::FindBranch ; (; const char * ; name). virtual . Find the immediate sub-branch with passed name. ; Reimplemented in TBranchElement.; Definition at line 1035 of file TBranch.cxx. ◆ FindLeaf(). TLeaf * TBranch::FindLeaf ; (; const char * ; name). virtual . Find the leaf corresponding to the name 'searchname'. ; Reimplemented in TBranchElement.; Definition at line 1081 of file TBranch.cxx. ◆ FlushBaskets(). Int_t TBranch::FlushBaskets ; (; ). Flush to disk all the baskets of this branch and any of subbranches. ; Return the number of bytes written or -1 in case of write error. ; Definition at line 1136 of file TBranch.cxx. ◆ FlushOneBasket(). Int_t TBranch::FlushOneBasket ; (; UInt_t ; ibasket). If we have a write basket in memory and it contains some entries and has not yet been written to disk, we write it and delete it from memory. ; Return the number of bytes written; ; Definition at line 1182 of file TBranch.cxx. ◆ GetAddress(). virtual char * TBranch::GetAddress ; (; ); const. inlinevirtual . Reimplemented in TBranchElement.; Definition at line 212 of file TBranch.h. ◆ GetBasket(). TBasket * TBranch::GetBasket ; (; Int_t ; basket). inline . Definition at line 213 of file TBranch.h. ◆ GetBasketAndFirst(). Int_t TBranch::GetBasketAndFirst ; (; TBasket *& ; basket, . Long64_t & ; first, . TBuffer * ; user_buffer . ). private . A helper function to locate the correct basket - and its first entry. ; Extracted to a common private function because it is needed by both GetEntry and GetBulkEntries. It should not be called direc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTBranch.html:39911,error,error,39911,doc/master/classTBranch.html,https://root.cern,https://root.cern/doc/master/classTBranch.html,1,['error'],['error']
Availability," If the file specified in the; URL does not exist, is not accessable or can not be created the kZombie; bit will be set in the TDCacheFile object. Use IsZombie() to see if the; file is accessable. For a description of the option and other arguments; see the TFile ctor. The preferred interface to this constructor is; via TFile::Open(). ~TDCacheFile(); Close and cleanup dCache file. Bool_t ReadBuffer(char* buf, Int_t len); Read specified byte range from remote file via dCache daemon.; Returns kTRUE in case of error. Bool_t ReadBuffer(char* buf, Long64_t pos, Int_t len); Read specified byte range from remote file via dCache daemon.; Returns kTRUE in case of error. Bool_t ReadBuffers(char* buf, Long64_t* pos, Int_t* len, Int_t nbuf); Read the nbuf blocks described in arrays pos and len,; where pos[i] is the seek position of block i of length len[i].; Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer.; This function is overloaded by TNetFile, TWebFile, etc.; Returns kTRUE in case of failure. Bool_t WriteBuffer(const char* buf, Int_t len); Write specified byte range to remote file via dCache daemon.; Returns kTRUE in case of error. Bool_t Stage(const char* path, UInt_t secs, const char* location = 0); Stage() returns kTRUE on success and kFALSE on failure. Bool_t CheckFile(const char* path, const char* location = 0); CheckFile() returns kTRUE on success and kFALSE on failure. In; case the file exists but is not cached, CheckFile() returns; kFALSE and errno is set to EAGAIN. void SetOpenTimeout(UInt_t secs); Set file open timeout. void SetOnError(TDCacheFile::OnErrorAction = kOnErrorDefault); Set on error handler. void SetReplyHostName(const char* host_name); Set reply host name. const char * GetDcapVersion(); Return dCache version string. Int_t SysOpen(const char* pathname, Int_t flags, UInt_t mode); Interface to system open. All arguments like in POSIX open. Int_t SysClose(Int_t fd); Interface to system close. All arguments like in POSIX close. Int_t SysR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDCacheFile.html:23636,failure,failure,23636,root/html528/TDCacheFile.html,https://root.cern,https://root.cern/root/html528/TDCacheFile.html,4,['failure'],['failure']
Availability," Ignore the chi2 option and perform a likelihood fit"");; 753 }; 754 }; 755 // specific Graph options (need to be parsed before); 756 else if (type == EFitObjectType::kGraph) {; 757 opt.ReplaceAll(""ROB"", ""H"");; 758 opt.ReplaceAll(""EX0"", ""T"");; 759 ; 760 //for robust fitting, see if # of good points is defined; 761 // decode parameters for robust fitting; 762 Double_t h=0;; 763 if (opt.Contains(""H=0."")) {; 764 int start = opt.Index(""H=0."");; 765 int numpos = start + strlen(""H=0."");; 766 int numlen = 0;; 767 int len = opt.Length();; 768 while( (numpos+numlen<len) && isdigit(opt[numpos+numlen]) ) numlen++;; 769 TString num = opt(numpos,numlen);; 770 opt.Remove(start+strlen(""H""),strlen(""=0."")+numlen);; 771 h = atof(num.Data());; 772 h*=TMath::Power(10, -numlen);; 773 }; 774 ; 775 if (opt.Contains(""H"")) { fitOption.Robust = 1; fitOption.hRobust = h; }; 776 if (opt.Contains(""T"")) fitOption.NoErrX = 1; // no error in X; 777 if (opt.Contains(""W"")) fitOption.W1 = 1; // ignorer all point errors when fitting; 778 }; 779 ; 780 if (opt.Contains(""U"")) {; 781 // user option can work only when not running in multiple threads; 782 if (gGlobalMutex || !ROOT::IsImplicitMTEnabled()) {; 783 fitOption.User = 1;; 784 } else {; 785 Warning(""FitOptionsMake"",""Cannot use User (U) fit option when running in multi-thread mode. The option is ignored"");; 786 fitOption.User = 0;; 787 }; 788 }; 789 if (opt.Contains(""Q"")) fitOption.Quiet = 1;; 790 if (opt.Contains(""V"")) {fitOption.Verbose = 1; fitOption.Quiet = 0;}; 791 ; 792 ; 793 if (opt.Contains(""E"")) fitOption.Errors = 1;; 794 if (opt.Contains(""R"")) fitOption.Range = 1;; 795 if (opt.Contains(""G"")) fitOption.Gradient= 1;; 796 if (opt.Contains(""M"")) fitOption.More = 1;; 797 if (opt.Contains(""N"")) fitOption.Nostore = 1;; 798 if (opt.Contains(""0"")) fitOption.Nograph = 1;; 799 if (opt.Contains(""+"")) fitOption.Plus = 1;; 800 if (opt.Contains(""B"")) fitOption.Bound = 1;; 801 if (opt.Contains(""C"")) fitOption.Nochisq = 1;; 802 if (opt.Contains(""F"")) fitOpti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/HFitImpl_8cxx_source.html:28863,error,errors,28863,doc/master/HFitImpl_8cxx_source.html,https://root.cern,https://root.cern/doc/master/HFitImpl_8cxx_source.html,1,['error'],['errors']
Availability," Implements TMVA::MethodBase.; Definition at line 578 of file MethodRuleFit.cxx. ◆ DeclareOptions(). void TMVA::MethodRuleFit::DeclareOptions ; (; ). privatevirtual . define the options (their key words) that can be set in the option string know options. ; general. RuleFitModule <string> available values are:; RFTMVA - use TMVA implementation; RFFriedman - use Friedmans original implementation. Path search (fitting). GDTau <float> gradient-directed path: fit threshold, default; GDTauPrec <float> gradient-directed path: precision of estimated tau; GDStep <float> gradient-directed path: step size; GDNSteps <float> gradient-directed path: number of steps; GDErrScale <float> stop scan when error>scale*errmin. Tree generation. fEventsMin <float> minimum fraction of events in a splittable node; fEventsMax <float> maximum fraction of events in a splittable node; nTrees <float> number of trees in forest.; ForestType <string> available values are:; Random - create forest using random subsample and only random variables subset at each node; AdaBoost - create forest with boosted events. Model creation. RuleMinDist <float> min distance allowed between rules; MinImp <float> minimum rule importance accepted; Model <string> model to be used available values are:; ModRuleLinear <default>; ModRule; ModLinear. Friedmans module. RFWorkDir <string> directory where Friedmans module (rf_go.exe) is installed; RFNrules <int> maximum number of rules allowed; RFNendnodes <int> average number of end nodes in the forest of trees . Implements TMVA::MethodBase.; Definition at line 228 of file MethodRuleFit.cxx. ◆ DeclFileName(). static const char * TMVA::MethodRuleFit::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 210 of file MethodRuleFit.h. ◆ GetForest(). const std::vector< TMVA::DecisionTree * > & TMVA::MethodRuleFit::GetForest ; (; ); const. inline . Definition at line 92 of file MethodRuleFit.h. ◆ GetGDErrScale(). Double_t T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodRuleFit.html:35124,avail,available,35124,doc/master/classTMVA_1_1MethodRuleFit.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodRuleFit.html,1,['avail'],['available']
Availability," Implements TVirtualFitter.; Definition at line 422 of file TFitter.cxx. ◆ GetParameter() [1/2]. Double_t TFitter::GetParameter ; (; Int_t ; ipar); const. overridevirtual . return current value of parameter ipar ; Implements TVirtualFitter.; Definition at line 453 of file TFitter.cxx. ◆ GetParameter() [2/2]. Int_t TFitter::GetParameter ; (; Int_t ; ipar, . char * ; parname, . Double_t & ; value, . Double_t & ; verr, . Double_t & ; vlow, . Double_t & ; vhigh . ); const. overridevirtual . return current values for a parameter . ipar : parameter number; parname : parameter name; value : initial parameter value; verr : initial error for this parameter; vlow : lower value for the parameter; vhigh : upper value for the parameter. WARNING! parname must be suitably dimensioned in the calling function. ; Implements TVirtualFitter.; Definition at line 475 of file TFitter.cxx. ◆ GetParError(). Double_t TFitter::GetParError ; (; Int_t ; ipar); const. overridevirtual . return error of parameter ipar ; Implements TVirtualFitter.; Definition at line 439 of file TFitter.cxx. ◆ GetParName(). const char * TFitter::GetParName ; (; Int_t ; ipar); const. overridevirtual . return name of parameter ipar ; Implements TVirtualFitter.; Definition at line 487 of file TFitter.cxx. ◆ GetStats(). Int_t TFitter::GetStats ; (; Double_t & ; amin, . Double_t & ; edm, . Double_t & ; errdef, . Int_t & ; nvpar, . Int_t & ; nparx . ); const. overridevirtual . return global fit parameters . amin : chisquare; edm : estimated distance to minimum; errdef; nvpar : number of variable parameters; nparx : total number of parameters . Implements TVirtualFitter.; Definition at line 502 of file TFitter.cxx. ◆ GetSumLog(). Double_t TFitter::GetSumLog ; (; Int_t ; i). overridevirtual . return Sum(log(i) i=0,n used by log likelihood fits ; Implements TVirtualFitter.; Definition at line 513 of file TFitter.cxx. ◆ IsA(). TClass * TFitter::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current objec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFitter.html:24816,error,error,24816,doc/master/classTFitter.html,https://root.cern,https://root.cern/doc/master/classTFitter.html,1,['error'],['error']
Availability," In output the array index contains the indices of; 400/// the sorted array. If down is false sort in increasing order; 401/// (default is decreasing order).; 402///; 403/// NOTE that the array index must be created with a length bigger; 404/// or equal than the main array before calling this function.; 405template <typename Iterator, typename IndexIterator>; 406void TMath::SortItr(Iterator first, Iterator last, IndexIterator index, Bool_t down); 407{; 408 int i = 0;; 409 ; 410 IndexIterator cindex = index;; 411 for ( Iterator cfirst = first; cfirst != last; ++cfirst ); 412 {; 413 *cindex = i++;; 414 ++cindex;; 415 }; 416 ; 417 if ( down ); 418 std::sort(index, cindex, CompareDesc<Iterator>(first) );; 419 else; 420 std::sort(index, cindex, CompareAsc<Iterator>(first) );; 421}; 422 ; 423/// Sort the n elements of the array a of generic templated type Element.; 424/// In output the array index of type Index contains the indices of the sorted array.; 425/// If down is false sort in increasing order (default is decreasing order).; 426///; 427/// NOTE that the array index must be created with a length >= n; 428/// before calling this function.; 429/// NOTE also that the size type for n must be the same type used for the index array; 430/// (templated type Index); 431template <typename Element, typename Index> void TMath::Sort(Index n, const Element* a, Index* index, Bool_t down); 432{; 433 for(Index i = 0; i < n; i++) { index[i] = i; }; 434 if ( down ); 435 std::sort(index, index + n, CompareDesc<const Element*>(a) );; 436 else; 437 std::sort(index, index + n, CompareAsc<const Element*>(a) );; 438}; 439 ; 440#endif; d#define d(i)Definition RSha256.hxx:102; b#define b(i)Definition RSha256.hxx:100; a#define a(i)Definition RSha256.hxx:99; RtypesCore.h; UShort_tunsigned short UShort_tDefinition RtypesCore.h:40; Int_tint Int_tDefinition RtypesCore.h:45; ULong_tunsigned long ULong_tDefinition RtypesCore.h:55; Long_tlong Long_tDefinition RtypesCore.h:54; UInt_tunsigned int UInt_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMathBase_8h_source.html:16261,down,down,16261,doc/master/TMathBase_8h_source.html,https://root.cern,https://root.cern/doc/master/TMathBase_8h_source.html,1,['down'],['down']
Availability," In statistical terms, this means that MnContours takes account of the correlations between the two parameters being plotted, and all the other variable parameters, using a procedure analogous to that of \(\mbox{MINOS}\). (If this feature is not wanted, then the other parameters must be fixed before calling \(\mbox{CONTOURS}\).) MnContours provides the actual coordinates of the points around the contour, suitable for plotting with a graphics routine or by hand (using MnPlot, see [api:plot]). The points are given in counter-clockwise order around the contour. Only one contour is calculated per command, and the level is \(\displaystyle F_{\mathrm{min}} + \mbox{up}\). where \(\mbox{up}\) is the return value of FCNBase::up() specified by the user (usually 1.0 by default). The number of points to be calculated is chosen by the user (default is 20). As a by-product, \(\mbox{CONTOURS}\) provides the \(\mbox{MINOS}\) errors of the two parameters in question, since these are just the extreme points of the contour (use the MnContours::contour(…) method in order to get the points of the contour and the ones of the \(\mbox{MINOS}\) errors). MnContours::operator() returns a std::vector\(<\)std::pair\(<\)double,double\(> >\) of (x,y) points. Using MnPlot::operator() will generate a text graphics plot in the terminal.; 3 M installation; 3.1 M releases; To follow the current release process the user is referred to the M homepage @bib-C++MINUIT.; M was re–implemented in from 2002–2004, but the functionality is largely compatible with the one of the version. The usage is different in the sense that the re–write from to was done by its signification and not literally (with minor exceptions). Applications such as \(\mbox{MIGRAD}\) have a corresponding class MnMigrad, M “commands” became classes or methods of classes according to their purpose. Users familiar with the version of M , who have not yet used releases from the version, should however read this manual, in order to adapt to the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/guides/minuit2/Minuit2.html:26359,error,errors,26359,root/html534/guides/minuit2/Minuit2.html,https://root.cern,https://root.cern/root/html534/guides/minuit2/Minuit2.html,8,['error'],['errors']
Availability," Includes; Libraries. Function documentation; RooNumIntFactory(); Constructor. Register all known integrators by calling; their static registration functions. ~RooNumIntFactory(); Destructor. RooNumIntFactory(const RooNumIntFactory& other); Copy constructor. RooNumIntFactory& instance(); Static method returning reference to singleton instance of factory. void cleanup(); Cleanup routine called by atexit() handler installed by RooSentinel. Bool_t storeProtoIntegrator(RooAbsIntegrator* proto, const RooArgSet& defConfig, const char* depName = """"); Method accepting registration of a prototype numeric integrator along with a RooArgSet of its; default configuration options and an optional list of names of other numeric integrators; on which this integrator depends. Returns true if integrator was previously registered. const RooAbsIntegrator* getProtoIntegrator(const char* name); Return prototype integrator with given (class) name. const char* getDepIntegratorName(const char* name); Get list of class names of integrators needed by integrator named 'name'. RooAbsIntegrator* createIntegrator(RooAbsFunc& func, const RooNumIntConfig& config, Int_t ndim = 0, Bool_t isBinned = kFALSE); Construct a numeric integrator instance that operates on function 'func' and is configured; with 'config'. If ndimPreset is greater than zero that number is taken as the dimensionality; of the integration, otherwise it is queried from 'func'. This function iterators over list; of available prototype integrators and returns an clone attached to the given function of; the first class that matches the specifications of the requested integration considering; the number of dimensions, the nature of the limits (open ended vs closed) and the user; preference stated in 'config'. » Last changed: Tue Jun 2 15:32:45 2015 » Last generated: 2015-06-02 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/RooNumIntFactory.html:8084,avail,available,8084,root/html604/RooNumIntFactory.html,https://root.cern,https://root.cern/root/html604/RooNumIntFactory.html,2,['avail'],['available']
Availability," Includes; Libraries. Function documentation; TInterpreter *& Instance(); returns gInterpreter global. void Execute(TMethod* method, TObjArray* params, int* error = 0). virtual ~TInterpreter(); { }. void AddIncludePath(const char* path). Int_t AutoLoad(const char* classname). void ClearFileBusy(). void ClearStack(). void EnableAutoLoading(). void EndOfLineAction(). Int_t GetExitCode() const. TEnv * GetMapfile() const; { return 0; }. Int_t GetMore() const. Int_t GenerateDictionary(const char* classes, const char* includes = 0, const char* options = 0). char * GetPrompt(). const char * GetSharedLibs(). const char * GetClassSharedLibs(const char* cls). const char * GetSharedLibDeps(const char* lib). const char * GetIncludePath(). const char * GetSTLIncludePath() const; { return """"; }. TObjArray * GetRootMapFiles() const. Int_t InitializeDictionaries(). Bool_t IsLoaded(const char* filename) const. Int_t Load(const char* filenam, Bool_t system = kFALSE). void LoadMacro(const char* filename, TInterpreter::EErrorCode* error = 0). Int_t LoadLibraryMap(const char* rootmapfile = 0). Int_t RescanLibraryMap(). Int_t ReloadAllSharedLibraryMaps(). Int_t UnloadAllSharedLibraryMaps(). Int_t UnloadLibraryMap(const char* library). Long_t ProcessLine(const char* line, TInterpreter::EErrorCode* error = 0). Long_t ProcessLineSynch(const char* line, TInterpreter::EErrorCode* error = 0). void PrintIntro(). Int_t SetClassSharedLibs(const char* cls, const char* libs). void SetGetline(const char *(*)(const char* prompt) getlineFunc, void (*)(const char* line) histaddFunc). void ResetAll(). void ResetGlobals(). void ResetGlobalVar(void* obj). void RewindDictionary(). Int_t DeleteGlobal(void* obj). Int_t DeleteVariable(const char* name). void SaveContext(). void SaveGlobalsContext(). void UpdateListOfGlobals(). void UpdateListOfGlobalFunctions(). void UpdateListOfTypes(). void SetClassInfo(TClass* cl, Bool_t reload = kFALSE). Bool_t CheckClassInfo(const char* name, Bool_t autoload = kTRUE). Lon",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TInterpreter.html:18888,error,error,18888,root/html534/TInterpreter.html,https://root.cern,https://root.cern/root/html534/TInterpreter.html,2,['error'],['error']
Availability," Includes; Libraries. Function documentation; TInterpreter *& Instance(); returns gInterpreter global. void Execute(TMethod* method, TObjArray* params, int* error = 0). virtual ~TInterpreter(); { }. void AddIncludePath(const char* path). Int_t AutoLoad(const char* classname). void ClearFileBusy(). void ClearStack(). void EnableAutoLoading(). void EndOfLineAction(). Int_t GetExitCode() const. TEnv * GetMapfile() const; { return 0; }. Int_t GetMore() const. Int_t GenerateDictionary(const char* classes, const char* includes = 0, const char* options = 0). char * GetPrompt(). const char * GetSharedLibs(). const char * GetClassSharedLibs(const char* cls). const char * GetSharedLibDeps(const char* lib). const char * GetIncludePath(). const char * GetSTLIncludePath() const; { return """"; }. TObjArray * GetRootMapFiles() const. Int_t InitializeDictionaries(). Bool_t IsLoaded(const char* filename) const. Int_t Load(const char* filenam, Bool_t system = kFALSE). void LoadMacro(const char* filename, TInterpreter::EErrorCode* error = 0). Int_t LoadLibraryMap(const char* rootmapfile = 0). Int_t RescanLibraryMap(). Int_t ReloadAllSharedLibraryMaps(). Int_t UnloadAllSharedLibraryMaps(). Int_t UnloadLibraryMap(const char* library). Long_t ProcessLine(const char* line, TInterpreter::EErrorCode* error = 0). Long_t ProcessLineSynch(const char* line, TInterpreter::EErrorCode* error = 0). void PrintIntro(). void SetGetline(char *(*)(const char* prompt) getlineFunc, void (*)(char* line) histaddFunc). void ResetAll(). void ResetGlobals(). void RewindDictionary(). Int_t DeleteGlobal(void* obj). void SaveContext(). void SaveGlobalsContext(). void UpdateListOfGlobals(). void UpdateListOfGlobalFunctions(). void UpdateListOfTypes(). void SetClassInfo(TClass* cl, Bool_t reload = kFALSE). Bool_t CheckClassInfo(const char* name, Bool_t autoload = kTRUE). Long_t Calc(const char* line, TInterpreter::EErrorCode* error = 0). void CreateListOfBaseClasses(TClass* cl). void CreateListOfDataMembers(TClass* c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TInterpreter.html:18288,error,error,18288,root/html528/TInterpreter.html,https://root.cern,https://root.cern/root/html528/TInterpreter.html,1,['error'],['error']
Availability," Includes; Libraries. Function documentation; TInterpreter *& Instance(); returns gInterpreter global. void Execute(TMethod* method, TObjArray* params, int* error = 0). virtual ~TInterpreter(); { }. void AddIncludePath(const char* path). Int_t AutoLoad(const char* classname). void ClearFileBusy(). void ClearStack(). void EnableAutoLoading(). void EndOfLineAction(). Int_t GetExitCode() const. TEnv * GetMapfile() const; { return 0; }. Int_t GetMore() const. Int_t GenerateDictionary(const char* classes, const char* includes = 0, const char* options = 0). char * GetPrompt(). const char * GetSharedLibs(). const char * GetClassSharedLibs(const char* cls). const char * GetSharedLibDeps(const char* lib). const char * GetIncludePath(). const char * GetSTLIncludePath() const; { return """"; }. TObjArray * GetRootMapFiles() const. Int_t InitializeDictionaries(). Bool_t IsLoaded(const char* filename) const. Int_t Load(const char* filenam, Bool_t system = kFALSE). void LoadMacro(const char* filename, TInterpreter::EErrorCode* error = 0). Int_t LoadLibraryMap(const char* rootmapfile = 0). Int_t RescanLibraryMap(). Int_t ReloadAllSharedLibraryMaps(). Int_t UnloadAllSharedLibraryMaps(). Int_t UnloadLibraryMap(const char* library). Long_t ProcessLine(const char* line, TInterpreter::EErrorCode* error = 0). Long_t ProcessLineSynch(const char* line, TInterpreter::EErrorCode* error = 0). void PrintIntro(). void SetGetline(const char *(*)(const char* prompt) getlineFunc, void (*)(const char* line) histaddFunc). void ResetAll(). void ResetGlobals(). void ResetGlobalVar(void* obj). void RewindDictionary(). Int_t DeleteGlobal(void* obj). void SaveContext(). void SaveGlobalsContext(). void UpdateListOfGlobals(). void UpdateListOfGlobalFunctions(). void UpdateListOfTypes(). void SetClassInfo(TClass* cl, Bool_t reload = kFALSE). Bool_t CheckClassInfo(const char* name, Bool_t autoload = kTRUE). Long_t Calc(const char* line, TInterpreter::EErrorCode* error = 0). void CreateListOfBaseClasses(TClass*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TInterpreter.html:18408,error,error,18408,root/html530/TInterpreter.html,https://root.cern,https://root.cern/root/html530/TInterpreter.html,3,['error'],['error']
Availability," Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » HIST; » HIST; » TSVDUnfold. class TSVDUnfold: public TObject. SVD Approach to Data Unfolding. Reference: Nucl. Instrum. Meth. A372, 469 (1996) [hep-ph/9509307]. TSVDUnfold implements the singular value decomposition based unfolding method (see reference). Currently, the unfolding of one-dimensional histograms is supported, with the same number of bins for the measured and the unfolded spectrum. The unfolding procedure is based on singular value decomposition of the response matrix. The regularisation of the unfolding is implemented via a discrete minimum-curvature condition. Monte Carlo inputs:. xini: true underlying spectrum (TH1D, n bins); bini: reconstructed spectrum (TH1D, n bins); Adet: response matrix (TH2D, nxn bins). Consider the unfolding of a measured spectrum bdat with covariance matrix Bcov (if not passed explicitely, a diagonal covariance will be built given the errors of bdat). The corresponding spectrum in the Monte Carlo is given by bini, with the true underlying spectrum given by xini. The detector response is described by Adet, with Adet filled with events (not probabilities) with the true observable on the y-axis and the reconstructed observable on the x-axis. The measured distribution can be unfolded for any combination of resolution, efficiency and acceptance effects, provided an appropriate definition of xini and Adet. The unfolding can be performed by. TSVDUnfold *tsvdunf = new TSVDUnfold( bdat, Bcov, bini, xini, Adet );; TH1D* unfresult = tsvdunf->Unfold( kreg );. where kreg determines the regularisation of the unfolding. In general, overregularisation (too small kreg) will bias the unfolded spectrum towards the Monte Carlo input, while underregularisation (too large kreg) will lead to large fluctuations in the unfolded spectrum. The optimal regularisation can be d",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSVDUnfold.html:1117,error,errors,1117,root/html532/TSVDUnfold.html,https://root.cern,https://root.cern/root/html532/TSVDUnfold.html,2,['error'],['errors']
Availability," Inheritance; Inherited Members; Includes; Libraries. Function documentation; TMultiDimFit(); Empty CTOR. Do not use. TMultiDimFit(Int_t dimension, TMultiDimFit::EMDFPolyType type = kMonomials, Option_t* option = """"); Constructor; Second argument is the type of polynomials to use in; parameterisation, one of:; TMultiDimFit::kMonomials; TMultiDimFit::kChebyshev; TMultiDimFit::kLegendre. Options:; K Compute (k)correlation matrix; V Be verbose. Default is no options. ~TMultiDimFit(); Destructor. void AddRow(const Double_t* x, Double_t D, Double_t E = 0); Add a row consisting of fNVariables independent variables, the; known, dependent quantity, and optionally, the square error in; the dependent quantity, to the training sample to be used for the; parameterization.; The mean of the variables and quantity is calculated on the fly,; as outlined in TPrincipal::AddRow.; This sample should be representive of the problem at hand.; Please note, that if no error is given Poisson statistics is; assumed and the square error is set to the value of dependent; quantity. See also the; class description. void AddTestRow(const Double_t* x, Double_t D, Double_t E = 0); Add a row consisting of fNVariables independent variables, the; known, dependent quantity, and optionally, the square error in; the dependent quantity, to the test sample to be used for the; test of the parameterization.; This sample needn't be representive of the problem at hand.; Please note, that if no error is given Poisson statistics is; assumed and the square error is set to the value of dependent; quantity. See also the; class description. void Browse(TBrowser* b); Browse the TMultiDimFit object in the TBrowser. void Clear(Option_t* option = """"); Clear internal structures and variables. Double_t Eval(const Double_t* x, const Double_t* coeff = 0) const; Evaluate parameterization at point x. Optional argument coeff is; a vector of coefficients for the parameterisation, fNCoefficients; elements long. Double_t EvalError",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMultiDimFit.html:25836,error,error,25836,root/html528/TMultiDimFit.html,https://root.cern,https://root.cern/root/html528/TMultiDimFit.html,20,['error'],['error']
Availability," Init a PROOF slave object. Called via the TXSlave ctor.; The Init method is technology specific and is overwritten by derived; classes. void ParseBuffer(); Parse fBuffer after a connection attempt. Int_t SetupServ(Int_t stype, const char* conffile); Init a PROOF slave object. Called via the TXSlave ctor.; The Init method is technology specific and is overwritten by derived; classes. ~TXSlave(); Destroy slave. void Close(Option_t* opt = """"); Close slave socket. Int_t Ping(); Ping the remote master or slave servers.; Returns 0 if ok, -1 if it did not ping or in case of error. void Touch(); Touch the client admin file to proof we are alive. void Interrupt(Int_t type); Send interrupt to master or slave servers.; Returns 0 if ok, -1 in case of error. void StopProcess(Bool_t abort, Int_t timeout); Sent stop/abort request to PROOF server. It will be; processed asynchronously by a separate thread. Int_t GetProofdProtocol(TSocket* s); Find out the remote proofd protocol version.; Returns -1 in case of error. TObjString * SendCoordinator(Int_t kind, const char* msg = 0, Int_t int2 = 0); Send message to intermediate coordinator.; If any output is due, this is returned as a generic message. void SetAlias(const char* alias); Set an alias for this session. If reconnection is supported, the alias; will be communicated to the remote coordinator so that it can be recovered; when reconnecting. Int_t SendGroupPriority(const char* grp, Int_t priority); Communicate to the coordinator the priprity of the group to which the; user belongs; Return 0 on success. Bool_t HandleError(const void* in = 0); Handle error on the input socket. Bool_t HandleInput(const void* in = 0); Handle asynchronous input on the socket. void SetInterruptHandler(Bool_t on = kTRUE); Set/Unset the interrupt handler. void FlushSocket(); Clean any input on the socket. TXSlave(const char* url, const char* ord, Int_t perf, const char* image, TProof* proof, Int_t stype, const char* workdir, const char* msd, Int_t nwk = 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXSlave.html:10893,error,error,10893,root/html602/TXSlave.html,https://root.cern,https://root.cern/root/html602/TXSlave.html,4,['error'],['error']
Availability," Init a PROOF slave object. Called via the TXSlave ctor.; The Init method is technology specific and is overwritten by derived; classes. void ParseBuffer(); Parse fBuffer after a connection attempt. Int_t SetupServ(Int_t stype, const char* conffile); Init a PROOF slave object. Called via the TXSlave ctor.; The Init method is technology specific and is overwritten by derived; classes. ~TXSlave(); Destroy slave. void Close(Option_t* opt = """"); Close slave socket. Int_t Ping(); Ping the remote master or slave servers.; Returns 0 if ok, -1 if it did not ping or in case of error. void Touch(); Touch the client admin file to proof we are alive. void Interrupt(Int_t type); Send interrupt to master or slave servers.; Returns 0 if ok, -1 in case of error. void StopProcess(Bool_t abort, Int_t timeout); Sent stop/abort request to PROOF server. It will be; processed asynchronously by a separate thread. Int_t GetProofdProtocol(TSocket* s); Find out the remote proofd protocol version.; Returns -1 in case of error. TObjString * SendCoordinator(Int_t kind, const char* msg = 0, Int_t int2 = 0); Send message to intermediate coordinator.; If any output is due, this is returned as a generic message. void SetAlias(const char* alias); Set an alias for this session. If reconnection is supported, the alias; will be communicated to the remote coordinator so that it can be recovered; when reconnecting. Int_t SendGroupPriority(const char* grp, Int_t priority); Communicate to the coordinator the priprity of the group to which the; user belongs; Return 0 on success. Bool_t HandleError(const void* in = 0); Handle error on the input socket. Bool_t HandleInput(const void* in = 0); Handle asynchronous input on the socket. void SetInterruptHandler(Bool_t on = kTRUE); Set/Unset the interrupt handler. void FlushSocket(); Clean any input on the socket. » Author: G. Ganis Oct 2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proofx:$Id$ » Last generated: 2015-03-15 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TXSlave.html:10183,error,error,10183,root/html534/TXSlave.html,https://root.cern,https://root.cern/root/html534/TXSlave.html,2,['error'],['error']
Availability," Init a PROOF slave object. Called via the TXSlave ctor.; The Init method is technology specific and is overwritten by derived; classes. void ParseBuffer(); Parse fBuffer after a connection attempt. Int_t SetupServ(Int_t stype, const char* conffile); Init a PROOF slave object. Called via the TXSlave ctor.; The Init method is technology specific and is overwritten by derived; classes. ~TXSlave(); Destroy slave. void Close(Option_t* opt = """"); Close slave socket. Int_t Ping(); Ping the remote master or slave servers.; Returns 0 if ok, -1 if it did not ping or in case of error. void Touch(); Touch the client admin file to proof we are alive. void Interrupt(Int_t type); Send interrupt to master or slave servers.; Returns 0 if ok, -1 in case of error. void StopProcess(Bool_t abort, Int_t timeout); Sent stop/abort request to PROOF server. It will be; processed asynchronously by a separate thread. Int_t GetProofdProtocol(TSocket* s); Find out the remote proofd protocol version.; Returns -1 in case of error. TObjString * SendCoordinator(Int_t kind, const char* msg = 0, Int_t int2 = 0); Send message to intermediate coordinator.; If any output is due, this is returned as a generic message. void SetAlias(const char* alias); Set an alias for this session. If reconnection is supported, the alias; will be communicated to the remote coordinator so that it can be recovered; when reconnecting. Int_t SendGroupPriority(const char* grp, Int_t priority); Communicate to the coordinator the priprity of the group to which the; user belongs; Return 0 on success. Bool_t HandleError(const void* in = 0); Handle error on the input socket. Bool_t HandleInput(const void* in = 0); Handle asynchronous input on the socket. void SetInterruptHandler(Bool_t on = kTRUE); Set/Unset the interrupt handler. void FlushSocket(); Clean any input on the socket. » Author: G. Ganis Oct 2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/proofx:$Id: TXSlave.h 38580 2011-03-23 15:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TXSlave.html:10115,error,error,10115,root/html530/TXSlave.html,https://root.cern,https://root.cern/root/html530/TXSlave.html,3,['error'],['error']
Availability," Input:; PW(3) - vector of NORMAL in word coordinate system; PN(3) - vector of NORMAL in normalized coordinate system . Implements TView.; Definition at line 1100 of file TView3D.cxx. ◆ operator=(). TView3D & TView3D::operator= ; (; const TView3D & ; tv). protected . Assignment operator. ; Definition at line 235 of file TView3D.cxx. ◆ PadRange(). void TView3D::PadRange ; (; Int_t ; rback). overridevirtual . Set the correct window size for lego and surface plots. ; Set the correct window size for lego and surface plots. And draw the background if necessary.; Input parameters:; RBACK : Background colour . Implements TView.; Definition at line 1158 of file TView3D.cxx. ◆ ResetView(). void TView3D::ResetView ; (; Double_t ; longitude, . Double_t ; latitude, . Double_t ; psi, . Int_t & ; irep . ). protected . Set view direction (in spherical coordinates). ; Input; PHI - longitude; THETA - latitude (angle between +Z and view direction); PSI - rotation in screen plane. Output:; IREP - reply (-1 if error in min-max). Errors: error in min-max scope ; Definition at line 1437 of file TView3D.cxx. ◆ ResizePad(). void TView3D::ResizePad ; (; ). overridevirtual . Recompute window for perspective view. ; Implements TView.; Definition at line 1405 of file TView3D.cxx. ◆ RotateView(). void TView3D::RotateView ; (; Double_t ; phi, . Double_t ; theta, . TVirtualPad * ; pad = nullptr . ). overridevirtual . API to rotate view and adjust the pad provided it the current one. ; Implements TView.; Definition at line 1555 of file TView3D.cxx. ◆ SetAutoRange(). void TView3D::SetAutoRange ; (; Bool_t ; autorange = kTRUE). inlineoverridevirtual . Implements TView.; Definition at line 117 of file TView3D.h. ◆ SetAxisNDC(). void TView3D::SetAxisNDC ; (; const Double_t * ; x1, . const Double_t * ; x2, . const Double_t * ; y1, . const Double_t * ; y2, . const Double_t * ; z1, . const Double_t * ; z2 . ). overridevirtual . Store axis coordinates in the NDC system. ; Implements TView.; Definition at ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTView3D.html:38546,error,error,38546,doc/master/classTView3D.html,https://root.cern,https://root.cern/doc/master/classTView3D.html,1,['error'],['error']
Availability," Int_t * ; error = nullptr, . Bool_t ; check = kFALSE . ). Load a macro in the interpreter's memory. ; Equivalent to the command line command "".L filename"". If the filename has ""+"" or ""++"" appended the macro will be compiled by ACLiC. The filename must have the format: [path/]macro.C[+|++[g|O]]. The possible error codes are defined by TInterpreter::EErrorCode. If check is true it will only check if filename exists and is readable. Returns 0 on successful loading and -1 in case filename does not exist or in case of error. ; Definition at line 2268 of file TROOT.cxx. ◆ ls(). void TROOT::ls ; (; Option_t * ; option = """"); const. overridevirtual . To list all objects of the application. ; Loop on all objects created in the ROOT linked lists. Objects may be files and windows or any other object directly attached to the ROOT linked list. ; Reimplemented from TDirectory.; Definition at line 2250 of file TROOT.cxx. ◆ Macro(). Longptr_t TROOT::Macro ; (; const char * ; filename, . Int_t * ; error = nullptr, . Bool_t ; padUpdate = kTRUE . ). Execute a macro in the interpreter. ; Equivalent to the command line command "".x filename"". If the filename has ""+"" or ""++"" appended the macro will be compiled by ACLiC. The filename must have the format: [path/]macro.C[+|++[g|O]][(args)]. The possible error codes are defined by TInterpreter::EErrorCode. If padUpdate is true (default) update the current pad. Returns the macro return value. ; Definition at line 2316 of file TROOT.cxx. ◆ MakeDefCanvas(). TCanvas * TROOT::MakeDefCanvas ; (; ); const. Return a default canvas. ; Definition at line 1554 of file TROOT.cxx. ◆ Message(). void TROOT::Message ; (; Int_t ; id, . const TObject * ; obj . ). Process message id called by obj. ; Definition at line 2350 of file TROOT.cxx. ◆ MustClean(). Bool_t TROOT::MustClean ; (; ); const. inline . Definition at line 296 of file TROOT.h. ◆ operator new() [1/2]. void * TROOT::operator new ; (; size_t ; l). inlineprotected . Definition at line 178 of file T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTROOT.html:68394,error,error,68394,doc/v632/classTROOT.html,https://root.cern,https://root.cern/doc/v632/classTROOT.html,2,['error'],['error']
Availability," Int_t ScanDataSet(const char* uri, UInt_t option = kReopen|kDebug); Scans the dataset indicated by <uri> and returns the number of missing files.; Returns -1 if any failure occurs.; For more details, see documentation of; ScanDataSet(TFileCollection *dataset, const char *option). void GetQuota(const char* group, const char* user, const char* dsName, TFileCollection* dataset). Gets quota information from this dataset. void ShowQuota(const char* opt); Display quota information. void PrintUsedSpace(). Prints the quota. void MonitorUsedSpace(TVirtualMonitoringWriter* monitoring). Log info to the monitoring server. Long64_t GetGroupUsed(const char* group). Returns the used space of that group. Long64_t GetGroupQuota(const char* group). returns the quota a group is allowed to have. void UpdateUsedSpace(); updates the used space maps. Int_t RegisterDataSet(const char* uri, TFileCollection* dataSet, const char* opt); Register a dataset, perfoming quota checkings, if needed.; Returns 0 on success, -1 on failure. Int_t NotifyUpdate(const char* group = 0, const char* user = 0, const char* dspath = 0, Long_t mtime = 0, const char* checksum = 0); Save into the <datasetdir>/dataset.list file the name of the last updated; or created or modified dataset; Returns 0 on success, -1 on error. Int_t ClearCache(const char* uri); Clear cached information matching uri. Int_t ShowCache(const char* uri); Show cached information matching uri. TString CreateUri(const char* dsGroup = 0, const char* dsUser = 0, const char* dsName = 0, const char* dsTree = 0); Creates URI for the dataset manger in the form '[[/dsGroup/]dsUser/]dsName[#dsObjPath]',; The optional dsObjPath can be in the form [subdir/]objname]'. Bool_t ParseUri(const char* uri, TString* dsGroup = 0, TString* dsUser = 0, TString* dsName = 0, TString* dsTree = 0, Bool_t onlyCurrent = kFALSE, Bool_t wildcards = kFALSE); Parses a (relative) URI that describes a DataSet on the cluster.; The input 'uri' should be in the form '[[/group/]u",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDataSetManager.html:13827,failure,failure,13827,root/html528/TDataSetManager.html,https://root.cern,https://root.cern/root/html528/TDataSetManager.html,6,['failure'],['failure']
Availability," Int_t TApplicationRemote::Broadcast ; (; const char * ; str, . Int_t ; kind = kMESS_STRING, . Int_t ; type = kRRT_Undef . ). private . Broadcast a character string buffer to the remote session. ; Use kind to set the TMessage what field. Returns 0 on success, -1 in case of error. ; Definition at line 283 of file TApplicationRemote.cxx. ◆ Broadcast() [2/3]. Int_t TApplicationRemote::Broadcast ; (; const TMessage & ; mess). private . Broadcast a message to the remote session. ; Returns 0 on success, -1 in case of error. ; Definition at line 266 of file TApplicationRemote.cxx. ◆ Broadcast() [3/3]. Int_t TApplicationRemote::Broadcast ; (; Int_t ; kind, . Int_t ; type = kRRT_Undef . ). inlineprivate . Definition at line 86 of file TApplicationRemote.h. ◆ BroadcastObject(). Int_t TApplicationRemote::BroadcastObject ; (; const TObject * ; obj, . Int_t ; kind = kMESS_OBJECT . ). private . Broadcast an object to the remote session. ; Use kind to set the TMessage what field. Returns 0 on success, -1 in case of error. ; Definition at line 297 of file TApplicationRemote.cxx. ◆ BroadcastRaw(). Int_t TApplicationRemote::BroadcastRaw ; (; const void * ; buffer, . Int_t ; length . ). private . Broadcast a raw buffer of specified length to the remote session. ; Returns 0 on success, -1 in case of error. ; Definition at line 308 of file TApplicationRemote.cxx. ◆ Browse(). void TApplicationRemote::Browse ; (; TBrowser * ; b). overridevirtual . Browse remote application (working directory and ROOT files). ; Reimplemented from TObject.; Definition at line 1056 of file TApplicationRemote.cxx. ◆ CheckFile(). Bool_t TApplicationRemote::CheckFile ; (; const char * ; file, . Long_t ; modtime . ). private . Check if a file needs to be send to the server. ; Use the following algorithm:; check if file appears in file map; if yes, get file's modtime and check against time in map, if modtime not same get md5 and compare against md5 in map, if not same return kTRUE.; if no, get file's md5 and modti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplicationRemote.html:25355,error,error,25355,doc/master/classTApplicationRemote.html,https://root.cern,https://root.cern/doc/master/classTApplicationRemote.html,1,['error'],['error']
Availability," Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). Data Members; public:. enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TStringTNamed::fNameobject identifier; TStringTNamed::fTitleobject title. private:. Int_tfExitStatusQuery exit status ((Int_t)TVirtualProofPlayer::EExitStatus or -1);; set<string,less<string>,allocator<string> >::iteratorfIter!iterator in messages; set<string>fMsgslist of error messages; Long_tfResMemMaxMax resident memory used by the worker; Long_tfVirtMemMaxMax virtual memory used by the worker. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TStatus(); Deafult constructor. void Add(const char* mesg); Add an error message. Int_t Merge(TCollection* list); PROOF Merge() function. void Print(Option_t* option = """") const; Standard print function. void Reset(); Reset the iterator on the messages. const char * NextMesg(); Return the next message or 0. void SetMemValues(Long_t vmem = -1, Long_t rmem = -1); Set max memory values. TStatus(). virtual ~TStatus(); { }. Bool_t IsOk() const; { return fMsgs.empty(); }. Int_t GetExitStatus() const; { return fExitStatus; }. Long_t GetResMemMax() const; { return fResMemMax; }. Long_t GetVirtMemMax() const; { return fVirtMemMax; }. void SetExitStatus(Int_t est); { fExitStatus = est; }. » Author: Maarten Ballintijn 12/03/2004 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed: root/proofplayer:$Id: TStatus.h 40091 2011-06-30 17:47:56Z ganis $ » Last generated: 2011-07-04 15:37; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT su",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TStatus.html:6370,error,error,6370,root/html530/TStatus.html,https://root.cern,https://root.cern/root/html530/TStatus.html,1,['error'],['error']
Availability," Int_t bufsize = 0); Write this object to the current directory. For more see the; const version of this method. void Streamer(TBuffer& ); Stream an object of class TObject. void DoError(int level, const char* location, const char* fmt, va_list va) const; Interface to ErrorHandler (protected). void Info(const char *location, const char *va_(fmt), ...); Issue info message. Use ""location"" to specify the method where the; warning occured. Accepts standard printf formatting arguments. void Warning(const char *location, const char *va_(fmt), ...); Issue warning message. Use ""location"" to specify the method where the; warning occured. Accepts standard printf formatting arguments. void Error(const char *location, const char *va_(fmt), ...); Issue error message. Use ""location"" to specify the method where the; error occured. Accepts standard printf formatting arguments. void SysError(const char *location, const char *va_(fmt), ...); Issue system error message. Use ""location"" to specify the method where; the system error occured. Accepts standard printf formatting arguments. void Fatal(const char *location, const char *va_(fmt), ...); Issue fatal error message. Use ""location"" to specify the method where the; fatal error occured. Accepts standard printf formatting arguments. void AbstractMethod(const char* method) const; Use this method to implement an ""abstract"" method that you don't; want to leave purely abstract. void MayNotUse(const char* method) const; Use this method to signal that a method (defined in a base class); may not be called in a derived class (in principle against good; design since a child class should not provide less functionality; than its parent, however, sometimes it is necessary). void Obsolete(const char* method, const char* asOfVers, const char* removedFromVers) const; Use this method to declare a method obsolete. Specify as of which version; the method is obsolete and as from which version it will be removed. Bool_t GetObjectStat(); Get status of obj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TObject.html:17294,error,error,17294,root/html534/TObject.html,https://root.cern,https://root.cern/root/html534/TObject.html,6,['error'],['error']
Availability," Int_t draw = 0, Int_t debug = 0); virtual~TProofBenchRunCPU(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; voidDrawPerfPlots(); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TCanvas*GetCanvas() const; Int_tGetDebug() const; TDirectory*GetDirProofBench() const; Int_tGetDraw() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TPBHistType*GetHistType() const; virtual const char*TObject::GetIconName() const; TList*GetListPerfPlots() const; virtual const char*GetName() const; TStringGetNameStem() const; Long64_tGetNEvents() const; Int_tGetNHists() const; Int_tGetNTries() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TProofBenchRun::GetParList",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofBenchRunCPU.html:1773,error,error,1773,root/html530/TProofBenchRunCPU.html,https://root.cern,https://root.cern/root/html530/TProofBenchRunCPU.html,5,['error'],['error']
Availability," Int_t index); virtual voidTObject::Delete(Option_t* option = """")MENU ; Bool_tRooAbsArg::dependentOverlaps(const RooAbsData* dset, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependentOverlaps(const RooArgSet* depList, const RooAbsArg& testArg) const; Bool_tRooAbsArg::dependsOn(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOn(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0, Bool_t valueOnly = kFALSE) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsCollection& serverList, const RooAbsArg* ignoreArg = 0) const; Bool_tRooAbsArg::dependsOnValue(const RooAbsArg& server, const RooAbsArg* ignoreArg = 0) const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); RooExpensiveObjectCache&RooAbsArg::expensiveObjectCache() const; virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList); Bool_tRooAbsArg::findConstantNodes(const RooArgSet& observables, RooArgSet& cacheList, RooLinkedList& processedNodes); RooAbsArg*RooAbsArg::findNewServer(const RooAbsCollection& newSet, Bool_t nameChange) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; RooAbsArg*RooAbsArg::findServer(const char* name) const; RooAbsArg*RooAbsArg::findServer(const RooAb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCategory.html:4283,Error,Error,4283,root/html534/RooCategory.html,https://root.cern,https://root.cern/root/html534/RooCategory.html,3,['Error'],['Error']
Availability," Int_t maxpar = 1000, Int_t maxconst = 1000); virtual voidSetMaximum(Double_t maximum = -1111)MENU ; virtual voidSetMinimum(Double_t minimum = -1111)MENU ; virtual voidTFormula::SetName(const char* name); virtual voidTNamed::SetNameTitle(const char* name, const char* title); virtual voidSetNDF(Int_t ndf); virtual voidSetNpx(Int_t npx = 100)MENU ; virtual voidTFormula::SetNumber(Int_t number); virtual voidSetNumberFitPoints(Int_t npfits); static voidTObject::SetObjectStat(Bool_t stat); virtual voidTFormula::SetParameter(const char* name, Double_t parvalue); virtual voidTFormula::SetParameter(Int_t ipar, Double_t parvalue); virtual voidTFormula::SetParameters(const Double_t* params); virtual voidTFormula::SetParameters(Double_t p0, Double_t p1, Double_t p2 = 0, Double_t p3 = 0, Double_t p4 = 0, Double_t p5 = 0, Double_t p6 = 0, Double_t p7 = 0, Double_t p8 = 0, Double_t p9 = 0, Double_t p10 = 0)MENU ; virtual voidSetParent(TObject* p = 0); virtual voidSetParError(Int_t ipar, Double_t error); virtual voidSetParErrors(const Double_t* errors); virtual voidSetParLimits(Int_t ipar, Double_t parmin, Double_t parmax); virtual voidTFormula::SetParName(Int_t ipar, const char* name); virtual voidTFormula::SetParNames(const char* name0 = ""p0"", const char* name1 = ""p1"", const char* name2 = ""p2"", const char* name3 = ""p3"", const char* name4 = ""p4"", const char* name5 = ""p5"", const char* name6 = ""p6"", const char* name7 = ""p7"", const char* name8 = ""p8"", const char* name9 = ""p9"", const char* name10 = ""p10"")MENU ; virtual voidSetRange(Double_t xmin, Double_t xmax)MENU ; virtual voidSetRange(Double_t xmin, Double_t ymin, Double_t xmax, Double_t ymax); virtual voidSetRange(Double_t xmin, Double_t ymin, Double_t zmin, Double_t xmax, Double_t ymax, Double_t zmax); virtual voidSetSavedPoint(Int_t point, Double_t value); virtual voidSetTitle(const char* title = """")MENU ; virtual voidTObject::SetUniqueID(UInt_t uid); virtual voidShowMembers(TMemberInspector& insp) const; virtual Int_tTNamed::S",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TF1.html:18362,error,error,18362,root/html602/TF1.html,https://root.cern,https://root.cern/root/html602/TF1.html,2,['error'],['error']
Availability," Int_t mits, Double_t* work, Double_t precis, Int_t& ifault); virtual voidTMinuit::mnemat(Double_t* emat, Int_t ndim); virtual voidTMinuit::mnerrs(Int_t number, Double_t& eplus, Double_t& eminus, Double_t& eparab, Double_t& gcc); virtual voidTMinuit::mneval(Double_t anext, Double_t& fnext, Int_t& ierev); virtual voidTMinuit::mnexcm(const char* comand, Double_t* plist, Int_t llist, Int_t& ierflg); virtual voidTMinuit::mnexin(Double_t* pint); virtual voidTMinuit::mnfixp(Int_t iint, Int_t& ierr); virtual voidTMinuit::mnfree(Int_t k); virtual voidTMinuit::mngrad(); virtual voidTMinuit::mnhelp(TString comd); virtual voidTMinuit::mnhelp(const char* command = """"); virtual voidTMinuit::mnhes1(); virtual voidTMinuit::mnhess(); virtual voidTMinuit::mnimpr(); virtual voidTMinuit::mninex(Double_t* pint); virtual voidTMinuit::mninit(Int_t i1, Int_t i2, Int_t i3); virtual voidTMinuit::mnlims(); virtual voidTMinuit::mnline(Double_t* start, Double_t fstart, Double_t* step, Double_t slope, Double_t toler); virtual voidTMinuit::mnmatu(Int_t kode); virtual voidTMinuit::mnmigr(); virtual voidTMinuit::mnmnos(); virtual voidTMinuit::mnmnot(Int_t ilax, Int_t ilax2, Double_t& val2pl, Double_t& val2mi); virtual voidTMinuit::mnparm(Int_t k, TString cnamj, Double_t uk, Double_t wk, Double_t a, Double_t b, Int_t& ierflg); virtual voidTMinuit::mnpars(TString& crdbuf, Int_t& icondn); virtual voidTMinuit::mnpfit(Double_t* parx2p, Double_t* pary2p, Int_t npar2p, Double_t* coef2p, Double_t& sdev2p); virtual voidTMinuit::mnpint(Double_t& pexti, Int_t i, Double_t& pinti); virtual voidTMinuit::mnplot(Double_t* xpt, Double_t* ypt, char* chpt, Int_t nxypt, Int_t npagwd, Int_t npagln); virtual voidTMinuit::mnpout(Int_t iuext, TString& chnam, Double_t& val, Double_t& err, Double_t& xlolim, Double_t& xuplim, Int_t& iuint) const; virtual voidTMinuit::mnprin(Int_t inkode, Double_t fval); virtual voidTMinuit::mnpsdf(); virtual voidTMinuit::mnrazz(Double_t ynew, Double_t* pnew, Double_t* y, Int_t& jh, Int_t& j",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMVA__MinuitWrapper.html:5986,toler,toler,5986,root/html528/TMVA__MinuitWrapper.html,https://root.cern,https://root.cern/root/html528/TMVA__MinuitWrapper.html,10,['toler'],['toler']
Availability," Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidDrawBatemanSol(TGeoBatemanSol* sol, Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidDrawCurrentPoint(Int_t color); virtual voidDrawOnly(Option_t* option = """"); virtual voidDrawOverlap(void* ovlp, Option_t* option = """"); virtual voidDrawPanel(); virtual voidDrawPath(const char* path, Option_t* option = """"); virtual voidDrawPolygon(const TGeoPolygon* poly); virtual voidDrawShape(TGeoShape* shape, Option_t* option = """"); virtual voidDrawVolume(TGeoVolume* vol, Option_t* option = """"); virtual voidTObject::Dump() constMENU ; virtual voidEditGeometry(Option_t* option = """"); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidEstimateCameraMove(Double_t tmin, Double_t tmax, Double_t* start, Double_t* end); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidExecuteManagerEvent(TGeoManager* geom, Int_t event, Int_t px, Int_t py); virtual voidExecuteShapeEvent(TGeoShape* shape, Int_t event, Int_t px, Int_t py); virtual voidExecuteVolumeEvent(TGeoVolume* volume, Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static TVirtualGeoPainter*TVirtualGeoPainter::GeoPainter(); virtual voidGetBombFactors(Double_t& bombx, Double_t& bomby, Double_t& bombz, Double_t& bombr) const; virtual Int_tGetBombMode() const; virtual TGeoNode*GetCheckedNode(); TGeoChecker*GetChecker(); virtual Int_tGetColor(Int_t base, Float_t light) const; virtual TGeoVolume*GetDrawnVolume() const; virtual Option_t*TObject::GetDraw",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPainter.html:3270,error,error,3270,root/html534/TGeoPainter.html,https://root.cern,https://root.cern/root/html534/TGeoPainter.html,6,['error'],['error']
Availability," Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTH1::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTH1::Divide(const TH1* h1); virtual voidTH1::Divide(TF1* f1, Double_t c1 = 1); virtual voidTH1::Divide(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """")MENU ; virtual voidTH1::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TH1*TH1::DrawCopy(Option_t* option = """") const; virtual TH1*TH1::DrawNormalized(Option_t* option = """", Double_t norm = 1) const; virtual voidTH1::DrawPanel()MENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTH1::Eval(TF1* f1, Option_t* option = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTH1::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TH1*TH1::FFT(TH1* h_output, Option_t* option); virtual Int_tFill(Double_t x); virtual Int_tFill(Double_t x, Double_t w); virtual Int_tFill(const char* name, Double_t w); virtual voidTNamed::FillBuffer(char*& buffer); virtual voidTH1::FillN(Int_t ntimes, const Double_t* x, const Double_t* w, Int_t stride = 1); virtual voidTH1::FillN(Int_t, const Double_t*, const Double_t*, const Double_t*, Int_t); virtual voidTH1::FillRandom(const char* fname, Int_t ntimes = 5000); virtual voidTH1::FillRandom(TH1* h, Int_t ntimes = 5000); virtual Int_tTH1::FindBin(Double_t x, Double_t y = 0, Double_t z = 0); virtual Int_tTH1::FindFirstBinAbove(Double_t threshold = 0, Int_t axis = 1) const; virtual Int_tTH1::FindFixBin(Double_t x, Double_t y = 0, Double_t z = 0) const; virtual Int_tTH1::FindLastBinAbove(Double_t threshold = 0, Int_t axis = 1) const; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH1K.html:3400,error,error,3400,root/html528/TH1K.html,https://root.cern,https://root.cern/root/html528/TH1K.html,4,['error'],['error']
Availability," Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTH1::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTH1::Divide(const TH1* h1); virtual voidTH1::Divide(TF1* f1, Double_t c1 = 1); virtual voidTH1::Divide(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """")MENU ; virtual voidTH1::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TH1*TH1::DrawCopy(Option_t* option = """") const; virtual TH1*TH1::DrawNormalized(Option_t* option = """", Double_t norm = 1) const; virtual voidTH1::DrawPanel()MENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTH1::Eval(TF1* f1, Option_t* option = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTH1::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TH1*TH1::FFT(TH1* h_output, Option_t* option); virtual Int_tFill(Double_t); virtual Int_tFill(Double_t, Double_t); virtual Int_tFill(const char*, Double_t); Int_tFill(Double_t, const char*, Double_t); Int_tFill(const char*, Double_t, Double_t); Int_tFill(const char*, const char*, Double_t); virtual Int_tFill(Double_t x, Double_t y, Double_t z); virtual Int_tFill(Double_t x, Double_t y, Double_t z, Double_t w); virtual Int_tFill(const char* namex, const char* namey, const char* namez, Double_t w); virtual Int_tFill(const char* namex, Double_t y, const char* namez, Double_t w); virtual Int_tFill(const char* namex, const char* namey, Double_t z, Double_t w); virtual Int_tFill(Double_t x, const char* namey, const char* namez, Double_t w); virtual Int_tFill(Double_t x, const char* namey, Double_t z, Double_t w); virtual Int_tFill(Double_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH3.html:3211,error,error,3211,root/html528/TH3.html,https://root.cern,https://root.cern/root/html528/TH3.html,4,['error'],['error']
Availability," Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTH1::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTH1::Divide(const TH1* h1); virtual voidTH1::Divide(TF1* f1, Double_t c1 = 1); virtual voidTH1::Divide(const TH1* h1, const TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """")MENU ; virtual voidTH1::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual TH1*TH1::DrawCopy(Option_t* option = """") const; virtual TH1*TH1::DrawNormalized(Option_t* option = """", Double_t norm = 1) const; virtual voidTH1::DrawPanel()MENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTH1::Eval(TF1* f1, Option_t* option = """"); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTH1::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TH1*TH1::FFT(TH1* h_output, Option_t* option); virtual Int_tFill(Double_t); virtual Int_tFill(const char*, Double_t); virtual Int_tFill(Double_t x, Double_t y); virtual Int_tFill(Double_t x, Double_t y, Double_t w); virtual Int_tFill(Double_t x, const char* namey, Double_t w); virtual Int_tFill(const char* namex, Double_t y, Double_t w); virtual Int_tFill(const char* namex, const char* namey, Double_t w); virtual voidTNamed::FillBuffer(char*& buffer); virtual voidFillN(Int_t, const Double_t*, const Double_t*, Int_t); virtual voidFillN(Int_t ntimes, const Double_t* x, const Double_t* y, const Double_t* w, Int_t stride = 1); virtual voidFillRandom(const char* fname, Int_t ntimes = 5000); virtual voidFillRandom(TH1* h, Int_t ntimes = 5000); virtual Int_tTH1::FindBin(Double_t x, Double_t y = 0, Double_t z = 0); virtual Int_tFindFirstBinA",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH2.html:2958,error,error,2958,root/html528/TH2.html,https://root.cern,https://root.cern/root/html528/TH2.html,4,['error'],['error']
Availability," Int_t size = 0, Int_t tcpwindowsize = -1, TSocket* s = 0, Int_t* err = 0); static TSocket*TSocket::CreateAuthSocket(const char* user, const char* host, Int_t port, Int_t size = 0, Int_t tcpwindowsize = -1, TSocket* s = 0, Int_t* err = 0); voidCtrlC(); virtual voidTObject::Delete(Option_t* option = """")MENU ; voidDisableTimeout(); voidDisconnectSession(Int_t id, Option_t* opt = """"); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDoError(int level, const char* location, const char* fmt, va_list va) const; virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidEnableTimeout(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tFlush(); UInt_tTSocket::GetBytesRecv() const; UInt_tTSocket::GetBytesSent() const; virtual Int_tGetClientID() const; virtual Int_tGetClientIDSize() const; static Int_tTSocket::GetClientProtocol(); Int_tTSocket::GetCompressionAlgorithm() const; Int_tTSocket::GetCompressionLevel() const; Int_tTSocket::GetCompressionSettings() const; virtual Int_tTSocket::GetDescriptor() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tTSocket::GetErrorCode() const; virtual const char*TObject::GetIconName() const; TInetAddressTSocket::GetInetAddress() const; Int_tGetInterrupt(Bool_t& forward); TTimeStampTSocket::GetLastUsage(); virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TXSocket.html:2162,error,error,2162,root/html530/TXSocket.html,https://root.cern,https://root.cern/root/html530/TXSocket.html,9,['error'],['error']
Availability," Int_t smoothWindow, bool compton); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; const char*Deconvolution(float* source, const float* response, Int_t ssize, Int_t numberIterations, Int_t numberRepetitions, Double_t boost); const char*DeconvolutionRL(float* source, const float* response, Int_t ssize, Int_t numberIterations, Int_t numberRepetitions, Double_t boost); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TH1*GetHistogram() const; virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; Int_tGetNPeaks() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Float_t*GetPositionX() const; Float_t*GetPositionY() const; virtual const char*TNamed::Ge",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TSpectrum.html:2955,Error,Error,2955,root/html532/TSpectrum.html,https://root.cern,https://root.cern/root/html532/TSpectrum.html,2,['Error'],['Error']
Availability," Int_t y, UInt_t w, UInt_t h) override;  Clear a window area to the background color. ;  ; void ClearWindow () override;  Clear current window. ;  ; void ClearWindow (Window_t id) override;  Clear window. ;  ; void CloseDisplay () override;  Close connection to display server. ;  ; void ClosePixmap () override;  Delete current pixmap. ;  ; void CloseWindow () override;  Delete current window. ;  ; void ConvertPrimarySelection (Window_t id, Atom_t clipboard, Time_t when) override;  XConvertSelection() causes a SelectionRequest event to be sent to the current primary selection owner. ;  ; void ConvertSelection (Window_t, Atom_t &, Atom_t &, Atom_t &, Time_t &) override;  Requests that the specified selection be converted to the specified target type. ;  ; void CopyArea (Drawable_t src, Drawable_t dest, GContext_t gc, Int_t src_x, Int_t src_y, UInt_t width, UInt_t height, Int_t dest_x, Int_t dest_y) override;  Copy a drawable (i.e. ;  ; void CopyGC (GContext_t org, GContext_t dest, Mask_t mask) override;  Copies graphics context from org to dest. ;  ; void CopyPixmap (Int_t wid, Int_t xpos, Int_t ypos) override;  Copy the pixmap wid at the position xpos, ypos in the current window. ;  ; Pixmap_t CreateBitmap (Drawable_t id, const char *bitmap, UInt_t width, UInt_t height) override;  Create a bitmap (i.e. pixmap with depth 1) from the bitmap data. ;  ; Cursor_t CreateCursor (ECursor cursor) override;  Create cursor handle (just return cursor from cursor pool fCursors). ;  ; GContext_t CreateGC (Drawable_t id, GCValues_t *gval) override;  Create a graphics context using the values set in gval (but only for those entries that are in the mask). ;  ; Drawable_t CreateImage (UInt_t width, UInt_t height) override;  Create a client-side XImage. Returns handle to XImage. ;  ; Bool_t CreatePictureFromData (Drawable_t id, char **data, Pixmap_t &pict, Pixmap_t &pict_mask, PictureAttributes_t &attr) override;  Create a picture pixmap from data. ;  ; Bool_t CreatePictureFromFile (Dra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGX11.html:3811,mask,mask,3811,doc/master/classTGX11.html,https://root.cern,https://root.cern/doc/master/classTGX11.html,2,['mask'],['mask']
Availability," Int_t yroot) override;  Handle dragging position events. ;  ; Bool_t HandleDoubleClick (Event_t *event) override;  Handle double click event in the list tree (only for kButton1). ;  ; Bool_t HandleKey (Event_t *event) override;  The key press event handler converts a key press to some line editor action. ;  ; Bool_t HandleMotion (Event_t *event) override;  Handle mouse motion event. ;  ; Bool_t HasUserControl () const;  ; void HighlightChildren (TGListTreeItem *item, Bool_t state, Bool_t draw);  Highlight item children. ;  ; void HighlightItem (TGListTreeItem *item);  Highlight item. ;  ; void HighlightItem (TGListTreeItem *item, Bool_t state, Bool_t draw);  Highlight tree item. ;  ; void Home (Bool_t select=kFALSE) override;  Move content to the top. ;  ; TClass * IsA () const override;  ; Bool_t IsEventHandled () const;  ; virtual void KeyPressed (TGListTreeItem *entry, UInt_t keysym, UInt_t mask);  Signal emitted when keyboard key pressed. ;  ; void LineDown (Bool_t select=kFALSE) override;  Move content one item-size down. ;  ; void LineUp (Bool_t select=kFALSE) override;  Move content one item-size up. ;  ; virtual void MouseOver (TGListTreeItem *entry);  Signal emitted when pointer is over entry. ;  ; virtual void MouseOver (TGListTreeItem *entry, UInt_t mask);  Signal emitted when pointer is over entry. ;  ; void OpenItem (TGListTreeItem *item);  Open item in list tree (i.e. show child items). ;  ; void PageDown (Bool_t select=kFALSE) override;  Move content one page down. ;  ; void PageUp (Bool_t select=kFALSE) override;  Move content one page up. ;  ; Int_t RecursiveDeleteItem (TGListTreeItem *item, void *userData);  Delete item with fUserData == ptr. ;  ; void RenameItem (TGListTreeItem *item, const char *string);  Rename item in list tree. ;  ; void RenameSelected (const char *string);  ; Int_t Reparent (TGListTreeItem *item, TGListTreeItem *newparent);  Make newparent the new parent of item. ;  ; Int_t ReparentChildren (TGListTreeItem *item, TGListTreeI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGListTree.html:8210,down,down,8210,doc/master/classTGListTree.html,https://root.cern,https://root.cern/doc/master/classTGListTree.html,1,['down'],['down']
Availability," Int_t* binMap, Bool_t doClear) const; get an error matrix, cumulated over several bins; ematrix: output error matrix histogram; emat: error matrix; binMap: for each bin of the original output distribution; specify the destination bin. A value of -1 means that the bin; is discarded. 0 means underflow bin, 1 first bin, ...; binMap[0] : destination of underflow bin; binMap[1] : destination of first bin. void GetEmatrix(TH2* ematrix, const Int_t* binMap = 0) const; get output error matrix, cumulated over several bins; ematrix: output error matrix histogram; binMap: for each bin of the original output distribution; specify the destination bin. A value of -1 means that the bin; is discarded. 0 means underflow bin, 1 first bin, ...; binMap[0] : destination of underflow bin; binMap[1] : destination of first bin. Double_t GetRhoI(TH1* rhoi, TH2* ematrixinv = 0, const Int_t* binMap = 0) const; get global correlation coefficients and inverted error matrix,; cumulated over several bins; rhoi: global correlation histogram; ematrixinv: inverse of error matrix (if pointer==0 it is not returned); binMap: for each bin of the original output distribution; specify the destination bin. A value of -1 means that the bin; is discarded. 0 means underflow bin, 1 first bin, ...; binMap[0] : destination of underflow bin; binMap[1] : destination of first bin. return value: average global correlation. void GetRhoIJ(TH2* rhoij, const Int_t* binMap = 0) const; get correlation coefficient matrix, cumulated over several bins; rhoij: correlation coefficient matrix histogram; binMap: for each bin of the original output distribution; specify the destination bin. A value of -1 means that the bin; is discarded. 0 means underflow bin, 1 first bin, ...; binMap[0] : destination of underflow bin; binMap[1] : destination of first bin. TUnfold(const TUnfold& ). TMatrixDSparse * CreateSparseMatrix(Int_t nrow, Int_t ncol, Int_t nele, Int_t* row, Int_t* col, Double_t* data) const. Int_t GetNx(void). Int_t GetNy(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TUnfold.html:33092,error,error,33092,root/html528/TUnfold.html,https://root.cern,https://root.cern/root/html528/TUnfold.html,8,['error'],['error']
Availability," Int_t* pos = 0); Return kTRUE if method 'level' is in the list. void SetDetails(Int_t level, const char* details); Set authentication details for specified level. void Print(Option_t* option = """") const; Print object content. void PrintEstablished() const; Print info about established authentication vis-a-vis of this Host. void ReOrder(Int_t nmet, Int_t* fmet); Reorder nmet methods according fmet[nmet]. void Update(THostAuth* ha); Update info with the one in ha; Remaining methods, if any, get lower priority. void SetFirst(Int_t level); Set 'method' to be the first used (if in the list ...). void SetLast(Int_t level); Set 'method' to be the last used (if in the list ...). void AddFirst(Int_t level, const char* details = 0); Add new method in first position; If already in the list, set as first method 'level' with; authentication 'details'.; Faster then AddMethod(method,details)+SetFirst(method). void CountSuccess(Int_t level); Count successes for 'method'. void CountFailure(Int_t level); Count failures for 'method'. TRootSecContext * CreateSecContext(const char* user, const char* host, Int_t meth, Int_t offset, const char* details, const char* token, TDatime expdate = kROOTTZERO, void* ctx = 0, Int_t key = -1); Create a Security context and add it to local list; Return pointer to it to be stored in TAuthenticate. void AsString(TString& out) const; Return a static string with all info in a serialized form. Int_t NumMethods() const; { return fNumMethods; }. Int_t GetMethod(Int_t idx) const; { return fMethods[idx]; }. Int_t GetFailure(Int_t idx) const; { return fFailure[idx]; }. Int_t GetSuccess(Int_t idx) const; { return fSuccess[idx]; }. Bool_t IsActive() const; { return fActive; }. void DeActivate(); { fActive = kFALSE; }. void Activate(); { fActive = kTRUE; }. const char * GetDetailsByIdx(Int_t idx) const; { return fDetails[idx]; }. const char * GetHost() const; { return fHost; }. Int_t GetServer() const; { return (Int_t)fServer; }. const char * GetUser() const; { r",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THostAuth.html:10690,failure,failures,10690,root/html528/THostAuth.html,https://root.cern,https://root.cern/root/html528/THostAuth.html,10,['failure'],['failures']
Availability," Int_tTF1::fNpxNumber of points used for the graphical representation; Int_tTF1::fNsaveNumber of points used to fill array fSave; Int_tTFormula::fNstringNumber of different constants character strings; Int_tTFormula::fNumberformula number identifier; Int_tTFormula::fNvalNumber of different variables in expression; TOperOffset*TFormula::fOperOffset![fNOperOptimized] Offsets of operrands; Int_t*TFormula::fOperOptimized![fNOperOptimized] List of operators. (See documentation for changes made at version 7); G__p2memfuncTFormula::fOptimal!pointer to optimal function; Double_t*TF1::fParErrors[fNpar] Array of errors of the fNpar parameters; Double_t*TF1::fParMax[fNpar] Array of upper limits of the fNpar parameters; Double_t*TF1::fParMin[fNpar] Array of lower limits of the fNpar parameters; Double_t*TFormula::fParams[fNpar] Array of fNpar parameters; TObject*TF1::fParent!Parent object hooking this function (if one); TFormulaPrimitive**TFormula::fPredefined![fNPar] predefined function ; Double_t*TF1::fSave[fNsave] Array of fNsave function values; TStringTNamed::fTitleobject title; Int_tTF1::fType(=0 for standard functions, 1 if pointer to function); Double_tfXYValue along Y (if projection X) or X (if projection Y); Double_tTF1::fXmaxUpper bounds for the range; Double_tTF1::fXminLower bounds for the range; static Bool_tTF1::fgAbsValueuse absolute value of function when computing integral; static TF1*TF1::fgCurrentpointer to current function being processed; static Bool_tTF1::fgRejectPointTrue if point must be rejected in a fit. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TF12(); TF12 default constructor. TF12(const char* name, TF2* f2, Double_t xy, Option_t* option = ""x""); TF12 normal constructor.; Create a TF12 (special TF1) from a projection of a TF2; for a fix value of Y if option=""X"" or X if option=""Y""; This value may be changed at any time via TF12::SetXY(xy). ~TF12(); F2 default destructor. TF12(const TF12& f12); Copy const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TF12.html:20667,error,errors,20667,root/html528/TF12.html,https://root.cern,https://root.cern/root/html528/TF12.html,6,['error'],['errors']
Availability," Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual intVersion() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TSelector(const TSelector&); TSelector&operator=(const TSelector&). Data Members; public:. enum EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortfAbortAbort status; TList*fInputList of objects available during processing; TObject*fObject!Current object if processing object (vs. TTree); TStringfOptionOption given to TTree::Process; TSelectorList*fOutput!List of objects created during processing; Long64_tfStatusSelector status. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSelector(); Default selector ctor. ~TSelector(); Selector destructor. void Abort(const char* why, TSelector::EAbort what = kAbortProcess); Abort processing. If what = kAbortProcess, the Process() loop will be; aborted. If what = kAbortFile, the current file in a chain will be; aborted and the processing will continue with the next file, if there; is no next file then Process() will be aborted. Abort() can also be; called from Begin(), SlaveBegin(), Init() and Notify(). After abort; the SlaveTerminate() and Terminate() are always called. The abort flag; can be checked in these methods using GetAbort(). TSelector * GetSelector(const char* filename); The code in filename is l",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TSelector.html:8676,avail,available,8676,root/html534/TSelector.html,https://root.cern,https://root.cern/root/html534/TSelector.html,2,['avail'],['available']
Availability," Int_tTObject::TestBits(UInt_t f) const; virtual voidTObject::UseCurrentStyle(); virtual intVersion() const; virtual voidTObject::Warning(const char* method, const char* msgfmt) const; virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0); virtual Int_tTObject::Write(const char* name = 0, Int_t option = 0, Int_t bufsize = 0) const. protected:. virtual voidTObject::DoError(int level, const char* location, const char* fmt, va_list va) const; voidTObject::MakeZombie(). private:. TSelector(const TSelector&); TSelector&operator=(const TSelector&). Data Members; public:. enum EAbort { kContinue; kAbortProcess; kAbortFile; };; enum TObject::EStatusBits { kCanDelete; kMustCleanup; kObjInCanvas; kIsReferenced; kHasUUID; kCannotPick; kNoContextMenu; kInvalidObject; };; enum TObject::[unnamed] { kIsOnHeap; kNotDeleted; kZombie; kBitMask; kSingleKey; kOverwrite; kWriteDelete; };. protected:. TSelector::EAbortfAbortabort status; TList*fInputlist of objects available during processing; TObject*fObjectcurrent object if processing object (vs. TTree); TStringfOptionoption given to TTree::Process; TSelectorList*fOutputlist of objects created during processing; Long64_tfStatusselector status. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TSelector(); Default selector ctor. ~TSelector(); Selector destructor. void Abort(const char* why, TSelector::EAbort what = kAbortProcess); Abort processing. If what = kAbortProcess, the Process() loop will be; aborted. If what = kAbortFile, the current file in a chain will be; aborted and the processing will continue with the next file, if there; is no next file then Process() will be aborted. Abort() can also be; called from Begin(), SlaveBegin(), Init() and Notify(). After abort; the SlaveTerminate() and Terminate() are always called. The abort flag; can be checked in these methods using GetAbort(). TSelector * GetSelector(const char* filename); The code in filename is lo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TSelector.html:8554,avail,available,8554,root/html528/TSelector.html,https://root.cern,https://root.cern/root/html528/TSelector.html,4,['avail'],['available']
Availability," Int_tTVirtualMutex::Acquire(); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual Int_tCleanUp(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual TVirtualMutex*Factory(Bool_t recursive = kFALSE); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTObject::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bool_tTObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TMutex.html:1594,error,error,1594,root/html528/TMutex.html,https://root.cern,https://root.cern/root/html528/TMutex.html,10,['error'],['error']
Availability," Int_tfNtriesNumber of times a measurement is repeated; TFile*fOutFileOutput file; TStringfOutFileNameName of the output file; TProof*fProofProof; TProof*fProofDSProof to be used for dataset actions; TPBReadType*fReadTypeType of read (partial, full); TProofBenchRunCPU*fRunCPUInstance to run CPU scans; TProofBenchRunDataRead*fRunDSInstance to run data-read scans. private:. Bool_tfUnlinkOutfileWhether to remove empty output files. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TProofBench(const char* url, const char* outfile = ""<default>"", const char* proofopt = 0); Constructor: check PROOF and load selectors PAR. ~TProofBench(); Destructor. Int_t OpenOutFile(Bool_t wrt = kFALSE, Bool_t verbose = kTRUE); Set the otuput file; Return 0 on success, -1 on error. Int_t SetOutFile(const char* outfile, Bool_t verbose = kTRUE); Set the output file; Return 0 on success, -1 on error. Int_t RunCPU(Long64_t nevents = -1, Int_t start = -1, Int_t stop = -1, Int_t step = -1); Perform the CPU run; Return 0 on success, -1 on error. Int_t RunCPUx(Long64_t nevents = -1, Int_t start = -1, Int_t stop = -1); Perform the CPU run scanning over the number of workers per node; Return 0 on success, -1 on error. void DrawCPU(const char* outfile, const char* opt = ""std:""); Draw the CPU speedup plot.; opt = 'std:' draw standard evt/s plot; 'stdx:' draw standard evt/s plot, 1 worker per node; 'norm:' draw normalized plot; 'normx:' draw normalized plot, 1 worker per node. Int_t RunDataSet(const char* dset = ""BenchDataSet"", Int_t start = 1, Int_t stop = -1, Int_t step = 1); Perform a test using dataset 'dset'; Return 0 on success, -1 on error; Open the file for the results. Int_t RunDataSetx(const char* dset = ""BenchDataSet"", Int_t start = 1, Int_t stop = -1); Perform a test using dataset 'dset' scanning over the number of workers; per node.; Return 0 on success, -1 on error; Open the file for the results. void DrawDataSet(const char* outfile, const char* o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TProofBench.html:8289,error,error,8289,root/html530/TProofBench.html,https://root.cern,https://root.cern/root/html530/TProofBench.html,1,['error'],['error']
Availability," Int_t ; bin); const. virtual . Return value of error associated to bin number bin. ; if the sum of squares of weights has been defined (via Sumw2), this function returns the sqrt(sum of w2). otherwise it returns the sqrt(contents) for this bin. ; Reimplemented in TH1K, TH2Poly, TProfile, TProfile2D, TProfile2Poly, TProfile2Poly, and TProfile3D.; Definition at line 9063 of file TH1.cxx. ◆ GetBinError() [2/3]. virtual Double_t TH1::GetBinError ; (; Int_t ; binx, . Int_t ; biny . ); const. inlinevirtual . Reimplemented in TH1K, TProfile, TProfile2D, TH2Poly, TProfile2Poly, and TProfile3D.; Definition at line 269 of file TH1.h. ◆ GetBinError() [3/3]. virtual Double_t TH1::GetBinError ; (; Int_t ; binx, . Int_t ; biny, . Int_t ; binz . ); const. inlinevirtual . Reimplemented in TH1K, TProfile, TProfile3D, TProfile2D, TH2Poly, and TProfile2Poly.; Definition at line 270 of file TH1.h. ◆ GetBinErrorLow(). Double_t TH1::GetBinErrorLow ; (; Int_t ; bin); const. virtual . Return lower error associated to bin number bin. ; The error will depend on the statistic option used will return the binContent - lower interval value ; Reimplemented in TH2, and TH3.; Definition at line 9079 of file TH1.cxx. ◆ GetBinErrorOption(). virtual EBinErrorOpt TH1::GetBinErrorOption ; (; ); const. inlinevirtual . Definition at line 273 of file TH1.h. ◆ GetBinErrorSqUnchecked(). virtual Double_t TH1::GetBinErrorSqUnchecked ; (; Int_t ; bin); const. inlineprotectedvirtual . Reimplemented in TProfile, TProfile2D, and TProfile3D.; Definition at line 449 of file TH1.h. ◆ GetBinErrorUp(). Double_t TH1::GetBinErrorUp ; (; Int_t ; bin); const. virtual . Return upper error associated to bin number bin. ; The error will depend on the statistic option used will return the binContent - upper interval value ; Reimplemented in TH2, and TH3.; Definition at line 9110 of file TH1.cxx. ◆ GetBinLowEdge(). Double_t TH1::GetBinLowEdge ; (; Int_t ; bin); const. virtual . Return bin lower edge for 1D histogram. ; Better t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:150333,error,error,150333,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['error'],['error']
Availability," Int_t ; e). virtual . Get AttLine pointer for specified error dimension. ; Definition at line 1632 of file TGraphMultiErrors.cxx. ◆ GetErrorX(). Double_t TGraphMultiErrors::GetErrorX ; (; Int_t ; i); const. overridevirtual . Get error on x coordinate for point i. ; In case of asymmetric errors the mean of the square sum is returned ; Reimplemented from TGraph.; Definition at line 1439 of file TGraphMultiErrors.cxx. ◆ GetErrorXhigh(). Double_t TGraphMultiErrors::GetErrorXhigh ; (; Int_t ; i); const. overridevirtual . Get high error on x coordinate for point i. ; Reimplemented from TGraph.; Definition at line 1492 of file TGraphMultiErrors.cxx. ◆ GetErrorXlow(). Double_t TGraphMultiErrors::GetErrorXlow ; (; Int_t ; i); const. overridevirtual . Get low error on x coordinate for point i. ; Reimplemented from TGraph.; Definition at line 1481 of file TGraphMultiErrors.cxx. ◆ GetErrorY() [1/2]. Double_t TGraphMultiErrors::GetErrorY ; (; Int_t ; i); const. overridevirtual . Get error on y coordinate for point i. ; The multiple errors of the dimensions are summed according to fSumErrorsMode. In case of asymmetric errors the mean of the square sum is returned ; Reimplemented from TGraph.; Definition at line 1454 of file TGraphMultiErrors.cxx. ◆ GetErrorY() [2/2]. Double_t TGraphMultiErrors::GetErrorY ; (; Int_t ; i, . Int_t ; e . ); const. virtual . Get error e on y coordinate for point i. ; In case of asymmetric errors the mean of the square sum is returned ; Definition at line 1468 of file TGraphMultiErrors.cxx. ◆ GetErrorYhigh() [1/2]. Double_t TGraphMultiErrors::GetErrorYhigh ; (; Int_t ; i); const. overridevirtual . Get high error on y coordinate for point i. ; The multiple errors of the dimensions are summed according to fSumErrorsMode. ; Reimplemented from TGraph.; Definition at line 1530 of file TGraphMultiErrors.cxx. ◆ GetErrorYhigh() [2/2]. Double_t TGraphMultiErrors::GetErrorYhigh ; (; Int_t ; i, . Int_t ; e . ); const. virtual . Get high error e on y coordinate fo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:62662,error,error,62662,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['error'],['error']
Availability," Int_t ; m, . Int_t ; n, . Int_t & ; ifail . ). virtual . Inverts a symmetric matrix. ; inverts a symmetric matrix. matrix is first scaled to have all ones on the diagonal (equivalent to change of units) but no pivoting is done since matrix is positive-definite. ; Definition at line 7696 of file TMinuit.cxx. ◆ mnwarn(). void TMinuit::mnwarn ; (; const char * ; copt1, . const char * ; corg1, . const char * ; cmes1 . ). virtual . Prints Warning messages. . If COPT='W', CMES is a WARning message from CORG.; If COPT='D', CMES is a DEBug message from CORG.; If SET WARnings is in effect (the default), this routine prints the warning message CMES coming from CORG.; If SET NOWarnings is in effect, the warning message is stored in a circular buffer of length kMAXMES.; If called with CORG=CMES='SHO', it prints the messages in the circular buffer, FIFO, and empties the buffer. . Definition at line 7784 of file TMinuit.cxx. ◆ mnwerr(). void TMinuit::mnwerr ; (; ). virtual . Calculates the WERR, external parameter errors. ; and the global correlation coefficients, to be called whenever a new covariance matrix is available. ; Definition at line 7861 of file TMinuit.cxx. ◆ operator=(). TMinuit & TMinuit::operator= ; (; const TMinuit & ; m). private . ◆ Release(). Int_t TMinuit::Release ; (; Int_t ; parNo). virtual . release a parameter ; Definition at line 894 of file TMinuit.cxx. ◆ SetErrorDef(). Int_t TMinuit::SetErrorDef ; (; Double_t ; up). virtual . To get the n-sigma contour the error def parameter ""up"" has to set to n^2. ; Definition at line 908 of file TMinuit.cxx. ◆ SetFCN(). void TMinuit::SetFCN ; (; void(*)(Int_t &, Double_t *, Double_t &f, Double_t *, Int_t) ; fcn). virtual . To set the address of the minimization function. ; Definition at line 920 of file TMinuit.cxx. ◆ SetGraphicsMode(). virtual void TMinuit::SetGraphicsMode ; (; Bool_t ; mode = kTRUE). inlinevirtual . Definition at line 263 of file TMinuit.h. ◆ SetMaxIterations(). virtual void TMinuit::SetMaxIterati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMinuit.html:66973,error,errors,66973,doc/master/classTMinuit.html,https://root.cern,https://root.cern/doc/master/classTMinuit.html,1,['error'],['errors']
Availability," Int_t ; npnt . ). overridevirtual . Fills the region closed by the specified path. ; The path is closed automatically if the last point in the list does not coincide with the first point.; Parameters. [in]idwindow identifier ; [in]gcgraphics context ; [in]*pointsspecifies an array of points ; [in]npntspecifies the number of points in the array. GC components in use: function, plane-mask, fill-style, fill-rule, subwindow-mode, clip-x-origin, clip-y-origin, and clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX. ◆ FillRectangle(). void TGWin32VirtualXProxy::FillRectangle ; (; Drawable_t ; id, . GContext_t ; gc, . Int_t ; x, . Int_t ; y, . UInt_t ; w, . UInt_t ; h . ). overridevirtual . Fills the specified rectangle defined by [x,y] [x+w,y] [x+w,y+h] [x,y+h]. ; using the GC you specify.; GC components in use are: function, plane-mask, fill-style, subwindow-mode, clip-x-origin, clip-y-origin, clip-mask. GC mode-dependent components: foreground, background, tile, stipple, tile-stipple-x-origin, and tile-stipple-y-origin. (see also the GCValues_t structure) ; Reimplemented from TVirtualX. ◆ FindRWindow(). Window_t TGWin32VirtualXProxy::FindRWindow ; (; Window_t ; win, . Window_t ; dragwin, . Window_t ; input, . int ; x, . int ; y, . int ; maxd . ). overridevirtual . Recursively search in the children of Window for a Window which is at location x, y and is DND aware, with a maximum depth of maxd. ; Reimplemented from TVirtualX. ◆ FreeColor(). void TGWin32VirtualXProxy::FreeColor ; (; Colormap_t ; cmap, . ULong_t ; pixel . ). overridevirtual . Frees color cell with specified pixel value. ; Reimplemented from TVirtualX. ◆ FreeFontNames(). void TGWin32VirtualXProxy::FreeFontNames ; (; char ** ; fontlist). overridevirtual . Frees the specified the array of strings ""fontlist"". ; Reimplemented from TVirtualX. ◆ FreeFontStruct(). void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGWin32VirtualXProxy.html:76014,mask,mask,76014,doc/master/classTGWin32VirtualXProxy.html,https://root.cern,https://root.cern/doc/master/classTGWin32VirtualXProxy.html,2,['mask'],['mask']
Availability," Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title of object. ;  ; virtual UInt_t GetUniqueID () const;  Return the unique object id. ;  ; virtual Bool_t HandleTimer (TTimer *timer);  Execute action in response of a timer timing out. ;  ; Bool_t HasInconsistentHash () const;  Return true is the type of this object is kn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooLinkedList.html:5585,error,error,5585,doc/master/classRooLinkedList.html,https://root.cern,https://root.cern/doc/master/classRooLinkedList.html,1,['error'],['error']
Availability," Int_t Compare (const TObject *obj) const;  Compare abstract method. ;  ; virtual void Copy (TObject &object) const;  Copy this to obj. ;  ; virtual Int_t DistancetoPrimitive (Int_t px, Int_t py);  Computes distance from point (px,py) to the object. ;  ; virtual void Draw (Option_t *option="""");  Default Draw method for all objects. ;  ; virtual void DrawClass () const;  Draw class inheritance tree of the class to which this object belongs. ;  ; virtual TObject * DrawClone (Option_t *option="""") const;  Draw a clone of this object in the current selected pad with: gROOT->SetSelectedPad(c1). ;  ; virtual void Dump () const;  Dump contents of object on stdout. ;  ; virtual void Error (const char *method, const char *msgfmt,...) const;  Issue error message. ;  ; virtual void Execute (const char *method, const char *params, Int_t *error=nullptr);  Execute method on this object with the given parameter string, e.g. ;  ; virtual void Execute (TMethod *method, TObjArray *params, Int_t *error=nullptr);  Execute method on this object with parameters stored in the TObjArray. ;  ; virtual void ExecuteEvent (Int_t event, Int_t px, Int_t py);  Execute action corresponding to an event at (px,py). ;  ; virtual void Fatal (const char *method, const char *msgfmt,...) const;  Issue fatal error message. ;  ; virtual TObject * FindObject (const char *name) const;  Must be redefined in derived classes. ;  ; virtual TObject * FindObject (const TObject *obj) const;  Must be redefined in derived classes. ;  ; virtual Option_t * GetDrawOption () const;  Get option used by the graphics system to draw this object. ;  ; virtual const char * GetIconName () const;  Returns mime type name of object. ;  ; virtual const char * GetName () const;  Returns name of object. ;  ; virtual char * GetObjectInfo (Int_t px, Int_t py) const;  Returns string containing info about the object at position (px,py). ;  ; virtual Option_t * GetOption () const;  ; virtual const char * GetTitle () const;  Returns title o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTExMap.html:4080,error,error,4080,doc/master/classTExMap.html,https://root.cern,https://root.cern/doc/master/classTExMap.html,6,['error'],['error']
Availability," Integrator workspace; Bool_t_useIntegrandLimitsIf true limits of function binding are ued; Bool_tRooAbsIntegrator::_validIs integrator in valid state?; Double_t*_x! do not persist; Double_t_xmax! Upper integration bound; Double_t_xmin! Lower integration bound. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; void registerIntegrator(RooNumIntFactory& fact); Register RooIntegrator1D, is parameters and capabilities with RooNumIntFactory. RooIntegrator1D(); Default constructor. RooIntegrator1D(const RooAbsFunc& function, RooIntegrator1D::SummationRule rule = Trapezoid, Int_t maxSteps = 0, Double_t eps = 0); Construct integrator on given function binding, using specified summation; rule, maximum number of steps and conversion tolerance. The integration; limits are taken from the function binding. RooIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, RooIntegrator1D::SummationRule rule = Trapezoid, Int_t maxSteps = 0, Double_t eps = 0); Construct integrator on given function binding for given range,; using specified summation rule, maximum number of steps and; conversion tolerance. The integration limits are taken from the; function binding. RooIntegrator1D(const RooAbsFunc& function, const RooNumIntConfig& config); Construct integrator on given function binding, using specified; configuration object. The integration limits are taken from the; function binding. RooIntegrator1D(const RooAbsFunc& function, Double_t xmin, Double_t xmax, const RooNumIntConfig& config); Construct integrator on given function binding, using specified; configuration object and integration range. RooAbsIntegrator* clone(const RooAbsFunc& function, const RooNumIntConfig& config) const; Clone integrator with new function binding and configuration. Needed by RooNumIntFactory. Bool_t initialize(); Initialize the integrator. ~RooIntegrator1D(); Destructor. Bool_t setLimits(Double_t* xmin, Double_t* xmax); Change our integration limits. Ret",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooIntegrator1D.html:8622,toler,tolerance,8622,root/html528/RooIntegrator1D.html,https://root.cern,https://root.cern/root/html528/RooIntegrator1D.html,1,['toler'],['tolerance']
Availability," Layer 3 BATCH NORM Layer: Input/Output = ( 100 , 100 , 1 ) Norm dim = 100 axis = -1; ; Layer 4 DENSE Layer: ( Input = 100 , Width = 100 ) Output = ( 1 , 100 , 100 ) Activation Function = Relu; Layer 5 BATCH NORM Layer: Input/Output = ( 100 , 100 , 1 ) Norm dim = 100 axis = -1; ; Layer 6 DENSE Layer: ( Input = 100 , Width = 100 ) Output = ( 1 , 100 , 100 ) Activation Function = Relu; Layer 7 DENSE Layer: ( Input = 100 , Width = 1 ) Output = ( 1 , 100 , 1 ) Activation Function = Identity; : Using 1280 events for training and 320 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 119.005; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.881238 0.852851 0.181896 0.0160504 7235.64 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.658204 0.827727 0.182292 0.0161751 7223.84 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.58547 0.792475 0.182478 0.0158424 7201.32 0; : 4 Minimum Test error found - save the configuration ; : 4 | 0.508772 0.760461 0.18258 0.0158465 7197.11 0; : 5 Minimum Test error found - save the configuration ; : 5 | 0.445197 0.705323 0.183204 0.015935 7174.07 0; : 6 | 0.409018 0.708257 0.18274 0.0151517 7160.42 1; : 7 | 0.369062 0.747523 0.18295 0.0151377 7150.84 2; : 8 | 0.31294 0.740134 0.183339 0.015769 7161.2 3; : 9 | 0.256184 0.756239 0.181088 0.0154708 7245.63 4; : 10 | 0.224257 0.809455 0.18089 0.0153446 7248.78 5; : ; : Elapsed time for training with 1600 events: 1.86 sec ; : Evaluate deep neural network on CPU using batches with size = 100; : ; TMVA_DNN_CPU : [dataset] : Evaluation of TMVA_DNN_CPU on training sample (1600 events",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html:11575,error,error,11575,doc/master/TMVA__CNN__Classification_8C.html,https://root.cern,https://root.cern/doc/master/TMVA__CNN__Classification_8C.html,1,['error'],['error']
Availability," Libraries. Function documentation; TGNumberEntry(const TGWindow* parent = 0, Double_t val = 0, Int_t digitwidth = 5, Int_t id = -1, TGNumberFormat::EStyle style = kNESReal, TGNumberFormat::EAttribute attr = kNEAAnyNumber, TGNumberFormat::ELimit limits = kNELNoLimits, Double_t min = 0, Double_t max = 1); Constructs a numeric entry widget. ~TGNumberEntry(); Destructs a numeric entry widget. void Associate(const TGWindow* w); Make w the window that will receive the generated messages. void SetLogStep(Bool_t on = kTRUE); Set log steps. void SetState(Bool_t enable = kTRUE); Set the active state. void SetButtonToNum(Bool_t state); Send button messages to the number field (true) or parent widget (false).; When the message is sent to the parent widget, it is responsible to change; the numerical value accordingly. This can be useful to implement cursors; which move from data point to data point. For the message being sent; see ProcessMessage(). Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process the up/down button messages. If fButtonToNum is false the; following message is sent: kC_COMMAND, kCM_BUTTON, widget id, param; param % 100 is the step size; param % 10000 / 100 != 0 indicates log step; param / 10000 != 0 indicates button down. TGLayoutManager * GetLayoutManager() const; Return layout manager. void ValueChanged(Long_t val); Emit ValueChanged(Long_t) signal. This signal is emitted when; fButtonToNum is false. The val has the following meaning:; val % 100 is the step size; val % 10000 / 100 != 0 indicates log step; val / 10000 != 0 indicates button down. void ValueSet(Long_t val); Emit ValueSet(Long_t) signal. This signal is emitted when the; number entry value is changed. The val has the following meaning:; val % 100 is the step size; val % 10000 / 100 != 0 indicates log step; val / 10000 != 0 indicates button down. void SavePrimitive(ostream& out, Option_t* = """"); Save a number entry widget as a C++ statement(s) on output stream out. void SetNumbe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGNumberEntry.html:25712,down,down,25712,root/html528/TGNumberEntry.html,https://root.cern,https://root.cern/root/html528/TGNumberEntry.html,10,['down'],['down']
Availability," Libraries. Function documentation; TMemFile(const char* name, Option_t* option = """", const char* ftitle = """", Int_t compress = 1); Usual Constructor. See the TFile constructor for details. TMemFile(const char* name, char* buffer, Long64_t size, Option_t* option = """", const char* ftitle = """", Int_t compress = 1); Usual Constructor. See the TFile constructor for details. TMemFile(const TMemFile& orig); Copying the content of the TMemFile into another TMemFile. ~TMemFile(); Close and clean-up HDFS file. Long64_t CopyTo(void* to, Long64_t maxsize) const; Copy the binary representation of the TMemFile into; the memory area starting at 'to' and of length at most 'maxsize'; returns the number of bytes actually copied. void CopyTo(TBuffer& tobuf) const; Copy the binary representation of the TMemFile into; the TBuffer tobuf. Long64_t GetSize() const; Return the current size of the memory file. void Print(Option_t* option = """") const. void ResetAfterMerge(TFileMergeInfo* ); Wipe all the data from the permanent buffer but keep, the in-memory object; alive. void ResetObjects(TDirectoryFile* , TFileMergeInfo* ) const; Wipe all the data from the permanent buffer but keep, the in-memory object; alive. Int_t SysRead(Int_t fd, void* buf, Int_t len); Read specified number of bytes from current offset into the buffer.; See documentation for TFile::SysRead(). Long64_t SysSeek(Int_t fd, Long64_t offset, Int_t whence); Seek to a specified position in the file. See TFile::SysSeek().; Note that TMemFile does not support seeks when the file is open for write. Int_t SysOpen(const char* pathname, Int_t flags, UInt_t mode); Open a file in 'MemFile'. Int_t SysClose(Int_t fd); Close the mem file. Int_t SysWrite(Int_t fd, const void* buf, Int_t len); Write a buffer into the file;. Int_t SysStat(Int_t fd, Long_t* id, Long64_t* size, Long_t* flags, Long_t* modtime); Perform a stat on the HDFS file; see TFile::SysStat(). Int_t SysSync(Int_t fd); Sync remaining data to disk;; Nothing to do here. void",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TMemFile.html:23935,alive,alive,23935,root/html532/TMemFile.html,https://root.cern,https://root.cern/root/html532/TMemFile.html,8,['alive'],['alive']
Availability," Libraries. Function documentation; virtual ~FCNBase(); {}. double operator()(const vector<double>& x) const. The meaning of the vector of parameters is of course defined by the user,; who uses the values of those parameters to calculate his function Value.; The order and the position of these parameters is strictly the one specified; by the user when supplying the starting values for minimization. The starting; values must be specified by the user, either via an std::vector<double> or the; MnUserParameters supplied as input to the MINUIT minimizers such as; VariableMetricMinimizer or MnMigrad. Later values are determined by MINUIT; as it searches for the Minimum or performs whatever analysis is requested by; the user. @param par function parameters as defined by the user. @return the Value of the function. @see MnUserParameters; @see VariableMetricMinimizer; @see MnMigrad. double ErrorDef() const. Error definition of the function. MINUIT defines Parameter errors as the; change in Parameter Value required to change the function Value by up. Normally,; for chisquared fits it is 1, and for negative log likelihood, its Value is 0.5.; If the user wants instead the 2-sigma errors for chisquared fits, it becomes 4,; as Chi2(x+n*sigma) = Chi2(x) + n*n. Comment a little bit better with links!!!!!!!!!!!!!!!!!. {return Up();}. double Up() const. Error definition of the function. MINUIT defines Parameter errors as the; change in Parameter Value required to change the function Value by up. Normally,; for chisquared fits it is 1, and for negative log likelihood, its Value is 0.5.; If the user wants instead the 2-sigma errors for chisquared fits, it becomes 4,; as Chi2(x+n*sigma) = Chi2(x) + n*n. \todo Comment a little bit better with links!!!!!!!!!!!!!!!!! Idem for ErrorDef(). void SetErrorDef(double ). add interface to set dynamically a new error definition; Re-implement this function if needed. {}. » Last changed: root/minuit2:$Id$ » Last generated: 2015-09-08 17:01; This page ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Minuit2__FCNBase.html:1966,error,errors,1966,root/html534/ROOT__Minuit2__FCNBase.html,https://root.cern,https://root.cern/root/html534/ROOT__Minuit2__FCNBase.html,2,['error'],['errors']
Availability," Libraries. Function documentation; virtual ~FCNBase(); {}. double operator()(const vector<double>& x) const. The meaning of the vector of parameters is of course defined by the user,; who uses the values of those parameters to calculate his function Value.; The order and the position of these parameters is strictly the one specified; by the user when supplying the starting values for minimization. The starting; values must be specified by the user, either via an std::vector<double> or the; MnUserParameters supplied as input to the MINUIT minimizers such as; VariableMetricMinimizer or MnMigrad. Later values are determined by MINUIT; as it searches for the Minimum or performs whatever analysis is requested by; the user. @param par function parameters as defined by the user. @return the Value of the function. @see MnUserParameters; @see VariableMetricMinimizer; @see MnMigrad. double ErrorDef() const. Error definition of the function. MINUIT defines Parameter errors as the; change in Parameter Value required to change the function Value by up. Normally,; for chisquared fits it is 1, and for negative log likelihood, its Value is 0.5.; If the user wants instead the 2-sigma errors for chisquared fits, it becomes 4,; as Chi2(x+n*sigma) = Chi2(x) + n*n. Comment a little bit better with links!!!!!!!!!!!!!!!!!. {return Up();}. double Up() const. Error definition of the function. MINUIT defines Parameter errors as the; change in Parameter Value required to change the function Value by up. Normally,; for chisquared fits it is 1, and for negative log likelihood, its Value is 0.5.; If the user wants instead the 2-sigma errors for chisquared fits, it becomes 4,; as Chi2(x+n*sigma) = Chi2(x) + n*n. \todo Comment a little bit better with links!!!!!!!!!!!!!!!!! Idem for ErrorDef(). void SetErrorDef(double ). add interface to set dynamically a new error definition; Re-implement this function if needed. {}. » Last changed: root/minuit2:$Id: FCNBase.h 30749 2009-10-15 16:33:04Z brun $ » ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Minuit2__FCNBase.html:1964,error,errors,1964,root/html526/ROOT__Minuit2__FCNBase.html,https://root.cern,https://root.cern/root/html526/ROOT__Minuit2__FCNBase.html,5,['error'],['errors']
Availability," Libraries. Function documentation; ~RooAbsString(); Destructor. const char* getVal() const; Return value of object. Calculated if dirty, otherwise cached value is returned. Bool_t operator==(const char* ) const; Equality operator comparing with a TString. Bool_t isIdentical(const RooAbsArg& other, Bool_t assumeSameType = kFALSE). Bool_t operator==(const RooAbsArg& other); Equality operator comparing to another RooAbsArg. Bool_t readFromStream(istream& is, Bool_t compact, Bool_t verbose = kFALSE); Read object contents from stream (dummy for now). void writeToStream(ostream& os, Bool_t compact) const; Write object contents to stream (dummy for now). void printValue(ostream& os) const; Print value. Bool_t isValid() const; Check if current value is valid. Bool_t isValidString(const char* , Bool_t printError = kFALSE) const; Check if given string value is valid. Bool_t traceEvalHook(const char* value) const; Hook function for trace evaluation. const char* traceEval() const; Calculate current value of object, with error tracing wrapper. void syncCache(const RooArgSet* nset = 0); Forcibly bring internal cache up-to-date. void copyCache(const RooAbsArg* source, Bool_t valueOnly = kFALSE, Bool_t setValDiry = kTRUE); Copy cache of another RooAbsArg to our cache. Warning: This function copies the cached values of source,; it is the callers responsibility to make sure the cache is clean. void attachToTree(TTree& t, Int_t bufSize = 32000); Attach object to a branch of given TTree. void fillTreeBranch(TTree& t); Fill tree branch associated with this object. void setTreeBranchStatus(TTree& t, Bool_t active); (De)Activate associated tree branch. RooAbsArg * createFundamental(const char* newname = 0) const; Create a RooStringVar fundamental object with our properties. TString evaluate() const; { return """" ; }. void attachToVStore(RooVectorDataStore& ); {}. » Last changed: Tue Mar 10 17:14:14 2015 » Last generated: 2015-03-10 17:14; This page has been automatically generated. For co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsString.html:21924,error,error,21924,root/html534/RooAbsString.html,https://root.cern,https://root.cern/root/html534/RooAbsString.html,2,['error'],['error']
Availability," Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file. viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MINUIT2; » ROOT::Minuit2::VariableMetricMinimizer. class ROOT::Minuit2::VariableMetricMinimizer: public ROOT::Minuit2::ModularFunctionMinimizer. Instantiates the SeedGenerator and MinimumBuilder for; Variable Metric Minimization method.; API is provided in the upper ROOT::Minuit2::ModularFunctionMinimizer class. Function Members (Methods); public:. virtual~VariableMetricMinimizer(); virtual const ROOT::Minuit2::MinimumBuilder&Builder() const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const ROOT::Minuit2::MnUserParameterState&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameterState&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Minuit2__VariableMetricMinimizer.html:1164,toler,toler,1164,root/html526/ROOT__Minuit2__VariableMetricMinimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Minuit2__VariableMetricMinimizer.html,2,['toler'],['toler']
Availability," Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; inheritance tree (.pdf) viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » HIST; » HIST; » TUnfoldDensity. class TUnfoldDensity: public TUnfoldSys. TUnfoldDensity : public TUnfoldSys : public TUnfold. TUnfold is used to decompose a measurement y into several sources x; given the measurement uncertainties and a matrix of migrations A. More details are described with the documentation of TUnfold. For most applications, it is best to use TUnfoldDensity; instead of using TUnfoldSys or TUnfold. If you use this software, please consider the following citation; S.Schmitt, JINST 7 (2012) T10003 [arXiv:1205.6201]. More documentation and updates are available on; http://www.desy.de/~sschmitt. As compared to TUnfold, TUndolfDensity adds the following functionality; * background subtraction (see documentation of TUnfoldSys); * error propagation (see documentation of TUnfoldSys); * regularisation schemes respecting the bin widths; * support for complex, multidimensional input distributions. Complex binning schemes are imposed on the measurements y and; on the result vector x with the help of the class TUnfoldBinning; The components of x or y are part of multi-dimensional distributions.; The bin widths along the relevant directions in these distributions; are used to calculate bin densities (number of events divided by bin width); or to calculate derivatives taking into account the proper distance of; adjacent bin centers. Complex binning schemes. in literature on unfolding, the ""standard"" test case is a; one-dimensional distribution without underflow or overflow bins.; The migration matrix is almost diagonal. This ""standard"" case is rarely realized for real problems. Often one has to deal with multi-dimensional input distributions.; In addition, there are underflow and overflow bins; or other background bins, possibly deter",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TUnfoldDensity.html:1009,error,error,1009,root/html602/TUnfoldDensity.html,https://root.cern,https://root.cern/root/html602/TUnfoldDensity.html,4,['error'],['error']
Availability," LogLikelihoodFCN< ROOT::Math::IMultiGenFunction, ROOT::Math::IParamMultiFunction > LogLikelihoodFunction;  ; typedef LogLikelihoodFCN< ROOT::Math::IMultiGradFunction, ROOT::Math::IParamMultiFunction > LogLikelihoodGradFunction;  ; typedef PoissonLikelihoodFCN< ROOT::Math::IMultiGenFunction, ROOT::Math::IParamMultiFunction > PoissonLLFunction;  ; typedef PoissonLikelihoodFCN< ROOT::Math::IMultiGradFunction, ROOT::Math::IParamMultiFunction > PoissonLLGradFunction;  . Enumerations; enum class  EChisquareType { kNeyman = 0; , kPLikeRatio; , kPearson; };  ; enum class  EFitObjectType { kHistogram; , kGraph; };  . Functions; double Chisquare (const TGraph &h1, TF1 &f1, bool useRange);  compute the chi2 value for a graph given a function (see TGraph::Chisquare) ;  ; double Chisquare (const TH1 &h1, TF1 &f1, bool useRange, EChisquareType type);  compute the chi2 value for an histogram given a function (see TH1::Chisquare for the documentation) ;  ; void DivideBox (const vector< double > &min, const vector< double > &max, const vector< double > &bmin, const vector< double > &bmax, const unsigned int size, const unsigned int n, list< Box > &l, const double val, const double error);  ; void DoFillData (BinData &dv, const TGraph *gr, BinData::ErrorType type, TF1 *func);  ; void FillData (BinData &dv, const TGraph *gr, TF1 *func=nullptr);  fill the data vector from a TGraph. ;  ; void FillData (BinData &dv, const TGraph2D *gr, TF1 *func=nullptr);  fill the data vector from a TGraph2D. ;  ; void FillData (BinData &dv, const TH1 *hist, TF1 *func=nullptr);  fill the data vector from a TH1. ;  ; void FillData (BinData &dv, const THnBase *hist, TF1 *func=nullptr);  fill the data vector from a THnBase. ;  ; void FillData (BinData &dv, const TMultiGraph *gr, TF1 *func=nullptr);  fill the data vector from a TMultiGraph. ;  ; void FillData (SparseData &dv, const TH1 *hist, TF1 *func=nullptr);  fill the data vector from a TH1 with sparse data. ;  ; void FillData (SparseData &dv, const THn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/namespaceROOT_1_1Fit.html:4359,error,error,4359,doc/master/namespaceROOT_1_1Fit.html,https://root.cern,https://root.cern/doc/master/namespaceROOT_1_1Fit.html,2,['error'],['error']
Availability," Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidTQObject::EmitVA<>(const char* signal_name, Int_t); virtual voidEnableEntry(Int_t id); virtual Int_tEndMenu(void*& userData); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; static Int_tTGWindow::GetCounter(); virtual TGMenuEntry*GetCurrent() const; static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGFrame::GetDefaultSize() const; virtual UInt_tTGFrame::GetDefaultWidth() const; virtual TDNDData*TGFrame::GetDNDData(Atom_t); virtual Int_tTGFrame::GetDragType() const; virtual Option_t*TObject::GetDrawOption() const; virtual I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TGPopupMenu.html:6751,error,error,6751,root/html602/TGPopupMenu.html,https://root.cern,https://root.cern/root/html602/TGPopupMenu.html,4,['error'],['error']
Availability," Long_t param); voidTQObject::Emit(const char* signal, Long64_t param); voidTQObject::Emit(const char* signal, Bool_t param); voidTQObject::Emit(const char* signal, Char_t param); voidTQObject::Emit(const char* signal, UChar_t param); voidTQObject::Emit(const char* signal, Short_t param); voidTQObject::Emit(const char* signal, UShort_t param); voidTQObject::Emit(const char* signal, Int_t param); voidTQObject::Emit(const char* signal, UInt_t param); voidTQObject::Emit(const char* signal, ULong_t param); voidTQObject::Emit(const char* signal, ULong64_t param); voidTQObject::Emit(const char* signal, Float_t param); voidTQObject::EmitVA(const char* signal, Int_t nargs); voidTQObject::EmitVA(const char* signal, Int_t nargs, va_list va); voidEntryCallback(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TGFrameElement*TGCompositeFrame::FindFrameElement(TGFrame* f) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Pixel_tTGFrame::GetBackground() const; static const TGGC&TGFrame::GetBckgndGC(); static const TGGC&TGFrame::GetBlackGC(); static Pixel_tTGFrame::GetBlackPixel(); Int_tTGFrame::GetBorderWidth() const; TGClient*TGObject::GetClient() const; const char*TGWidget::GetCommand() const; static Int_tTGWindow::GetCounter(); static Pixel_tTGFrame::GetDefaultFrameBackground(); virtual UInt_tTGCompositeFrame::GetDefaultHeight() const; static Pixel_tTGFrame::GetDefaultSelectedBackground(); virtual TGDimensionTGCompositeFrame::GetDefaultSize() const; virtual UInt_tTGCompositeFrame::GetDefaultWidth() const; virtual TDNDData*TGFrame::GetDNDData(Atom_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveGValuator.html:4421,error,error,4421,root/html528/TEveGValuator.html,https://root.cern,https://root.cern/root/html528/TEveGValuator.html,6,['error'],['error']
Availability," Loss Function ;  CAbsoluteDeviationLossFunctionBDTAbsolute Deviation BDT Loss Function ;  CAbsValue;  CBDTEventWrapper;  CBinarySearchTreeA simple Binary search tree including a volume search method ;  CBinarySearchTreeNodeNode for the BinarySearch or Decision Trees ;  CBinaryTreeBase class for BinarySearch and Decision Trees ;  CCCPrunerA helper class to prune a decision tree using the Cost Complexity method (see Classification and Regression Trees by Leo Breiman et al) ;  ►CCCTreeWrapper;  CCCTreeNode;  CClassifierFactoryThis is the MVA factory ;  CClassInfoClass that contains all the information of a class ;  Ccompose_binary_t;  Ccompose_unary_t;  ►CConfigSingleton class for global configuration settings used by TMVA ;  CIONames;  CVariablePlotting;  CConfigurable;  CConvergenceTestCheck for convergence ;  CCostComplexityPruneToolA class to prune a decision tree using the Cost Complexity method ;  CCrossEntropyImplementation of the CrossEntropy as separation criterion ;  CCrossValidationClass to perform cross validation, splitting the dataloader into folds ;  CCrossValidationFoldResult;  CCrossValidationResultClass to save the results of cross validation, the metric for the classification ins ROC and you can ROC curves ROC integrals, ROC average and ROC standard deviation ;  CCvSplit;  CCvSplitKFolds;  CCvSplitKFoldsExpr;  CDataInputHandlerClass that contains all the data information ;  CDataLoader;  CDataSetClass that contains all the data information ;  ►CDataSetFactoryClass that contains all the data information ;  CEventStats;  CDataSetInfoClass that contains all the data information ;  CDataSetManagerClass that contains all the data information ;  CDecisionTreeImplementation of a Decision Tree ;  CDecisionTreeNode;  CDeleteFunctor_t;  CDTNodeTrainingInfo;  CEnvelopeAbstract base class for all high level ml algorithms, you can book ml methods like BDT, MLP ;  CEvent;  CExpectedErrorPruneToolA helper class to prune a decision tree using the expected error (C4.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v616/annotated.html:84677,error,error,84677,doc/v616/annotated.html,https://root.cern,https://root.cern/doc/v616/annotated.html,2,['error'],['error']
Availability," M.Definition TRandom3.h:27; TRandom3::RndmDouble_t Rndm() overrideMachine independent random number generator.Definition TRandom3.cxx:99; TRandom3::SetSeedvoid SetSeed(ULong_t seed=0) overrideSet the random generator sequence if seed is 0 (default value) a TUUID is generated and used to fill ...Definition TRandom3.cxx:206; TRandom::Poissonvirtual ULong64_t Poisson(Double_t mean)Generates a random integer N according to a Poisson law.Definition TRandom.cxx:404; TStyle::SetPadTopMarginvoid SetPadTopMargin(Float_t margin=0.1)Definition TStyle.h:359; TStyle::SetOptStatvoid SetOptStat(Int_t stat=1)The type of information printed in the histogram statistics box can be selected via the parameter mod...Definition TStyle.cxx:1640; TStyle::SetPadBottomMarginvoid SetPadBottomMargin(Float_t margin=0.1)Definition TStyle.h:358; TStyle::SetPaintTextFormatvoid SetPaintTextFormat(const char *format=""g"")Definition TStyle.h:386; TStyle::SetEndErrorSizevoid SetEndErrorSize(Float_t np=2)Set the size (in pixels) of the small lines drawn at the end of the error bars (TH1 or TGraphErrors).Definition TStyle.cxx:1340; TStyle::SetPadRightMarginvoid SetPadRightMargin(Float_t margin=0.1)Definition TStyle.h:361; TStyle::SetTitleOffsetvoid SetTitleOffset(Float_t offset=1, Option_t *axis=""X"")Specify a parameter offset to control the distance between the axis and the axis title.Definition TStyle.cxx:1798; TStyle::SetPadLeftMarginvoid SetPadLeftMargin(Float_t margin=0.1)Definition TStyle.h:360; TStyle::SetHistLineColorvoid SetHistLineColor(Color_t color=1)Definition TStyle.h:380; TStyle::SetTitleSizevoid SetTitleSize(Float_t size=0.02, Option_t *axis=""X"")Definition TStyle.cxx:1817; TStyle::SetHistLineWidthvoid SetHistLineWidth(Width_t width=1)Definition TStyle.h:383; TStyle::SetLabelSizevoid SetLabelSize(Float_t size=0.04, Option_t *axis=""X"")Set size of axis labels.Definition TStyle.cxx:1444; TStyle::SetOptFitvoid SetOptFit(Int_t fit=1)The type of information about fit parameters printed in the hist",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf611__weightedfits_8C.html:13282,error,error,13282,doc/master/rf611__weightedfits_8C.html,https://root.cern,https://root.cern/doc/master/rf611__weightedfits_8C.html,1,['error'],['error']
Availability," MINUIT internal printing level. ;  ; int hesse ();  Execute HESSE. ;  ; int improve ();  Execute IMPROVE. ;  ; TClass * IsA () const override;  ; RooFit::OwningPtr< RooFitResult > lastMinuitFit ();  ; int migrad ();  Execute MIGRAD. ;  ; int minimize (const char *type, const char *alg=nullptr);  Minimise the function passed in the constructor. ;  ; std::string const & minimizerType () const;  ; int minos ();  Execute MINOS. ;  ; int minos (const RooArgSet &minosParamList);  Execute MINOS for given list of parameters. ;  ; void optimizeConst (int flag);  If flag is true, perform constant term optimization on function being minimized. ;  ; RooFit::OwningPtr< RooFitResult > save (const char *name=nullptr, const char *title=nullptr);  Save and return a RooFitResult snapshot of current minimizer status. ;  ; void saveStatus (const char *label, int status);  ; int seek ();  Execute SEEK. ;  ; void setEps (double eps);  Change MINUIT epsilon. ;  ; void setErrorLevel (double level);  Set the level for MINUIT error analysis to the given value. ;  ; void setEvalErrorWall (bool flag);  ; bool setLogFile (const char *logf=nullptr);  ; void setMaxFunctionCalls (int n);  Change maximum number of likelihood function class from MINUIT (RooMinimizer default 500 * #parameters) ;  ; void setMaxIterations (int n);  Change maximum number of MINUIT iterations (RooMinimizer default 500 * #parameters) ;  ; void setMinimizerType (std::string const &type);  Choose the minimizer algorithm. ;  ; void setOffsetting (bool flag);  Enable internal likelihood offsetting for enhanced numeric precision. ;  ; void setPrintEvalErrors (int numEvalErrors);  ; void setPrintLevel (int newLevel);  Change the MINUIT internal printing level. ;  ; void setProfile (bool flag=true);  ; void setRecoverFromNaNStrength (double strength);  Try to recover from invalid function values. ;  ; void setStrategy (int istrat);  Change MINUIT strategy to istrat. ;  ; void setVerbose (bool flag=true);  ; int simplex ();  Exec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMinimizer.html:4148,error,error,4148,doc/master/classRooMinimizer.html,https://root.cern,https://root.cern/doc/master/classRooMinimizer.html,1,['error'],['error']
Availability," Member Function Documentation. ◆ Add() [1/3]. Bool_t TProfile3D::Add ; (; const TH1 * ; h1, . const TH1 * ; h2, . Double_t ; c1 = 1, . Double_t ; c2 = 1 . ). overridevirtual . Replace contents of this profile3D by the addition of h1 and h2. ; this = c1*h1 + c2*h2 ; Reimplemented from TH1.; Definition at line 200 of file TProfile3D.cxx. ◆ Add() [2/3]. Bool_t TProfile3D::Add ; (; const TH1 * ; h1, . Double_t ; c1 = 1 . ). overridevirtual . Performs the operation: this = this + c1*h1 . ; Reimplemented from TH1.; Definition at line 181 of file TProfile3D.cxx. ◆ Add() [3/3]. Bool_t TProfile3D::Add ; (; TF1 * ; h1, . Double_t ; c1 = 1, . Option_t * ; option = """" . ). overridevirtual . Performs the operation: this = this + c1*f1 . ; Reimplemented from TH1.; Definition at line 172 of file TProfile3D.cxx. ◆ Approximate(). void TProfile3D::Approximate ; (; Bool_t ; approx = kTRUE). static . Set the fgApproximate flag. ; When the flag is true, the function GetBinError will approximate the bin error with the average profile error on all bins in the following situation only. the number of bins in the profile3D is less than 10404 (eg 100x100x100); the bin number of entries is small ( <5); the estimated bin error is extremely small compared to the bin content (see TProfile3D::GetBinError) . Definition at line 231 of file TProfile3D.cxx. ◆ BufferEmpty(). Int_t TProfile3D::BufferEmpty ; (; Int_t ; action = 0). overridevirtual . Fill histogram with all entries in the buffer. . action = -1 histogram is reset and refilled from the buffer (called by THistPainter::Paint); action = 0 histogram is filled from the buffer; action = 1 histogram is filled and buffer is deleted The buffer is automatically deleted when the number of entries in the buffer is greater than the number of entries in the histogram . Reimplemented from TH3.; Definition at line 246 of file TProfile3D.cxx. ◆ BufferFill() [1/4]. Int_t TProfile3D::BufferFill ; (; Double_t ; x, . Double_t ; y, . Double_t ; z, . Double_t ; t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile3D.html:70063,error,error,70063,doc/master/classTProfile3D.html,https://root.cern,https://root.cern/doc/master/classTProfile3D.html,2,['error'],['error']
Availability, Minimized function has error status.; Returning maximum FCN so far (10415.9) to force MIGRAD to back out of this region. Error log follows.; Parameter values: Abkg=0.024352 Asig=0.0100451 p_ph_sig2_gamma_bin_0=0.351536 p_ph_sig2_gamma_bin_1=0.352649 p_ph_sig2_gamma_bin_10=0.342736 p_ph_sig2_gamma_bin_11=0.36962 p_ph_sig2_gamma_bin_12=0.383863 p_ph_sig2_gamma_bin_13=0.366897 p_ph_sig2_gamma_bin_14=0.358549 p_ph_sig2_gamma_bin_15=0.358659 p_ph_sig2_gamma_bin_16=0.3674 p_ph_sig2_gamma_bin_17=0.356318 p_ph_sig2_gamma_bin_18=0.362267 p_ph_sig2_gamma_bin_19=0.340116 p_ph_sig2_gamma_bin_2=0.350595 p_ph_sig2_gamma_bin_20=0.352431 p_ph_sig2_gamma_bin_21=0.351643 p_ph_sig2_gamma_bin_22=0.35167 p_ph_sig2_gamma_bin_23=0.344542 p_ph_sig2_gamma_bin_24=0.365744 p_ph_sig2_gamma_bin_3=0.355252 p_ph_sig2_gamma_bin_4=0.34783 p_ph_sig2_gamma_bin_5=0.348683 p_ph_sig2_gamma_bin_6=0.357671 p_ph_sig2_gamma_bin_7=0.351115 p_ph_sig2_gamma_bin_8=0.342731 p_ph_sig2_gamma_bin_9=0.357348; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (10415.9) to force MIGRAD to back out of this region. Error log follows.; Parameter values: Abkg=0.327407 Asig=0.267678 p_ph_sig2_gamma_bin_0=0.638805 p_ph_sig2_gamma_bin_1=0.639545 p_ph_sig2_gamma_bin_10=0.632932 p_ph_sig2_gamma_bin_11=0.650729 p_ph_sig2_gamma_bin_12=0.659993 p_ph_sig2_gamma_bin_13=0.648946 p_ph_sig2_gamma_bin_14=0.643452 p_ph_sig2_gamma_bin_15=0.643524 p_ph_sig2_gamma_bin_16=0.649276 p_ph_sig2_gamma_bin_17=0.641977 p_ph_sig2_gamma_bin_18=0.645904 p_ph_sig2_gamma_bin_19=0.631174 p_ph_sig2_gamma_bin_2=0.638179 p_ph_sig2_gamma_bin_20=0.6394 p_ph_sig2_gamma_bin_21=0.638876 p_ph_sig2_gamma_bin_22=0.638894 p_ph_sig2_gamma_bin_23=0.634141 p_ph_sig2_gamma_bin_24=0.648189 p_ph_sig2_gamma_bin_3=0.641271 p_ph_sig2_gamma_bin_4=0.636338 p_ph_sig2_gamma_bin_5=0.636906 p_ph_sig2_gamma_bin_6=0.642872 p_ph_sig2_gamma_bin_7=0.638525 p_ph_sig2_gamma_bin_8=0.632929 p_ph_sig2_gamma_bin_9=0.642658; ; Minuit2Minimizer : Valid ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf709__BarlowBeeston_8C.html:37406,error,error,37406,doc/master/rf709__BarlowBeeston_8C.html,https://root.cern,https://root.cern/doc/master/rf709__BarlowBeeston_8C.html,2,['error'],['error']
Availability," Minimum covariance Determinant Estimator""; Technometrics, August 1999, Vol.41, NO.3. What are robust estimators?; ""An important property of an estimator is its robustness. An estimator; is called robust if it is insensitive to measurements that deviate; from the expected behaviour. There are 2 ways to treat such deviating; measurements: one may either try to recongize them and then remove; them from the data sample; or one may leave them in the sample, taking; care that they do not influence the estimate unduly. In both cases robust; estimators are needed...Robust procedures compensate for systematic errors; as much as possible, and indicate any situation in which a danger of not being; able to operate reliably is detected.""; R.Fruhwirth, M.Regler, R.K.Bock, H.Grote, D.Notz; ""Data Analysis Techniques for High-Energy Physics"", 2nd edition. What does this algorithm do?; It computes a highly robust estimator of multivariate location and scatter.; Then, it takes those estimates to compute robust distances of all the; data vectors. Those with large robust distances are considered outliers.; Robust distances can then be plotted for better visualization of the data. How does this algorithm do it?; The MCD objective is to find h observations(out of n) whose classical; covariance matrix has the lowest determinant. The MCD estimator of location; is then the average of those h points and the MCD estimate of scatter; is their covariance matrix. The minimum(and default) h = (n+nvariables+1)/2; so the algorithm is effective when less than (n+nvar+1)/2 variables are outliers.; The algorithm also allows for exact fit situations - that is, when h or more; observations lie on a hyperplane. Then the algorithm still yields the MCD location T; and scatter matrix S, the latter being singular as it should be. From (T,S) the; program then computes the equation of the hyperplane. How can this algorithm be used?; In any case, when contamination of data is suspected, that might influence; th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TRobustEstimator.html:1473,robust,robust,1473,root/html528/TRobustEstimator.html,https://root.cern,https://root.cern/root/html528/TRobustEstimator.html,10,['robust'],['robust']
Availability," Minuit2 migrad, simplex, minimize, scan; GSLMultiMin conjugatefr, conjugatepr, bfgs, bfgs2, steepestdescent; GSLSimAn -. InitialHesse(Bool_t flag) -- Flag controls if HESSE before MIGRAD as well, off by default; Optimize(Bool_t flag) -- Activate constant term optimization of test statistic during minimization (on by default); Hesse(Bool_t flag) -- Flag controls if HESSE is run after MIGRAD, on by default; Minos(Bool_t flag) -- Flag controls if MINOS is run after HESSE, on by default; Minos(const RooArgSet& set) -- Only run MINOS on given subset of arguments; Save(Bool_t flag) -- Flac controls if RooFitResult object is produced and returned, off by default; Strategy(Int_t flag) -- Set Minuit strategy (0 through 2, default is 1); FitOptions(const char* optStr) -- Steer fit with classic options string (for backward compatibility). Use of this option; excludes use of any of the new style steering options. SumW2Error(Bool_t flag) -- Apply correaction to errors and covariance matrix using sum-of-weights covariance matrix; to obtain correct error for weighted likelihood fits. If this option is activated the; corrected covariance matrix is calculated as Vcorr = V C-1 V, where V is the original; covariance matrix and C is the inverse of the covariance matrix calculated using the; weights squared. Options to control informational output. Verbose(Bool_t flag) -- Flag controls if verbose output is printed (NLL, parameter changes during fit; Timer(Bool_t flag) -- Time CPU and wall clock consumption of fit steps, off by default; PrintLevel(Int_t level) -- Set Minuit print level (-1 through 3, default is 1). At -1 all RooFit informational; messages are suppressed as well; Warnings(Bool_t flag) -- Enable or disable MINUIT warnings (enabled by default); PrintEvalErrors(Int_t numErr) -- Control number of p.d.f evaluation errors printed per likelihood evaluation. A negative; value suppress output completely, a zero value will only print the error count per p.d.f component,; a positive",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsPdf.html:52013,error,errors,52013,root/html526/RooAbsPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsPdf.html,8,['error'],"['error', 'errors']"
Availability," NETWORK: Depth = 4 Input = ( 1, 1, 4 ) Batch size = 100 Loss function = C; Layer 0 DENSE Layer: ( Input = 4 , Width = 100 ) Output = ( 1 , 100 , 100 ) Activation Function = Tanh; Layer 1 DENSE Layer: ( Input = 100 , Width = 50 ) Output = ( 1 , 100 , 50 ) Activation Function = Tanh; Layer 2 DENSE Layer: ( Input = 50 , Width = 10 ) Output = ( 1 , 100 , 10 ) Activation Function = Tanh; Layer 3 DENSE Layer: ( Input = 10 , Width = 4 ) Output = ( 1 , 100 , 4 ) Activation Function = Identity; : Using 3200 events for training and 800 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 0.691476; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 0.605916 0.542204 0.0761789 0.00657979 45977.6 0; : 2 Minimum Test error found - save the configuration ; : 2 | 0.512732 0.499825 0.0771995 0.00657724 45311.5 0; : 3 Minimum Test error found - save the configuration ; : 3 | 0.477495 0.458718 0.0776312 0.00665553 45085.9 0; : 4 Minimum Test error found - save the configuration ; : 4 | 0.438338 0.418147 0.0780597 0.00669006 44837 0; : 5 Minimum Test error found - save the configuration ; : 5 | 0.407569 0.391703 0.0786075 0.00678976 44557.2 0; : 6 Minimum Test error found - save the configuration ; : 6 | 0.387736 0.373696 0.0792581 0.00678916 44156.9 0; : 7 Minimum Test error found - save the configuration ; : 7 | 0.373399 0.360485 0.0791536 0.00677002 44208.9 0; : 8 Minimum Test error found - save the configuration ; : 8 | 0.362792 0.352336 0.0796639 0.00682572 43933 0; : 9 Minimum Test error found - save the configuration ; : 9 | 0.353594 0.340526 0.0805399 0.00700876 43519 0; : 10 Minimum Test error found",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVAMulticlass_8C.html:14814,error,error,14814,doc/master/TMVAMulticlass_8C.html,https://root.cern,https://root.cern/doc/master/TMVAMulticlass_8C.html,1,['error'],['error']
Availability," NOT supported. ; WarningOnly the path to the directory should be specified, without prepending the -I prefix, i.e. gCling->AddIncludePath(""/path/to/my/includes""). If the -I prefix is used it will be ignored. ; Implements TInterpreter.; Definition at line 2662 of file TCling.cxx. ◆ ApplyToInterpreterMutex(). void TCling::ApplyToInterpreterMutex ; (; void * ; delta). Re-apply the lock count delta that TCling__ResetInterpreterMutex() caused. ; Definition at line 9634 of file TCling.cxx. ◆ AutoLoad() [1/2]. Int_t TCling::AutoLoad ; (; const char * ; cls, . Bool_t ; knowDictNotLoaded = kFALSE . ). finalvirtual . Load library containing the specified class. ; Returns 0 in case of error and 1 in case if success. ; Implements TInterpreter.; Definition at line 6265 of file TCling.cxx. ◆ AutoLoad() [2/2]. Int_t TCling::AutoLoad ; (; const std::type_info & ; typeinfo, . Bool_t ; knowDictNotLoaded = kFALSE . ). finalvirtual . Load library containing the specified class. ; Returns 0 in case of error and 1 in case if success. ; Implements TInterpreter.; Definition at line 6124 of file TCling.cxx. ◆ AutoParse(). Int_t TCling::AutoParse ; (; const char * ; cls). finalvirtual . Parse the headers relative to the class Returns 1 in case of success, 0 in case of failure. ; Implements TInterpreter.; Definition at line 6523 of file TCling.cxx. ◆ AutoParseImplRecurse(). UInt_t TCling::AutoParseImplRecurse ; (; const char * ; cls, . bool ; topLevel . ). private . Helper routine for TCling::AutoParse implementing the actual call to the parser and looping over template parameters (if any) and when they don't have a registered header to autoparse, recurse over their template parameters. ; Returns the number of header parsed. ; Definition at line 6381 of file TCling.cxx. ◆ BaseClassInfo_ClassInfo(). ClassInfo_t * TCling::BaseClassInfo_ClassInfo ; (; BaseClassInfo_t * ; bcinfo); const. finalvirtual . Implements TInterpreter.; Definition at line 8537 of file TCling.cxx. ◆ BaseClassInfo_Delete().",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCling.html:55354,error,error,55354,doc/master/classTCling.html,https://root.cern,https://root.cern/doc/master/classTCling.html,1,['error'],['error']
Availability," NotCompileIfScalarBackend = std::enable_if<!(std::is_same<double, ROOT::Double_v>::value)>>; 374 void SetFunction(const IGradModelFunction_v &func, bool useGradient = true);; 375#endif; 376 /**; 377 Set the fitted function from a parametric 1D function interface; 378 */; 379 void SetFunction(const IModel1DFunction & func, bool useGradient = false);; 380 ; 381 /**; 382 Set the fitted function (model function) from a parametric gradient function interface; 383 */; 384 void SetFunction(const IGradModelFunction & func, bool useGradient = true);; 385 /**; 386 Set the fitted function from 1D gradient parametric function interface; 387 */; 388 void SetFunction(const IGradModel1DFunction & func, bool useGradient = true);; 389 ; 390 ; 391 /**; 392 get fit result; 393 */; 394 const FitResult & Result() const {; 395 assert( fResult.get() );; 396 return *fResult;; 397 }; 398 ; 399 ; 400 /**; 401 perform an error analysis on the result using the Hessian; 402 Errors are obtained from the inverse of the Hessian matrix; 403 To be called only after fitting and when a minimizer supporting the Hessian calculations is used; 404 otherwise an error (false) is returned.; 405 A new FitResult with the Hessian result will be produced; 406 */; 407 bool CalculateHessErrors();; 408 ; 409 /**; 410 perform an error analysis on the result using MINOS; 411 To be called only after fitting and when a minimizer supporting MINOS is used; 412 otherwise an error (false) is returned.; 413 The result will be appended in the fit result class; 414 Optionally a vector of parameter indices can be passed for selecting; 415 the parameters to analyse using FitConfig::SetMinosErrors; 416 */; 417 bool CalculateMinosErrors();; 418 ; 419 /**; 420 access to the fit configuration (const method); 421 */; 422 const FitConfig & Config() const { return fConfig; }; 423 ; 424 /**; 425 access to the configuration (non const method); 426 */; 427 FitConfig & Config() { return fConfig; }; 428 ; 429 /**; 430 query if fit is binn",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Fitter_8h_source.html:16148,error,error,16148,doc/master/Fitter_8h_source.html,https://root.cern,https://root.cern/doc/master/Fitter_8h_source.html,2,['error'],['error']
Availability," OR the relative tolerance are satisfied.; 135 @param relTol desired relative tolerance; 136 @param size maximum number of sub-intervals; 137 @param rule Gauss-Kronrod integration rule (only for GSL ADAPTIVE type); 138 ; 139 NOTE: When no values are passed, the values used are taken from the default defined in ROOT::Math::IntegratorOneDimOptions; 140 */; 141 explicit; 142 IntegratorOneDim(const IGenFunction &f, IntegrationOneDim::Type type = IntegrationOneDim::kDEFAULT, double absTol = -1, double relTol = -1, unsigned int size = 0, int rule = 0) :; 143 fIntegrator(nullptr), fFunc(nullptr); 144 {; 145 fIntegrator = CreateIntegrator(type, absTol, relTol, size, rule);; 146 SetFunction(f,true);; 147 }; 148 ; 149 /**; 150 Template Constructor of one dimensional Integrator passing a generic function object; 151 ; 152 @param f integration function (any C++ callable object implementing operator()(double x); 153 @param type integration type (adaptive, non-adaptive, etc..); 154 @param absTol desired absolute tolerance. The algorithm will stop when either the absolute OR the relative tolerance are satisfied.; 155 @param relTol desired relative tolerance; 156 @param size maximum number of sub-intervals; 157 @param rule Gauss-Kronrod integration rule (only for GSL ADAPTIVE type); 158 ; 159 NOTE: When no values are passed, the values used are taken from the default defined in ROOT::Math::IntegratorOneDimOptions; 160 ; 161 */; 162 ; 163 template<class Function>; 164 explicit; 165 IntegratorOneDim(Function & f, IntegrationOneDim::Type type = IntegrationOneDim::kDEFAULT, double absTol = -1, double relTol = -1, unsigned int size = 0, int rule = 0) :; 166 fIntegrator(nullptr), fFunc(nullptr); 167 {; 168 fIntegrator = CreateIntegrator(type, absTol, relTol, size, rule);; 169 SetFunction(f);; 170 }; 171 ; 172 /// destructor (will delete contained pointers); 173 virtual ~IntegratorOneDim() {; 174 if (fIntegrator) delete fIntegrator;; 175 if (fFunc) delete fFunc;; 176 }; 177 ; 178 // disab",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/Integrator_8h_source.html:6313,toler,tolerance,6313,doc/master/Integrator_8h_source.html,https://root.cern,https://root.cern/doc/master/Integrator_8h_source.html,1,['toler'],['tolerance']
Availability," OpenGitHubIssue(const TString &type)TApplication; OpenInBrowser(const TString &url)TApplication; OpenReferenceGuideFor(const TString &strippedClass)TApplication; operator delete(void *ptr)TObject; operator delete(void *ptr, void *vp)TObject; operator delete[](void *ptr)TObject; operator delete[](void *ptr, void *vp)TObject; operator new(size_t sz)TObjectinline; operator new(size_t sz, void *vp)TObjectinline; operator new[](size_t sz)TObjectinline; operator new[](size_t sz, void *vp)TObjectinline; operator=(const TApplication &)=deleteTApplicationprivate; TObject::operator=(const TObject &rhs)TObjectinline; Paint(Option_t *option="""")TObjectvirtual; ParseRemoteLine(const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script)TApplicationprotectedstatic; Pop()TObjectvirtual; Print(Option_t *option="""") constTObjectvirtual; ProcessFile(const char *file, Int_t *error=nullptr, Bool_t keep=kFALSE)TApplicationvirtual; ProcessLine(const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr)TApplicationvirtual; ProcessRemote(const char *line, Int_t *error=nullptr)TApplicationprotectedvirtual; QuitOpt() constTApplicationinline; Raise()TApplicationinlinevirtual; Read(const char *name)TObjectvirtual; RecursiveRemove(TObject *obj)TObjectvirtual; RemoveIdleTimer()TApplicationvirtual; ResetBit(UInt_t f)TObjectinline; ReturnFromRun() constTApplicationinline; ReturnPressed(char *text)TApplicationvirtual; Run(Bool_t retrn=kFALSE)TApplicationvirtual; SaveAs(const char *filename="""", Option_t *option="""") constTObjectvirtual; SavePrimitive(std::ostream &out, Option_t *option="""")TObjectvirtual; SetBit(UInt_t f, Bool_t set)TObject; SetBit(UInt_t f)TObjectinline; SetDrawOption(Option_t *option="""")TObjectvirtual; SetDtorOnly(void *obj)TObjectstatic; SetEchoMode(Bool_t mode)TApplicationvirtual; SetIdleTimer(UInt_t idleTimeInSec, const char *command)TApplicationvirtual; SetObjectStat(Bool_t stat)TObjectstatic; SetReturnFromRun(Bool_t ret)TApplicationinline; SetSignalHandler(TSign",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTApplication-members.html:9625,error,error,9625,doc/master/classTApplication-members.html,https://root.cern,https://root.cern/doc/master/classTApplication-members.html,1,['error'],['error']
Availability," Option_t* option = """", Option_t* goption = """", Axis_t xmin = 0, Axis_t xmax = 0); Fit this graph with function with name fname. interface to TGraph::Fit(TF1 *f1... fname is the name of an already predefined function created by TF1 or TF2; Predefined functions such as gaus, expo and poln are automatically; created by ROOT.; fname can also be a formula, accepted by the linear fitter (linear parts divided; by ""++"" sign), for example ""x++sin(x)"" for fitting ""[0]*x+[1]*sin(x)"". TFitResultPtr Fit(TF1* f1, Option_t* option = """", Option_t* goption = """", Axis_t xmin = 0, Axis_t xmax = 0); Fit this graph with function f1. f1 is an already predefined function created by TF1.; Predefined functions such as gaus, expo and poln are automatically; created by ROOT. The list of fit options is given in parameter option.; option = ""W"" Set all weights to 1; ignore error bars; = ""U"" Use a User specified fitting algorithm (via SetFCN); = ""Q"" Quiet mode (minimum printing); = ""V"" Verbose mode (default is between Q and V); = ""E"" Perform better Errors estimation using Minos technique; = ""B"" User defined parameter settings are used for predefined functions; like ""gaus"", ""expo"", ""poln"", ""landau"".; Use this option when you want to fix one or more parameters for these functions.; = ""M"" More. Improve fit results.; It uses the IMPROVE command of TMinuit (see TMinuit::mnimpr); This algorithm attempts to improve the found local minimum by; searching for a better one.; = ""R"" Use the Range specified in the function range; = ""N"" Do not store the graphics function, do not draw; = ""0"" Do not plot the result of the fit. By default the fitted function; is drawn unless the option ""N"" above is specified.; = ""+"" Add this new fitted function to the list of fitted functions; (by default, any previous function is deleted); = ""C"" In case of linear fitting, do not calculate the chisquare; (saves time); = ""F"" If fitting a polN, use the minuit fitter; = ""EX0"" When fitting a TGraphErrors do not consider errors in the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGraph.html:21050,error,error,21050,root/html528/TGraph.html,https://root.cern,https://root.cern/root/html528/TGraph.html,5,"['Error', 'error']","['Errors', 'error']"
Availability," Option_t* option = """", Option_t* goption = """", Axis_t xmin = 0, Axis_t xmax = 0); Fit this graph with function with name fname. interface to TGraph::Fit(TF1 *f1... fname is the name of an already predefined function created by TF1 or TF2; Predefined functions such as gaus, expo and poln are automatically; created by ROOT.; fname can also be a formula, accepted by the linear fitter (linear parts divided; by ""++"" sign), for example ""x++sin(x)"" for fitting ""[0]*x+[1]*sin(x)"". TFitResultPtr Fit(TF1* f1, Option_t* option = """", Option_t* goption = """", Axis_t xmin = 0, Axis_t xmax = 0); Fit this graph with function f1. f1 is an already predefined function created by TF1.; Predefined functions such as gaus, expo and poln are automatically; created by ROOT. The list of fit options is given in parameter option.; option = ""W"" Set all weights to 1; ignore error bars; = ""U"" Use a User specified fitting algorithm (via SetFCN); = ""Q"" Quiet mode (minimum printing); = ""V"" Verbose mode (default is between Q and V); = ""E"" Perform better Errors estimation using Minos technique; = ""B"" User defined parameter settings are used for predefined functions; like ""gaus"", ""expo"", ""poln"", ""landau"".; Use this option when you want to fix one or more parameters for these functions.; = ""M"" More. Improve fit results.; It uses the IMPROVE command of TMinuit (see TMinuit::mnimpr); This algorithm attempts to improve the found local minimum by; searching for a better one.; = ""R"" Use the Range specified in the function range; = ""N"" Do not store the graphics function, do not draw; = ""0"" Do not plot the result of the fit. By default the fitted function; is drawn unless the option ""N"" above is specified.; = ""+"" Add this new fitted function to the list of fitted functions; (by default, any previous function is deleted); = ""C"" In case of linear fitting, do not calculate the chisquare; (saves time); = ""F"" If fitting a polN, use the minuit fitter; = ""EX0"" When fitting a TGraphErrors or TGraphAsymErrors do not co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraph.html:22336,error,error,22336,root/html534/TGraph.html,https://root.cern,https://root.cern/root/html534/TGraph.html,9,"['Error', 'error']","['Errors', 'error']"
Availability," Output = ( 1 , 50 , 1 ) Activation Function = Identity; : Using 800 events for training and 200 for testing; : Compute initial loss on the validation data ; : Training phase 1 of 1: Optimizer ADAM (beta1=0.9,beta2=0.999,eps=1e-07) Learning rate = 0.001 regularization 0 minimum error = 33494.1; : --------------------------------------------------------------; : Epoch | Train Err. Val. Err. t(s)/epoch t(s)/Loss nEvents/s Conv. Steps; : --------------------------------------------------------------; : Start epoch iteration ...; : 1 Minimum Test error found - save the configuration ; : 1 | 34747.6 33079.7 0.0192196 0.00176099 45822.6 0; : 2 Minimum Test error found - save the configuration ; : 2 | 34222.2 32417.1 0.0195047 0.0017702 45109.9 0; : 3 Minimum Test error found - save the configuration ; : 3 | 33496 31618.4 0.0197158 0.00178336 44611.8 0; : 4 Minimum Test error found - save the configuration ; : 4 | 32719.2 30843.2 0.0198205 0.00178286 44351.8 0; : 5 Minimum Test error found - save the configuration ; : 5 | 31879.6 30001 0.0200761 0.00184919 43891 0; : 6 Minimum Test error found - save the configuration ; : 6 | 30965 29177.4 0.0203037 0.00185469 43362.8 0; : 7 Minimum Test error found - save the configuration ; : 7 | 30273.8 28682.9 0.0206315 0.00190133 42711.9 0; : 8 Minimum Test error found - save the configuration ; : 8 | 29852.4 28319.6 0.0206438 0.00186969 42611.9 0; : 9 Minimum Test error found - save the configuration ; : 9 | 29498.2 28000.3 0.0204359 0.0018446 43030.8 0; : 10 Minimum Test error found - save the configuration ; : 10 | 29182.7 27696.8 0.0202998 0.00181461 43277.8 0; : 11 Minimum Test error found - save the configuration ; : 11 | 28878.3 27413.2 0.0196838 0.00176755 44652.2 0; : 12 Minimum Test error found - save the configuration ; : 12 | 28593.7 27134.7 0.0196593 0.00176089 44696.8 0; : 13 Minimum Test error found - save the configuration ; : 13 | 28310.5 26871.8 0.0196662 0.00176724 44695.4 0; : 14 Minimum Test error found - save the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TMVARegression_8C.html:11651,error,error,11651,doc/master/TMVARegression_8C.html,https://root.cern,https://root.cern/doc/master/TMVARegression_8C.html,1,['error'],['error']
Availability," Output file settings are in the form `<previous_option>`of=name `<next_option>`; `<previous_option>`outfile=name,...;`<next_option>`; The separator from the next option is either a ' ' or a ';' Called interanally by TProof::Process.; Returns 0 on success, -1 on error. ; Definition at line 4937 of file TProof.cxx. ◆ HandleSubmerger(). void TProof::HandleSubmerger ; (; TMessage * ; mess, . TSlave * ; sl . ). private . Process a message of type kPROOF_SUBMERGER. ; Definition at line 4014 of file TProof.cxx. ◆ Init(). Int_t TProof::Init ; (; const char * ; masterurl, . const char * ; conffile, . const char * ; confdir, . Int_t ; loglevel, . const char * ; alias = 0 . ). protected . Start the PROOF environment. ; Starting PROOF involves either connecting to a master server, which in turn will start a set of slave servers, or directly starting as master server (if master = """"). For a description of the arguments see the TProof ctor. Returns the number of started master or slave servers, returns 0 in case of error, in which case fValid remains false. ; Definition at line 757 of file TProof.cxx. ◆ InitMembers(). void TProof::InitMembers ; (; ). protected . Default initializations. ; Definition at line 527 of file TProof.cxx. ◆ Interrupt(). void TProof::Interrupt ; (; EUrgent ; type, . ESlaves ; list = kActive . ). private . Send interrupt to master or slave servers. ; Definition at line 2276 of file TProof.cxx. ◆ InterruptCurrentMonitor(). void TProof::InterruptCurrentMonitor ; (; ). private . If in active in a monitor set ready state. ; Definition at line 11335 of file TProof.cxx. ◆ IsA(). TClass * TProof::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TNamed.; Reimplemented in TProofCondor, TProofLite, and TProofSuperMaster.; Definition at line 1073 of file TProof.h. ◆ IsDataReady(). Bool_t TProof::IsDataReady ; (; Long64_t & ; totalbytes, . Long64_t & ; bytesready . ). See if the data is ready to be analyzed. ; Def",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:111487,error,error,111487,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['error'],['error']
Availability, PROGRESS:Generation -- RooMCStudy::run: sample 190; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 180; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 170; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 160; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 150; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-750.903) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.726225 a1=-0.429497 mean=5.03871 nbkg=129.53 nsig=136.644 sig1frac=0.687558; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 140; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-740.756) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.899536 a1=-0.345881 mean=5.03897 nbkg=135.176 nsig=129.13 sig1frac=0.899393; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-677.604) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.766597 a1=-0.547838 mean=5.03836 nbkg=119.039 nsig=121.817 sig1frac=0.213703; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 130; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-777.498) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.527582 a1=-0.893856 mean=5.24753 nbkg=162.951 nsig=65.9357 sig1frac=0.970262; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-777.498) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.516095 a1=-0.955515 mean=5.14443 nbkg=157.502 nsig=97.2821 sig1fra,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf801__mcstudy_8C.html:24872,error,errors,24872,doc/master/rf801__mcstudy_8C.html,https://root.cern,https://root.cern/doc/master/rf801__mcstudy_8C.html,4,['error'],"['error', 'errors']"
Availability, PROGRESS:Generation -- RooMCStudy::run: sample 250; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-1003.82) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.674666 a1=-0.383697 mean=5.00365 nbkg=169.829 nsig=179.534 sig1frac=0.921743; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-712.949) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.711808 a1=-0.34088 mean=4.99573 nbkg=115.49 nsig=133.015 sig1frac=0.908627; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 240; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 230; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 220; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 210; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 200; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 190; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 180; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 170; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 160; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 150; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-750.903) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.726225 a1=-0.429497 mean=5.03871 nbkg=129.53 nsig=136.644 sig1frac=0.687558; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 140; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-740.756) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.899536 a1=-0.345881 mean=5.03897 nbkg=135.176 nsig=129.13 sig1frac=0.899393; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x],MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf801__mcstudy_8C.html:23569,error,errors,23569,doc/master/rf801__mcstudy_8C.html,https://root.cern,https://root.cern/doc/master/rf801__mcstudy_8C.html,4,['error'],"['error', 'errors']"
Availability, PROGRESS:Generation -- RooMCStudy::run: sample 390; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-977.775) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.565967 a1=-0.529635 mean=5.0065 nbkg=153.38 nsig=185.083 sig1frac=0.751239; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 380; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 370; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-945.036) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.824344 a1=-0.338546 mean=5.06339 nbkg=161.705 nsig=169.087 sig1frac=0.910016; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 360; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 350; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 340; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 330; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 320; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 310; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-831.776) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.823781 a1=-0.287947 mean=4.96347 nbkg=133.185 nsig=155.535 sig1frac=0.887106; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[x] + nsig * sig ] has 1 errors; ; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 300; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 290; [#0] PROGRESS:Generation -- RooMCStudy::run: sample 280; RooAbsMinimizerFcn: Minimized function has error status.; Returning maximum FCN so far (-867.974) to force MIGRAD to back out of this region. Error log follows.; Parameter values: a0=0.806741 a1=-0.376486 mean=4.95962 nbkg=143.191 nsig=160.421 sig1frac=0.787531; RooAddPdf::model[ nbkg * bkg_over_bkg_Int[,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf801__mcstudy_8C.html:20855,error,errors,20855,doc/master/rf801__mcstudy_8C.html,https://root.cern,https://root.cern/doc/master/rf801__mcstudy_8C.html,4,['error'],"['error', 'errors']"
Availability," Parameters. [in]dataData point. ; [in]wgtEvent weight. Defaults to 1. The current value of the weight variable is ignored. . NoteTo obtain weighted events, a variable must be designated WeightVar in the constructor. ; Parameters. [in]wgtErrorOptional weight error. . NoteThis requires including the weight variable in the set of StoreError variables when constructing the dataset. ; Definition at line 935 of file RooDataSet.cxx. ◆ add() [2/3]. void RooDataSet::add ; (; const RooArgSet & ; indata, . double ; inweight, . double ; weightErrorLo, . double ; weightErrorHi . ). virtual . Add a data point, with its coordinates specified in the 'data' argset, to the data set. ; Any variables present in 'data' but not in the dataset will be silently ignored. Parameters. [in]indataData point. ; [in]inweightEvent weight. The current value of the weight variable is ignored. . NoteTo obtain weighted events, a variable must be designated WeightVar in the constructor. ; Parameters. [in]weightErrorLoAsymmetric weight error. ; [in]weightErrorHiAsymmetric weight error. . NoteThis requires including the weight variable in the set of StoreAsymError variables when constructing the dataset. ; Definition at line 987 of file RooDataSet.cxx. ◆ add() [3/3]. void RooDataSet::add ; (; const RooArgSet & ; row, . double ; weight = 1.0 . ). inlineoverridevirtual . Implements RooAbsData.; Definition at line 96 of file RooDataSet.h. ◆ addColumn(). RooAbsArg * RooDataSet::addColumn ; (; RooAbsArg & ; var, . bool ; adjustRange = true . ). virtual . Add a column with the values of the given (function) argument to this dataset. ; The function value is calculated for each event using the observable values of each event in case the function depends on variables with names that are identical to the observable names in the dataset ; Definition at line 1153 of file RooDataSet.cxx. ◆ addColumns(). RooArgSet * RooDataSet::addColumns ; (; const RooArgList & ; varList). virtual . Add a column with the values of t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooDataSet.html:43593,error,error,43593,doc/master/classRooDataSet.html,https://root.cern,https://root.cern/doc/master/classRooDataSet.html,1,['error'],['error']
Availability," Passing an out-of-range bin leads to undefined behavior; 3602 ; 3603void TH3C::AddBinContent(Int_t bin); 3604{; 3605 if (fArray[bin] < 127) fArray[bin]++;; 3606}; 3607 ; 3608 ; 3609////////////////////////////////////////////////////////////////////////////////; 3610/// Increment bin content by w.; 3611/// \warning The value of w is cast to `Int_t` before being added.; 3612/// Passing an out-of-range bin leads to undefined behavior; 3613 ; 3614void TH3C::AddBinContent(Int_t bin, Double_t w); 3615{; 3616 Int_t newval = fArray[bin] + Int_t(w);; 3617 if (newval > -128 && newval < 128) {fArray[bin] = Char_t(newval); return;}; 3618 if (newval < -127) fArray[bin] = -127;; 3619 if (newval > 127) fArray[bin] = 127;; 3620}; 3621 ; 3622 ; 3623////////////////////////////////////////////////////////////////////////////////; 3624/// Copy this 3-D histogram structure to newth3.; 3625 ; 3626void TH3C::Copy(TObject &newth3) const; 3627{; 3628 TH3::Copy(newth3);; 3629}; 3630 ; 3631 ; 3632////////////////////////////////////////////////////////////////////////////////; 3633/// Reset this histogram: contents, errors, etc.; 3634 ; 3635void TH3C::Reset(Option_t *option); 3636{; 3637 TH3::Reset(option);; 3638 TArrayC::Reset();; 3639 // should also reset statistics once statistics are implemented for TH3; 3640}; 3641 ; 3642 ; 3643////////////////////////////////////////////////////////////////////////////////; 3644/// Set total number of bins including under/overflow; 3645/// Reallocate bin contents array; 3646 ; 3647void TH3C::SetBinsLength(Int_t n); 3648{; 3649 if (n < 0) n = (fXaxis.GetNbins()+2)*(fYaxis.GetNbins()+2)*(fZaxis.GetNbins()+2);; 3650 fNcells = n;; 3651 TArrayC::Set(n);; 3652}; 3653 ; 3654 ; 3655////////////////////////////////////////////////////////////////////////////////; 3656/// When the mouse is moved in a pad containing a 3-d view of this histogram; 3657/// a second canvas shows a projection type given as option.; 3658/// To stop the generation of the projections, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:141690,error,errors,141690,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,1,['error'],['errors']
Availability," Percent is loudness from -100% .. 100%. void CopyArea(Drawable_t src, Drawable_t dest, GContext_t gc, Int_t src_x, Int_t src_y, UInt_t width, UInt_t height, Int_t dest_x, Int_t dest_y); Combines the specified rectangle of ""src"" with the specified rectangle; of ""dest"" according to the ""gc"". src_x, src_y - specify the x and y coordinates, which are relative; to the origin of the source rectangle and specify; upper-left corner.; width, height - the width and height, which are the dimensions of both; the source and destination rectangles; dest_x, dest_y - specify the upper-left corner of the destination; rectangle. GC components in use: function, plane-mask, subwindow-mode,; graphics-exposure, clip-x-origin, clip-y-origin, and clip-mask.; (see also the GCValues_t structure). void ChangeWindowAttributes(Window_t id, SetWindowAttributes_t* attr); Changes the attributes of the specified window ""id"" according the; values provided in ""attr"". The mask data member of ""attr"" specifies; which window attributes are defined in the attributes argument.; This mask is the bitwise inclusive OR of the valid attribute mask; bits; if it is zero, the attributes are ignored. void ChangeProperty(Window_t id, Atom_t property, Atom_t type, UChar_t* data, Int_t len); Alters the property for the specified window and causes the X server; to generate a PropertyNotify event on that window. id - the window whose property you want to change; property - specifies the property name; type - the type of the property; the X server does not; interpret the type but simply passes it back to; an application that might ask about the window; properties; data - the property data; len - the length of the specified data format. void DrawLine(Drawable_t id, GContext_t gc, Int_t x1, Int_t y1, Int_t x2, Int_t y2); Uses the components of the specified GC to draw a line between the; specified set of points (x1, y1) and (x2, y2). GC components in use: function, plane-mask, line-width, line-style,; cap-style, fill-styl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TVirtualX.html:46142,mask,mask,46142,root/html528/TVirtualX.html,https://root.cern,https://root.cern/root/html528/TVirtualX.html,10,['mask'],['mask']
Availability," Pixel_t GetRowBackground(UInt_t row) const; Get the background collor for row. Pixel_t GetHeaderBackground() const; Get the background color of headers. void SetOddRowBackground(Pixel_t pixel); Set the background color for all odd numbered rows. void SetEvenRowBackground(Pixel_t pixel); Set the background color for all even numbered rows. void SetHeaderBackground(Pixel_t pixel); Set the background color for the headers. void SetDefaultColors(); Set the background color for all rows and headers to their defaults. void MoveTable(Int_t rows, Int_t columns); Move and layout the table to the specified range. void GotoTableRange(Int_t xtl, Int_t ytl, Int_t xbr, Int_t ybr); Move and resize the table to the specified range. TGTableCell * operator()(UInt_t row, UInt_t column); Operator for easy cell acces. void ScrollCHeaders(Int_t xpos); Scroll the column headers horizontally. void ScrollRHeaders(Int_t ypos); Scroll the row headers vertically. void NextChunk(); Move the table to the next chunk of the data set with the same size. void PreviousChunk(); Move the table to the previous chunk of the data set with the same size. void Goto(); Slot used by the Goto button and whenever return is pressed in; on of the text entries in the range frame. void UserRangeChange(); Slot used when the text in one of the range frame text entries changes. void Update(); Update the range of the available data and refresh the current view. TVirtualTableInterface * GetInterface(); { return fInterface; }. TGCanvas * GetCanvas(); { return fCanvas; }. const TGTableHeaderFrame * GetRHdrFrame(); { return fRHdrFrame; }. const TGTableHeaderFrame * GetCHdrFrame(); { return fCHdrFrame; }. » Author: Roel Aaij 21/07/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: Fri Dec 2 14:27:47 2011 » Last generated: 2011-12-02 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGTable.html:31417,avail,available,31417,root/html532/TGTable.html,https://root.cern,https://root.cern/root/html532/TGTable.html,2,['avail'],['available']
Availability," Pixel_t GetRowBackground(UInt_t row) const; Get the background collor for row. Pixel_t GetHeaderBackground() const; Get the background color of headers. void SetOddRowBackground(Pixel_t pixel); Set the background color for all odd numbered rows. void SetEvenRowBackground(Pixel_t pixel); Set the background color for all even numbered rows. void SetHeaderBackground(Pixel_t pixel); Set the background color for the headers. void SetDefaultColors(); Set the background color for all rows and headers to their defaults. void MoveTable(Int_t rows, Int_t columns); Move and layout the table to the specified range. void GotoTableRange(Int_t xtl, Int_t ytl, Int_t xbr, Int_t ybr); Move and resize the table to the specified range. TGTableCell * operator()(UInt_t row, UInt_t column); Operator for easy cell acces. void ScrollCHeaders(Int_t xpos); Scroll the column headers horizontally. void ScrollRHeaders(Int_t ypos); Scroll the row headers vertically. void NextChunk(); Move the table to the next chunk of the data set with the same size. void PreviousChunk(); Move the table to the previous chunk of the data set with the same size. void Goto(); Slot used by the Goto button and whenever return is pressed in; on of the text entries in the range frame. void UserRangeChange(); Slot used when the text in one of the range frame text entries changes. void Update(); Update the range of the available data and refresh the current view. TVirtualTableInterface * GetInterface(); { return fInterface; }. TGCanvas * GetCanvas(); { return fCanvas; }. const TGTableHeaderFrame * GetRHdrFrame(); { return fRHdrFrame; }. const TGTableHeaderFrame * GetCHdrFrame(); { return fCHdrFrame; }. » Author: Roel Aaij 21/07/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: Mon Jul 4 15:30:37 2011 » Last generated: 2011-07-04 15:30; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGTable.html:31417,avail,available,31417,root/html530/TGTable.html,https://root.cern,https://root.cern/root/html530/TGTable.html,1,['avail'],['available']
Availability," Plot the distribution of fitted values of a parameter. ; The parameter shown is the one from which the RooPlot was created, e.g.; RooPlot* frame = param.frame(100,-10,10) ; mcstudy.paramOn(frame,LineStyle(kDashed)) ;; Any named arguments passed to plotParamOn() are forwarded to the underlying plotOn() call. PyROOT; The RooMCStudy::plotParamOn() function is pythonized with the command argument pythonization. The keywords must correspond to the CmdArg of the function. . Definition at line 884 of file RooMCStudy.cxx. ◆ plotPull() [1/2]. RooMCStudy::plotPull ; (; const RooRealVar & ; param, . const RooCmdArg & ; arg1, . const RooCmdArg & ; arg2 = {}, . const RooCmdArg & ; arg3 = {}, . const RooCmdArg & ; arg4 = {}, . const RooCmdArg & ; arg5 = {}, . const RooCmdArg & ; arg6 = {}, . const RooCmdArg & ; arg7 = {}, . const RooCmdArg & ; arg8 = {} . ). Plot the distribution of pull values for the specified parameter on a newly created frame. ; If asymmetric errors are calculated in the fit (by MINOS) those will be used in the pull calculation.; If the parameters of the models for generation and fit differ, simple heuristics are used to find the corresponding parameters:; Parameters have the same name: They will be used to compute pulls.; Parameters have different names: The position of the fit parameter in the set of fit parameters will be computed. The parameter at the same position in the set of generator parameters will be used. Further options: . Arguments Effect . FrameRange(double lo, double hi) Set range of frame to given specification . FrameBins(int bins) Set default number of bins of frame to given number . Frame() Pass supplied named arguments to RooAbsRealLValue::frame() function. See there for list of allowed arguments . FitGauss(bool flag) Add a gaussian fit to the frame . If no frame specifications are given, the AutoSymRange() feature will be used to set a default range. Any other named argument is passed to the RooAbsData::plotOn(). See that function for a",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooMCStudy.html:35653,error,errors,35653,doc/master/classRooMCStudy.html,https://root.cern,https://root.cern/doc/master/classRooMCStudy.html,1,['error'],['errors']
Availability," Plot:; 'Contour' : ComboBox: draw a contour plot (None, Cont0..4); 'Cont #' : TGNumberEntry: set the number of Contours; 2d Plot checkboxes:; 'Arrow' : arrow mode. Shows gradient between adjacent cells; 'Col' : a box is drawn for each cell with a color scale; varying with contents; 'Text' : Draw bin contents as text; 'Box' : a box is drawn for each cell with surface; proportional to contents; 'Scat' : Draw a scatter-plot (default); 'Palette' : the color palette is drawn. 3d Plot:; 'Type' : ComboBox: set histogram type Lego or Surface-Plot; draw(Lego, Lego1..4, Surf, Surf1..5); see THistPainter::Paint; 'Coords' : ComboBox: set the coordinate system (Cartesian, ..; Spheric) see THistPainter::Paint; 'Cont #' : TGNumberEntry: set the number of Contours (for e.g.; Lego2 drawoption; 3d Plot checkboxes:; 'Errors' : draw errors in a cartesian lego plot; 'Palette' : the color palette is drawn; 'Front' : draw the front box of a cartesian lego plot; 'Back' : draw the back box of a cartesian lego plot; Available for a 3D lego plot:; 'Bar' : change the bar attributes; 'W' : change Bar Width; 'O' : change Bar Offset; Further Editor:; 'Marker' : change the Marker attributes (color, appearance,; thickness) see TAttMarkerEditor. /*. */. /*. */. Rebinning Tab:; This Tab has two different layouts. One is for a histogram which; is not drawn from an ntuple. The other one is available for a; histogram which is drawn from an ntuple. In this case the rebin; algorithm can create a rebinned histogram from the original data; i.e. the ntuple.; To see te differences do for example:; TFile f(""hsimple.root"");; hpxpy->Draw(""Lego2""); // non ntuple histogram; ntuple->Draw(""px:py"","""",""Lego2""); // ntuple histogram; Non ntuple histogram:; 'Rebin': with the Sliders (one for the x, one for the y axis); the number of bins (shown in the field below the; Slider) can be changed to any number which divides; the number of bins of the original histogram.; Pushing 'Apply' will delete the origin histogram and; re",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TH2Editor.html:1858,error,errors,1858,root/html602/TH2Editor.html,https://root.cern,https://root.cern/root/html602/TH2Editor.html,8,"['Avail', 'Error', 'error']","['Available', 'Errors', 'errors']"
Availability," Point_t Rectangle_t WindowAttributes_t Float_t rDefinition TGWin32VirtualXProxy.cxx:168; TRandom2.h; ROOT::Math::Factory::CreateMinimizerstatic ROOT::Math::Minimizer * CreateMinimizer(const std::string &minimizerType="""", const std::string &algoType="""")static method to create the corresponding Minimizer given the string Supported Minimizers types are: ...Definition Factory.cxx:63; ROOT::Math::FunctorDocumentation for class Functor class.Definition Functor.h:47; ROOT::Math::MinimizerAbstract Minimizer class, defining the interface for the various minimizer (like Minuit2,...Definition Minimizer.h:119; ROOT::Math::Minimizer::Xvirtual const double * X() const =0return pointer to X values at the minimum; ROOT::Math::Minimizer::SetMaxIterationsvoid SetMaxIterations(unsigned int maxiter)set maximum iterations (one iteration can have many function calls)Definition Minimizer.h:334; ROOT::Math::Minimizer::SetFunctionvirtual void SetFunction(const ROOT::Math::IMultiGenFunction &func)=0set the function to minimize; ROOT::Math::Minimizer::SetTolerancevoid SetTolerance(double tol)set the toleranceDefinition Minimizer.h:337; ROOT::Math::Minimizer::Minimizevirtual bool Minimize()=0method to perform the minimization; ROOT::Math::Minimizer::SetPrintLevelvoid SetPrintLevel(int level)set print levelDefinition Minimizer.h:328; ROOT::Math::Minimizer::SetVariablevirtual bool SetVariable(unsigned int ivar, const std::string &name, double val, double step)=0set a new free variable; ROOT::Math::Minimizer::SetMaxFunctionCallsvoid SetMaxFunctionCalls(unsigned int maxfcn)set maximum of function callsDefinition Minimizer.h:331; ROOT::Math::Minimizer::MinValuevirtual double MinValue() const =0return minimum function value; TRandom2Random number generator class based on the maximally quidistributed combined Tausworthe generator by ...Definition TRandom2.h:27; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; Factory.h; NumericalMinimizationDefinition NumericalMinimizati",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/NumericalMinimization_8C.html:4249,toler,toleranceDefinition,4249,doc/master/NumericalMinimization_8C.html,https://root.cern,https://root.cern/doc/master/NumericalMinimization_8C.html,1,['toler'],['toleranceDefinition']
Availability," Poisson; 2067/// probability that given a number of entries in a particular bin,; 2068/// the fit would predict it's value. This is then done for each bin,; 2069/// and the sum of the logs is taken as the likelihood.; 2070/// PDF: P=exp(-f(x_i))/[F_i]!*(f(x_i))^[F_i]; 2071/// where F_i - experimental value, f(x_i) - expected theoretical value; 2072/// [F_i] - integer part of F_i.; 2073/// drawback is that if F_i>Int_t - GetSumLog will fail; 2074/// for big F_i is faster to use Euler's Gamma-function; 2075 ; 2076void H1FitLikelihoodFumili(Int_t &npar, Double_t *gin, Double_t &f, Double_t *u, Int_t flag); 2077{; 2078 ; 2079 TFumili *hFitter = (TFumili*)TVirtualFitter::GetFitter();; 2080 hFitter->FitLikelihood(npar, gin, f, u, flag);; 2081}; 2082 ; 2083////////////////////////////////////////////////////////////////////////////////; 2084/// Minimization function for Graphs using a Chisquare method.; 2085/// In case of a TGraphErrors object, ex, the error along x, is projected; 2086/// along the y-direction by calculating the function at the points x-exlow and; 2087/// x+exhigh.; 2088///; 2089/// The chisquare is computed as the sum of the quantity below at each point:; 2090///; 2091/// (y - f(x))**2; 2092/// -----------------------------------; 2093/// ey**2 + (0.5*(exl + exh)*f'(x))**2; 2094///; 2095/// where x and y are the point coordinates and f'(x) is the derivative of function f(x).; 2096/// This method to approximate the uncertainty in y because of the errors in x, is called; 2097/// ""effective variance"" method.; 2098/// The improvement, compared to the previously used method (f(x+ exhigh) - f(x-exlow))/2; 2099/// is of (error of x)**2 order.; 2100///; 2101/// NOTE:; 2102///; 2103/// 1. By using the ""effective variance"" method a simple linear regression; 2104/// becomes a non-linear case , which takes several iterations; 2105/// instead of 0 as in the linear case .; 2106///; 2107/// 2. The effective variance technique assumes that there is no correlation; 2108//",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFumili_8cxx_source.html:61277,error,error,61277,doc/master/TFumili_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFumili_8cxx_source.html,1,['error'],['error']
Availability," PolyMarker3D Window"",200,10,500,500);. // Creating a view; TView3D *view = (TView3D*) TView::CreateView(1);; view->SetRange(5,5,5,25,25,25);. // Create a first PolyLine3D; TPolyLine3D *pl3d1 = new TPolyLine3D(5);; pl3d1->SetPoint(0, 10, 10, 10);; pl3d1->SetPoint(1, 15, 15, 10);; pl3d1->SetPoint(2, 20, 15, 15);; pl3d1->SetPoint(3, 20, 20, 20);; pl3d1->SetPoint(4, 10, 10, 20);. // Create a first PolyMarker3D; TPolyMarker3D *pm3d1 = new TPolyMarker3D(12);; pm3d1->SetPoint(0, 10, 10, 10);; pm3d1->SetPoint(1, 11, 15, 11);; pm3d1->SetPoint(2, 12, 15, 9);; pm3d1->SetPoint(3, 13, 17, 20);; pm3d1->SetPoint(4, 14, 16, 15);; pm3d1->SetPoint(5, 15, 20, 15);; pm3d1->SetPoint(6, 16, 18, 10);; pm3d1->SetPoint(7, 17, 15, 10);; pm3d1->SetPoint(8, 18, 22, 15);; pm3d1->SetPoint(9, 19, 28, 25);; pm3d1->SetPoint(10, 20, 12, 15);; pm3d1->SetPoint(11, 21, 12, 15);; pm3d1->SetMarkerSize(2);; pm3d1->SetMarkerColor(4);; pm3d1->SetMarkerStyle(2);. // Draw; pl3d1->Draw();; pm3d1->Draw();; }. Several coordinate systems are available:. Cartesian; Polar; Cylindrical; Spherical; PseudoRapidity/Phi. . Function Members (Methods); public:. virtual~TView3D(); voidTObject::AbstractMethod(const char* method) const; static voidAdjustPad(TVirtualPad* pad = 0); virtual voidAdjustScales(TVirtualPad* pad = 0)MENU ; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidAxisVertex(Double_t ang, Double_t* av, Int_t& ix1, Int_t& ix2, Int_t& iy1, Int_t& iy2, Int_t& iz1, Int_t& iz2); virtual voidTObject::Browse(TBrowser* b); virtual voidCentered()MENU ; virtual voidCentered3DImages(TVirtualPad* pad = 0); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static TView*TView::CreateView(Int_t system = 1, const Double_t* rmin = 0, const Double_t* rmax = 0); virtual voidDefin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TView3D.html:2138,avail,available,2138,root/html602/TView3D.html,https://root.cern,https://root.cern/root/html602/TView3D.html,4,['avail'],['available']
Availability," Printf(const char *fmt,...)Formats a string in a circular formatting buffer and prints the string.Definition TString.cxx:2503; TSysEvtHandler.h; kSigInterrupt@ kSigInterruptDefinition TSysEvtHandler.h:115; TSystemDirectory.h; TSystem.h; kReadPermission@ kReadPermissionDefinition TSystem.h:45; gSystemR__EXTERN TSystem * gSystemDefinition TSystem.h:561; TTabCom.h; gTabComR__EXTERN TTabCom * gTabComDefinition TTabCom.h:229; TVirtualX.h; gVirtualX#define gVirtualXDefinition TVirtualX.h:337; ThreadLocalStorage.h; free#define freeDefinition civetweb.c:1539; snprintf#define snprintfDefinition civetweb.c:1540; TApplicationThis class creates the ROOT Application Environment that interfaces to the windowing system eventloop...Definition TApplication.h:39; TApplication::KeyPressedvirtual void KeyPressed(Int_t key)Emit signal when console keyboard key was pressed.Definition TApplication.cxx:1949; TApplication::ProcessLinevirtual Longptr_t ProcessLine(const char *line, Bool_t sync=kFALSE, Int_t *error=nullptr)Process a single command line, either a C++ statement or an interpreter command starting with a ""....Definition TApplication.cxx:1565; TApplication::HandleTermInputvirtual Bool_t HandleTermInput()Definition TApplication.h:116; TApplication::InputFilesTObjArray * InputFiles() constDefinition TApplication.h:146; TApplication::LineProcessedvirtual void LineProcessed(const char *line)Emit signal when a line has been processed.Definition TApplication.cxx:1941; TApplication::ClearInputFilesvoid ClearInputFiles()Clear list containing macro files passed as program arguments.Definition TApplication.cxx:318; TApplication::kProcessRemotely@ kProcessRemotelyDefinition TApplication.h:44; TApplication::ReturnFromRunBool_t ReturnFromRun() constDefinition TApplication.h:153; TApplication::Runvirtual void Run(Bool_t retrn=kFALSE)Main application eventloop. Calls system dependent eventloop via gSystem.Definition TApplication.cxx:1860; TApplication::HandleExceptionvirtual void HandleExceptio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TRint_8cxx_source.html:31708,error,error,31708,doc/master/TRint_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TRint_8cxx_source.html,1,['error'],['error']
Availability," Process interpreter command via TApplication::ProcessLine().; 2361/// On Win32 the line will be processed asynchronously by sending; 2362/// it to the CINT interpreter thread. For explicit synchronous processing; 2363/// use ProcessLineSync(). On non-Win32 platforms there is no difference; 2364/// between ProcessLine() and ProcessLineSync().; 2365/// The possible error codes are defined by TInterpreter::EErrorCode. In; 2366/// particular, error will equal to TInterpreter::kProcessing until the; 2367/// CINT interpreted thread has finished executing the line.; 2368/// Returns the result of the command, cast to a Longptr_t.; 2369 ; 2370Longptr_t TROOT::ProcessLine(const char *line, Int_t *error); 2371{; 2372 TString sline = line;; 2373 sline = sline.Strip(TString::kBoth);; 2374 ; 2375 if (!fApplication.load()); 2376 TApplication::CreateApplication();; 2377 ; 2378 return (*fApplication).ProcessLine(sline, kFALSE, error);; 2379}; 2380 ; 2381////////////////////////////////////////////////////////////////////////////////; 2382/// Process interpreter command via TApplication::ProcessLine().; 2383/// On Win32 the line will be processed synchronously (i.e. it will; 2384/// only return when the CINT interpreter thread has finished executing; 2385/// the line). On non-Win32 platforms there is no difference between; 2386/// ProcessLine() and ProcessLineSync().; 2387/// The possible error codes are defined by TInterpreter::EErrorCode.; 2388/// Returns the result of the command, cast to a Longptr_t.; 2389 ; 2390Longptr_t TROOT::ProcessLineSync(const char *line, Int_t *error); 2391{; 2392 TString sline = line;; 2393 sline = sline.Strip(TString::kBoth);; 2394 ; 2395 if (!fApplication.load()); 2396 TApplication::CreateApplication();; 2397 ; 2398 return (*fApplication).ProcessLine(sline, kTRUE, error);; 2399}; 2400 ; 2401////////////////////////////////////////////////////////////////////////////////; 2402/// Process interpreter command directly via CINT interpreter.; 2403/// Only ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TROOT_8cxx_source.html:90498,error,error,90498,doc/master/TROOT_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TROOT_8cxx_source.html,2,['error'],['error']
Availability," Profile histogram. ; Definition at line 837 of file TProfile.cxx. ◆ GetBinError() [1/3]. Double_t TProfile::GetBinError ; (; Int_t ; bin); const. overridevirtual . Return bin error of a Profile histogram. ; Computing errors: A moving field; The computation of errors for a TProfile has evolved with the versions of ROOT. The difficulty is in computing errors for bins with low statistics. prior to version 3.00, we had no special treatment of low statistic bins. As a result, these bins had huge errors. The reason is that the expression eprim2 is very close to 0 (rounding problems) or 0.; in version 3.00 (18 Dec 2000), the algorithm is protected for values of eprim2 very small and the bin errors set to the average bin errors, following recommendations from a group of users.; in version 3.01 (19 Apr 2001), it is realized that the algorithm above should be applied only to low statistic bins.; in version 3.02 (26 Sep 2001), the same group of users recommend instead to take two times the average error on all bins for these low statistics bins giving a very small value for eprim2.; in version 3.04 (Nov 2002), the algorithm is modified/protected for the case when a TProfile is projected (ProjectionX). The previous algorithm generated a N^2 problem when projecting a TProfile with a large number of bins (eg 100000).; in version 3.05/06, a new static function TProfile::Approximate is introduced to enable or disable (default) the approximation. Ideas for improvements of this algorithm are welcome. No suggestions received since our call for advice to roottalk in Jul 2002. see for instance: http://root.cern/root/roottalk/roottalk02/2916.html ; Reimplemented from TH1.; Definition at line 888 of file TProfile.cxx. ◆ GetBinError() [2/3]. Double_t TProfile::GetBinError ; (; Int_t ; bin, . Int_t ;  . ); const. inlineoverridevirtual . Reimplemented from TH1.; Definition at line 107 of file TProfile.h. ◆ GetBinError() [3/3]. Double_t TProfile::GetBinError ; (; Int_t ; bin, . Int_t ; , . In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile.html:73959,error,error,73959,doc/master/classTProfile.html,https://root.cern,https://root.cern/doc/master/classTProfile.html,1,['error'],['error']
Availability," Public Member Functions; virtual ~TSQLStatement ()=default;  ; virtual void Close (Option_t *="""");  ; virtual void EnableErrorOutput (Bool_t on=kTRUE);  ; virtual Bool_t GetBinary (Int_t, void *&, Long_t &);  ; virtual Int_t GetBufferLength () const =0;  ; virtual Bool_t GetDate (Int_t, Int_t &, Int_t &, Int_t &);  ; TDatime GetDatime (Int_t);  return value of parameter in form of TDatime Be aware, that TDatime does not allow dates before 1995-01-01 ;  ; virtual Bool_t GetDatime (Int_t, Int_t &, Int_t &, Int_t &, Int_t &, Int_t &, Int_t &);  ; Int_t GetDay (Int_t);  return day value for parameter (if applicable) ;  ; virtual Double_t GetDouble (Int_t);  ; virtual Int_t GetErrorCode () const;  returns error code of last operation if res==0, no error Each specific implementation of TSQLStatement provides its own error coding ;  ; virtual const char * GetErrorMsg () const;  returns error message of last operation if no errors, return 0 Each specific implementation of TSQLStatement provides its own error messages ;  ; virtual const char * GetFieldName (Int_t)=0;  ; Int_t GetHour (Int_t);  return hours value for parameter (if applicable) ;  ; virtual Int_t GetInt (Int_t);  ; virtual Bool_t GetLargeObject (Int_t col, void *&mem, Long_t &size);  ; virtual Long_t GetLong (Int_t);  ; virtual Long64_t GetLong64 (Int_t);  ; Int_t GetMinute (Int_t);  return minutes value for parameter (if applicable) ;  ; Int_t GetMonth (Int_t);  return month value for parameter (if applicable) ;  ; virtual Int_t GetNumAffectedRows ();  ; virtual Int_t GetNumFields ()=0;  ; virtual Int_t GetNumParameters ()=0;  ; Int_t GetSecond (Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSQLStatement.html:1078,error,error,1078,doc/master/classTSQLStatement.html,https://root.cern,https://root.cern/doc/master/classTSQLStatement.html,5,['error'],"['error', 'errors']"
Availability," Public Member Functions;  BinData (const BinData &rhs);  copy constructors ;  ;  BinData (const DataOptions &opt, const DataRange &range, unsigned int maxpoints=0, unsigned int dim=1, ErrorType err=kValueError);  constructor from options and range default is 1D and value errors ;  ;  BinData (const DataOptions &opt, unsigned int maxpoints=0, unsigned i",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Fit_1_1BinData.html:1919,error,errors,1919,doc/master/classROOT_1_1Fit_1_1BinData.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Fit_1_1BinData.html,2,['error'],['errors']
Availability," Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file. viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MATHCORE; » ROOT::Math::IParametricGradFunctionMultiDim. class ROOT::Math::IParametricGradFunctionMultiDim: public ROOT::Math::IParametricFunctionMultiDim. Documentation for the abstract class IBaseParam.; It defines the interface for dealing with the function parameters; This is used only for internal convinience, to avoid redefining the Parameter API; for the one and the multi-dim functions.; Concrete class should derive from ROOT::Math::IParamFunction and not from this class. @ingroup ParamFunc. This class is also known as (typedefs to this class)ROOT::Math::IParamMultiGradFunction, ROOT::Math::WrappedMultiTF1::BaseParamFunc, ROOT::Fit::Fitter::IGradModelFunction. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~IParametricGradFunctionMultiDim(); virtual ROOT::Math::IBaseFunctionMultiDim*ROOT::Math::IBaseFunctionMultiDim::Clone() const; virtual unsigned intROOT::Math::IBaseFunctionMultiDim::NDim() const; virtual unsigned intROOT::Math::IBaseParam::NPar() const; doubleROOT::Math::IParametricFunctionMultiDim::operator()(const double* x, const double* p) const; ROOT::Math::IParametricGradFunctionMultiDim&operator=(const ROOT::Math::IParametricGradFunctionMultiDim&); doubleParameterDerivative(const double* x, unsigned int ipar = 0) const; doubleParameterDerivative(const double* x, const double* p, unsigned int ipar = 0) const; voidParameterGradient(const double* x, double* grad) const; virtual voidParameterGradient(const double* x, const double* p, double* grad) const; virtual stringROOT::Math::IBaseParam::ParameterName(unsigned int i) const; virtual const double*ROOT::Math::IBaseParam::Parameters() const; virtual voidROOT::Math::IBaseParam::SetPara",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__IParametricGradFunctionMultiDim.html:1054,avail,available,1054,root/html526/ROOT__Math__IParametricGradFunctionMultiDim.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__IParametricGradFunctionMultiDim.html,2,['avail'],['available']
Availability," Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » HIST; » HIST; » TUnfoldSys. class TUnfoldSys: public TUnfold. TUnfoldSys adds error propagation of systematic errors to TUnfold; Also, background sources (with errors) can be subtracted. The following sources of systematic error are considered:; (a) uncorrelated errors on the input matrix histA, taken as the; errors provided with the histogram.; These are typically statistical errors from finite Monte Carlo samples. (b) correlated shifts of the input matrix histA. These shifts are taken; as one-sigma effects when switchig on a given error soure.; several such error sources may be defined. (c) a systematic error on the regularisation parameter tau. (d) uncorrelated errors on background sources, taken as the errors; provided with the background histograms. (e) scale errors on background sources. Source (a) is providede with the original histogram histA; TUnfoldSys(histA,...). Sources (b) are added by calls to; AddSysError(). The systematic uncertainty on tau (c) is set by; SetTauError(). Backgound sources causing errors of type (d) and (e) are added by; SubtractBackground(). NOTE:. Systematic errors (a), (b), (c) are propagated to the result; AFTER unfolding. Background errors (d) and (e) are added to the data errors; BEFORE unfolding. For this reason:; errors of type (d) and (e) are INCLUDED in the standard error matrix; and other methods provided by the base class TUnfold:; GetOutput(); GetEmatrix(). whereas errors of type (a), (b), (c) are NOT INCLUDED in the methods; provided by the base class TUnfold. Accessing error matrices:. The error sources (b),(c) and (e) propagate to shifts of the result.; These shifts may be accessed as histograms using the methods; GetDeltaSysSource() corresponds to (b); GetDeltaSysTau() corresponds to (c); GetDeltaSysBackgro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TUnfoldSys.html:1004,error,errors,1004,root/html528/TUnfoldSys.html,https://root.cern,https://root.cern/root/html528/TUnfoldSys.html,4,['error'],['errors']
Availability," RAM!. To construct a THn object you must use one of its templated, derived; classes:; THnD (typedef for THnT<Double_t>): bin content held by a Double_t,; THnF (typedef for THnT<Float_t>): bin content held by a Float_t,; THnL (typedef for THnT<Long_t>): bin content held by a Long_t,; THnI (typedef for THnT<Int_t>): bin content held by an Int_t,; THnS (typedef for THnT<Short_t>): bin content held by a Short_t,; THnC (typedef for THnT<Char_t>): bin content held by a Char_t,. They take name and title, the number of dimensions, and for each dimension; the number of bins, the minimal, and the maximal value on the dimension's; axis. A TH2F h(""h"",""h"",10, 0., 10., 20, -5., 5.) would correspond to; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnF hn(""hn"", ""hn"", 2, bins, min, max);. * Filling; A THn is filled just like a regular histogram, using; THn::Fill(x, weight), where x is a n-dimensional Double_t value.; To take errors into account, Sumw2() must be called before filling the; histogram.; Storage is allocated when the first bin content is stored. * Projections; The dimensionality of a THn can be reduced by projecting it to; 1, 2, 3, or n dimensions, which can be represented by a TH1, TH2, TH3, or; a THn. See the Projection() members. To only project parts of the; histogram, call; hn->GetAxis(12)->SetRange(from_bin, to_bin);. * Conversion from other histogram classes; The static factory function THn::CreateHn() can be used to create a THn; from a TH1, TH2, TH3, THnSparse and (for copying) even from a THn. The; created THn will have compatble storage type, i.e. calling CreateHn() on; a TH2F will create a THnF. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~THn(); voidTObject::AbstractMethod(const char* method) const; voidTHnBase::Add(const THnBase* h, Double_t c = 1.); voidTHnBase::Add(const TH1* hist,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THn.html:1634,error,errors,1634,root/html534/THn.html,https://root.cern,https://root.cern/root/html534/THn.html,6,['error'],['errors']
Availability," RDFHelpers.cxx. ◆ SaveGraph() [1/2]. template<typename NodeType > . std::string ROOT::RDF::SaveGraph ; (; NodeType ; node). Create a graphviz representation of the dataframe computation graph, return it as a string. ; Parameters. [in]nodeany node of the graph. Called on the head (first) node, it prints the entire graph. Otherwise, only the branch the node belongs to. The output can be displayed with a command akin to dot -Tpng output.dot > output.png && open output.png.; Note that ""hanging"" Defines, i.e. Defines without downstream nodes, will not be displayed by SaveGraph as they are effectively optimized away from the computation graph.; Note that SaveGraph is not thread-safe and must not be called concurrently from different threads. ; Definition at line 120 of file RDFHelpers.hxx. ◆ SaveGraph() [2/2]. template<typename NodeType > . void ROOT::RDF::SaveGraph ; (; NodeType ; node, . const std::string & ; outputFile . ). Create a graphviz representation of the dataframe computation graph, write it to the specified file. ; Parameters. [in]nodeany node of the graph. Called on the head (first) node, it prints the entire graph. Otherwise, only the branch the node belongs to. ; [in]outputFilefile where to save the representation. The output can be displayed with a command akin to dot -Tpng output.dot > output.png && open output.png.; Note that ""hanging"" Defines, i.e. Defines without downstream nodes, will not be displayed by SaveGraph as they are effectively optimized away from the computation graph.; Note that SaveGraph is not thread-safe and must not be called concurrently from different threads. ; Definition at line 139 of file RDFHelpers.hxx. ◆ splitInEqualRanges(). void ROOT::RDF::splitInEqualRanges ; (; std::vector< std::pair< ULong64_t, ULong64_t > > & ; ranges, . int ; nRecords, . unsigned int ; nSlots . ). Definition at line 519 of file RArrowDS.cxx. ROOTRDF. ROOT v6-32 - Reference Guide Generated on Fri Nov 1 2024 15:14:04 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/namespaceROOT_1_1RDF.html:16128,down,downstream,16128,doc/v632/namespaceROOT_1_1RDF.html,https://root.cern,https://root.cern/doc/v632/namespaceROOT_1_1RDF.html,1,['down'],['downstream']
Availability," ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file. viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MATHCORE; » ROOT::Math::IParametricFunctionOneDim. class ROOT::Math::IParametricFunctionOneDim: public ROOT::Math::IBaseFunctionOneDim, public ROOT::Math::IBaseParam. Documentation for the abstract class IBaseParam.; It defines the interface for dealing with the function parameters; This is used only for internal convinience, to avoid redefining the Parameter API; for the one and the multi-dim functions.; Concrete class should derive from ROOT::Math::IParamFunction and not from this class. @ingroup ParamFunc. This class is also known as (typedefs to this class)ROOT::Fit::Fitter::IModel1DFunction, ROOT::Math::IParametricGradFunctionOneDim::BaseParamFunc, ROOT::Math::IParamFunction. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. ~IParametricFunctionOneDim(); virtual ROOT::Math::IBaseFunctionOneDim*ROOT::Math::IBaseFunctionOneDim::Clone() const; virtual unsigned intROOT::Math::IBaseParam::NPar() const; doubleoperator()(double x, const double* p) const; doubleoperator()(const double* x, const double* p) const; ROOT::Math::IParametricFunctionOneDim&operator=(const ROOT::Math::IParametricFunctionOneDim&); virtual stringROOT::Math::IBaseParam::ParameterName(unsigned int i) const; virtual const double*ROOT::Math::IBaseParam::Parameters() const; virtual voidROOT::Math::IBaseParam::SetParameters(const double* p). private:. virtual doubleDoEval(double x) const; virtual doubleDoEvalPar(double x, const double* p) const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; double operator()(const double* x, const double* p) const. Evaluate function at a point x and for given parameters p.; This method does not change the internal status of the ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Math__IParametricFunctionOneDim.html:1062,avail,available,1062,root/html528/ROOT__Math__IParametricFunctionOneDim.html,https://root.cern,https://root.cern/root/html528/ROOT__Math__IParametricFunctionOneDim.html,1,['avail'],['available']
Availability," ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file. viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MATHCORE; » ROOT::Math::IParametricFunctionOneDim. class ROOT::Math::IParametricFunctionOneDim: public ROOT::Math::IBaseFunctionOneDim, public ROOT::Math::IBaseParam. Documentation for the abstract class IBaseParam.; It defines the interface for dealing with the function parameters; This is used only for internal convinience, to avoid redefining the Parameter API; for the one and the multi-dim functions.; Concrete class should derive from ROOT::Math::IParamFunction and not from this class. @ingroup ParamFunc. This class is also known as (typedefs to this class)ROOT::Fit::Fitter::IModel1DFunction, ROOT::Math::IParametricGradFunctionOneDim::BaseParamFunc, ROOT::Math::IParamFunction. Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. ~IParametricFunctionOneDim(); virtual ROOT::Math::IBaseFunctionOneDim*ROOT::Math::IBaseFunctionOneDim::Clone() const; virtual unsigned intROOT::Math::IBaseParam::NPar() const; doubleoperator()(double x, const double* p) const; doubleoperator()(const double* x, const double* p); ROOT::Math::IParametricFunctionOneDim&operator=(const ROOT::Math::IParametricFunctionOneDim&); virtual stringROOT::Math::IBaseParam::ParameterName(unsigned int i) const; virtual const double*ROOT::Math::IBaseParam::Parameters() const; virtual voidROOT::Math::IBaseParam::SetParameters(const double* p). private:. virtual doubleDoEval(double x) const; virtual doubleDoEvalPar(double x, const double* p) const. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; double operator()(const double * x, const double * p ). Evaluate function at a point x and for given parameters p.; This method does not change the internal status of the function ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__IParametricFunctionOneDim.html:1062,avail,available,1062,root/html526/ROOT__Math__IParametricFunctionOneDim.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__IParametricFunctionOneDim.html,1,['avail'],['available']
Availability," ROOT v5.10, symmetric matrices using a storage class (ROOT::Math::MatRepSym) which contains only the N*(N+1)/2 independent element of a NxN symmetric matrix. It is not in the mandate of this package to provide complete linear algebra functionality. It provides basic matrix and vector functions such as matrix-matrix, matrix-vector, vector-vector operations, plus some extra functionality for square matrices, like inversion and determinant calculation. The inversion is based on the optimized Cramer method for squared matrices of size up to 6x6.; The SMatrix package contains only header files. Normally one does not need to build any library. In the ROOT distribution a library, libSmatrix is produced with the C++ dictionary information for squared and symmetric matrices and vectors up to dimension 7 and based on Double_t, Float_t and Double32_t. The following paragraphs describe the main characteristics of the matrix and vector classes. More detailed information about the SMatrix classes API is available in the online reference documentation.; 13.13.1 Example: Vector Class (SVector); The template class ROOT::Math::SVector represents n-dimensional vectors for objects of arbitrary type. This class has 2 template parameters, which define at compile time, its properties: 1) type of the contained elements (for example float or double); 2) size of the vector. The use of this dictionary is mandatory if one want to use Smatrix in Cling and with I/O.; 13.13.1.1 Creating a Vector; The following constructors are available to create a vector:. Default constructor for a zero vector (all elements equal to zero).; Constructor (and assignment) from a vector expression, like v=p*q+w. Due to the expression template technique, no temporary objects are created in this operation.; Constructor by passing directly the elements. This is possible only for vectors up to size 10.; Constructor from an iterator copying the data referred by the iterator. It is possible to specify the begin and end o",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:750502,avail,available,750502,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['avail'],['available']
Availability," ROOT::Fit::BinData&LogTransform(); static unsigned intROOT::Fit::FitData::MaxSize(); unsigned intNDim() const; unsigned intNPoints() const; ROOT::Fit::BinData&operator=(const ROOT::Fit::BinData&); const ROOT::Fit::DataOptions&ROOT::Fit::FitData::Opt() const; ROOT::Fit::DataOptions&ROOT::Fit::FitData::Opt(); unsigned intPointSize() const; const ROOT::Fit::DataRange&ROOT::Fit::FitData::Range() const; doubleRefVolume() const; voidResize(unsigned int npoints); voidSetRefVolume(double value); unsigned intSize() const; doubleValue(unsigned int ipoint) const. protected:. voidSetNPoints(unsigned int n). Data Members; public:. enum ErrorType { kNoError; kValueError; kCoordError; kAsymError; };. private:. vector<double>fBinEdgevector containing the bin upper edge (coordinate will contain low edge) ; ROOT::Fit::DataVector*fDataVectorpointer to the copied in data vector; ROOT::Fit::DataWrapper*fDataWrapperpointer to the external data wrapper structure; unsigned intfDimcoordinate dimension; unsigned intfNPointsnumber of contained points in the data set (can be different than size of vector); unsigned intfPointSizetotal point size including value and errors (= fDim + 2 for error in only Y ) ; doublefRefVolumereference bin volume - used to normalize the bins in case of variable bins data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; unsigned int GetPointSize(ROOT::Fit::BinData::ErrorType err, unsigned int dim). ErrorType GetErrorType() const. explicit BinData(unsigned int maxpoints = 0, unsigned int dim = 1, ROOT::Fit::BinData::ErrorType err = kValueError). constructor from dimension of point and max number of points (to pre-allocate vector); Give a zero value and then use Initialize later one if the size is not known. explicit BinData(const ROOT::Fit::DataOptions& opt, unsigned int maxpoints = 0, unsigned int dim = 1, ROOT::Fit::BinData::ErrorType err = kValueError). constructor from option and default range. BinData(const DataOption",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Fit__BinData.html:5398,error,errors,5398,root/html526/ROOT__Fit__BinData.html,https://root.cern,https://root.cern/root/html526/ROOT__Fit__BinData.html,2,['error'],"['error', 'errors']"
Availability," ROOT::Fit::BinData&LogTransform(); static unsigned intROOT::Fit::FitData::MaxSize(); unsigned intNDim() const; unsigned intNPoints() const; ROOT::Fit::BinData&operator=(const ROOT::Fit::BinData&); const ROOT::Fit::DataOptions&ROOT::Fit::FitData::Opt() const; ROOT::Fit::DataOptions&ROOT::Fit::FitData::Opt(); unsigned intPointSize() const; const ROOT::Fit::DataRange&ROOT::Fit::FitData::Range() const; doubleRefVolume() const; voidResize(unsigned int npoints); voidSetRefVolume(double value); unsigned intSize() const; doubleValue(unsigned int ipoint) const. protected:. voidSetNPoints(unsigned int n). Data Members; public:. enum ErrorType { kNoError; kValueError; kCoordError; kAsymError; };. private:. vector<double>fBinEdgevector containing the bin upper edge (coordinate will contain low edge) ; ROOT::Fit::DataVector*fDataVectorpointer to the copied in data vector; ROOT::Fit::DataWrapper*fDataWrapperpointer to the external data wrapper structure; unsigned intfDimcoordinate dimension; unsigned intfNPointsnumber of contained points in the data set (can be different than size of vector); unsigned intfPointSizetotal point size including value and errors (= fDim + 2 for error in only Y ) ; doublefRefVolumereference bin volume - used to normalize the bins in case of variable bins data. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; unsigned int GetPointSize(ROOT::Fit::BinData::ErrorType err, unsigned int dim). ErrorType GetErrorType() const. explicit BinData(unsigned int maxpoints = 0, unsigned int dim = 1, ROOT::Fit::BinData::ErrorType err = kValueError). constructor from dimension of point and max number of points (to pre-allocate vector); Give a zero value and then use Initialize later one if the size is not known. explicit BinData(const ROOT::Fit::DataOptions& opt, unsigned int maxpoints = 0, unsigned int dim = 1, ROOT::Fit::BinData::ErrorType err = kValueError). constructor from option and default range. BinData(const ROOT::Fit:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/ROOT__Fit__BinData.html:5477,error,errors,5477,root/html528/ROOT__Fit__BinData.html,https://root.cern,https://root.cern/root/html528/ROOT__Fit__BinData.html,8,['error'],"['error', 'errors']"
Availability," ROOT::Fit::DataRange range(xmin,xmax);; ROOT::Fit::BinData data(opt,range);; // fill the bin data using the histogram; // we can do this using the following helper function from the Hist library; TH1 * h1 = (TH1*) gDirectory->Get(""myHistogram"");; ROOT::Fit::FillData(data, h1);; The list of possible fit options available is the following:; ROOT::Fit::DataOptions opt;; opt.fIntegral = true; // use integral of bin content instead of bin center (default is false).; opt.fBinVolume = true; // normalize data by the bin volume (default is false).; // This is for fitting density functions in histograms with variable bin sizes.; opt.fUseRange =true; // use the function range when creating the fit data (default is false).; opt.fExpErrors = true; // use the expected errors estimated from the function values; // assuming Poisson statistics and not the observed errors (default is false).; opt.fUseEmpty = true; // use empty bins when fitting (default is false). If fExpErrors; // is not set an arbitrary error = 1 is assigned to those bins.; opt.fErrors1 = true; // Set all measured errors to 1 (default is false).; opt.fCoordErrors = false; // When available coordinate errors are not used in the fit; // (default is true: the errors are used when they are available,; // e.g. fitting a TGraphErrors).; opt.fAsymErrors = false; // When available asymmetric errors are considered in the fit; // (default is true, the asymmetric errors are used when they are available,; // e.g. fitting a TGraphAsymmErrors).; The ROOT::Fit::DataRange class supports defining multiple rectangular ranges in each dimension, and supports n-dimension. The function DataRange::AddRange(icoord,xmin,xmax) adds a range in the coordinate icoord with lower value xmin and upper value xmax:; ROOT::Fit::DataRange range;; range.AddRange(icoordinate, xmin, xmax);; 5.7.1.2 Using Un-Binned data; The unbinned data sets are represented with the ROOT::Fit::UnBinData class. For creating un-binned data sets, a ROOT::Fit::UnBinData ob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:194086,error,error,194086,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,2,['error'],['error']
Availability, ROOT::Fit::FitConfig::fNormErrorsbool fNormErrorsflag for error normalizationDefinition FitConfig.h:259; ROOT::Fit::FitConfig::ParamsValuesstd::vector< double > ParamsValues() constreturn a vector of stored parameter values (i.e initial fit parameters)Definition FitConfig.cxx:262; ROOT::Fit::FitConfig::MinimizerAlgoTypeconst std::string & MinimizerAlgoType() constreturn type of minimizer algorithmsDefinition FitConfig.h:192; ROOT::Fit::FitConfig::ParamsSettingsstd::vector< ROOT::Fit::ParameterSettings > & ParamsSettings()get the vector of parameter settings (non-const method)Definition FitConfig.h:91; ROOT::Fit::FitConfig::SetNormErrorsvoid SetNormErrors(bool on=true)set the option to normalize the error on the result according to chi2/ndfDefinition FitConfig.h:223; ROOT::Fit::FitConfig::SetParamsSettingsvoid SetParamsSettings(const std::vector< ROOT::Fit::ParameterSettings > &pars)Definition FitConfig.h:145; ROOT::Fit::FitConfig::NormalizeErrorsbool NormalizeErrors() constflag to check if resulting errors are be normalized according to chi2/ndfDefinition FitConfig.h:202; ROOT::Fit::FitConfig::SetMinosErrorsvoid SetMinosErrors(const std::vector< unsigned int > &paramInd)set parameter indices for running Minos this can be used for running Minos on a subset of parameters ...Definition FitConfig.h:237; ROOT::Fit::FitConfig::ParabErrorsbool ParabErrors() constdo analysis for parabolic errorsDefinition FitConfig.h:205; ROOT::Fit::FitConfig::SetMinimizerOptionsvoid SetMinimizerOptions(const ROOT::Math::MinimizerOptions &minopt)set all the minimizer options using class MinimizerOptionsDefinition FitConfig.cxx:257; ROOT::Fit::FitConfig::SetWeightCorrectionvoid SetWeightCorrection(bool on=true)apply the weight correction for error matrix computationDefinition FitConfig.h:232; ROOT::Fit::FitConfig::NParunsigned int NPar() constnumber of parameters settingsDefinition FitConfig.h:96; ROOT::Fit::FitConfig::SetUpdateAfterFitvoid SetUpdateAfterFit(bool on=true)Update configuratio,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/FitConfig_8h_source.html:11692,error,errors,11692,doc/master/FitConfig_8h_source.html,https://root.cern,https://root.cern/doc/master/FitConfig_8h_source.html,1,['error'],['errors']
Availability," ROOT::Math::GSLRngGFSR4 Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngGFSR4 Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Lagged Fibonacci generator by Ziff see here ; Definition at line 441 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngGFSR4 ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rndm () const;  Gener",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngGFSR4.html:1129,avail,available,1129,doc/master/classROOT_1_1Math_1_1GSLRngGFSR4.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngGFSR4.html,2,"['avail', 'error']","['available', 'error']"
Availability," ROOT::Math::GSLRngMT Class Reference. ; ROOT  ; . master. Reference Guide ; .  . Loading...; Searching...; No Matches. List of all members |; Public Types |; Public Member Functions |; List of all members ; ROOT::Math::GSLRngMT Class ReferenceMath » MathCore » Interface classes for Random number generation. ; Mersenne-Twister generator gsl_rng_mt19937 from here ; Definition at line 341 of file GSLRndmEngines.h. Public Types; typedef GSLRandomEngine BaseType;  . Public Member Functions;  GSLRngMT ();  ;  Public Member Functions inherited from ROOT::Math::GSLRandomEngine;  GSLRandomEngine ();  default constructor. ;  ;  GSLRandomEngine (const GSLRandomEngine &eng);  Copy constructor : clone the contained GSL generator. ;  ;  GSLRandomEngine (GSLRngWrapper *rng);  create from an existing rng. ;  ; virtual ~GSLRandomEngine ();  call Terminate() ;  ; void Initialize ();  initialize the generator If no rng is present the default one based on Mersenne and Twister is created ;  ; unsigned long IntRndm () const;  Generate an integer number between [0,max_generator-1] (including 0 and max-1) if max is larger than available range of algorithm an error message is printed and zero is returned. ;  ; unsigned long MaxInt () const;  return the maximum integer +1 a generator can handle ;  ; unsigned long MinInt () const;  return the minimum integer a generator can handle typically this value is 0 ;  ; std::string Name () const;  return name of generator ;  ; double operator() () const;  Generate a random number between ]0,1] 0 is excluded and 1 is included. ;  ; GSLRandomEngine & operator= (const GSLRandomEngine &eng);  Assignment operator : make a deep copy of the contained GSL generator. ;  ; void RandomArray (double *begin, double *end) const;  Generate an array of random numbers The iterators points to the random numbers. ;  ; template<class Iterator > ; void RandomArray (Iterator begin, Iterator end) const;  Generate an array of random numbers. ;  ; double Rndm () const;  Gener",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMT.html:1129,avail,available,1129,doc/master/classROOT_1_1Math_1_1GSLRngMT.html,https://root.cern,https://root.cern/doc/master/classROOT_1_1Math_1_1GSLRngMT.html,2,"['avail', 'error']","['available', 'error']"
Availability," ROOT::Math::IntegratorMultiDim; Here is a code example on how to use the ROOT::Math::IntegratorOneDim class (note that the class is defined in the header file Math/Integrator.h). In this example we create different instance of the class using some of the available algorithms in ROOT.; #include ""Math/IntegratorMultiDim.h""; #include ""Math/Functor.h"". double f2(const double * x) {; return x[0] + x[1];; }. int testIntegrationMultiDim() {. const double RESULT = 1.0;; const double ERRORLIMIT = 1E-3;; int status = 0;. ROOT::Math::Functor wf(&f2,2);; double a[2] = {0,0};; double b[2] = {1,1};. ROOT::Math::IntegratorMultiDim ig(ROOT::Math::IntegrationMultiDim::kADAPTIVE);; ig.SetFunction(wf);; double val = ig.Integral(a,b);; std::cout << ""integral result is "" << val << std::endl;; status += std::fabs(val-RESULT) > ERRORLIMIT;. ROOT::Math::IntegratorMultiDim ig2(ROOT::Math::IntegrationMultiDim::kVEGAS);; ig2.SetFunction(wf);; val = ig2.Integral(a,b);; std::cout << ""integral result is "" << val << std::endl;; status += std::fabs(val-RESULT) > ERRORLIMIT;. ROOT::Math::IntegratorMultiDim ig3(wf,ROOT::Math::IntegrationMultiDim::kPLAIN);; val = ig3.Integral(a,b);; std::cout << ""integral result is "" << val << std::endl;; status += std::fabs(val-RESULT) > ERRORLIMIT;. ROOT::Math::IntegratorMultiDim ig4(wf,ROOT::Math::IntegrationMultiDim::kMISER);; val = ig4.Integral(a,b);; std::cout << ""integral result is "" << val << std::endl;; status += std::fabs(val-RESULT) > ERRORLIMIT;. return status;; }; 13.8.3.2 Multi-dimensions Integration Algorithms; Here is the types, that can be specified as enumeration and the corresponding classes. Enumeration name; Integrator class. ROOT::Math::IntegratorMultiDim::kADAPTIVE; ROOT::Math::AdaptiveIntegratorMultiDim. ROOT::Math::IntegratorMultiDim::kVEGAS; ROOT::Math:::GSLMCIntegrator. ROOT::Math::IntegratorMultiDim::kMISER; ROOT::Math:::GSLMCIntegrator. ROOT::Math::IntegratorMultiDim::kPLAIN; ROOT::Math:::GSLMCIntegrator. The control parameters for the in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:710554,ERROR,ERRORLIMIT,710554,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['ERROR'],['ERRORLIMIT']
Availability," ROOT::Math::MinimTransformFunction*ROOT::Math::BasicMinimizer::TransformFunction() const; virtual intROOT::Math::BasicMinimizer::VariableIndex(const string& name) const; virtual stringROOT::Math::BasicMinimizer::VariableName(unsigned int ivar) const; virtual const double*ROOT::Math::BasicMinimizer::X() const. protected:. boolROOT::Math::BasicMinimizer::CheckDimension() const; boolROOT::Math::BasicMinimizer::CheckObjFunction() const; ROOT::Math::MinimTransformFunction*ROOT::Math::BasicMinimizer::CreateTransformation(vector<double>& startValues, const ROOT::Math::IMultiGradFunction* func = 0); voidROOT::Math::BasicMinimizer::SetFinalValues(const double* x); voidROOT::Math::BasicMinimizer::SetMinValue(double val). private:. ROOT::Math::GSLSimAnMinimizerGSLSimAnMinimizer(const ROOT::Math::GSLSimAnMinimizer&); ROOT::Math::GSLSimAnMinimizer&operator=(const ROOT::Math::GSLSimAnMinimizer& rhs). Data Members; protected:. ROOT::Math::MinimizerOptionsROOT::Math::Minimizer::fOptionsminimizer options; intROOT::Math::Minimizer::fStatusstatus of minimizer; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. ROOT::Math::GSLSimAnnealingfSolver. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLSimAnMinimizer(int type = 0). Default constructor. virtual ~GSLSimAnMinimizer(). Destructor (no operations). GSLSimAnMinimizer(const ROOT::Math::GSLSimAnMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. bool Minimize(); method to perform the minimization. unsigned int NCalls() const; number of calls. » Author: L. Moneta Wed Dec 20 17:16:32 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-06-30 14:22; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__GSLSimAnMinimizer.html:6880,error,errors,6880,root/html602/ROOT__Math__GSLSimAnMinimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__GSLSimAnMinimizer.html,2,['error'],['errors']
Availability," ROOT::Math::MinimTransformFunction*ROOT::Math::BasicMinimizer::TransformFunction() const; virtual intROOT::Math::BasicMinimizer::VariableIndex(const string& name) const; virtual stringROOT::Math::BasicMinimizer::VariableName(unsigned int ivar) const; virtual const double*ROOT::Math::BasicMinimizer::X() const. protected:. boolROOT::Math::BasicMinimizer::CheckDimension() const; boolROOT::Math::BasicMinimizer::CheckObjFunction() const; ROOT::Math::MinimTransformFunction*ROOT::Math::BasicMinimizer::CreateTransformation(vector<double>& startValues, const ROOT::Math::IMultiGradFunction* func = 0); voidROOT::Math::BasicMinimizer::SetFinalValues(const double* x); voidROOT::Math::BasicMinimizer::SetMinValue(double val). private:. ROOT::Math::GSLSimAnMinimizerGSLSimAnMinimizer(const ROOT::Math::GSLSimAnMinimizer&); ROOT::Math::GSLSimAnMinimizer&operator=(const ROOT::Math::GSLSimAnMinimizer& rhs). Data Members; protected:. ROOT::Math::MinimizerOptionsROOT::Math::Minimizer::fOptionsminimizer options; intROOT::Math::Minimizer::fStatusstatus of minimizer; boolROOT::Math::Minimizer::fValidErrorflag to control if errors have been validated (Hesse has been run in case of Minuit). private:. ROOT::Math::GSLSimAnnealingfSolver. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; GSLSimAnMinimizer(int type = 0). Default constructor. virtual ~GSLSimAnMinimizer(). Destructor (no operations). GSLSimAnMinimizer(const ROOT::Math::GSLSimAnMinimizer& ); usually copying is non trivial, so we make this unaccessible. Copy constructor. {}. bool Minimize(); method to perform the minimization. unsigned int NCalls() const; number of calls. » Author: L. Moneta Wed Dec 20 17:16:32 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathmore:$Id$ » Last generated: 2015-09-08 17:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__GSLSimAnMinimizer.html:6880,error,errors,6880,root/html604/ROOT__Math__GSLSimAnMinimizer.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__GSLSimAnMinimizer.html,2,['error'],['errors']
Availability," ROOT::Math::VirtualIntegratorMultiDim*CreateIntegrator(ROOT::Math::IntegrationMultiDim::Type type, double absTol, double relTol, unsigned int ncall). private:. ROOT::Math::IntegratorMultiDimIntegratorMultiDim(const ROOT::Math::IntegratorMultiDim&); ROOT::Math::IntegratorMultiDim&operator=(const ROOT::Math::IntegratorMultiDim&). Data Members; private:. auto_ptr<ROOT::Math::IBaseFunctionMultiDim>fFuncpointer to owned function; ROOT::Math::VirtualIntegratorMultiDim*fIntegratorpointer to multi-dimensional integrator base class. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; IntegratorMultiDim(ROOT::Math::IntegrationMultiDim::Type type = IntegrationMultiDim::kDEFAULT, double absTol = 0, double relTol = 0, unsigned int ncall = 0); Generic constructor of multi dimensional Integrator. By default uses the Adaptive integration method. @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param size maximum number of sub-intervals. In case no parameter values are passed the default ones used in IntegratorMultiDimOptions are used. IntegratorMultiDim(const ROOT::Math::IMultiGenFunction& f, ROOT::Math::IntegrationMultiDim::Type type = IntegrationMultiDim::kDEFAULT, double absTol = 0, double relTol = 0, unsigned int ncall = 0); Generic Constructor of multi dimensional Integrator passing a function. By default uses the adaptive integration method. @param f integration function (multi-dim interface); @param type integration type (adaptive, MC methods, etc..); @param absTol desired absolute Error; @param relTol desired relative Error; @param ncall number of function calls (apply only to MC integratioon methods). SetFunction(const ROOT::Math::IMultiGenFunction& f). virtual ~IntegratorMultiDim(); remove template constructor since is ambigous; Template Constructor of multi dimensional Integrator passing a generic function. By default uses the adaptive integratio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/ROOT__Math__IntegratorMultiDim.html:2805,Error,Error,2805,root/html532/ROOT__Math__IntegratorMultiDim.html,https://root.cern,https://root.cern/root/html532/ROOT__Math__IntegratorMultiDim.html,4,['Error'],['Error']
Availability," ROOT::Math::tdistribution_cdf_cdouble tdistribution_cdf_c(double x, double r, double x0=0)Complement of the cumulative distribution function of Student's t-distribution (upper tail).Definition ProbFuncMathCore.cxx:242; ROOT::Math::gamma_cdfdouble gamma_cdf(double x, double alpha, double theta, double x0=0)Cumulative distribution function of the gamma distribution (lower tail).Definition ProbFuncMathCore.cxx:204; ROOT::Math::exponential_cdfdouble exponential_cdf(double x, double lambda, double x0=0)Cumulative distribution function of the exponential distribution (lower tail).Definition ProbFuncMathCore.cxx:161; ROOT::Math::inc_gamma_cdouble inc_gamma_c(double a, double x)Calculates the normalized (regularized) upper incomplete gamma function (upper integral)Definition SpecFuncMathCore.cxx:103; ROOT::Math::inc_betadouble inc_beta(double x, double a, double b)Calculates the normalized (regularized) incomplete beta function.Definition SpecFuncMathCore.cxx:115; ROOT::Math::erfcdouble erfc(double x)Complementary error function.Definition SpecFuncMathCore.cxx:44; ROOT::Math::inc_gammadouble inc_gamma(double a, double x)Calculates the normalized (regularized) lower incomplete gamma function (lower integral)Definition SpecFuncMathCore.cxx:99; ROOT::Math::erfdouble erf(double x)Error function encountered in integrating the normal distribution.Definition SpecFuncMathCore.cxx:59; ROOT::Math::landau_xm1double landau_xm1(double x, double xi=1, double x0=0)First moment (mean) of the truncated Landau distribution.Definition ProbFuncMathCore.cxx:409; ROOT::Math::landau_xm2double landau_xm2(double x, double xi=1, double x0=0)Second moment of the truncated Landau distribution.Definition ProbFuncMathCore.cxx:489; sigmaconst Double_t sigmaDefinition h1analysisProxy.h:11; xDouble_t x[n]Definition legend1.C:17; nconst Int_t nDefinition legend1.C:16; MathNamespace for new Math classes and functions.; ROOT::Math::expm1double expm1(double x)exp(x) -1 with error cancellation when x is smallDe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/ProbFuncMathCore_8cxx_source.html:27164,error,error,27164,doc/master/ProbFuncMathCore_8cxx_source.html,https://root.cern,https://root.cern/doc/master/ProbFuncMathCore_8cxx_source.html,1,['error'],['error']
Availability," ROOT::Minuit2::SimplexMinimizer. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file. viewVC header . Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MINUIT2; » ROOT::Minuit2::SimplexMinimizer. class ROOT::Minuit2::SimplexMinimizer: public ROOT::Minuit2::ModularFunctionMinimizer. Class implementing the required methods for a minimization using Simplex.; API is provided in the upper ROOT::Minuit2::ModularFunctionMinimizer class. Function Members (Methods); public:. virtual~SimplexMinimizer(); virtual const ROOT::Minuit2::MinimumBuilder&Builder() const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameters&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const ROOT::Minuit2::MnUserParameterState&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradientBase&, const ROOT::Minuit2::MnUserParameterState&, const ROOT::Minuit2::MnStrategy&, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNBase&, const vector<double>&, const vector<double>&, unsigned int stra = 1, unsigned int maxfcn = 0, double toler = 0.1) const; virtual ROOT::Minuit2::FunctionMinimumROOT::Minuit2::ModularFunctionMinimizer::Minimize(const ROOT::Minuit2::FCNGradie",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Minuit2__SimplexMinimizer.html:1118,toler,toler,1118,root/html526/ROOT__Minuit2__SimplexMinimizer.html,https://root.cern,https://root.cern/root/html526/ROOT__Minuit2__SimplexMinimizer.html,2,['toler'],['toler']
Availability," ROOT::RCompressionSetting::EDefaults::kUseCompiledDefault . ). Create a dCache file object. ; A dCache file is the same as a TFile except that it is being accessed via a dCache server. The url argument must be of the form: dcache:/pnfs/<path>/<file>.root or dcap://<nodename.org>/<path>/<file>.root. If the file specified in the URL does not exist, is not accessable or can not be created the kZombie bit will be set in the TDCacheFile object. Use IsZombie() to see if the file is accessable. For a description of the option and other arguments see the TFile ctor. The preferred interface to this constructor is via TFile::Open(). ; Definition at line 71 of file TDCacheFile.cxx. ◆ ~TDCacheFile(). TDCacheFile::~TDCacheFile ; (; ). override . Close and cleanup dCache file. ; Definition at line 202 of file TDCacheFile.cxx. Member Function Documentation. ◆ CheckFile(). Bool_t TDCacheFile::CheckFile ; (; const char * ; path, . const char * ; location = 0 . ). static . CheckFile() returns kTRUE on success and kFALSE on failure. ; In case the file exists but is not cached, CheckFile() returns kFALSE and errno is set to EAGAIN. ; Definition at line 361 of file TDCacheFile.cxx. ◆ Class(). static TClass * TDCacheFile::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TDCacheFile::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TDCacheFile::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 75 of file TDCacheFile.h. ◆ DeclFileName(). static const char * TDCacheFile::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 75 of file TDCacheFile.h. ◆ GetDcapPath(). TString TDCacheFile::GetDcapPath ; (; const char * ; path). static . Transform the input path into a path usuable by the dcap C library, i.e either dcap://nodename.org/where/filename.root or /pnfs/where/filename.root. ; Defi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDCacheFile.html:44102,failure,failure,44102,doc/master/classTDCacheFile.html,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html,1,['failure'],['failure']
Availability," ROOT; » CORE; » BASE; » TAttLine. class TAttLine. Line Attributes class; This class is used (in general by secondary inheritance); by many other classes (graphics, histograms). It holds all the line attributes.; Line attributes; Line attributes are:. Line Color.; Line Width.; Line Style. Line Color; The line color is a color index (integer) pointing in the ROOT; color table.; The line color of any class inheriting from TAttLine can; be changed using the method SetLineColor and retrieved using the; method GetLineColor.; The following table shows the first 50 default colors. Picture; Source. {; TCanvas *c = new TCanvas(""c"",""Line colors"",0,0,500,200);; c.DrawColorTable();; return c;; }. Color transparency; SetLineColorAlpha(), allows to set a transparent color.; In the following example the line color of the histogram histo; is set to blue with a transparency of 35%. The color kBlue; itself remains fully opaque. . histo->SetLineColorAlpha(kBlue, 0.35);. ; The transparency is available on all platforms when the flagOpenGL.CanvasPreferGL is set to 1; in $ROOTSYS/etc/system.rootrc, or on Mac with the Cocoa backend. On the file output; it is visible with PDF, PNG, Gif, JPEG, SVG ... but not PostScript.; Line Width; The line width is expressed in pixel units.; The line width of any class inheriting from TAttLine can; be changed using the method SetLineWidth and retrieved using the; method GetLineWidth.; The following picture shows the line widths from 1 to 10 pixels. Picture; Source. {; TCanvas *Lw = new TCanvas(""Lw"",""test"",500,200);; TText t;; t.SetTextAlign(32);; t.SetTextSize(0.08);; Int_t i=1;; for (float s=0.1; s<1.0 ; s+=0.092) {; TLine *lh = new TLine(0.15,s,.85,s);; lh->SetLineWidth(i);; t.DrawText(0.1,s,Form(""%d"",i++));; lh->Draw();; }; return Lw;; }. Line Style; Line styles are identified via integer numbers. The line style of any class; inheriting from TAttLine can be changed using the method; SetLineStyle and retrieved using the method GetLineStyle. The first 1",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TAttLine.html:1206,avail,available,1206,root/html534/TAttLine.html,https://root.cern,https://root.cern/root/html534/TAttLine.html,2,['avail'],['available']
Availability," ROOT; » ROOFIT; » ROOFITCORE; » RooAbsCachedPdf. class RooAbsCachedPdf: public RooAbsPdf. RooAbsCachedPdf is the abstract base class for p.d.f.s that need or; want to cache their evaluate() output in a RooHistPdf defined in; terms of the used observables. This base class manages the creation; and storage of all RooHistPdf cache p.d.fs and the RooDataHists; that define their shape. Implementations of RooAbsCachedPdf must; define member function fillCacheObject() which serves to fill an; already created RooDataHist with the p.d.fs function values. In; addition the member functions actualObservables() and; actualParameters() must be define which report what the actual; observables to be cached are for a given set of observables passed; by the user to getVal() and on which parameters need to be tracked; for changes to trigger a refilling of the cache histogram.; . Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~RooAbsCachedPdf(); voidTObject::AbstractMethod(const char* method) const; Bool_tRooAbsArg::addOwnedComponents(const RooArgSet& comps); voidRooAbsArg::addParameters(RooArgSet& params, const RooArgSet* nset = 0, Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::addServer(RooAbsArg& server, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); voidRooAbsArg::addServerList(RooAbsCollection& serverList, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); const char*RooAbsArg::aggregateCacheUniqueSuffix() const; virtual Double_tRooAbsReal::analyticalIntegral(Int_t code, const char* rangeName = 0) const; virtual Double_tanalyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; virtual voidTObject::AppendPad(Option_t* option = """"); TF1*RooAbsReal::asTF(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooAbsCachedPdf.html:1233,avail,available,1233,root/html528/RooAbsCachedPdf.html,https://root.cern,https://root.cern/root/html528/RooAbsCachedPdf.html,9,['avail'],['available']
Availability," ROOT; » ROOFIT; » ROOFITCORE; » RooAbsCachedPdf. class RooAbsCachedPdf: public RooAbsPdf. RooAbsCachedPdf is the abstract base class for p.d.f.s that need or; want to cache their evaluate() output in a RooHistPdf defined in; terms of the used observables. This base class manages the creation; and storage of all RooHistPdf cache p.d.fs and the RooDataHists; that define their shape. Implementations of RooAbsCachedPdf must; define member function fillCacheObject() which serves to fill an; already created RooDataHist with the p.d.fs function values. In; addition the member functions actualObservables() and; actualParameters() must be define which report what the actual; observables to be cached are for a given set of observables passed; by the user to getVal() and on which parameters need to be tracked; for changes to trigger a refilling of the cache histogram.; . Function Members (Methods);      This is an abstract class, constructors will not be documented.;     Look at the header to check for available constructors.; public:. virtual~RooAbsCachedPdf(); voidTObject::AbstractMethod(const char* method) const; Bool_tRooAbsArg::addOwnedComponents(const RooArgSet& comps); voidRooAbsArg::addParameters(RooArgSet& params, const RooArgSet* nset = 0, Bool_t stripDisconnected = kTRUE) const; voidRooAbsArg::addServer(RooAbsArg& server, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); voidRooAbsArg::addServerList(RooAbsCollection& serverList, Bool_t valueProp = kTRUE, Bool_t shapeProp = kFALSE); virtual Double_tRooAbsReal::analyticalIntegral(Int_t code, const char* rangeName = 0) const; virtual Double_tanalyticalIntegralWN(Int_t code, const RooArgSet* normSet, const char* rangeName = 0) const; virtual voidTObject::AppendPad(Option_t* option = """"); TF1*RooAbsReal::asTF(const RooArgList& obs, const RooArgList& pars = RooArgList(), const RooArgSet& nset = RooArgSet()) const; voidRooAbsArg::attachDataSet(const RooAbsData& set); voidRooAbsArg::attachDataStore(const RooAbsDataStore",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsCachedPdf.html:1233,avail,available,1233,root/html526/RooAbsCachedPdf.html,https://root.cern,https://root.cern/root/html526/RooAbsCachedPdf.html,1,['avail'],['available']
Availability," R__EXTERNDefinition DllImport.h:26; h#define h(i)Definition RSha256.hxx:106; sizesize_t size(const MatrixT &matrix)retrieve the size of a square matrix; Bool_tbool Bool_tDefinition RtypesCore.h:63; Int_tint Int_tDefinition RtypesCore.h:45; Long_tlong Long_tDefinition RtypesCore.h:54; UInt_tunsigned int UInt_tDefinition RtypesCore.h:46; Float_tfloat Float_tDefinition RtypesCore.h:57; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; Long64_tlong long Long64_tDefinition RtypesCore.h:69; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; Option_tconst char Option_tDefinition RtypesCore.h:66; ClassDef#define ClassDef(name, id)Definition Rtypes.h:342; BIT#define BIT(n)Definition Rtypes.h:90; ClassDefOverride#define ClassDefOverride(name, id)Definition Rtypes.h:346; optionOption_t Option_t optionDefinition TGWin32VirtualXProxy.cxx:44; maskOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t maskDefinition TGWin32VirtualXProxy.cxx:178; filenameOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t Int_t Int_t Window_t TString Int_t GCValues_t GetPrimarySelectionOwner GetDisplay GetScreen GetColormap GetNativeEvent const char const char dpyName wid window const char font_name cursor keysym reg const char only_if_exist regb h Point_t winding char text const char depth char const char Int_t count const char ColorStruct_t color const char filenameDefinition TGWin32VirtualXProxy.cxx:232; lengthOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Poin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TSystem_8h_source.html:26855,mask,maskDefinition,26855,doc/master/TSystem_8h_source.html,https://root.cern,https://root.cern/doc/master/TSystem_8h_source.html,1,['mask'],['maskDefinition']
Availability," Reallocate bin contents array; 1317 ; 1318void TProfile3D::SetBinsLength(Int_t n); 1319{; 1320 TH3D::SetBinsLength(n);; 1321 TProfileHelper::BuildArray(this);; 1322}; 1323 ; 1324////////////////////////////////////////////////////////////////////////////////; 1325/// Set the buffer size in units of 8 bytes (double).; 1326 ; 1327void TProfile3D::SetBuffer(Int_t buffersize, Option_t *); 1328{; 1329 if (fBuffer) {; 1330 BufferEmpty();; 1331 delete [] fBuffer;; 1332 fBuffer = nullptr;; 1333 }; 1334 if (buffersize <= 0) {; 1335 fBufferSize = 0;; 1336 return;; 1337 }; 1338 if (buffersize < 100) buffersize = 100;; 1339 fBufferSize = 1 + 5*buffersize;; 1340 fBuffer = new Double_t[fBufferSize];; 1341 memset(fBuffer,0,sizeof(Double_t)*fBufferSize);; 1342}; 1343 ; 1344////////////////////////////////////////////////////////////////////////////////; 1345/// Set option to compute profile3D errors.; 1346///; 1347/// The computation of the bin errors is based on the parameter option:; 1348/// - ' ' (Default) The bin errors are the standard error on the mean of the bin profiled values (T),; 1349/// i.e. the standard error of the bin contents.; 1350/// Note that if TProfile3D::Approximate() is called, an approximation is used when; 1351/// the spread in T is 0 and the number of bin entries is > 0; 1352/// - 's' The bin errors are the standard deviations of the T bin values; 1353/// Note that if TProfile3D::Approximate() is called, an approximation is used when; 1354/// the spread in T is 0 and the number of bin entries is > 0; 1355/// - 'i' Errors are as in default case (standard errors of the bin contents); 1356/// The only difference is for the case when the spread in T is zero.; 1357/// In this case for N > 0 the error is 1./SQRT(12.*N); 1358/// - 'g' Errors are 1./SQRT(W) for W not equal to 0 and 0 for W = 0.; 1359/// W is the sum in the bin of the weights of the profile.; 1360/// This option is for combining measurements t +/- dt,; 1361/// and the profile is filled with values ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8cxx_source.html:50733,error,errors,50733,doc/master/TProfile3D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8cxx_source.html,3,['error'],"['error', 'errors']"
Availability," Reallocate bin contents array; 1946 ; 1947void TProfile2D::SetBinsLength(Int_t n); 1948{; 1949 TH2D::SetBinsLength(n);; 1950 TProfileHelper::BuildArray(this);; 1951}; 1952 ; 1953////////////////////////////////////////////////////////////////////////////////; 1954/// Set the buffer size in units of 8 bytes (double).; 1955 ; 1956void TProfile2D::SetBuffer(Int_t buffersize, Option_t *); 1957{; 1958 if (fBuffer) {; 1959 BufferEmpty();; 1960 delete [] fBuffer;; 1961 fBuffer = nullptr;; 1962 }; 1963 if (buffersize <= 0) {; 1964 fBufferSize = 0;; 1965 return;; 1966 }; 1967 if (buffersize < 100) buffersize = 100;; 1968 fBufferSize = 1 + 4*buffersize;; 1969 fBuffer = new Double_t[fBufferSize];; 1970 memset(fBuffer,0,sizeof(Double_t)*fBufferSize);; 1971}; 1972 ; 1973////////////////////////////////////////////////////////////////////////////////; 1974/// Set option to compute profile2D errors.; 1975///; 1976/// The computation of the bin errors is based on the parameter option:; 1977/// - ' ' (Default) The bin errors are the standard error on the mean of the bin profiled values (Z),; 1978/// i.e. the standard error of the bin contents.; 1979/// Note that if TProfile::Approximate() is called, an approximation is used when; 1980/// the spread in Z is 0 and the number of bin entries is > 0; 1981/// - 's' The bin errors are the standard deviations of the Z bin values; 1982/// Note that if TProfile::Approximate() is called, an approximation is used when; 1983/// the spread in Z is 0 and the number of bin entries is > 0; 1984/// - 'i' Errors are as in default case (standard errors of the bin contents); 1985/// The only difference is for the case when the spread in Z is zero.; 1986/// In this case for N > 0 the error is 1./SQRT(12.*N); 1987/// - 'g' Errors are 1./SQRT(W) for W not equal to 0 and 0 for W = 0.; 1988/// W is the sum in the bin of the weights of the profile.; 1989/// This option is for combining measurements z +/- dz,; 1990/// and the profile is filled with values y an",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile2D_8cxx_source.html:71824,error,errors,71824,doc/master/TProfile2D_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TProfile2D_8cxx_source.html,3,['error'],"['error', 'errors']"
Availability," Reimplemented from TGraph.; Definition at line 646 of file TGraphBentErrors.cxx. ◆ UpdateArrays(). void TGraphBentErrors::UpdateArrays ; (; const std::vector< Int_t > & ; sorting_indices, . Int_t ; numSortedPoints, . Int_t ; low . ). overrideprotectedvirtual . Update the fX, fY, fEXlow, fEXhigh, fEXlowd, fEXhighd, fEYlow, fEYhigh, fEYlowd, ; and fEYhighd arrays with the sorted values. ; Reimplemented from TGraph.; Definition at line 665 of file TGraphBentErrors.cxx. Member Data Documentation. ◆ fEXhigh. Double_t* TGraphBentErrors::fEXhigh. protected . [fNpoints] array of X high errors ; Definition at line 29 of file TGraphBentErrors.h. ◆ fEXhighd. Double_t* TGraphBentErrors::fEXhighd. protected . [fNpoints] array of X high displacements ; Definition at line 34 of file TGraphBentErrors.h. ◆ fEXlow. Double_t* TGraphBentErrors::fEXlow. protected . [fNpoints] array of X low errors ; Definition at line 28 of file TGraphBentErrors.h. ◆ fEXlowd. Double_t* TGraphBentErrors::fEXlowd. protected . [fNpoints] array of X low displacements ; Definition at line 33 of file TGraphBentErrors.h. ◆ fEYhigh. Double_t* TGraphBentErrors::fEYhigh. protected . [fNpoints] array of Y high errors ; Definition at line 31 of file TGraphBentErrors.h. ◆ fEYhighd. Double_t* TGraphBentErrors::fEYhighd. protected . [fNpoints] array of Y high displacements ; Definition at line 36 of file TGraphBentErrors.h. ◆ fEYlow. Double_t* TGraphBentErrors::fEYlow. protected . [fNpoints] array of Y low errors ; Definition at line 30 of file TGraphBentErrors.h. ◆ fEYlowd. Double_t* TGraphBentErrors::fEYlowd. protected . [fNpoints] array of Y low displacements ; Definition at line 35 of file TGraphBentErrors.h. Libraries for TGraphBentErrors:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/TGraphBentErrors.h; hist/hist/src/TGraphBentErrors.cxx. TGraphBentErrors. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphBentErrors.html:45842,error,errors,45842,doc/master/classTGraphBentErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphBentErrors.html,2,['error'],['errors']
Availability," Reimplemented from TMVA::MethodBase. ◆ StreamerNVirtual(). void TMVA::MethodDT::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 139 of file MethodDT.h. ◆ TestTreeQuality(). Double_t TMVA::MethodDT::TestTreeQuality ; (; DecisionTree * ; dt). Definition at line 506 of file MethodDT.cxx. ◆ Train(). void TMVA::MethodDT::Train ; (; void ; ). virtual . Implements TMVA::MethodBase.; Definition at line 375 of file MethodDT.cxx. Member Data Documentation. ◆ fAutomatic. Bool_t TMVA::MethodDT::fAutomatic. private . use user given prune strength or automatically determined one using a validation sample ; Definition at line 126 of file MethodDT.h. ◆ fDeltaPruneStrength. Double_t TMVA::MethodDT::fDeltaPruneStrength. private . step size in pruning, is adjusted according to experience of previous trees ; Definition at line 132 of file MethodDT.h. ◆ fErrorFraction. Double_t TMVA::MethodDT::fErrorFraction. private . ntuple var: misclassification error fraction ; Definition at line 122 of file MethodDT.h. ◆ fEventSample. std::vector<Event*> TMVA::MethodDT::fEventSample. private . the training events ; Definition at line 106 of file MethodDT.h. ◆ fgDebugLevel. const Int_t TMVA::MethodDT::fgDebugLevel = 0. staticprivate . debug level determining some printout/control plots etc. ; Definition at line 134 of file MethodDT.h. ◆ fMaxDepth. UInt_t TMVA::MethodDT::fMaxDepth. private . max depth ; Definition at line 119 of file MethodDT.h. ◆ fMinNodeEvents. Int_t TMVA::MethodDT::fMinNodeEvents. private . min number of events in node ; Definition at line 112 of file MethodDT.h. ◆ fMinNodeSize. Float_t TMVA::MethodDT::fMinNodeSize. private . min percentage of training events in node ; Definition at line 113 of file MethodDT.h. ◆ fMinNodeSizeS. TString TMVA::MethodDT::fMinNodeSizeS. private . string containing min percentage of training events in node ; Definition at line 114 of file MethodDT.h. ◆ fNCuts. Int_t TMVA::MethodDT::fNCuts. private . grid use",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTMVA_1_1MethodDT.html:40080,error,error,40080,doc/master/classTMVA_1_1MethodDT.html,https://root.cern,https://root.cern/doc/master/classTMVA_1_1MethodDT.html,1,['error'],['error']
Availability," Reimplemented from TObject.; Definition at line 131 of file TSpline.cxx. ◆ SaveAs(). void TSpline::SaveAs ; (; const char * ; filename = """", . Option_t * ; option = """" . ); const. inlineoverridevirtual . Save this object in the file specified by filename. . if ""filename"" contains "".root"" the object is saved in filename as root binary file.; if ""filename"" contains "".xml"" the object is saved in filename as a xml ascii file.; if ""filename"" contains "".cc"" the object is saved in filename as C code independant from ROOT. The code is generated via SavePrimitive(). Specific code should be implemented in each object to handle this option. Like in TF1::SavePrimitive().; otherwise the object is written to filename as a CINT/C++ script. The C++ code to rebuild this object is generated via SavePrimitive(). The ""option"" parameter is passed to SavePrimitive. By default it is an empty string. It can be used to specify the Draw option in the code generated by SavePrimitive.; The function is available via the object context menu. . Reimplemented from TObject.; Reimplemented in TSpline3, and TSpline5.; Definition at line 66 of file TSpline.h. ◆ SetNpx(). void TSpline::SetNpx ; (; Int_t ; n). inline . Definition at line 67 of file TSpline.h. ◆ Streamer(). void TSpline::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TSpline. ; Reimplemented from TNamed.; Reimplemented in TMVA::TSpline1, TMVA::TSpline2, TSpline3, and TSpline5.; Definition at line 231 of file TSpline.cxx. ◆ StreamerNVirtual(). void TSpline::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 69 of file TSpline.h. Member Data Documentation. ◆ fDelta. Double_t TSpline::fDelta = -1. protected . Distance between equidistant knots. ; Definition at line 33 of file TSpline.h. ◆ fGraph. TGraph* TSpline::fGraph = nullptr. protected . Graph for drawing the knots. ; Definition at line 39 of file TSpline.h. ◆ fHistogram. TH1F* TSpline::fHistogram = nullptr. protec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTSpline.html:22804,avail,available,22804,doc/master/classTSpline.html,https://root.cern,https://root.cern/doc/master/classTSpline.html,1,['avail'],['available']
Availability," Remove a TGWindow from the list of windows. void RegisterPopup(TGWindow* w); Add a popup menu to the list of popups. This list is used to pass; events to popup menus that are popped up over a transient window which; is waited for (see WaitFor()). void UnregisterPopup(TGWindow* w); Remove a popup menu from the list of popups. void AddUnknownWindowHandler(TGUnknownWindowHandler* h); Add handler for unknown (i.e. unregistered) windows. void RemoveUnknownWindowHandler(TGUnknownWindowHandler* h); Remove handler for unknown (i.e. unregistered) windows. void AddIdleHandler(TGIdleHandler* h); Add handler for idle events. void RemoveIdleHandler(TGIdleHandler* h); Remove handler for idle events. TGWindow * GetWindowById(Window_t sw) const; Find a TGWindow via its handle. If window is not found return 0. TGWindow * GetWindowByName(const char* name) const; Find a TGWindow via its name (unique name used in TGWindow::SavePrimitive).; If window is not found return 0. ~TGClient(); Closing down client: cleanup and close X connection. Bool_t ProcessOneEvent(); Process one event. This method should only be called when there is; a GUI event ready to be processed. If event has been processed; kTRUE is returned. If processing of a specific event type for a specific; window was requested kFALSE is returned when specific event has been; processed, kTRUE otherwise. If no more pending events return kFALSE. Bool_t ProcessIdleEvent(); Process one idle event. Bool_t HandleInput(); Handles input from the display server. Returns kTRUE if one or more; events have been processed, kFALSE otherwise. void WaitFor(TGWindow* w); Wait for window to be destroyed. void WaitForUnmap(TGWindow* w); Wait for window to be unmapped. void ResetWaitFor(TGWindow* w); reset waiting. Bool_t ProcessEventsFor(TGWindow* w); Like gSystem->ProcessEvents() but then only allow events for w to; be processed. For example to interrupt the processing and destroy; the window, call gROOT->SetInterrupt() before destroying the win",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGClient.html:16651,down,down,16651,root/html528/TGClient.html,https://root.cern,https://root.cern/root/html528/TGClient.html,10,['down'],['down']
Availability," Removes a feature from the TIOFeatures object; emits an Error message if the IO feature is not supported by this version of ROOT. ; Definition at line 69 of file TIOFeatures.cxx. ◆ GetFeatures(). UChar_t TIOFeatures::GetFeatures ; (; ); const. private . Definition at line 250 of file TIOFeatures.cxx. ◆ Print(). void TIOFeatures::Print ; (; ); const. Print a human-readable representation of the TIOFeatures to stdout. ; Prints a string with the names of all enabled IO features. ; Definition at line 197 of file TIOFeatures.cxx. ◆ Set() [1/4]. bool TIOFeatures::Set ; (; const std::string & ; value). Given a IO feature string, set the corresponding feature. ; Parameters. [in]valueFeature name to test. This allows one to set a feature given a specific string from the TBasket::EIOBits enum.; NOTE this function is quite slow and users are strongly encouraged to use the type-safe Set version instead. This has been added for better CLI interfaces.; Returns true only if a new feature was set; otherwise emits an error message and returns false. ; Definition at line 172 of file TIOFeatures.cxx. ◆ Set() [2/4]. bool TIOFeatures::Set ; (; EIOFeatures ; input_bits). Set a specific IO feature. ; Parameters. [in]input_bitsThe specific feature to enable. Sets a feature in the TIOFeatures object; emits an Error message if the IO feature is not supported by this version of ROOT.; If the feature is supported by ROOT, this function returns true; otherwise, it returns false. ; Definition at line 139 of file TIOFeatures.cxx. ◆ Set() [3/4]. bool TIOFeatures::Set ; (; Experimental::EIOFeatures ; input_bits). Set a specific IO feature. ; Parameters. [in]input_bitsThe specific feature to enable. Sets a feature in the TIOFeatures object; emits an Error message if the IO feature is not supported by this version of ROOT.; If the feature is supported by ROOT, this function returns true; otherwise, it returns false. ; Definition at line 125 of file TIOFeatures.cxx. ◆ Set() [4/4]. void ROOT::TIOFeatur",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classROOT_1_1TIOFeatures.html:5117,error,error,5117,doc/v632/classROOT_1_1TIOFeatures.html,https://root.cern,https://root.cern/doc/v632/classROOT_1_1TIOFeatures.html,2,['error'],['error']
Availability," Return range of a 1-D function. void GetRange(Double_t& xmin, Double_t& ymin, Double_t& xmax, Double_t& ymax) const; Return range of a 2-D function. void GetRange(Double_t& xmin, Double_t& ymin, Double_t& zmin, Double_t& xmax, Double_t& ymax, Double_t& zmax) const; Return range of function. Double_t GetSave(const Double_t* x); Get value corresponding to X in array of fSave values. TAxis * GetXaxis() const; Get x axis of the function. TAxis * GetYaxis() const; Get y axis of the function. TAxis * GetZaxis() const; Get z axis of the function. (In case this object is a TF2 or TF3). Double_t GradientPar(Int_t ipar, const Double_t* x, Double_t eps = 0.01); Compute the gradient (derivative) wrt a parameter ipar; Parameters:; ipar - index of parameter for which the derivative is computed; x - point, where the derivative is computed; eps - if the errors of parameters have been computed, the step used in; numerical differentiation is eps*parameter_error.; if the errors have not been computed, step=eps is used; default value of eps = 0.01; Method is the same as in Derivative() function. If a paramter is fixed, the gradient on this parameter = 0. void GradientPar(const Double_t* x, Double_t* grad, Double_t eps = 0.01); Compute the gradient wrt parameters; Parameters:; x - point, were the gradient is computed; grad - used to return the computed gradient, assumed to be of at least fNpar size; eps - if the errors of parameters have been computed, the step used in; numerical differentiation is eps*parameter_error.; if the errors have not been computed, step=eps is used; default value of eps = 0.01; Method is the same as in Derivative() function. If a paramter is fixed, the gradient on this parameter = 0. void InitArgs(const Double_t* x, const Double_t* params); Initialize parameters addresses. void InitStandardFunctions(); Create the basic function objects. Double_t Integral(Double_t a, Double_t b, Double_t epsrel = 9.9999999999999998E-13); use IntegralOneDim or analytical integral",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TF1.html:44621,error,errors,44621,root/html604/TF1.html,https://root.cern,https://root.cern/root/html604/TF1.html,2,['error'],['errors']
Availability," Return range of a 1-D function. void GetRange(Double_t& xmin, Double_t& ymin, Double_t& xmax, Double_t& ymax) const; Return range of a 2-D function. void GetRange(Double_t& xmin, Double_t& ymin, Double_t& zmin, Double_t& xmax, Double_t& ymax, Double_t& zmax) const; Return range of function. Double_t GetSave(const Double_t* x); Get value corresponding to X in array of fSave values. TAxis * GetXaxis() const; Get x axis of the function. TAxis * GetYaxis() const; Get y axis of the function. TAxis * GetZaxis() const; Get z axis of the function. (In case this object is a TF2 or TF3). Double_t GradientPar(Int_t ipar, const Double_t* x, Double_t eps = 0.01); Compute the gradient (derivative) wrt a parameter ipar; Parameters:; ipar - index of parameter for which the derivative is computed; x - point, where the derivative is computed; eps - if the errors of parameters have been computed, the step used in; numerical differentiation is eps*parameter_error.; if the errors have not been computed, step=eps is used; default value of eps = 0.01; Method is the same as in Derivative() function. If a paramter is fixed, the gradient on this parameter = 0. void GradientPar(const Double_t* x, Double_t* grad, Double_t eps = 0.01); Compute the gradient wrt parameters; Parameters:; x - point, were the gradient is computed; grad - used to return the computed gradient, assumed to be of at least fNpar size; eps - if the errors of parameters have been computed, the step used in; numerical differentiation is eps*parameter_error.; if the errors have not been computed, step=eps is used; default value of eps = 0.01; Method is the same as in Derivative() function. If a paramter is fixed, the gradient on this parameter = 0. void InitArgs(const Double_t* x, const Double_t* params); Initialize parameters addresses. void InitStandardFunctions(); Create the basic function objects. Double_t Integral(Double_t a, Double_t b, Double_t epsrel = 9.9999999999999998E-13); use IntegralOneDim. Double_t IntegralOneD",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TF1.html:51860,error,errors,51860,root/html602/TF1.html,https://root.cern,https://root.cern/root/html602/TF1.html,2,['error'],['errors']
Availability," Return range of a 1-D function. void GetRange(Double_t& xmin, Double_t& ymin, Double_t& xmax, Double_t& ymax) const; Return range of a 2-D function. void GetRange(Double_t& xmin, Double_t& ymin, Double_t& zmin, Double_t& xmax, Double_t& ymax, Double_t& zmax) const; Return range of function. Double_t GetSave(const Double_t* x); Get value corresponding to X in array of fSave values. TAxis * GetXaxis() const; Get x axis of the function. TAxis * GetYaxis() const; Get y axis of the function. TAxis * GetZaxis() const; Get z axis of the function. (In case this object is a TF2 or TF3). Double_t GradientPar(Int_t ipar, const Double_t* x, Double_t eps = 0.01); Compute the gradient (derivative) wrt a parameter ipar; Parameters:; ipar - index of parameter for which the derivative is computed; x - point, where the derivative is computed; eps - if the errors of parameters have been computed, the step used in; numerical differentiation is eps*parameter_error.; if the errors have not been computed, step=eps is used; default value of eps = 0.01; Method is the same as in Derivative() function. If a paramter is fixed, the gradient on this parameter = 0. void GradientPar(const Double_t* x, Double_t* grad, Double_t eps = 0.01); Compute the gradient wrt parameters; Parameters:; x - point, were the gradient is computed; grad - used to return the computed gradient, assumed to be of at least fNpar size; eps - if the errors of parameters have been computed, the step used in; numerical differentiation is eps*parameter_error.; if the errors have not been computed, step=eps is used; default value of eps = 0.01; Method is the same as in Derivative() function. If a paramter is fixed, the gradient on this parameter = 0. void InitArgs(const Double_t* x, const Double_t* params); Initialize parameters addresses. void InitStandardFunctions(); Create the basic function objects. Double_t Integral(Double_t a, Double_t b, const Double_t* params = 0, Double_t epsilon = 1e-12); Return Integral of function b",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TF1.html:48285,error,errors,48285,root/html528/TF1.html,https://root.cern,https://root.cern/root/html528/TF1.html,6,['error'],['errors']
Availability," Returns 0 in case of success and -1 in case of error. ; Definition at line 8258 of file TProof.cxx. ◆ Exec() [1/3]. Int_t TProof::Exec ; (; const char * ; cmd, . Bool_t ; plusMaster = kFALSE . ). Send command to be executed on the PROOF master and/or slaves. ; If plusMaster is kTRUE then exeucte on slaves and master too. Command can be any legal command line command. Commands like "".x file.C"" or "".L file.C"" will cause the file file.C to be send to the PROOF cluster. Returns -1 in case of error, >=0 in case of succes. ; Definition at line 6521 of file TProof.cxx. ◆ Exec() [2/3]. Int_t TProof::Exec ; (; const char * ; cmd, . const char * ; ord, . Bool_t ; logtomacro = kFALSE . ). Send command to be executed on node of ordinal 'ord' (use ""0"" for master). ; Command can be any legal command line command. Commands like "".x file.C"" or "".L file.C"" will cause the file file.C to be send to the PROOF cluster. If logtomacro is TRUE the text result of the action is saved in the fMacroLog TMacro, accessible via TMacro::GetMacroLog(); Returns -1 in case of error, >=0 in case of succes. ; Definition at line 6589 of file TProof.cxx. ◆ Exec() [3/3]. Int_t TProof::Exec ; (; const char * ; cmd, . ESlaves ; list, . Bool_t ; plusMaster . ). private . Send command to be executed on the PROOF master and/or slaves. ; Command can be any legal command line command. Commands like "".x file.C"" or "".L file.C"" will cause the file file.C to be send to the PROOF cluster. Returns -1 in case of error, >=0 in case of succes. ; Definition at line 6533 of file TProof.cxx. ◆ ExistsDataSet(). Bool_t TProof::ExistsDataSet ; (; const char * ; dataset). virtual . Returns kTRUE if 'dataset' exists, kFALSE otherwise. ; Reimplemented in TProofLite.; Definition at line 10868 of file TProof.cxx. ◆ Feedback(). void TProof::Feedback ; (; TList * ; objs). Get list of feedback objects. ; Connect a slot to this signal to monitor the feedback object. ; Definition at line 9268 of file TProof.cxx. ◆ FinalizationDone(). v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:88964,error,error,88964,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['error'],['error']
Availability," Returns kTRUE in case file needs to be send, returns kFALSE in case; file is already on remote node. Int_t SendFile(const char* file, Int_t opt = kAscii, const char* rfile = 0); Send a file to the server. Return 0 on success, -1 in case of error.; If defined, the full path of the remote path will be rfile.; The mask 'opt' is an or of ESendFileOpt:. kAscii (0x0) if set true ascii file transfer is used; kBinary (0x1) if set true binary file transfer is used; kForce (0x2) if not set an attempt is done to find out; whether the file really needs to be downloaded; (a valid copy may already exist in the cache; from a previous run). void Terminate(Int_t status = 0); Terminate this session. void SetPortParam(Int_t lower = -1, Int_t upper = -1, Int_t attempts = -1); Set port parameters for tunnelling. A value of -1 means unchanged. Long_t ProcessLine(const char* line, Bool_t = kFALSE, Int_t* error = 0); Parse a single command line and forward the request to the remote server; where it will be processed. The line is either a C++ statement or an; interpreter command starting with a ""."".; Return the return value of the command casted to a long. void Print(Option_t* option = """") const; Print some info about this instance. void Interrupt(Int_t type = kRRI_Hard); Send interrupt OOB byte to server.; Returns 0 if ok, -1 in case of error. void Browse(TBrowser* b); Browse remote application (working directory and ROOT files). Int_t Broadcast(const TMessage& mess). Bool_t IsFolder() const; { return kTRUE; }. const char * ApplicationName() const; { return fName; }. Bool_t IsValid() const; { return (fSocket) ? kTRUE : kFALSE; }. » Author: G. Ganis 10/5/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id: TApplicationRemote.h 23091 2008-04-09 15:04:27Z rdm $ » Last generated: 2009-12-07 13:50; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TApplicationRemote.html:16793,error,error,16793,root/html526/TApplicationRemote.html,https://root.cern,https://root.cern/root/html526/TApplicationRemote.html,1,['error'],['error']
Availability," Returns kTRUE in case file needs to be send, returns kFALSE in case; file is already on remote node. Int_t SendFile(const char* file, Int_t opt = kAscii, const char* rfile = 0); Send a file to the server. Return 0 on success, -1 in case of error.; If defined, the full path of the remote path will be rfile.; The mask 'opt' is an or of ESendFileOpt:. kAscii (0x0) if set true ascii file transfer is used; kBinary (0x1) if set true binary file transfer is used; kForce (0x2) if not set an attempt is done to find out; whether the file really needs to be downloaded; (a valid copy may already exist in the cache; from a previous run). void Terminate(Int_t status = 0); Terminate this session. void SetPortParam(Int_t lower = -1, Int_t upper = -1, Int_t attempts = -1); Set port parameters for tunnelling. A value of -1 means unchanged. Long_t ProcessLine(const char* line, Bool_t = kFALSE, Int_t* error = 0); Parse a single command line and forward the request to the remote server; where it will be processed. The line is either a C++ statement or an; interpreter command starting with a ""."".; Return the return value of the command casted to a long. void Print(Option_t* option = """") const; Print some info about this instance. void Interrupt(Int_t type = kRRI_Hard); Send interrupt OOB byte to server.; Returns 0 if ok, -1 in case of error. void Browse(TBrowser* b); Browse remote application (working directory and ROOT files). Int_t Broadcast(const TMessage& mess). Bool_t IsFolder() const; { return kTRUE; }. const char * ApplicationName() const; { return fName; }. Bool_t IsValid() const; { return (fSocket) ? kTRUE : kFALSE; }. » Author: G. Ganis 10/5/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id: TApplicationRemote.h 23091 2008-04-09 15:04:27Z rdm $ » Last generated: 2010-10-06 16:19; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TApplicationRemote.html:16952,error,error,16952,root/html528/TApplicationRemote.html,https://root.cern,https://root.cern/root/html528/TApplicationRemote.html,1,['error'],['error']
Availability," Returns kTRUE in case file needs to be send, returns kFALSE in case; file is already on remote node. Int_t SendFile(const char* file, Int_t opt = kAscii, const char* rfile = 0); Send a file to the server. Return 0 on success, -1 in case of error.; If defined, the full path of the remote path will be rfile.; The mask 'opt' is an or of ESendFileOpt:. kAscii (0x0) if set true ascii file transfer is used; kBinary (0x1) if set true binary file transfer is used; kForce (0x2) if not set an attempt is done to find out; whether the file really needs to be downloaded; (a valid copy may already exist in the cache; from a previous run). void Terminate(Int_t status = 0); Terminate this session. void SetPortParam(Int_t lower = -1, Int_t upper = -1, Int_t attempts = -1); Set port parameters for tunnelling. A value of -1 means unchanged. Long_t ProcessLine(const char* line, Bool_t = kFALSE, Int_t* error = 0); Parse a single command line and forward the request to the remote server; where it will be processed. The line is either a C++ statement or an; interpreter command starting with a ""."".; Return the return value of the command casted to a long. void Print(Option_t* option = """") const; Print some info about this instance. void Interrupt(Int_t type = kRRI_Hard); Send interrupt OOB byte to server.; Returns 0 if ok, -1 in case of error. void Browse(TBrowser* b); Browse remote application (working directory and ROOT files). Int_t Broadcast(const TMessage& mess). Bool_t IsFolder() const; { return kTRUE; }. const char * ApplicationName() const; { return fName; }. Bool_t IsValid() const; { return (fSocket) ? kTRUE : kFALSE; }. » Author: G. Ganis 10/5/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id: TApplicationRemote.h 23091 2008-04-09 15:04:27Z rdm $ » Last generated: 2011-07-04 15:24; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TApplicationRemote.html:17103,error,error,17103,root/html530/TApplicationRemote.html,https://root.cern,https://root.cern/root/html530/TApplicationRemote.html,1,['error'],['error']
Availability," Returns kTRUE in case file needs to be send, returns kFALSE in case; file is already on remote node. Int_t SendFile(const char* file, Int_t opt = kAscii, const char* rfile = 0); Send a file to the server. Return 0 on success, -1 in case of error.; If defined, the full path of the remote path will be rfile.; The mask 'opt' is an or of ESendFileOpt:. kAscii (0x0) if set true ascii file transfer is used; kBinary (0x1) if set true binary file transfer is used; kForce (0x2) if not set an attempt is done to find out; whether the file really needs to be downloaded; (a valid copy may already exist in the cache; from a previous run). void Terminate(Int_t status = 0); Terminate this session. void SetPortParam(Int_t lower = -1, Int_t upper = -1, Int_t attempts = -1); Set port parameters for tunnelling. A value of -1 means unchanged. Long_t ProcessLine(const char* line, Bool_t = kFALSE, Int_t* error = 0); Parse a single command line and forward the request to the remote server; where it will be processed. The line is either a C++ statement or an; interpreter command starting with a ""."".; Return the return value of the command casted to a long. void Print(Option_t* option = """") const; Print some info about this instance. void Interrupt(Int_t type = kRRI_Hard); Send interrupt OOB byte to server.; Returns 0 if ok, -1 in case of error. void Browse(TBrowser* b); Browse remote application (working directory and ROOT files). Int_t Broadcast(const TMessage& mess). Bool_t IsFolder() const; { return kTRUE; }. const char * ApplicationName() const; { return fName; }. Bool_t IsValid() const; { return (fSocket) ? kTRUE : kFALSE; }. » Author: G. Ganis 10/5/2007 » Copyright (C) 1995-2007, Rene Brun and Fons Rademakers. *; » Last changed: root/net:$Id: TApplicationRemote.h 23091 2008-04-09 15:04:27Z rdm $ » Last generated: 2011-12-02 14:27; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TApplicationRemote.html:17103,error,error,17103,root/html532/TApplicationRemote.html,https://root.cern,https://root.cern/root/html532/TApplicationRemote.html,2,['error'],['error']
Availability," RichardsonDerivator & operator=(const ROOT::Math::RichardsonDerivator& rhs). Assignment operator. double Error() const; Returns the estimate of the absolute Error of the last derivative calculation. . { return fLastError; }. double Derivative1(double x). Returns the first derivative of the function at point x,; computed by Richardson's extrapolation method (use 2 derivative estimates; to compute a third, more accurate estimation); first, derivatives with steps h and h/2 are computed by central difference formulas. the final estimate ; ""Numerical Methods for Scientists and Engineers"", H.M.Antia, 2nd edition"". the argument eps may be specified to control the step size (precision).; the step size is taken as eps*(xmax-xmin).; the default value (0.001) should be good enough for the vast majority; of functions. Give a smaller value if your function has many changes; of the second derivative in the function range. Getting the error via TF1::DerivativeError:; (total error = roundoff error + interpolation error); the estimate of the roundoff error is taken as follows:. where k is the double precision, ai are coefficients used in; central difference formulas; interpolation error is decreased by making the step size h smaller. double operator()(double x); { return Derivative1(x); }. double Derivative1(const ROOT::Math::IGenFunction& f, double x, double h). First Derivative calculation passing function and step-size. double Derivative2(double x). Returns the second derivative of the function at point x,; computed by Richardson's extrapolation method (use 2 derivative estimates; to compute a third, more accurate estimation); first, derivatives with steps h and h/2 are computed by central difference formulas. the final estimate ; ""Numerical Methods for Scientists and Engineers"", H.M.Antia, 2nd edition"". the argument eps may be specified to control the step size (precision).; the step size is taken as eps*(xmax-xmin).; the default value (0.001) should be good enough for the vast",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/ROOT__Math__RichardsonDerivator.html:4198,error,error,4198,root/html526/ROOT__Math__RichardsonDerivator.html,https://root.cern,https://root.cern/root/html526/ROOT__Math__RichardsonDerivator.html,55,['error'],['error']
Availability," RooAbsMCStudyModule(const RooAbsMCStudyModule& other); RooAbsMCStudyModule(const char* name, const char* title); virtual~RooAbsMCStudyModule(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tdoInitializeInstance(RooMCStudy&); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0);",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooAbsMCStudyModule.html:1861,Error,Error,1861,root/html534/RooAbsMCStudyModule.html,https://root.cern,https://root.cern/root/html534/RooAbsMCStudyModule.html,1,['Error'],['Error']
Availability, RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=-35.3713 m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus denominator=argus_Int[m] ] has 2000 errors; ; RooAbsMinimizerFcn: Minimized function has error status but is ignored.; Parameter values: k=nan m0=nan; RooAbsPdf::argus_over_argus_Int[m][ numerator=argus d,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html:9312,error,errors,9312,doc/master/rf606__nllerrorhandling_8C.html,https://root.cern,https://root.cern/doc/master/rf606__nllerrorhandling_8C.html,4,['error'],"['error', 'errors']"
Availability," RooAbsNumGenerator*clone(const RooAbsReal&, const RooArgSet& genVars, const RooArgSet& condVars, const RooNumGenConfig& config, Bool_t verbose = kFALSE, const RooAbsReal* maxFuncVal = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Int_tRooPrintable::defaultPrintContents(Option_t* opt) const; static ostream&RooPrintable::defaultPrintStream(ostream* os = 0); virtual RooPrintable::StyleOptionRooPrintable::defaultPrintStyle(Option_t* opt) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const RooArgSet*generateEvent(UInt_t remaining, Double_t& resampleRatio); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tgetFuncMax(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tT",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsNumGenerator.html:2140,error,error,2140,root/html526/RooAbsNumGenerator.html,https://root.cern,https://root.cern/root/html526/RooAbsNumGenerator.html,10,['error'],['error']
Availability," RooBinnedGenContext.cxx. ◆ Class(). static TClass * RooBinnedGenContext::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * RooBinnedGenContext::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t RooBinnedGenContext::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 55 of file RooBinnedGenContext.h. ◆ DeclFileName(). static const char * RooBinnedGenContext::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 55 of file RooBinnedGenContext.h. ◆ generate(). RooDataSet * RooBinnedGenContext::generate ; (; double ; nEvents = 0.0, . bool ; skipInit = false, . bool ; extendedMode = false . ). overridevirtual . Generate the specified number of events with nEvents>0 and and return a dataset containing the generated events. ; With nEvents<=0, generate the number of events in the prototype dataset, if available, or else the expected number of events, if non-zero. If extendedMode = true generate according to a Poisson(nEvents) The returned dataset belongs to the caller. Return zero in case of an error. Generation of individual events is delegated to a virtual generateEvent() method. A virtual initGenerator() method is also called just before the first call to generateEvent(). ; Reimplemented from RooAbsGenContext.; Definition at line 113 of file RooBinnedGenContext.cxx. ◆ generateEvent(). void RooBinnedGenContext::generateEvent ; (; RooArgSet & ; theEvent, . Int_t ; remaining . ). overrideprotectedvirtual . this method is not implemented for this context ; Implements RooAbsGenContext.; Definition at line 218 of file RooBinnedGenContext.cxx. ◆ initGenerator(). void RooBinnedGenContext::initGenerator ; (; const RooArgSet & ; theEvent). overrideprotectedvirtual . One-time initialization of generator context. ; Attach theEvent to internal p.d.f clone and forward initialization ca",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooBinnedGenContext.html:18848,avail,available,18848,doc/master/classRooBinnedGenContext.html,https://root.cern,https://root.cern/doc/master/classRooBinnedGenContext.html,1,['avail'],['available']
Availability," RooCFunction1Ref<double,double>(double (*)(double) ptr = 0); RooCFunction1Ref<double,double>(const RooCFunction1Ref<double,double>&); virtual~RooCFunction1Ref<double,double>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction1Ref_double_double_.html:1992,Error,Error,1992,root/html534/RooCFunction1Ref_double_double_.html,https://root.cern,https://root.cern/root/html534/RooCFunction1Ref_double_double_.html,1,['Error'],['Error']
Availability," RooCFunction1Ref<double,int>(double (*)(int) ptr = 0); RooCFunction1Ref<double,int>(const RooCFunction1Ref<double,int>&); virtual~RooCFunction1Ref<double,int>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); const char*argName(Int_t iarg); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooCFunction1Ref_double_int_.html:1965,Error,Error,1965,root/html534/RooCFunction1Ref_double_int_.html,https://root.cern,https://root.cern/root/html534/RooCFunction1Ref_double_int_.html,1,['Error'],['Error']
Availability," RooChi2MCSModule(); RooChi2MCSModule(const RooChi2MCSModule& other); virtual~RooChi2MCSModule(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tRooAbsMCStudyModule::doInitializeInstance(RooMCStudy&); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooChi2MCSModule.html:1617,Error,Error,1617,root/html534/RooChi2MCSModule.html,https://root.cern,https://root.cern/root/html534/RooChi2MCSModule.html,1,['Error'],['Error']
Availability," RooChi2Var(const RooChi2Var& other, const char* name = 0); RooChi2Var(const char* name, const char* title, RooAbsPdf& pdf, RooDataHist& data, Bool_t extended = kFALSE, const char* rangeName = 0, const char* addCoefRangeName = 0, Int_t nCPU = 1, RooFit::MPSplit interleave = RooFit::BulkPartition, Bool_t verbose = kTRUE, Bool_t splitCutRange = kTRUE, RooAbsData::ErrorType = RooDataHist::SumW2); RooChi2Var(const char* name, const char* title, RooAbsReal& func, RooDataHist& data, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none(), const RooCmdArg& arg9 = RooCmdArg::none()); RooChi2Var(const char* name, const char* title, RooAbsPdf& pdf, RooDataHist& data, const RooCmdArg& arg1, const RooCmdArg& arg2 = RooCmdArg::none(), const RooCmdArg& arg3 = RooCmdArg::none(), const RooCmdArg& arg4 = RooCmdArg::none(), const RooCmdArg& arg5 = RooCmdArg::none(), const RooCmdArg& arg6 = RooCmdArg::none(), const RooCmdArg& arg7 = RooCmdArg::none(), const RooCmdArg& arg8 = RooCmdArg::none(), const RooCmdArg& arg9 = RooCmdArg::none()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooChi2Var.html:1067,Error,ErrorType,1067,root/html534/RooChi2Var.html,https://root.cern,https://root.cern/root/html534/RooChi2Var.html,1,['Error'],['ErrorType']
Availability," RooDouble(); RooDouble(Double_t value); RooDouble(const RooDouble& other); virtual~RooDouble(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tCompare(const TObject* other) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooDouble.html:1288,Error,Error,1288,root/html532/RooDouble.html,https://root.cern,https://root.cern/root/html532/RooDouble.html,2,['Error'],['Error']
Availability," RooExpensiveObjectCache(); RooExpensiveObjectCache(const RooExpensiveObjectCache&); virtual~RooExpensiveObjectCache(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; static voidcleanup(); virtual voidTObject::Clear(Option_t* = """"); voidclearAll(); Bool_tclearObj(Int_t uniqueID); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* met",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooExpensiveObjectCache.html:1666,Error,Error,1666,root/html532/RooExpensiveObjectCache.html,https://root.cern,https://root.cern/root/html532/RooExpensiveObjectCache.html,2,['Error'],['Error']
Availability," RooFit informational messages are suppressed as well . Warnings(bool flag) Enable or disable MINUIT warnings (enabled by default) . PrintEvalErrors(Int_t numErr) Control number of p.d.f evaluation errors printed per likelihood evaluation. A negative value suppress output completely, a zero value will only print the error count per p.d.f component, a positive value is will print details of each error up to numErr messages per p.d.f component. . Definition at line 4105 of file RooAbsReal.cxx. ◆ chi2FitTo() [2/4]. RooFit::OwningPtr< RooFitResult > RooAbsReal::chi2FitTo ; (; RooDataHist & ; data, . const RooLinkedList & ; cmdList . ). virtual . Calls RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList) and returns fit result. ; List of possible commands in the cmdList:. Type of CmdArg Effect on \( \chi^2 \) . DataError() Choose between:; RooAbsData::Expected: Expected Poisson error ( \( \sqrt{n_\text{expected}} \) from the PDF).; RooAbsData::SumW2: The observed error from the square root of the sum of weights, i.e., symmetric errors calculated with the standard deviation of a Poisson distribution.; RooAbsData::Poisson: Asymmetric errors from the central 68 % interval around a Poisson distribution with mean \( n_\text{observed} \). If for a given bin \( n_\text{expected} \) is lower than the \( n_\text{observed} \), the lower uncertainty is taken (e.g., the difference between the mean and the 16 % quantile). If \( n_\text{expected} \) is higher than \( n_\text{observed} \), the higher uncertainty is taken (e.g., the difference between the 84 % quantile and the mean).; RooAbsData::Auto (default): RooAbsData::Expected for unweighted data, RooAbsData::SumW2 for weighted data. . Extended() Use expected number of events of an extended p.d.f as normalization . NumCPU() Activate parallel processing feature . Range() Calculate \( \chi^2 \) only in selected region . Verbose() Verbose output of GOF framework . IntegrateBins() Integrate PDF within each bin. This ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooAbsReal.html:71499,error,error,71499,doc/master/classRooAbsReal.html,https://root.cern,https://root.cern/doc/master/classRooAbsReal.html,1,['error'],['error']
Availability," RooFit informational messages are suppressed as well . Warnings(bool flag) Enable or disable MINUIT warnings (enabled by default) . PrintEvalErrors(Int_t numErr) Control number of p.d.f evaluation errors printed per likelihood evaluation. A negative value suppress output completely, a zero value will only print the error count per p.d.f component, a positive value is will print details of each error up to numErr messages per p.d.f component. . Definition at line 4181 of file RooAbsReal.cxx. ◆ chi2FitTo() [2/4]. RooFit::OwningPtr< RooFitResult > RooAbsReal::chi2FitTo ; (; RooDataHist & ; data, . const RooLinkedList & ; cmdList . ). virtual . Calls RooAbsReal::createChi2(RooDataSet& data, const RooLinkedList& cmdList) and returns fit result. ; List of possible commands in the cmdList:. Type of CmdArg Effect on \( \chi^2 \) . DataError() Choose between:; RooAbsData::Expected: Expected Poisson error ( \( \sqrt{n_\text{expected}} \) from the PDF).; RooAbsData::SumW2: The observed error from the square root of the sum of weights, i.e., symmetric errors calculated with the standard deviation of a Poisson distribution.; RooAbsData::Poisson: Asymmetric errors from the central 68 % interval around a Poisson distribution with mean \( n_\text{observed} \). If for a given bin \( n_\text{expected} \) is lower than the \( n_\text{observed} \), the lower uncertainty is taken (e.g., the difference between the mean and the 16 % quantile). If \( n_\text{expected} \) is higher than \( n_\text{observed} \), the higher uncertainty is taken (e.g., the difference between the 84 % quantile and the mean).; RooAbsData::Auto (default): RooAbsData::Expected for unweighted data, RooAbsData::SumW2 for weighted data. . Extended() Use expected number of events of an extended p.d.f as normalization . NumCPU() Activate parallel processing feature . Range() Calculate \( \chi^2 \) only in selected region . Verbose() Verbose output of GOF framework . IntegrateBins() Integrate PDF within each bin. This ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classRooAbsReal.html:72767,error,error,72767,doc/v632/classRooAbsReal.html,https://root.cern,https://root.cern/doc/v632/classRooAbsReal.html,1,['error'],['error']
Availability," RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. Int_t activeStream(const TObject* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. ostream& log(const RooAbsArg* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with RooAbsArg object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. ostream& log(const TObject* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with TObject object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. void Print(Option_t* options = 0) const; Print configuration of message service. If ""v"" option is given also; inactive streams are listed. StreamConfig& getStream(Int_t id); { return _streams[id] ; }. Int_t numStreams() const; { return _streams.size() ; }. void reset(); { cleanup() ; }. void setGlobalKillBelow(RooFit::MsgLevel level); { _globMinLevel = level ; }. RooFit::MsgLevel globalKillBelow() const; { return _globMinLevel ; }. void showPid(Bool_t flag); { _showPid = flag ; }. Bool_t silentMode() const; Print level support for RooFit-related messages that are not routed through RooMsgService (such as Minuit printouts). { return _silentMode ; }. void setSilentMode(Bool_t flag); { _silentMode = flag ; }. Int_t errorCount() const; { return _errorCount ; }. void clearErrorCount(); { _errorCount = 0 ; }. Int_t& debugCode(); { return _debugCode ; }. RooMsgService(); Private ctor -- singleton class. » Last changed: Fri Dec 10 17:05:04 2010 » Last generated: 2010-12-10 17:05; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/RooMsgService.html:12304,error,errorCount,12304,root/html528/RooMsgService.html,https://root.cern,https://root.cern/root/html528/RooMsgService.html,1,['error'],['errorCount']
Availability," RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. Int_t activeStream(const TObject* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. ostream& log(const RooAbsArg* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with RooAbsArg object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. ostream& log(const TObject* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with TObject object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. void Print(Option_t* options = 0) const; Print configuration of message service. If ""v"" option is given also; inactive streams are listed. StreamConfig& getStream(Int_t id); { return _streams[id] ; }. Int_t numStreams() const; { return _streams.size() ; }. void reset(); { cleanup() ; }. void setGlobalKillBelow(RooFit::MsgLevel level); { _globMinLevel = level ; }. RooFit::MsgLevel globalKillBelow() const; { return _globMinLevel ; }. void showPid(Bool_t flag); { _showPid = flag ; }. Bool_t silentMode() const; Print level support for RooFit-related messages that are not routed through RooMsgService (such as Minuit printouts). { return _silentMode ; }. void setSilentMode(Bool_t flag); { _silentMode = flag ; }. Int_t errorCount() const; { return _errorCount ; }. void clearErrorCount(); { _errorCount = 0 ; }. Int_t& debugCode(); { return _debugCode ; }. RooMsgService(); Private ctor -- singleton class. » Last changed: Tue Jun 30 14:34:06 2015 » Last generated: 2015-06-30 14:34; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooMsgService.html:12849,error,errorCount,12849,root/html602/RooMsgService.html,https://root.cern,https://root.cern/root/html602/RooMsgService.html,2,['error'],['errorCount']
Availability," RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. Int_t activeStream(const TObject* self, RooFit::MsgTopic facility, RooFit::MsgLevel level); Find appropriate logging stream for message from given object with given topic and message level. ostream& log(const RooAbsArg* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with RooAbsArg object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. ostream& log(const TObject* self, RooFit::MsgLevel level, RooFit::MsgTopic facility, Bool_t forceSkipPrefix = kFALSE); Log error message associated with TObject object self at given level and topic. If skipPrefix; is true the standard RooMsgService prefix is not added. void Print(Option_t* options = 0) const; Print configuration of message service. If ""v"" option is given also; inactive streams are listed. StreamConfig& getStream(Int_t id); { return _streams[id] ; }. Int_t numStreams() const; { return _streams.size() ; }. void reset(); { cleanup() ; }. void setGlobalKillBelow(RooFit::MsgLevel level); { _globMinLevel = level ; }. RooFit::MsgLevel globalKillBelow() const; { return _globMinLevel ; }. void showPid(Bool_t flag); { _showPid = flag ; }. Bool_t silentMode() const; Print level support for RooFit-related messages that are not routed through RooMsgService (such as Minuit printouts). { return _silentMode ; }. void setSilentMode(Bool_t flag); { _silentMode = flag ; }. Int_t errorCount() const; { return _errorCount ; }. void clearErrorCount(); { _errorCount = 0 ; }. Int_t& debugCode(); { return _debugCode ; }. RooMsgService(); Private ctor -- singleton class. » Last changed: Tue Mar 10 17:17:55 2015 » Last generated: 2015-03-10 17:17; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooMsgService.html:12392,error,errorCount,12392,root/html534/RooMsgService.html,https://root.cern,https://root.cern/root/html534/RooMsgService.html,2,['error'],['errorCount']
Availability," RooInt(); RooInt(Int_t value); RooInt(const RooInt& other); virtual~RooInt(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tCompare(const TObject* other) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooInt.html:1384,error,error,1384,root/html526/RooInt.html,https://root.cern,https://root.cern/root/html526/RooInt.html,9,"['Error', 'error']","['Error', 'error']"
Availability," RooLagrangianMorphFunc::Config::fileNamestd::string fileNameDefinition RooLagrangianMorphFunc.h:88; RooLagrangianMorphFunc::Config::folderNamesstd::vector< std::string > folderNamesDefinition RooLagrangianMorphFunc.h:91; ; [#0] PROGRESS:InputArguments -- initializing physics inputs from file /home/sftnight/build/workspace/root-makedoc-master/rootspi/rdoc/src/master.build/tutorials/roofit/input_histos_rf_lagrangianmorph.root with object name(s) 'pTV'; [#0] PROGRESS:Caching -- creating cache from getCache function for 0x7ffccdd4a418; [#0] PROGRESS:Caching -- current storage has size 3; [#0] PROGRESS:ObjectHandling -- observable: pTV; [#0] PROGRESS:ObjectHandling -- binWidth: binWidth_pTV; [#1] INFO:DataHandling -- RooDataHist::adjustBinning(morph_dh_cHq3=0.01): fit range of variable pTV expanded to nearest bin boundaries: [10,600] --> [0,600]; [#1] INFO:InputArguments -- RooAbsData::plotOn(SM_NPsq0) INFO: dataset has non-integer weights, auto-selecting SumW2 errors instead of Poisson errors; [#1] INFO:InputArguments -- RooAbsData::plotOn(cHq3_NPsq1) INFO: dataset has non-integer weights, auto-selecting SumW2 errors instead of Poisson errors; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 24931.9 will supersede previous event count of 10852.3 for normalization of PDF projections; [#1] INFO:InputArguments -- RooAbsData::plotOn(cHq3_NPsq2) INFO: dataset has non-integer weights, auto-selecting SumW2 errors instead of Poisson errors; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 29789.2 will supersede previous event count of 24931.9 for normalization of PDF projections; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 18947.1 will supersede previous event count of 11104.6 for normalization of PDF projections; [#1] INFO:Plotting -- RooPlot::updateFitRangeNorm: New event count of 30765.5 will supersede previous event count of 18947.1 for normalization of PDF projections; [#0] PROGRESS:Caching -- creating cac",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf711__lagrangianmorph_8C.html:13895,error,errors,13895,doc/master/rf711__lagrangianmorph_8C.html,https://root.cern,https://root.cern/doc/master/rf711__lagrangianmorph_8C.html,4,['error'],['errors']
Availability," RooLinkedList(Int_t htsize = 0); RooLinkedList(const RooLinkedList& other); virtual~RooLinkedList(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(TObject* arg); virtual voidTObject::AppendPad(Option_t* option = """"); TObject*At(Int_t index) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* o = 0); virtual TObject*Clone(const char* = 0) const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDelete(Option_t* o = 0); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; TObject*find(const char* name) const; RooAbsArg*findArg(const RooAbsArg*) const; virtual TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooLinkedList.html:1542,Error,Error,1542,root/html532/RooLinkedList.html,https://root.cern,https://root.cern/root/html532/RooLinkedList.html,2,['Error'],['Error']
Availability," RooLinkedList(const RooLinkedList& other); virtual~RooLinkedList(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(TObject* arg); virtual voidTObject::AppendPad(Option_t* option = """"); TObject*At(Int_t index) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* o = 0); virtual TObject*Clone(const char* = 0) const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDelete(Option_t* o = 0); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; TObject*find(const char* name) const; RooAbsArg*findArg(const RooAbsArg*) const; virtual TObject*FindObject(const char* name) const; virtual TObject*FindObject(const TObject* obj) const; TObject*First() const; RooFIterfwdIterator() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Int_tgetHashTableSize() const; virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; Int_tGetSize() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooLinkedList.html:1671,error,error,1671,root/html532/RooLinkedList.html,https://root.cern,https://root.cern/root/html532/RooLinkedList.html,4,['error'],['error']
Availability," RooMapCatEntry(); RooMapCatEntry(const RooMapCatEntry& other); RooMapCatEntry(const char* exp, const RooCatType* cat); virtual~RooMapCatEntry(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*Clone(const char* newName = 0) const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooMapCatEntry.html:1268,Error,Error,1268,root/html532/RooMapCatEntry.html,https://root.cern,https://root.cern/root/html532/RooMapCatEntry.html,2,['Error'],['Error']
Availability," RooMinuit. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOFITCORE; » RooMinuit. class RooMinuit: public TObject. RooMinuit is a wrapper class around TFitter/TMinuit that; provides a seamless interface between the MINUIT functionality; and the native RooFit interface.; ; RooMinuit can minimize any RooAbsReal function with respect to; its parameters. Usual choices for minimization are RooNLLVar; and RooChi2Var; ; RooMinuit has methods corresponding to MINUIT functions like; hesse(), migrad(), minos() etc. In each of these function calls; the state of the MINUIT engine is synchronized with the state; of the RooFit variables: any change in variables, change; in the constant status etc is forwarded to MINUIT prior to; execution of the MINUIT call. Afterwards the RooFit objects; are resynchronized with the output state of MINUIT: changes; parameter values, errors are propagated.; ; Various methods are available to control verbosity, profiling,; automatic PDF optimization.; . Function Members (Methods); public:. RooMinuit(RooAbsReal& function); virtual~RooMinuit(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; static voidcleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; RooPlot*contour(RooRealVar& var1, RooRealVar& var2, Double_t n1 = 1, Double_t n2 = 2, Double_t n3 = 0, Double_t n4 = 0, Double_t n5 = 0, Double_t n6 = 0); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual vo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooMinuit.html:1046,error,errors,1046,root/html526/RooMinuit.html,https://root.cern,https://root.cern/root/html526/RooMinuit.html,7,['error'],['errors']
Availability," RooMinuit. Quick Links:; ROOT Homepage; Class Index; Class Hierarchy. Search. Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » ROOFIT; » ROOFITCORE; » RooMinuit. class RooMinuit: public TObject. RooMinuit is a wrapper class around TFitter/TMinuit that; provides a seamless interface between the MINUIT functionality; and the native RooFit interface.; ; RooMinuit can minimize any RooAbsReal function with respect to; its parameters. Usual choices for minimization are RooNLLVar; and RooChi2Var; ; RooMinuit has methods corresponding to MINUIT functions like; hesse(), migrad(), minos() etc. In each of these function calls; the state of the MINUIT engine is synchronized with the state; of the RooFit variables: any change in variables, change; in the constant status etc is forwarded to MINUIT prior to; execution of the MINUIT call. Afterwards the RooFit objects; are resynchronized with the output state of MINUIT: changes; parameter values, errors are propagated.; ; Various methods are available to control verbosity, profiling,; automatic PDF optimization.; . Function Members (Methods); public:. virtual~RooMinuit(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; static voidcleanup(); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; RooPlot*contour(RooRealVar& var1, RooRealVar& var2, Double_t n1 = 1, Double_t n2 = 2, Double_t n3 = 0, Double_t n4 = 0, Double_t n5 = 0, Double_t n6 = 0); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooMinuit.html:1046,error,errors,1046,root/html602/RooMinuit.html,https://root.cern,https://root.cern/root/html602/RooMinuit.html,4,['error'],['errors']
Availability," RooPolynomialRooPolynomial implements a polynomial p.d.f of the form.Definition RooPolynomial.h:25; RooRealVarVariable that can be changed from the outside.Definition RooRealVar.h:37; TStringBasic string class.Definition TString.h:139; TString::AppendTString & Append(const char *cs)Definition TString.h:572; xDouble_t x[n]Definition legend1.C:17; RooFitThe namespace RooFit contains mostly switches that change the behaviour of functions of PDFs (or othe...Definition JSONIO.h:26; rf505_asciicfgDefinition rf505_asciicfg.py:1; mTMarker mDefinition textangle.C:8; ; [#0] WARNING:InputArguments -- The parameter 's' with range [-10, 10] of the RooGaussian 'g' exceeds the safe range of (0, inf). Advise to limit its range.; [#1] INFO:Fitting -- RooAbsPdf::fitTo(model) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_model_modelData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; 1) 0x7ffc52bb96d8 RooRealVar:: f = 0.50733 +/- 0.020971 L(0 - 1) ""f""; 2) 0x7ffc52bb8b20 RooRealVar:: m = 0.0064018 +/- 0.053686 L(-10 - 10) ""m""; 3) 0x7ffc52bb92f0 RooRealVar:: p0 = 0.0073509 +/- 0.0078312 L(0 - 1) ""p0""; 4) 0x7ffc52bb8f08 RooRealVar:: s = 0.96516 +/- 0.047052 L(-10 - 10) ""s""; [#1] INFO:InputArguments -- RooArgSet::readFromStream(parameters): processing include file rf505_asciicfg_example.txt; 1) 0x7ffc52bb96d8 RooRealVar:: f = 0.45 +/- 0.03 L(0 - 1) ""f""; 2) 0x7ffc52bb8b20 RooRealVar:: m = 0.025 +/- 0.02 L(-10 - 10) ""m""; 3) 0x7ffc52bb92f0 RooRealVar:: p0 = 0.0022 +/- 0.0001 L(0 - 1) ""p0""; 4) 0x7ffc52bb8f08 RooRealVar:: s = 0.98 +/- 0.03 L(-10 - 10) ""s""; [#1] INFO:InputArguments -- RooArgSet::readFromStream(parameters): processing incl",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf505__asciicfg_8C.html:4104,error,error,4104,doc/master/rf505__asciicfg_8C.html,https://root.cern,https://root.cern/doc/master/rf505__asciicfg_8C.html,1,['error'],['error']
Availability," RooProofDriverSelector(TTree* = 0); virtual~RooProofDriverSelector(); virtual voidTSelector::Abort(const char* why, TSelector::EAbort what = kAbortProcess); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTSelector::Begin(TTree*); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual TSelector::EAbortTSelector:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooProofDriverSelector.html:1475,Error,Error,1475,root/html532/RooProofDriverSelector.html,https://root.cern,https://root.cern/root/html532/RooProofDriverSelector.html,2,['Error'],['Error']
Availability," RooRandomizeParamMCSModule(); RooRandomizeParamMCSModule(const RooRandomizeParamMCSModule& other); virtual~RooRandomizeParamMCSModule(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tRooAbsMCStudyModule::doInitializeInstance(RooMCStudy&); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRandomizeParamMCSModule.html:2156,Error,Error,2156,root/html532/RooRandomizeParamMCSModule.html,https://root.cern,https://root.cern/root/html532/RooRandomizeParamMCSModule.html,2,['Error'],['Error']
Availability," RooRealVar x(""x"", ""x"", -11, 11);; RooRealVar y(""y"", ""y"", -10, 200);; RooDataSet dxy(""dxy"", ""dxy"", {x, y}, StoreError({x, y}));; ; // Fill an example dataset with X,err(X),Y,err(Y) values; for (int i = 0; i <= 10; i++) {; ; // Set X value and error; x = -10 + 2 * i;; x.setError(i < 5 ? 0.5 / 1. : 1.0 / 1.);; ; // Set Y value and error; y = x.getVal() * x.getVal() + 4 * fabs(gRandom->Gaus());; y.setError(sqrt(y.getVal()));; ; dxy.add({x, y});; }; ; // P e r f o r m c h i 2 f i t t o X + / - d x a n d Y + / - d Y v a l u e s; // ---------------------------------------------------------------------------------------; ; // Make fit function; RooRealVar a(""a"", ""a"", 0.0, -10, 10);; RooRealVar b(""b"", ""b"", 0.0, -100, 100);; RooRealVar c(""c"", ""c"", 0.0, -100, 100);; RooPolyVar f(""f"", ""f"", x, RooArgList(b, a, c));; ; // Plot dataset in X-Y interpretation; RooPlot *frame = x.frame(Title(""Chi^2 fit of function set of (X#pmdX,Y#pmdY) values""));; dxy.plotOnXY(frame, YVar(y));; ; // Fit chi^2 using X and Y errors; std::unique_ptr<RooFitResult> fit1{f.chi2FitTo(dxy, YVar(y), Save(), PrintLevel(-1))};; fit1->Print();; ; // Overlay fitted function; f.plotOn(frame);; ; // Alternative: fit chi^2 integrating f(x) over ranges defined by X errors, rather; // than taking point at center of bin; std::unique_ptr<RooFitResult> fit2{f.chi2FitTo(dxy, YVar(y), Save(), PrintLevel(-1), Integrate(true))};; fit2->Print();; ; // Overlay alternate fit result; f.plotOn(frame, LineStyle(kDashed), LineColor(kRed));; ; // Draw the plot on a canvas; new TCanvas(""rf609_xychi2fit"", ""rf609_xychi2fit"", 600, 600);; gPad->SetLeftMargin(0.15);; frame->GetYaxis()->SetTitleOffset(1.4);; frame->Draw();; }; b#define b(i)Definition RSha256.hxx:100; f#define f(i)Definition RSha256.hxx:104; c#define c(i)Definition RSha256.hxx:101; a#define a(i)Definition RSha256.hxx:99; RooDataSet.h; RooPlot.h; RooPolyVar.h; RooRealVar.h; kRed@ kRedDefinition Rtypes.h:66; kDashed@ kDashedDefinition TAttLine.h:48; TAxis.h; TCanvas.h; TRand",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf609__xychi2fit_8C.html:2043,error,errors,2043,doc/master/rf609__xychi2fit_8C.html,https://root.cern,https://root.cern/doc/master/rf609__xychi2fit_8C.html,1,['error'],['errors']
Availability," RooRefCountList(); RooRefCountList(const RooRefCountList&); virtual~RooRefCountList(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(TObject* arg); virtual voidAdd(TObject* obj, Int_t count); virtual voidTObject::AppendPad(Option_t* option = """"); TObject*RooLinkedList::At(Int_t index) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidRooLinkedList::Clear(Option_t* o = 0); virtual TObject*RooLinkedList::Clone(const char* = 0) const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidRooLinkedList::Delete(Option_t* o = 0); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/RooRefCountList.html:1629,Error,Error,1629,root/html534/RooRefCountList.html,https://root.cern,https://root.cern/root/html534/RooRefCountList.html,1,['Error'],['Error']
Availability," RooRefCountList(); RooRefCountList(const RooRefCountList&); virtual~RooRefCountList(); voidTObject::AbstractMethod(const char* method) const; virtual voidAdd(TObject* arg); virtual voidAdd(TObject* obj, Int_t count); virtual voidTObject::AppendPad(Option_t* option = """"); TObject*RooLinkedList::At(Int_t index) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidRooLinkedList::Clear(Option_t* o = 0); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidRooLinkedList::Delete(Option_t* o = 0); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooRefCountList.html:1632,Error,Error,1632,root/html532/RooRefCountList.html,https://root.cern,https://root.cern/root/html532/RooRefCountList.html,1,['Error'],['Error']
Availability, RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistryRooAbsAnaConvPdf::_codeReg! Registry of analytical integration codes; RooObjCacheManagerRooAbsAnaConvPdf::_coefNormMgrCoefficient normalization manager; RooArgSet*RooAbsAnaConvPdf::_convNormSet! Subset of last normalization that applies to convolutions; RooListProxyRooAbsAnaConvPdf::_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*RooAbsAnaConvPdf::_convSetIter! Iterator over _convNormSet; RooRealVar*RooAbsAnaConvPdf::_convVar! Convolution variable; RooRealProxy_delMistag; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooRealProxy_dm; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; static Bool_tRooAbsArg::_flipACleanStatic flag controlling flipping status of all AClean nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; Double_t_genB0Frac; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsAnaConvPdf::_isCopy; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Int_tRooAbsPdf::_minDimNormValueCacheMinimum number of numerically integrated dimensions to activate normalization value caching; RooResolutionModel*RooAbsAnaConvPdf::_model! Original resolution model; RooRealProxy_mu; static Int_tRooPrintable::,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooBCPGenDecay.html:38315,error,errors,38315,root/html526/RooBCPGenDecay.html,https://root.cern,https://root.cern/root/html526/RooBCPGenDecay.html,4,['error'],['errors']
Availability, RooRefCountListRooAbsArg::_clientListValuesubset of clients that requested value dirty flag propagation; TIterator*RooAbsArg::_clientShapeIter! Iterator over _clientListShape ; TIterator*RooAbsArg::_clientValueIter! Iterator over _clientListValue ; RooAICRegistryRooAbsAnaConvPdf::_codeReg! Registry of analytical integration codes; RooObjCacheManagerRooAbsAnaConvPdf::_coefNormMgrCoefficient normalization manager; RooArgSet*RooAbsAnaConvPdf::_convNormSet! Subset of last normalization that applies to convolutions; RooListProxyRooAbsAnaConvPdf::_convSetSet of (resModel (x) basisFunc) convolution objects; TIterator*RooAbsAnaConvPdf::_convSetIter! Iterator over _convNormSet; RooRealVar*RooAbsAnaConvPdf::_convVar! Convolution variable; RooRealProxy_delMistag; Bool_tRooAbsArg::_deleteWatch! Delete watch flag ; RooRealProxy_dm; RooExpensiveObjectCache*RooAbsArg::_eocachePointer to global cache manager for any expensive components created by this object; Int_tRooAbsPdf::_errorCountNumber of errors remaining to print; static Bool_tRooAbsPdf::_evalError; static Bool_tRooAbsArg::_flipACleanStatic flag controlling flipping status of all AClean nodes to ADirty ;; Float_tRooAbsReal::_floatValue! Transient cache for floating point values from tree branches ; Bool_tRooAbsReal::_forceNumIntForce numerical integration if flag set; Double_t_genFlavFrac!; Double_t_genFlavFracMix!; Double_t_genFlavFracUnmix!; Double_t_genMixFrac! do not persist; static Bool_tRooAbsReal::_globalSelectCompGlobal activation switch for component selection; static Bool_tRooAbsArg::_inhibitDirtyStatic flag controlling global inhibit of dirty state propagation; Int_tRooAbsReal::_intValue! Transient cache for integer values from tree branches ; Bool_tRooAbsAnaConvPdf::_isCopy; TStringRooAbsReal::_labelPlot label for objects value; RooArgSet*RooAbsReal::_lastNSet!; Int_tRooAbsPdf::_minDimNormValueCacheMinimum number of numerically integrated dimensions to activate normalization value caching; RooRealProxy_mistag; ,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooBMixDecay.html:38298,error,errors,38298,root/html526/RooBMixDecay.html,https://root.cern,https://root.cern/root/html526/RooBMixDecay.html,4,['error'],['errors']
Availability," RooResolutionModel& model, RooBMixDecay::DecayType type = DoubleSided); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooBMixDecay.html:29751,Error,ErrorLoggingMode,29751,root/html602/RooBMixDecay.html,https://root.cern,https://root.cern/root/html602/RooBMixDecay.html,2,['Error'],['ErrorLoggingMode']
Availability," RooResolutionModel(const char* name, const char* title, RooRealVar& x); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); virtual Bool_tRooAbsPdf::selfNormalized() const; TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); voidRooAbsPdf::setGeneratorConfig(); voidRooAbsPdf::setGeneratorConfig(const RooNumGenConfig& config); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); voidRooAbsPdf::setNormRange(const char* rangeName); voidRooAbsPdf::setNormRangeOverride(const char* rangeName); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbs",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooResolutionModel.html:31056,Error,ErrorLoggingMode,31056,root/html602/RooResolutionModel.html,https://root.cern,https://root.cern/root/html602/RooResolutionModel.html,2,['Error'],['ErrorLoggingMode']
Availability," RooSetPair(const RooArgSet* set1 = 0, const RooArgSet* set2 = 0); virtual~RooSetPair(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooSetPair.html:1273,Error,Error,1273,root/html532/RooSetPair.html,https://root.cern,https://root.cern/root/html532/RooSetPair.html,2,['Error'],['Error']
Availability," RooSharedPropertiesList(); RooSharedPropertiesList(const RooSharedPropertiesList&); virtual~RooSharedPropertiesList(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooSharedPropertiesList.html:1400,Error,Error,1400,root/html532/RooSharedPropertiesList.html,https://root.cern,https://root.cern/root/html532/RooSharedPropertiesList.html,2,['Error'],['Error']
Availability," RooSpHarmonic(const char* name, const char* title, RooAbsReal& ctheta, RooAbsReal& phi, int l1, int m1, int l2, int m2); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooSpHarmonic.html:25169,Error,ErrorLoggingMode,25169,root/html602/RooSpHarmonic.html,https://root.cern,https://root.cern/root/html602/RooSpHarmonic.html,2,['Error'],['ErrorLoggingMode']
Availability," RooStudyPackage(); RooStudyPackage(RooWorkspace& w); RooStudyPackage(const RooStudyPackage&); ~RooStudyPackage(); voidTObject::AbstractMethod(const char* method) const; voidaddStudy(RooAbsStudy& study); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*Clone(const char* = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; voiddriver(Int_t nExperiments); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); voidexportData(TList* olist, Int_t seqno); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); voidfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::Fi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooStudyPackage.html:1440,Error,Error,1440,root/html532/RooStudyPackage.html,https://root.cern,https://root.cern/root/html532/RooStudyPackage.html,2,['Error'],['Error']
Availability," RooTFoamBinding(const RooTFoamBinding&); RooTFoamBinding(const RooAbsReal& pdf, const RooArgSet& observables); virtual~RooTFoamBinding(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); RooRealBinding&binding(); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Double_tDensity(Int_t ndim, Double_t*); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooTFoamBinding.html:1418,Error,Error,1418,root/html532/RooTFoamBinding.html,https://root.cern,https://root.cern/root/html532/RooTFoamBinding.html,2,['Error'],['Error']
Availability," RooTObjWrap(Bool_t isArray = kFALSE); RooTObjWrap(const RooTObjWrap& other); RooTObjWrap(TObject* inObj, Bool_t isArray = kFALSE); virtual~RooTObjWrap(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetI",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooTObjWrap.html:1345,Error,Error,1345,root/html532/RooTObjWrap.html,https://root.cern,https://root.cern/root/html532/RooTObjWrap.html,2,['Error'],['Error']
Availability," RooThreshEntry(); RooThreshEntry(const RooThreshEntry& other); RooThreshEntry(Double_t thresh, const RooCatType& cat); virtual~RooThreshEntry(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); const RooCatType&cat() const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*Clone(const char*) const; virtual Int_tCompare(const TObject*) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/RooThreshEntry.html:1339,Error,Error,1339,root/html532/RooThreshEntry.html,https://root.cern,https://root.cern/root/html532/RooThreshEntry.html,2,['Error'],['Error']
Availability," RooUnblindUniform(const char* name, const char* title, const char* blindString, Double_t scale, RooAbsReal& blindValue); virtual voidTObject::SaveAs(const char* filename = """", Option_t* option = """") constMENU ; virtual voidTObject::SavePrimitive(ostream& out, Option_t* option = """"); TIterator*RooAbsArg::serverIterator() const; RooFIterRooAbsArg::serverMIterator() const; virtual voidRooAbsArg::serverNameChangeHook(const RooAbsArg*, const RooAbsArg*); voidRooAbsArg::setAttribute(const Text_t* name, Bool_t value = kTRUE); voidTObject::SetBit(UInt_t f); voidTObject::SetBit(UInt_t f, Bool_t set); virtual voidRooAbsArg::setCacheAndTrackHints(RooArgSet&); static voidRooAbsReal::setCacheCheck(Bool_t flag); virtual Bool_tRooAbsReal::setData(RooAbsData&, Bool_t = kTRUE); static voidRooAbsArg::setDirtyInhibit(Bool_t flag); virtual voidTObject::SetDrawOption(Option_t* option = """")MENU ; static voidTObject::SetDtorOnly(void* obj); static voidRooAbsReal::setEvalErrorLoggingMode(RooAbsReal::ErrorLoggingMode m); virtual voidRooAbsArg::setExpensiveObjectCache(RooExpensiveObjectCache& cache); static voidRooAbsReal::setHideOffset(Bool_t flag); voidRooAbsReal::setIntegratorConfig(); voidRooAbsReal::setIntegratorConfig(const RooNumIntConfig& config); voidRooAbsArg::setLocalNoDirtyInhibit(Bool_t flag) const; virtual voidRooAbsArg::SetName(const char* name); virtual voidRooAbsArg::SetNameTitle(const char* name, const char* title); static voidTObject::SetObjectStat(Bool_t stat); voidRooAbsArg::setOperMode(RooAbsArg::OperMode mode, Bool_t recurseADirty = kTRUE); voidRooAbsReal::setParameterizeIntegral(const RooArgSet& paramVars); voidRooAbsReal::setPlotLabel(const char* label); voidRooAbsArg::setProhibitServerRedirect(Bool_t flag); voidRooAbsArg::setShapeDirty() const; voidRooAbsArg::setStringAttribute(const Text_t* key, const Text_t* value); virtual voidTNamed::SetTitle(const char* title = """")MENU ; voidRooAbsArg::setTransientAttribute(const Text_t* name, Bool_t value = kTRUE); virtual voi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/RooUnblindUniform.html:24063,Error,ErrorLoggingMode,24063,root/html602/RooUnblindUniform.html,https://root.cern,https://root.cern/root/html602/RooUnblindUniform.html,2,['Error'],['ErrorLoggingMode']
Availability," RooWorkspace.h. ◆ data(). RooAbsData * RooWorkspace::data ; (; RooStringView ; name); const. Retrieve dataset (binned or unbinned) with given name. A null pointer is returned if not found. ; Definition at line 1309 of file RooWorkspace.cxx. ◆ DeclFileName(). static const char * RooWorkspace::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 282 of file RooWorkspace.h. ◆ defineSet() [1/2]. bool RooWorkspace::defineSet ; (; const char * ; name, . const char * ; contentList . ). Define a named set in the workspace through a comma separated list of names of objects already in the workspace. ; Definition at line 902 of file RooWorkspace.cxx. ◆ defineSet() [2/2]. bool RooWorkspace::defineSet ; (; const char * ; name, . const RooArgSet & ; aset, . bool ; importMissing = false . ). Define a named RooArgSet with given constituents. ; If importMissing is true, any constituents of aset that are not in the workspace will be imported, otherwise an error is returned for missing components ; Definition at line 844 of file RooWorkspace.cxx. ◆ defineSetInternal(). bool RooWorkspace::defineSetInternal ; (; const char * ; name, . const RooArgSet & ; aset . ). private . Definition at line 878 of file RooWorkspace.cxx. ◆ embeddedData(). RooAbsData * RooWorkspace::embeddedData ; (; RooStringView ; name); const. Retrieve dataset (binned or unbinned) with given name. A null pointer is returned if not found. ; Definition at line 1318 of file RooWorkspace.cxx. ◆ expensiveObjectCache(). RooExpensiveObjectCache & RooWorkspace::expensiveObjectCache ; (; ). inline . Definition at line 166 of file RooWorkspace.h. ◆ extendSet(). bool RooWorkspace::extendSet ; (; const char * ; name, . const char * ; newContents . ). Define a named set in the workspace through a comma separated list of names of objects already in the workspace. ; Definition at line 937 of file RooWorkspace.cxx. ◆ factory() [1/2]. RooFactoryWSTool & RooWorkspace::facto",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooWorkspace.html:29688,error,error,29688,doc/master/classRooWorkspace.html,https://root.cern,https://root.cern/doc/master/classRooWorkspace.html,1,['error'],['error']
Availability," RtypesCore.h:63; Int_tint Int_tDefinition RtypesCore.h:45; Ssiz_tint Ssiz_tDefinition RtypesCore.h:67; ULong_tunsigned long ULong_tDefinition RtypesCore.h:55; Long_tlong Long_tDefinition RtypesCore.h:54; Float_tfloat Float_tDefinition RtypesCore.h:57; kFALSEconstexpr Bool_t kFALSEDefinition RtypesCore.h:94; Double_tdouble Double_tDefinition RtypesCore.h:59; kNPOSconstexpr Ssiz_t kNPOSDefinition RtypesCore.h:117; Long64_tlong long Long64_tDefinition RtypesCore.h:69; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; ClassImp#define ClassImp(name)Definition Rtypes.h:382; kItimerResolution@ kItimerResolutionDefinition Rtypes.h:62; kMAXSIGNALS@ kMAXSIGNALSDefinition Rtypes.h:59; kMAXPATHLEN@ kMAXPATHLENDefinition Rtypes.h:60; TApplication.h; gApplicationR__EXTERN TApplication * gApplicationDefinition TApplication.h:170; TEnv.h; gEnvR__EXTERN TEnv * gEnvDefinition TEnv.h:170; TError.h; SysErrorvoid SysError(const char *location, const char *msgfmt,...)Use this function in case a system (OS or GUI) related error occurred.Definition TError.cxx:196; Breakvoid Break(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:207; Fatalvoid Fatal(const char *location, const char *msgfmt,...)Use this function in case of a fatal error. It will abort the program.Definition TError.cxx:244; TException.h; gExceptionHandlerR__EXTERN TExceptionHandler * gExceptionHandlerDefinition TException.h:79; totalstatic unsigned int totalDefinition TGWin32ProxyDefs.h:40; wwinID wDefinition TGWin32VirtualGLProxy.cxx:39; pwinID h TVirtualViewer3D TVirtualGLPainter pDefinition TGWin32VirtualGLProxy.cxx:51; directwinID h directDefinition TGWin32VirtualGLProxy.cxx:43; maskOption_t Option_t TPoint TPoint const char GetTextMagnitude GetFillStyle GetLineColor GetLineWidth GetMarkerStyle GetTextAlign GetTextColor GetTextSize void char Point_t Rectangle_t WindowAttributes_t Float_t Float_t Float_t Int_t Int_t UInt_t UInt_t Rectangle_t maskDefinition ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TUnixSystem_8cxx_source.html:176193,error,error,176193,doc/master/TUnixSystem_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TUnixSystem_8cxx_source.html,1,['error'],['error']
Availability," SETUP.; The objects in the list must be streamable; the SETUP macro will be executed; like this: SETUP.C(loadopts).; Returns 0 in case of success and -1 in case of error. Int_t UnloadPackage(const char* package); Unload specified package.; Returns 0 in case of success and -1 in case of error. Int_t UnloadPackageOnClient(const char* package); Unload a specific package on the client.; Returns 0 in case of success and -1 in case of error.; The code is equivalent to the one in TProofServ.cxx (TProof::UnloadPackage; case). Keep in sync in case of changes. Int_t UnloadPackages(); Unload all packages.; Returns 0 in case of success and -1 in case of error. Int_t EnablePackage(const char* package, Bool_t notOnClient = kFALSE); Enable specified package. Executes the PROOF-INF/BUILD.sh; script if it exists followed by the PROOF-INF/SETUP.C script.; In case notOnClient = true, don't enable the package on the client.; The default is to enable packages also on the client.; Returns 0 in case of success and -1 in case of error.; Provided for backward compatibility. Int_t EnablePackage(const char* package, const char* loadopts, Bool_t notOnClient = kFALSE); Enable specified package. Executes the PROOF-INF/BUILD.sh; script if it exists followed by the PROOF-INF/SETUP.C script.; In case notOnClient = true, don't enable the package on the client.; The default is to enable packages also on the client.; It is is possible to specify options for the loading step via 'loadopts';; the string will be passed passed as argument to SETUP.; Returns 0 in case of success and -1 in case of error. Int_t EnablePackage(const char* package, TList* loadopts, Bool_t notOnClient = kFALSE); Enable specified package. Executes the PROOF-INF/BUILD.sh; script if it exists followed by the PROOF-INF/SETUP.C script.; In case notOnClient = true, don't enable the package on the client.; The default is to enable packages also on the client.; It is is possible to specify a list of objects to be passed to the SETUP; fu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProof.html:64349,error,error,64349,root/html528/TProof.html,https://root.cern,https://root.cern/root/html528/TProof.html,4,['error'],['error']
Availability," Sample, fit and plot convoluted pdf; # ----------------------------------------------------------------------; ; # Sample 1000 events in x from gxlx; data = lxg.generate({t}, 10000); ; # Fit gxlx to data; lxg.fitTo(data, PrintLevel=-1); ; # Plot data, pdf, landau (X) gauss pdf; frame = t.frame(Title=""landau (x) gauss convolution""); data.plotOn(frame); lxg.plotOn(frame); landau.plotOn(frame, LineStyle=""--""); ; # Draw frame on canvas; c = ROOT.TCanvas(""rf208_convolution"", ""rf208_convolution"", 600, 600); ROOT.gPad.SetLeftMargin(0.15); frame.GetYaxis().SetTitleOffset(1.4); frame.Draw(); ; c.SaveAs(""rf208_convolution.png""); [#1] INFO:Eval -- RooRealVar::setRange(t) new range named 'refrange_fft_lxg' created with bounds [-10,30]; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x85ab260 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; [#1] INFO:Fitting -- RooAbsPdf::fitTo(lxg_over_lxg_Int[t]) fixing normalization set for coefficient determination to observables in data; [#1] INFO:Fitting -- using CPU computation library compiled with -mavx2; [#1] INFO:Fitting -- RooAddition::defaultErrorLevel(nll_lxg_over_lxg_Int[t]_lxgData) Summation contains a RooNLLVar, using its error level; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: activating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x88084e0 with pdf lx_CONV_gauss_CACHE_Obs[t] for nset () with code 1 from preexisting content.; [#1] INFO:Minimization -- RooAbsMinimizerFcn::setOptimizeConst: deactivating const optimization; [#1] INFO:Caching -- RooAbsCachedPdf::getCache(lxg) creating new cache 0x82935f0 with pdf lx_CONV_gauss_CACHE_Obs[t]_NORM_t for nset (t) with code 0; DateFebruary 2018 ; AuthorsClemens Lange, Wouter Verkerke (C version) ; Definition in file rf208_convolution.py. tutorialsroofitrf208_convolution.py. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:41:30 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/rf208__convolution_8py.html:2407,error,error,2407,doc/master/rf208__convolution_8py.html,https://root.cern,https://root.cern/doc/master/rf208__convolution_8py.html,1,['error'],['error']
Availability," Scale(Double_t c1 = 1, Option_t* option = """"); *-*-*-*-*Multiply this profile2D by a constant c1*-*-*-*-*-*-*-*-*; *-* ========================================. this = c1*this. This function uses the services of TProfile2D::Add. void SetBinEntries(Int_t bin, Double_t w); Set the number of entries in bin*-*-*-; *-* ================================. void SetBins(Int_t nbinsx, Double_t xmin, Double_t xmax, Int_t nbinsy, Double_t ymin, Double_t ymax); Redefine x and y axis parameters*-*-*-; *-* ===========================. void SetBins(Int_t nx, const Double_t* xBins, Int_t ny, const Double_t* yBins); *-*Redefine x and y axis parameters for variable bin sizes ; *-* ===========================. void SetBuffer(Int_t buffersize, Option_t* option = """"); set the buffer size in units of 8 bytes (double). void SetErrorOption(Option_t* option = """"); -*-*Set option to compute profile2D errors; *-* =======================================. The computation of errors is based on the parameter option:; option:; ' ' (Default) Errors are Spread/SQRT(N) for Spread.ne.0. ,; "" "" SQRT(Z)/SQRT(N) for Spread.eq.0,N.gt.0 ,; "" "" 0. for N.eq.0; 's' Errors are Spread for Spread.ne.0. ,; "" "" SQRT(Z) for Spread.eq.0,N.gt.0 ,; "" "" 0. for N.eq.0; 'i' Errors are Spread/SQRT(N) for Spread.ne.0. ,; "" "" 1./SQRT(12.*N) for Spread.eq.0,N.gt.0 ,; "" "" 0. for N.eq.0; See TProfile2D::BuildOptions for explanation of all options. void Streamer(TBuffer& b); Stream an object of class TProfile2D. void Sumw2(); Create structure to store sum of squares of weights per bin *-*-*-*-*-*-*-*; This is needed to compute the correct statistical quantities; of a profile filled with weights. This function is automatically called when the histogram is created; if the static function TH1::SetDefaultSumw2 has been called before. Int_t BufferFill(Double_t , Double_t ); {return -2;}. Int_t BufferFill(Double_t , Double_t , Double_t ); {return -2;}. void SetBins(const Int_t* nbins, const Double_t* range); helper methods for the Mer",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TProfile2D.html:44897,error,errors,44897,root/html532/TProfile2D.html,https://root.cern,https://root.cern/root/html532/TProfile2D.html,3,"['Error', 'error']","['Errors', 'errors']"
Availability," Scan box on top. When the “Rec” box is checked, the Draw and Scan commands are recorded in the history file and echoed on the command line. The “Histogram” text box contains the name of the resulting histogram. By default it is htemp. You can type any name, if the histogram does not exist it will create one. The Option text box contains the list of Draw options. See “Draw Options”. You can select the options with the Options menu. The Command box lets you enter any command that you could also enter on the command line. The vertical slider on the far left side can be used to select the minimum and maximum of an event range. The actual start and end index are shown in on the bottom in the status window.; There is an extensive help utility accessible with the Help menu. The IList and OList are to specify an input list of entry indices and a name for the output list respectively. Both need to be of type TList and contain integers of entry indices. These lists are described below in the paragraph “Error! Reference source not found.”. A couple of graphs. The first one is a plot of the age distribution, the second a scatter plot of the cost vs. age. The second one was generated by dragging the age leaf into the Y-box and the cost leaf into the X-box, and pressing the Draw button. By default, this will generate a scatter plot. Select a different option, for example ""lego"" to create a 2D histogram.; 12.7 Creating and Saving Trees; This picture shows the TTree class:. The TTree class. To create a TTree we use its constructor. Then we design our data layout and add the branches. A tree can be created by giving a name and title:; TTree t(""MyTree"",""Example Tree"");; 12.7.1 Creating a Tree from a Folder Hierarchy; An alternative way to create a tree and organize it is to use folders (see “Folders and Tasks”). You can build a folder structure and create a tree with branches for each of the sub-folders:; TTree folder_tree(""MyFolderTree"",""/MyFolder"");; The second argument ""/MyFolder""",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html:530130,Error,Error,530130,root/htmldoc/guides/users-guide/ROOTUsersGuide.html,https://root.cern,https://root.cern/root/htmldoc/guides/users-guide/ROOTUsersGuide.html,1,['Error'],['Error']
Availability," Sections:; class description; function members; data members; class charts. ROOT; » MATH; » MATHCORE; » ROOT::Fit::FitResult. class ROOT::Fit::FitResult. class containg the result of the fit and all the related information; (fitted parameter values, error, covariance matrix and minimizer result information); Contains a pointer also to the fitted (model) function, modified with the fit parameter values.; When the fit is valid, it is constructed from a Minimizer and a model function pointer. @ingroup FitMain. Function Members (Methods); public:. virtual~FitResult(); doubleChi2() const; doubleCorrelation(unsigned int i, unsigned int j) const; doubleCovMatrix(unsigned int i, unsigned int j) const; intCovMatrixStatus() const; doubleEdm() const; doubleError(unsigned int i) const; const vector<double>&Errors() const; voidFillResult(const shared_ptr<ROOT::Math::Minimizer>& min, const ROOT::Fit::FitConfig& fconfig, const shared_ptr<ROOT::Fit::FitResult::IModelFunction>& f, bool isValid, unsigned int sizeOfData = 0, bool binFit = true, const ROOT::Math::IMultiGenFunction* chi2func = 0, unsigned int ncalls = 0); ROOT::Fit::FitResultFitResult(); ROOT::Fit::FitResultFitResult(const ROOT::Fit::FitConfig& fconfig); ROOT::Fit::FitResultFitResult(const ROOT::Fit::FitResult& rhs); const ROOT::Fit::BinData*FittedBinData() const; const ROOT::Fit::FitResult::IModelFunction*FittedFunction() const; vector<double>GetConfidenceIntervals(double cl = 0.94999999999999996, bool norm = true) const; voidGetConfidenceIntervals(const ROOT::Fit::BinData& data, double* ci, double cl = 0.94999999999999996, bool norm = true) const; voidGetConfidenceIntervals(unsigned int n, unsigned int stride1, unsigned int stride2, const double* x, double* ci, double cl = 0.94999999999999996, bool norm = true) const; const double*GetErrors() const; stringGetParameterName(unsigned int ipar) const; const double*GetParams() const; doubleGlobalCC(unsigned int i) const; boolHasMinosError(unsigned int i) const; intIndex(co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Fit__FitResult.html:937,Error,Errors,937,root/html604/ROOT__Fit__FitResult.html,https://root.cern,https://root.cern/root/html604/ROOT__Fit__FitResult.html,1,['Error'],['Errors']
Availability," See TProfile::BuildOptions for more explanations on errors. see also comments in the TH1 base class constructors. TProfile(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Double_t ylow, Double_t yup, Option_t* option = """"); -*Constructor for Profile histograms with variable bin size; *-* =========================================================. See TProfile::BuildOptions for more explanations on errors. see also comments in the TH1 base class constructors. TProfile(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Double_t ylow, Double_t yup, Option_t* option = """"); Constructor for Profile histograms with range in y; *-* ==================================================; The first five parameters are similar to TH1D::TH1D.; Only the values of Y between ylow and yup will be considered at filling time.; ylow and yup will also be the maximum and minimum values; on the y scale when drawing the profile. See TProfile::BuildOptions for more explanations on errors. see also comments in the TH1 base class constructors. void BuildOptions(Double_t ymin, Double_t ymax, Option_t* option); Set Profile histogram structure and options*-*-; *-* ===========================================. If a bin has N data points all with the same value Y (especially; possible when dealing with integers), the spread in Y for that bin; is zero, and the uncertainty assigned is also zero, and the bin is; ignored in making subsequent fits. If SQRT(Y) was the correct error; in the case above, then SQRT(Y)/SQRT(N) would be the correct error here.; In fact, any bin with non-zero number of entries N but with zero spread; should have an uncertainty SQRT(Y)/SQRT(N). Now, is SQRT(Y)/SQRT(N) really the correct uncertainty?; that it is only in the case where the Y variable is some sort; of counting statistics, following a Poisson distribution. This should; probably be set as the default case. However, Y can be any variable; from an original NTUPLE, not",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TProfile.html:27839,error,errors,27839,root/html528/TProfile.html,https://root.cern,https://root.cern/root/html528/TProfile.html,4,['error'],['errors']
Availability," See TProfile::BuildOptions for more explanations on errors. see also comments in the TH1 base class constructors. TProfile(const char* name, const char* title, Int_t nbinsx, const Double_t* xbins, Double_t ylow, Double_t yup, Option_t* option = """"); -*Constructor for Profile histograms with variable bin size; *-* =========================================================. See TProfile::BuildOptions for more explanations on errors. see also comments in the TH1 base class constructors. TProfile(const char* name, const char* title, Int_t nbinsx, Double_t xlow, Double_t xup, Double_t ylow, Double_t yup, Option_t* option = """"); Constructor for Profile histograms with range in y; *-* ==================================================; The first five parameters are similar to TH1D::TH1D.; Only the values of Y between ylow and yup will be considered at filling time.; ylow and yup will also be the maximum and minimum values; on the y scale when drawing the profile. See TProfile::BuildOptions for more explanations on errors. see also comments in the TH1 base class constructors. void BuildOptions(Double_t ymin, Double_t ymax, Option_t* option); Set Profile histogram structure and options*-*-; *-* ===========================================; ymin: minimum value allowed for y; ymax: maximum value allowed for y; if (ymin = ymax = 0) there are no limits on the allowed y values (ymin = -inf, ymax = +inf). option: this is the option for the computation of the y error of the profile ( TProfile::GetBinError ); possible values for the options are:. ' ' (Default) the bin errors are the standard error on the mean of Y = S(Y)/SQRT(N); where S(Y) is the standard deviation (RMS) of the Y data in the bin; and N is the number of bin entries (from TProfile::GetBinEntries(ibin) ); (i.e the errors are the standard error on the bin content of the profile). 's' Errors are the standard deviation of Y, S(Y). 'i' Errors are S(Y)/SQRT(N) (standard error on the mean as in the default); The only differe",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TProfile.html:30202,error,errors,30202,root/html534/TProfile.html,https://root.cern,https://root.cern/root/html534/TProfile.html,6,['error'],['errors']
Availability," See also; class description. void SetMinAngle(Double_t angle = 1); Set the min angle (in degrees) between a new candidate function; and the subspace spanned by the previously accepted; functions. See also; class description. void SetPowers(const Int_t* powers, Int_t terms); Define a user function. The input array must be of the form; (p11, ..., p1N, ... ,pL1, ..., pLN); Where N is the dimension of the data sample, L is the number of; terms (given in terms) and the first number, labels the term, the; second the variable. More information is given in the; class description. void SetPowerLimit(Double_t limit = 0.001); Set the user parameter for the function selection. The bigger the; limit, the more functions are used. The meaning of this variable; is defined in the; class description. void SetMaxPowers(const Int_t* powers); Set the maximum power to be considered in the fit for each; variable. See also; class description. void SetMinRelativeError(Double_t error); Set the acceptable relative error for when sum of square; residuals is considered minimized. For a full account, refer to; the; class description. Bool_t TestFunction(Double_t squareResidual, Double_t dResidur); PRIVATE METHOD:; Test whether the currently considered function contributes to the; fit. See also; class description. TMultiDimFit(). void Draw(Option_t* = ""d""); { }. Double_t GetChi2() const; { return fChi2; }. const TMatrixD* GetCorrelationMatrix() const; { return &fCorrelationMatrix; }. const TVectorD* GetCoefficients() const; { return &fCoefficients; }. const TVectorD* GetCoefficientsRMS() const; { return &fCoefficientsRMS; }. Double_t GetError() const; { return fError; }. Int_t* GetFunctionCodes() const; { return fFunctionCodes; }. const TMatrixD* GetFunctions() const; { return &fFunctions; }. TList* GetHistograms() const; { return fHistograms; }. Double_t GetMaxAngle() const; { return fMaxAngle; }. Int_t GetMaxFunctions() const; { return fMaxFunctions; }. Int_t* GetMaxPowers() const; { return fMa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TMultiDimFit.html:35099,error,error,35099,root/html602/TMultiDimFit.html,https://root.cern,https://root.cern/root/html602/TMultiDimFit.html,8,['error'],['error']
Availability," Select fill color by ROOT color code. Range(const char* name) -- Only draw curve in range defined by given name. Range(double lo, double hi) -- Only draw curve in specified range. VLines() -- Add vertical lines to y=0 at end points of curve. Precision(Double_t eps) -- Control precision of drawn curve w.r.t to scale of plot, default is 1e-3. Higher precision; will result in more and more densely spaced curve points. Invisible(Bool_t flag) -- Add curve to frame, but do not display. Useful in combination AddTo(). VisualizeError(const RooFitResult& fitres, Double_t Z=1, Bool_t linearMethod=kTRUE); -- Visualize the uncertainty on the parameters, as given in fitres, at 'Z' sigma'. VisualizeError(const RooFitResult& fitres, const RooArgSet& param, Double_t Z=1, Bool_t linearMethod=kTRUE) ;; -- Visualize the uncertainty on the subset of parameters 'param', as given in fitres, at 'Z' sigma'. Details on error band visualization. By default (linMethod=kTRUE) a linearized error is shown which is calculated as follows; T; error(x) = Z* F_a(x) * Corr(a,a') F_a'(x). where F_a(x) = [ f(x,a+da) - f(x,a-da) ] / 2, with f(x) the plotted curve and 'da' taken from the fit result; Corr(a,a') = the correlation matrix from the fit result; Z = requested significance 'Z sigma band'. The linear method is fast (required 2*N evaluations of the curve, where N is the number of parameters), but may; not be accurate in the presence of strong correlations (~>0.9) and at Z>2 due to linear and Gaussian approximations made. Alternatively (linMethod=kFALSE), a more robust error is calculated using a sampling method. In this method a number of curves; is calculated with variations of the parameter values, as drawn from a multi-variate Gaussian p.d.f. that is constructed; from the fit results covariance matrix. The error(x) is determined by calculating a central interval that capture N% of the variations; for each valye of x, where N% is controlled by Z (i.e. Z=1 gives N=68%). The number of sampling curve",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/RooAbsReal.html:48495,error,error,48495,root/html526/RooAbsReal.html,https://root.cern,https://root.cern/root/html526/RooAbsReal.html,20,['error'],['error']
Availability," Set EYlow for point i. ; Definition at line 1376 of file TGraphAsymmErrors.cxx. ◆ Streamer(). void TGraphAsymmErrors::Streamer ; (; TBuffer & ; b). overridevirtual . Stream an object of class TGraphAsymmErrors. ; Reimplemented from TGraph.; Definition at line 1404 of file TGraphAsymmErrors.cxx. ◆ StreamerNVirtual(). void TGraphAsymmErrors::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 89 of file TGraphAsymmErrors.h. ◆ SwapPoints(). void TGraphAsymmErrors::SwapPoints ; (; Int_t ; pos1, . Int_t ; pos2 . ). overrideprotectedvirtual . Swap points. ; Reimplemented from TGraph.; Definition at line 1456 of file TGraphAsymmErrors.cxx. ◆ UpdateArrays(). void TGraphAsymmErrors::UpdateArrays ; (; const std::vector< Int_t > & ; sorting_indices, . Int_t ; numSortedPoints, . Int_t ; low . ). overrideprotectedvirtual . Update the fX, fY, fEXlow, fEXhigh, fEYlow and fEYhigh arrays with the sorted values. ; Reimplemented from TGraph.; Definition at line 1468 of file TGraphAsymmErrors.cxx. Member Data Documentation. ◆ fEXhigh. Double_t* TGraphAsymmErrors::fEXhigh {nullptr}. protected . [fNpoints] array of X high errors ; Definition at line 30 of file TGraphAsymmErrors.h. ◆ fEXlow. Double_t* TGraphAsymmErrors::fEXlow {nullptr}. protected . [fNpoints] array of X low errors ; Definition at line 29 of file TGraphAsymmErrors.h. ◆ fEYhigh. Double_t* TGraphAsymmErrors::fEYhigh {nullptr}. protected . [fNpoints] array of Y high errors ; Definition at line 32 of file TGraphAsymmErrors.h. ◆ fEYlow. Double_t* TGraphAsymmErrors::fEYlow {nullptr}. protected . [fNpoints] array of Y low errors ; Definition at line 31 of file TGraphAsymmErrors.h. Libraries for TGraphAsymmErrors:. [legend]; The documentation for this class was generated from the following files:; hist/hist/inc/TGraphAsymmErrors.h; hist/hist/src/TGraphAsymmErrors.cxx. TGraphAsymmErrors. ROOT master - Reference Guide Generated on Tue Nov 5 2024 09:43:31 (GVA Time) using Doxygen 1.9.8   ; . ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphAsymmErrors.html:53730,error,errors,53730,doc/master/classTGraphAsymmErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphAsymmErrors.html,4,['error'],['errors']
Availability," Set log steps. void SetState(Bool_t enable = kTRUE); Set the active state. void SetButtonToNum(Bool_t state); Send button messages to the number field (true) or parent widget (false).; When the message is sent to the parent widget, it is responsible to change; the numerical value accordingly. This can be useful to implement cursors; which move from data point to data point. For the message being sent; see ProcessMessage(). Bool_t ProcessMessage(Long_t msg, Long_t parm1, Long_t parm2); Process the up/down button messages. If fButtonToNum is false the; following message is sent: kC_COMMAND, kCM_BUTTON, widget id, param; param % 100 is the step size; param % 10000 / 100 != 0 indicates log step; param / 10000 != 0 indicates button down. TGLayoutManager * GetLayoutManager() const; Return layout manager. void ValueChanged(Long_t val); Emit ValueChanged(Long_t) signal. This signal is emitted when; fButtonToNum is false. The val has the following meaning:; val % 100 is the step size; val % 10000 / 100 != 0 indicates log step; val / 10000 != 0 indicates button down. void ValueSet(Long_t val); Emit ValueSet(Long_t) signal. This signal is emitted when the; number entry value is changed. The val has the following meaning:; val % 100 is the step size; val % 10000 / 100 != 0 indicates log step; val / 10000 != 0 indicates button down. void SavePrimitive(ostream& out, Option_t* = """"); Save a number entry widget as a C++ statement(s) on output stream out. void SetNumber(Double_t val). void SetIntNumber(Long_t val). void SetTime(Int_t hour, Int_t min, Int_t sec). void SetDate(Int_t year, Int_t month, Int_t day). void SetHexNumber(ULong_t val). void SetText(const char* text, Bool_t emit = kTRUE). Double_t GetNumber() const. Long_t GetIntNumber() const. void GetTime(Int_t& hour, Int_t& min, Int_t& sec) const. void GetDate(Int_t& year, Int_t& month, Int_t& day) const. ULong_t GetHexNumber() const. void IncreaseNumber(TGNumberFormat::EStepSize step = kNSSSmall, Int_t sign = 1, Bool_t log",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGNumberEntry.html:26275,down,down,26275,root/html528/TGNumberEntry.html,https://root.cern,https://root.cern/root/html528/TGNumberEntry.html,10,['down'],['down']
Availability," Set manager and schedule its destruction after this for clean operations. ; Definition at line 1301 of file TProof.cxx. ◆ SetMaxDrawQueries(). void TProof::SetMaxDrawQueries ; (; Int_t ; max). Set max number of draw queries whose results are saved. ; Definition at line 2115 of file TProof.cxx. ◆ SetMonitor(). void TProof::SetMonitor ; (; TMonitor * ; mon = 0, . Bool_t ; on = kTRUE . ). private . Activate (on == TRUE) or deactivate (on == FALSE) all sockets monitored by 'mon'. ; Definition at line 2408 of file TProof.cxx. ◆ SetParallel(). Int_t TProof::SetParallel ; (; Int_t ; nodes = -1, . Bool_t ; random = kFALSE . ). Tell PROOF how many slaves to use in parallel. ; Returns the number of parallel slaves. Returns -1 in case of error. ; Definition at line 7140 of file TProof.cxx. ◆ SetParallelSilent(). Int_t TProof::SetParallelSilent ; (; Int_t ; nodes, . Bool_t ; random = kFALSE . ). private . Tell PROOF how many slaves to use in parallel. ; If random is TRUE a random selection is done (if nodes is less than the available nodes). Returns the number of parallel slaves. Returns -1 in case of error. ; Definition at line 7112 of file TProof.cxx. ◆ SetParameter() [1/5]. void TProof::SetParameter ; (; const char * ; par, . const char * ; value . ). Set input list parameter. ; If the parameter is already set it will be set to the new value. ; Definition at line 9822 of file TProof.cxx. ◆ SetParameter() [2/5]. void TProof::SetParameter ; (; const char * ; par, . Double_t ; value . ). Set an input list parameter. ; Definition at line 9898 of file TProof.cxx. ◆ SetParameter() [3/5]. void TProof::SetParameter ; (; const char * ; par, . Int_t ; value . ). Set an input list parameter. ; Definition at line 9841 of file TProof.cxx. ◆ SetParameter() [4/5]. void TProof::SetParameter ; (; const char * ; par, . Long64_t ; value . ). Set an input list parameter. ; Definition at line 9879 of file TProof.cxx. ◆ SetParameter() [5/5]. void TProof::SetParameter ; (; const char * ; par, . L",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProof.html:145040,avail,available,145040,doc/master/classTProof.html,https://root.cern,https://root.cern/doc/master/classTProof.html,1,['avail'],['available']
Availability," SetFrameFillColor(Color_t color=1)Definition TStyle.h:372; TStyle::fFrameBorderModeInt_t fFrameBorderModePad frame border mode.Definition TStyle.h:76; TStyle::GetPadTickXInt_t GetPadTickX() constDefinition TStyle.h:217; TStyle::GetTitleColorColor_t GetTitleColor(Option_t *axis=""X"") constReturn title color.Definition TStyle.cxx:1204; TStyle::fHistLineStyleStyle_t fHistLineStyleHistogram line style.Definition TStyle.h:80; TStyle::GetFrameLineColorColor_t GetFrameLineColor() constDefinition TStyle.h:226; TStyle::GetGridStyleStyle_t GetGridStyle() constDefinition TStyle.h:223; TStyle::GetJoinLinePSInt_t GetJoinLinePS() constReturns the line join method used for PostScript, PDF and SVG output. See TPostScript::SetLineJoin fo...Definition TStyle.h:287; TStyle::fLegendFillStyleStyle_t fLegendFillStyleLegend fill style.Definition TStyle.h:65; TStyle::SetStatFontvoid SetStatFont(Style_t font=62)Definition TStyle.h:394; TStyle::SetEndErrorSizevoid SetEndErrorSize(Float_t np=2)Set the size (in pixels) of the small lines drawn at the end of the error bars (TH1 or TGraphErrors).Definition TStyle.cxx:1340; TStyle::GetStatFontSizeFloat_t GetStatFontSize() constDefinition TStyle.h:261; TStyle::GetBarOffsetFloat_t GetBarOffset() constDefinition TStyle.h:182; TStyle::GetStatXFloat_t GetStatX() constDefinition TStyle.h:264; TStyle::GetLabelSizeFloat_t GetLabelSize(Option_t *axis=""X"") constReturn label size.Definition TStyle.cxx:1145; TStyle::SetCapLinePSvoid SetCapLinePS(Int_t capline=0)Set the line cap method used for PostScript, PDF and SVG output. See TPostScript::SetLineCap for deta...Definition TStyle.h:307; TStyle::GetPadColorColor_t GetPadColor() constDefinition TStyle.h:208; TStyle::fBarOffsetFloat_t fBarOffsetOffset of bar for graphs.Definition TStyle.h:36; TStyle::GetCandleScaledBool_t GetCandleScaled() constDefinition TStyle.h:292; TStyle::SetPadRightMarginvoid SetPadRightMargin(Float_t margin=0.1)Definition TStyle.h:361; TStyle::GetHistFillStyleStyle_t GetHistFillStyle() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TStyle_8cxx_source.html:102221,error,error,102221,doc/master/TStyle_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TStyle_8cxx_source.html,1,['error'],['error']
Availability," SetParamsSettings(unsigned int npar, const double* params, const double* vstep = 0). set the parameter settings from number of parameters and a vector of values and optionally step values. If there are not existing or number of parameters does not match existing one, create a new parameter setting list. void SetFromFitResult(const ROOT::Fit::FitResult& rhs). Set the parameter setting from a fit Result. ROOT::Math::Minimizer * CreateMinimizer(). create a new minimizer according to chosen configuration. void SetMinimizer(const char* type, const char* algo = 0). set minimizer type. const std::string & MinimizerType() const. return type of minimizer package. { return fMinimizerOpts.MinimizerType(); }. const std::string & MinimizerAlgoType() const. return type of minimizer algorithms. { return fMinimizerOpts.MinimizerAlgorithm(); }. bool NormalizeErrors() const. flag to check if resulting errors are be normalized according to chi2/ndf. { return fNormErrors; }. bool ParabErrors() const; do analysis for parabolic errors. { return fParabErrors; }. bool MinosErrors() const; do minos errros analysis on the parameters. { return fMinosErrors; }. bool UpdateAfterFit() const; Update configuration after a fit using the FitResult. { return fUpdateAfterFit; }. const std::vector<unsigned int> & MinosParams() const; return vector of parameter indeces for which the Minos Error will be computed. { return fMinosParams; }. void SetNormErrors(bool on = true). set the option to normalize the error on the result according to chi2/ndf. { fNormErrors= on; }. void SetParabErrors(bool on = true); set parabolic erros. { fParabErrors = on; }. void SetMinosErrors(bool on = true); set Minos erros. { fMinosErrors = on; }. void SetMinosErrors(const vector<unsigned int>& paramInd); set parameter indeces for running Minos; this can be used for running Minos on a subset of parameters - otherwise is run on all of them; if MinosErrors() is set. void SetUpdateAfterFit(bool on = true); Update configuration ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/ROOT__Fit__FitConfig.html:4571,error,errors,4571,root/html530/ROOT__Fit__FitConfig.html,https://root.cern,https://root.cern/root/html530/ROOT__Fit__FitConfig.html,1,['error'],['errors']
Availability," SetReplaceEntities(Bool_t val = kTRUE); The parser will replace/expand entities. void ReleaseUnderlying(); To release any existing document. void OnValidateError(const TString& message); This function is called when an error from the parser has occured.; Message is the parse error. void OnValidateWarning(const TString& message); This function is called when a warning from the parser has occured.; Message is the parse error. const char * GetParseCodeMessage(Int_t parseCode) const; Returns the parse code message. void InitializeContext(); Initialize parser parameters, such as, disactivate non-standards libxml1; features, on/off validation, clear error and warning messages. void StopParser(); Stops parsing. void SetParseCode(Int_t code); Set the parse code:; 0: Parse successful; -1: Attempt to parse a second file while a parse is in progress; -2: Parse context is not created; -3: An error occured while parsing file; -4: A fatal error occured while parsing file; -5: Document is not well-formed. void SetStopOnError(Bool_t stop = kTRUE); Set parser stops in case of error:; stop = true, stops on error; stop = false, continue parsing on error... TXMLParser(const TXMLParser& ). TXMLParser& operator=(const TXMLParser& ). Bool_t GetValidate() const; { return fValidate; }. Bool_t GetReplaceEntities() const; { return fReplaceEntities; }. Int_t ParseFile(const char* filename). Int_t ParseBuffer(const char* contents, Int_t len). Int_t GetParseCode() const; { return fParseCode; }. Bool_t GetStopOnError() const; { return fStopError; }. const char * GetValidateError() const; { return fValidateError; }. const char * GetValidateWarning() const; { return fValidateWarning; }. » Author: Jose Lo 12/4/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/xmlparser:$Id$ » Last generated: 2015-06-02 16:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TXMLParser.html:12040,error,error,12040,root/html604/TXMLParser.html,https://root.cern,https://root.cern/root/html604/TXMLParser.html,6,['error'],['error']
Availability," SetReplaceEntities(Bool_t val = kTRUE); The parser will replace/expand entities. void ReleaseUnderlying(); To release any existing document. void OnValidateError(const TString& message); This function is called when an error from the parser has occured.; Message is the parse error. void OnValidateWarning(const TString& message); This function is called when a warning from the parser has occured.; Message is the parse error. const char * GetParseCodeMessage(Int_t parseCode) const; Returns the parse code message. void InitializeContext(); Initialize parser parameters, such as, disactivate non-standards libxml1; features, on/off validation, clear error and warning messages. void StopParser(); Stops parsing. void SetParseCode(Int_t code); Set the parse code:; 0: Parse successful; -1: Attempt to parse a second file while a parse is in progress; -2: Parse context is not created; -3: An error occured while parsing file; -4: A fatal error occured while parsing file; -5: Document is not well-formed. void SetStopOnError(Bool_t stop = kTRUE); Set parser stops in case of error:; stop = true, stops on error; stop = false, continue parsing on error... TXMLParser(const TXMLParser& ). TXMLParser& operator=(const TXMLParser& ). Bool_t GetValidate() const; { return fValidate; }. Bool_t GetReplaceEntities() const; { return fReplaceEntities; }. Int_t ParseFile(const char* filename). Int_t ParseBuffer(const char* contents, Int_t len). Int_t GetParseCode() const; { return fParseCode; }. Bool_t GetStopOnError() const; { return fStopError; }. const char * GetValidateError() const; { return fValidateError; }. const char * GetValidateWarning() const; { return fValidateWarning; }. » Author: Jose Lo 12/4/2005 » Copyright (C) 1995-2005, Rene Brun and Fons Rademakers. *; » Last changed: root/xmlparser:$Id$ » Last generated: 2015-06-30 15:32; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TXMLParser.html:12040,error,error,12040,root/html602/TXMLParser.html,https://root.cern,https://root.cern/root/html602/TXMLParser.html,6,['error'],['error']
Availability," Source:; header file; source file; viewVC header viewVC source. Sections:; class description; function members; data members; class charts. ROOT; » MATH; » UNURAN; » TUnuranSampler. class TUnuranSampler: public ROOT::Math::DistSampler. Function Members (Methods); public:. TUnuranSampler(); TUnuranSampler(const TUnuranSampler&); virtual~TUnuranSampler(); virtual boolROOT::Math::DistSampler::Generate(unsigned int nevt, ROOT::Fit::UnBinData& data); virtual boolROOT::Math::DistSampler::Generate(unsigned int nevt, const int* nbins, ROOT::Fit::BinData& data, bool extend = true); boolROOT::Math::DistSampler::Generate(unsigned int nevt, int nbins, double xmin, double xmax, ROOT::Fit::BinData& data, bool extend = true); virtual TRandom*GetRandom(); virtual boolInit(const char* algo = """"); virtual boolInit(const ROOT::Math::DistSamplerOptions& opt); unsigned intROOT::Math::DistSampler::NDim() const; const ROOT::Math::IMultiGenFunction&ROOT::Math::DistSampler::ParentPdf() const; virtual boolSample(double* x); virtual doubleSample1D(); virtual boolSampleBin(double prob, double& value, double* error = 0); virtual boolROOT::Math::DistSampler::SampleBins(unsigned int n, const double* prob, double* values, double* errors = 0); virtual voidSetArea(double area); virtual voidSetFunction(const ROOT::Math::IGenFunction& func); voidSetFunction(TF1* pdf); virtual voidSetMode(double mode); voidSetPrintLevel(int level); virtual voidSetRandom(TRandom* r); voidROOT::Math::DistSampler::SetRange(const ROOT::Fit::DataRange& range); voidROOT::Math::DistSampler::SetRange(const double* xmin, const double* xmax); voidROOT::Math::DistSampler::SetRange(double xmin, double xmax, int icoord = 0); virtual voidSetSeed(unsigned int seed). protected:. boolDoInit1D(const char* algo); boolDoInitDiscrete1D(const char* algo); boolDoInitND(const char* algo); virtual voidROOT::Math::DistSampler::DoSetFunction(const ROOT::Math::IMultiGenFunction& func, bool copy); boolROOT::Math::DistSampler::IsInitialized(); cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TUnuranSampler.html:1183,error,error,1183,root/html528/TUnuranSampler.html,https://root.cern,https://root.cern/root/html528/TUnuranSampler.html,12,['error'],"['error', 'errors']"
Availability," StartIdleing(); Called when system starts idleing. void StopIdleing(); Called when system stops idleing. void Terminate(Int_t status = 0); Terminate the application by call TSystem::Exit() unless application has; been told to return from Run(), by a call to SetReturnFromRun(). void LineProcessed(const char* line); Emit signal when a line has been processed. void KeyPressed(Int_t key); Emit signal when console keyboard key was pressed. void ReturnPressed(char* text); Emit signal when return key was pressed. void SetEchoMode(Bool_t mode); Set console echo mode:. mode = kTRUE - echo input symbols; mode = kFALSE - noecho input symbols. void CreateApplication(); Static function used to create a default application environment. TApplication * Open(const char* url, Int_t debug, const char* script); Static function used to attach to an existing remote application; or to start one. void Close(TApplication* app); Static function used to close a remote application. void ls(Option_t* option = """") const; Show available sessions. TList * GetApplications(); Static method returning the list of available applications. TApplication(const TApplication& ). TApplication& operator=(const TApplication& ). void SetSignalHandler(TSignalHandler* sh); { fSigHandler = sh; }. TApplication * Open(const char* url, Int_t debug, const char* script). TSignalHandler * GetSignalHandler() const; { return fSigHandler; }. Bool_t HandleTermInput(); { return kFALSE; }. void Init(); { fAppImp->Init(); }. const char * GetIdleCommand() const; { return fIdleCommand; }. const char * ApplicationName() const; { return fAppImp->ApplicationName(); }. void Show(); { fAppImp->Show(); }. void Hide(); { fAppImp->Hide(); }. void Iconify(); { fAppImp->Iconify(); }. void Raise(); { fAppImp->Raise(); }. void Lower(); { fAppImp->Lower(); }. Bool_t IsCmdThread(); { return fAppImp ? fAppImp->IsCmdThread() : kTRUE; }. TApplicationImp * GetApplicationImp(); { return fAppImp;}. Int_t Argc() const; { return fArgc; }. char ** Argv",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TApplication.html:18531,avail,available,18531,root/html526/TApplication.html,https://root.cern,https://root.cern/root/html526/TApplication.html,2,['avail'],['available']
Availability," Static Protected Attributes |; Private Types |; Private Member Functions |; List of all members ; TASImage Class ReferenceGraphics » 2D Graphics » libAfterImage interface. ; Image class. ; TASImage is the concrete interface to the image processing library libAfterImage.; It allows reading and writing of images in different formats, several image manipulations (scaling, tiling, merging, etc.) and displaying in pads. The size of the image on the screen does not depend on the original size of the image but on the size of the pad. Therefore it is very easy to resize the image on the screen by resizing the pad.; Besides reading an image from a file an image can be defined by a two dimensional array of values. A palette defines the color of each value.; The image can be zoomed by defining a rectangle with the mouse. The color palette can be modified with a GUI, just select StartPaletteEditor() from the context menu.; Several examples showing how to use this class are available in the ROOT tutorials: $ROOTSYS/tutorials/image/ ; Definition at line 31 of file TASImage.h. Public Member Functions;  TASImage ();  Default image constructor. ;  ;  TASImage (const char *file, EImageFileTypes type=kUnknown);  Create an image object and read from specified file. ;  ;  TASImage (const char *name, const Double_t *imageData, UInt_t width, UInt_t height, TImagePalette *palette=nullptr);  Create an image depending on the values of imageData. ;  ;  TASImage (const char *name, const TArrayD &imageData, UInt_t width, TImagePalette *palette=nullptr);  Create an image depending on the values of imageData. ;  ;  TASImage (const char *name, const TVectorD &imageData, UInt_t width, TImagePalette *palette=nullptr);  Create an image depending on the values of imageData. ;  ;  TASImage (const TASImage &img);  Image copy constructor. ;  ;  TASImage (UInt_t w, UInt_t h);  Create an empty image. ;  ;  ~TASImage () override;  Image destructor, clean up image and visual. ;  ; void Append (const TImage *",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTASImage.html:1266,avail,available,1266,doc/master/classTASImage.html,https://root.cern,https://root.cern/doc/master/classTASImage.html,1,['avail'],['available']
Availability," Static Public Member Functions |; Protected Attributes |; Static Protected Attributes |; Private Member Functions |; Friends |; List of all members ; TEveGListTreeEditorFrame Class ReferenceGraphics » 3D Graphics » Event Display. ; Composite GUI frame for parallel display of a TGListTree and TEveGedEditor. ; Definition at line 82 of file TEveBrowser.h. Public Member Functions;  TEveGListTreeEditorFrame (const TGWindow *p=nullptr, Int_t width=250, Int_t height=700);  Constructor. ;  ;  ~TEveGListTreeEditorFrame () override;  Destructor. ;  ; void ConnectSignals ();  Connect list-tree signals. ;  ; void DisconnectSignals ();  Disconnect list-tree signals. ;  ; TEveGedEditor * GetEditor () const;  ; TGListTree * GetListTree () const;  ; TClass * IsA () const override;  ; void ItemBelowMouse (TGListTreeItem *entry, UInt_t mask);  Different item is below mouse. ;  ; void ItemClicked (TGListTreeItem *entry, Int_t btn, UInt_t mask, Int_t x, Int_t y);  Item has been clicked, based on mouse button do: ;  ; void ItemDblClicked (TGListTreeItem *item, Int_t btn);  Item has been double-clicked, potentially expand the children. ;  ; void ItemKeyPress (TGListTreeItem *entry, UInt_t keysym, UInt_t mask);  A key has been pressed for an item. ;  ; void ReconfToHorizontal ();  Reconfigure to horizontal layout, list-tree and editor side by side. ;  ; void ReconfToVertical ();  Reconfigure to vertical layout, list-tree above the editor. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TObject. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TGMainFrame;  TGMainFrame (const TGWindow *p=nullptr, UInt_t w=1, UInt_t h=1, UInt_t options=kVerticalFrame);  Create a top level main frame. ;  ;  ~TGMainFrame () override;  TGMainFrame destructor. ;  ; virtual Bool_t BindKey (const TGWindow *w, Int_t keycode, Int_t modifier) const;  Bind key to a window. ;  ; virtual void CloseWindow ();  Close and delete main frame. ;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTEveGListTreeEditorFrame.html:1114,mask,mask,1114,doc/master/classTEveGListTreeEditorFrame.html,https://root.cern,https://root.cern/doc/master/classTEveGListTreeEditorFrame.html,1,['mask'],['mask']
Availability," Static method to check if threads exist.; Returns the number of running threads. void SetPriority(TThread::EPriority pri); Set thread priority. TThread * GetThread(Long_t id); Static method to find a thread by id. TThread * GetThread(const char* name); Static method to find a thread by name. TThread * Self(); Static method returning pointer to current thread. Long_t Join(void** ret = 0); Join this thread. Long_t Join(Long_t id, void** ret = 0); Static method to join a thread by id. Long_t SelfId(); Static method returning the id for the current thread. Int_t Run(void* arg = 0); Start the thread. This starts the static method TThread::Function(); which calls the user function specified in the TThread ctor with; the arg argument. Returns 0 on success, otherwise an error number will; be returned. Int_t Kill(); Kill this thread. Returns 0 on success, otherwise an error number will; be returned. Int_t Kill(Long_t id); Static method to kill the thread by id. Returns 0 on success, otherwise; an error number will be returned. Int_t Kill(const char* name); Static method to kill thread by name. Returns 0 on success, otherwise; an error number will be returned. Int_t SetCancelOff(); Static method to turn off thread cancellation. Returns 0 on success,; otherwise an error number will be returned. Int_t SetCancelOn(); Static method to turn on thread cancellation. Returns 0 on success,; otherwise an error number will be returned. Int_t SetCancelAsynchronous(); Static method to set the cancellation response type of the calling thread; to asynchronous, i.e. cancel as soon as the cancellation request; is received. Int_t SetCancelDeferred(); Static method to set the cancellation response type of the calling thread; to deferred, i.e. cancel only at next cancellation point.; Returns 0 on success, otherwise an error number will be returned. Int_t CancelPoint(); Static method to set a cancellation point. Returns 0 on success, otherwise; an error number will be returned. Int_t CleanUpPush(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TThread.html:11749,error,error,11749,root/html530/TThread.html,https://root.cern,https://root.cern/root/html530/TThread.html,9,['error'],['error']
Availability," Strategy() const; strategy. { return fOptions.Strategy(); }. int Status() const; status code of minimizer. { return fStatus; }. double ErrorDef() const; return the statistical scale used for calculate the error; is typically 1 for Chi2 and 0.5 for likelihood minimization. { return fOptions.ErrorDef(); }. bool IsValidError() const; return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit). { return fValidError; }. void SetPrintLevel(int level); set print level. { fOptions.SetPrintLevel(level); }. void SetMaxFunctionCalls(unsigned int maxfcn); set maximum of function calls. { if (maxfcn > 0) fOptions.SetMaxFunctionCalls(maxfcn); }. void SetMaxIterations(unsigned int maxiter); set maximum iterations (one iteration can have many function calls). { if (maxiter > 0) fOptions.SetMaxIterations(maxiter); }. void SetTolerance(double tol); set the tolerance. { fOptions.SetTolerance(tol); }. void SetPrecision(double prec); set in the minimizer the objective function evaluation precision; ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. default case). { fOptions.SetPrecision(prec); }. void SetStrategy(int strategyLevel); set the strategy. { fOptions.SetStrategy(strategyLevel); }. void SetErrorDef(double up); set scale for calculating the errors. { fOptions.SetErrorDef(up); }. void SetValidError(bool on); flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit). { fValidError = on; }. void SetOptions(const ROOT::Math::MinimizerOptions& opt); set all options in one go. void SetDefaultOptions(); reset the defaut options (defined in MinimizerOptions). » Author: L. Moneta Fri Sep 22 15:06:47 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-06-30 14:23; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ROOT__Math__Minimizer.html:14050,error,errors,14050,root/html602/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html602/ROOT__Math__Minimizer.html,4,['error'],"['error', 'errors']"
Availability," Strategy() const; strategy. { return fOptions.Strategy(); }. int Status() const; status code of minimizer. { return fStatus; }. double ErrorDef() const; return the statistical scale used for calculate the error; is typically 1 for Chi2 and 0.5 for likelihood minimization. { return fOptions.ErrorDef(); }. bool IsValidError() const; return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit). { return fValidError; }. void SetPrintLevel(int level); set print level. { fOptions.SetPrintLevel(level); }. void SetMaxFunctionCalls(unsigned int maxfcn); set maximum of function calls. { if (maxfcn > 0) fOptions.SetMaxFunctionCalls(maxfcn); }. void SetMaxIterations(unsigned int maxiter); set maximum iterations (one iteration can have many function calls). { if (maxiter > 0) fOptions.SetMaxIterations(maxiter); }. void SetTolerance(double tol); set the tolerance. { fOptions.SetTolerance(tol); }. void SetPrecision(double prec); set in the minimizer the objective function evaluation precision; ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. default case). { fOptions.SetPrecision(prec); }. void SetStrategy(int strategyLevel); set the strategy. { fOptions.SetStrategy(strategyLevel); }. void SetErrorDef(double up); set scale for calculating the errors. { fOptions.SetErrorDef(up); }. void SetValidError(bool on); flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit). { fValidError = on; }. void SetOptions(const ROOT::Math::MinimizerOptions& opt); set all options in one go. void SetDefaultOptions(); reset the defaut options (defined in MinimizerOptions). » Author: L. Moneta Fri Sep 22 15:06:47 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 16:59; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/ROOT__Math__Minimizer.html:13782,error,errors,13782,root/html534/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html534/ROOT__Math__Minimizer.html,4,['error'],"['error', 'errors']"
Availability," Strategy() const; strategy. { return fOptions.Strategy(); }. int Status() const; status code of minimizer. { return fStatus; }. double ErrorDef() const; return the statistical scale used for calculate the error; is typically 1 for Chi2 and 0.5 for likelihood minimization. { return fOptions.ErrorDef(); }. bool IsValidError() const; return true if Minimizer has performed a detailed error validation (e.g. run Hesse for Minuit). { return fValidError; }. void SetPrintLevel(int level); set print level. { fOptions.SetPrintLevel(level); }. void SetMaxFunctionCalls(unsigned int maxfcn); set maximum of function calls. { if (maxfcn > 0) fOptions.SetMaxFunctionCalls(maxfcn); }. void SetMaxIterations(unsigned int maxiter); set maximum iterations (one iteration can have many function calls). { if (maxiter > 0) fOptions.SetMaxIterations(maxiter); }. void SetTolerance(double tol); set the tolerance. { fOptions.SetTolerance(tol); }. void SetPrecision(double prec); set in the minimizer the objective function evaluation precision; ( a value <=0 means the minimizer will choose its optimal value automatically, i.e. default case). { fOptions.SetPrecision(prec); }. void SetStrategy(int strategyLevel); set the strategy. { fOptions.SetStrategy(strategyLevel); }. void SetErrorDef(double up); set scale for calculating the errors. { fOptions.SetErrorDef(up); }. void SetValidError(bool on); flag to check if minimizer needs to perform accurate error analysis (e.g. run Hesse for Minuit). { fValidError = on; }. void SetOptions(const ROOT::Math::MinimizerOptions& opt); set all options in one go. void SetDefaultOptions(); reset the defaut options (defined in MinimizerOptions). » Author: L. Moneta Fri Sep 22 15:06:47 2006 » Copyright (c) 2006 LCG ROOT Math Team, CERN/PH-SFT *; » Last changed: root/mathcore:$Id$ » Last generated: 2015-09-08 17:35; This page has been automatically generated. For comments or suggestions regarding the documentation or ROOT in general please send a mail to ROOT support. ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/ROOT__Math__Minimizer.html:14050,error,errors,14050,root/html604/ROOT__Math__Minimizer.html,https://root.cern,https://root.cern/root/html604/ROOT__Math__Minimizer.html,4,['error'],"['error', 'errors']"
Availability," StreamerInfo list even if it is empty.; 3846 fClassIndex->fArray[0] = 2; //to prevent adding classes in TStreamerInfo::TagFile; 3847 ; 3848 if (listOfRules.GetEntries()) {; 3849 // Only add the list of rules if we have something to say.; 3850 list.Add(&listOfRules);; 3851 }; 3852 ; 3853 //free previous StreamerInfo record; 3854 if (fSeekInfo) MakeFree(fSeekInfo,fSeekInfo+fNbytesInfo-1);; 3855 //Create new key; 3856 TKey key(&list,""StreamerInfo"",GetBestBuffer(), this);; 3857 fKeys->Remove(&key);; 3858 fSeekInfo = key.GetSeekKey();; 3859 fNbytesInfo = key.GetNbytes();; 3860 SumBuffer(key.GetObjlen());; 3861 key.WriteFile(0);; 3862 ; 3863 fClassIndex->fArray[0] = 0;; 3864 ; 3865 list.RemoveLast(); // remove the listOfRules.; 3866}; 3867 ; 3868////////////////////////////////////////////////////////////////////////////////; 3869/// Open a file for reading through the file cache.; 3870///; 3871/// The file will be downloaded to the cache and opened from there.; 3872/// If the download fails, it will be opened remotely.; 3873/// The file will be downloaded to the directory specified by SetCacheFileDir().; 3874 ; 3875TFile *TFile::OpenFromCache(const char *name, Option_t *, const char *ftitle,; 3876 Int_t compress, Int_t netopt); 3877{; 3878 TFile *f = nullptr;; 3879 ; 3880 if (fgCacheFileDir == """") {; 3881 ::Warning(""TFile::OpenFromCache"",; 3882 ""you want to read through a cache, but you have no valid cache ""; 3883 ""directory set - reading remotely"");; 3884 ::Info(""TFile::OpenFromCache"", ""set cache directory using TFile::SetCacheFileDir()"");; 3885 } else {; 3886 TUrl fileurl(name);; 3887 ; 3888 if ((!strcmp(fileurl.GetProtocol(), ""file""))) {; 3889 // it makes no sense to read local files through a file cache; 3890 if (!fgCacheFileForce); 3891 ::Warning(""TFile::OpenFromCache"",; 3892 ""you want to read through a cache, but you are reading ""; 3893 ""local files - CACHEREAD disabled"");; 3894 } else {; 3895 // this is a remote file and worthwhile to be put into the local cache;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TFile_8cxx_source.html:140759,down,download,140759,doc/master/TFile_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TFile_8cxx_source.html,1,['down'],['download']
Availability," Sumw2 is automatically called for this; if not already set. void RebinnedAdd(const THnSparse* h, Double_t c = 1.); Add contents of h scaled by c to this histogram:; this = this + c * h; Note that if h has Sumw2 set, Sumw2 is automatically called for this; if not already set.; In contrast to Add(), RebinnedAdd() does not require consist binning of; this and h; instead, each bin's center is used to determine the target bin. Long64_t Merge(TCollection* list); Merge this with a list of THnSparses. All THnSparses provided; in the list must have the same bin layout!. void Multiply(const THnSparse* h); Multiply this histogram by histogram h; this = this * h; Note that if h has Sumw2 set, Sumw2 is automatically called for this; if not already set. void Multiply(TF1* f, Double_t c = 1.); Performs the operation: this = this*c*f1; if errors are defined, errors are also recalculated. Only bins inside the function range are recomputed.; IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after THnSparse::Multiply. void Divide(const THnSparse* h); Divide this histogram by h; this = this/(h); Note that if h has Sumw2 set, Sumw2 is automatically called for; this if not already set.; The resulting errors are calculated assuming uncorrelated content. void Divide(const THnSparse* h1, const THnSparse* h2, Double_t c1 = 1., Double_t c2 = 1., Option_t* option = """"); Replace contents of this histogram by multiplication of h1 by h2; this = (c1*h1)/(c2*h2); Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for; this if not already set.; The resulting errors are calculated assuming uncorrelated content.; However, if option =""B"" is specified, Binomial errors are computed.; In this case c1 and c2 do not make real sense and they are ignored. Bool_t CheckConsistency(const THnSparse* h, const char* tag) const; Consistency check on (some of) the param",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THnSparse.html:22334,error,errors,22334,root/html528/THnSparse.html,https://root.cern,https://root.cern/root/html528/THnSparse.html,4,['error'],['errors']
Availability," Sumw2();; 6129 ; 6130 // - Reset min- maximum; 6131 SetMinimum();; 6132 SetMaximum();; 6133 ; 6134 // - Loop on bins (including underflows/overflows); 6135 for (Int_t i = 0; i < fNcells; ++i) {; 6136 Double_t c0 = RetrieveBinContent(i);; 6137 Double_t c1 = h1->RetrieveBinContent(i);; 6138 UpdateBinContent(i, c0 * c1);; 6139 if (fSumw2.fN) {; 6140 fSumw2.fArray[i] = GetBinErrorSqUnchecked(i) * c1 * c1 + h1->GetBinErrorSqUnchecked(i) * c0 * c0;; 6141 }; 6142 }; 6143 ResetStats();; 6144 return kTRUE;; 6145}; 6146 ; 6147////////////////////////////////////////////////////////////////////////////////; 6148/// Replace contents of this histogram by multiplication of h1 by h2.; 6149///; 6150/// `this = (c1*h1)*(c2*h2)`; 6151///; 6152/// If errors of this are available (TH1::Sumw2), errors are recalculated.; 6153/// Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for this; 6154/// if not already set.; 6155///; 6156/// IMPORTANT NOTE: If you intend to use the errors of this histogram later; 6157/// you should call Sumw2 before making this operation.; 6158/// This is particularly important if you fit the histogram after TH1::Multiply; 6159///; 6160/// The function return kFALSE if the Multiply operation failed; 6161 ; 6162Bool_t TH1::Multiply(const TH1 *h1, const TH1 *h2, Double_t c1, Double_t c2, Option_t *option); 6163{; 6164 TString opt = option;; 6165 opt.ToLower();; 6166 // Bool_t binomial = kFALSE;; 6167 // if (opt.Contains(""b"")) binomial = kTRUE;; 6168 if (!h1 || !h2) {; 6169 Error(""Multiply"",""Attempt to multiply by a non-existing histogram"");; 6170 return kFALSE;; 6171 }; 6172 ; 6173 // delete buffer if it is there since it will become invalid; 6174 if (fBuffer) BufferEmpty(1);; 6175 ; 6176 if (LoggedInconsistency(""Multiply"", this, h1) >= kDifferentNumberOfBins ||; 6177 LoggedInconsistency(""Multiply"", h1, h2) >= kDifferentNumberOfBins) {; 6178 return false;; 6179 }; 6180 ; 6181 // Create Sumw2 if h1 or h2 have Sumw2 set; 6182 if (fSumw2.fN == 0 && (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH1_8cxx_source.html:242882,error,errors,242882,doc/master/TH1_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH1_8cxx_source.html,1,['error'],['errors']
Availability," TASImagePlugin(const char* ext); TASImagePlugin(const TASImagePlugin&); virtual~TASImagePlugin(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual Bool_tASImage2File(ASImage*); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMEN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TASImagePlugin.html:2136,Error,Error,2136,root/html534/TASImagePlugin.html,https://root.cern,https://root.cern/root/html534/TASImagePlugin.html,1,['Error'],['Error']
Availability," TASImagePlugin(const char* ext); TASImagePlugin(const TASImagePlugin&); virtual~TASImagePlugin(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual Bool_tASImage2File(ASImage*); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TASImagePlugin.html:2025,Error,Error,2025,root/html532/TASImagePlugin.html,https://root.cern,https://root.cern/root/html532/TASImagePlugin.html,1,['Error'],['Error']
Availability," TASPluginGS(const char* ext); TASPluginGS(const TASPluginGS&); virtual~TASPluginGS(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual Bool_tTASImagePlugin::ASImage2File(ASImage*); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual ASImage*File2ASImage(const char* filename); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TASPluginGS.html:1329,Error,Error,1329,root/html532/TASPluginGS.html,https://root.cern,https://root.cern/root/html532/TASPluginGS.html,2,['Error'],['Error']
Availability," TApplication::NoLogoOptBool_t NoLogoOpt() constDefinition TApplication.h:144; TApplication::GetApplicationsstatic TList * GetApplications()Static method returning the list of available applications.Definition TApplication.cxx:2103; TApplication::fIsRunningstd::atomic< bool > fIsRunningWindow system specific application implementation.Definition TApplication.h:61; TApplication::operator=TApplication & operator=(const TApplication &)=delete; TApplication::NeedGraphicsLibsstatic void NeedGraphicsLibs()Static method.Definition TApplication.cxx:235; TApplication::ParseRemoteLinestatic Int_t ParseRemoteLine(const char *ln, TString &hostdir, TString &user, Int_t &dbg, TString &script)Parse the content of a line starting with "".R"" (already stripped-off) The format is.Definition TApplication.cxx:1419; TApplication::fIdleTimerTTimer * fIdleTimerDefinition TApplication.h:69; TApplication::IsCmdThreadvirtual Bool_t IsCmdThread()Definition TApplication.h:135; TApplication::lsvoid ls(Option_t *option="""") const overrideShow available sessions.Definition TApplication.cxx:2087; TApplication::Raisevirtual void Raise()Definition TApplication.h:133; TApplication::fArgcInt_t fArgcDefinition TApplication.h:58; TApplication::fNoLogBool_t fNoLogDefinition TApplication.h:63; TApplication::fNoLogoBool_t fNoLogoDefinition TApplication.h:64; TApplication::GetSetupTString GetSetup()It gets the ROOT installation setup as TString.Definition TApplication.cxx:967; TApplication::HandleIdleTimervirtual void HandleIdleTimer()Handle idle timeout.Definition TApplication.cxx:577; TApplication::WorkingDirectoryconst char * WorkingDirectory() constDefinition TApplication.h:147; TApplication::QuitOptBool_t QuitOpt() constDefinition TApplication.h:145; TApplication::fSigHandlerTSignalHandler * fSigHandlerDefinition TApplication.h:70; TApplication::ArgcInt_t Argc() constDefinition TApplication.h:140; TApplication::ProcessRemotevirtual Longptr_t ProcessRemote(const char *line, Int_t *error=nullptr)Process the",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TApplication_8h_source.html:19241,avail,available,19241,doc/master/TApplication_8h_source.html,https://root.cern,https://root.cern/doc/master/TApplication_8h_source.html,1,['avail'],['available']
Availability," TArchiveMember(); TArchiveMember(const char* name); TArchiveMember(const TArchiveMember& member); virtual~TArchiveMember(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const char*GetComment() const; Long64_tGetCompressedSize() const; Long64_tGetDecompressedSize() const; virtual Option_t*TObject::GetDrawO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TArchiveMember.html:1373,Error,Error,1373,root/html532/TArchiveMember.html,https://root.cern,https://root.cern/root/html532/TArchiveMember.html,2,['Error'],['Error']
Availability," TArrayDArray of doubles (64 bits per element).Definition TArrayD.h:27; TArrayD::fArrayDouble_t * fArrayDefinition TArrayD.h:30; TArrayD::Resetvoid Reset()Definition TArrayD.h:47; TArray::fNInt_t fNDefinition TArray.h:38; TAxisClass to manage histogram axis.Definition TAxis.h:31; TCollectionCollection abstract base class.Definition TCollection.h:65; TF11-Dim function classDefinition TF1.h:233; TH1MergerDefinition TH1Merger.h:20; TH1TH1 is the base class of all histogram classes in ROOT.Definition TH1.h:59; TH1::fSumw2TArrayD fSumw2Array of sum of squares of weights.Definition TH1.h:104; TH3D3-D histogram with a double per channel (see TH1 documentation)Definition TH3.h:363; TH3::FillInt_t Fill(Double_t) overrideInvalid Fill method.Definition TH3.cxx:368; TH3::GetBinInt_t GetBin(Int_t binx, Int_t biny, Int_t binz) const overrideSee comments in TH1::GetBin.Definition TH3.cxx:1117; TObjectMother of all ROOT objects.Definition TObject.h:41; TProfile2DProfile2D histograms are used to display the mean value of Z and its error for each cell in X,...Definition TProfile2D.h:27; TProfile3DProfile3D histograms are used to display the mean value of T and its RMS for each cell in X,...Definition TProfile3D.h:27; TProfile3D::operator=TProfile3D & operator=(const TProfile3D &profile)Definition TProfile3D.cxx:162; TProfile3D::GetBinErrorSqUncheckedDouble_t GetBinErrorSqUnchecked(Int_t bin) const overrideDefinition TProfile3D.h:67; TProfile3D::DoProjectProfile2DTProfile2D * DoProjectProfile2D(const char *name, const char *title, const TAxis *projX, const TAxis *projY, bool originalRange, bool useUF, bool useOF) const overrideInternal method to project to a 2D Profile.Definition TProfile3D.cxx:1069; TProfile3D::GetWDouble_t * GetW()Definition TProfile3D.h:75; TProfile3D::MergeLong64_t Merge(TCollection *list) overrideMerge all histograms in the collection in this histogram.Definition TProfile3D.cxx:894; TProfile3D::fgApproximatestatic Bool_t fgApproximateBin error approximation option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TProfile3D_8h_source.html:10283,error,error,10283,doc/master/TProfile3D_8h_source.html,https://root.cern,https://root.cern/doc/master/TProfile3D_8h_source.html,1,['error'],['error']
Availability," TAttFill::SetFillColor ; (; Color_t ; fcolor). inlinevirtual . Set the fill area color. ; Reimplemented from TAttFill.; Definition at line 37 of file TAttFill.h. ◆ SetFillColor() [2/2]. void TGraphMultiErrors::SetFillColor ; (; Int_t ; e, . Color_t ; fcolor . ). virtual . Set Fill Color of error e (-1 = Global and x errors). ; Definition at line 2040 of file TGraphMultiErrors.cxx. ◆ SetFillColorAlpha() [1/2]. void TAttFill::SetFillColorAlpha ; (; Color_t ; fcolor, . Float_t ; falpha . ). virtual . Set a transparent fill color. ; Parameters. fcolordefines the fill color ; falphadefines the percentage of opacity from 0. (fully transparent) to 1. (fully opaque). . Notefalpha is ignored (treated as 1) if the TCanvas has no GL support activated. ; Reimplemented from TAttFill.; Definition at line 38 of file TAttFill.cxx. ◆ SetFillColorAlpha() [2/2]. void TGraphMultiErrors::SetFillColorAlpha ; (; Int_t ; e, . Color_t ; fcolor, . Float_t ; falpha . ). virtual . Set Fill Color and Alpha of error e (-1 = Global and x errors). ; Definition at line 2051 of file TGraphMultiErrors.cxx. ◆ SetFillStyle() [1/2]. void TGraphMultiErrors::SetFillStyle ; (; Int_t ; e, . Style_t ; fstyle . ). virtual . Set Fill Style of error e (-1 = Global and x errors). ; Definition at line 2062 of file TGraphMultiErrors.cxx. ◆ SetFillStyle() [2/2]. virtual void TAttFill::SetFillStyle ; (; Style_t ; fstyle). inlinevirtual . Set the fill area style. ; Reimplemented from TAttFill.; Definition at line 39 of file TAttFill.h. ◆ SetLineColor() [1/2]. virtual void TAttLine::SetLineColor ; (; Color_t ; lcolor). inlinevirtual . Set the line color. ; Reimplemented from TAttLine.; Definition at line 40 of file TAttLine.h. ◆ SetLineColor() [2/2]. void TGraphMultiErrors::SetLineColor ; (; Int_t ; e, . Color_t ; lcolor . ). virtual . Set Line Color of error e (-1 = Global and x errors). ; Definition at line 2073 of file TGraphMultiErrors.cxx. ◆ SetLineColorAlpha() [1/2]. void TAttLine::SetLineColorAlpha ; (; Color_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:71402,error,error,71402,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,2,['error'],"['error', 'errors']"
Availability," TAttLine Class ReferenceCore ROOT classes » Base ROOT classes | Graphics » Graphics attributes. ; Line Attributes class. ; This class is used (in general by secondary inheritance) by many other classes (graphics, histograms). It holds all the line attributes. Line attributes; Line attributes are:. Line Color; Line Width; Line Style. Line Color; The line color is a color index (integer) pointing in the ROOT color table. The line color of any class inheriting from TAttLine can be changed using the method SetLineColor and retrieved using the method GetLineColor. The following table shows the first 50 default colors. Color transparency; SetLineColorAlpha(), allows to set a transparent color. In the following example the line color of the histogram histo is set to blue with an opacity of 35% (i.e. a transparency of 65%). (The color kBlue itself is internally stored as fully opaque.); histo->SetLineColorAlpha(kBlue, 0.35);; kBlue@ kBlueDefinition Rtypes.h:66; The transparency is available on all platforms when the flag OpenGL.CanvasPreferGL is set to 1 in $ROOTSYS/etc/system.rootrc, or on Mac with the Cocoa backend. On the file output it is visible with PDF, PNG, Gif, JPEG, SVG, TeX ... but not PostScript.; Alternatively, you can call at the top of your script gSytle->SetCanvasPreferGL();. Or if you prefer to activate GL for a single canvas c, then use c->SetSupportGL(true);. Line Width; The line width is expressed in pixel units. The line width of any class inheriting from TAttLine can be changed using the method SetLineWidth and retrieved using the method GetLineWidth. The following picture shows the line widths from 1 to 10 pixels. Line Style; Line styles are identified via integer numbers. The line style of any class inheriting from TAttLine can be changed using the method SetLineStyle and retrieved using the method GetLineStyle.; The first 10 line styles are predefined as shown on the following picture:. Some line styles can be accessed via the following enum:; kSol",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAttLine.html:1233,avail,available,1233,doc/master/classTAttLine.html,https://root.cern,https://root.cern/doc/master/classTAttLine.html,1,['avail'],['available']
Availability," TAuthenticate(const TAuthenticate&); TAuthenticate(TSocket* sock, const char* remote, const char* proto, const char* user = """"); virtual~TAuthenticate(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Bool_tAuthenticate(); static voidAuthError(const char* where, Int_t error); Int_tAuthExists(TString User, Int_t method, const char* Options, Int_t* Message, Int_t* Rflag, CheckSecCtx_t funcheck); virtual voidTObject::Browse(TBrowser* b); voidCatchTimeOut(); Bool_tCheckNetrc(TString& user, TString& passwd); Bool_tCheckNetrc(TString& user, TString& passwd, Bool_t& pwhash, Bool_t srppwd); static Bool_tCheckProofAuth(Int_t cSec, TString& det); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static Int_tDecodeRSAPublic(const char* rsapubexport, rsa_NUMBER& n, rsa_NUMBER& d, char** rsassl = 0); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TAuthenticate.html:765,error,error,765,root/html526/TAuthenticate.html,https://root.cern,https://root.cern/root/html526/TAuthenticate.html,7,['error'],['error']
Availability," TAxis.h. ◆ SetNoAlphanumeric(). void TAxis::SetNoAlphanumeric ; (; Bool_t ; noalpha = kTRUE). inline . Definition at line 91 of file TAxis.h. ◆ SetNoExponent(). void TAxis::SetNoExponent ; (; Bool_t ; noExponent = kTRUE). inline . Set the NoExponent flag By default, an exponent of the form 10^N is used when the label value are either all very small or very large. ; The flag (in fBits) is passed to the drawing function TGaxis::PaintAxis ; Definition at line 233 of file TAxis.h. ◆ SetParent(). virtual void TAxis::SetParent ; (; TObject * ; obj). inlinevirtual . Definition at line 167 of file TAxis.h. ◆ SetRange(). void TAxis::SetRange ; (; Int_t ; first = 0, . Int_t ; last = 0 . ). virtual . Set the viewing range for the axis using bin numbers. ; Parameters. firstFirst bin of the range. ; lastLast bin of the range. To set a range using the axis coordinates, use TAxis::SetRangeUser. If first == last == 0 or if first > last or if the range specified does not intersect at all with the maximum available range [0, fNbins + 1], then the viewing range is reset by removing the bit TAxis::kAxisRange. In this case, the functions TAxis::GetFirst() and TAxis::GetLast() will return 1 and fNbins.; If the range specified partially intersects with [0, fNbins + 1], then the intersection range is accepted. For instance, if first == -2 and last == fNbins, the accepted range will be [0, fNbins] (fFirst = 0 and fLast = fNbins).; NoteFor historical reasons, SetRange(0,0) resets the range even though bin 0 is technically reserved for the underflow; in order to set the range of the axis so that it only includes the underflow, use SetRange(-1,0). ; Definition at line 1052 of file TAxis.cxx. ◆ SetRangeUser(). void TAxis::SetRangeUser ; (; Double_t ; ufirst, . Double_t ; ulast . ). virtual . Set the viewing range for the axis from ufirst to ulast (in user coordinates, that is, the ""natural"" axis coordinates). ; To set a range using the axis bin numbers, use TAxis::SetRange. ; Definition at lin",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTAxis.html:42613,avail,available,42613,doc/master/classTAxis.html,https://root.cern,https://root.cern/doc/master/classTAxis.html,1,['avail'],['available']
Availability," TBaseClass(BaseClassInfo_t* info = 0, TClass* cl = 0); virtual~TBaseClass(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TClass*GetClassPointer(B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBaseClass.html:1568,error,error,1568,root/html526/TBaseClass.html,https://root.cern,https://root.cern/root/html526/TBaseClass.html,6,"['Error', 'error']","['Error', 'error']"
Availability," TBaseClass(BaseClassInfo_t* info = 0, TClass* cl = 0); virtual~TBaseClass(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidTDictionary::CreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBaseClass.html:1478,Error,Error,1478,root/html534/TBaseClass.html,https://root.cern,https://root.cern/root/html534/TBaseClass.html,1,['Error'],['Error']
Availability," TBenchmark(); virtual~TBenchmark(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetBench(const char* name) const; Float_tGetCpuTime(const char* name); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TBenchmark.html:1406,error,error,1406,root/html526/TBenchmark.html,https://root.cern,https://root.cern/root/html526/TBenchmark.html,6,"['Error', 'error']","['Error', 'error']"
Availability," TBenchmark(); virtual~TBenchmark(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetBench(const char* name) const; Float_tGetCpuTime(const char* name); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TBenchmark.html:1353,error,error,1353,root/html534/TBenchmark.html,https://root.cern,https://root.cern/root/html534/TBenchmark.html,3,"['Error', 'error']","['Error', 'error']"
Availability," TBits(UInt_t nbits = 8); TBits(const TBits&); virtual~TBits(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidCompact(); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; UInt_tCountBits(UInt_t startBit = 0) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const ch",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBits.html:1653,Error,Error,1653,root/html532/TBits.html,https://root.cern,https://root.cern/root/html532/TBits.html,2,['Error'],['Error']
Availability," TBrowserPlugin(const TBrowserPlugin&); TBrowserPlugin(const char* name, const char* cmd = """", Int_t tab = 1, Int_t sub = -1); virtual~TBrowserPlugin(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TBrowserPlugin.html:1337,Error,Error,1337,root/html532/TBrowserPlugin.html,https://root.cern,https://root.cern/root/html532/TBrowserPlugin.html,2,['Error'],['Error']
Availability," TBuffer* GetTransientBuffer(Int_t size); Returns the transient buffer currently used by this TTree for reading/writing baskets. Int_t AddBranchToCache(const char* bname, Bool_t subbranches = kFALSE); Add branch with name bname to the Tree cache.; If bname=""*"" all branches are added to the cache.; if subbranches is true all the branches of the subbranches are; also put to the cache.; Returns 0 branch added or already included; -1 on error. Int_t AddBranchToCache(TBranch* branch, Bool_t subbranches = kFALSE); Add branch b to the Tree cache.; if subbranches is true all the branches of the subbranches are; also put to the cache.; Returns 0 branch added or already included; -1 on error. Int_t DropBranchFromCache(const char* bname, Bool_t subbranches = kFALSE); Remove the branch with name 'bname' from the Tree cache.; If bname=""*"" all branches are removed from the cache.; if subbranches is true all the branches of the subbranches are; also removed from the cache.; Returns 0 branch dropped or not in cache; -1 on error. Int_t DropBranchFromCache(TBranch* branch, Bool_t subbranches = kFALSE); Remove the branch b from the Tree cache.; if subbranches is true all the branches of the subbranches are; also removed from the cache.; Returns 0 branch dropped or not in cache; -1 on error. void AddClone(TTree* ); Add a cloned tree to our list of trees to be notified whenever we change; our branch addresses or when we are deleted. TFriendElement* AddFriend(const char* treename, const char* filename = """"); Add a TFriendElement to the list of friends. This function:; -opens a file if filename is specified; -reads a Tree with name treename from the file (current directory); -adds the Tree to the list of friends; see other AddFriend functions. A TFriendElement TF describes a TTree object TF in a file.; When a TFriendElement TF is added to the the list of friends of an; existing TTree T, any variable from TF can be referenced in a query; to T. A tree keeps a list of friends. In the context",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTree.html:38470,error,error,38470,root/html604/TTree.html,https://root.cern,https://root.cern/root/html604/TTree.html,2,['error'],['error']
Availability," TCanvas::GetWindowTopY ; (; ). Returns current top y position of window on screen. ; Definition at line 1219 of file TCanvas.cxx. ◆ GetWindowWidth(). UInt_t TCanvas::GetWindowWidth ; (; ); const. inline . Definition at line 161 of file TCanvas.h. ◆ GetWw(). UInt_t TCanvas::GetWw ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 163 of file TCanvas.h. ◆ GetXsizeReal(). Size_t TCanvas::GetXsizeReal ; (; ); const. inline . Definition at line 155 of file TCanvas.h. ◆ GetXsizeUser(). Size_t TCanvas::GetXsizeUser ; (; ); const. inline . Definition at line 153 of file TCanvas.h. ◆ GetYsizeReal(). Size_t TCanvas::GetYsizeReal ; (; ); const. inline . Definition at line 156 of file TCanvas.h. ◆ GetYsizeUser(). Size_t TCanvas::GetYsizeUser ; (; ); const. inline . Definition at line 154 of file TCanvas.h. ◆ HandleInput(). void TCanvas::HandleInput ; (; EEventType ; event, . Int_t ; px, . Int_t ; py . ). virtual . Handle Input Events. ; Handle input events, like button up/down in current canvas. ; Definition at line 1232 of file TCanvas.cxx. ◆ HasMenuBar(). Bool_t TCanvas::HasMenuBar ; (; ); const. inline . Definition at line 168 of file TCanvas.h. ◆ HighlightConnect(). void TCanvas::HighlightConnect ; (; const char * ; slot). virtual . This is ""simplification"" for function TCanvas::Connect with Highlighted signal for specific slot. ; Slot has to be defined ""UserFunction(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y)"" all parameters of UserFunction are taken from TCanvas::Highlighted ; Definition at line 1629 of file TCanvas.cxx. ◆ Highlighted(). void TCanvas::Highlighted ; (; TVirtualPad * ; pad, . TObject * ; obj, . Int_t ; x, . Int_t ; y . ). virtual . Emit Highlighted() signal. . pad is pointer to pad with highlighted histogram or graph; obj is pointer to highlighted histogram or graph; x is highlighted x bin for 1D histogram or highlighted x-th point for graph; y is highlighted y bin for 2D histogram (for 1D histogram or graph not in use",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/v632/classTCanvas.html:77912,down,down,77912,doc/v632/classTCanvas.html,https://root.cern,https://root.cern/doc/v632/classTCanvas.html,1,['down'],['down']
Availability," TCanvas::GetWindowTopY ; (; ). Returns current top y position of window on screen. ; Definition at line 1221 of file TCanvas.cxx. ◆ GetWindowWidth(). UInt_t TCanvas::GetWindowWidth ; (; ); const. inline . Definition at line 161 of file TCanvas.h. ◆ GetWw(). UInt_t TCanvas::GetWw ; (; ); const. inlineoverridevirtual . Implements TVirtualPad.; Definition at line 163 of file TCanvas.h. ◆ GetXsizeReal(). Size_t TCanvas::GetXsizeReal ; (; ); const. inline . Definition at line 155 of file TCanvas.h. ◆ GetXsizeUser(). Size_t TCanvas::GetXsizeUser ; (; ); const. inline . Definition at line 153 of file TCanvas.h. ◆ GetYsizeReal(). Size_t TCanvas::GetYsizeReal ; (; ); const. inline . Definition at line 156 of file TCanvas.h. ◆ GetYsizeUser(). Size_t TCanvas::GetYsizeUser ; (; ); const. inline . Definition at line 154 of file TCanvas.h. ◆ HandleInput(). void TCanvas::HandleInput ; (; EEventType ; event, . Int_t ; px, . Int_t ; py . ). virtual . Handle Input Events. ; Handle input events, like button up/down in current canvas. ; Definition at line 1234 of file TCanvas.cxx. ◆ HasMenuBar(). Bool_t TCanvas::HasMenuBar ; (; ); const. inline . Definition at line 168 of file TCanvas.h. ◆ HighlightConnect(). void TCanvas::HighlightConnect ; (; const char * ; slot). virtual . This is ""simplification"" for function TCanvas::Connect with Highlighted signal for specific slot. ; Slot has to be defined ""UserFunction(TVirtualPad *pad, TObject *obj, Int_t x, Int_t y)"" all parameters of UserFunction are taken from TCanvas::Highlighted ; Definition at line 1631 of file TCanvas.cxx. ◆ Highlighted(). void TCanvas::Highlighted ; (; TVirtualPad * ; pad, . TObject * ; obj, . Int_t ; x, . Int_t ; y . ). virtual . Emit Highlighted() signal. . pad is pointer to pad with highlighted histogram or graph; obj is pointer to highlighted histogram or graph; x is highlighted x bin for 1D histogram or highlighted x-th point for graph; y is highlighted y bin for 2D histogram (for 1D histogram or graph not in use",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTCanvas.html:78288,down,down,78288,doc/master/classTCanvas.html,https://root.cern,https://root.cern/doc/master/classTCanvas.html,1,['down'],['down']
Availability," TChainElement(); TChainElement(const TChainElement&); TChainElement(const char* title, const char* filename); virtual~TChainElement(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidCreatePackets(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual void*GetBaddress() const; virtual const char*GetBaddressClassName() const; virtual Bool_tGetBaddressIsPtr() const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TChainElement.html:1336,Error,Error,1336,root/html532/TChainElement.html,https://root.cern,https://root.cern/root/html532/TChainElement.html,2,['Error'],['Error']
Availability," TCivetweb(); TCivetweb(const TCivetweb&); virtual~TCivetweb(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tCreate(const char* args); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TCivetweb.html:2081,Error,Error,2081,root/html534/TCivetweb.html,https://root.cern,https://root.cern/root/html534/TCivetweb.html,1,['Error'],['Error']
Availability," TClass *oldcl) final;; 257 ; 258 Int_t SetClassSharedLibs(const char *cls, const char *libs) final;; 259 void SetGetline(const char * (*getlineFunc)(const char* prompt),; 260 void (*histaddFunc)(const char* line)) final;; 261 void Reset() final;; 262 void ResetAll() final;; 263 void ResetGlobals() final;; 264 void ResetGlobalVar(void* obj) final;; 265 void RewindDictionary() final;; 266 Int_t DeleteGlobal(void* obj) final;; 267 Int_t DeleteVariable(const char *name) final;; 268 void SaveContext() final;; 269 void SaveGlobalsContext() final;; 270 void UpdateListOfGlobals() final;; 271 void UpdateListOfGlobalFunctions() final;; 272 void UpdateListOfTypes() final;; 273 void SetClassInfo(TClass* cl, Bool_t reload = kFALSE, Bool_t silent = kFALSE) final;; 274 ; 275 ECheckClassInfo CheckClassInfo(const char *name, Bool_t autoload, Bool_t isClassOrNamespaceOnly = kFALSE) final;; 276 ; 277 Bool_t CheckClassTemplate(const char *name) final;; 278 Longptr_t Calc(const char* line, EErrorCode* error = nullptr) final;; 279 void CreateListOfBaseClasses(TClass* cl) const final;; 280 void CreateListOfDataMembers(TClass* cl) const final;; 281 void CreateListOfMethods(TClass* cl) const final;; 282 void CreateListOfMethodArgs(TFunction* m) const final;; 283 void UpdateListOfMethods(TClass* cl) const final;; 284 void UpdateListOfDataMembers(TClass* cl) const;; 285 ; 286 DeclId_t GetDataMember(ClassInfo_t *cl, const char *name) const final;; 287 DeclId_t GetDataMemberAtAddr(const void *addr) const final;; 288 DeclId_t GetDataMemberWithValue(const void *ptrvalue) const final;; 289 DeclId_t GetEnum(TClass *cl, const char *name) const final;; 290 TEnum* CreateEnum(void *VD, TClass *cl) const final;; 291 void UpdateEnumConstants(TEnum* enumObj, TClass* cl) const final;; 292 void LoadEnums(TListOfEnums& cl) const final;; 293 std::string ToString(const char* type, void *obj) final;; 294 TString GetMangledName(TClass* cl, const char* method, const char* params, Bool_t objectIsConst = kFALSE) f",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8h_source.html:12291,error,error,12291,doc/master/TCling_8h_source.html,https://root.cern,https://root.cern/doc/master/TCling_8h_source.html,1,['error'],['error']
Availability," TClass* cl, const char* method,; 5258 const char* params, Bool_t objectIsConst, int* error); 5259{; 5260 R__LOCKGUARD_CLING(gInterpreterMutex);; 5261 if (error) {; 5262 *error = TInterpreter::kNoError;; 5263 }; 5264 // If the actual class of this object inherits 2nd (or more) from TObject,; 5265 // 'obj' is unlikely to be the start of the object (as described by IsA()),; 5266 // hence gInterpreter->Execute will improperly correct the offset.; 5267 void* addr = cl->DynamicCast(TObject::Class(), obj, kFALSE);; 5268 Longptr_t offset = 0L;; 5269 TClingCallFunc func(GetInterpreterImpl());; 5270 func.SetFunc((TClingClassInfo*)cl->GetClassInfo(), method, params, objectIsConst, &offset);; 5271 void* address = (void*)((Longptr_t)addr + offset);; 5272 func.Exec(address);; 5273}; 5274 ; 5275////////////////////////////////////////////////////////////////////////////////; 5276 ; 5277void TCling::Execute(TObject* obj, TClass* cl, const char* method,; 5278 const char* params, int* error); 5279{; 5280 Execute(obj,cl,method,params,false,error);; 5281}; 5282 ; 5283////////////////////////////////////////////////////////////////////////////////; 5284/// Execute a method from class cl with the arguments in array params; 5285/// (params[0] ... params[n] = array of TObjString parameters).; 5286/// Convert the TObjArray array of TObjString parameters to a character; 5287/// string of comma separated parameters.; 5288/// The parameters of type 'char' are enclosed in double quotes and all; 5289/// internal quotes are escaped.; 5290 ; 5291void TCling::Execute(TObject* obj, TClass* cl, TMethod* method,; 5292 TObjArray* params, int* error); 5293{; 5294 if (!method) {; 5295 Error(""Execute"", ""No method was defined"");; 5296 return;; 5297 }; 5298 TList* argList = method->GetListOfMethodArgs();; 5299 // Check number of actual parameters against of expected formal ones; 5300 ; 5301 Int_t nparms = argList->LastIndex() + 1;; 5302 Int_t argc = params ? params->GetEntries() : 0;; 5303 ; 5304 if (argc ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:205588,error,error,205588,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,2,['error'],['error']
Availability," TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual RooAbsStudy*clone(const char* = """") const; virtual TObject*RooAbsStudy::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; RooLinkedList*RooAbsStudy::detailedData(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidRooAbsStudy::dump(); virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Bool_texecute(); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual Bool_tfinalize(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObject::InheritsFrom(const char* classname) const; virtual Bo",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/RooStats__ToyMCStudy.html:1595,error,error,1595,root/html530/RooStats__ToyMCStudy.html,https://root.cern,https://root.cern/root/html530/RooStats__ToyMCStudy.html,9,['error'],['error']
Availability," TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual voidTFileCacheRead::Close(Option_t* option = """"); virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDisable(); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual Int_tDropBranch(TBranch* b, Bool_t subbranches = kFALSE); virtual Int_tDropBranch(const char* branch, Bool_t subbranches = kFALSE); virtual voidTObject::Dump() constMENU ; virtual voidEnable(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual Bool_tFillBuffer(); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Int_tTFileCacheRead::GetBufferSize() const; virtual Long64_tTFileCacheRead::GetBytesRead() const; virtual Long64_tTFileCacheRead::GetBytesReadExtra() const; const TObjArray*GetCachedBranches() const; TTreeCache::EPrefillTypeGetConfiguredPrefillType() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Double_tGetEfficiency() const; Double_tGetEfficiencyRel() const; virtual Int_tGetEntryMax() const; virtual Int_tGetEntryMin() const; TFile*TFileCacheRead::GetFile() const; virtual const char*TObject::GetIconName() const; static Int_tGetLearnEntries(); virtual T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html604/TTreeCache.html:10770,error,error,10770,root/html604/TTreeCache.html,https://root.cern,https://root.cern/root/html604/TTreeCache.html,2,['error'],['error']
Availability," TClassTable(const TClassTable&); virtual~TClassTable(); voidTObject::AbstractMethod(const char* method) const; static voidAdd(const char* cname, Version_t id, const type_info& info, VoidFuncPtr_t dict, Int_t pragmabits); virtual voidTObject::AppendPad(Option_t* option = """"); static char*At(int index); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); intClasses(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* nam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TClassTable.html:1583,Error,Error,1583,root/html532/TClassTable.html,https://root.cern,https://root.cern/root/html532/TClassTable.html,2,['Error'],['Error']
Availability," TCling.cxx:3859; TCling::LoadPCMImplvoid LoadPCMImpl(TFile &pcmFile)Tries to load a PCM from TFile; returns true on success.Definition TCling.cxx:1696; TCling::IsAutoLoadNamespaceCandidateBool_t IsAutoLoadNamespaceCandidate(const clang::NamespaceDecl *nsDecl)Definition TCling.cxx:6627; TCling::ResetGlobalsvoid ResetGlobals() finalReset in Cling the list of global variables to the state saved by the last call to TCling::SaveGlobal...Definition TCling.cxx:3740; TCling::CodeCompletevoid CodeComplete(const std::string &, size_t &, std::vector< std::string > &) finalThe call to Cling's tab complition.Definition TCling.cxx:7670; TCling::ResetGlobalVarvoid ResetGlobalVar(void *obj) finalReset the Cling 'user' global objects/variables state to the state saved by the last call to TCling::...Definition TCling.cxx:3754; TCling::MapCppNameconst char * MapCppName(const char *) const finalInterface to cling function.Definition TCling.cxx:7523; TCling::CalcLongptr_t Calc(const char *line, EErrorCode *error=nullptr) finalDirectly execute an executable statement (e.g.Definition TCling.cxx:3585; TCling::ReloadAllSharedLibraryMapsInt_t ReloadAllSharedLibraryMaps() finalReload the library map entries coming from all the loaded shared libraries, after first unloading the...Definition TCling.cxx:5937; TCling::UpdateListOfGlobalFunctionsvoid UpdateListOfGlobalFunctions() finalNo op: see TClingCallbacks (used to update the list of global functions)Definition TCling.cxx:3892; TCling::DataMemberInfo_Deletevoid DataMemberInfo_Delete(DataMemberInfo_t *dminfo) const finalDefinition TCling.cxx:8592; TCling::fPromptchar fPrompt[64]Definition TCling.h:110; TCling::GetTopLevelMacroNameconst char * GetTopLevelMacroName() const finalReturn the file name of the current un-included interpreted file.Definition TCling.cxx:5416; TCling::fPrevLoadedDynLibInfovoid * fPrevLoadedDynLibInfoDefinition TCling.h:137; TCling::UpdateListOfDataMembersvoid UpdateListOfDataMembers(TClass *cl) constUpdate the list of p",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:453768,error,error,453768,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,2,['error'],['error']
Availability," TCling.cxx:8584; TCling::MethodArgInfo_TypeInfoTypeInfo_t * MethodArgInfo_TypeInfo(MethodArgInfo_t *marginfo) constDefinition TCling.cxx:9328; TCling::DataMemberInfo_FactoryCopyDataMemberInfo_t * DataMemberInfo_FactoryCopy(DataMemberInfo_t *dminfo) const finalDefinition TCling.cxx:8618; TCling::HandleNewTransactionBool_t HandleNewTransaction(const cling::Transaction &T)Helper function to increase the internal Cling count of transactions that change the AST.Definition TCling.cxx:3665; TCling::ReadRootmapFileint ReadRootmapFile(const char *rootmapfile, TUniqueString *uniqueString=nullptr)Read and parse a rootmapfile in its new format, and return 0 in case of success, -1 if the file has a...Definition TCling.cxx:5528; TCling::fSpecialObjectMapsstd::map< SpecialObjectLookupCtx_t, SpecialObjectMap_t > fSpecialObjectMapsDefinition TCling.h:153; TCling::ClassInfo_Nextint ClassInfo_Next(ClassInfo_t *info) const finalDefinition TCling.cxx:8352; TCling::SetErrmsgcallbackvoid SetErrmsgcallback(void *p) const finalSet a callback to receive error messages.Definition TCling.cxx:7606; TCling::MethodArgInfo_IsValidbool MethodArgInfo_IsValid(MethodArgInfo_t *marginfo) const finalDefinition TCling.cxx:9272; TCling::TypeInfo_Sizeint TypeInfo_Size(TypeInfo_t *tinfo) const finalDefinition TCling.cxx:9412; TCling::DeleteGlobalInt_t DeleteGlobal(void *obj) finalDelete obj from Cling symbol table so it cannot be accessed anymore.Definition TCling.cxx:3783; TCling::GetSecurityErrorint GetSecurityError() const finalInterface to cling function.Definition TCling.cxx:7487; TCling::SetTempLevelvoid SetTempLevel(int val) const finalCreate / close a scope for temporaries.Definition TCling.cxx:7642; TCling::fPayloadsstd::set< size_t > fPayloadsDefinition TCling.h:122; TCling::FuncTempInfo_TemplateNargsUInt_t FuncTempInfo_TemplateNargs(FuncTempInfo_t *) const finalReturn the maximum number of template arguments of the function template described by ft_info.Definition TCling.cxx:8849; TCling::GetFunc",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TCling_8cxx_source.html:428931,error,error,428931,doc/master/TCling_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TCling_8cxx_source.html,2,['error'],['error']
Availability," TClonesArray *fTracks in the Event example). If ""->"" is not; specified, the pointer member is read via buf >> pointer. In this case; the pointer may be null. Note that the option with ""->"" is faster to; read or write and it also consumes less space in the file. OPTION 2. The option AutoDelete is set; TBranch *branch = T.GetBranch(""event"");; branch->SetAddress(&event);; branch->SetAutoDelete(kTRUE);; for (Long64_t i=0;i<nentries;i++) {; T.GetEntry(i);; // the object event has been filled at this point; }; In this case, at each iteration, the object event is deleted by GetEntry; and a new instance of Event is created and filled. OPTION 3. Same as option 1, but you delete yourself the event.; for (Long64_t i=0;i<nentries;i++) {; delete event;; event = 0; // EXTREMELY IMPORTANT; T.GetEntry(i);; // the object event has been filled at this point; }. It is strongly recommended to use the default option 1. It has the; additional advantage that functions like TTree::Draw (internally calling; TTree::GetEntry) will be functional even when the classes in the file are; not available. Note: See the comments in TBranchElement::SetAddress() for the; object ownership policy of the underlying (user) data. TEntryList* GetEntryList(); Returns the entry list, set to this tree. Long64_t GetEntryNumber(Long64_t entry) const; Return entry number corresponding to entry. if no TEntryList set returns entry; else returns the entry number corresponding to the list index=entry. Long64_t GetEntryNumberWithBestIndex(Long64_t major, Long64_t minor = 0) const; Return entry number corresponding to major and minor number.; Note that this function returns only the entry number, not the data; To read the data corresponding to an entry number, use TTree::GetEntryWithIndex; the BuildIndex function has created a table of Long64_t* of sorted values; corresponding to val = major<<31 + minor;; The function performs binary search in this sorted table.; If it finds a pair that maches val, it returns directly t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TTree.html:98383,avail,available,98383,root/html534/TTree.html,https://root.cern,https://root.cern/root/html534/TTree.html,6,['avail'],['available']
Availability," TClonesArray *fTracks in the Event example). If ""->"" is not; specified, the pointer member is read via buf >> pointer. In this case; the pointer may be null. Note that the option with ""->"" is faster to; read or write and it also consumes less space in the file. OPTION 2. The option AutoDelete is set; TBranch *branch = T.GetBranch(""event"");; branch->SetAddress(&event);; branch->SetAutoDelete(kTRUE);; for (Long64_t i=0;i<nentries;i++) {; T.GetEntry(i);; // the object event has been filled at this point; }; In this case, at each iteration, the object event is deleted by GetEntry; and a new instance of Event is created and filled. OPTION 3. Same as option 1, but you delete yourself the event.; for (Long64_t i=0;i<nentries;i++) {; delete event;; event = 0; // EXTREMELY IMPORTANT; T.GetEntry(i);; // the object event has been filled at this point; }. It is strongly recommended to use the default option 1. It has the; additional advantage that functions like TTree::Draw (internally calling; TTree::GetEntry) will be functional even when the classes in the file are; not available. TEntryList* GetEntryList(); Returns the entry list, set to this tree. Long64_t GetEntryNumber(Long64_t entry) const; Return entry number corresponding to entry. if no TEntryList set returns entry; else returns the entry number corresponding to the list index=entry. Long64_t GetEntryNumberWithBestIndex(Int_t major, Int_t minor = 0) const; Return entry number corresponding to major and minor number.; Note that this function returns only the entry number, not the data; To read the data corresponding to an entry number, use TTree::GetEntryWithIndex; the BuildIndex function has created a table of Long64_t* of sorted values; corresponding to val = major<<31 + minor;; The function performs binary search in this sorted table.; If it finds a pair that maches val, it returns directly the; index in the table.; If an entry corresponding to major and minor is not found, the function; returns the index of the ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TTree.html:94646,avail,available,94646,root/html532/TTree.html,https://root.cern,https://root.cern/root/html532/TTree.html,2,['avail'],['available']
Availability," TClonesArray *fTracks in the Event example).; If ""->"" is not specified, the pointer member is read via buf >> pointer.; In this case the pointer may be null. Note that the option with ""->""; is faster to read or write and it also consumes less space in the file. OPTION 2. The option AutoDelete is set; TBranch *branch = T.GetBranch(""event"");; branch->SetAddress(&event);; branch->SetAutoDelete(kTRUE);; for (Long64_t i=0;i<nentries;i++) {; T.GetEntry(i);; // the object event has been filled at this point; }; In this case, at each iteration, the object event is deleted by GetEntry; and a new instance of Event is created and filled. OPTION 3. Same as option 1, but you delete yourself the event.; for (Long64_t i=0;i<nentries;i++) {; delete event;; event = 0; // EXTREMELY IMPORTANT; T.GetEntry(i);; // the object event has been filled at this point; }. It is strongly recommended to use the default option 1. It has the; additional advantage that functions like TTree::Draw (internally; calling TTree::GetEntry) will be functional even when the classes in the; file are not available. TEntryList* GetEntryList(); Returns the entry list, set to this tree. Long64_t GetEntryNumber(Long64_t entry) const; Return entry number corresponding to entry. if no TEntryList set returns entry; else returns the entry number corresponding to the list index=entry. Long64_t GetEntryNumberWithBestIndex(Int_t major, Int_t minor = 0) const; Return entry number corresponding to major and minor number.; Note that this function returns only the entry number, not the data; To read the data corresponding to an entry number, use TTree::GetEntryWithIndex; the BuildIndex function has created a table of Long64_t* of sorted values; corresponding to val = major<<31 + minor;; The function performs binary search in this sorted table.; If it finds a pair that maches val, it returns directly the; index in the table.; If an entry corresponding to major and minor is not found, the function; returns the index of the ma",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TTree.html:90451,avail,available,90451,root/html528/TTree.html,https://root.cern,https://root.cern/root/html528/TTree.html,2,['avail'],['available']
Availability," TColorWheel(); virtual~TColorWheel(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Optio",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TColorWheel.html:2425,error,error,2425,root/html526/TColorWheel.html,https://root.cern,https://root.cern/root/html526/TColorWheel.html,9,"['Error', 'error']","['Error', 'error']"
Availability," TCondition(TMutex* m = 0); virtual~TCondition(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Int_tBroadcast(); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCondition.html:1508,error,error,1508,root/html526/TCondition.html,https://root.cern,https://root.cern/root/html526/TCondition.html,9,"['Error', 'error']","['Error', 'error']"
Availability," TCondor(const char* pool = """"); TCondor(const TCondor&); virtual~TCondor(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); TList*Claim(Int_t n, const char* cmd); TCondorSlave*Claim(const char* vmname, const char* cmd); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TCondor.html:1466,Error,Error,1466,root/html532/TCondor.html,https://root.cern,https://root.cern/root/html532/TCondor.html,2,['Error'],['Error']
Availability," TCondorSlave(); TCondorSlave(const TCondorSlave&); ~TCondorSlave(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCondorSlave.html:1506,error,error,1506,root/html526/TCondorSlave.html,https://root.cern,https://root.cern/root/html526/TCondorSlave.html,9,"['Error', 'error']","['Error', 'error']"
Availability," TCut(); TCut(const char* title); TCut(const TCut& cut); TCut(const char* name, const char* title); virtual~TCut(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TCut.html:1824,Error,Error,1824,root/html532/TCut.html,https://root.cern,https://root.cern/root/html532/TCut.html,2,['Error'],['Error']
Availability," TCut(const TCut& cut); TCut(const char* name, const char* title); virtual~TCut(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, const char* msgfmt) const; virtual Bool_tTObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html526/TCut.html:1953,error,error,1953,root/html526/TCut.html,https://root.cern,https://root.cern/root/html526/TCut.html,7,['error'],['error']
Availability," TDCacheFile.h. ◆ ReadBuffer() [1/2]. Bool_t TDCacheFile::ReadBuffer ; (; char * ; buf, . Int_t ; len . ). overridevirtual . Read specified byte range from remote file via dCache daemon. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 211 of file TDCacheFile.cxx. ◆ ReadBuffer() [2/2]. Bool_t TDCacheFile::ReadBuffer ; (; char * ; buf, . Long64_t ; pos, . Int_t ; len . ). overridevirtual . Read specified byte range from remote file via dCache daemon. ; Returns kTRUE in case of error. ; Reimplemented from TFile.; Definition at line 227 of file TDCacheFile.cxx. ◆ ReadBuffers(). Bool_t TDCacheFile::ReadBuffers ; (; char * ; buf, . Long64_t * ; pos, . Int_t * ; len, . Int_t ; nbuf . ). overridevirtual . Read the nbuf blocks described in arrays pos and len, where pos[i] is the seek position of block i of length len[i]. ; Note that for nbuf=1, this call is equivalent to TFile::ReafBuffer. This function is overloaded by TNetFile, TWebFile, etc. Returns kTRUE in case of failure. ; Reimplemented from TFile.; Definition at line 247 of file TDCacheFile.cxx. ◆ ResetErrno(). void TDCacheFile::ResetErrno ; (; ); const. overridevirtual . Method resetting the dc_errno and errno. ; Reimplemented from TFile.; Definition at line 577 of file TDCacheFile.cxx. ◆ SetOnError(). void TDCacheFile::SetOnError ; (; EOnErrorAction ; a = kOnErrorDefault). static . Set on error handler. ; Definition at line 388 of file TDCacheFile.cxx. ◆ SetOpenTimeout(). void TDCacheFile::SetOpenTimeout ; (; UInt_t ; secs). static . Set file open timeout. ; Definition at line 380 of file TDCacheFile.cxx. ◆ SetReplyHostName(). void TDCacheFile::SetReplyHostName ; (; const char * ; host_name). static . Set reply host name. ; Definition at line 396 of file TDCacheFile.cxx. ◆ Stage(). Bool_t TDCacheFile::Stage ; (; const char * ; path, . UInt_t ; secs, . const char * ; location = 0 . ). static . Stage() returns kTRUE on success and kFALSE on failure. ; Definition at line 340 of file T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDCacheFile.html:46465,failure,failure,46465,doc/master/classTDCacheFile.html,https://root.cern,https://root.cern/doc/master/classTDCacheFile.html,1,['failure'],['failure']
Availability," TDNDData(Atom_t dt = kNone, void* d = 0, Int_t len = 0, Atom_t act = kNone); virtual~TDNDData(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Opti",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDNDData.html:1216,Error,Error,1216,root/html532/TDNDData.html,https://root.cern,https://root.cern/root/html532/TDNDData.html,2,['Error'],['Error']
Availability," TDSet(); TDSet(const TChain& chain, Bool_t withfriends = kTRUE); TDSet(const char* name, const char* objname = ""*"", const char* dir = ""/"", const char* type = 0); virtual~TDSet(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tAdd(TDSet* set); virtual Bool_tAdd(TFileInfo* fileinfo, const char* meta = 0); virtual Bool_tAdd(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); virtual Bool_tAdd(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); virtual voidAddFriend(TDSet* friendset, const char* alias); voidAddInput(TObject* obj); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDSet.html:1547,avail,availableOnly,1547,root/html528/TDSet.html,https://root.cern,https://root.cern/root/html528/TDSet.html,6,['avail'],['availableOnly']
Availability," TDSetElement * Next (Long64_t totalEntries=-1) override;  Get the next packet. ;  ; void Reset () override;  Reset this instance. ;  ; void SetProofServ (TProofServ *serv);  Set the reference TProofServ instance. ;  ; void Streamer (TBuffer &) override;  Stream an object of class TDSet. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TDSet;  TDSet ();  iterator on fSrvMaps ;  ;  TDSet (const char *name, const char *objname=""*"", const char *dir=""/"", const char *type=0);  Create a named TDSet object. ;  ;  TDSet (const TChain &chain, Bool_t withfriends=kTRUE);  Create a named TDSet object from existing TChain 'chain'. ;  ;  ~TDSet () override;  Cleanup. ;  ; virtual Bool_t Add (const char *file, const char *objname=0, const char *dir=0, Long64_t first=0, Long64_t num=-1, const char *msd=0);  Add file to list of files to be analyzed. ;  ; virtual Bool_t Add (TCollection *fileinfo, const char *meta=0, Bool_t availableOnly=kFALSE, TCollection *badlist=0);  Add files passed as list of TFileInfo, TUrl or TObjString objects . ;  ; virtual Bool_t Add (TDSet *set);  Add specified data set to the this set. ;  ; virtual Bool_t Add (TFileInfo *fileinfo, const char *meta=0);  Add file described by 'fi' to list of files to be analyzed. ;  ; virtual void AddFriend (TDSet *friendset, const char *alias);  Add friend dataset to this set. ;  ; void AddInput (TObject *obj);  Add objects that might be needed during the processing of the selector (see Process()). ;  ; void ClearInput ();  Clear input object list. ;  ; TDSetElement * Current () const;  ; virtual Long64_t Draw (const char *varexp, const char *selection, Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0);  Draw expression varexp for specified entries. ;  ; virtual Long64_t Draw (const char *varexp, const TCut &selection, Option_t *option="""", Long64_t nentries=-1, Long64_t firstentry=0);  Draw expression varexp for specified entries. ;  ; void Draw (",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTDSetProxy.html:1491,avail,availableOnly,1491,doc/master/classTDSetProxy.html,https://root.cern,https://root.cern/doc/master/classTDSetProxy.html,1,['avail'],['availableOnly']
Availability," TDSetProxy(); TDSetProxy(const char* type, const char* objname = ""*"", const char* dir = ""/""); ~TDSetProxy(); voidTObject::AbstractMethod(const char* method) const; virtual Bool_tTDSet::Add(TDSet* set); virtual Bool_tTDSet::Add(TFileInfo* fileinfo, const char* meta = 0); virtual Bool_tTDSet::Add(TCollection* fileinfo, const char* meta = 0, Bool_t availableOnly = kFALSE, TCollection* badlist = 0); virtual Bool_tTDSet::Add(const char* file, const char* objname = 0, const char* dir = 0, Long64_t first = 0, Long64_t num = -1, const char* msd = 0); virtual voidTDSet::AddFriend(TDSet* friendset, const char* alias); voidTDSet::AddInput(TObject* obj); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); voidTDSet::ClearInput(); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; TDSetElement*TDSet::Current() const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTDSet::Draw(Option_t* opt); virtual Long64_tTDSet::Draw(const char* varexp, const char* selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual Long64_tTDSet::Draw(const char* varexp, const TCut& selection, Option_t* option = """", Long64_t nentries = -1, Long64_t firstentry = 0)MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawC",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TDSetProxy.html:719,avail,availableOnly,719,root/html528/TDSetProxy.html,https://root.cern,https://root.cern/root/html528/TDSetProxy.html,6,['avail'],['availableOnly']
Availability," TDataType(TypedefInfo_t* info = 0); TDataType(const char* typenam); virtual~TDataType(); voidTObject::AbstractMethod(const char* method) const; static voidAddBuiltins(TCollection* types); virtual voidTObject::AppendPad(Option_t* option = """"); const char*AsString(void* buf) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDataType.html:1535,Error,Error,1535,root/html532/TDataType.html,https://root.cern,https://root.cern/root/html532/TDataType.html,1,['Error'],['Error']
Availability," TDataType(TypedefInfo_t* info = 0); TDataType(const char* typenam); virtual~TDataType(); voidTObject::AbstractMethod(const char* method) const; static voidAddBuiltins(TCollection* types); virtual voidTObject::AppendPad(Option_t* option = """"); const char*AsString(void* buf) const; virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidTDictionary::CreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDataType.html:1574,Error,Error,1574,root/html534/TDataType.html,https://root.cern,https://root.cern/root/html534/TDataType.html,1,['Error'],['Error']
Availability," TDictAttributeMap(); virtual~TDictAttributeMap(); voidTObject::AbstractMethod(const char* method) const; voidAddProperty(const char* key, const char* value); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*T",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TDictAttributeMap.html:1404,Error,Error,1404,root/html534/TDictAttributeMap.html,https://root.cern,https://root.cern/root/html534/TDictAttributeMap.html,1,['Error'],['Error']
Availability," TDocHtmlDirective(); TDocHtmlDirective(const TDocHtmlDirective&); virtual~TDocHtmlDirective(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTDocDirective::DeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDocHtmlDirective.html:1463,Error,Error,1463,root/html532/TDocHtmlDirective.html,https://root.cern,https://root.cern/root/html532/TDocHtmlDirective.html,2,['Error'],['Error']
Availability," TDocLatexDirective(); TDocLatexDirective(const TDocLatexDirective&); virtual~TDocLatexDirective(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDocLatexDirective.html:2033,Error,Error,2033,root/html532/TDocLatexDirective.html,https://root.cern,https://root.cern/root/html532/TDocLatexDirective.html,2,['Error'],['Error']
Availability," TDocMacroDirective(); TDocMacroDirective(const TDocMacroDirective&); virtual~TDocMacroDirective(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddLine(const TSubString& line); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidDeleteOutput() const; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* param",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TDocMacroDirective.html:1882,Error,Error,1882,root/html532/TDocMacroDirective.html,https://root.cern,https://root.cern/root/html532/TDocMacroDirective.html,2,['Error'],['Error']
Availability, TEnvRec(); TEnvRec(const TEnvRec&); ~TEnvRec(); voidTObject::Abst,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEnvRec.html:2839,error,error,2839,root/html530/TEnvRec.html,https://root.cern,https://root.cern/root/html530/TEnvRec.html,12,"['Error', 'error']","['Error', 'error']"
Availability, TEnvRec(); TEnvRec(const TEnvRec&); ~TEnvRec(); voidTObject::Abstra,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEnvRec.html:2837,error,error,2837,root/html528/TEnvRec.html,https://root.cern,https://root.cern/root/html528/TEnvRec.html,2,['error'],['error']
Availability," TEveCluster(); TEveCluster(const TEveCluster&); virtual~TEveCluster(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveCluster.html:1331,error,error,1331,root/html528/TEveCluster.html,https://root.cern,https://root.cern/root/html528/TEveCluster.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TEveFrameBox(); virtual~TEveFrameBox(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTEveRefBackPtr::DecRefCount(TEveElement* re); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Color_tGetBackColor() const; UChar_t*GetBackRGBA(); Bool_tGetDrawBack() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Color_tGetFrameColor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveFrameBox.html:1325,Error,Error,1325,root/html532/TEveFrameBox.html,https://root.cern,https://root.cern/root/html532/TEveFrameBox.html,2,['Error'],['Error']
Availability," TEveGeoShapeExtract(const char* n = ""TEveGeoShapeExtract"", const char* t = 0); virtual~TEveGeoShapeExtract(); voidTObject::AbstractMethod(const char* method) const; voidAddElement(TEveGeoShapeExtract* gse); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveGeoShapeExtract.html:1493,Error,Error,1493,root/html532/TEveGeoShapeExtract.html,https://root.cern,https://root.cern/root/html532/TEveGeoShapeExtract.html,2,['Error'],['Error']
Availability," TEveGridStepper(Int_t sm = kSM_XYZ); virtual~TEveGridStepper(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetCx() const; Int_tGetCy() const; Int_tGetCz() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Float_tGetDx() const; Float_tGetDy() const; Float_tGetDz() const; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveGridStepper.html:1419,error,error,1419,root/html528/TEveGridStepper.html,https://root.cern,https://root.cern/root/html528/TEveGridStepper.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TEveHit(); TEveHit(const TEveHit&); virtual~TEveHit(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveHit.html:1303,error,error,1303,root/html528/TEveHit.html,https://root.cern,https://root.cern/root/html528/TEveHit.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TEveMCRecCrossRef(); TEveMCRecCrossRef(const TEveMCRecCrossRef&); virtual~TEveMCRecCrossRef(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::G",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveMCRecCrossRef.html:1244,Error,Error,1244,root/html532/TEveMCRecCrossRef.html,https://root.cern,https://root.cern/root/html532/TEveMCRecCrossRef.html,2,['Error'],['Error']
Availability," TEveMacro(); TEveMacro(const TEveMacro&); TEveMacro(const char* name); virtual~TEveMacro(); voidTObject::AbstractMethod(const char* method) const; virtual TObjString*TMacro::AddLine(const char* text); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTMacro::Browse(TBrowser* b); virtual TMD5*TMacro::Checksum(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual Long_tExec(const char* params = ""0"", Int_t* error = 0); virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveMacro.html:1390,Error,Error,1390,root/html532/TEveMacro.html,https://root.cern,https://root.cern/root/html532/TEveMacro.html,2,['Error'],['Error']
Availability," TEveRecCascade(); TEveRecCascade(const TEveRecCascade&); virtual~TEveRecCascade(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveRecCascade.html:1352,error,error,1352,root/html528/TEveRecCascade.html,https://root.cern,https://root.cern/root/html528/TEveRecCascade.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TEveRecKink(); TEveRecKink(const TEveRecKink&); virtual~TEveRecKink(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveRecKink.html:1331,error,error,1331,root/html528/TEveRecKink.html,https://root.cern,https://root.cern/root/html528/TEveRecKink.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TEveRecTrack(); TEveRecTrack(const TEveRecTrack&); virtual~TEveRecTrack(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveRecTrack.html:1338,error,error,1338,root/html528/TEveRecTrack.html,https://root.cern,https://root.cern/root/html528/TEveRecTrack.html,1,['error'],['error']
Availability," TEveRecTrackT<double>(); TEveRecTrackT<double>(const TEveRecTrackT<double>&); virtual~TEveRecTrackT<double>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveRecTrackT_double_.html:1364,Error,Error,1364,root/html532/TEveRecTrackT_double_.html,https://root.cern,https://root.cern/root/html532/TEveRecTrackT_double_.html,2,['Error'],['Error']
Availability," TEveRecTrackT<float>(); TEveRecTrackT<float>(const TEveRecTrackT<float>&); virtual~TEveRecTrackT<float>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEveRecTrackT_float_.html:1370,Error,Error,1370,root/html532/TEveRecTrackT_float_.html,https://root.cern,https://root.cern/root/html532/TEveRecTrackT_float_.html,2,['Error'],['Error']
Availability," TEveRecV0(); TEveRecV0(const TEveRecV0&); virtual~TEveRecV0(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveRecV0.html:1317,error,error,1317,root/html528/TEveRecV0.html,https://root.cern,https://root.cern/root/html528/TEveRecV0.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TEveRhoZProjection(); TEveRhoZProjection(const TEveRhoZProjection&); virtual~TEveRhoZProjection(); virtual Bool_tAcceptSegment(TEveVector& v1, TEveVector& v2, Float_t tolerance) const; voidTEveProjection::AddPreScaleEntry(Int_t coord, Float_t max_val, Float_t scale); virtual voidTEveProjection::BisectBreakPoint(TEveVector& vL, TEveVector& vR, Float_t eps_sqr = 1e-10f); voidTEveProjection::ChangePreScaleEntry(Int_t coord, Int_t entry, Float_t new_scale); static TClass*Class(); voidTEveProjection::ClearPreScales(); Float_tTEveProjection::GetDistortion() const; Float_tTEveProjection::GetFixR() const; Float_tTEveProjection::GetFixZ() const; TEveProjection::EGeoMode_eTEveProjection::GetGeoMode() const; Float_tTEveProjection::GetLimit(Int_t i, Bool_t pos); Float_tTEveProjection::GetMaxTrackStep() const; const Char_t*TEveProjection::GetName() const; Float_tTEveProjection::GetPastFixRFac() const; Float_tTEveProjection::GetPastFixZFac() const; virtual Float_t*GetProjectedCenter(); virtual Float_tTEveProjection::GetScreenVal(Int_t ax, Float_t value); TEveProjection::EPType_eTEveProjection::GetType() const; Bool_tTEveProjection::GetUsePreScale() const; virtual Float_tTEveProjection::GetValForScreenPos(Int_t ax, Float_t value); virtual Bool_tHasSeveralSubSpaces() const; virtual Bool_tIs2D() const; virtual Bool_tIs3D() const; virtual TClass*IsA() const; virtual Bool_tIsOnSubSpaceBoundrary(const TEveVector& v) const; TEveRhoZProjection&operator=(const TEveRhoZProjection&); voidTEveProjection::PreScalePoint(Floa",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TEveRhoZProjection.html:646,toler,tolerance,646,root/html528/TEveRhoZProjection.html,https://root.cern,https://root.cern/root/html528/TEveRhoZProjection.html,1,['toler'],['tolerance']
Availability," TEveRhoZProjection(); TEveRhoZProjection(const TEveRhoZProjection&); virtual~TEveRhoZProjection(); virtual Bool_tAcceptSegment(TEveVector& v1, TEveVector& v2, Float_t tolerance) const; voidTEveProjection::AddPreScaleEntry(Int_t coord, Float_t max_val, Float_t scale); virtual voidTEveProjection::BisectBreakPoint(TEveVector& vL, TEveVector& vR, Float_t eps_sqr); virtual voidTEveProjection::BisectBreakPoint(TEveVector& vL, TEveVector& vR, Bool_t project_result = kFALSE, Float_t depth = 0); voidTEveProjection::ChangePreScaleEntry(Int_t coord, Int_t entry, Float_t new_scale); static TClass*Class(); voidTEveProjection::ClearPreScales(); Bool_tTEveProjection::GetDisplaceOrigin() const; Float_tTEveProjection::GetDistortion() const; Float_tTEveProjection::GetFixR() const; Float_tTEveProjection::GetFixZ() const; TEveProjection::EGeoMode_eTEveProjection::GetGeoMode() const; Float_tTEveProjection::GetLimit(Int_t i, Bool_t pos); Float_tTEveProjection::GetMaxTrackStep() const; const Char_t*TEveProjection::GetName() const; TEveVectorTEveProjection::GetOrthogonalCenter(int idx, TEveVector& out); Float_tTEveProjection::GetPastFixRFac() const; Float_tTEveProjection::GetPastFixZFac() const; virtual Float_t*GetProjectedCenter(); virtual Float_tTEveProjection::GetScreenVal(Int_t ax, Float_t value); Float_tTEveProjection::GetScreenVal(Int_t i, Float_t x, TEveVector& dirVec, TEveVector& oCenter); TEveProjection::EPType_eTEveProjection::GetType() const; Bool_tTEveProjection::GetUsePreScale() const; virtual Float_tTEvePro",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TEveRhoZProjection.html:646,toler,tolerance,646,root/html530/TEveRhoZProjection.html,https://root.cern,https://root.cern/root/html530/TEveRhoZProjection.html,5,['toler'],['tolerance']
Availability," TEventIterObj&); TEventIterObj(TDSet* dset, TSelector* sel, Long64_t first, Long64_t num); virtual~TEventIterObj(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static TEventIter*TEventIter::Create(TDSet* dset, TSelector* sel, Long64_t first, Long64_t num); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Long64_tGetCacheSize(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Int_tGetLearnEntries(); virtual const char*TObject::GetName() const; virtual Long64_tGetNextEvent(); virtual Int_tGetNextPacket(Long64_t& first, Long64_t& num, TEntryList** enl = 0, TEventList** evl = 0); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TEventIterObj.html:1488,Error,Error,1488,root/html534/TEventIterObj.html,https://root.cern,https://root.cern/root/html534/TEventIterObj.html,1,['Error'],['Error']
Availability," TEventIterObj&); TEventIterObj(TDSet* dset, TSelector* sel, Long64_t first, Long64_t num); virtual~TEventIterObj(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; static TEventIter*TEventIter::Create(TDSet* dset, TSelector* sel, Long64_t first, Long64_t num); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Long64_tGetCacheSize(); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual Int_tGetLearnEntries(); virtual const char*TObject::GetName() const; virtual Long64_tGetNextEvent(); virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*TObject::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TEventIterObj.html:1488,Error,Error,1488,root/html532/TEventIterObj.html,https://root.cern,https://root.cern/root/html532/TEventIterObj.html,1,['Error'],['Error']
Availability," TFFTComplex(); TFFTComplex(const TFFTComplex&); TFFTComplex(Int_t n, Bool_t inPlace); TFFTComplex(Int_t ndim, Int_t* n, Bool_t inPlace = kFALSE); virtual~TFFTComplex(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFFTComplex.html:2499,Error,Error,2499,root/html532/TFFTComplex.html,https://root.cern,https://root.cern/root/html532/TFFTComplex.html,2,['Error'],['Error']
Availability," TFFTComplexReal(); TFFTComplexReal(const TFFTComplexReal&); TFFTComplexReal(Int_t n, Bool_t inPlace); TFFTComplexReal(Int_t ndim, Int_t* n, Bool_t inPlace); virtual~TFFTComplexReal(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrow",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFFTComplexReal.html:2641,Error,Error,2641,root/html532/TFFTComplexReal.html,https://root.cern,https://root.cern/root/html532/TFFTComplexReal.html,2,['Error'],['Error']
Availability," TFFTRealComplex(); TFFTRealComplex(const TFFTRealComplex&); TFFTRealComplex(Int_t n, Bool_t inPlace); TFFTRealComplex(Int_t ndim, Int_t* n, Bool_t inPlace); virtual~TFFTRealComplex(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual co",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFFTRealComplex.html:2599,Error,Error,2599,root/html532/TFFTRealComplex.html,https://root.cern,https://root.cern/root/html532/TFFTRealComplex.html,2,['Error'],['Error']
Availability," TFPBlock(Long64_t*, Int_t*, Int_t); virtual~TFPBlock(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; char*GetBuffer() const; Long64_tGetCapacity() const; Long64_tGetDataSize() const; virtual Option_t*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFPBlock.html:1538,error,error,1538,root/html534/TFPBlock.html,https://root.cern,https://root.cern/root/html534/TFPBlock.html,3,"['Error', 'error']","['Error', 'error']"
Availability," TFPBlock(const TFPBlock&); TFPBlock(Long64_t*, Int_t*, Int_t); virtual~TFPBlock(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; char*GetBuffer() const; virtual Option_t*TObject::GetDrawOption() const; s",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFPBlock.html:1565,error,error,1565,root/html530/TFPBlock.html,https://root.cern,https://root.cern/root/html530/TFPBlock.html,4,"['Error', 'error']","['Error', 'error']"
Availability," TFTP::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 125 of file TFTP.h. ◆ IsOpen(). Bool_t TFTP::IsOpen ; (; ); const. inline . Definition at line 85 of file TFTP.h. ◆ ListDirectory(). Int_t TFTP::ListDirectory ; (; Option_t * ; cmd = """"); const. List remote directory. ; With cmd you specify the options and directory to be listed to ls. Returns 0 in case of success and -1 in case of failure. ; Definition at line 734 of file TFTP.cxx. ◆ ls(). void TFTP::ls ; (; Option_t * ; option = """"); const. inlineoverridevirtual . The ls function lists the contents of a class on stdout. ; Ls output is typically much less verbose then Dump(). ; Reimplemented from TObject.; Definition at line 116 of file TFTP.h. ◆ MakeDirectory(). Int_t TFTP::MakeDirectory ; (; const char * ; dir, . Bool_t ; print = kFALSE . ); const. Make a remote directory. ; Anonymous users may not create directories. Returns 0 in case of success and -1 in case of failure. ; Definition at line 667 of file TFTP.cxx. ◆ mkdir(). void TFTP::mkdir ; (; const char * ; dir); const. inline . Definition at line 114 of file TFTP.h. ◆ mv(). void TFTP::mv ; (; const char * ; file1, . const char * ; file2 . ); const. inline . Definition at line 118 of file TFTP.h. ◆ OpenDirectory(). Bool_t TFTP::OpenDirectory ; (; const char * ; dir, . Bool_t ; print = kFALSE . ). Open a directory via rootd. ; Returns kTRUE in case of success. Returns kFALSE in case of error. ; Definition at line 914 of file TFTP.cxx. ◆ operator=(). void TFTP::operator= ; (; const TFTP & ; ). privatedelete . ◆ Print(). void TFTP::Print ; (; Option_t * ; opt = """"); const. overridevirtual . Print some info about the FTP connection. ; Reimplemented from TObject.; Definition at line 157 of file TFTP.cxx. ◆ PrintDirectory(). Int_t TFTP::PrintDirectory ; (; ); const. Print path of remote working directory. ; Returns 0 in case of succes and -1 in cse of failure. ; Definition at ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFTP.html:20525,failure,failure,20525,doc/master/classTFTP.html,https://root.cern,https://root.cern/doc/master/classTFTP.html,1,['failure'],['failure']
Availability," TFastCgi(); TFastCgi(const TFastCgi&); virtual~TFastCgi(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual Bool_tCreate(const char* args); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFastCgi.html:2020,Error,Error,2020,root/html534/TFastCgi.html,https://root.cern,https://root.cern/root/html534/TFastCgi.html,1,['Error'],['Error']
Availability," TFile::GetBytesReadExtravirtual Long64_t GetBytesReadExtra() constDefinition TFile.h:242; TFile::GetCacheReadTFileCacheRead * GetCacheRead(const TObject *tree=nullptr) constReturn a pointer to the current read cache.Definition TFile.cxx:1262; TGaxisThe axis painter class.Definition TGaxis.h:24; TGaxis::SetTitleOffsetvoid SetTitleOffset(Float_t titleoffset=1)Definition TGaxis.h:128; TGaxis::SetTitlevirtual void SetTitle(const char *title="""")Change the title of the axis.Definition TGaxis.cxx:2942; TGaxis::SetLabelColorvoid SetLabelColor(Int_t labelcolor)Definition TGaxis.h:104; TGaxis::SetTitleColorvoid SetTitleColor(Int_t titlecolor)Definition TGaxis.h:131; TGaxis::Paintvoid Paint(Option_t *chopt="""") overrideDraw this axis with its current attributes.Definition TGaxis.cxx:986; TGaxis::SetLabelSizevoid SetLabelSize(Float_t labelsize)Definition TGaxis.h:107; TGaxis::SetNamevirtual void SetName(const char *name)Change the name of the axis.Definition TGaxis.cxx:2904; TGraphErrorsA TGraphErrors is a TGraph with error bars.Definition TGraphErrors.h:26; TGraphErrors::SetPointErrorvirtual void SetPointError(Double_t ex, Double_t ey)Set ex and ey values for point pointed by the mouse.Definition TGraphErrors.cxx:769; TGraphErrors::GetEYDouble_t * GetEY() const overrideDefinition TGraphErrors.h:70; TGraph::SetPointvirtual void SetPoint(Int_t i, Double_t x, Double_t y)Set x and y values for point number i.Definition TGraph.cxx:2342; TGraph::GetYDouble_t * GetY() constDefinition TGraph.h:140; TGraph::Paintvoid Paint(Option_t *chopt="""") overrideDraw this graph with its current attributes.Definition TGraph.cxx:1977; TGraph::GetNInt_t GetN() constDefinition TGraph.h:132; TGraph::GetXDouble_t * GetX() constDefinition TGraph.h:139; TGraph::SetNamevoid SetName(const char *name="""") overrideSet graph name.Definition TGraph.cxx:2381; TGraph::GetXaxisTAxis * GetXaxis() constGet x axis of the graph.Definition TGraph.cxx:1566; TGraph::GetYaxisTAxis * GetYaxis() constGet y axis of the graph.D",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TTreePerfStats_8cxx_source.html:33721,error,error,33721,doc/master/TTreePerfStats_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TTreePerfStats_8cxx_source.html,1,['error'],['error']
Availability," TFileCacheRead(); TFileCacheRead(TFile* file, Int_t buffersize); virtual~TFileCacheRead(); voidTObject::AbstractMethod(const char* method) const; virtual voidAddBranch(TBranch*, Bool_t = kFALSE); virtual voidAddBranch(const char*, Bool_t = kFALSE); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* err",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFileCacheRead.html:1869,Error,Error,1869,root/html532/TFileCacheRead.html,https://root.cern,https://root.cern/root/html532/TFileCacheRead.html,1,['Error'],['Error']
Availability," TFileCacheWrite(); TFileCacheWrite(TFile* file, Int_t buffersize); virtual~TFileCacheWrite(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::E",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFileCacheWrite.html:1754,Error,Error,1754,root/html532/TFileCacheWrite.html,https://root.cern,https://root.cern/root/html532/TFileCacheWrite.html,2,['Error'],['Error']
Availability," TFileHandler(int fd, int mask); virtual~TFileHandler(); voidTObject::AbstractMethod(const char* method) const; voidTSysEvtHandler::Activate(); virtual voidTSysEvtHandler::Activated()SIGNAL ; virtual voidAdd(); virtual voidTSysEvtHandler::Added()SIGNAL ; virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); virtual voidTObject::Copy(TObject& object) const; voidTSysEvtHandler::DeActivate(); virtual voidTSysEvtHandler::DeActivated()SIGNAL ; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual voidTQObject::Destroyed()SIGNAL ; Bool_tTQObject::Disconnect(const char* signal =",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFileHandler.html:430,mask,mask,430,root/html528/TFileHandler.html,https://root.cern,https://root.cern/root/html528/TFileHandler.html,6,['mask'],['mask']
Availability," TFileStager(const char* stager); TFileStager(const TFileStager&); virtual~TFileStager(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFileStager.html:1530,Error,Error,1530,root/html532/TFileStager.html,https://root.cern,https://root.cern/root/html532/TFileStager.html,2,['Error'],['Error']
Availability," TFitter(Int_t maxpar = 25); virtual~TFitter(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); virtual Double_tChisquare(Int_t npar, Double_t* params) const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidClear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual Int_tExecuteCommand(const char* command, Double_t* args, Int_t nargs); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFitChisquare(Int_t& npar, Double_t* gin, Double_t& f, Double_t* u, Int_t flag); virtual voidFitChisquareI(Int_t& npar, Double_t* gin, Double_t& f, Double_t* ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFitter.html:1215,Error,Error,1215,root/html532/TFitter.html,https://root.cern,https://root.cern/root/html532/TFitter.html,2,['Error'],['Error']
Availability," TFoamCell(); TFoamCell(Int_t); TFoamCell(TFoamCell&); virtual~TFoamCell(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); voidCalcVolume(); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidFill(Int_t, TFoamCell*, TFoamCell*, TFoamCell*); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGet",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFoamCell.html:1449,Error,Error,1449,root/html532/TFoamCell.html,https://root.cern,https://root.cern/root/html532/TFoamCell.html,2,['Error'],['Error']
Availability," TFoamMaxwt(); TFoamMaxwt(TFoamMaxwt& From); TFoamMaxwt(Double_t, Int_t); virtual~TFoamMaxwt(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidFill(Double_t); virtual TObject*TObject::FindObject(const char* name) const; virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFoamMaxwt.html:1546,Error,Error,1546,root/html532/TFoamMaxwt.html,https://root.cern,https://root.cern/root/html532/TFoamMaxwt.html,2,['Error'],['Error']
Availability," TFoamMaxwt::~TFoamMaxwt ; (; ). override . Destructor. ; Definition at line 60 of file TFoamMaxwt.cxx. Member Function Documentation. ◆ Class(). static TClass * TFoamMaxwt::Class ; (; ). static . ReturnsTClass describing this class . ◆ Class_Name(). static const char * TFoamMaxwt::Class_Name ; (; ). static . ReturnsName of this class . ◆ Class_Version(). static constexpr Version_t TFoamMaxwt::Class_Version ; (; ). inlinestaticconstexpr . ReturnsVersion of this class ; Definition at line 32 of file TFoamMaxwt.h. ◆ DeclFileName(). static const char * TFoamMaxwt::DeclFileName ; (; ). inlinestatic . ReturnsName of the file containing the class declaration ; Definition at line 32 of file TFoamMaxwt.h. ◆ Fill(). void TFoamMaxwt::Fill ; (; Double_t ; wt). Filling analyzed weight. ; Definition at line 93 of file TFoamMaxwt.cxx. ◆ GetMCeff(). void TFoamMaxwt::GetMCeff ; (; Double_t ; eps, . Double_t & ; MCeff, . Double_t & ; wtLim . ). Calculates Efficiency= aveWt/wtLim for a given tolerance level epsilon<<1 using information stored in two histograms. ; To be called at the end of the MC run. ; Definition at line 120 of file TFoamMaxwt.cxx. ◆ IsA(). TClass * TFoamMaxwt::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplemented from TObject.; Definition at line 32 of file TFoamMaxwt.h. ◆ Make(). void TFoamMaxwt::Make ; (; Double_t ; eps, . Double_t & ; MCeff . ). Calculates Efficiency= aveWt/wtLim for a given tolerance level epsilon<<1 To be called at the end of the MC run. ; Definition at line 104 of file TFoamMaxwt.cxx. ◆ operator=(). TFoamMaxwt & TFoamMaxwt::operator= ; (; const TFoamMaxwt & ; From). substitution = ; Definition at line 80 of file TFoamMaxwt.cxx. ◆ Reset(). void TFoamMaxwt::Reset ; (; ). Resetting weight analysis. ; Definition at line 70 of file TFoamMaxwt.cxx. ◆ Streamer(). void TFoamMaxwt::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TObject. ◆ StreamerN",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFoamMaxwt.html:12763,toler,tolerance,12763,doc/master/classTFoamMaxwt.html,https://root.cern,https://root.cern/doc/master/classTFoamMaxwt.html,1,['toler'],['tolerance']
Availability," TFoamVect(); TFoamVect(Int_t); TFoamVect(const TFoamVect&); virtual~TFoamVect(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetCoord(Int_t i) const; Int_tGetDim() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFoamVect.html:1446,error,error,1446,root/html528/TFoamVect.html,https://root.cern,https://root.cern/root/html528/TFoamVect.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TFormula expression; RooFracRemainder Utility function calculating remainder fraction, i.e. 1-sum_i(a_i); RooFunctor Export RooAbsReal as functor; RooFunctor1DBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctor1DPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionOneDim; RooFunctorBinding RooAbsReal binding to a ROOT::Math::IBaseFunctionMultiDim; RooFunctorPdfBinding RooAbsPdf binding to a ROOT::Math::IBaseFunctionMultiDim; RooGExpModel Gauss (x) Expontial resolution model; RooGamma Gaussian PDF; RooGaussKronrodIntegrator1D 1-dimensional Gauss-Kronrod numerical integration engine; RooGaussModel Gaussian Resolution Model; RooGaussian Gaussian PDF; RooGenContext Universal context for generating toy MC data from any p.d.f; RooGenFitStudy Generate-and-Fit study module; RooGenFunction Export RooAbsReal as functor; RooGenProdProj General form of projected integral of product of PDFs, utility class for RooProdPdf; RooGenericPdf Generic PDF defined by string expression and list of variables; RooGlobalFunc ; RooGrid Utility class for RooMCIntegrator holding a multi-dimensional grid; RooHashTable Hash table; RooHist 1-dimensional histogram with error bars; RooHistConstraint Your description goes here...; RooHistError Utility class for calculating histogram errors; RooHistFunc Histogram based function; RooHistPdf Histogram based PDF; RooImproperIntegrator1D 1-dimensional improper integration engine; RooInt Container class for Int_t; RooIntegralMorph Linear shape interpolation operator p.d.f; RooIntegrator1D 1-dimensional numerical integration engine; RooIntegrator2D 2-dimensional numerical integration engine; RooIntegratorBinding Function binding representing output of numeric integrator; RooInvTransform Function binding returning inverse of other function binding; RooJeffreysPrior Sum of RooAbsReal objects; RooKeysPdf One-dimensional non-parametric kernel estimation p.d.f.; RooLandau Landau Distribution PDF; RooLegendre Legendre polynomial; RooL",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/ClassIndex.html:34572,error,error,34572,root/html602/ClassIndex.html,https://root.cern,https://root.cern/root/html602/ClassIndex.html,4,['error'],['error']
Availability," TFractionFitter(); TFractionFitter default constructor. TFractionFitter(TH1* data, TObjArray* MCs, Option_t* option = """"); TFractionFitter constructor. Does a complete initialisation (including; consistency checks, default fit range as the whole histogram but without; under- and overflows, and declaration of the fit parameters). Note that; the histograms are not copied, only references are used.; Arguments:; data: histogram to be fitted; MCs: array of TH1* corresponding template distributions; Option: can be used to control the print level of the minimization algorithm; option = ""Q"" : quite - no message is printed; option = ""V"" : verbose - max print out; option = """" : default: print initial fraction values and result. ~TFractionFitter(); TFractionFitter default destructor. void SetData(TH1* data); Change the histogram to be fitted to. Notes:; - Parameter constraints and settings are retained from a possible previous fit.; - Modifying the dimension or number of bins results in an error (in this case; rather instantiate a new TFractionFitter object). void SetMC(Int_t parm, TH1* MC); Change the histogram for template number <parm>. Notes:; - Parameter constraints and settings are retained from a possible previous fit.; - Modifying the dimension or number of bins results in an error (in this case; rather instantiate a new TFractionFitter object). void SetWeight(Int_t parm, TH1* weight); Set bin by bin weights for template number <parm> (the parameter numbering; follows that of the input template vector).; Weights can be ""unset"" by passing a null pointer.; Consistency of the weights histogram with the data histogram is checked at; this point, and an error in case of problems. ROOT::Fit::Fitter* GetFitter() const; Give direct access to the underlying fitter class. This can be; used e.g. to modify parameter values or step sizes. void CheckParNo(Int_t parm) const; Function for internal use, checking parameter validity; An invalid parameter results in an error. void SetRang",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html602/TFractionFitter.html:14106,error,error,14106,root/html602/TFractionFitter.html,https://root.cern,https://root.cern/root/html602/TFractionFitter.html,4,['error'],['error']
Availability," TFractionFitter(); TFractionFitter default constructor. TFractionFitter(TH1* data, TObjArray* MCs, Option_t* option = """"); TFractionFitter constructor. Does a complete initialisation (including; consistency checks, default fit range as the whole histogram but without; under- and overflows, and declaration of the fit parameters). Note that; the histograms are not copied, only references are used.; Arguments:; data: histogram to be fitted; MCs: array of TH1* corresponding template distributions; Option: can be used to control the print level of the minimization algorithm; option = ""Q"" : quite - no message is printed; option = ""V"" : verbose - max print out; option = """" : default: print initial fraction values and result. ~TFractionFitter(); TFractionFitter default destructor. void SetData(TH1* data); Change the histogram to be fitted to. Notes:; - Parameter constraints and settings are retained from a possible previous fit.; - Modifying the dimension or number of bins results in an error (in this case; rather instantiate a new TFractionFitter object). void SetMC(Int_t parm, TH1* MC); Change the histogram for template number <parm>. Notes:; - Parameter constraints and settings are retained from a possible previous fit.; - Modifying the dimension or number of bins results in an error (in this case; rather instantiate a new TFractionFitter object). void SetWeight(Int_t parm, TH1* weight); Set bin by bin weights for template number <parm> (the parameter numbering; follows that of the input template vector).; Weights can be ""unset"" by passing a null pointer.; Consistency of the weights histogram with the data histogram is checked at; this point, and an error in case of problems. TVirtualFitter* GetFitter() const; Give direct access to the underlying minimisation class. This can be; used e.g. to modify parameter values or step sizes. void CheckParNo(Int_t parm) const; Function for internal use, checking parameter validity; An invalid parameter results in an error. void SetR",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TFractionFitter.html:13499,error,error,13499,root/html530/TFractionFitter.html,https://root.cern,https://root.cern/root/html530/TFractionFitter.html,5,['error'],['error']
Availability," TFree(); TFree(const TFree&); TFree(TList* lfree, Long64_t first, Long64_t last); virtual~TFree(); voidTObject::AbstractMethod(const char* method) const; TFree*AddFree(TList* lfree, Long64_t first, Long64_t last); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params,",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFree.html:1880,Error,Error,1880,root/html532/TFree.html,https://root.cern,https://root.cern/root/html532/TFree.html,2,['Error'],['Error']
Availability," TFumiliMinimizer(int dummy = 0); virtual~TFumiliMinimizer(); static TClass*Class(); virtual voidROOT::Math::Minimizer::Clear(); virtual boolROOT::Math::Minimizer::Contour(unsigned int ivar, unsigned int jvar, unsigned int& npoints, double* xi, double* xj); virtual doubleROOT::Math::Minimizer::Correlation(unsigned int i, unsigned int j) const; virtual doubleCovMatrix(unsigned int i, unsigned int j) const; virtual intCovMatrixStatus() const; virtual doubleEdm() const; doubleROOT::Math::Minimizer::ErrorDef() const; virtual const double*Errors() const; virtual boolROOT::Math::Minimizer::FixVariable(unsigned int ivar); virtual boolROOT::Math::Minimizer::GetCovMatrix(double* covMat) const; virtual boolROOT::Math::Minimizer::GetHessianMatrix(double* hMat) const; virtual boolROOT::Math::Minimizer::GetMinosError(unsigned int ivar, double& errLow, double& errUp, int option = 0); virtual boolROOT::Math::Minimizer::GetVariableSettings(unsigned int ivar, ROOT::Fit::ParameterSettings&) const; virtual doubleROOT::Math::Minimizer::GlobalCC(unsigned int ivar) const; virtual boolROOT::Math::Minimizer::Hesse(); virtual TClass*IsA() const; virtual boolROOT::Math::Minimizer::IsFixedVariable(unsigned int ivar) const; boolROOT::Math::Minimizer::IsValidError() const; unsigned intROOT::Math::Minimizer::MaxFunctionCalls",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFumiliMinimizer.html:1186,Error,ErrorDef,1186,root/html534/TFumiliMinimizer.html,https://root.cern,https://root.cern/root/html534/TFumiliMinimizer.html,2,['Error'],"['ErrorDef', 'Errors']"
Availability," TFumiliMinimizer(int dummy = 0); virtual~TFumiliMinimizer(); static TClass*Class(); virtual voidROOT::Math::Minimizer::Clear(); virtual boolROOT::Math::Minimizer::Contour(unsigned int, unsigned int, unsigned int&, double*, double*); virtual doubleROOT::Math::Minimizer::Correlation(unsigned int i, unsigned int j) const; virtual doubleCovMatrix(unsigned int i, unsigned int j) const; virtual intCovMatrixStatus() const; virtual doubleEdm() const; doubleROOT::Math::Minimizer::ErrorDef() const; virtual const double*Errors() const; virtual boolROOT::Math::Minimizer::GetCovMatrix(double*) const; virtual boolROOT::Math::Minimizer::GetHessianMatrix(double*) const; virtual boolROOT::Math::Minimizer::GetMinosError(unsigned int, double& errLow, double& errUp, int = 0); virtual doubleROOT::Math::Minimizer::GlobalCC(unsigned int) const; virtual boolROOT::Math::Minimizer::Hesse(); virtual TClass*IsA() const; boolROOT::Math::Minimizer::IsValidError() const; unsigned intROOT::Math::Minimizer::MaxFunctionCalls() const; unsigned intROOT::Math::Minimizer::MaxIterations() const; virtual const double*MinGradient() const; virtual boolMinimize(); virtual doubleMinValue() const; virtual unsigned intNCalls() const; virtual unsigned intNDim() const; virtual unsigned intNFree() const; virtual ROOT::Math::MinimizerOptionsRO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFumiliMinimizer.html:1162,Error,ErrorDef,1162,root/html532/TFumiliMinimizer.html,https://root.cern,https://root.cern/root/html532/TFumiliMinimizer.html,2,['Error'],"['ErrorDef', 'Errors']"
Availability," TFunction(MethodInfo_t* info = 0); TFunction(const TFunction& orig); virtual~TFunction(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static TDictionary*TDict",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFunction.html:1439,Error,Error,1439,root/html532/TFunction.html,https://root.cern,https://root.cern/root/html532/TFunction.html,1,['Error'],['Error']
Availability," TFunction(MethodInfo_t* info = 0); TFunction(const TFunction& orig); virtual~TFunction(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static TDictionary*TDictionary::GetDictionary(const char* name); static TDictionary*TDictionary::GetDictionary(const type_info& typeinfo); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*GetListOfMethodArgs(); virtual const char*GetMangledName() const; virtual const char*TNamed::GetName() const; Int_tGetNargs() const; Int_tGetNargsOpt() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TFunction.html:1568,error,error,1568,root/html532/TFunction.html,https://root.cern,https://root.cern/root/html532/TFunction.html,2,['error'],['error']
Availability," TFunction(MethodInfo_t* info = 0); TFunction(const TFunction& orig); virtual~TFunction(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TList*GetListOfMethodArgs(); virtual const char*GetMangledName() const; virtual const char*TNamed::GetName() const; Int_tGetNargs() const; Int_tGetNargsOpt() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtual const char*GetPrototype() const; const char*GetReturnTypeName() const; const char*GetSignature(); virtual const char*TNamed::GetTitle() con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TFunction.html:1568,error,error,1568,root/html528/TFunction.html,https://root.cern,https://root.cern/root/html528/TFunction.html,2,['error'],['error']
Availability," TFunction(MethodInfo_t* info = 0); TFunction(const TFunction& orig); virtual~TFunction(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidTDictionary::CreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TFunction.html:1478,Error,Error,1478,root/html534/TFunction.html,https://root.cern,https://root.cern/root/html534/TFunction.html,1,['Error'],['Error']
Availability," TGColumnLayout(const TGColumnLayout&); TGColumnLayout(TGCompositeFrame* main, Int_t s = 0); ~TGColumnLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGColumnLayout.html:2200,Error,Error,2200,root/html532/TGColumnLayout.html,https://root.cern,https://root.cern/root/html532/TGColumnLayout.html,2,['Error'],['Error']
Availability," TGDMLRefl(); TGDMLRefl(const TGDMLRefl&); TGDMLRefl(const char* name, const char* solid, TGeoMatrix* matrix); virtual~TGDMLRefl(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TGeoMatr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGDMLRefl.html:1367,Error,Error,1367,root/html534/TGDMLRefl.html,https://root.cern,https://root.cern/root/html534/TGDMLRefl.html,1,['Error'],['Error']
Availability," TGDMLRefl(); TGDMLRefl(const TGDMLRefl&); TGDMLRefl(const char* name, const char* solid, TGeoMatrix* matrix); virtual~TGDMLRefl(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; TGeoMatrix*GetMatrix(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGDMLRefl.html:1239,Error,Error,1239,root/html532/TGDMLRefl.html,https://root.cern,https://root.cern/root/html532/TGDMLRefl.html,1,['Error'],['Error']
Availability," TGDMLWrite(); TGDMLWrite(const TGDMLWrite&); virtual~TGDMLWrite(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGDMLWrite.html:1307,error,error,1307,root/html532/TGDMLWrite.html,https://root.cern,https://root.cern/root/html532/TGDMLWrite.html,3,"['Error', 'error']","['Error', 'error']"
Availability," TGDNDManager(TGFrame* toplevel, Atom_t* typelist); virtual~TGDNDManager(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); Bool_tDrag(Int_t x_root, Int_t y_root, Atom_t action, Time_t timestamp); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; Bool_tDrop(); virtual voidTObject::Dump() constMENU ; Bool_tEndDrag(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; static Atom_tGetDNDActionAsk(); static Atom_tGetDNDActionCopy(); static Atom_tGetDNDActionDescrip(); static Atom_tGetDNDActionLink(); static Atom_tGetDNDActionLis",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGDNDManager.html:1348,Error,Error,1348,root/html532/TGDNDManager.html,https://root.cern,https://root.cern/root/html532/TGDNDManager.html,2,['Error'],['Error']
Availability," TGDragWindow(const TGWindow* p, Pixmap_t pic, Pixmap_t mask, UInt_t options = kChildFrame, Pixel_t back = GetWhitePixel()); virtual~TGDragWindow(); voidTObject::AbstractMethod(const char* method) const; virtual voidTGFrame::Activate(Bool_t); voidTGFrame::AddInput(UInt_t emask); virtual voidTObject::AppendPad(Option_t* option = """"); static Bool_tTQObject::AreAllSignalsBlocked(); Bool_tTQObject::AreSignalsBlocked() const; static Bool_tTQObject::BlockAllSignals(Bool_t b); Bool_tTQObject::BlockSignals(Bool_t b); virtual voidTObject::Browse(TBrowser* b); virtual voidTGFrame::ChangeBackground(Pixel_t back); virtual voidTQObject::ChangedBy(const char* method)SIGNAL ; virtual voidTGFrame::ChangeOptions(UInt_t options); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; voidTQObject::CollectClassSignalLists(TList& list, TClass* cls); virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tTQObject::Connect(const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(TQObject* sender, const char* signal, const char* receiver_class, void* receiver, const char* slot); static Bool_tTQObject::Connect(const char* sender_class, const char* signal, const char* receiver_class, void* receiver, const char* slot); virtual voidTQObject::Connected(const char*); Bool_tTGFrame::Contains(Int_t x, Int_t y) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTGFrame::Delete(Option_t* = """"); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGDragWindow.html:459,mask,mask,459,root/html528/TGDragWindow.html,https://root.cern,https://root.cern/root/html528/TGDragWindow.html,6,['mask'],['mask']
Availability," TGFontPool(TGClient* client); virtual~TGFontPool(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; TGFont*FindFont(FontStruct_t font) const; TGFont*FindFontByHandle(FontH_t font) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGFontPool.html:1553,error,error,1553,root/html528/TGFontPool.html,https://root.cern,https://root.cern/root/html528/TGFontPool.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TGFrameElement(); TGFrameElement(TGFrame* f, TGLayoutHints* l); virtual~TGFrameElement(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGFrameElement.html:1303,Error,Error,1303,root/html532/TGFrameElement.html,https://root.cern,https://root.cern/root/html532/TGFrameElement.html,2,['Error'],['Error']
Availability," TGFrameElementPack(TGFrame* frame, TGLayoutHints* lh = 0, Float_t weight = 1); ~TGFrameElementPack(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Op",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGFrameElementPack.html:1218,Error,Error,1218,root/html532/TGFrameElementPack.html,https://root.cern,https://root.cern/root/html532/TGFrameElementPack.html,2,['Error'],['Error']
Availability," TGGC(GCValues_t* values = 0); TGGC(const TGGC& g); virtual~TGGC(); voidTObject::AbstractMethod(const char* method) const; voidTRefCnt::AddReference(); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetArcMode() const; const GCValues_t*GetAttributes() const; Pixel_tGetBackground() const; Int_tGetCapStyle() const; Pixmap_tGetClipMask() const; Int_tGetClipXOrigin() const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGGC.html:1333,Error,Error,1333,root/html532/TGGC.html,https://root.cern,https://root.cern/root/html532/TGGC.html,2,['Error'],['Error']
Availability," TGGCPool(TGClient* client); virtual~TGGCPool(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; TGGC*FindGC(const TGGC* gc); TGGC*FindGC(GContext_t gc); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidFreeGC(const TGGC* gc); voidFreeGC(GContext_t gc); TGClient*TGObject::GetClient() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtor",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGGCPool.html:1411,error,error,1411,root/html528/TGGCPool.html,https://root.cern,https://root.cern/root/html528/TGGCPool.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TGHorizontalLayout(TGCompositeFrame* main); TGHorizontalLayout(const TGHorizontalLayout&); ~TGHorizontalLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGHorizontalLayout.html:2220,Error,Error,2220,root/html532/TGHorizontalLayout.html,https://root.cern,https://root.cern/root/html532/TGHorizontalLayout.html,2,['Error'],['Error']
Availability," TGIdleHandler(TGWindow* w); TGIdleHandler(const TGIdleHandler&); virtual~TGIdleHandler(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObjec",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGIdleHandler.html:1311,Error,Error,1311,root/html532/TGIdleHandler.html,https://root.cern,https://root.cern/root/html532/TGIdleHandler.html,2,['Error'],['Error']
Availability," TGItemContext(); TGItemContext(const TGItemContext&); virtual~TGItemContext(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); voidAssociate(TTVLVEntry* item); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidDelete(Option_t*)MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """")MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; voidEditExpression()MENU ; voidEmpty()MENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGItemContext.html:1338,Error,Error,1338,root/html532/TGItemContext.html,https://root.cern,https://root.cern/root/html532/TGItemContext.html,2,['Error'],['Error']
Availability," TGL5DDataSet(TTree* inputData); ~TGL5DDataSet(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tDistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGL5DDataSet.html:1287,error,error,1287,root/html528/TGL5DDataSet.html,https://root.cern,https://root.cern/root/html528/TGL5DDataSet.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TGLAutoRotator(TGLViewer* v); virtual~TGLAutoRotator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetADolly() const; Double_tGetATheta() const; TGLCamera*GetCamera() const; Double_tGetDeltaPhi() const; virtual Option_t*TO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGLAutoRotator.html:1508,error,error,1508,root/html534/TGLAutoRotator.html,https://root.cern,https://root.cern/root/html534/TGLAutoRotator.html,3,"['Error', 'error']","['Error', 'error']"
Availability," TGLAutoRotator(TGLViewer* v); virtual~TGLAutoRotator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetADolly() const; Double_tGetATheta() const; TGLCamera*GetCamera() const; virtual Option_t*TObject::GetDrawOption() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGLAutoRotator.html:1508,error,error,1508,root/html530/TGLAutoRotator.html,https://root.cern,https://root.cern/root/html530/TGLAutoRotator.html,4,"['Error', 'error']","['Error', 'error']"
Availability," TGLAutoRotator(TGLViewer* v); virtual~TGLAutoRotator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetADolly() const; Double_tGetATheta() const; TGLCamera*GetCamera() const; virtual Option_t*TObject::GetDrawOption() const; Double_tGetDt() const; static Long_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLAutoRotator.html:1472,error,error,1472,root/html528/TGLAutoRotator.html,https://root.cern,https://root.cern/root/html528/TGLAutoRotator.html,1,['error'],['error']
Availability," TGLLightSet(); virtual~TGLLightSet(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); Float_tGetFrontPower() const; virtual const char*TObject::GetIconName() const; UInt_tGetLightState(); virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static B",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLLightSet.html:1335,error,error,1335,root/html528/TGLLightSet.html,https://root.cern,https://root.cern/root/html528/TGLLightSet.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TGLPShapeObj(); TGLPShapeObj(TGLPhysicalShape* sh, TGLViewer* v); virtual~TGLPShapeObj(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, In",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGLPShapeObj.html:1291,Error,Error,1291,root/html532/TGLPShapeObj.html,https://root.cern,https://root.cern/root/html532/TGLPShapeObj.html,2,['Error'],['Error']
Availability," TGLTH3Slice::ESliceAxis axis); ~TGLTH3Slice(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; voidDrawSlice(Double_t pos) const; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetOption() const; const TGLLevelPalette&GetPalette() const; virtual const char*TNamed::GetTitle() const; virtual UInt_tTObject::GetUniqueID() const; virtual Bool_tTObject::HandleTimer(TTimer* timer); virtual ULong_tTNamed::Hash() const; virtual voidTObject::Info(const char* method, con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGLTH3Slice.html:1613,error,error,1613,root/html528/TGLTH3Slice.html,https://root.cern,https://root.cern/root/html528/TGLTH3Slice.html,6,['error'],['error']
Availability," TGListDetailsLayout(TGCompositeFrame* main, Int_t sep = 0, UInt_t w = 0); ~TGListDetailsLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Dra",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGListDetailsLayout.html:2203,Error,Error,2203,root/html532/TGListDetailsLayout.html,https://root.cern,https://root.cern/root/html532/TGListDetailsLayout.html,2,['Error'],['Error']
Availability," TGListLayout(TGCompositeFrame* main, Int_t sep = 0); ~TGListLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::Dr",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGListLayout.html:2283,error,error,2283,root/html528/TGListLayout.html,https://root.cern,https://root.cern/root/html528/TGListLayout.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TGMatrixLayout(TGCompositeFrame* main, UInt_t r, UInt_t c, Int_t s = 0, Int_t h = 0); ~TGMatrixLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Opt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGMatrixLayout.html:2198,Error,Error,2198,root/html532/TGMatrixLayout.html,https://root.cern,https://root.cern/root/html532/TGMatrixLayout.html,2,['Error'],['Error']
Availability," TGMenuEntry(); virtual~TGMenuEntry(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); UInt_tGetEh() const; Int_tGetEntryId() const; UInt_tGetEw() const; Int_tGetEx() const; Int_tGetEy() const;",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html530/TGMenuEntry.html:1447,error,error,1447,root/html530/TGMenuEntry.html,https://root.cern,https://root.cern/root/html530/TGMenuEntry.html,7,"['Error', 'error']","['Error', 'error']"
Availability," TGMenuEntry(); virtual~TGMenuEntry(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); UInt_tGetEh() const; Int_tGetEntryId() const; UInt_tGetEw() const; Int_tGetEx() const; Int_tGetEy() const; v",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGMenuEntry.html:1445,error,error,1445,root/html528/TGMenuEntry.html,https://root.cern,https://root.cern/root/html528/TGMenuEntry.html,1,['error'],['error']
Availability," TGMimeTypes(TGClient* client, const char* file); virtual~TGMimeTypes(); voidTObject::AbstractMethod(const char* method) const; voidAddType(const char* type, const char* pat, const char* icon, const char* sicon, const char* action); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Bool_tGetAction(const char* filename, char* action); virtual O",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGMimeTypes.html:1448,Error,Error,1448,root/html532/TGMimeTypes.html,https://root.cern,https://root.cern/root/html532/TGMimeTypes.html,2,['Error'],['Error']
Availability," TGObject(); TGObject(const TGObject& tgo); virtual~TGObject(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TGClient*GetClient() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconNam",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGObject.html:1487,error,error,1487,root/html528/TGObject.html,https://root.cern,https://root.cern/root/html528/TGObject.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TGPicture(const TGPicture&); virtual~TGPicture(); voidTObject::AbstractMethod(const char* method) const; voidTRefCnt::AddReference(); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Handle_t id, GContext_t gc, Int_t x, Int_t y) const; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGPicture.html:1471,Error,Error,1471,root/html532/TGPicture.html,https://root.cern,https://root.cern/root/html532/TGPicture.html,2,['Error'],['Error']
Availability," TGPicturePool(const TGClient* client, const char* path); virtual~TGPicturePool(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidFreePicture(const TGPicture* pic); virtual Option_t*TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGPicturePool.html:1579,error,error,1579,root/html528/TGPicturePool.html,https://root.cern,https://root.cern/root/html528/TGPicturePool.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TGRectMap(Int_t rx, Int_t ry, UInt_t rw, UInt_t rh); virtual~TGRectMap(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tContains(Int_t px, Int_t py) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectStat(); virtual Option_t*TObject::GetO",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGRectMap.html:1198,Error,Error,1198,root/html532/TGRectMap.html,https://root.cern,https://root.cern/root/html532/TGRectMap.html,2,['Error'],['Error']
Availability," TGResourcePool(TGClient* client); TGResourcePool(const TGResourcePool&); virtual~TGResourcePool(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Pixel_tGetBlackColor() const; const TGGC*GetBlackGC() const; Pixmap_tGetCheckeredBitmap() const; Pixmap_tGetCheckeredPixmap() const; TGClient*TGObject::GetClient() const; Atom_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGResourcePool.html:1333,Error,Error,1333,root/html532/TGResourcePool.html,https://root.cern,https://root.cern/root/html532/TGResourcePool.html,2,['Error'],['Error']
Availability," TGRowLayout(const TGRowLayout&); TGRowLayout(TGCompositeFrame* main, Int_t s = 0); ~TGRowLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGRowLayout.html:2184,Error,Error,2184,root/html532/TGRowLayout.html,https://root.cern,https://root.cern/root/html532/TGRowLayout.html,2,['Error'],['Error']
Availability," TGSelectedPicture(const TGClient* client, const TGPicture* p); virtual~TGSelectedPicture(); voidTObject::AbstractMethod(const char* method) const; voidTRefCnt::AddReference(); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTGPicture::Draw(Handle_t id, GContext_t gc, Int_t x, Int_t y) const; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGSelectedPicture.html:1534,Error,Error,1534,root/html532/TGSelectedPicture.html,https://root.cern,https://root.cern/root/html532/TGSelectedPicture.html,2,['Error'],['Error']
Availability," TGTabLayout(TGTab* main); ~TGTabLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTabLayout.html:1686,error,error,1686,root/html528/TGTabLayout.html,https://root.cern,https://root.cern/root/html528/TGTabLayout.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TGTileLayout(TGCompositeFrame* main, Int_t sep = 0); ~TGTileLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGTileLayout.html:2286,error,error,2286,root/html528/TGTileLayout.html,https://root.cern,https://root.cern/root/html528/TGTileLayout.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TGVerticalLayout(TGCompositeFrame* main); ~TGVerticalLayout(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGVerticalLayout.html:2291,error,error,2291,root/html528/TGVerticalLayout.html,https://root.cern,https://root.cern/root/html528/TGVerticalLayout.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TGWin32VirtualXProxy.cxx:70; y1Option_t Option_t TPoint TPoint const char y1Definition TGWin32VirtualXProxy.cxx:70; gPad#define gPadDefinition TVirtualPad.h:308; yDouble_t y[n]Definition legend1.C:17; xDouble_t x[n]Definition legend1.C:17; c2return c2Definition legend2.C:14; I#define I(x, y, z); v2@ v2Definition rootcling_impl.cxx:3702; v@ vDefinition rootcling_impl.cxx:3699. Definition at line 75 of file TPoints3DABC.cxx. ◆ DistancetoPrimitive(). Int_t TPoints3DABC::DistancetoPrimitive ; (; Int_t ; px, . Int_t ; py . ). overridepure virtual . Computes distance from point (px,py) to the object. ; This member function must be implemented for each graphics primitive. This default function returns a big number (999999). ; Reimplemented from TObject. ◆ GetLastPosition(). virtual Int_t TPoints3DABC::GetLastPosition ; (; ); const. pure virtual . ◆ GetN(). Int_t TPoints3DABC::GetN ; (; ); const. virtual . GetN() returns the number of allocated cells if any. ; GetN() > 0 shows how many cells can be available via GetP() method. GetN() == 0 then GetP() must return 0 as well ; Definition at line 119 of file TPoints3DABC.cxx. ◆ GetOption(). Option_t * TPoints3DABC::GetOption ; (; ); const. overridepure virtual . Reimplemented from TObject. ◆ GetP(). Float_t * TPoints3DABC::GetP ; (; ); const. virtual . GetP() returns the pointer to the float point array of points if available The number of the available cells can be found via GetN() method. ; GetN() > 0 shows how many cells ; Definition at line 131 of file TPoints3DABC.cxx. ◆ GetX(). virtual Float_t TPoints3DABC::GetX ; (; Int_t ; idx); const. pure virtual . ◆ GetXYZ() [1/2]. Float_t * TPoints3DABC::GetXYZ ; (; Float_t * ; xyz, . Int_t ; idx, . Int_t ; num = 1 . ); const. virtual . GetXYZ(Float_t *xyz,Int_t idx,Int_t num=1) fills the buffer supplied by the calling code with the points information. ; Input parameters:. Float_t *xyz : an external user supplied floating point array.; Int_t num : the total number of the points to ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTPoints3DABC.html:15469,avail,available,15469,doc/master/classTPoints3DABC.html,https://root.cern,https://root.cern/doc/master/classTPoints3DABC.html,1,['avail'],['available']
Availability," TGenPhaseSpace(); TGenPhaseSpace(const TGenPhaseSpace& gen); virtual~TGenPhaseSpace(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEven",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGenPhaseSpace.html:1744,Error,Error,1744,root/html532/TGenPhaseSpace.html,https://root.cern,https://root.cern/root/html532/TGenPhaseSpace.html,2,['Error'],['Error']
Availability," TGeoBatemanSol(const TGeoBatemanSol& other); virtual~TGeoBatemanSol(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Double_tConcentration(Double_t time) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; Int_tTAttLine::DistancetoLine(Int_t px, Int_t py, Double_t xp1, Double_t yp1, Double_t xp2, Double_t yp2); virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidDraw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; voidFindSolution(const TObjArray* array); voidGetCoeff(Int_t i, Double_t& cn, Double_t& lambda) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); TGeoElementRN*GetElement() const; virtual Color_tTAttFill::GetFillColor() const; virtual Style_tTAttFill::GetFillStyle() const; virtual const char*TObject::GetIconName() const; virtual Color_tTAttLine::GetLineColor() const; virtual Style_tTAttLine::GetLineStyle() const; virtual Width_tTAttLine::GetLineWidth() const; virtu",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoBatemanSol.html:1720,Error,Error,1720,root/html532/TGeoBatemanSol.html,https://root.cern,https://root.cern/root/html532/TGeoBatemanSol.html,2,['Error'],['Error']
Availability," TGeoCacheState(); TGeoCacheState(Int_t capacity); virtual~TGeoCacheState(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObject::GetObjectSt",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoCacheState.html:1363,error,error,1363,root/html528/TGeoCacheState.html,https://root.cern,https://root.cern/root/html528/TGeoCacheState.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TGeoElemIter. class TGeoElemIter. TGeoElement - base class for chemical elements; TGeoElementRN - class representing a radionuclide; TGeoElemIter - iterator for decay branches; TGeoDecayChannel - a decay channel for a radionuclide; TGeoElementTable - table of elements. Function Members (Methods); public:. TGeoElemIter(const TGeoElemIter& iter); TGeoElemIter(TGeoElementRN* top, Double_t limit = 1.e-4); virtual~TGeoElemIter(); static TClass*Class(); TObjArray*GetBranch() const; const TGeoElementRN*GetElement() const; Int_tGetLevel() const; Double_tGetRatio() const; const TGeoElementRN*GetTop() const; virtual TClass*IsA() const; TGeoElementRN*Next(); TGeoElementRN*operator()(); TGeoElemIter&operator=(const TGeoElemIter& iter); virtual voidPrint(Option_t* option = """") const; voidSetLimitRatio(Double_t limit); virtual voidShowMembers(TMemberInspector&); virtual voidStreamer(TBuffer&); voidStreamerNVirtual(TBuffer& ClassDef_StreamerNVirtual_b). protected:. TGeoElemIter(); TGeoElementRN*Down(Int_t ibranch); TGeoElementRN*Up(). Data Members; private:. TObjArray*fBranchCurrent branch; const TGeoElementRN*fElemCurrent element; Int_tfLevelCurrent level; Double_tfLimitRatioMinimum cumulative branching ratio; Double_tfRatioCurrent ratio; const TGeoElementRN*fTopTop element of the iteration. Class Charts. Inheritance; Inherited Members; Includes; Libraries. Function documentation; TGeoElemIter(TGeoElementRN* top, Double_t limit = 1.e-4); Default constructor. TGeoElemIter(const TGeoElemIter& iter); Copy ctor. ~TGeoElemIter(); Destructor. TGeoElemIter & operator=(const TGeoElemIter& iter); Assignment. TGeoElementRN * operator()(); () operator. TGeoElementRN * Up(); Go upwards from the current location until the next branching, then down. TGeoElementRN * Down(Int_t ibranch); Go downwards from current level via ibranch as low in the tree as possible.; Return value flags if the operation was successful. TGeoElementRN * Next(); Return next element. void Print(Option_t* option = """") con",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoElemIter.html:1242,Down,Down,1242,root/html534/TGeoElemIter.html,https://root.cern,https://root.cern/root/html534/TGeoElemIter.html,1,['Down'],['Down']
Availability," TGeoGlobalMagField(); virtual~TGeoGlobalMagField(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoGlobalMagField.html:1903,error,error,1903,root/html528/TGeoGlobalMagField.html,https://root.cern,https://root.cern/root/html528/TGeoGlobalMagField.html,8,"['Error', 'error']","['Error', 'error']"
Availability," TGeoHelix(); TGeoHelix(Double_t curvature, Double_t step, Int_t charge = 1); virtual~TGeoHelix(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Double_tComputeSafeStep(Double_t epsil = 1E-6) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoHelix.html:2320,Error,Error,2320,root/html534/TGeoHelix.html,https://root.cern,https://root.cern/root/html534/TGeoHelix.html,1,['Error'],['Error']
Availability," TGeoHelix(); TGeoHelix(const TGeoHelix&); TGeoHelix(Double_t curvature, Double_t step, Int_t charge = 1); virtual~TGeoHelix(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Double_tComputeSafeStep(Double_t epsil = 1E-6) const; virtual voidTObject::Copy(TObject& object) const",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoHelix.html:2349,Error,Error,2349,root/html532/TGeoHelix.html,https://root.cern,https://root.cern/root/html532/TGeoHelix.html,1,['Error'],['Error']
Availability," TGeoIsotope(); TGeoIsotope(const TGeoIsotope&); TGeoIsotope(const char* name, Int_t z, Int_t n, Double_t a); virtual~TGeoIsotope(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); static TGeoIsotope*FindIsotope(const char* name); virtual TObject*TObject::FindObject(const char* name) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoIsotope.html:1483,Error,Error,1483,root/html532/TGeoIsotope.html,https://root.cern,https://root.cern/root/html532/TGeoIsotope.html,2,['Error'],['Error']
Availability," TGeoMCGeometry(); TGeoMCGeometry(const char* name, const char* title, Bool_t g3CompatibleVolumeNames = false); virtual~TGeoMCGeometry(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoMCGeometry.html:1358,Error,Error,1358,root/html532/TGeoMCGeometry.html,https://root.cern,https://root.cern/root/html532/TGeoMCGeometry.html,2,['Error'],['Error']
Availability," TGeoNavigator(); TGeoNavigator(TGeoManager* geom); virtual~TGeoNavigator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); voidBuildCache(Bool_t dummy = kFALSE, Bool_t nodeid = kFALSE); Bool_tcd(const char* path = """"); voidCdDown(Int_t index); voidCdDown(TGeoNode* node); voidCdNext(); voidCdNode(Int_t nodeid); voidCdTop(); voidCdUp(); Bool_tCheckPath(const char* path) const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; TGeoNode*CrossBoundaryAndLocate(Bool_t downwards, TGeoNode* skipnode); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); voidDoBackupState(); voidDoRestoreState(); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoNavigator.html:1609,down,downwards,1609,root/html534/TGeoNavigator.html,https://root.cern,https://root.cern/root/html534/TGeoNavigator.html,2,['down'],['downwards']
Availability," TGeoNavigator(); TGeoNavigator(TGeoManager* geom); virtual~TGeoNavigator(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); voidBuildCache(Bool_t dummy = kFALSE, Bool_t nodeid = kFALSE); Bool_tcd(const char* path = """"); voidCdDown(Int_t index); voidCdNext(); voidCdNode(Int_t nodeid); voidCdTop(); voidCdUp(); Bool_tCheckPath(const char* path) const; static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; TGeoNode*CrossBoundaryAndLocate(Bool_t downwards, TGeoNode* skipnode); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); voidDoBackupState(); voidDoRestoreState(); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTOb",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoNavigator.html:1586,down,downwards,1586,root/html528/TGeoNavigator.html,https://root.cern,https://root.cern/root/html528/TGeoNavigator.html,4,['down'],['downwards']
Availability," TGeoPNEntry(); TGeoPNEntry(const char* unique_name, const char* path); virtual~TGeoPNEntry(); voidTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPNEntry.html:2777,Error,Error,2777,root/html532/TGeoPNEntry.html,https://root.cern,https://root.cern/root/html532/TGeoPNEntry.html,2,['Error'],['Error']
Availability," TGeoPainter.cxx. ◆ SetRaytracing(). void TGeoPainter::SetRaytracing ; (; Bool_t ; flag = kTRUE). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 171 of file TGeoPainter.h. ◆ SetTopVisible(). void TGeoPainter::SetTopVisible ; (; Bool_t ; vis = kTRUE). overridevirtual . Set top geometry volume as visible. ; Implements TVirtualGeoPainter.; Definition at line 2050 of file TGeoPainter.cxx. ◆ SetTopVolume(). void TGeoPainter::SetTopVolume ; (; TGeoVolume * ; vol). inlineoverridevirtual . Implements TVirtualGeoPainter.; Definition at line 173 of file TGeoPainter.h. ◆ SetVisLevel(). void TGeoPainter::SetVisLevel ; (; Int_t ; level = 3). overridevirtual . Set default level down to which visualization is performed. ; Implements TVirtualGeoPainter.; Definition at line 2024 of file TGeoPainter.cxx. ◆ SetVisOption(). void TGeoPainter::SetVisOption ; (; Int_t ; option = 0). overridevirtual . Set drawing mode : . option=0 (default) all nodes drawn down to vislevel; option=1 leaves and nodes at vislevel drawn; option=2 path is drawn . Implements TVirtualGeoPainter.; Definition at line 2064 of file TGeoPainter.cxx. ◆ ShapeDistancetoPrimitive(). Int_t TGeoPainter::ShapeDistancetoPrimitive ; (; const TGeoShape * ; shape, . Int_t ; numpoints, . Int_t ; px, . Int_t ; py . ); const. overridevirtual . Returns distance between point px,py on the pad an a shape. ; Implements TVirtualGeoPainter.; Definition at line 2105 of file TGeoPainter.cxx. ◆ Test(). void TGeoPainter::Test ; (; Int_t ; npoints, . Option_t * ; option . ). overridevirtual . Check time of finding ""Where am I"" for n points. ; Implements TVirtualGeoPainter.; Definition at line 2170 of file TGeoPainter.cxx. ◆ TestOverlaps(). void TGeoPainter::TestOverlaps ; (; const char * ; path). overridevirtual . Geometry overlap checker based on sampling. ; Implements TVirtualGeoPainter.; Definition at line 2178 of file TGeoPainter.cxx. ◆ TestVoxels(). Bool_t TGeoPainter::TestVoxels ; (; TGeoVolume * ; vol). over",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGeoPainter.html:41426,down,down,41426,doc/master/classTGeoPainter.html,https://root.cern,https://root.cern/doc/master/classTGeoPainter.html,1,['down'],['down']
Availability," TGeoPolygon(); TGeoPolygon(Int_t nvert); TGeoPolygon(const TGeoPolygon&); virtual~TGeoPolygon(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Double_tArea() const; virtual voidTObject::Browse(",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoPolygon.html:2685,Error,Error,2685,root/html532/TGeoPolygon.html,https://root.cern,https://root.cern/root/html532/TGeoPolygon.html,1,['Error'],['Error']
Availability," TGeoPolygon(); TGeoPolygon(Int_t nvert); TGeoPolygon(const TGeoPolygon&); virtual~TGeoPolygon(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); Double_tArea() const; virtual voidTObject::Browse(TBrows",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoPolygon.html:2676,Error,Error,2676,root/html534/TGeoPolygon.html,https://root.cern,https://root.cern/root/html534/TGeoPolygon.html,1,['Error'],['Error']
Availability," TGeoRCExtension(); TGeoRCExtension(TObject* obj); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoRCExtension.html:1709,error,error,1709,root/html534/TGeoRCExtension.html,https://root.cern,https://root.cern/root/html534/TGeoRCExtension.html,3,"['Error', 'error']","['Error', 'error']"
Availability," TGeoShape::Big(), Double_t* safe = 0) const; static Double_tDistFromOutside(const Double_t* point, const Double_t* dir, Double_t dx, Double_t dy, Double_t dz, const Double_t* origin, Double_t stepmax = TGeoShape::Big()); static Double_tTGeoShape::DistToPhiMin(Double_t* point, Double_t* dir, Double_t s1, Double_t c1, Double_t s2, Double_t c2, Double_t sm, Double_t cm, Bool_t in = kTRUE); virtual TGeoVolume*Divide(TGeoVolume* voldiv, const char* divname, Int_t iaxis, Int_t ndiv, Double_t start, Double_t step); virtual voidTGeoShape::Draw(Option_t* option = """")MENU ; virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; static Double_tTGeoShape::EpsMch(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTGeoShape::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual const char*GetAxisName(Int_t iaxis) const; virtual Double_tGetAxisRange(Int_t iaxis, Double_t& xlo, Double_t& xhi) const; virtual voidGetBoundingCylinder(Double_t* param) const; virtual const TBuffer3D&GetBuffer3D(Int_t reqSections, Bool_t localFrame) const; virtual Int_tGetByteCount() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual Double_tGetDX() const; virtual Double_tGetDY() const; virtual Double_tGetDZ() const; virtual Double_tGetFacetArea(Int_t index = 0) const; virtual Int_tGetFittingBox(const TGeoBBox* parambox, TGeoMatrix* mat, Double_t& dx, Double_t& dy, Double_t& dz) const; virtual const char*TObj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGeoBBox.html:4789,error,error,4789,root/html528/TGeoBBox.html,https://root.cern,https://root.cern/root/html528/TGeoBBox.html,4,['error'],['error']
Availability," TGeoTabManager(TGedEditor* ged); virtual~TGeoTabManager(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; static voidCleanup(TGCompositeFrame* frame); virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoTabManager.html:1814,Error,Error,1814,root/html532/TGeoTabManager.html,https://root.cern,https://root.cern/root/html532/TGeoTabManager.html,2,['Error'],['Error']
Availability," TGeoUniformMagField(); TGeoUniformMagField(Double_t Bx, Double_t By, Double_t Bz); virtual~TGeoUniformMagField(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidField(const Double_t*, Double_t* B); virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGeoUniformMagField.html:1328,Error,Error,1328,root/html532/TGeoUniformMagField.html,https://root.cern,https://root.cern/root/html532/TGeoUniformMagField.html,2,['Error'],['Error']
Availability," TGeoVoxelFinder(); TGeoVoxelFinder(TGeoVolume* vol); virtual~TGeoVoxelFinder(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; voidDaughterToMother(Int_t id, const Double_t* local, Double_t* master) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual Double_tEfficiency(); virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual voidFindOverlaps(Int_t inode) const; Double_t*GetBoxes() const; Int_t*GetCheckList(Int_t& nelem, TGeoStateInfo& td) const; virtual Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGeoVoxelFinder.html:1368,Error,Error,1368,root/html534/TGeoVoxelFinder.html,https://root.cern,https://root.cern/root/html534/TGeoVoxelFinder.html,1,['Error'],['Error']
Availability," TGlobal(DataMemberInfo_t* info = 0); TGlobal(const TGlobal&); virtual~TGlobal(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; void*GetAddress() const; Int_",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TGlobal.html:1563,error,error,1563,root/html528/TGlobal.html,https://root.cern,https://root.cern/root/html528/TGlobal.html,5,"['Error', 'error']","['Error', 'error']"
Availability," TGlobal(DataMemberInfo_t* info = 0); TGlobal(const TGlobal&); virtual~TGlobal(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; voidTDictionary::CreateAttributeMap(); virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* ob",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGlobal.html:1473,Error,Error,1473,root/html534/TGlobal.html,https://root.cern,https://root.cern/root/html534/TGlobal.html,1,['Error'],['Error']
Availability, TGraph.; Definition at line 1577 of file TGraphMultiErrors.cxx. ◆ GetEYlow() [2/2]. Double_t * TGraphMultiErrors::GetEYlow ; (; Int_t ; e). virtual . Get all low errors e on y coordinates as an array. ; Definition at line 1599 of file TGraphMultiErrors.cxx. ◆ GetFillColor() [1/2]. virtual Color_t TAttFill::GetFillColor ; (; ); const. inlinevirtual . Return the fill area color. ; Reimplemented from TAttFill.; Definition at line 30 of file TAttFill.h. ◆ GetFillColor() [2/2]. Color_t TGraphMultiErrors::GetFillColor ; (; Int_t ; e); const. virtual . Get Fill Color for specified error e (-1 = Global and x errors). ; Definition at line 1643 of file TGraphMultiErrors.cxx. ◆ GetFillStyle() [1/2]. virtual Style_t TAttFill::GetFillStyle ; (; ); const. inlinevirtual . Return the fill area style. ; Reimplemented from TAttFill.; Definition at line 31 of file TAttFill.h. ◆ GetFillStyle() [2/2]. Style_t TGraphMultiErrors::GetFillStyle ; (; Int_t ; e); const. virtual . Get Fill Style for specified error e (-1 = Global and x errors). ; Definition at line 1656 of file TGraphMultiErrors.cxx. ◆ GetLineColor() [1/2]. virtual Color_t TAttLine::GetLineColor ; (; ); const. inlinevirtual . Return the line color. ; Reimplemented from TAttLine.; Definition at line 33 of file TAttLine.h. ◆ GetLineColor() [2/2]. Color_t TGraphMultiErrors::GetLineColor ; (; Int_t ; e); const. virtual . Get Line Color for specified error e (-1 = Global and x errors). ; Definition at line 1669 of file TGraphMultiErrors.cxx. ◆ GetLineStyle() [1/2]. virtual Style_t TAttLine::GetLineStyle ; (; ); const. inlinevirtual . Return the line style. ; Reimplemented from TAttLine.; Definition at line 34 of file TAttLine.h. ◆ GetLineStyle() [2/2]. Style_t TGraphMultiErrors::GetLineStyle ; (; Int_t ; e); const. virtual . Get Line Style for specified error e (-1 = Global and x errors). ; Definition at line 1682 of file TGraphMultiErrors.cxx. ◆ GetLineWidth() [1/2]. virtual Width_t TAttLine::GetLineWidth ; (; ); const. inlinevirt,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:66278,error,error,66278,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,2,['error'],"['error', 'errors']"
Availability," TGraph2DErrors default constructor. TGraph2DErrors(Int_t n); TGraph2DErrors normal constructor; the arrays are preset to zero. TGraph2DErrors(Int_t n, Double_t* x, Double_t* y, Double_t* z, Double_t* ex = 0, Double_t* ey = 0, Double_t* ez = 0, Option_t* option = """"); TGraph2DErrors constructor with doubles vectors as input. ~TGraph2DErrors(); TGraph2DErrors destructor. TGraph2DErrors(const TGraph2DErrors& ); Copy constructor.; Copy everything except list of functions. TGraph2DErrors & operator=(const TGraph2DErrors& ); Assignment operator; Copy everything except list of functions. Double_t GetErrorX(Int_t bin) const; This function is called by Graph2DFitChisquare.; It returns the error along X at point i. Double_t GetErrorY(Int_t bin) const; This function is called by Graph2DFitChisquare.; It returns the error along X at point i. Double_t GetErrorZ(Int_t bin) const; This function is called by Graph2DFitChisquare.; It returns the error along X at point i. Double_t GetXmaxE() const; Returns the X maximum with errors. Double_t GetXminE() const; Returns the X minimum with errors. Double_t GetYmaxE() const; Returns the Y maximum with errors. Double_t GetYminE() const; Returns the Y minimum with errors. Double_t GetZmaxE() const; Returns the Z maximum with errors. Double_t GetZminE() const; Returns the Z minimum with errors. void Set(Int_t n); Set number of points in the 2D graph.; Existing coordinates are preserved.; New coordinates above fNpoints are preset to 0. void SetPoint(Int_t i, Double_t x, Double_t y, Double_t z); Set x, y and z values for point number i. void SetPointError(Int_t i, Double_t ex, Double_t ey, Double_t ez); Set ex, ey and ez values for point number i. void Streamer(TBuffer& ); Stream an object of class TGraphErrors. Double_t * GetEX() const; {return fEX;}. Double_t * GetEY() const; {return fEY;}. Double_t * GetEZ() const; {return fEZ;}. » Author: Olivier Couet 26/11/2003 » Copyright (C) 1995-2000, Rene Brun and Fons Rademakers. *; » Last changed:",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TGraph2DErrors.html:13737,error,errors,13737,root/html534/TGraph2DErrors.html,https://root.cern,https://root.cern/root/html534/TGraph2DErrors.html,6,['error'],['errors']
Availability," TGraph2DPainter(); TGraph2DPainter(TGraphDelaunay* gd); TGraph2DPainter(const TGraph2DPainter&); virtual~TGraph2DPainter(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; TList*GetContourList(Double_t contour); virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName()",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraph2DPainter.html:1298,Error,Error,1298,root/html532/TGraph2DPainter.html,https://root.cern,https://root.cern/root/html532/TGraph2DPainter.html,2,['Error'],['Error']
Availability," TGraphDelaunay(); TGraphDelaunay(TGraph2D* g); virtual~TGraphDelaunay(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; Double_tComputeZ(Double_t x, Double_t y); virtual voidTNamed::Copy(TObject& named) const; virtua",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TGraphDelaunay.html:2341,Error,Error,2341,root/html532/TGraphDelaunay.html,https://root.cern,https://root.cern/root/html532/TGraphDelaunay.html,2,['Error'],['Error']
Availability," TGraphErrors::ApplyXvirtual void ApplyX(TF1 *f)Apply function to all the data points .Definition TGraphErrors.cxx:426; TGraphErrors::GetErrorXhighDouble_t GetErrorXhigh(Int_t bin) const overrideIt returns the error along X at point i.Definition TGraphErrors.cxx:635; TGraphErrors::GetErrorYlowDouble_t GetErrorYlow(Int_t bin) const overrideIt returns the error along Y at point i.Definition TGraphErrors.cxx:671; TGraphErrors::GetErrorYhighDouble_t GetErrorYhigh(Int_t bin) const overrideIt returns the error along Y at point i.Definition TGraphErrors.cxx:659; TGraphErrors::operator=TGraphErrors & operator=(const TGraphErrors &gr)TGraphErrors assignment operator.Definition TGraphErrors.cxx:184; TGraphErrors::CopyPointsBool_t CopyPoints(Double_t **arrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideCopy errors from fEX and fEY to arrays[0] and arrays[1] or to fEX and fEY if arrays == 0 and ibegin !...Definition TGraphErrors.cxx:532; TGraphErrors::MergeInt_t Merge(TCollection *list) overrideAdds all graphs with errors from the collection to this graph.Definition TGraphErrors.cxx:682; TGraphErrors::CopyAndReleasevoid CopyAndRelease(Double_t **newarrays, Int_t ibegin, Int_t iend, Int_t obegin) overrideCopy and release.Definition TGraphErrors.cxx:510; TGraphErrors::TGraphErrorsTGraphErrors()TGraphErrors default constructor.Definition TGraphErrors.cxx:69; TGraphErrors::GetErrorXlowDouble_t GetErrorXlow(Int_t bin) const overrideIt returns the error along X at point i.Definition TGraphErrors.cxx:647; TGraphErrors::SavePrimitivevoid SavePrimitive(std::ostream &out, Option_t *option="""") overrideSave primitive as a C++ statement(s) on output stream out.Definition TGraphErrors.cxx:722; TGraphErrors::Applyvoid Apply(TF1 *f) overrideApply function to all the data points .Definition TGraphErrors.cxx:396; TGraphErrors::CtorAllocateBool_t CtorAllocate()Constructor allocate.Definition TGraphErrors.cxx:557; TGraphA TGraph is an object made of two arrays X and Y with npoints each.Definit",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphErrors_8h_source.html:9867,error,errors,9867,doc/master/TGraphErrors_8h_source.html,https://root.cern,https://root.cern/doc/master/TGraphErrors_8h_source.html,1,['error'],['errors']
Availability," TGraphMultiErrors::GetAttFill ; (; Int_t ; e). virtual . Get AttFill pointer for specified error dimension. ; Definition at line 1621 of file TGraphMultiErrors.cxx. ◆ GetAttLine(). TAttLine * TGraphMultiErrors::GetAttLine ; (; Int_t ; e). virtual . Get AttLine pointer for specified error dimension. ; Definition at line 1632 of file TGraphMultiErrors.cxx. ◆ GetErrorX(). Double_t TGraphMultiErrors::GetErrorX ; (; Int_t ; i); const. overridevirtual . Get error on x coordinate for point i. ; In case of asymmetric errors the mean of the square sum is returned ; Reimplemented from TGraph.; Definition at line 1439 of file TGraphMultiErrors.cxx. ◆ GetErrorXhigh(). Double_t TGraphMultiErrors::GetErrorXhigh ; (; Int_t ; i); const. overridevirtual . Get high error on x coordinate for point i. ; Reimplemented from TGraph.; Definition at line 1492 of file TGraphMultiErrors.cxx. ◆ GetErrorXlow(). Double_t TGraphMultiErrors::GetErrorXlow ; (; Int_t ; i); const. overridevirtual . Get low error on x coordinate for point i. ; Reimplemented from TGraph.; Definition at line 1481 of file TGraphMultiErrors.cxx. ◆ GetErrorY() [1/2]. Double_t TGraphMultiErrors::GetErrorY ; (; Int_t ; i); const. overridevirtual . Get error on y coordinate for point i. ; The multiple errors of the dimensions are summed according to fSumErrorsMode. In case of asymmetric errors the mean of the square sum is returned ; Reimplemented from TGraph.; Definition at line 1454 of file TGraphMultiErrors.cxx. ◆ GetErrorY() [2/2]. Double_t TGraphMultiErrors::GetErrorY ; (; Int_t ; i, . Int_t ; e . ); const. virtual . Get error e on y coordinate for point i. ; In case of asymmetric errors the mean of the square sum is returned ; Definition at line 1468 of file TGraphMultiErrors.cxx. ◆ GetErrorYhigh() [1/2]. Double_t TGraphMultiErrors::GetErrorYhigh ; (; Int_t ; i); const. overridevirtual . Get high error on y coordinate for point i. ; The multiple errors of the dimensions are summed according to fSumErrorsMode. ; Reimplem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTGraphMultiErrors.html:62437,error,error,62437,doc/master/classTGraphMultiErrors.html,https://root.cern,https://root.cern/doc/master/classTGraphMultiErrors.html,1,['error'],['error']
Availability," TGraphMultiErrors::SavePrimitive(std::ostream &out, Option_t *option); 1730{; 1731 out << "" "" << std::endl;; 1732 static Int_t frameNumber = 5000;; 1733 frameNumber++;; 1734 ; 1735 if (gROOT->ClassSaved(TGraphMultiErrors::Class())); 1736 out << "" "";; 1737 else; 1738 out << "" TGraphMultiErrors* "";; 1739 ; 1740 out << ""tgme = new TGraphMultiErrors("" << fNpoints << "", "" << fNYErrors << "");"" << std::endl;; 1741 ; 1742 for (Int_t j = 0; j < fNYErrors; j++) {; 1743 fAttFill[j].SaveFillAttributes(out, TString::Format(""tgme->GetAttFill(%d)"", j).Data(), 0, 1001);; 1744 fAttLine[j].SaveLineAttributes(out, TString::Format(""tgme->GetAttLine(%d)"", j).Data(), 1, 1, 1);; 1745 }; 1746 ; 1747 for (Int_t i = 0; i < fNpoints; i++) {; 1748 out << "" tgme->SetPoint("" << i << "", "" << fX[i] << "", "" << fY[i] << "");"" << std::endl;; 1749 out << "" tgme->SetPointEX("" << i << "", "" << fExL[i] << "", "" << fExH[i] << "");"" << std::endl;; 1750 ; 1751 for (Int_t j = 0; j < fNYErrors; j++); 1752 out << "" tgme->SetPointEY("" << i << "", "" << j << "", "" << fEyL[j][i] << "", "" << fEyH[j][i] << "");""; 1753 << std::endl;; 1754 }; 1755 ; 1756 SaveHistogramAndFunctions(out, ""tgme"", frameNumber, option);; 1757}; 1758 ; 1759////////////////////////////////////////////////////////////////////////////////; 1760/// Multiply the values and errors of a TGraphMultiErrors by a constant c1.; 1761///; 1762/// If option contains ""x"" the x values and errors are scaled; 1763/// If option contains ""y"" the y values and (multiple) errors are scaled; 1764/// If option contains ""xy"" both x and y values and (multiple) errors are scaled; 1765 ; 1766void TGraphMultiErrors::Scale(Double_t c1, Option_t *option); 1767{; 1768 TGraph::Scale(c1, option);; 1769 TString opt = option; opt.ToLower();; 1770 if (opt.Contains(""x"") && GetEXlow()) {; 1771 for (Int_t i=0; i<GetN(); i++); 1772 GetEXlow()[i] *= c1;; 1773 }; 1774 if (opt.Contains(""x"") && GetEXhigh()) {; 1775 for (Int_t i=0; i<GetN(); i++); 1776 GetEXhigh()[i] *= c1;; 1777 }; 1778 if (opt.",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html:59972,error,errors,59972,doc/master/TGraphMultiErrors_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TGraphMultiErrors_8cxx_source.html,1,['error'],['errors']
Availability," TH1 &data2, double nominalBinWidth=0, double nSigma=1, RooAbsData::ErrorType=RooAbsData::Poisson, double xErrorFrac=1.0, bool efficiency=false, double scaleFactor=1.0);  Create a histogram from the asymmetry between the specified TH1 objects which may have fixed or variable bin widths, but which must both have the same binning. ;  ;  RooHist (double nominalBinWidth, double nSigma=1, double xErrorFrac=1.0, double scaleFactor=1.0);  Create an empty histogram that can be filled with the addBin() and addAsymmetryBin() methods. ;  ; void addAsymmetryBin (Axis_t binCenter, Int_t n1, Int_t n2, double binWidth=0, double xErrorFrac=1.0, double scaleFactor=1.0);  Add a bin to this histogram with the value (n1-n2)/(n1+n2) using an error bar calculated with Binomial statistics. ;  ; void addAsymmetryBinWithError (Axis_t binCenter, double n1, double n2, double en1, double en2, double binWidth=0, double xErrorFrac=1.0, double scaleFactor=1.0);  Add a bin to this histogram with the value (n1-n2)/(n1+n2) using an error bar calculated with Binomial statistics. ;  ; void addBin (Axis_t binCenter, double n, double binWidth=0, double xErrorFrac=1.0, double scaleFactor=1.0);  Add a bin to this histogram with the specified integer bin contents and using an error bar calculated with Poisson statistics. ;  ; void addBinWithError (Axis_t binCenter, double n, double elow, double ehigh, double binWidth=0, double xErrorFrac=1.0, bool correctForBinWidth=true, double scaleFactor=1.0);  Add a bin to this histogram with the specified bin contents and error. ;  ; void addBinWithXYError (Axis_t binCenter, double n, double exlow, double exhigh, double eylow, double eyhigh, double scaleFactor=1.0);  Add a bin to this histogram with the specified bin contents and error. ;  ; void addEfficiencyBin (Axis_t binCenter, Int_t n1, Int_t n2, double binWidth=0, double xErrorFrac=1.0, double scaleFactor=1.0);  Add a bin to this histogram with the value n1/(n1+n2) using an error bar calculated with Binomial stat",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classRooHist.html:2435,error,error,2435,doc/master/classRooHist.html,https://root.cern,https://root.cern/doc/master/classRooHist.html,1,['error'],['error']
Availability," TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """"); -*-*-*Replace contents of this histogram by the division of h1 by h2*-*-*. this = c1*h1/(c2*h2). if errors are defined (see TH1::Sumw2), errors are also recalculated; Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for this; if not already set.; The resulting errors are calculated assuming uncorrelated histograms.; However, if option =""B"" is specified, Binomial errors are computed.; In this case c1 and c2 do not make real sense and they are ignored. IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Divide. Please note also that in the binomial case errors are calculated using standard; binomial statistics, which means when b1 = b2, the error is zero.; If you prefer to have efficiency errors not going to zero when the efficiency is 1, you must; use the function TGraphAsymmErrors::BayesDivide, which will return an asymmetric and non-zero lower; error for the case b1=b2. The function return kFALSE if the divide operation failed. void Draw(Option_t* option = """"); Draw this histogram with options. Histograms are drawn via the THistPainter class. Each histogram has; a pointer to its own painter (to be usable in a multithreaded program).; The same histogram can be drawn with different options in different pads.; When an histogram drawn in a pad is deleted, the histogram is; automatically removed from the pad or pads where it was drawn.; If an histogram is drawn in a pad, then filled again, the new status; of the histogram will be automatically shown in the pad next time; the pad is updated. One does not need to redraw the histogram.; To draw the current version of an histogram in a pad, one can use; h->DrawCopy();; This makes a clone of the histogram. Once the clone is drawn, the original; histogram may be modified or deleted without affecting th",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/TH1.html:64315,error,errors,64315,root/html534/TH1.html,https://root.cern,https://root.cern/root/html534/TH1.html,4,['error'],"['error', 'errors']"
Availability," TH1* h2, Double_t c1 = 1, Double_t c2 = 1, Option_t* option = """"); -*-*-*Replace contents of this histogram by the division of h1 by h2*-*-*. this = c1*h1/(c2*h2). if errors are defined (see TH1::Sumw2), errors are also recalculated; Note that if h1 or h2 have Sumw2 set, Sumw2 is automatically called for this; if not already set.; The resulting errors are calculated assuming uncorrelated histograms.; However, if option =""B"" is specified, Binomial errors are computed.; In this case c1 and c2 do not make real sense and they are ignored. IMPORTANT NOTE: If you intend to use the errors of this histogram later; you should call Sumw2 before making this operation.; This is particularly important if you fit the histogram after TH1::Divide. Please note also that in the binomial case errors are calculated using standard; binomial statistics, which means when b1 = b2, the error is zero.; If you prefer to have efficiency errors not going to zero when the efficiency is 1, you must; use the function TGraphAsymmErrors::BayesDivide, which will return an asymmetric and non-zero lower; error for the case b1=b2. void Draw(Option_t* option = """"); -*-*-*-*-*-*-*-*-*Draw this histogram with options*-*-*-*-*-*-*-*-*-*-*-*. Histograms are drawn via the THistPainter class. Each histogram has; a pointer to its own painter (to be usable in a multithreaded program).; The same histogram can be drawn with different options in different pads.; When an histogram drawn in a pad is deleted, the histogram is; automatically removed from the pad or pads where it was drawn.; If an histogram is drawn in a pad, then filled again, the new status; of the histogram will be automatically shown in the pad next time; the pad is updated. One does not need to redraw the histogram.; To draw the current version of an histogram in a pad, one can use; h->DrawCopy();; This makes a clone of the histogram. Once the clone is drawn, the original; histogram may be modified or deleted without affecting the aspect of the; c",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/TH1.html:59285,error,errors,59285,root/html528/TH1.html,https://root.cern,https://root.cern/root/html528/TH1.html,8,['error'],"['error', 'errors']"
Availability," TH1::fNcellsInt_t fNcellsNumber of bins(1D), cells (2D) +U/Overflows.Definition TH1.h:89; TH1::Copyvoid Copy(TObject &hnew) const overrideCopy this histogram structure to newth1.Definition TH1.cxx:2671; TH1::fTsumwDouble_t fTsumwTotal Sum of weights.Definition TH1.h:96; TH1::fTsumw2Double_t fTsumw2Total Sum of squares of weights.Definition TH1.h:97; TH1::Classstatic TClass * Class(); TH1::DoIntegralvirtual Double_t DoIntegral(Int_t ix1, Int_t ix2, Int_t iy1, Int_t iy2, Int_t iz1, Int_t iz2, Double_t &err, Option_t *opt, Bool_t doerr=kFALSE) constInternal function compute integral and optionally the error between the limits specified by the bin n...Definition TH1.cxx:7977; TH1::fTsumwx2Double_t fTsumwx2Total Sum of weight*X*X.Definition TH1.h:99; TH1::GetStdDevvirtual Double_t GetStdDev(Int_t axis=1) constReturns the Standard Deviation (Sigma).Definition TH1.cxx:7607; TH1::GetNbinsYvirtual Int_t GetNbinsY() constDefinition TH1.h:298; TH1::GetBinErrorvirtual Double_t GetBinError(Int_t bin) constReturn value of error associated to bin number bin.Definition TH1.cxx:9063; TH1::GetMeanvirtual Double_t GetMean(Int_t axis=1) constFor axis = 1,2 or 3 returns the mean value of the histogram along X,Y or Z axis.Definition TH1.cxx:7535; TH1::GetDimensionvirtual Int_t GetDimension() constDefinition TH1.h:283; TH1::Streamervoid Streamer(TBuffer &) overrideStream a class object.Definition TH1.cxx:6933; TH1::kIsNotW@ kIsNotWHistogram is forced to be not weighted even when the histogram is filled with weighted.Definition TH1.h:172; TH1::CanExtendAllAxesvirtual Bool_t CanExtendAllAxes() constReturns true if all axes are extendable.Definition TH1.cxx:6636; TH1::Resetvirtual void Reset(Option_t *option="""")Reset this histogram: contents, errors, etc.Definition TH1.cxx:7103; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::GetNcellsvirtual Int_t GetNcells() constDefinition TH1.h:300; TH1::PutStatsvirtual void PutStats(Double_t *stats)Replace current statistics with the values in",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8cxx_source.html:173913,error,error,173913,doc/master/TH2_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH2_8cxx_source.html,1,['error'],['error']
Availability," TH1::fNcellsInt_t fNcellsNumber of bins(1D), cells (2D) +U/Overflows.Definition TH1.h:89; TH1::Copyvoid Copy(TObject &hnew) const overrideCopy this histogram structure to newth1.Definition TH1.cxx:2671; TH1::fTsumwDouble_t fTsumwTotal Sum of weights.Definition TH1.h:96; TH1::fTsumw2Double_t fTsumw2Total Sum of squares of weights.Definition TH1.h:97; TH1::Classstatic TClass * Class(); TH1::DoIntegralvirtual Double_t DoIntegral(Int_t ix1, Int_t ix2, Int_t iy1, Int_t iy2, Int_t iz1, Int_t iz2, Double_t &err, Option_t *opt, Bool_t doerr=kFALSE) constInternal function compute integral and optionally the error between the limits specified by the bin n...Definition TH1.cxx:7977; TH1::fTsumwx2Double_t fTsumwx2Total Sum of weight*X*X.Definition TH1.h:99; TH1::GetStdDevvirtual Double_t GetStdDev(Int_t axis=1) constReturns the Standard Deviation (Sigma).Definition TH1.cxx:7607; TH1::GetNbinsYvirtual Int_t GetNbinsY() constDefinition TH1.h:298; TH1::GetBinErrorvirtual Double_t GetBinError(Int_t bin) constReturn value of error associated to bin number bin.Definition TH1.cxx:9063; TH1::GetNbinsZvirtual Int_t GetNbinsZ() constDefinition TH1.h:299; TH1::GetDimensionvirtual Int_t GetDimension() constDefinition TH1.h:283; TH1::Streamervoid Streamer(TBuffer &) overrideStream a class object.Definition TH1.cxx:6933; TH1::kIsNotW@ kIsNotWHistogram is forced to be not weighted even when the histogram is filled with weighted.Definition TH1.h:172; TH1::CanExtendAllAxesvirtual Bool_t CanExtendAllAxes() constReturns true if all axes are extendable.Definition TH1.cxx:6636; TH1::Resetvirtual void Reset(Option_t *option="""")Reset this histogram: contents, errors, etc.Definition TH1.cxx:7103; TH1::GetXaxisTAxis * GetXaxis()Definition TH1.h:324; TH1::GetNcellsvirtual Int_t GetNcells() constDefinition TH1.h:300; TH1::PutStatsvirtual void PutStats(Double_t *stats)Replace current statistics with the values in array stats.Definition TH1.cxx:7884; TH1::GetPainterTVirtualHistPainter * GetPainter(Option_t",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH3_8cxx_source.html:193574,error,error,193574,doc/master/TH3_8cxx_source.html,https://root.cern,https://root.cern/doc/master/TH3_8cxx_source.html,1,['error'],['error']
Availability," TH1; TGraphErrors, AsymmErrors TGraphErrors, TH1; TH1 TGraphErrors, TH1; TGraph2D TGraph2DErrors, TH2; TGraph2DErrors TGraph2DErrors, TH2; TH2 TGraph2DErrors, TH2; TH3 TH3 . Reimplemented from TVirtualFitter.; Definition at line 229 of file TFitter.cxx. ◆ GetCovarianceMatrix(). Double_t * TFitter::GetCovarianceMatrix ; (; ); const. overridevirtual . return a pointer to the covariance matrix ; Implements TVirtualFitter.; Definition at line 379 of file TFitter.cxx. ◆ GetCovarianceMatrixElement(). Double_t TFitter::GetCovarianceMatrixElement ; (; Int_t ; i, . Int_t ; j . ); const. overridevirtual . return element i,j from the covariance matrix ; Implements TVirtualFitter.; Definition at line 391 of file TFitter.cxx. ◆ GetErrors(). Int_t TFitter::GetErrors ; (; Int_t ; ipar, . Double_t & ; eplus, . Double_t & ; eminus, . Double_t & ; eparab, . Double_t & ; globcc . ); const. overridevirtual . return current errors for a parameter ipar : parameter number eplus : upper error eminus : lower error eparab : parabolic error globcc : global correlation coefficient ; Implements TVirtualFitter.; Definition at line 410 of file TFitter.cxx. ◆ GetMinuit(). TMinuit * TFitter::GetMinuit ; (; ); const. inline . Definition at line 46 of file TFitter.h. ◆ GetNumberFreeParameters(). Int_t TFitter::GetNumberFreeParameters ; (; ); const. overridevirtual . return the number of free parameters ; Implements TVirtualFitter.; Definition at line 430 of file TFitter.cxx. ◆ GetNumberTotalParameters(). Int_t TFitter::GetNumberTotalParameters ; (; ); const. overridevirtual . return the total number of parameters (free + fixed) ; Implements TVirtualFitter.; Definition at line 422 of file TFitter.cxx. ◆ GetParameter() [1/2]. Double_t TFitter::GetParameter ; (; Int_t ; ipar); const. overridevirtual . return current value of parameter ipar ; Implements TVirtualFitter.; Definition at line 453 of file TFitter.cxx. ◆ GetParameter() [2/2]. Int_t TFitter::GetParameter ; (; Int_t ; ipar, . char * ; parname, .",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTFitter.html:23133,error,errors,23133,doc/master/classTFitter.html,https://root.cern,https://root.cern/doc/master/classTFitter.html,4,['error'],"['error', 'errors']"
Availability," TH1D* Projection(Int_t xDim, Option_t* option = """") const {; 148 return THnBase::Projection(xDim, option);; 149 }; 150 ; 151 /// Forwards to THnBase::Projection().; 152 /// Non-virtual, as a CINT-compatible replacement of a using declaration.; 153 TH2D* Projection(Int_t yDim, Int_t xDim,; 154 Option_t* option = """") const {; 155 return THnBase::Projection(yDim, xDim, option);; 156 }; 157 ; 158 /// Forwards to THnBase::Projection().; 159 /// Non-virtual, as a CINT-compatible replacement of a using declaration.; 160 TH3D* Projection(Int_t xDim, Int_t yDim, Int_t zDim,; 161 Option_t* option = """") const {; 162 return THnBase::Projection(xDim, yDim, zDim, option);; 163 }; 164 ; 165 THn* Projection(Int_t ndim, const Int_t* dim,; 166 Option_t* option = """") const {; 167 return (THn*) ProjectionND(ndim, dim, option);; 168 }; 169 ; 170 THn* Rebin(Int_t group) const {; 171 return (THn*) RebinBase(group);; 172 }; 173 THn* Rebin(const Int_t* group) const {; 174 return (THn*) RebinBase(group);; 175 }; 176 ; 177 void Reset(Option_t* option = """") override;; 178 ; 179protected:; 180 TNDArrayT<Double_t> fSumw2; // bin error, lazy allocation happens in TNDArrayT; 181 mutable std::vector<Int_t> fCoordBuf; //! Temporary buffer; 182 ; 183 ClassDefOverride(THn, 1); //Base class for multi-dimensional histogram; 184};; 185 ; 186 ; 187//______________________________________________________________________________; 188/** \class THnT; 189 Templated implementation of the abstract base THn.; 190 All functionality and the interfaces to be used are in THn!; 191 ; 192 THn does not know how to store any bin content itself. Instead, this; 193 is delegated to the derived, templated class: the template parameter decides; 194 what the format for the bin content is. The actual storage is delegated to; 195 TNDArrayT<T>.; 196 ; 197 Typedefs exist for template parameters with ROOT's generic types:; 198 ; 199 Templated name | Typedef | Bin content type; 200 -----------------|---------------|----------------",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/THn_8h_source.html:6238,error,error,6238,doc/master/THn_8h_source.html,https://root.cern,https://root.cern/doc/master/THn_8h_source.html,1,['error'],['error']
Availability," TH1S, TH1I, TH1L, TH1F, TH1D, TH1K, TH2C, TH2S, TH2I, TH2L, TH2F, TH2D, TH2Poly, TH3C, TH3S, TH3I, TH3L, TH3F, TH3D, TProfile, TProfile2D, and TProfile3D.; Definition at line 9439 of file TH1.cxx. ◆ SameLimitsAndNBins(). Bool_t TH1::SameLimitsAndNBins ; (; const TAxis & ; axis1, . const TAxis & ; axis2 . ). staticprotected . Same limits and bins. ; Definition at line 5898 of file TH1.cxx. ◆ SaveAs(). void TH1::SaveAs ; (; const char * ; filename = ""hist"", . Option_t * ; option = """" . ); const. overridevirtual . Save the histogram as .csv, .tsv or .txt. ; In case of any other extension, fall back to TObject::SaveAs, which saves as a .C macro (but with the file name extension specified by the user); The Under/Overflow bins are also exported (as first and last lines) The fist 2 columns are the lower and upper edges of the bins Column 3 contains the bin contents The last column contains the error in y. If errors are not present, the column is left empty; The result can be immediately imported into Excel, gnuplot, Python or whatever, without the needing to install pyroot, etc.; Parameters. filenamethe name of the file where to store the histogram ; optionsome tuning options. The file extension defines the delimiter used:; .csv : comma; .tsv : tab; .txt : space. If option = ""title"" a title line is generated. If the y-axis has a title, this title is displayed as column 3 name, otherwise, it shows ""BinContent"" ; Reimplemented from TObject.; Definition at line 7181 of file TH1.cxx. ◆ SavePrimitive(). void TH1::SavePrimitive ; (; std::ostream & ; out, . Option_t * ; option = """" . ). overridevirtual . Save primitive as a C++ statement(s) on output stream out. ; Reimplemented from TObject.; Reimplemented in TH1K, TH2Poly, TProfile, TProfile2D, and TProfile3D.; Definition at line 7237 of file TH1.cxx. ◆ SavePrimitiveHelp(). void TH1::SavePrimitiveHelp ; (; std::ostream & ; out, . const char * ; hname, . Option_t * ; option = """" . ). protectedvirtual . Helper function for the Sav",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:199568,error,errors,199568,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,1,['error'],['errors']
Availability," TH2 *ematrix, const Int_t *binMap, Bool_t clearEmat);  propagate an error matrix on the input vector to the unfolding result ;  ; TMatrixDSparse * GetSummedErrorMatrixXX (void);  determine total error matrix on the vector x ;  ; TMatrixDSparse * GetSummedErrorMatrixYY (void);  determine total error matrix on the vector Ax ;  ; virtual TMatrixDSparse * PrepareCorrEmat (const TMatrixDSparse *m1, const TMatrixDSparse *m2, const TMatrixDSparse *dsys);  propagate correlated systematic shift to an output vector ;  ; virtual void PrepareSysError (void);  Matrix calculations required to propagate systematic errors. ;  ; virtual TMatrixDSparse * PrepareUncorrEmat (const TMatrixDSparse *m1, const TMatrixDSparse *m2);  propagate uncorrelated systematic errors to a covariance matrix ;  ; void ScaleColumnsByVector (TMatrixDSparse *m, const TMatrixTBase< Double_t > *v) const;  scale columns of a matrix by the corresponding rows of a vector ;  ; void VectorMapToHist (TH1 *hist_delta, const TMatrixDSparse *delta, const Int_t *binMap);  map delta to hist_delta, possibly summing up bins ;  ;  Protected Member Functions inherited from TUnfold; void AddMSparse (TMatrixDSparse *dest, Double_t f, const TMatrixDSparse *src) const;  add a sparse matrix, scaled by a factor, to another scaled matrix ;  ; Bool_t AddRegularisationCondition (Int_t i0, Double_t f0, Int_t i1=-1, Double_t f1=0., Int_t i2=-1, Double_t f2=0.);  add a row of regularisation conditions to the matrix L ;  ; Bool_t AddRegularisationCondition (Int_t nEle, const Int_t *indices, const Double_t *rowData);  add a row of regularisation conditions to the matrix L ;  ; void ClearHistogram (TH1 *h, Double_t x=0.) const;  Initialize bin contents and bin errors for a given histogram. ;  ; TMatrixDSparse * CreateSparseMatrix (Int_t nrow, Int_t ncol, Int_t nele, Int_t *row, Int_t *col, Double_t *data) const;  create a sparse matrix, given the nonzero elements ;  ; virtual Double_t DoUnfold (void);  core unfolding algorithm ;  ; void ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTUnfoldDensity.html:32989,error,errors,32989,doc/master/classTUnfoldDensity.html,https://root.cern,https://root.cern/doc/master/classTUnfoldDensity.html,2,['error'],['errors']
Availability," TH2 *h = dynamic_cast<TH2 *>(select);; if(!h) return;; ; //erase old position and draw a line at current position; gVirtualX->DrawLine(pxmin, py, pxmax, py);; gPad->SetUniqueID(py);; ; Float_t upy = gPad->AbsPixeltoY(py);; Float_t y = gPad->PadtoY(upy);; ; //create or set the new canvas c2; auto padsav = gPad;; if(c2) delete c2->GetPrimitive(""Projection"");; else c2 = new TCanvas(""c2"",""Projection Canvas"",710,10,700,500);; c2->SetGrid();; c2->cd();; ; //draw slice corresponding to mouse position; Int_t biny = h->GetYaxis()->FindBin(y);; TH1D *hp = h->ProjectionX("""",biny,biny);; hp->SetName(""Projection"");; hp->SetTitle(TString::Format(""Projection of biny=%d"",biny));; hp->Fit(""gaus"",""ql"");; c2->Update();; ; padsav->cd();; }; h#define h(i)Definition RSha256.hxx:106; Int_tint Int_tDefinition RtypesCore.h:45; Float_tfloat Float_tDefinition RtypesCore.h:57; kTRUEconstexpr Bool_t kTRUEDefinition RtypesCore.h:93; Errorvoid Error(const char *location, const char *msgfmt,...)Use this function in case an error occurred.Definition TError.cxx:185; gROOT#define gROOTDefinition TROOT.h:406; gVirtualX#define gVirtualXDefinition TVirtualX.h:337; ROOT::Fit::FitResult::Updatebool Update(const std::shared_ptr< ROOT::Math::Minimizer > &min, const ROOT::Fit::FitConfig &fconfig, bool isValid, unsigned int ncalls=0)Update the fit result with a new minimization status To be run only if same fit is performed with sam...Definition FitResult.cxx:224; TCanvasThe Canvas class.Definition TCanvas.h:23; TH1D1-D histogram with a double per channel (see TH1 documentation)Definition TH1.h:670; TH1::SetTitlevoid SetTitle(const char *title) overrideChange/set the title.Definition TH1.cxx:6718; TH1::Fitvirtual TFitResultPtr Fit(const char *formula, Option_t *option="""", Option_t *goption="""", Double_t xmin=0, Double_t xmax=0)Fit histogram with function fname.Definition TH1.cxx:3898; TH1::SetNamevoid SetName(const char *name) overrideChange the name of this histogram.Definition TH1.cxx:8960; TH2Service class ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/exec2_8C.html:2794,error,error,2794,doc/master/exec2_8C.html,https://root.cern,https://root.cern/doc/master/exec2_8C.html,1,['error'],['error']
Availability," TH2 ;  ; Double_t Interpolate (Double_t x, Double_t y) const override;  Given a point P(x,y), Interpolate approximates the value via bilinear interpolation based on the four nearest bin centers see Wikipedia, Bilinear Interpolation Andy Mastbaum 10/8/2008 vaguely based on R.Raja 6-Sep-2008. ;  ; Double_t Interpolate (Double_t x, Double_t y, Double_t z) const override;  illegal for a TH2 ;  ; virtual Double_t Interpolate (Double_t, Double_t);  NOT IMPLEMENTED for TH2Poly. ;  ; TClass * IsA () const override;  ; Bool_t IsInsideBin (Int_t binnr, Double_t x, Double_t y);  Return ""true"" if the point (x,y) is inside the bin of binnr. ;  ; Long64_t Merge (TCollection *) override;  Merge TH2Polys Given the special nature of the TH2Poly, the merge is implemented in terms of subsequent TH2Poly::Add calls. ;  ; Bool_t Multiply (TF1 *, Double_t) override;  NOT IMPLEMENTED for TH2Poly. ;  ; TH2Poly & operator= (const TH2Poly &rhs);  Assignment operator. ;  ; void Reset (Option_t *option) override;  Reset this histogram: contents, errors, etc. ;  ; void SavePrimitive (std::ostream &out, Option_t *option="""") override;  Save primitive as a C++ statement(s) on output stream out. ;  ; void Scale (Double_t c1=1, Option_t *option="""") override;  Multiply this histogram by a constant c1. ;  ; void SetBinContent (Int_t bin, Double_t content) override;  Sets the contents of the input bin to the input content Negative values between -1 and -9 are for the overflows and the sea. ;  ; void SetBinContentChanged (Bool_t flag);  ; void SetBinError (Int_t bin, Double_t error) override;  Set the bin Error. ;  ; void SetFloat (Bool_t flag=true);  When set to kTRUE, allows the histogram to expand if a bin outside the limits is added. ;  ; void SetNewBinAdded (Bool_t flag);  ; void Streamer (TBuffer &) override;  Stream an object of class TH2. ;  ; void StreamerNVirtual (TBuffer &ClassDef_StreamerNVirtual_b);  ;  Public Member Functions inherited from TH2;  ~TH2 () override;  Destructor. ;  ; void Add",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH2Poly.html:11446,error,errors,11446,doc/master/classTH2Poly.html,https://root.cern,https://root.cern/doc/master/classTH2Poly.html,1,['error'],['errors']
Availability," TH2, and TH3.; Definition at line 7953 of file TH1.cxx. ◆ Integral() [2/2]. Double_t TH1::Integral ; (; Option_t * ; option = """"); const. virtual . Return integral of bin contents. ; Only bins in the bins range are considered.; By default the integral is computed as the sum of bin contents in the range. if option ""width"" is specified, the integral is the sum of the bin contents multiplied by the bin width in x. ; Reimplemented in TH2, TH3, TH2, TH2Poly, and TH3.; Definition at line 7941 of file TH1.cxx. ◆ IntegralAndError(). Double_t TH1::IntegralAndError ; (; Int_t ; binx1, . Int_t ; binx2, . Double_t & ; error, . Option_t * ; option = """" . ); const. virtual . Return integral of bin contents in range [binx1,binx2] and its error. ; By default the integral is computed as the sum of bin contents in the range. if option ""width"" is specified, the integral is the sum of the bin contents multiplied by the bin width in x. the error is computed using error propagation from the bin errors assuming that all the bins are uncorrelated ; Reimplemented in TH2, and TH3.; Definition at line 7968 of file TH1.cxx. ◆ Interpolate() [1/3]. Double_t TH1::Interpolate ; (; Double_t ; x); const. virtual . Given a point x, approximates the value via linear interpolation based on the two nearest bin centers. ; Andy Mastbaum 10/21/08 ; Reimplemented in TH2, TH2Poly, and TH3.; Definition at line 5115 of file TH1.cxx. ◆ Interpolate() [2/3]. Double_t TH1::Interpolate ; (; Double_t ; x, . Double_t ; y . ); const. virtual . 2d Interpolation. Not yet implemented. ; Reimplemented in TH2, TH2Poly, and TH3.; Definition at line 5145 of file TH1.cxx. ◆ Interpolate() [3/3]. Double_t TH1::Interpolate ; (; Double_t ; x, . Double_t ; y, . Double_t ; z . ); const. virtual . 3d Interpolation. Not yet implemented. ; Reimplemented in TH2, TH2Poly, and TH3.; Definition at line 5154 of file TH1.cxx. ◆ IsA(). TClass * TH1::IsA ; (; ); const. inlineoverridevirtual . ReturnsTClass describing current object ; Reimplem",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTH1.html:180927,error,error,180927,doc/master/classTH1.html,https://root.cern,https://root.cern/doc/master/classTH1.html,3,['error'],"['error', 'errors']"
Availability," TH2::DoFitSlicesvirtual void DoFitSlices(bool onX, TF1 *f1, Int_t firstbin, Int_t lastbin, Int_t cut, Option_t *option, TObjArray *arr)Definition TH2.cxx:814; TH2::QuantilesXTH1D * QuantilesX(Double_t prob=0.5, const char *name=""_qx"") constCompute the X distribution of quantiles in the other variable Y name is the name of the returned hist...Definition TH2.cxx:2505; TH2::SetShowProjectionYvirtual void SetShowProjectionY(Int_t nbins=1)When the mouse is moved in a pad containing a 2-d view of this histogram a second canvas shows the pr...Definition TH2.cxx:2650; TH2::SetBinContentvoid SetBinContent(Int_t binx, Int_t biny, Int_t, Double_t content) overrideDefinition TH2.h:125; TH2::FillRandomvoid FillRandom(const char *fname, Int_t ntimes=5000, TRandom *rng=nullptr) overrideFill histogram following distribution in function fname.Definition TH2.cxx:714; TH2::GetBinErrorUpvirtual Double_t GetBinErrorUp(Int_t binx, Int_t biny)Definition TH2.h:98; TH2::Resetvoid Reset(Option_t *option="""") overrideReset this histogram: contents, errors, etc.Definition TH2.cxx:2600; TH2::fScalefactorDouble_t fScalefactorScale factor.Definition TH2.h:33; TH2::DoProjectionvirtual TH1D * DoProjection(bool onX, const char *name, Int_t firstbin, Int_t lastbin, Option_t *option) constInternal (protected) method for performing projection on the X or Y axis called by ProjectionX or Pro...Definition TH2.cxx:2169; TH2::RebinXTH2 * RebinX(Int_t ngroup=2, const char *newname="""") overrideRebin only the X axis see Rebin2D.Definition TH2.cxx:1642; TH2::fTsumwy2Double_t fTsumwy2Total Sum of weight*Y*Y.Definition TH2.h:35; TH2::GetRandom2virtual void GetRandom2(Double_t &x, Double_t &y, TRandom *rng=nullptr)Return 2 random numbers along axis x and y distributed according to the cell-contents of this 2-D his...Definition TH2.cxx:1200; TH2::SetBinContentvoid SetBinContent(Int_t binx, Int_t biny, Double_t content) overrideDefinition TH2.h:124; TH2::GetCovariancevirtual Double_t GetCovariance(Int_t axis1=1, Int",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/TH2_8h_source.html:39684,error,errors,39684,doc/master/TH2_8h_source.html,https://root.cern,https://root.cern/doc/master/TH2_8h_source.html,1,['error'],['errors']
Availability," TH2PolyBin(); TH2PolyBin(const TH2PolyBin&); TH2PolyBin(TObject* poly, Int_t bin_number); virtual~TH2PolyBin(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); voidClearContent(); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidFill(Double_t w); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Double_tGetArea(); Int_tGetBinNumber() const; Bool_tGetChanged() const; Double_tGetContent() const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/TH2PolyBin.html:1263,Error,Error,1263,root/html532/TH2PolyBin.html,https://root.cern,https://root.cern/root/html532/TH2PolyBin.html,2,['Error'],['Error']
Availability, TH2PolyBin.; Definition at line 55 of file TProfile2Poly.h. ◆ Merge(). void TProfile2PolyBin::Merge ; (; const TProfile2PolyBin * ; toMerge). Merge. ; Definition at line 68 of file TProfile2Poly.cxx. ◆ SetErrorOption(). void TProfile2PolyBin::SetErrorOption ; (; EErrorType ; type). inlineprotected . Definition at line 53 of file TProfile2Poly.h. ◆ Streamer(). void TProfile2PolyBin::Streamer ; (; TBuffer & ; R__b). overridevirtual . Stream an object of class TObject. ; Reimplemented from TH2PolyBin. ◆ StreamerNVirtual(). void TProfile2PolyBin::StreamerNVirtual ; (; TBuffer & ; ClassDef_StreamerNVirtual_b). inline . Definition at line 55 of file TProfile2Poly.h. ◆ Update(). void TProfile2PolyBin::Update ; (; ). Update. ; Definition at line 79 of file TProfile2Poly.cxx. ◆ UpdateAverage(). void TProfile2PolyBin::UpdateAverage ; (; ). protected . Update average. ; Definition at line 89 of file TProfile2Poly.cxx. ◆ UpdateError(). void TProfile2PolyBin::UpdateError ; (; ). protected . Update error. ; Definition at line 97 of file TProfile2Poly.cxx. Friends And Related Symbol Documentation. ◆ TProfile2Poly. friend class TProfile2Poly. friend . Definition at line 21 of file TProfile2Poly.h. Member Data Documentation. ◆ fAverage. Double_t TProfile2PolyBin::fAverage. private . Definition at line 45 of file TProfile2Poly.h. ◆ fError. Double_t TProfile2PolyBin::fError. private . Definition at line 46 of file TProfile2Poly.h. ◆ fErrorMode. EErrorType TProfile2PolyBin::fErrorMode = kERRORMEAN. private . Definition at line 47 of file TProfile2Poly.h. ◆ fSumvw. Double_t TProfile2PolyBin::fSumvw. private . Definition at line 42 of file TProfile2Poly.h. ◆ fSumw. Double_t TProfile2PolyBin::fSumw. private . Definition at line 41 of file TProfile2Poly.h. ◆ fSumw2. Double_t TProfile2PolyBin::fSumw2. private . Definition at line 43 of file TProfile2Poly.h. ◆ fSumwv2. Double_t TProfile2PolyBin::fSumwv2. private . Definition at line 44 of file TProfile2Poly.h. Libraries for TProfile2PolyBin,MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/doc/master/classTProfile2PolyBin.html:16047,error,error,16047,doc/master/classTProfile2PolyBin.html,https://root.cern,https://root.cern/doc/master/classTProfile2PolyBin.html,1,['error'],['error']
Availability," THLimitsFinder(); THLimitsFinder(const THLimitsFinder&); virtual~THLimitsFinder(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual Int_tFindGoodLimits(TH1* h, Double_t xmin, Double_t xmax); virtual Int_tFindGoodLimits(TH1* h, Double_t xmin, Double_t xmax, Double_t ymin, Double_t ymax); virtual Int_tFindGoodLimits(TH1* h, ",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html528/THLimitsFinder.html:1563,error,error,1563,root/html528/THLimitsFinder.html,https://root.cern,https://root.cern/root/html528/THLimitsFinder.html,8,"['Error', 'error']","['Error', 'error']"
Availability," THaarMatrixT<double>(); THaarMatrixT<double>(const THaarMatrixT<double>&); THaarMatrixT<double>(Int_t n, Int_t no_cols = 0); virtual~THaarMatrixT<double>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THaarMatrixT_double_.html:1519,Error,Error,1519,root/html532/THaarMatrixT_double_.html,https://root.cern,https://root.cern/root/html532/THaarMatrixT_double_.html,2,['Error'],['Error']
Availability," THaarMatrixT<float>(); THaarMatrixT<float>(const THaarMatrixT<float>&); THaarMatrixT<float>(Int_t n, Int_t no_cols = 0); virtual~THaarMatrixT<float>(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; I",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THaarMatrixT_float_.html:1509,Error,Error,1509,root/html532/THaarMatrixT_float_.html,https://root.cern,https://root.cern/root/html532/THaarMatrixT_float_.html,2,['Error'],['Error']
Availability," THbookKey(); THbookKey(const THbookKey&); THbookKey(Int_t id, THbookFile* file); virtual~THbookKey(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidBrowse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTNamed::Clear(Option_t* option = """"); virtual TObject*TNamed::Clone(const char* newname = """") const; virtual Int_tTNamed::Compare(const TObject* obj) const; virtual voidTNamed::Copy(TObject& named) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual voidTNamed::FillBuffer(char*& buffer); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TNamed::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) const; static Bool_tTObje",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html532/THbookKey.html:1203,Error,Error,1203,root/html532/THbookKey.html,https://root.cern,https://root.cern/root/html532/THbookKey.html,2,['Error'],['Error']
Availability," THnIter(const THnIter&); THnIter(const THnBase* hist, Bool_t respectAxisRange = kFALSE); virtual~THnIter(); voidTObject::AbstractMethod(const char* method) const; virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; Int_tGetCoord(Int_t dim) const; virtual Option_t*TObject::GetDrawOption() const; static Long_tTObject::GetDtorOnly(); virtual const char*TObject::GetIconName() const; virtual const char*TObject::GetName() const; virtual char*TObject::GetObjectInfo(Int_t px, Int_t py) cons",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THnIter.html:1238,Error,Error,1238,root/html534/THnIter.html,https://root.cern,https://root.cern/root/html534/THnIter.html,1,['Error'],['Error']
Availability," THttpCallArg(); virtual~THttpCallArg(); voidTObject::AbstractMethod(const char* method) const; voidAddHeader(const char* name, const char* value); virtual voidTObject::AppendPad(Option_t* option = """"); virtual voidTObject::Browse(TBrowser* b); static TClass*Class(); virtual const char*TObject::ClassName() const; virtual voidTObject::Clear(Option_t* = """"); virtual TObject*TObject::Clone(const char* newname = """") const; virtual Int_tTObject::Compare(const TObject* obj) const; Bool_tCompressWithGzip(); virtual voidTObject::Copy(TObject& object) const; virtual voidTObject::Delete(Option_t* option = """")MENU ; virtual Int_tTObject::DistancetoPrimitive(Int_t px, Int_t py); virtual voidTObject::Draw(Option_t* option = """"); virtual voidTObject::DrawClass() constMENU ; virtual TObject*TObject::DrawClone(Option_t* option = """") constMENU ; virtual voidTObject::Dump() constMENU ; virtual voidTObject::Error(const char* method, const char* msgfmt) const; virtual voidTObject::Execute(const char* method, const char* params, Int_t* error = 0); virtual voidTObject::Execute(TMethod* method, TObjArray* params, Int_t* error = 0); virtual voidTObject::ExecuteEvent(Int_t event, Int_t px, Int_t py); virtual voidTObject::Fatal(const char* method, const char* msgfmt) const; voidFillHttpHeader(TString& buf, const char* header = 0); virtual TObject*TObject::FindObject(const char* name) const; virtual TObject*TObject::FindObject(const TObject* obj) const; const void*GetContent() const; Long_tGetContentLength() const; const char*GetContentType() const; vi",MatchSource.WIKI,root-project,root,v6-32-06,https://root.cern/root/html534/THttpCallArg.html:1352,Error,Error,1352,root/html534/THttpCallArg.html,https://root.cern,https://root.cern/root/html534/THttpCallArg.html,1,['Error'],['Error']
